// Generated by the protocol buffer compiler.  DO NOT EDIT!
// NO CHECKED-IN PROTOBUF GENCODE
// source: rpcservice.proto
// Protobuf C++ Version: 6.31.1

#ifndef rpcservice_2eproto_2epb_2eh
#define rpcservice_2eproto_2epb_2eh

#include <limits>
#include <string>
#include <type_traits>
#include <utility>

#include "google/protobuf/runtime_version.h"
#if PROTOBUF_VERSION != 6031001
#error "Protobuf C++ gencode is built with an incompatible version of"
#error "Protobuf C++ headers/runtime. See"
#error "https://protobuf.dev/support/cross-version-runtime-guarantee/#cpp"
#endif
#include "google/protobuf/io/coded_stream.h"
#include "google/protobuf/arena.h"
#include "google/protobuf/arenastring.h"
#include "google/protobuf/generated_message_tctable_decl.h"
#include "google/protobuf/generated_message_util.h"
#include "google/protobuf/metadata_lite.h"
#include "google/protobuf/generated_message_reflection.h"
#include "google/protobuf/message.h"
#include "google/protobuf/message_lite.h"
#include "google/protobuf/repeated_field.h"  // IWYU pragma: export
#include "google/protobuf/extension_set.h"  // IWYU pragma: export
#include "google/protobuf/service.h"
#include "google/protobuf/unknown_field_set.h"
#include "rpc.pb.h"
// @@protoc_insertion_point(includes)

// Must be included last.
#include "google/protobuf/port_def.inc"

#define PROTOBUF_INTERNAL_EXPORT_rpcservice_2eproto

namespace google {
namespace protobuf {
namespace internal {
template <typename T>
::absl::string_view GetAnyMessageName();
}  // namespace internal
}  // namespace protobuf
}  // namespace google

// Internal implementation detail -- do not use these members.
struct TableStruct_rpcservice_2eproto {
  static const ::uint32_t offsets[];
};
extern "C" {
extern const ::google::protobuf::internal::DescriptorTable descriptor_table_rpcservice_2eproto;
}  // extern "C"
namespace muduo {
namespace net {
class GetServiceRequest;
struct GetServiceRequestDefaultTypeInternal;
extern GetServiceRequestDefaultTypeInternal _GetServiceRequest_default_instance_;
extern const ::google::protobuf::internal::ClassDataFull GetServiceRequest_class_data_;
class GetServiceResponse;
struct GetServiceResponseDefaultTypeInternal;
extern GetServiceResponseDefaultTypeInternal _GetServiceResponse_default_instance_;
extern const ::google::protobuf::internal::ClassDataFull GetServiceResponse_class_data_;
class ListRpcRequest;
struct ListRpcRequestDefaultTypeInternal;
extern ListRpcRequestDefaultTypeInternal _ListRpcRequest_default_instance_;
extern const ::google::protobuf::internal::ClassDataFull ListRpcRequest_class_data_;
class ListRpcResponse;
struct ListRpcResponseDefaultTypeInternal;
extern ListRpcResponseDefaultTypeInternal _ListRpcResponse_default_instance_;
extern const ::google::protobuf::internal::ClassDataFull ListRpcResponse_class_data_;
}  // namespace net
}  // namespace muduo
namespace google {
namespace protobuf {
}  // namespace protobuf
}  // namespace google

namespace muduo {
namespace net {

// ===================================================================


// -------------------------------------------------------------------

class ListRpcResponse final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:muduo.net.ListRpcResponse) */ {
 public:
  inline ListRpcResponse() : ListRpcResponse(nullptr) {}
  ~ListRpcResponse() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(ListRpcResponse* PROTOBUF_NONNULL msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(ListRpcResponse));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR ListRpcResponse(::google::protobuf::internal::ConstantInitialized);

  inline ListRpcResponse(const ListRpcResponse& from) : ListRpcResponse(nullptr, from) {}
  inline ListRpcResponse(ListRpcResponse&& from) noexcept
      : ListRpcResponse(nullptr, ::std::move(from)) {}
  inline ListRpcResponse& operator=(const ListRpcResponse& from) {
    CopyFrom(from);
    return *this;
  }
  inline ListRpcResponse& operator=(ListRpcResponse&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* PROTOBUF_NONNULL mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* PROTOBUF_NONNULL descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* PROTOBUF_NONNULL GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* PROTOBUF_NONNULL GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const ListRpcResponse& default_instance() {
    return *reinterpret_cast<const ListRpcResponse*>(
        &_ListRpcResponse_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 1;
  friend void swap(ListRpcResponse& a, ListRpcResponse& b) { a.Swap(&b); }
  inline void Swap(ListRpcResponse* PROTOBUF_NONNULL other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(ListRpcResponse* PROTOBUF_NONNULL other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  ListRpcResponse* PROTOBUF_NONNULL New(::google::protobuf::Arena* PROTOBUF_NULLABLE arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<ListRpcResponse>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const ListRpcResponse& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const ListRpcResponse& from) { ListRpcResponse::MergeImpl(*this, from); }

  private:
  static void MergeImpl(::google::protobuf::MessageLite& to_msg,
                        const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* PROTOBUF_NONNULL _InternalSerialize(
      const ::google::protobuf::MessageLite& msg, ::uint8_t* PROTOBUF_NONNULL target,
      ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* PROTOBUF_NONNULL _InternalSerialize(
      ::uint8_t* PROTOBUF_NONNULL target,
      ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* PROTOBUF_NONNULL _InternalSerialize(
      ::uint8_t* PROTOBUF_NONNULL target,
      ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(ListRpcResponse* PROTOBUF_NONNULL other);
 private:
  template <typename T>
  friend ::absl::string_view(::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "muduo.net.ListRpcResponse"; }

 protected:
  explicit ListRpcResponse(::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  ListRpcResponse(::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const ListRpcResponse& from);
  ListRpcResponse(
      ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, ListRpcResponse&& from) noexcept
      : ListRpcResponse(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* PROTOBUF_NONNULL GetClassData() const PROTOBUF_FINAL;
  static void* PROTOBUF_NONNULL PlacementNew_(
      const void* PROTOBUF_NONNULL, void* PROTOBUF_NONNULL mem,
      ::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  static constexpr auto InternalNewImpl_();

 public:
  static constexpr auto InternalGenerateClassData_();

  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kServiceNameFieldNumber = 2,
    kMethodNameFieldNumber = 3,
    kErrorFieldNumber = 1,
  };
  // repeated string service_name = 2;
  int service_name_size() const;
  private:
  int _internal_service_name_size() const;

  public:
  void clear_service_name() ;
  const ::std::string& service_name(int index) const;
  ::std::string* PROTOBUF_NONNULL mutable_service_name(int index);
  template <typename Arg_ = const ::std::string&, typename... Args_>
  void set_service_name(int index, Arg_&& value, Args_... args);
  ::std::string* PROTOBUF_NONNULL add_service_name();
  template <typename Arg_ = const ::std::string&, typename... Args_>
  void add_service_name(Arg_&& value, Args_... args);
  const ::google::protobuf::RepeatedPtrField<::std::string>& service_name() const;
  ::google::protobuf::RepeatedPtrField<::std::string>* PROTOBUF_NONNULL mutable_service_name();

  private:
  const ::google::protobuf::RepeatedPtrField<::std::string>& _internal_service_name() const;
  ::google::protobuf::RepeatedPtrField<::std::string>* PROTOBUF_NONNULL _internal_mutable_service_name();

  public:
  // repeated string method_name = 3;
  int method_name_size() const;
  private:
  int _internal_method_name_size() const;

  public:
  void clear_method_name() ;
  const ::std::string& method_name(int index) const;
  ::std::string* PROTOBUF_NONNULL mutable_method_name(int index);
  template <typename Arg_ = const ::std::string&, typename... Args_>
  void set_method_name(int index, Arg_&& value, Args_... args);
  ::std::string* PROTOBUF_NONNULL add_method_name();
  template <typename Arg_ = const ::std::string&, typename... Args_>
  void add_method_name(Arg_&& value, Args_... args);
  const ::google::protobuf::RepeatedPtrField<::std::string>& method_name() const;
  ::google::protobuf::RepeatedPtrField<::std::string>* PROTOBUF_NONNULL mutable_method_name();

  private:
  const ::google::protobuf::RepeatedPtrField<::std::string>& _internal_method_name() const;
  ::google::protobuf::RepeatedPtrField<::std::string>* PROTOBUF_NONNULL _internal_mutable_method_name();

  public:
  // .muduo.net.ErrorCode error = 1;
  void clear_error() ;
  ::muduo::net::ErrorCode error() const;
  void set_error(::muduo::net::ErrorCode value);

  private:
  ::muduo::net::ErrorCode _internal_error() const;
  void _internal_set_error(::muduo::net::ErrorCode value);

  public:
  // @@protoc_insertion_point(class_scope:muduo.net.ListRpcResponse)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<2, 3,
                                   0, 57,
                                   2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(
        ::google::protobuf::internal::InternalVisibility visibility,
        ::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
    inline explicit Impl_(
        ::google::protobuf::internal::InternalVisibility visibility,
        ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const Impl_& from,
        const ListRpcResponse& from_msg);
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    ::google::protobuf::RepeatedPtrField<::std::string> service_name_;
    ::google::protobuf::RepeatedPtrField<::std::string> method_name_;
    int error_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_rpcservice_2eproto;
};

extern const ::google::protobuf::internal::ClassDataFull ListRpcResponse_class_data_;
// -------------------------------------------------------------------

class ListRpcRequest final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:muduo.net.ListRpcRequest) */ {
 public:
  inline ListRpcRequest() : ListRpcRequest(nullptr) {}
  ~ListRpcRequest() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(ListRpcRequest* PROTOBUF_NONNULL msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(ListRpcRequest));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR ListRpcRequest(::google::protobuf::internal::ConstantInitialized);

  inline ListRpcRequest(const ListRpcRequest& from) : ListRpcRequest(nullptr, from) {}
  inline ListRpcRequest(ListRpcRequest&& from) noexcept
      : ListRpcRequest(nullptr, ::std::move(from)) {}
  inline ListRpcRequest& operator=(const ListRpcRequest& from) {
    CopyFrom(from);
    return *this;
  }
  inline ListRpcRequest& operator=(ListRpcRequest&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* PROTOBUF_NONNULL mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* PROTOBUF_NONNULL descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* PROTOBUF_NONNULL GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* PROTOBUF_NONNULL GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const ListRpcRequest& default_instance() {
    return *reinterpret_cast<const ListRpcRequest*>(
        &_ListRpcRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 0;
  friend void swap(ListRpcRequest& a, ListRpcRequest& b) { a.Swap(&b); }
  inline void Swap(ListRpcRequest* PROTOBUF_NONNULL other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(ListRpcRequest* PROTOBUF_NONNULL other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  ListRpcRequest* PROTOBUF_NONNULL New(::google::protobuf::Arena* PROTOBUF_NULLABLE arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<ListRpcRequest>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const ListRpcRequest& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const ListRpcRequest& from) { ListRpcRequest::MergeImpl(*this, from); }

  private:
  static void MergeImpl(::google::protobuf::MessageLite& to_msg,
                        const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* PROTOBUF_NONNULL _InternalSerialize(
      const ::google::protobuf::MessageLite& msg, ::uint8_t* PROTOBUF_NONNULL target,
      ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* PROTOBUF_NONNULL _InternalSerialize(
      ::uint8_t* PROTOBUF_NONNULL target,
      ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* PROTOBUF_NONNULL _InternalSerialize(
      ::uint8_t* PROTOBUF_NONNULL target,
      ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(ListRpcRequest* PROTOBUF_NONNULL other);
 private:
  template <typename T>
  friend ::absl::string_view(::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "muduo.net.ListRpcRequest"; }

 protected:
  explicit ListRpcRequest(::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  ListRpcRequest(::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const ListRpcRequest& from);
  ListRpcRequest(
      ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, ListRpcRequest&& from) noexcept
      : ListRpcRequest(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* PROTOBUF_NONNULL GetClassData() const PROTOBUF_FINAL;
  static void* PROTOBUF_NONNULL PlacementNew_(
      const void* PROTOBUF_NONNULL, void* PROTOBUF_NONNULL mem,
      ::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  static constexpr auto InternalNewImpl_();

 public:
  static constexpr auto InternalGenerateClassData_();

  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kServiceNameFieldNumber = 1,
    kListMethodFieldNumber = 2,
  };
  // optional string service_name = 1;
  bool has_service_name() const;
  void clear_service_name() ;
  const ::std::string& service_name() const;
  template <typename Arg_ = const ::std::string&, typename... Args_>
  void set_service_name(Arg_&& arg, Args_... args);
  ::std::string* PROTOBUF_NONNULL mutable_service_name();
  [[nodiscard]] ::std::string* PROTOBUF_NULLABLE release_service_name();
  void set_allocated_service_name(::std::string* PROTOBUF_NULLABLE value);

  private:
  const ::std::string& _internal_service_name() const;
  PROTOBUF_ALWAYS_INLINE void _internal_set_service_name(const ::std::string& value);
  ::std::string* PROTOBUF_NONNULL _internal_mutable_service_name();

  public:
  // optional bool list_method = 2;
  bool has_list_method() const;
  void clear_list_method() ;
  bool list_method() const;
  void set_list_method(bool value);

  private:
  bool _internal_list_method() const;
  void _internal_set_list_method(bool value);

  public:
  // @@protoc_insertion_point(class_scope:muduo.net.ListRpcRequest)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<1, 2,
                                   0, 45,
                                   2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(
        ::google::protobuf::internal::InternalVisibility visibility,
        ::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
    inline explicit Impl_(
        ::google::protobuf::internal::InternalVisibility visibility,
        ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const Impl_& from,
        const ListRpcRequest& from_msg);
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    ::google::protobuf::internal::ArenaStringPtr service_name_;
    bool list_method_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_rpcservice_2eproto;
};

extern const ::google::protobuf::internal::ClassDataFull ListRpcRequest_class_data_;
// -------------------------------------------------------------------

class GetServiceResponse final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:muduo.net.GetServiceResponse) */ {
 public:
  inline GetServiceResponse() : GetServiceResponse(nullptr) {}
  ~GetServiceResponse() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(GetServiceResponse* PROTOBUF_NONNULL msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(GetServiceResponse));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR GetServiceResponse(::google::protobuf::internal::ConstantInitialized);

  inline GetServiceResponse(const GetServiceResponse& from) : GetServiceResponse(nullptr, from) {}
  inline GetServiceResponse(GetServiceResponse&& from) noexcept
      : GetServiceResponse(nullptr, ::std::move(from)) {}
  inline GetServiceResponse& operator=(const GetServiceResponse& from) {
    CopyFrom(from);
    return *this;
  }
  inline GetServiceResponse& operator=(GetServiceResponse&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* PROTOBUF_NONNULL mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* PROTOBUF_NONNULL descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* PROTOBUF_NONNULL GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* PROTOBUF_NONNULL GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const GetServiceResponse& default_instance() {
    return *reinterpret_cast<const GetServiceResponse*>(
        &_GetServiceResponse_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 3;
  friend void swap(GetServiceResponse& a, GetServiceResponse& b) { a.Swap(&b); }
  inline void Swap(GetServiceResponse* PROTOBUF_NONNULL other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(GetServiceResponse* PROTOBUF_NONNULL other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  GetServiceResponse* PROTOBUF_NONNULL New(::google::protobuf::Arena* PROTOBUF_NULLABLE arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<GetServiceResponse>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const GetServiceResponse& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const GetServiceResponse& from) { GetServiceResponse::MergeImpl(*this, from); }

  private:
  static void MergeImpl(::google::protobuf::MessageLite& to_msg,
                        const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* PROTOBUF_NONNULL _InternalSerialize(
      const ::google::protobuf::MessageLite& msg, ::uint8_t* PROTOBUF_NONNULL target,
      ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* PROTOBUF_NONNULL _InternalSerialize(
      ::uint8_t* PROTOBUF_NONNULL target,
      ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* PROTOBUF_NONNULL _InternalSerialize(
      ::uint8_t* PROTOBUF_NONNULL target,
      ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(GetServiceResponse* PROTOBUF_NONNULL other);
 private:
  template <typename T>
  friend ::absl::string_view(::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "muduo.net.GetServiceResponse"; }

 protected:
  explicit GetServiceResponse(::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  GetServiceResponse(::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const GetServiceResponse& from);
  GetServiceResponse(
      ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, GetServiceResponse&& from) noexcept
      : GetServiceResponse(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* PROTOBUF_NONNULL GetClassData() const PROTOBUF_FINAL;
  static void* PROTOBUF_NONNULL PlacementNew_(
      const void* PROTOBUF_NONNULL, void* PROTOBUF_NONNULL mem,
      ::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  static constexpr auto InternalNewImpl_();

 public:
  static constexpr auto InternalGenerateClassData_();

  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kProtoFileFieldNumber = 2,
    kProtoFileNameFieldNumber = 3,
    kErrorFieldNumber = 1,
  };
  // string proto_file = 2;
  void clear_proto_file() ;
  const ::std::string& proto_file() const;
  template <typename Arg_ = const ::std::string&, typename... Args_>
  void set_proto_file(Arg_&& arg, Args_... args);
  ::std::string* PROTOBUF_NONNULL mutable_proto_file();
  [[nodiscard]] ::std::string* PROTOBUF_NULLABLE release_proto_file();
  void set_allocated_proto_file(::std::string* PROTOBUF_NULLABLE value);

  private:
  const ::std::string& _internal_proto_file() const;
  PROTOBUF_ALWAYS_INLINE void _internal_set_proto_file(const ::std::string& value);
  ::std::string* PROTOBUF_NONNULL _internal_mutable_proto_file();

  public:
  // string proto_file_name = 3;
  void clear_proto_file_name() ;
  const ::std::string& proto_file_name() const;
  template <typename Arg_ = const ::std::string&, typename... Args_>
  void set_proto_file_name(Arg_&& arg, Args_... args);
  ::std::string* PROTOBUF_NONNULL mutable_proto_file_name();
  [[nodiscard]] ::std::string* PROTOBUF_NULLABLE release_proto_file_name();
  void set_allocated_proto_file_name(::std::string* PROTOBUF_NULLABLE value);

  private:
  const ::std::string& _internal_proto_file_name() const;
  PROTOBUF_ALWAYS_INLINE void _internal_set_proto_file_name(const ::std::string& value);
  ::std::string* PROTOBUF_NONNULL _internal_mutable_proto_file_name();

  public:
  // .muduo.net.ErrorCode error = 1;
  void clear_error() ;
  ::muduo::net::ErrorCode error() const;
  void set_error(::muduo::net::ErrorCode value);

  private:
  ::muduo::net::ErrorCode _internal_error() const;
  void _internal_set_error(::muduo::net::ErrorCode value);

  public:
  // @@protoc_insertion_point(class_scope:muduo.net.GetServiceResponse)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<2, 3,
                                   0, 62,
                                   2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(
        ::google::protobuf::internal::InternalVisibility visibility,
        ::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
    inline explicit Impl_(
        ::google::protobuf::internal::InternalVisibility visibility,
        ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const Impl_& from,
        const GetServiceResponse& from_msg);
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    ::google::protobuf::internal::ArenaStringPtr proto_file_;
    ::google::protobuf::internal::ArenaStringPtr proto_file_name_;
    int error_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_rpcservice_2eproto;
};

extern const ::google::protobuf::internal::ClassDataFull GetServiceResponse_class_data_;
// -------------------------------------------------------------------

class GetServiceRequest final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:muduo.net.GetServiceRequest) */ {
 public:
  inline GetServiceRequest() : GetServiceRequest(nullptr) {}
  ~GetServiceRequest() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(GetServiceRequest* PROTOBUF_NONNULL msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(GetServiceRequest));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR GetServiceRequest(::google::protobuf::internal::ConstantInitialized);

  inline GetServiceRequest(const GetServiceRequest& from) : GetServiceRequest(nullptr, from) {}
  inline GetServiceRequest(GetServiceRequest&& from) noexcept
      : GetServiceRequest(nullptr, ::std::move(from)) {}
  inline GetServiceRequest& operator=(const GetServiceRequest& from) {
    CopyFrom(from);
    return *this;
  }
  inline GetServiceRequest& operator=(GetServiceRequest&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* PROTOBUF_NONNULL mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* PROTOBUF_NONNULL descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* PROTOBUF_NONNULL GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* PROTOBUF_NONNULL GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const GetServiceRequest& default_instance() {
    return *reinterpret_cast<const GetServiceRequest*>(
        &_GetServiceRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 2;
  friend void swap(GetServiceRequest& a, GetServiceRequest& b) { a.Swap(&b); }
  inline void Swap(GetServiceRequest* PROTOBUF_NONNULL other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(GetServiceRequest* PROTOBUF_NONNULL other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  GetServiceRequest* PROTOBUF_NONNULL New(::google::protobuf::Arena* PROTOBUF_NULLABLE arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<GetServiceRequest>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const GetServiceRequest& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const GetServiceRequest& from) { GetServiceRequest::MergeImpl(*this, from); }

  private:
  static void MergeImpl(::google::protobuf::MessageLite& to_msg,
                        const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* PROTOBUF_NONNULL _InternalSerialize(
      const ::google::protobuf::MessageLite& msg, ::uint8_t* PROTOBUF_NONNULL target,
      ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* PROTOBUF_NONNULL _InternalSerialize(
      ::uint8_t* PROTOBUF_NONNULL target,
      ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* PROTOBUF_NONNULL _InternalSerialize(
      ::uint8_t* PROTOBUF_NONNULL target,
      ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(GetServiceRequest* PROTOBUF_NONNULL other);
 private:
  template <typename T>
  friend ::absl::string_view(::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "muduo.net.GetServiceRequest"; }

 protected:
  explicit GetServiceRequest(::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  GetServiceRequest(::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const GetServiceRequest& from);
  GetServiceRequest(
      ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, GetServiceRequest&& from) noexcept
      : GetServiceRequest(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* PROTOBUF_NONNULL GetClassData() const PROTOBUF_FINAL;
  static void* PROTOBUF_NONNULL PlacementNew_(
      const void* PROTOBUF_NONNULL, void* PROTOBUF_NONNULL mem,
      ::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  static constexpr auto InternalNewImpl_();

 public:
  static constexpr auto InternalGenerateClassData_();

  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kServiceNameFieldNumber = 1,
  };
  // string service_name = 1;
  void clear_service_name() ;
  const ::std::string& service_name() const;
  template <typename Arg_ = const ::std::string&, typename... Args_>
  void set_service_name(Arg_&& arg, Args_... args);
  ::std::string* PROTOBUF_NONNULL mutable_service_name();
  [[nodiscard]] ::std::string* PROTOBUF_NULLABLE release_service_name();
  void set_allocated_service_name(::std::string* PROTOBUF_NULLABLE value);

  private:
  const ::std::string& _internal_service_name() const;
  PROTOBUF_ALWAYS_INLINE void _internal_set_service_name(const ::std::string& value);
  ::std::string* PROTOBUF_NONNULL _internal_mutable_service_name();

  public:
  // @@protoc_insertion_point(class_scope:muduo.net.GetServiceRequest)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<0, 1,
                                   0, 48,
                                   2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(
        ::google::protobuf::internal::InternalVisibility visibility,
        ::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
    inline explicit Impl_(
        ::google::protobuf::internal::InternalVisibility visibility,
        ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const Impl_& from,
        const GetServiceRequest& from_msg);
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    ::google::protobuf::internal::ArenaStringPtr service_name_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_rpcservice_2eproto;
};

extern const ::google::protobuf::internal::ClassDataFull GetServiceRequest_class_data_;

// ===================================================================


// -------------------------------------------------------------------

class RpcService_Stub;
class RpcService : public ::google::protobuf::Service {
 protected:
  RpcService() = default;

 public:
  using Stub = RpcService_Stub;

  RpcService(const RpcService&) = delete;
  RpcService& operator=(const RpcService&) = delete;
  virtual ~RpcService() = default;

  static const ::google::protobuf::ServiceDescriptor* PROTOBUF_NONNULL descriptor();

  virtual void listRpc(::google::protobuf::RpcController* PROTOBUF_NULLABLE controller,
                        const ::muduo::net::ListRpcRequest* PROTOBUF_NONNULL request,
                        ::muduo::net::ListRpcResponse* PROTOBUF_NONNULL response,
                        ::google::protobuf::Closure* PROTOBUF_NULLABLE done);
  virtual void getService(::google::protobuf::RpcController* PROTOBUF_NULLABLE controller,
                        const ::muduo::net::GetServiceRequest* PROTOBUF_NONNULL request,
                        ::muduo::net::GetServiceResponse* PROTOBUF_NONNULL response,
                        ::google::protobuf::Closure* PROTOBUF_NULLABLE done);

  // implements Service ----------------------------------------------
  const ::google::protobuf::ServiceDescriptor* PROTOBUF_NONNULL GetDescriptor() override;

  void CallMethod(
      const ::google::protobuf::MethodDescriptor* PROTOBUF_NONNULL method,
      ::google::protobuf::RpcController* PROTOBUF_NULLABLE controller,
      const ::google::protobuf::Message* PROTOBUF_NONNULL request,
      ::google::protobuf::Message* PROTOBUF_NONNULL response,
      ::google::protobuf::Closure* PROTOBUF_NULLABLE done) override;

  const ::google::protobuf::Message& GetRequestPrototype(
      const ::google::protobuf::MethodDescriptor* PROTOBUF_NONNULL method) const override;

  const ::google::protobuf::Message& GetResponsePrototype(
      const ::google::protobuf::MethodDescriptor* PROTOBUF_NONNULL method) const override;
};

class RpcService_Stub final : public RpcService {
 public:
  RpcService_Stub(::google::protobuf::RpcChannel* PROTOBUF_NULLABLE channel);
  RpcService_Stub(::google::protobuf::RpcChannel* PROTOBUF_NULLABLE channel,
                   ::google::protobuf::Service::ChannelOwnership ownership);

  RpcService_Stub(const RpcService_Stub&) = delete;
  RpcService_Stub& operator=(const RpcService_Stub&) = delete;

  ~RpcService_Stub() override;

  inline ::google::protobuf::RpcChannel* PROTOBUF_NULLABLE channel() { return channel_; }

  // implements RpcService ------------------------------------------
  void listRpc(::google::protobuf::RpcController* PROTOBUF_NULLABLE controller,
                        const ::muduo::net::ListRpcRequest* PROTOBUF_NONNULL request,
                        ::muduo::net::ListRpcResponse* PROTOBUF_NONNULL response,
                        ::google::protobuf::Closure* PROTOBUF_NULLABLE done) override;
  void getService(::google::protobuf::RpcController* PROTOBUF_NULLABLE controller,
                        const ::muduo::net::GetServiceRequest* PROTOBUF_NONNULL request,
                        ::muduo::net::GetServiceResponse* PROTOBUF_NONNULL response,
                        ::google::protobuf::Closure* PROTOBUF_NULLABLE done) override;

 private:
  ::google::protobuf::RpcChannel* PROTOBUF_NULLABLE channel_;
  bool owns_channel_;
};
// ===================================================================



// ===================================================================


#ifdef __GNUC__
#pragma GCC diagnostic push
#pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif  // __GNUC__
// -------------------------------------------------------------------

// ListRpcRequest

// optional string service_name = 1;
inline bool ListRpcRequest::has_service_name() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  return value;
}
inline void ListRpcRequest::clear_service_name() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.service_name_.ClearToEmpty();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
inline const ::std::string& ListRpcRequest::service_name() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:muduo.net.ListRpcRequest.service_name)
  return _internal_service_name();
}
template <typename Arg_, typename... Args_>
PROTOBUF_ALWAYS_INLINE void ListRpcRequest::set_service_name(Arg_&& arg, Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000001u;
  _impl_.service_name_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:muduo.net.ListRpcRequest.service_name)
}
inline ::std::string* PROTOBUF_NONNULL ListRpcRequest::mutable_service_name()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::std::string* _s = _internal_mutable_service_name();
  // @@protoc_insertion_point(field_mutable:muduo.net.ListRpcRequest.service_name)
  return _s;
}
inline const ::std::string& ListRpcRequest::_internal_service_name() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.service_name_.Get();
}
inline void ListRpcRequest::_internal_set_service_name(const ::std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000001u;
  _impl_.service_name_.Set(value, GetArena());
}
inline ::std::string* PROTOBUF_NONNULL ListRpcRequest::_internal_mutable_service_name() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000001u;
  return _impl_.service_name_.Mutable( GetArena());
}
inline ::std::string* PROTOBUF_NULLABLE ListRpcRequest::release_service_name() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:muduo.net.ListRpcRequest.service_name)
  if ((_impl_._has_bits_[0] & 0x00000001u) == 0) {
    return nullptr;
  }
  _impl_._has_bits_[0] &= ~0x00000001u;
  auto* released = _impl_.service_name_.Release();
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString()) {
    _impl_.service_name_.Set("", GetArena());
  }
  return released;
}
inline void ListRpcRequest::set_allocated_service_name(::std::string* PROTOBUF_NULLABLE value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  _impl_.service_name_.SetAllocated(value, GetArena());
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString() && _impl_.service_name_.IsDefault()) {
    _impl_.service_name_.Set("", GetArena());
  }
  // @@protoc_insertion_point(field_set_allocated:muduo.net.ListRpcRequest.service_name)
}

// optional bool list_method = 2;
inline bool ListRpcRequest::has_list_method() const {
  bool value = (_impl_._has_bits_[0] & 0x00000002u) != 0;
  return value;
}
inline void ListRpcRequest::clear_list_method() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.list_method_ = false;
  _impl_._has_bits_[0] &= ~0x00000002u;
}
inline bool ListRpcRequest::list_method() const {
  // @@protoc_insertion_point(field_get:muduo.net.ListRpcRequest.list_method)
  return _internal_list_method();
}
inline void ListRpcRequest::set_list_method(bool value) {
  _internal_set_list_method(value);
  _impl_._has_bits_[0] |= 0x00000002u;
  // @@protoc_insertion_point(field_set:muduo.net.ListRpcRequest.list_method)
}
inline bool ListRpcRequest::_internal_list_method() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.list_method_;
}
inline void ListRpcRequest::_internal_set_list_method(bool value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.list_method_ = value;
}

// -------------------------------------------------------------------

// ListRpcResponse

// .muduo.net.ErrorCode error = 1;
inline void ListRpcResponse::clear_error() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.error_ = 0;
  _impl_._has_bits_[0] &= ~0x00000001u;
}
inline ::muduo::net::ErrorCode ListRpcResponse::error() const {
  // @@protoc_insertion_point(field_get:muduo.net.ListRpcResponse.error)
  return _internal_error();
}
inline void ListRpcResponse::set_error(::muduo::net::ErrorCode value) {
  _internal_set_error(value);
  _impl_._has_bits_[0] |= 0x00000001u;
  // @@protoc_insertion_point(field_set:muduo.net.ListRpcResponse.error)
}
inline ::muduo::net::ErrorCode ListRpcResponse::_internal_error() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return static_cast<::muduo::net::ErrorCode>(_impl_.error_);
}
inline void ListRpcResponse::_internal_set_error(::muduo::net::ErrorCode value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.error_ = value;
}

// repeated string service_name = 2;
inline int ListRpcResponse::_internal_service_name_size() const {
  return _internal_service_name().size();
}
inline int ListRpcResponse::service_name_size() const {
  return _internal_service_name_size();
}
inline void ListRpcResponse::clear_service_name() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.service_name_.Clear();
}
inline ::std::string* PROTOBUF_NONNULL ListRpcResponse::add_service_name()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::std::string* _s = _internal_mutable_service_name()->Add();
  // @@protoc_insertion_point(field_add_mutable:muduo.net.ListRpcResponse.service_name)
  return _s;
}
inline const ::std::string& ListRpcResponse::service_name(int index) const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:muduo.net.ListRpcResponse.service_name)
  return _internal_service_name().Get(index);
}
inline ::std::string* PROTOBUF_NONNULL ListRpcResponse::mutable_service_name(int index)
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable:muduo.net.ListRpcResponse.service_name)
  return _internal_mutable_service_name()->Mutable(index);
}
template <typename Arg_, typename... Args_>
inline void ListRpcResponse::set_service_name(int index, Arg_&& value, Args_... args) {
  ::google::protobuf::internal::AssignToString(*_internal_mutable_service_name()->Mutable(index), ::std::forward<Arg_>(value),
                        args... );
  // @@protoc_insertion_point(field_set:muduo.net.ListRpcResponse.service_name)
}
template <typename Arg_, typename... Args_>
inline void ListRpcResponse::add_service_name(Arg_&& value, Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::google::protobuf::internal::AddToRepeatedPtrField(*_internal_mutable_service_name(),
                               ::std::forward<Arg_>(value),
                               args... );
  // @@protoc_insertion_point(field_add:muduo.net.ListRpcResponse.service_name)
}
inline const ::google::protobuf::RepeatedPtrField<::std::string>& ListRpcResponse::service_name()
    const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_list:muduo.net.ListRpcResponse.service_name)
  return _internal_service_name();
}
inline ::google::protobuf::RepeatedPtrField<::std::string>* PROTOBUF_NONNULL
ListRpcResponse::mutable_service_name() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable_list:muduo.net.ListRpcResponse.service_name)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _internal_mutable_service_name();
}
inline const ::google::protobuf::RepeatedPtrField<::std::string>&
ListRpcResponse::_internal_service_name() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.service_name_;
}
inline ::google::protobuf::RepeatedPtrField<::std::string>* PROTOBUF_NONNULL
ListRpcResponse::_internal_mutable_service_name() {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return &_impl_.service_name_;
}

// repeated string method_name = 3;
inline int ListRpcResponse::_internal_method_name_size() const {
  return _internal_method_name().size();
}
inline int ListRpcResponse::method_name_size() const {
  return _internal_method_name_size();
}
inline void ListRpcResponse::clear_method_name() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.method_name_.Clear();
}
inline ::std::string* PROTOBUF_NONNULL ListRpcResponse::add_method_name()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::std::string* _s = _internal_mutable_method_name()->Add();
  // @@protoc_insertion_point(field_add_mutable:muduo.net.ListRpcResponse.method_name)
  return _s;
}
inline const ::std::string& ListRpcResponse::method_name(int index) const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:muduo.net.ListRpcResponse.method_name)
  return _internal_method_name().Get(index);
}
inline ::std::string* PROTOBUF_NONNULL ListRpcResponse::mutable_method_name(int index)
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable:muduo.net.ListRpcResponse.method_name)
  return _internal_mutable_method_name()->Mutable(index);
}
template <typename Arg_, typename... Args_>
inline void ListRpcResponse::set_method_name(int index, Arg_&& value, Args_... args) {
  ::google::protobuf::internal::AssignToString(*_internal_mutable_method_name()->Mutable(index), ::std::forward<Arg_>(value),
                        args... );
  // @@protoc_insertion_point(field_set:muduo.net.ListRpcResponse.method_name)
}
template <typename Arg_, typename... Args_>
inline void ListRpcResponse::add_method_name(Arg_&& value, Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::google::protobuf::internal::AddToRepeatedPtrField(*_internal_mutable_method_name(),
                               ::std::forward<Arg_>(value),
                               args... );
  // @@protoc_insertion_point(field_add:muduo.net.ListRpcResponse.method_name)
}
inline const ::google::protobuf::RepeatedPtrField<::std::string>& ListRpcResponse::method_name()
    const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_list:muduo.net.ListRpcResponse.method_name)
  return _internal_method_name();
}
inline ::google::protobuf::RepeatedPtrField<::std::string>* PROTOBUF_NONNULL
ListRpcResponse::mutable_method_name() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable_list:muduo.net.ListRpcResponse.method_name)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _internal_mutable_method_name();
}
inline const ::google::protobuf::RepeatedPtrField<::std::string>&
ListRpcResponse::_internal_method_name() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.method_name_;
}
inline ::google::protobuf::RepeatedPtrField<::std::string>* PROTOBUF_NONNULL
ListRpcResponse::_internal_mutable_method_name() {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return &_impl_.method_name_;
}

// -------------------------------------------------------------------

// GetServiceRequest

// string service_name = 1;
inline void GetServiceRequest::clear_service_name() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.service_name_.ClearToEmpty();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
inline const ::std::string& GetServiceRequest::service_name() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:muduo.net.GetServiceRequest.service_name)
  return _internal_service_name();
}
template <typename Arg_, typename... Args_>
PROTOBUF_ALWAYS_INLINE void GetServiceRequest::set_service_name(Arg_&& arg, Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000001u;
  _impl_.service_name_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:muduo.net.GetServiceRequest.service_name)
}
inline ::std::string* PROTOBUF_NONNULL GetServiceRequest::mutable_service_name()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::std::string* _s = _internal_mutable_service_name();
  // @@protoc_insertion_point(field_mutable:muduo.net.GetServiceRequest.service_name)
  return _s;
}
inline const ::std::string& GetServiceRequest::_internal_service_name() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.service_name_.Get();
}
inline void GetServiceRequest::_internal_set_service_name(const ::std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000001u;
  _impl_.service_name_.Set(value, GetArena());
}
inline ::std::string* PROTOBUF_NONNULL GetServiceRequest::_internal_mutable_service_name() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000001u;
  return _impl_.service_name_.Mutable( GetArena());
}
inline ::std::string* PROTOBUF_NULLABLE GetServiceRequest::release_service_name() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:muduo.net.GetServiceRequest.service_name)
  if ((_impl_._has_bits_[0] & 0x00000001u) == 0) {
    return nullptr;
  }
  _impl_._has_bits_[0] &= ~0x00000001u;
  auto* released = _impl_.service_name_.Release();
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString()) {
    _impl_.service_name_.Set("", GetArena());
  }
  return released;
}
inline void GetServiceRequest::set_allocated_service_name(::std::string* PROTOBUF_NULLABLE value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  _impl_.service_name_.SetAllocated(value, GetArena());
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString() && _impl_.service_name_.IsDefault()) {
    _impl_.service_name_.Set("", GetArena());
  }
  // @@protoc_insertion_point(field_set_allocated:muduo.net.GetServiceRequest.service_name)
}

// -------------------------------------------------------------------

// GetServiceResponse

// .muduo.net.ErrorCode error = 1;
inline void GetServiceResponse::clear_error() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.error_ = 0;
  _impl_._has_bits_[0] &= ~0x00000004u;
}
inline ::muduo::net::ErrorCode GetServiceResponse::error() const {
  // @@protoc_insertion_point(field_get:muduo.net.GetServiceResponse.error)
  return _internal_error();
}
inline void GetServiceResponse::set_error(::muduo::net::ErrorCode value) {
  _internal_set_error(value);
  _impl_._has_bits_[0] |= 0x00000004u;
  // @@protoc_insertion_point(field_set:muduo.net.GetServiceResponse.error)
}
inline ::muduo::net::ErrorCode GetServiceResponse::_internal_error() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return static_cast<::muduo::net::ErrorCode>(_impl_.error_);
}
inline void GetServiceResponse::_internal_set_error(::muduo::net::ErrorCode value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.error_ = value;
}

// string proto_file = 2;
inline void GetServiceResponse::clear_proto_file() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.proto_file_.ClearToEmpty();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
inline const ::std::string& GetServiceResponse::proto_file() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:muduo.net.GetServiceResponse.proto_file)
  return _internal_proto_file();
}
template <typename Arg_, typename... Args_>
PROTOBUF_ALWAYS_INLINE void GetServiceResponse::set_proto_file(Arg_&& arg, Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000001u;
  _impl_.proto_file_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:muduo.net.GetServiceResponse.proto_file)
}
inline ::std::string* PROTOBUF_NONNULL GetServiceResponse::mutable_proto_file()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::std::string* _s = _internal_mutable_proto_file();
  // @@protoc_insertion_point(field_mutable:muduo.net.GetServiceResponse.proto_file)
  return _s;
}
inline const ::std::string& GetServiceResponse::_internal_proto_file() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.proto_file_.Get();
}
inline void GetServiceResponse::_internal_set_proto_file(const ::std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000001u;
  _impl_.proto_file_.Set(value, GetArena());
}
inline ::std::string* PROTOBUF_NONNULL GetServiceResponse::_internal_mutable_proto_file() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000001u;
  return _impl_.proto_file_.Mutable( GetArena());
}
inline ::std::string* PROTOBUF_NULLABLE GetServiceResponse::release_proto_file() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:muduo.net.GetServiceResponse.proto_file)
  if ((_impl_._has_bits_[0] & 0x00000001u) == 0) {
    return nullptr;
  }
  _impl_._has_bits_[0] &= ~0x00000001u;
  auto* released = _impl_.proto_file_.Release();
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString()) {
    _impl_.proto_file_.Set("", GetArena());
  }
  return released;
}
inline void GetServiceResponse::set_allocated_proto_file(::std::string* PROTOBUF_NULLABLE value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  _impl_.proto_file_.SetAllocated(value, GetArena());
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString() && _impl_.proto_file_.IsDefault()) {
    _impl_.proto_file_.Set("", GetArena());
  }
  // @@protoc_insertion_point(field_set_allocated:muduo.net.GetServiceResponse.proto_file)
}

// string proto_file_name = 3;
inline void GetServiceResponse::clear_proto_file_name() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.proto_file_name_.ClearToEmpty();
  _impl_._has_bits_[0] &= ~0x00000002u;
}
inline const ::std::string& GetServiceResponse::proto_file_name() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:muduo.net.GetServiceResponse.proto_file_name)
  return _internal_proto_file_name();
}
template <typename Arg_, typename... Args_>
PROTOBUF_ALWAYS_INLINE void GetServiceResponse::set_proto_file_name(Arg_&& arg, Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000002u;
  _impl_.proto_file_name_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:muduo.net.GetServiceResponse.proto_file_name)
}
inline ::std::string* PROTOBUF_NONNULL GetServiceResponse::mutable_proto_file_name()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::std::string* _s = _internal_mutable_proto_file_name();
  // @@protoc_insertion_point(field_mutable:muduo.net.GetServiceResponse.proto_file_name)
  return _s;
}
inline const ::std::string& GetServiceResponse::_internal_proto_file_name() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.proto_file_name_.Get();
}
inline void GetServiceResponse::_internal_set_proto_file_name(const ::std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000002u;
  _impl_.proto_file_name_.Set(value, GetArena());
}
inline ::std::string* PROTOBUF_NONNULL GetServiceResponse::_internal_mutable_proto_file_name() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000002u;
  return _impl_.proto_file_name_.Mutable( GetArena());
}
inline ::std::string* PROTOBUF_NULLABLE GetServiceResponse::release_proto_file_name() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:muduo.net.GetServiceResponse.proto_file_name)
  if ((_impl_._has_bits_[0] & 0x00000002u) == 0) {
    return nullptr;
  }
  _impl_._has_bits_[0] &= ~0x00000002u;
  auto* released = _impl_.proto_file_name_.Release();
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString()) {
    _impl_.proto_file_name_.Set("", GetArena());
  }
  return released;
}
inline void GetServiceResponse::set_allocated_proto_file_name(::std::string* PROTOBUF_NULLABLE value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000002u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000002u;
  }
  _impl_.proto_file_name_.SetAllocated(value, GetArena());
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString() && _impl_.proto_file_name_.IsDefault()) {
    _impl_.proto_file_name_.Set("", GetArena());
  }
  // @@protoc_insertion_point(field_set_allocated:muduo.net.GetServiceResponse.proto_file_name)
}

#ifdef __GNUC__
#pragma GCC diagnostic pop
#endif  // __GNUC__

// @@protoc_insertion_point(namespace_scope)
}  // namespace net
}  // namespace muduo


// @@protoc_insertion_point(global_scope)

#include "google/protobuf/port_undef.inc"

#endif  // rpcservice_2eproto_2epb_2eh
