// Generated by the protocol buffer compiler.  DO NOT EDIT!
// NO CHECKED-IN PROTOBUF GENCODE
// source: rpc.proto
// Protobuf C++ Version: 6.31.1

#include "rpc.pb.h"

#include <algorithm>
#include <type_traits>
#include "google/protobuf/io/coded_stream.h"
#include "google/protobuf/generated_message_tctable_impl.h"
#include "google/protobuf/extension_set.h"
#include "google/protobuf/generated_message_util.h"
#include "google/protobuf/wire_format_lite.h"
#include "google/protobuf/descriptor.h"
#include "google/protobuf/generated_message_reflection.h"
#include "google/protobuf/reflection_ops.h"
#include "google/protobuf/wire_format.h"
// @@protoc_insertion_point(includes)

// Must be included last.
#include "google/protobuf/port_def.inc"
PROTOBUF_PRAGMA_INIT_SEG
namespace _pb = ::google::protobuf;
namespace _pbi = ::google::protobuf::internal;
namespace _fl = ::google::protobuf::internal::field_layout;
namespace muduo {
namespace net {

inline constexpr RpcMessage::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        service_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        method_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        request_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        response_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        id_{::uint64_t{0u}},
        type_{static_cast< ::muduo::net::MessageType >(0)},
        error_{static_cast< ::muduo::net::ErrorCode >(0)} {}

template <typename>
PROTOBUF_CONSTEXPR RpcMessage::RpcMessage(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(RpcMessage_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct RpcMessageDefaultTypeInternal {
  PROTOBUF_CONSTEXPR RpcMessageDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~RpcMessageDefaultTypeInternal() {}
  union {
    RpcMessage _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 RpcMessageDefaultTypeInternal _RpcMessage_default_instance_;
}  // namespace net
}  // namespace muduo
static const ::_pb::EnumDescriptor* PROTOBUF_NONNULL
    file_level_enum_descriptors_rpc_2eproto[2];
static constexpr const ::_pb::ServiceDescriptor *PROTOBUF_NONNULL *PROTOBUF_NULLABLE
    file_level_service_descriptors_rpc_2eproto = nullptr;
const ::uint32_t
    TableStruct_rpc_2eproto::offsets[] ABSL_ATTRIBUTE_SECTION_VARIABLE(
        protodesc_cold) = {
        0x081, // bitmap
        PROTOBUF_FIELD_OFFSET(::muduo::net::RpcMessage, _impl_._has_bits_),
        10, // hasbit index offset
        PROTOBUF_FIELD_OFFSET(::muduo::net::RpcMessage, _impl_.type_),
        PROTOBUF_FIELD_OFFSET(::muduo::net::RpcMessage, _impl_.id_),
        PROTOBUF_FIELD_OFFSET(::muduo::net::RpcMessage, _impl_.service_),
        PROTOBUF_FIELD_OFFSET(::muduo::net::RpcMessage, _impl_.method_),
        PROTOBUF_FIELD_OFFSET(::muduo::net::RpcMessage, _impl_.request_),
        PROTOBUF_FIELD_OFFSET(::muduo::net::RpcMessage, _impl_.response_),
        PROTOBUF_FIELD_OFFSET(::muduo::net::RpcMessage, _impl_.error_),
        5,
        4,
        0,
        1,
        2,
        3,
        6,
};

static const ::_pbi::MigrationSchema
    schemas[] ABSL_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
        {0, sizeof(::muduo::net::RpcMessage)},
};
static const ::_pb::Message* PROTOBUF_NONNULL const file_default_instances[] = {
    &::muduo::net::_RpcMessage_default_instance_._instance,
};
const char descriptor_table_protodef_rpc_2eproto[] ABSL_ATTRIBUTE_SECTION_VARIABLE(
    protodesc_cold) = {
    "\n\trpc.proto\022\tmuduo.net\"\247\001\n\nRpcMessage\022$\n"
    "\004type\030\001 \001(\0162\026.muduo.net.MessageType\022\n\n\002i"
    "d\030\002 \001(\006\022\017\n\007service\030\003 \001(\t\022\016\n\006method\030\004 \001(\t"
    "\022\017\n\007request\030\005 \001(\014\022\020\n\010response\030\006 \001(\014\022#\n\005e"
    "rror\030\007 \001(\0162\024.muduo.net.ErrorCode*7\n\013Mess"
    "ageType\022\013\n\007REQUEST\020\000\022\014\n\010RESPONSE\020\001\022\r\n\tRP"
    "C_ERROR\020\002*\205\001\n\tErrorCode\022\020\n\014RPC_NO_ERROR\020"
    "\000\022\017\n\013WRONG_PROTO\020\001\022\016\n\nNO_SERVICE\020\002\022\r\n\tNO"
    "_METHOD\020\003\022\023\n\017INVALID_REQUEST\020\004\022\024\n\020INVALI"
    "D_RESPONSE\020\005\022\013\n\007TIMEOUT\020\006B\'\n\033com.chenshu"
    "o.muduo.protorpcB\010RpcProtob\006proto3"
};
static ::absl::once_flag descriptor_table_rpc_2eproto_once;
PROTOBUF_CONSTINIT const ::_pbi::DescriptorTable descriptor_table_rpc_2eproto = {
    false,
    false,
    434,
    descriptor_table_protodef_rpc_2eproto,
    "rpc.proto",
    &descriptor_table_rpc_2eproto_once,
    nullptr,
    0,
    1,
    schemas,
    file_default_instances,
    TableStruct_rpc_2eproto::offsets,
    file_level_enum_descriptors_rpc_2eproto,
    file_level_service_descriptors_rpc_2eproto,
};
namespace muduo {
namespace net {
const ::google::protobuf::EnumDescriptor* PROTOBUF_NONNULL MessageType_descriptor() {
  ::google::protobuf::internal::AssignDescriptors(&descriptor_table_rpc_2eproto);
  return file_level_enum_descriptors_rpc_2eproto[0];
}
PROTOBUF_CONSTINIT const uint32_t MessageType_internal_data_[] = {
    196608u, 0u, };
const ::google::protobuf::EnumDescriptor* PROTOBUF_NONNULL ErrorCode_descriptor() {
  ::google::protobuf::internal::AssignDescriptors(&descriptor_table_rpc_2eproto);
  return file_level_enum_descriptors_rpc_2eproto[1];
}
PROTOBUF_CONSTINIT const uint32_t ErrorCode_internal_data_[] = {
    458752u, 0u, };
// ===================================================================

class RpcMessage::_Internal {
 public:
  using HasBits =
      decltype(::std::declval<RpcMessage>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
      8 * PROTOBUF_FIELD_OFFSET(RpcMessage, _impl_._has_bits_);
};

RpcMessage::RpcMessage(::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, RpcMessage_class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:muduo.net.RpcMessage)
}
PROTOBUF_NDEBUG_INLINE RpcMessage::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const Impl_& from,
    const ::muduo::net::RpcMessage& from_msg)
      : _has_bits_{from._has_bits_},
        _cached_size_{0},
        service_(arena, from.service_),
        method_(arena, from.method_),
        request_(arena, from.request_),
        response_(arena, from.response_) {}

RpcMessage::RpcMessage(
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena,
    const RpcMessage& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, RpcMessage_class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  RpcMessage* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);
  ::memcpy(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, id_),
           reinterpret_cast<const char *>(&from._impl_) +
               offsetof(Impl_, id_),
           offsetof(Impl_, error_) -
               offsetof(Impl_, id_) +
               sizeof(Impl_::error_));

  // @@protoc_insertion_point(copy_constructor:muduo.net.RpcMessage)
}
PROTOBUF_NDEBUG_INLINE RpcMessage::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
      : _cached_size_{0},
        service_(arena),
        method_(arena),
        request_(arena),
        response_(arena) {}

inline void RpcMessage::SharedCtor(::_pb::Arena* PROTOBUF_NULLABLE arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, id_),
           0,
           offsetof(Impl_, error_) -
               offsetof(Impl_, id_) +
               sizeof(Impl_::error_));
}
RpcMessage::~RpcMessage() {
  // @@protoc_insertion_point(destructor:muduo.net.RpcMessage)
  SharedDtor(*this);
}
inline void RpcMessage::SharedDtor(MessageLite& self) {
  RpcMessage& this_ = static_cast<RpcMessage&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  this_._impl_.service_.Destroy();
  this_._impl_.method_.Destroy();
  this_._impl_.request_.Destroy();
  this_._impl_.response_.Destroy();
  this_._impl_.~Impl_();
}

inline void* PROTOBUF_NONNULL RpcMessage::PlacementNew_(
    const void* PROTOBUF_NONNULL, void* PROTOBUF_NONNULL mem,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena) {
  return ::new (mem) RpcMessage(arena);
}
constexpr auto RpcMessage::InternalNewImpl_() {
  return ::google::protobuf::internal::MessageCreator::CopyInit(sizeof(RpcMessage),
                                            alignof(RpcMessage));
}
constexpr auto RpcMessage::InternalGenerateClassData_() {
  return ::google::protobuf::internal::ClassDataFull{
      ::google::protobuf::internal::ClassData{
          &_RpcMessage_default_instance_._instance,
          &_table_.header,
          nullptr,  // OnDemandRegisterArenaDtor
          nullptr,  // IsInitialized
          &RpcMessage::MergeImpl,
          ::google::protobuf::Message::GetNewImpl<RpcMessage>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
          &RpcMessage::SharedDtor,
          ::google::protobuf::Message::GetClearImpl<RpcMessage>(), &RpcMessage::ByteSizeLong,
              &RpcMessage::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
          PROTOBUF_FIELD_OFFSET(RpcMessage, _impl_._cached_size_),
          false,
      },
      &RpcMessage::kDescriptorMethods,
      &descriptor_table_rpc_2eproto,
      nullptr,  // tracker
  };
}

PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 const
    ::google::protobuf::internal::ClassDataFull RpcMessage_class_data_ =
        RpcMessage::InternalGenerateClassData_();

PROTOBUF_ATTRIBUTE_WEAK const ::google::protobuf::internal::ClassData* PROTOBUF_NONNULL
RpcMessage::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&RpcMessage_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(RpcMessage_class_data_.tc_table);
  return RpcMessage_class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<3, 7, 0, 42, 2>
RpcMessage::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(RpcMessage, _impl_._has_bits_),
    0, // no _extensions_
    7, 56,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967168,  // skipmap
    offsetof(decltype(_table_), field_entries),
    7,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    RpcMessage_class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::muduo::net::RpcMessage>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
    // .muduo.net.MessageType type = 1;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(RpcMessage, _impl_.type_), 5>(),
     {8, 5, 0, PROTOBUF_FIELD_OFFSET(RpcMessage, _impl_.type_)}},
    // fixed64 id = 2;
    {::_pbi::TcParser::FastF64S1,
     {17, 4, 0, PROTOBUF_FIELD_OFFSET(RpcMessage, _impl_.id_)}},
    // string service = 3;
    {::_pbi::TcParser::FastUS1,
     {26, 0, 0, PROTOBUF_FIELD_OFFSET(RpcMessage, _impl_.service_)}},
    // string method = 4;
    {::_pbi::TcParser::FastUS1,
     {34, 1, 0, PROTOBUF_FIELD_OFFSET(RpcMessage, _impl_.method_)}},
    // bytes request = 5;
    {::_pbi::TcParser::FastBS1,
     {42, 2, 0, PROTOBUF_FIELD_OFFSET(RpcMessage, _impl_.request_)}},
    // bytes response = 6;
    {::_pbi::TcParser::FastBS1,
     {50, 3, 0, PROTOBUF_FIELD_OFFSET(RpcMessage, _impl_.response_)}},
    // .muduo.net.ErrorCode error = 7;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(RpcMessage, _impl_.error_), 6>(),
     {56, 6, 0, PROTOBUF_FIELD_OFFSET(RpcMessage, _impl_.error_)}},
  }}, {{
    65535, 65535
  }}, {{
    // .muduo.net.MessageType type = 1;
    {PROTOBUF_FIELD_OFFSET(RpcMessage, _impl_.type_), _Internal::kHasBitsOffset + 5, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kOpenEnum)},
    // fixed64 id = 2;
    {PROTOBUF_FIELD_OFFSET(RpcMessage, _impl_.id_), _Internal::kHasBitsOffset + 4, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kFixed64)},
    // string service = 3;
    {PROTOBUF_FIELD_OFFSET(RpcMessage, _impl_.service_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // string method = 4;
    {PROTOBUF_FIELD_OFFSET(RpcMessage, _impl_.method_), _Internal::kHasBitsOffset + 1, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // bytes request = 5;
    {PROTOBUF_FIELD_OFFSET(RpcMessage, _impl_.request_), _Internal::kHasBitsOffset + 2, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kBytes | ::_fl::kRepAString)},
    // bytes response = 6;
    {PROTOBUF_FIELD_OFFSET(RpcMessage, _impl_.response_), _Internal::kHasBitsOffset + 3, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kBytes | ::_fl::kRepAString)},
    // .muduo.net.ErrorCode error = 7;
    {PROTOBUF_FIELD_OFFSET(RpcMessage, _impl_.error_), _Internal::kHasBitsOffset + 6, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kOpenEnum)},
  }},
  // no aux_entries
  {{
    "\24\0\0\7\6\0\0\0"
    "muduo.net.RpcMessage"
    "service"
    "method"
  }},
};
PROTOBUF_NOINLINE void RpcMessage::Clear() {
// @@protoc_insertion_point(message_clear_start:muduo.net.RpcMessage)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if ((cached_has_bits & 0x0000000fu) != 0) {
    if ((cached_has_bits & 0x00000001u) != 0) {
      _impl_.service_.ClearNonDefaultToEmpty();
    }
    if ((cached_has_bits & 0x00000002u) != 0) {
      _impl_.method_.ClearNonDefaultToEmpty();
    }
    if ((cached_has_bits & 0x00000004u) != 0) {
      _impl_.request_.ClearNonDefaultToEmpty();
    }
    if ((cached_has_bits & 0x00000008u) != 0) {
      _impl_.response_.ClearNonDefaultToEmpty();
    }
  }
  if ((cached_has_bits & 0x00000070u) != 0) {
    ::memset(&_impl_.id_, 0, static_cast<::size_t>(
        reinterpret_cast<char*>(&_impl_.error_) -
        reinterpret_cast<char*>(&_impl_.id_)) + sizeof(_impl_.error_));
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::uint8_t* PROTOBUF_NONNULL RpcMessage::_InternalSerialize(
    const ::google::protobuf::MessageLite& base, ::uint8_t* PROTOBUF_NONNULL target,
    ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) {
  const RpcMessage& this_ = static_cast<const RpcMessage&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::uint8_t* PROTOBUF_NONNULL RpcMessage::_InternalSerialize(
    ::uint8_t* PROTOBUF_NONNULL target,
    ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const {
  const RpcMessage& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
  // @@protoc_insertion_point(serialize_to_array_start:muduo.net.RpcMessage)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  // .muduo.net.MessageType type = 1;
  if ((this_._impl_._has_bits_[0] & 0x00000020u) != 0) {
    if (this_._internal_type() != 0) {
      target = stream->EnsureSpace(target);
      target = ::_pbi::WireFormatLite::WriteEnumToArray(
          1, this_._internal_type(), target);
    }
  }

  // fixed64 id = 2;
  if ((this_._impl_._has_bits_[0] & 0x00000010u) != 0) {
    if (this_._internal_id() != 0) {
      target = stream->EnsureSpace(target);
      target = ::_pbi::WireFormatLite::WriteFixed64ToArray(
          2, this_._internal_id(), target);
    }
  }

  // string service = 3;
  if ((this_._impl_._has_bits_[0] & 0x00000001u) != 0) {
    if (!this_._internal_service().empty()) {
      const ::std::string& _s = this_._internal_service();
      ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
          _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "muduo.net.RpcMessage.service");
      target = stream->WriteStringMaybeAliased(3, _s, target);
    }
  }

  // string method = 4;
  if ((this_._impl_._has_bits_[0] & 0x00000002u) != 0) {
    if (!this_._internal_method().empty()) {
      const ::std::string& _s = this_._internal_method();
      ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
          _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "muduo.net.RpcMessage.method");
      target = stream->WriteStringMaybeAliased(4, _s, target);
    }
  }

  // bytes request = 5;
  if ((this_._impl_._has_bits_[0] & 0x00000004u) != 0) {
    if (!this_._internal_request().empty()) {
      const ::std::string& _s = this_._internal_request();
      target = stream->WriteBytesMaybeAliased(5, _s, target);
    }
  }

  // bytes response = 6;
  if ((this_._impl_._has_bits_[0] & 0x00000008u) != 0) {
    if (!this_._internal_response().empty()) {
      const ::std::string& _s = this_._internal_response();
      target = stream->WriteBytesMaybeAliased(6, _s, target);
    }
  }

  // .muduo.net.ErrorCode error = 7;
  if ((this_._impl_._has_bits_[0] & 0x00000040u) != 0) {
    if (this_._internal_error() != 0) {
      target = stream->EnsureSpace(target);
      target = ::_pbi::WireFormatLite::WriteEnumToArray(
          7, this_._internal_error(), target);
    }
  }

  if (ABSL_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:muduo.net.RpcMessage)
  return target;
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::size_t RpcMessage::ByteSizeLong(const MessageLite& base) {
  const RpcMessage& this_ = static_cast<const RpcMessage&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::size_t RpcMessage::ByteSizeLong() const {
  const RpcMessage& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
  // @@protoc_insertion_point(message_byte_size_start:muduo.net.RpcMessage)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void)cached_has_bits;

  ::_pbi::Prefetch5LinesFrom7Lines(&this_);
  cached_has_bits = this_._impl_._has_bits_[0];
  if ((cached_has_bits & 0x0000007fu) != 0) {
    // string service = 3;
    if ((cached_has_bits & 0x00000001u) != 0) {
      if (!this_._internal_service().empty()) {
        total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                        this_._internal_service());
      }
    }
    // string method = 4;
    if ((cached_has_bits & 0x00000002u) != 0) {
      if (!this_._internal_method().empty()) {
        total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                        this_._internal_method());
      }
    }
    // bytes request = 5;
    if ((cached_has_bits & 0x00000004u) != 0) {
      if (!this_._internal_request().empty()) {
        total_size += 1 + ::google::protobuf::internal::WireFormatLite::BytesSize(
                                        this_._internal_request());
      }
    }
    // bytes response = 6;
    if ((cached_has_bits & 0x00000008u) != 0) {
      if (!this_._internal_response().empty()) {
        total_size += 1 + ::google::protobuf::internal::WireFormatLite::BytesSize(
                                        this_._internal_response());
      }
    }
    // fixed64 id = 2;
    if ((cached_has_bits & 0x00000010u) != 0) {
      if (this_._internal_id() != 0) {
        total_size += 9;
      }
    }
    // .muduo.net.MessageType type = 1;
    if ((cached_has_bits & 0x00000020u) != 0) {
      if (this_._internal_type() != 0) {
        total_size += 1 +
                      ::_pbi::WireFormatLite::EnumSize(this_._internal_type());
      }
    }
    // .muduo.net.ErrorCode error = 7;
    if ((cached_has_bits & 0x00000040u) != 0) {
      if (this_._internal_error() != 0) {
        total_size += 1 +
                      ::_pbi::WireFormatLite::EnumSize(this_._internal_error());
      }
    }
  }
  return this_.MaybeComputeUnknownFieldsSize(total_size,
                                             &this_._impl_._cached_size_);
}

void RpcMessage::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<RpcMessage*>(&to_msg);
  auto& from = static_cast<const RpcMessage&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:muduo.net.RpcMessage)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._impl_._has_bits_[0];
  if ((cached_has_bits & 0x0000007fu) != 0) {
    if ((cached_has_bits & 0x00000001u) != 0) {
      if (!from._internal_service().empty()) {
        _this->_internal_set_service(from._internal_service());
      } else {
        if (_this->_impl_.service_.IsDefault()) {
          _this->_internal_set_service("");
        }
      }
    }
    if ((cached_has_bits & 0x00000002u) != 0) {
      if (!from._internal_method().empty()) {
        _this->_internal_set_method(from._internal_method());
      } else {
        if (_this->_impl_.method_.IsDefault()) {
          _this->_internal_set_method("");
        }
      }
    }
    if ((cached_has_bits & 0x00000004u) != 0) {
      if (!from._internal_request().empty()) {
        _this->_internal_set_request(from._internal_request());
      } else {
        if (_this->_impl_.request_.IsDefault()) {
          _this->_internal_set_request("");
        }
      }
    }
    if ((cached_has_bits & 0x00000008u) != 0) {
      if (!from._internal_response().empty()) {
        _this->_internal_set_response(from._internal_response());
      } else {
        if (_this->_impl_.response_.IsDefault()) {
          _this->_internal_set_response("");
        }
      }
    }
    if ((cached_has_bits & 0x00000010u) != 0) {
      if (from._internal_id() != 0) {
        _this->_impl_.id_ = from._impl_.id_;
      }
    }
    if ((cached_has_bits & 0x00000020u) != 0) {
      if (from._internal_type() != 0) {
        _this->_impl_.type_ = from._impl_.type_;
      }
    }
    if ((cached_has_bits & 0x00000040u) != 0) {
      if (from._internal_error() != 0) {
        _this->_impl_.error_ = from._impl_.error_;
      }
    }
  }
  _this->_impl_._has_bits_[0] |= cached_has_bits;
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void RpcMessage::CopyFrom(const RpcMessage& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:muduo.net.RpcMessage)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void RpcMessage::InternalSwap(RpcMessage* PROTOBUF_RESTRICT PROTOBUF_NONNULL other) {
  using ::std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.service_, &other->_impl_.service_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.method_, &other->_impl_.method_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.request_, &other->_impl_.request_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.response_, &other->_impl_.response_, arena);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(RpcMessage, _impl_.error_)
      + sizeof(RpcMessage::_impl_.error_)
      - PROTOBUF_FIELD_OFFSET(RpcMessage, _impl_.id_)>(
          reinterpret_cast<char*>(&_impl_.id_),
          reinterpret_cast<char*>(&other->_impl_.id_));
}

::google::protobuf::Metadata RpcMessage::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// @@protoc_insertion_point(namespace_scope)
}  // namespace net
}  // namespace muduo
namespace google {
namespace protobuf {
}  // namespace protobuf
}  // namespace google
// @@protoc_insertion_point(global_scope)
PROTOBUF_ATTRIBUTE_INIT_PRIORITY2 static ::std::false_type
    _static_init2_ [[maybe_unused]] =
        (::_pbi::AddDescriptors(&descriptor_table_rpc_2eproto),
         ::std::false_type{});
#include "google/protobuf/port_undef.inc"
