// Generated by the protocol buffer compiler.  DO NOT EDIT!
// NO CHECKED-IN PROTOBUF GENCODE
// source: proto/logic/component/scene_comp.proto
// Protobuf C++ Version: 6.31.1

#ifndef proto_2flogic_2fcomponent_2fscene_5fcomp_2eproto_2epb_2eh
#define proto_2flogic_2fcomponent_2fscene_5fcomp_2eproto_2epb_2eh

#include <limits>
#include <string>
#include <type_traits>
#include <utility>

#include "google/protobuf/runtime_version.h"
#if PROTOBUF_VERSION != 6031001
#error "Protobuf C++ gencode is built with an incompatible version of"
#error "Protobuf C++ headers/runtime. See"
#error "https://protobuf.dev/support/cross-version-runtime-guarantee/#cpp"
#endif
#include "google/protobuf/io/coded_stream.h"
#include "google/protobuf/arena.h"
#include "google/protobuf/arenastring.h"
#include "google/protobuf/generated_message_tctable_decl.h"
#include "google/protobuf/generated_message_util.h"
#include "google/protobuf/metadata_lite.h"
#include "google/protobuf/generated_message_reflection.h"
#include "google/protobuf/message.h"
#include "google/protobuf/message_lite.h"
#include "google/protobuf/repeated_field.h"  // IWYU pragma: export
#include "google/protobuf/extension_set.h"  // IWYU pragma: export
#include "google/protobuf/generated_enum_reflection.h"
#include "google/protobuf/unknown_field_set.h"
// @@protoc_insertion_point(includes)

// Must be included last.
#include "google/protobuf/port_def.inc"

#define PROTOBUF_INTERNAL_EXPORT_proto_2flogic_2fcomponent_2fscene_5fcomp_2eproto

namespace google {
namespace protobuf {
namespace internal {
template <typename T>
::absl::string_view GetAnyMessageName();
}  // namespace internal
}  // namespace protobuf
}  // namespace google

// Internal implementation detail -- do not use these members.
struct TableStruct_proto_2flogic_2fcomponent_2fscene_5fcomp_2eproto {
  static const ::uint32_t offsets[];
};
extern "C" {
extern const ::google::protobuf::internal::DescriptorTable descriptor_table_proto_2flogic_2fcomponent_2fscene_5fcomp_2eproto;
}  // extern "C"
enum ChangeRoomInfoPBComponent_eChangeGsType : int;
extern const uint32_t ChangeRoomInfoPBComponent_eChangeGsType_internal_data_[];
enum ChangeRoomInfoPBComponent_eChangeSceneState : int;
extern const uint32_t ChangeRoomInfoPBComponent_eChangeSceneState_internal_data_[];
class ChangeRoomInfoPBComponent;
struct ChangeRoomInfoPBComponentDefaultTypeInternal;
extern ChangeRoomInfoPBComponentDefaultTypeInternal _ChangeRoomInfoPBComponent_default_instance_;
extern const ::google::protobuf::internal::ClassDataFull ChangeRoomInfoPBComponent_class_data_;
namespace google {
namespace protobuf {
template <>
internal::EnumTraitsT<::ChangeRoomInfoPBComponent_eChangeGsType_internal_data_>
    internal::EnumTraitsImpl::value<::ChangeRoomInfoPBComponent_eChangeGsType>;
template <>
internal::EnumTraitsT<::ChangeRoomInfoPBComponent_eChangeSceneState_internal_data_>
    internal::EnumTraitsImpl::value<::ChangeRoomInfoPBComponent_eChangeSceneState>;
}  // namespace protobuf
}  // namespace google

enum ChangeRoomInfoPBComponent_eChangeGsType : int {
  ChangeRoomInfoPBComponent_eChangeGsType_eSameGs = 0,
  ChangeRoomInfoPBComponent_eChangeGsType_eDifferentGs = 1,
  ChangeRoomInfoPBComponent_eChangeGsType_ChangeRoomInfoPBComponent_eChangeGsType_INT_MIN_SENTINEL_DO_NOT_USE_ =
      ::std::numeric_limits<::int32_t>::min(),
  ChangeRoomInfoPBComponent_eChangeGsType_ChangeRoomInfoPBComponent_eChangeGsType_INT_MAX_SENTINEL_DO_NOT_USE_ =
      ::std::numeric_limits<::int32_t>::max(),
};

extern const uint32_t ChangeRoomInfoPBComponent_eChangeGsType_internal_data_[];
inline constexpr ChangeRoomInfoPBComponent_eChangeGsType ChangeRoomInfoPBComponent_eChangeGsType_eChangeGsType_MIN =
    static_cast<ChangeRoomInfoPBComponent_eChangeGsType>(0);
inline constexpr ChangeRoomInfoPBComponent_eChangeGsType ChangeRoomInfoPBComponent_eChangeGsType_eChangeGsType_MAX =
    static_cast<ChangeRoomInfoPBComponent_eChangeGsType>(1);
inline bool ChangeRoomInfoPBComponent_eChangeGsType_IsValid(int value) {
  return 0 <= value && value <= 1;
}
inline constexpr int ChangeRoomInfoPBComponent_eChangeGsType_eChangeGsType_ARRAYSIZE = 1 + 1;
const ::google::protobuf::EnumDescriptor* PROTOBUF_NONNULL ChangeRoomInfoPBComponent_eChangeGsType_descriptor();
template <typename T>
const ::std::string& ChangeRoomInfoPBComponent_eChangeGsType_Name(T value) {
  static_assert(::std::is_same<T, ChangeRoomInfoPBComponent_eChangeGsType>::value ||
                    ::std::is_integral<T>::value,
                "Incorrect type passed to eChangeGsType_Name().");
  return ChangeRoomInfoPBComponent_eChangeGsType_Name(static_cast<ChangeRoomInfoPBComponent_eChangeGsType>(value));
}
template <>
inline const ::std::string& ChangeRoomInfoPBComponent_eChangeGsType_Name(ChangeRoomInfoPBComponent_eChangeGsType value) {
  return ::google::protobuf::internal::NameOfDenseEnum<ChangeRoomInfoPBComponent_eChangeGsType_descriptor, 0, 1>(
      static_cast<int>(value));
}
inline bool ChangeRoomInfoPBComponent_eChangeGsType_Parse(
    ::absl::string_view name, ChangeRoomInfoPBComponent_eChangeGsType* PROTOBUF_NONNULL value) {
  return ::google::protobuf::internal::ParseNamedEnum<ChangeRoomInfoPBComponent_eChangeGsType>(ChangeRoomInfoPBComponent_eChangeGsType_descriptor(), name,
                                           value);
}
enum ChangeRoomInfoPBComponent_eChangeSceneState : int {
  ChangeRoomInfoPBComponent_eChangeSceneState_ePendingLeave = 0,
  ChangeRoomInfoPBComponent_eChangeSceneState_eLeaving = 1,
  ChangeRoomInfoPBComponent_eChangeSceneState_eWaitingEnter = 2,
  ChangeRoomInfoPBComponent_eChangeSceneState_eEnterSucceed = 3,
  ChangeRoomInfoPBComponent_eChangeSceneState_eGateEnterSucceed = 4,
  ChangeRoomInfoPBComponent_eChangeSceneState_eDone = 5,
  ChangeRoomInfoPBComponent_eChangeSceneState_ChangeRoomInfoPBComponent_eChangeSceneState_INT_MIN_SENTINEL_DO_NOT_USE_ =
      ::std::numeric_limits<::int32_t>::min(),
  ChangeRoomInfoPBComponent_eChangeSceneState_ChangeRoomInfoPBComponent_eChangeSceneState_INT_MAX_SENTINEL_DO_NOT_USE_ =
      ::std::numeric_limits<::int32_t>::max(),
};

extern const uint32_t ChangeRoomInfoPBComponent_eChangeSceneState_internal_data_[];
inline constexpr ChangeRoomInfoPBComponent_eChangeSceneState ChangeRoomInfoPBComponent_eChangeSceneState_eChangeSceneState_MIN =
    static_cast<ChangeRoomInfoPBComponent_eChangeSceneState>(0);
inline constexpr ChangeRoomInfoPBComponent_eChangeSceneState ChangeRoomInfoPBComponent_eChangeSceneState_eChangeSceneState_MAX =
    static_cast<ChangeRoomInfoPBComponent_eChangeSceneState>(5);
inline bool ChangeRoomInfoPBComponent_eChangeSceneState_IsValid(int value) {
  return 0 <= value && value <= 5;
}
inline constexpr int ChangeRoomInfoPBComponent_eChangeSceneState_eChangeSceneState_ARRAYSIZE = 5 + 1;
const ::google::protobuf::EnumDescriptor* PROTOBUF_NONNULL ChangeRoomInfoPBComponent_eChangeSceneState_descriptor();
template <typename T>
const ::std::string& ChangeRoomInfoPBComponent_eChangeSceneState_Name(T value) {
  static_assert(::std::is_same<T, ChangeRoomInfoPBComponent_eChangeSceneState>::value ||
                    ::std::is_integral<T>::value,
                "Incorrect type passed to eChangeSceneState_Name().");
  return ChangeRoomInfoPBComponent_eChangeSceneState_Name(static_cast<ChangeRoomInfoPBComponent_eChangeSceneState>(value));
}
template <>
inline const ::std::string& ChangeRoomInfoPBComponent_eChangeSceneState_Name(ChangeRoomInfoPBComponent_eChangeSceneState value) {
  return ::google::protobuf::internal::NameOfDenseEnum<ChangeRoomInfoPBComponent_eChangeSceneState_descriptor, 0, 5>(
      static_cast<int>(value));
}
inline bool ChangeRoomInfoPBComponent_eChangeSceneState_Parse(
    ::absl::string_view name, ChangeRoomInfoPBComponent_eChangeSceneState* PROTOBUF_NONNULL value) {
  return ::google::protobuf::internal::ParseNamedEnum<ChangeRoomInfoPBComponent_eChangeSceneState>(ChangeRoomInfoPBComponent_eChangeSceneState_descriptor(), name,
                                           value);
}

// ===================================================================


// -------------------------------------------------------------------

class ChangeRoomInfoPBComponent final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:ChangeRoomInfoPBComponent) */ {
 public:
  inline ChangeRoomInfoPBComponent() : ChangeRoomInfoPBComponent(nullptr) {}
  ~ChangeRoomInfoPBComponent() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(ChangeRoomInfoPBComponent* PROTOBUF_NONNULL msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(ChangeRoomInfoPBComponent));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR ChangeRoomInfoPBComponent(::google::protobuf::internal::ConstantInitialized);

  inline ChangeRoomInfoPBComponent(const ChangeRoomInfoPBComponent& from) : ChangeRoomInfoPBComponent(nullptr, from) {}
  inline ChangeRoomInfoPBComponent(ChangeRoomInfoPBComponent&& from) noexcept
      : ChangeRoomInfoPBComponent(nullptr, ::std::move(from)) {}
  inline ChangeRoomInfoPBComponent& operator=(const ChangeRoomInfoPBComponent& from) {
    CopyFrom(from);
    return *this;
  }
  inline ChangeRoomInfoPBComponent& operator=(ChangeRoomInfoPBComponent&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* PROTOBUF_NONNULL mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* PROTOBUF_NONNULL descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* PROTOBUF_NONNULL GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* PROTOBUF_NONNULL GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const ChangeRoomInfoPBComponent& default_instance() {
    return *reinterpret_cast<const ChangeRoomInfoPBComponent*>(
        &_ChangeRoomInfoPBComponent_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 0;
  friend void swap(ChangeRoomInfoPBComponent& a, ChangeRoomInfoPBComponent& b) { a.Swap(&b); }
  inline void Swap(ChangeRoomInfoPBComponent* PROTOBUF_NONNULL other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(ChangeRoomInfoPBComponent* PROTOBUF_NONNULL other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  ChangeRoomInfoPBComponent* PROTOBUF_NONNULL New(::google::protobuf::Arena* PROTOBUF_NULLABLE arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<ChangeRoomInfoPBComponent>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const ChangeRoomInfoPBComponent& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const ChangeRoomInfoPBComponent& from) { ChangeRoomInfoPBComponent::MergeImpl(*this, from); }

  private:
  static void MergeImpl(::google::protobuf::MessageLite& to_msg,
                        const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* PROTOBUF_NONNULL _InternalSerialize(
      const ::google::protobuf::MessageLite& msg, ::uint8_t* PROTOBUF_NONNULL target,
      ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* PROTOBUF_NONNULL _InternalSerialize(
      ::uint8_t* PROTOBUF_NONNULL target,
      ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* PROTOBUF_NONNULL _InternalSerialize(
      ::uint8_t* PROTOBUF_NONNULL target,
      ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(ChangeRoomInfoPBComponent* PROTOBUF_NONNULL other);
 private:
  template <typename T>
  friend ::absl::string_view(::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "ChangeRoomInfoPBComponent"; }

 protected:
  explicit ChangeRoomInfoPBComponent(::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  ChangeRoomInfoPBComponent(::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const ChangeRoomInfoPBComponent& from);
  ChangeRoomInfoPBComponent(
      ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, ChangeRoomInfoPBComponent&& from) noexcept
      : ChangeRoomInfoPBComponent(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* PROTOBUF_NONNULL GetClassData() const PROTOBUF_FINAL;
  static void* PROTOBUF_NONNULL PlacementNew_(
      const void* PROTOBUF_NONNULL, void* PROTOBUF_NONNULL mem,
      ::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  static constexpr auto InternalNewImpl_();

 public:
  static constexpr auto InternalGenerateClassData_();

  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------
  using eChangeGsType = ChangeRoomInfoPBComponent_eChangeGsType;
  static constexpr eChangeGsType eSameGs = ChangeRoomInfoPBComponent_eChangeGsType_eSameGs;
  static constexpr eChangeGsType eDifferentGs = ChangeRoomInfoPBComponent_eChangeGsType_eDifferentGs;
  static inline bool eChangeGsType_IsValid(int value) {
    return ChangeRoomInfoPBComponent_eChangeGsType_IsValid(value);
  }
  static constexpr eChangeGsType eChangeGsType_MIN = ChangeRoomInfoPBComponent_eChangeGsType_eChangeGsType_MIN;
  static constexpr eChangeGsType eChangeGsType_MAX = ChangeRoomInfoPBComponent_eChangeGsType_eChangeGsType_MAX;
  static constexpr int eChangeGsType_ARRAYSIZE = ChangeRoomInfoPBComponent_eChangeGsType_eChangeGsType_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor* PROTOBUF_NONNULL eChangeGsType_descriptor() {
    return ChangeRoomInfoPBComponent_eChangeGsType_descriptor();
  }
  template <typename T>
  static inline const ::std::string& eChangeGsType_Name(T value) {
    return ChangeRoomInfoPBComponent_eChangeGsType_Name(value);
  }
  static inline bool eChangeGsType_Parse(
      ::absl::string_view name, eChangeGsType* PROTOBUF_NONNULL value) {
    return ChangeRoomInfoPBComponent_eChangeGsType_Parse(name, value);
  }
  using eChangeSceneState = ChangeRoomInfoPBComponent_eChangeSceneState;
  static constexpr eChangeSceneState ePendingLeave = ChangeRoomInfoPBComponent_eChangeSceneState_ePendingLeave;
  static constexpr eChangeSceneState eLeaving = ChangeRoomInfoPBComponent_eChangeSceneState_eLeaving;
  static constexpr eChangeSceneState eWaitingEnter = ChangeRoomInfoPBComponent_eChangeSceneState_eWaitingEnter;
  static constexpr eChangeSceneState eEnterSucceed = ChangeRoomInfoPBComponent_eChangeSceneState_eEnterSucceed;
  static constexpr eChangeSceneState eGateEnterSucceed = ChangeRoomInfoPBComponent_eChangeSceneState_eGateEnterSucceed;
  static constexpr eChangeSceneState eDone = ChangeRoomInfoPBComponent_eChangeSceneState_eDone;
  static inline bool eChangeSceneState_IsValid(int value) {
    return ChangeRoomInfoPBComponent_eChangeSceneState_IsValid(value);
  }
  static constexpr eChangeSceneState eChangeSceneState_MIN = ChangeRoomInfoPBComponent_eChangeSceneState_eChangeSceneState_MIN;
  static constexpr eChangeSceneState eChangeSceneState_MAX = ChangeRoomInfoPBComponent_eChangeSceneState_eChangeSceneState_MAX;
  static constexpr int eChangeSceneState_ARRAYSIZE = ChangeRoomInfoPBComponent_eChangeSceneState_eChangeSceneState_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor* PROTOBUF_NONNULL eChangeSceneState_descriptor() {
    return ChangeRoomInfoPBComponent_eChangeSceneState_descriptor();
  }
  template <typename T>
  static inline const ::std::string& eChangeSceneState_Name(T value) {
    return ChangeRoomInfoPBComponent_eChangeSceneState_Name(value);
  }
  static inline bool eChangeSceneState_Parse(
      ::absl::string_view name, eChangeSceneState* PROTOBUF_NONNULL value) {
    return ChangeRoomInfoPBComponent_eChangeSceneState_Parse(name, value);
  }

  // accessors -------------------------------------------------------
  enum : int {
    kSceneConfidFieldNumber = 1,
    kGuidFieldNumber = 2,
    kDungenConfidFieldNumber = 3,
    kMirrorConfidFieldNumber = 4,
    kChangeSequenceFieldNumber = 5,
    kChangeGsTypeFieldNumber = 6,
    kChangeTimeFieldNumber = 7,
    kStateFieldNumber = 10,
    kIgnoreFullFieldNumber = 8,
    kProcessingFieldNumber = 9,
    kIsCrossZoneFieldNumber = 13,
    kFromZoneIdFieldNumber = 11,
    kToZoneIdFieldNumber = 12,
  };
  // uint32 scene_confid = 1;
  void clear_scene_confid() ;
  ::uint32_t scene_confid() const;
  void set_scene_confid(::uint32_t value);

  private:
  ::uint32_t _internal_scene_confid() const;
  void _internal_set_scene_confid(::uint32_t value);

  public:
  // uint32 guid = 2;
  void clear_guid() ;
  ::uint32_t guid() const;
  void set_guid(::uint32_t value);

  private:
  ::uint32_t _internal_guid() const;
  void _internal_set_guid(::uint32_t value);

  public:
  // uint32 dungen_confid = 3;
  void clear_dungen_confid() ;
  ::uint32_t dungen_confid() const;
  void set_dungen_confid(::uint32_t value);

  private:
  ::uint32_t _internal_dungen_confid() const;
  void _internal_set_dungen_confid(::uint32_t value);

  public:
  // uint32 mirror_confid = 4;
  void clear_mirror_confid() ;
  ::uint32_t mirror_confid() const;
  void set_mirror_confid(::uint32_t value);

  private:
  ::uint32_t _internal_mirror_confid() const;
  void _internal_set_mirror_confid(::uint32_t value);

  public:
  // uint32 change_sequence = 5;
  void clear_change_sequence() ;
  ::uint32_t change_sequence() const;
  void set_change_sequence(::uint32_t value);

  private:
  ::uint32_t _internal_change_sequence() const;
  void _internal_set_change_sequence(::uint32_t value);

  public:
  // uint32 change_gs_type = 6;
  void clear_change_gs_type() ;
  ::uint32_t change_gs_type() const;
  void set_change_gs_type(::uint32_t value);

  private:
  ::uint32_t _internal_change_gs_type() const;
  void _internal_set_change_gs_type(::uint32_t value);

  public:
  // uint64 change_time = 7;
  void clear_change_time() ;
  ::uint64_t change_time() const;
  void set_change_time(::uint64_t value);

  private:
  ::uint64_t _internal_change_time() const;
  void _internal_set_change_time(::uint64_t value);

  public:
  // uint32 state = 10;
  void clear_state() ;
  ::uint32_t state() const;
  void set_state(::uint32_t value);

  private:
  ::uint32_t _internal_state() const;
  void _internal_set_state(::uint32_t value);

  public:
  // bool ignore_full = 8;
  void clear_ignore_full() ;
  bool ignore_full() const;
  void set_ignore_full(bool value);

  private:
  bool _internal_ignore_full() const;
  void _internal_set_ignore_full(bool value);

  public:
  // bool processing = 9;
  void clear_processing() ;
  bool processing() const;
  void set_processing(bool value);

  private:
  bool _internal_processing() const;
  void _internal_set_processing(bool value);

  public:
  // bool is_cross_zone = 13;
  void clear_is_cross_zone() ;
  bool is_cross_zone() const;
  void set_is_cross_zone(bool value);

  private:
  bool _internal_is_cross_zone() const;
  void _internal_set_is_cross_zone(bool value);

  public:
  // uint32 from_zone_id = 11;
  void clear_from_zone_id() ;
  ::uint32_t from_zone_id() const;
  void set_from_zone_id(::uint32_t value);

  private:
  ::uint32_t _internal_from_zone_id() const;
  void _internal_set_from_zone_id(::uint32_t value);

  public:
  // uint32 to_zone_id = 12;
  void clear_to_zone_id() ;
  ::uint32_t to_zone_id() const;
  void set_to_zone_id(::uint32_t value);

  private:
  ::uint32_t _internal_to_zone_id() const;
  void _internal_set_to_zone_id(::uint32_t value);

  public:
  // @@protoc_insertion_point(class_scope:ChangeRoomInfoPBComponent)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<4, 13,
                                   0, 0,
                                   2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(
        ::google::protobuf::internal::InternalVisibility visibility,
        ::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
    inline explicit Impl_(
        ::google::protobuf::internal::InternalVisibility visibility,
        ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const Impl_& from,
        const ChangeRoomInfoPBComponent& from_msg);
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    ::uint32_t scene_confid_;
    ::uint32_t guid_;
    ::uint32_t dungen_confid_;
    ::uint32_t mirror_confid_;
    ::uint32_t change_sequence_;
    ::uint32_t change_gs_type_;
    ::uint64_t change_time_;
    ::uint32_t state_;
    bool ignore_full_;
    bool processing_;
    bool is_cross_zone_;
    ::uint32_t from_zone_id_;
    ::uint32_t to_zone_id_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_proto_2flogic_2fcomponent_2fscene_5fcomp_2eproto;
};

extern const ::google::protobuf::internal::ClassDataFull ChangeRoomInfoPBComponent_class_data_;

// ===================================================================




// ===================================================================


#ifdef __GNUC__
#pragma GCC diagnostic push
#pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif  // __GNUC__
// -------------------------------------------------------------------

// ChangeRoomInfoPBComponent

// uint32 scene_confid = 1;
inline void ChangeRoomInfoPBComponent::clear_scene_confid() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.scene_confid_ = 0u;
  _impl_._has_bits_[0] &= ~0x00000001u;
}
inline ::uint32_t ChangeRoomInfoPBComponent::scene_confid() const {
  // @@protoc_insertion_point(field_get:ChangeRoomInfoPBComponent.scene_confid)
  return _internal_scene_confid();
}
inline void ChangeRoomInfoPBComponent::set_scene_confid(::uint32_t value) {
  _internal_set_scene_confid(value);
  _impl_._has_bits_[0] |= 0x00000001u;
  // @@protoc_insertion_point(field_set:ChangeRoomInfoPBComponent.scene_confid)
}
inline ::uint32_t ChangeRoomInfoPBComponent::_internal_scene_confid() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.scene_confid_;
}
inline void ChangeRoomInfoPBComponent::_internal_set_scene_confid(::uint32_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.scene_confid_ = value;
}

// uint32 guid = 2;
inline void ChangeRoomInfoPBComponent::clear_guid() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.guid_ = 0u;
  _impl_._has_bits_[0] &= ~0x00000002u;
}
inline ::uint32_t ChangeRoomInfoPBComponent::guid() const {
  // @@protoc_insertion_point(field_get:ChangeRoomInfoPBComponent.guid)
  return _internal_guid();
}
inline void ChangeRoomInfoPBComponent::set_guid(::uint32_t value) {
  _internal_set_guid(value);
  _impl_._has_bits_[0] |= 0x00000002u;
  // @@protoc_insertion_point(field_set:ChangeRoomInfoPBComponent.guid)
}
inline ::uint32_t ChangeRoomInfoPBComponent::_internal_guid() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.guid_;
}
inline void ChangeRoomInfoPBComponent::_internal_set_guid(::uint32_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.guid_ = value;
}

// uint32 dungen_confid = 3;
inline void ChangeRoomInfoPBComponent::clear_dungen_confid() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.dungen_confid_ = 0u;
  _impl_._has_bits_[0] &= ~0x00000004u;
}
inline ::uint32_t ChangeRoomInfoPBComponent::dungen_confid() const {
  // @@protoc_insertion_point(field_get:ChangeRoomInfoPBComponent.dungen_confid)
  return _internal_dungen_confid();
}
inline void ChangeRoomInfoPBComponent::set_dungen_confid(::uint32_t value) {
  _internal_set_dungen_confid(value);
  _impl_._has_bits_[0] |= 0x00000004u;
  // @@protoc_insertion_point(field_set:ChangeRoomInfoPBComponent.dungen_confid)
}
inline ::uint32_t ChangeRoomInfoPBComponent::_internal_dungen_confid() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.dungen_confid_;
}
inline void ChangeRoomInfoPBComponent::_internal_set_dungen_confid(::uint32_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.dungen_confid_ = value;
}

// uint32 mirror_confid = 4;
inline void ChangeRoomInfoPBComponent::clear_mirror_confid() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.mirror_confid_ = 0u;
  _impl_._has_bits_[0] &= ~0x00000008u;
}
inline ::uint32_t ChangeRoomInfoPBComponent::mirror_confid() const {
  // @@protoc_insertion_point(field_get:ChangeRoomInfoPBComponent.mirror_confid)
  return _internal_mirror_confid();
}
inline void ChangeRoomInfoPBComponent::set_mirror_confid(::uint32_t value) {
  _internal_set_mirror_confid(value);
  _impl_._has_bits_[0] |= 0x00000008u;
  // @@protoc_insertion_point(field_set:ChangeRoomInfoPBComponent.mirror_confid)
}
inline ::uint32_t ChangeRoomInfoPBComponent::_internal_mirror_confid() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.mirror_confid_;
}
inline void ChangeRoomInfoPBComponent::_internal_set_mirror_confid(::uint32_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.mirror_confid_ = value;
}

// uint32 change_sequence = 5;
inline void ChangeRoomInfoPBComponent::clear_change_sequence() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.change_sequence_ = 0u;
  _impl_._has_bits_[0] &= ~0x00000010u;
}
inline ::uint32_t ChangeRoomInfoPBComponent::change_sequence() const {
  // @@protoc_insertion_point(field_get:ChangeRoomInfoPBComponent.change_sequence)
  return _internal_change_sequence();
}
inline void ChangeRoomInfoPBComponent::set_change_sequence(::uint32_t value) {
  _internal_set_change_sequence(value);
  _impl_._has_bits_[0] |= 0x00000010u;
  // @@protoc_insertion_point(field_set:ChangeRoomInfoPBComponent.change_sequence)
}
inline ::uint32_t ChangeRoomInfoPBComponent::_internal_change_sequence() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.change_sequence_;
}
inline void ChangeRoomInfoPBComponent::_internal_set_change_sequence(::uint32_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.change_sequence_ = value;
}

// uint32 change_gs_type = 6;
inline void ChangeRoomInfoPBComponent::clear_change_gs_type() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.change_gs_type_ = 0u;
  _impl_._has_bits_[0] &= ~0x00000020u;
}
inline ::uint32_t ChangeRoomInfoPBComponent::change_gs_type() const {
  // @@protoc_insertion_point(field_get:ChangeRoomInfoPBComponent.change_gs_type)
  return _internal_change_gs_type();
}
inline void ChangeRoomInfoPBComponent::set_change_gs_type(::uint32_t value) {
  _internal_set_change_gs_type(value);
  _impl_._has_bits_[0] |= 0x00000020u;
  // @@protoc_insertion_point(field_set:ChangeRoomInfoPBComponent.change_gs_type)
}
inline ::uint32_t ChangeRoomInfoPBComponent::_internal_change_gs_type() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.change_gs_type_;
}
inline void ChangeRoomInfoPBComponent::_internal_set_change_gs_type(::uint32_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.change_gs_type_ = value;
}

// uint64 change_time = 7;
inline void ChangeRoomInfoPBComponent::clear_change_time() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.change_time_ = ::uint64_t{0u};
  _impl_._has_bits_[0] &= ~0x00000040u;
}
inline ::uint64_t ChangeRoomInfoPBComponent::change_time() const {
  // @@protoc_insertion_point(field_get:ChangeRoomInfoPBComponent.change_time)
  return _internal_change_time();
}
inline void ChangeRoomInfoPBComponent::set_change_time(::uint64_t value) {
  _internal_set_change_time(value);
  _impl_._has_bits_[0] |= 0x00000040u;
  // @@protoc_insertion_point(field_set:ChangeRoomInfoPBComponent.change_time)
}
inline ::uint64_t ChangeRoomInfoPBComponent::_internal_change_time() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.change_time_;
}
inline void ChangeRoomInfoPBComponent::_internal_set_change_time(::uint64_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.change_time_ = value;
}

// bool ignore_full = 8;
inline void ChangeRoomInfoPBComponent::clear_ignore_full() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.ignore_full_ = false;
  _impl_._has_bits_[0] &= ~0x00000100u;
}
inline bool ChangeRoomInfoPBComponent::ignore_full() const {
  // @@protoc_insertion_point(field_get:ChangeRoomInfoPBComponent.ignore_full)
  return _internal_ignore_full();
}
inline void ChangeRoomInfoPBComponent::set_ignore_full(bool value) {
  _internal_set_ignore_full(value);
  _impl_._has_bits_[0] |= 0x00000100u;
  // @@protoc_insertion_point(field_set:ChangeRoomInfoPBComponent.ignore_full)
}
inline bool ChangeRoomInfoPBComponent::_internal_ignore_full() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.ignore_full_;
}
inline void ChangeRoomInfoPBComponent::_internal_set_ignore_full(bool value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.ignore_full_ = value;
}

// bool processing = 9;
inline void ChangeRoomInfoPBComponent::clear_processing() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.processing_ = false;
  _impl_._has_bits_[0] &= ~0x00000200u;
}
inline bool ChangeRoomInfoPBComponent::processing() const {
  // @@protoc_insertion_point(field_get:ChangeRoomInfoPBComponent.processing)
  return _internal_processing();
}
inline void ChangeRoomInfoPBComponent::set_processing(bool value) {
  _internal_set_processing(value);
  _impl_._has_bits_[0] |= 0x00000200u;
  // @@protoc_insertion_point(field_set:ChangeRoomInfoPBComponent.processing)
}
inline bool ChangeRoomInfoPBComponent::_internal_processing() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.processing_;
}
inline void ChangeRoomInfoPBComponent::_internal_set_processing(bool value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.processing_ = value;
}

// uint32 state = 10;
inline void ChangeRoomInfoPBComponent::clear_state() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.state_ = 0u;
  _impl_._has_bits_[0] &= ~0x00000080u;
}
inline ::uint32_t ChangeRoomInfoPBComponent::state() const {
  // @@protoc_insertion_point(field_get:ChangeRoomInfoPBComponent.state)
  return _internal_state();
}
inline void ChangeRoomInfoPBComponent::set_state(::uint32_t value) {
  _internal_set_state(value);
  _impl_._has_bits_[0] |= 0x00000080u;
  // @@protoc_insertion_point(field_set:ChangeRoomInfoPBComponent.state)
}
inline ::uint32_t ChangeRoomInfoPBComponent::_internal_state() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.state_;
}
inline void ChangeRoomInfoPBComponent::_internal_set_state(::uint32_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.state_ = value;
}

// uint32 from_zone_id = 11;
inline void ChangeRoomInfoPBComponent::clear_from_zone_id() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.from_zone_id_ = 0u;
  _impl_._has_bits_[0] &= ~0x00000800u;
}
inline ::uint32_t ChangeRoomInfoPBComponent::from_zone_id() const {
  // @@protoc_insertion_point(field_get:ChangeRoomInfoPBComponent.from_zone_id)
  return _internal_from_zone_id();
}
inline void ChangeRoomInfoPBComponent::set_from_zone_id(::uint32_t value) {
  _internal_set_from_zone_id(value);
  _impl_._has_bits_[0] |= 0x00000800u;
  // @@protoc_insertion_point(field_set:ChangeRoomInfoPBComponent.from_zone_id)
}
inline ::uint32_t ChangeRoomInfoPBComponent::_internal_from_zone_id() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.from_zone_id_;
}
inline void ChangeRoomInfoPBComponent::_internal_set_from_zone_id(::uint32_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.from_zone_id_ = value;
}

// uint32 to_zone_id = 12;
inline void ChangeRoomInfoPBComponent::clear_to_zone_id() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.to_zone_id_ = 0u;
  _impl_._has_bits_[0] &= ~0x00001000u;
}
inline ::uint32_t ChangeRoomInfoPBComponent::to_zone_id() const {
  // @@protoc_insertion_point(field_get:ChangeRoomInfoPBComponent.to_zone_id)
  return _internal_to_zone_id();
}
inline void ChangeRoomInfoPBComponent::set_to_zone_id(::uint32_t value) {
  _internal_set_to_zone_id(value);
  _impl_._has_bits_[0] |= 0x00001000u;
  // @@protoc_insertion_point(field_set:ChangeRoomInfoPBComponent.to_zone_id)
}
inline ::uint32_t ChangeRoomInfoPBComponent::_internal_to_zone_id() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.to_zone_id_;
}
inline void ChangeRoomInfoPBComponent::_internal_set_to_zone_id(::uint32_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.to_zone_id_ = value;
}

// bool is_cross_zone = 13;
inline void ChangeRoomInfoPBComponent::clear_is_cross_zone() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.is_cross_zone_ = false;
  _impl_._has_bits_[0] &= ~0x00000400u;
}
inline bool ChangeRoomInfoPBComponent::is_cross_zone() const {
  // @@protoc_insertion_point(field_get:ChangeRoomInfoPBComponent.is_cross_zone)
  return _internal_is_cross_zone();
}
inline void ChangeRoomInfoPBComponent::set_is_cross_zone(bool value) {
  _internal_set_is_cross_zone(value);
  _impl_._has_bits_[0] |= 0x00000400u;
  // @@protoc_insertion_point(field_set:ChangeRoomInfoPBComponent.is_cross_zone)
}
inline bool ChangeRoomInfoPBComponent::_internal_is_cross_zone() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.is_cross_zone_;
}
inline void ChangeRoomInfoPBComponent::_internal_set_is_cross_zone(bool value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.is_cross_zone_ = value;
}

#ifdef __GNUC__
#pragma GCC diagnostic pop
#endif  // __GNUC__

// @@protoc_insertion_point(namespace_scope)


namespace google {
namespace protobuf {

template <>
struct is_proto_enum<::ChangeRoomInfoPBComponent_eChangeGsType> : std::true_type {};
template <>
inline const EnumDescriptor* PROTOBUF_NONNULL GetEnumDescriptor<::ChangeRoomInfoPBComponent_eChangeGsType>() {
  return ::ChangeRoomInfoPBComponent_eChangeGsType_descriptor();
}
template <>
struct is_proto_enum<::ChangeRoomInfoPBComponent_eChangeSceneState> : std::true_type {};
template <>
inline const EnumDescriptor* PROTOBUF_NONNULL GetEnumDescriptor<::ChangeRoomInfoPBComponent_eChangeSceneState>() {
  return ::ChangeRoomInfoPBComponent_eChangeSceneState_descriptor();
}

}  // namespace protobuf
}  // namespace google

// @@protoc_insertion_point(global_scope)

#include "google/protobuf/port_undef.inc"

#endif  // proto_2flogic_2fcomponent_2fscene_5fcomp_2eproto_2epb_2eh
