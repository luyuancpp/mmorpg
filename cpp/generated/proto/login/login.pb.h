// Generated by the protocol buffer compiler.  DO NOT EDIT!
// NO CHECKED-IN PROTOBUF GENCODE
// source: proto/login/login.proto
// Protobuf C++ Version: 5.29.0

#ifndef proto_2flogin_2flogin_2eproto_2epb_2eh
#define proto_2flogin_2flogin_2eproto_2epb_2eh

#include <limits>
#include <string>
#include <type_traits>
#include <utility>

#include "google/protobuf/runtime_version.h"
#if PROTOBUF_VERSION != 5029000
#error "Protobuf C++ gencode is built with an incompatible version of"
#error "Protobuf C++ headers/runtime. See"
#error "https://protobuf.dev/support/cross-version-runtime-guarantee/#cpp"
#endif
#include "google/protobuf/io/coded_stream.h"
#include "google/protobuf/arena.h"
#include "google/protobuf/arenastring.h"
#include "google/protobuf/generated_message_bases.h"
#include "google/protobuf/generated_message_tctable_decl.h"
#include "google/protobuf/generated_message_util.h"
#include "google/protobuf/metadata_lite.h"
#include "google/protobuf/generated_message_reflection.h"
#include "google/protobuf/message.h"
#include "google/protobuf/message_lite.h"
#include "google/protobuf/repeated_field.h"  // IWYU pragma: export
#include "google/protobuf/extension_set.h"  // IWYU pragma: export
#include "google/protobuf/unknown_field_set.h"
#include "proto/common/empty.pb.h"
#include "proto/common/session.pb.h"
#include "proto/common/tip.pb.h"
#include "proto/common/user_accounts.pb.h"
// @@protoc_insertion_point(includes)

// Must be included last.
#include "google/protobuf/port_def.inc"

#define PROTOBUF_INTERNAL_EXPORT_proto_2flogin_2flogin_2eproto

namespace google {
namespace protobuf {
namespace internal {
template <typename T>
::absl::string_view GetAnyMessageName();
}  // namespace internal
}  // namespace protobuf
}  // namespace google

// Internal implementation detail -- do not use these members.
struct TableStruct_proto_2flogin_2flogin_2eproto {
  static const ::uint32_t offsets[];
};
extern const ::google::protobuf::internal::DescriptorTable
    descriptor_table_proto_2flogin_2flogin_2eproto;
namespace loginpb {
class AccountSimplePlayerWrapper;
struct AccountSimplePlayerWrapperDefaultTypeInternal;
extern AccountSimplePlayerWrapperDefaultTypeInternal _AccountSimplePlayerWrapper_default_instance_;
class CreatePlayerRequest;
struct CreatePlayerRequestDefaultTypeInternal;
extern CreatePlayerRequestDefaultTypeInternal _CreatePlayerRequest_default_instance_;
class CreatePlayerResponse;
struct CreatePlayerResponseDefaultTypeInternal;
extern CreatePlayerResponseDefaultTypeInternal _CreatePlayerResponse_default_instance_;
class EnterGameRequest;
struct EnterGameRequestDefaultTypeInternal;
extern EnterGameRequestDefaultTypeInternal _EnterGameRequest_default_instance_;
class EnterGameResponse;
struct EnterGameResponseDefaultTypeInternal;
extern EnterGameResponseDefaultTypeInternal _EnterGameResponse_default_instance_;
class LeaveGameRequest;
struct LeaveGameRequestDefaultTypeInternal;
extern LeaveGameRequestDefaultTypeInternal _LeaveGameRequest_default_instance_;
class LoginNodeDisconnectRequest;
struct LoginNodeDisconnectRequestDefaultTypeInternal;
extern LoginNodeDisconnectRequestDefaultTypeInternal _LoginNodeDisconnectRequest_default_instance_;
class LoginRequest;
struct LoginRequestDefaultTypeInternal;
extern LoginRequestDefaultTypeInternal _LoginRequest_default_instance_;
class LoginResponse;
struct LoginResponseDefaultTypeInternal;
extern LoginResponseDefaultTypeInternal _LoginResponse_default_instance_;
class LoginSessionInfo;
struct LoginSessionInfoDefaultTypeInternal;
extern LoginSessionInfoDefaultTypeInternal _LoginSessionInfo_default_instance_;
class TestResponse;
struct TestResponseDefaultTypeInternal;
extern TestResponseDefaultTypeInternal _TestResponse_default_instance_;
}  // namespace loginpb
namespace google {
namespace protobuf {
}  // namespace protobuf
}  // namespace google

namespace loginpb {

// ===================================================================


// -------------------------------------------------------------------

class LoginSessionInfo final
    : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:loginpb.LoginSessionInfo) */ {
 public:
  inline LoginSessionInfo() : LoginSessionInfo(nullptr) {}
  ~LoginSessionInfo() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(LoginSessionInfo* msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(LoginSessionInfo));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR LoginSessionInfo(
      ::google::protobuf::internal::ConstantInitialized);

  inline LoginSessionInfo(const LoginSessionInfo& from) : LoginSessionInfo(nullptr, from) {}
  inline LoginSessionInfo(LoginSessionInfo&& from) noexcept
      : LoginSessionInfo(nullptr, std::move(from)) {}
  inline LoginSessionInfo& operator=(const LoginSessionInfo& from) {
    CopyFrom(from);
    return *this;
  }
  inline LoginSessionInfo& operator=(LoginSessionInfo&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const LoginSessionInfo& default_instance() {
    return *internal_default_instance();
  }
  static inline const LoginSessionInfo* internal_default_instance() {
    return reinterpret_cast<const LoginSessionInfo*>(
        &_LoginSessionInfo_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 0;
  friend void swap(LoginSessionInfo& a, LoginSessionInfo& b) { a.Swap(&b); }
  inline void Swap(LoginSessionInfo* other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(LoginSessionInfo* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  LoginSessionInfo* New(::google::protobuf::Arena* arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<LoginSessionInfo>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const LoginSessionInfo& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const LoginSessionInfo& from) { LoginSessionInfo::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(LoginSessionInfo* other);
 private:
  template <typename T>
  friend ::absl::string_view(
      ::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "loginpb.LoginSessionInfo"; }

 protected:
  explicit LoginSessionInfo(::google::protobuf::Arena* arena);
  LoginSessionInfo(::google::protobuf::Arena* arena, const LoginSessionInfo& from);
  LoginSessionInfo(::google::protobuf::Arena* arena, LoginSessionInfo&& from) noexcept
      : LoginSessionInfo(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* GetClassData() const PROTOBUF_FINAL;
  static void* PlacementNew_(const void*, void* mem,
                             ::google::protobuf::Arena* arena);
  static constexpr auto InternalNewImpl_();
  static const ::google::protobuf::internal::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kAccountFieldNumber = 1,
    kDeviceIdFieldNumber = 5,
    kFsmFieldNumber = 7,
    kRoleIdFieldNumber = 2,
    kSessionIdFieldNumber = 3,
    kGateIdFieldNumber = 4,
    kLoginTimeFieldNumber = 6,
  };
  // string account = 1;
  void clear_account() ;
  const std::string& account() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_account(Arg_&& arg, Args_... args);
  std::string* mutable_account();
  PROTOBUF_NODISCARD std::string* release_account();
  void set_allocated_account(std::string* value);

  private:
  const std::string& _internal_account() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_account(
      const std::string& value);
  std::string* _internal_mutable_account();

  public:
  // string device_id = 5;
  void clear_device_id() ;
  const std::string& device_id() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_device_id(Arg_&& arg, Args_... args);
  std::string* mutable_device_id();
  PROTOBUF_NODISCARD std::string* release_device_id();
  void set_allocated_device_id(std::string* value);

  private:
  const std::string& _internal_device_id() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_device_id(
      const std::string& value);
  std::string* _internal_mutable_device_id();

  public:
  // string fsm = 7;
  void clear_fsm() ;
  const std::string& fsm() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_fsm(Arg_&& arg, Args_... args);
  std::string* mutable_fsm();
  PROTOBUF_NODISCARD std::string* release_fsm();
  void set_allocated_fsm(std::string* value);

  private:
  const std::string& _internal_fsm() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_fsm(
      const std::string& value);
  std::string* _internal_mutable_fsm();

  public:
  // uint64 role_id = 2;
  void clear_role_id() ;
  ::uint64_t role_id() const;
  void set_role_id(::uint64_t value);

  private:
  ::uint64_t _internal_role_id() const;
  void _internal_set_role_id(::uint64_t value);

  public:
  // uint64 session_id = 3;
  void clear_session_id() ;
  ::uint64_t session_id() const;
  void set_session_id(::uint64_t value);

  private:
  ::uint64_t _internal_session_id() const;
  void _internal_set_session_id(::uint64_t value);

  public:
  // uint64 gate_id = 4;
  void clear_gate_id() ;
  ::uint64_t gate_id() const;
  void set_gate_id(::uint64_t value);

  private:
  ::uint64_t _internal_gate_id() const;
  void _internal_set_gate_id(::uint64_t value);

  public:
  // int64 login_time = 6;
  void clear_login_time() ;
  ::int64_t login_time() const;
  void set_login_time(::int64_t value);

  private:
  ::int64_t _internal_login_time() const;
  void _internal_set_login_time(::int64_t value);

  public:
  // @@protoc_insertion_point(class_scope:loginpb.LoginSessionInfo)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      3, 7, 0,
      52, 2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const LoginSessionInfo& from_msg);
    ::google::protobuf::internal::ArenaStringPtr account_;
    ::google::protobuf::internal::ArenaStringPtr device_id_;
    ::google::protobuf::internal::ArenaStringPtr fsm_;
    ::uint64_t role_id_;
    ::uint64_t session_id_;
    ::uint64_t gate_id_;
    ::int64_t login_time_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_proto_2flogin_2flogin_2eproto;
};
// -------------------------------------------------------------------

class LoginRequest final
    : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:loginpb.LoginRequest) */ {
 public:
  inline LoginRequest() : LoginRequest(nullptr) {}
  ~LoginRequest() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(LoginRequest* msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(LoginRequest));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR LoginRequest(
      ::google::protobuf::internal::ConstantInitialized);

  inline LoginRequest(const LoginRequest& from) : LoginRequest(nullptr, from) {}
  inline LoginRequest(LoginRequest&& from) noexcept
      : LoginRequest(nullptr, std::move(from)) {}
  inline LoginRequest& operator=(const LoginRequest& from) {
    CopyFrom(from);
    return *this;
  }
  inline LoginRequest& operator=(LoginRequest&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const LoginRequest& default_instance() {
    return *internal_default_instance();
  }
  static inline const LoginRequest* internal_default_instance() {
    return reinterpret_cast<const LoginRequest*>(
        &_LoginRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 2;
  friend void swap(LoginRequest& a, LoginRequest& b) { a.Swap(&b); }
  inline void Swap(LoginRequest* other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(LoginRequest* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  LoginRequest* New(::google::protobuf::Arena* arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<LoginRequest>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const LoginRequest& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const LoginRequest& from) { LoginRequest::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(LoginRequest* other);
 private:
  template <typename T>
  friend ::absl::string_view(
      ::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "loginpb.LoginRequest"; }

 protected:
  explicit LoginRequest(::google::protobuf::Arena* arena);
  LoginRequest(::google::protobuf::Arena* arena, const LoginRequest& from);
  LoginRequest(::google::protobuf::Arena* arena, LoginRequest&& from) noexcept
      : LoginRequest(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* GetClassData() const PROTOBUF_FINAL;
  static void* PlacementNew_(const void*, void* mem,
                             ::google::protobuf::Arena* arena);
  static constexpr auto InternalNewImpl_();
  static const ::google::protobuf::internal::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kAccountFieldNumber = 1,
    kPasswordFieldNumber = 2,
  };
  // string account = 1;
  void clear_account() ;
  const std::string& account() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_account(Arg_&& arg, Args_... args);
  std::string* mutable_account();
  PROTOBUF_NODISCARD std::string* release_account();
  void set_allocated_account(std::string* value);

  private:
  const std::string& _internal_account() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_account(
      const std::string& value);
  std::string* _internal_mutable_account();

  public:
  // string password = 2;
  void clear_password() ;
  const std::string& password() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_password(Arg_&& arg, Args_... args);
  std::string* mutable_password();
  PROTOBUF_NODISCARD std::string* release_password();
  void set_allocated_password(std::string* value);

  private:
  const std::string& _internal_password() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_password(
      const std::string& value);
  std::string* _internal_mutable_password();

  public:
  // @@protoc_insertion_point(class_scope:loginpb.LoginRequest)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      1, 2, 0,
      44, 2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const LoginRequest& from_msg);
    ::google::protobuf::internal::ArenaStringPtr account_;
    ::google::protobuf::internal::ArenaStringPtr password_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_proto_2flogin_2flogin_2eproto;
};
// -------------------------------------------------------------------

class LoginNodeDisconnectRequest final
    : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:loginpb.LoginNodeDisconnectRequest) */ {
 public:
  inline LoginNodeDisconnectRequest() : LoginNodeDisconnectRequest(nullptr) {}
  ~LoginNodeDisconnectRequest() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(LoginNodeDisconnectRequest* msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(LoginNodeDisconnectRequest));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR LoginNodeDisconnectRequest(
      ::google::protobuf::internal::ConstantInitialized);

  inline LoginNodeDisconnectRequest(const LoginNodeDisconnectRequest& from) : LoginNodeDisconnectRequest(nullptr, from) {}
  inline LoginNodeDisconnectRequest(LoginNodeDisconnectRequest&& from) noexcept
      : LoginNodeDisconnectRequest(nullptr, std::move(from)) {}
  inline LoginNodeDisconnectRequest& operator=(const LoginNodeDisconnectRequest& from) {
    CopyFrom(from);
    return *this;
  }
  inline LoginNodeDisconnectRequest& operator=(LoginNodeDisconnectRequest&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const LoginNodeDisconnectRequest& default_instance() {
    return *internal_default_instance();
  }
  static inline const LoginNodeDisconnectRequest* internal_default_instance() {
    return reinterpret_cast<const LoginNodeDisconnectRequest*>(
        &_LoginNodeDisconnectRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 10;
  friend void swap(LoginNodeDisconnectRequest& a, LoginNodeDisconnectRequest& b) { a.Swap(&b); }
  inline void Swap(LoginNodeDisconnectRequest* other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(LoginNodeDisconnectRequest* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  LoginNodeDisconnectRequest* New(::google::protobuf::Arena* arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<LoginNodeDisconnectRequest>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const LoginNodeDisconnectRequest& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const LoginNodeDisconnectRequest& from) { LoginNodeDisconnectRequest::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(LoginNodeDisconnectRequest* other);
 private:
  template <typename T>
  friend ::absl::string_view(
      ::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "loginpb.LoginNodeDisconnectRequest"; }

 protected:
  explicit LoginNodeDisconnectRequest(::google::protobuf::Arena* arena);
  LoginNodeDisconnectRequest(::google::protobuf::Arena* arena, const LoginNodeDisconnectRequest& from);
  LoginNodeDisconnectRequest(::google::protobuf::Arena* arena, LoginNodeDisconnectRequest&& from) noexcept
      : LoginNodeDisconnectRequest(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* GetClassData() const PROTOBUF_FINAL;
  static void* PlacementNew_(const void*, void* mem,
                             ::google::protobuf::Arena* arena);
  static constexpr auto InternalNewImpl_();
  static const ::google::protobuf::internal::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kSessionIdFieldNumber = 1,
  };
  // uint64 session_id = 1;
  void clear_session_id() ;
  ::uint64_t session_id() const;
  void set_session_id(::uint64_t value);

  private:
  ::uint64_t _internal_session_id() const;
  void _internal_set_session_id(::uint64_t value);

  public:
  // @@protoc_insertion_point(class_scope:loginpb.LoginNodeDisconnectRequest)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      0, 1, 0,
      0, 2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const LoginNodeDisconnectRequest& from_msg);
    ::uint64_t session_id_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_proto_2flogin_2flogin_2eproto;
};
// -------------------------------------------------------------------

class LeaveGameRequest final
    : public ::google::protobuf::internal::ZeroFieldsBase
/* @@protoc_insertion_point(class_definition:loginpb.LeaveGameRequest) */ {
 public:
  inline LeaveGameRequest() : LeaveGameRequest(nullptr) {}

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(LeaveGameRequest* msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(LeaveGameRequest));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR LeaveGameRequest(
      ::google::protobuf::internal::ConstantInitialized);

  inline LeaveGameRequest(const LeaveGameRequest& from) : LeaveGameRequest(nullptr, from) {}
  inline LeaveGameRequest(LeaveGameRequest&& from) noexcept
      : LeaveGameRequest(nullptr, std::move(from)) {}
  inline LeaveGameRequest& operator=(const LeaveGameRequest& from) {
    CopyFrom(from);
    return *this;
  }
  inline LeaveGameRequest& operator=(LeaveGameRequest&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const LeaveGameRequest& default_instance() {
    return *internal_default_instance();
  }
  static inline const LeaveGameRequest* internal_default_instance() {
    return reinterpret_cast<const LeaveGameRequest*>(
        &_LeaveGameRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 9;
  friend void swap(LeaveGameRequest& a, LeaveGameRequest& b) { a.Swap(&b); }
  inline void Swap(LeaveGameRequest* other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(LeaveGameRequest* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  LeaveGameRequest* New(::google::protobuf::Arena* arena = nullptr) const {
    return ::google::protobuf::internal::ZeroFieldsBase::DefaultConstruct<LeaveGameRequest>(arena);
  }
  using ::google::protobuf::internal::ZeroFieldsBase::CopyFrom;
  inline void CopyFrom(const LeaveGameRequest& from) {
    ::google::protobuf::internal::ZeroFieldsBase::CopyImpl(*this, from);
  }
  using ::google::protobuf::internal::ZeroFieldsBase::MergeFrom;
  void MergeFrom(const LeaveGameRequest& from) {
    ::google::protobuf::internal::ZeroFieldsBase::MergeImpl(*this, from);
  }

  public:
  bool IsInitialized() const {
    return true;
  }
 private:
  template <typename T>
  friend ::absl::string_view(
      ::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "loginpb.LeaveGameRequest"; }

 protected:
  explicit LeaveGameRequest(::google::protobuf::Arena* arena);
  LeaveGameRequest(::google::protobuf::Arena* arena, const LeaveGameRequest& from);
  LeaveGameRequest(::google::protobuf::Arena* arena, LeaveGameRequest&& from) noexcept
      : LeaveGameRequest(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* GetClassData() const PROTOBUF_FINAL;
  static void* PlacementNew_(const void*, void* mem,
                             ::google::protobuf::Arena* arena);
  static constexpr auto InternalNewImpl_();
  static const ::google::protobuf::internal::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  // @@protoc_insertion_point(class_scope:loginpb.LeaveGameRequest)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      0, 0, 0,
      0, 2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const LeaveGameRequest& from_msg);
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  friend struct ::TableStruct_proto_2flogin_2flogin_2eproto;
};
// -------------------------------------------------------------------

class EnterGameRequest final
    : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:loginpb.EnterGameRequest) */ {
 public:
  inline EnterGameRequest() : EnterGameRequest(nullptr) {}
  ~EnterGameRequest() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(EnterGameRequest* msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(EnterGameRequest));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR EnterGameRequest(
      ::google::protobuf::internal::ConstantInitialized);

  inline EnterGameRequest(const EnterGameRequest& from) : EnterGameRequest(nullptr, from) {}
  inline EnterGameRequest(EnterGameRequest&& from) noexcept
      : EnterGameRequest(nullptr, std::move(from)) {}
  inline EnterGameRequest& operator=(const EnterGameRequest& from) {
    CopyFrom(from);
    return *this;
  }
  inline EnterGameRequest& operator=(EnterGameRequest&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const EnterGameRequest& default_instance() {
    return *internal_default_instance();
  }
  static inline const EnterGameRequest* internal_default_instance() {
    return reinterpret_cast<const EnterGameRequest*>(
        &_EnterGameRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 7;
  friend void swap(EnterGameRequest& a, EnterGameRequest& b) { a.Swap(&b); }
  inline void Swap(EnterGameRequest* other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(EnterGameRequest* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  EnterGameRequest* New(::google::protobuf::Arena* arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<EnterGameRequest>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const EnterGameRequest& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const EnterGameRequest& from) { EnterGameRequest::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(EnterGameRequest* other);
 private:
  template <typename T>
  friend ::absl::string_view(
      ::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "loginpb.EnterGameRequest"; }

 protected:
  explicit EnterGameRequest(::google::protobuf::Arena* arena);
  EnterGameRequest(::google::protobuf::Arena* arena, const EnterGameRequest& from);
  EnterGameRequest(::google::protobuf::Arena* arena, EnterGameRequest&& from) noexcept
      : EnterGameRequest(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* GetClassData() const PROTOBUF_FINAL;
  static void* PlacementNew_(const void*, void* mem,
                             ::google::protobuf::Arena* arena);
  static constexpr auto InternalNewImpl_();
  static const ::google::protobuf::internal::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kPlayerIdFieldNumber = 1,
  };
  // uint64 player_id = 1;
  void clear_player_id() ;
  ::uint64_t player_id() const;
  void set_player_id(::uint64_t value);

  private:
  ::uint64_t _internal_player_id() const;
  void _internal_set_player_id(::uint64_t value);

  public:
  // @@protoc_insertion_point(class_scope:loginpb.EnterGameRequest)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      0, 1, 0,
      0, 2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const EnterGameRequest& from_msg);
    ::uint64_t player_id_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_proto_2flogin_2flogin_2eproto;
};
// -------------------------------------------------------------------

class CreatePlayerRequest final
    : public ::google::protobuf::internal::ZeroFieldsBase
/* @@protoc_insertion_point(class_definition:loginpb.CreatePlayerRequest) */ {
 public:
  inline CreatePlayerRequest() : CreatePlayerRequest(nullptr) {}

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(CreatePlayerRequest* msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(CreatePlayerRequest));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR CreatePlayerRequest(
      ::google::protobuf::internal::ConstantInitialized);

  inline CreatePlayerRequest(const CreatePlayerRequest& from) : CreatePlayerRequest(nullptr, from) {}
  inline CreatePlayerRequest(CreatePlayerRequest&& from) noexcept
      : CreatePlayerRequest(nullptr, std::move(from)) {}
  inline CreatePlayerRequest& operator=(const CreatePlayerRequest& from) {
    CopyFrom(from);
    return *this;
  }
  inline CreatePlayerRequest& operator=(CreatePlayerRequest&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const CreatePlayerRequest& default_instance() {
    return *internal_default_instance();
  }
  static inline const CreatePlayerRequest* internal_default_instance() {
    return reinterpret_cast<const CreatePlayerRequest*>(
        &_CreatePlayerRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 5;
  friend void swap(CreatePlayerRequest& a, CreatePlayerRequest& b) { a.Swap(&b); }
  inline void Swap(CreatePlayerRequest* other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(CreatePlayerRequest* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  CreatePlayerRequest* New(::google::protobuf::Arena* arena = nullptr) const {
    return ::google::protobuf::internal::ZeroFieldsBase::DefaultConstruct<CreatePlayerRequest>(arena);
  }
  using ::google::protobuf::internal::ZeroFieldsBase::CopyFrom;
  inline void CopyFrom(const CreatePlayerRequest& from) {
    ::google::protobuf::internal::ZeroFieldsBase::CopyImpl(*this, from);
  }
  using ::google::protobuf::internal::ZeroFieldsBase::MergeFrom;
  void MergeFrom(const CreatePlayerRequest& from) {
    ::google::protobuf::internal::ZeroFieldsBase::MergeImpl(*this, from);
  }

  public:
  bool IsInitialized() const {
    return true;
  }
 private:
  template <typename T>
  friend ::absl::string_view(
      ::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "loginpb.CreatePlayerRequest"; }

 protected:
  explicit CreatePlayerRequest(::google::protobuf::Arena* arena);
  CreatePlayerRequest(::google::protobuf::Arena* arena, const CreatePlayerRequest& from);
  CreatePlayerRequest(::google::protobuf::Arena* arena, CreatePlayerRequest&& from) noexcept
      : CreatePlayerRequest(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* GetClassData() const PROTOBUF_FINAL;
  static void* PlacementNew_(const void*, void* mem,
                             ::google::protobuf::Arena* arena);
  static constexpr auto InternalNewImpl_();
  static const ::google::protobuf::internal::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  // @@protoc_insertion_point(class_scope:loginpb.CreatePlayerRequest)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      0, 0, 0,
      0, 2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const CreatePlayerRequest& from_msg);
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  friend struct ::TableStruct_proto_2flogin_2flogin_2eproto;
};
// -------------------------------------------------------------------

class EnterGameResponse final
    : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:loginpb.EnterGameResponse) */ {
 public:
  inline EnterGameResponse() : EnterGameResponse(nullptr) {}
  ~EnterGameResponse() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(EnterGameResponse* msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(EnterGameResponse));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR EnterGameResponse(
      ::google::protobuf::internal::ConstantInitialized);

  inline EnterGameResponse(const EnterGameResponse& from) : EnterGameResponse(nullptr, from) {}
  inline EnterGameResponse(EnterGameResponse&& from) noexcept
      : EnterGameResponse(nullptr, std::move(from)) {}
  inline EnterGameResponse& operator=(const EnterGameResponse& from) {
    CopyFrom(from);
    return *this;
  }
  inline EnterGameResponse& operator=(EnterGameResponse&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const EnterGameResponse& default_instance() {
    return *internal_default_instance();
  }
  static inline const EnterGameResponse* internal_default_instance() {
    return reinterpret_cast<const EnterGameResponse*>(
        &_EnterGameResponse_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 8;
  friend void swap(EnterGameResponse& a, EnterGameResponse& b) { a.Swap(&b); }
  inline void Swap(EnterGameResponse* other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(EnterGameResponse* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  EnterGameResponse* New(::google::protobuf::Arena* arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<EnterGameResponse>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const EnterGameResponse& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const EnterGameResponse& from) { EnterGameResponse::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(EnterGameResponse* other);
 private:
  template <typename T>
  friend ::absl::string_view(
      ::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "loginpb.EnterGameResponse"; }

 protected:
  explicit EnterGameResponse(::google::protobuf::Arena* arena);
  EnterGameResponse(::google::protobuf::Arena* arena, const EnterGameResponse& from);
  EnterGameResponse(::google::protobuf::Arena* arena, EnterGameResponse&& from) noexcept
      : EnterGameResponse(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* GetClassData() const PROTOBUF_FINAL;
  static void* PlacementNew_(const void*, void* mem,
                             ::google::protobuf::Arena* arena);
  static constexpr auto InternalNewImpl_();
  static const ::google::protobuf::internal::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kErrorMessageFieldNumber = 1,
    kPlayerIdFieldNumber = 2,
  };
  // .TipInfoMessage error_message = 1;
  bool has_error_message() const;
  void clear_error_message() ;
  const ::TipInfoMessage& error_message() const;
  PROTOBUF_NODISCARD ::TipInfoMessage* release_error_message();
  ::TipInfoMessage* mutable_error_message();
  void set_allocated_error_message(::TipInfoMessage* value);
  void unsafe_arena_set_allocated_error_message(::TipInfoMessage* value);
  ::TipInfoMessage* unsafe_arena_release_error_message();

  private:
  const ::TipInfoMessage& _internal_error_message() const;
  ::TipInfoMessage* _internal_mutable_error_message();

  public:
  // uint64 player_id = 2;
  void clear_player_id() ;
  ::uint64_t player_id() const;
  void set_player_id(::uint64_t value);

  private:
  ::uint64_t _internal_player_id() const;
  void _internal_set_player_id(::uint64_t value);

  public:
  // @@protoc_insertion_point(class_scope:loginpb.EnterGameResponse)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      1, 2, 1,
      0, 2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const EnterGameResponse& from_msg);
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    ::TipInfoMessage* error_message_;
    ::uint64_t player_id_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_proto_2flogin_2flogin_2eproto;
};
// -------------------------------------------------------------------

class AccountSimplePlayerWrapper final
    : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:loginpb.AccountSimplePlayerWrapper) */ {
 public:
  inline AccountSimplePlayerWrapper() : AccountSimplePlayerWrapper(nullptr) {}
  ~AccountSimplePlayerWrapper() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(AccountSimplePlayerWrapper* msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(AccountSimplePlayerWrapper));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR AccountSimplePlayerWrapper(
      ::google::protobuf::internal::ConstantInitialized);

  inline AccountSimplePlayerWrapper(const AccountSimplePlayerWrapper& from) : AccountSimplePlayerWrapper(nullptr, from) {}
  inline AccountSimplePlayerWrapper(AccountSimplePlayerWrapper&& from) noexcept
      : AccountSimplePlayerWrapper(nullptr, std::move(from)) {}
  inline AccountSimplePlayerWrapper& operator=(const AccountSimplePlayerWrapper& from) {
    CopyFrom(from);
    return *this;
  }
  inline AccountSimplePlayerWrapper& operator=(AccountSimplePlayerWrapper&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const AccountSimplePlayerWrapper& default_instance() {
    return *internal_default_instance();
  }
  static inline const AccountSimplePlayerWrapper* internal_default_instance() {
    return reinterpret_cast<const AccountSimplePlayerWrapper*>(
        &_AccountSimplePlayerWrapper_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 1;
  friend void swap(AccountSimplePlayerWrapper& a, AccountSimplePlayerWrapper& b) { a.Swap(&b); }
  inline void Swap(AccountSimplePlayerWrapper* other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(AccountSimplePlayerWrapper* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  AccountSimplePlayerWrapper* New(::google::protobuf::Arena* arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<AccountSimplePlayerWrapper>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const AccountSimplePlayerWrapper& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const AccountSimplePlayerWrapper& from) { AccountSimplePlayerWrapper::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(AccountSimplePlayerWrapper* other);
 private:
  template <typename T>
  friend ::absl::string_view(
      ::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "loginpb.AccountSimplePlayerWrapper"; }

 protected:
  explicit AccountSimplePlayerWrapper(::google::protobuf::Arena* arena);
  AccountSimplePlayerWrapper(::google::protobuf::Arena* arena, const AccountSimplePlayerWrapper& from);
  AccountSimplePlayerWrapper(::google::protobuf::Arena* arena, AccountSimplePlayerWrapper&& from) noexcept
      : AccountSimplePlayerWrapper(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* GetClassData() const PROTOBUF_FINAL;
  static void* PlacementNew_(const void*, void* mem,
                             ::google::protobuf::Arena* arena);
  static constexpr auto InternalNewImpl_();
  static const ::google::protobuf::internal::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kPlayerFieldNumber = 1,
  };
  // .AccountSimplePlayer player = 1;
  bool has_player() const;
  void clear_player() ;
  const ::AccountSimplePlayer& player() const;
  PROTOBUF_NODISCARD ::AccountSimplePlayer* release_player();
  ::AccountSimplePlayer* mutable_player();
  void set_allocated_player(::AccountSimplePlayer* value);
  void unsafe_arena_set_allocated_player(::AccountSimplePlayer* value);
  ::AccountSimplePlayer* unsafe_arena_release_player();

  private:
  const ::AccountSimplePlayer& _internal_player() const;
  ::AccountSimplePlayer* _internal_mutable_player();

  public:
  // @@protoc_insertion_point(class_scope:loginpb.AccountSimplePlayerWrapper)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      0, 1, 1,
      0, 2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const AccountSimplePlayerWrapper& from_msg);
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    ::AccountSimplePlayer* player_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_proto_2flogin_2flogin_2eproto;
};
// -------------------------------------------------------------------

class TestResponse final
    : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:loginpb.TestResponse) */ {
 public:
  inline TestResponse() : TestResponse(nullptr) {}
  ~TestResponse() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(TestResponse* msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(TestResponse));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR TestResponse(
      ::google::protobuf::internal::ConstantInitialized);

  inline TestResponse(const TestResponse& from) : TestResponse(nullptr, from) {}
  inline TestResponse(TestResponse&& from) noexcept
      : TestResponse(nullptr, std::move(from)) {}
  inline TestResponse& operator=(const TestResponse& from) {
    CopyFrom(from);
    return *this;
  }
  inline TestResponse& operator=(TestResponse&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const TestResponse& default_instance() {
    return *internal_default_instance();
  }
  static inline const TestResponse* internal_default_instance() {
    return reinterpret_cast<const TestResponse*>(
        &_TestResponse_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 4;
  friend void swap(TestResponse& a, TestResponse& b) { a.Swap(&b); }
  inline void Swap(TestResponse* other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(TestResponse* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  TestResponse* New(::google::protobuf::Arena* arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<TestResponse>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const TestResponse& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const TestResponse& from) { TestResponse::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(TestResponse* other);
 private:
  template <typename T>
  friend ::absl::string_view(
      ::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "loginpb.TestResponse"; }

 protected:
  explicit TestResponse(::google::protobuf::Arena* arena);
  TestResponse(::google::protobuf::Arena* arena, const TestResponse& from);
  TestResponse(::google::protobuf::Arena* arena, TestResponse&& from) noexcept
      : TestResponse(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* GetClassData() const PROTOBUF_FINAL;
  static void* PlacementNew_(const void*, void* mem,
                             ::google::protobuf::Arena* arena);
  static constexpr auto InternalNewImpl_();
  static const ::google::protobuf::internal::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kPlayersFieldNumber = 2,
    kTeststringFieldNumber = 3,
    kTestintFieldNumber = 4,
    kErrorMessageFieldNumber = 1,
  };
  // repeated .loginpb.AccountSimplePlayerWrapper players = 2;
  int players_size() const;
  private:
  int _internal_players_size() const;

  public:
  void clear_players() ;
  ::loginpb::AccountSimplePlayerWrapper* mutable_players(int index);
  ::google::protobuf::RepeatedPtrField<::loginpb::AccountSimplePlayerWrapper>* mutable_players();

  private:
  const ::google::protobuf::RepeatedPtrField<::loginpb::AccountSimplePlayerWrapper>& _internal_players() const;
  ::google::protobuf::RepeatedPtrField<::loginpb::AccountSimplePlayerWrapper>* _internal_mutable_players();
  public:
  const ::loginpb::AccountSimplePlayerWrapper& players(int index) const;
  ::loginpb::AccountSimplePlayerWrapper* add_players();
  const ::google::protobuf::RepeatedPtrField<::loginpb::AccountSimplePlayerWrapper>& players() const;
  // repeated string teststring = 3;
  int teststring_size() const;
  private:
  int _internal_teststring_size() const;

  public:
  void clear_teststring() ;
  const std::string& teststring(int index) const;
  std::string* mutable_teststring(int index);
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_teststring(int index, Arg_&& value, Args_... args);
  std::string* add_teststring();
  template <typename Arg_ = const std::string&, typename... Args_>
  void add_teststring(Arg_&& value, Args_... args);
  const ::google::protobuf::RepeatedPtrField<std::string>& teststring() const;
  ::google::protobuf::RepeatedPtrField<std::string>* mutable_teststring();

  private:
  const ::google::protobuf::RepeatedPtrField<std::string>& _internal_teststring() const;
  ::google::protobuf::RepeatedPtrField<std::string>* _internal_mutable_teststring();

  public:
  // repeated int32 testint = 4;
  int testint_size() const;
  private:
  int _internal_testint_size() const;

  public:
  void clear_testint() ;
  ::int32_t testint(int index) const;
  void set_testint(int index, ::int32_t value);
  void add_testint(::int32_t value);
  const ::google::protobuf::RepeatedField<::int32_t>& testint() const;
  ::google::protobuf::RepeatedField<::int32_t>* mutable_testint();

  private:
  const ::google::protobuf::RepeatedField<::int32_t>& _internal_testint() const;
  ::google::protobuf::RepeatedField<::int32_t>* _internal_mutable_testint();

  public:
  // .TipInfoMessage error_message = 1;
  bool has_error_message() const;
  void clear_error_message() ;
  const ::TipInfoMessage& error_message() const;
  PROTOBUF_NODISCARD ::TipInfoMessage* release_error_message();
  ::TipInfoMessage* mutable_error_message();
  void set_allocated_error_message(::TipInfoMessage* value);
  void unsafe_arena_set_allocated_error_message(::TipInfoMessage* value);
  ::TipInfoMessage* unsafe_arena_release_error_message();

  private:
  const ::TipInfoMessage& _internal_error_message() const;
  ::TipInfoMessage* _internal_mutable_error_message();

  public:
  // @@protoc_insertion_point(class_scope:loginpb.TestResponse)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      2, 4, 2,
      39, 2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const TestResponse& from_msg);
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    ::google::protobuf::RepeatedPtrField< ::loginpb::AccountSimplePlayerWrapper > players_;
    ::google::protobuf::RepeatedPtrField<std::string> teststring_;
    ::google::protobuf::RepeatedField<::int32_t> testint_;
    ::google::protobuf::internal::CachedSize _testint_cached_byte_size_;
    ::TipInfoMessage* error_message_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_proto_2flogin_2flogin_2eproto;
};
// -------------------------------------------------------------------

class LoginResponse final
    : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:loginpb.LoginResponse) */ {
 public:
  inline LoginResponse() : LoginResponse(nullptr) {}
  ~LoginResponse() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(LoginResponse* msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(LoginResponse));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR LoginResponse(
      ::google::protobuf::internal::ConstantInitialized);

  inline LoginResponse(const LoginResponse& from) : LoginResponse(nullptr, from) {}
  inline LoginResponse(LoginResponse&& from) noexcept
      : LoginResponse(nullptr, std::move(from)) {}
  inline LoginResponse& operator=(const LoginResponse& from) {
    CopyFrom(from);
    return *this;
  }
  inline LoginResponse& operator=(LoginResponse&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const LoginResponse& default_instance() {
    return *internal_default_instance();
  }
  static inline const LoginResponse* internal_default_instance() {
    return reinterpret_cast<const LoginResponse*>(
        &_LoginResponse_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 3;
  friend void swap(LoginResponse& a, LoginResponse& b) { a.Swap(&b); }
  inline void Swap(LoginResponse* other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(LoginResponse* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  LoginResponse* New(::google::protobuf::Arena* arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<LoginResponse>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const LoginResponse& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const LoginResponse& from) { LoginResponse::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(LoginResponse* other);
 private:
  template <typename T>
  friend ::absl::string_view(
      ::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "loginpb.LoginResponse"; }

 protected:
  explicit LoginResponse(::google::protobuf::Arena* arena);
  LoginResponse(::google::protobuf::Arena* arena, const LoginResponse& from);
  LoginResponse(::google::protobuf::Arena* arena, LoginResponse&& from) noexcept
      : LoginResponse(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* GetClassData() const PROTOBUF_FINAL;
  static void* PlacementNew_(const void*, void* mem,
                             ::google::protobuf::Arena* arena);
  static constexpr auto InternalNewImpl_();
  static const ::google::protobuf::internal::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kPlayersFieldNumber = 2,
    kErrorMessageFieldNumber = 1,
  };
  // repeated .loginpb.AccountSimplePlayerWrapper players = 2;
  int players_size() const;
  private:
  int _internal_players_size() const;

  public:
  void clear_players() ;
  ::loginpb::AccountSimplePlayerWrapper* mutable_players(int index);
  ::google::protobuf::RepeatedPtrField<::loginpb::AccountSimplePlayerWrapper>* mutable_players();

  private:
  const ::google::protobuf::RepeatedPtrField<::loginpb::AccountSimplePlayerWrapper>& _internal_players() const;
  ::google::protobuf::RepeatedPtrField<::loginpb::AccountSimplePlayerWrapper>* _internal_mutable_players();
  public:
  const ::loginpb::AccountSimplePlayerWrapper& players(int index) const;
  ::loginpb::AccountSimplePlayerWrapper* add_players();
  const ::google::protobuf::RepeatedPtrField<::loginpb::AccountSimplePlayerWrapper>& players() const;
  // .TipInfoMessage error_message = 1;
  bool has_error_message() const;
  void clear_error_message() ;
  const ::TipInfoMessage& error_message() const;
  PROTOBUF_NODISCARD ::TipInfoMessage* release_error_message();
  ::TipInfoMessage* mutable_error_message();
  void set_allocated_error_message(::TipInfoMessage* value);
  void unsafe_arena_set_allocated_error_message(::TipInfoMessage* value);
  ::TipInfoMessage* unsafe_arena_release_error_message();

  private:
  const ::TipInfoMessage& _internal_error_message() const;
  ::TipInfoMessage* _internal_mutable_error_message();

  public:
  // @@protoc_insertion_point(class_scope:loginpb.LoginResponse)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      1, 2, 2,
      0, 2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const LoginResponse& from_msg);
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    ::google::protobuf::RepeatedPtrField< ::loginpb::AccountSimplePlayerWrapper > players_;
    ::TipInfoMessage* error_message_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_proto_2flogin_2flogin_2eproto;
};
// -------------------------------------------------------------------

class CreatePlayerResponse final
    : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:loginpb.CreatePlayerResponse) */ {
 public:
  inline CreatePlayerResponse() : CreatePlayerResponse(nullptr) {}
  ~CreatePlayerResponse() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(CreatePlayerResponse* msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(CreatePlayerResponse));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR CreatePlayerResponse(
      ::google::protobuf::internal::ConstantInitialized);

  inline CreatePlayerResponse(const CreatePlayerResponse& from) : CreatePlayerResponse(nullptr, from) {}
  inline CreatePlayerResponse(CreatePlayerResponse&& from) noexcept
      : CreatePlayerResponse(nullptr, std::move(from)) {}
  inline CreatePlayerResponse& operator=(const CreatePlayerResponse& from) {
    CopyFrom(from);
    return *this;
  }
  inline CreatePlayerResponse& operator=(CreatePlayerResponse&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const CreatePlayerResponse& default_instance() {
    return *internal_default_instance();
  }
  static inline const CreatePlayerResponse* internal_default_instance() {
    return reinterpret_cast<const CreatePlayerResponse*>(
        &_CreatePlayerResponse_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 6;
  friend void swap(CreatePlayerResponse& a, CreatePlayerResponse& b) { a.Swap(&b); }
  inline void Swap(CreatePlayerResponse* other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(CreatePlayerResponse* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  CreatePlayerResponse* New(::google::protobuf::Arena* arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<CreatePlayerResponse>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const CreatePlayerResponse& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const CreatePlayerResponse& from) { CreatePlayerResponse::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(CreatePlayerResponse* other);
 private:
  template <typename T>
  friend ::absl::string_view(
      ::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "loginpb.CreatePlayerResponse"; }

 protected:
  explicit CreatePlayerResponse(::google::protobuf::Arena* arena);
  CreatePlayerResponse(::google::protobuf::Arena* arena, const CreatePlayerResponse& from);
  CreatePlayerResponse(::google::protobuf::Arena* arena, CreatePlayerResponse&& from) noexcept
      : CreatePlayerResponse(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* GetClassData() const PROTOBUF_FINAL;
  static void* PlacementNew_(const void*, void* mem,
                             ::google::protobuf::Arena* arena);
  static constexpr auto InternalNewImpl_();
  static const ::google::protobuf::internal::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kPlayersFieldNumber = 2,
    kErrorMessageFieldNumber = 1,
  };
  // repeated .loginpb.AccountSimplePlayerWrapper players = 2;
  int players_size() const;
  private:
  int _internal_players_size() const;

  public:
  void clear_players() ;
  ::loginpb::AccountSimplePlayerWrapper* mutable_players(int index);
  ::google::protobuf::RepeatedPtrField<::loginpb::AccountSimplePlayerWrapper>* mutable_players();

  private:
  const ::google::protobuf::RepeatedPtrField<::loginpb::AccountSimplePlayerWrapper>& _internal_players() const;
  ::google::protobuf::RepeatedPtrField<::loginpb::AccountSimplePlayerWrapper>* _internal_mutable_players();
  public:
  const ::loginpb::AccountSimplePlayerWrapper& players(int index) const;
  ::loginpb::AccountSimplePlayerWrapper* add_players();
  const ::google::protobuf::RepeatedPtrField<::loginpb::AccountSimplePlayerWrapper>& players() const;
  // .TipInfoMessage error_message = 1;
  bool has_error_message() const;
  void clear_error_message() ;
  const ::TipInfoMessage& error_message() const;
  PROTOBUF_NODISCARD ::TipInfoMessage* release_error_message();
  ::TipInfoMessage* mutable_error_message();
  void set_allocated_error_message(::TipInfoMessage* value);
  void unsafe_arena_set_allocated_error_message(::TipInfoMessage* value);
  ::TipInfoMessage* unsafe_arena_release_error_message();

  private:
  const ::TipInfoMessage& _internal_error_message() const;
  ::TipInfoMessage* _internal_mutable_error_message();

  public:
  // @@protoc_insertion_point(class_scope:loginpb.CreatePlayerResponse)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      1, 2, 2,
      0, 2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const CreatePlayerResponse& from_msg);
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    ::google::protobuf::RepeatedPtrField< ::loginpb::AccountSimplePlayerWrapper > players_;
    ::TipInfoMessage* error_message_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_proto_2flogin_2flogin_2eproto;
};

// ===================================================================




// ===================================================================


#ifdef __GNUC__
#pragma GCC diagnostic push
#pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif  // __GNUC__
// -------------------------------------------------------------------

// LoginSessionInfo

// string account = 1;
inline void LoginSessionInfo::clear_account() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.account_.ClearToEmpty();
}
inline const std::string& LoginSessionInfo::account() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:loginpb.LoginSessionInfo.account)
  return _internal_account();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void LoginSessionInfo::set_account(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.account_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:loginpb.LoginSessionInfo.account)
}
inline std::string* LoginSessionInfo::mutable_account() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_account();
  // @@protoc_insertion_point(field_mutable:loginpb.LoginSessionInfo.account)
  return _s;
}
inline const std::string& LoginSessionInfo::_internal_account() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.account_.Get();
}
inline void LoginSessionInfo::_internal_set_account(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.account_.Set(value, GetArena());
}
inline std::string* LoginSessionInfo::_internal_mutable_account() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.account_.Mutable( GetArena());
}
inline std::string* LoginSessionInfo::release_account() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:loginpb.LoginSessionInfo.account)
  return _impl_.account_.Release();
}
inline void LoginSessionInfo::set_allocated_account(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.account_.SetAllocated(value, GetArena());
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString() && _impl_.account_.IsDefault()) {
    _impl_.account_.Set("", GetArena());
  }
  // @@protoc_insertion_point(field_set_allocated:loginpb.LoginSessionInfo.account)
}

// uint64 role_id = 2;
inline void LoginSessionInfo::clear_role_id() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.role_id_ = ::uint64_t{0u};
}
inline ::uint64_t LoginSessionInfo::role_id() const {
  // @@protoc_insertion_point(field_get:loginpb.LoginSessionInfo.role_id)
  return _internal_role_id();
}
inline void LoginSessionInfo::set_role_id(::uint64_t value) {
  _internal_set_role_id(value);
  // @@protoc_insertion_point(field_set:loginpb.LoginSessionInfo.role_id)
}
inline ::uint64_t LoginSessionInfo::_internal_role_id() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.role_id_;
}
inline void LoginSessionInfo::_internal_set_role_id(::uint64_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.role_id_ = value;
}

// uint64 session_id = 3;
inline void LoginSessionInfo::clear_session_id() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.session_id_ = ::uint64_t{0u};
}
inline ::uint64_t LoginSessionInfo::session_id() const {
  // @@protoc_insertion_point(field_get:loginpb.LoginSessionInfo.session_id)
  return _internal_session_id();
}
inline void LoginSessionInfo::set_session_id(::uint64_t value) {
  _internal_set_session_id(value);
  // @@protoc_insertion_point(field_set:loginpb.LoginSessionInfo.session_id)
}
inline ::uint64_t LoginSessionInfo::_internal_session_id() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.session_id_;
}
inline void LoginSessionInfo::_internal_set_session_id(::uint64_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.session_id_ = value;
}

// uint64 gate_id = 4;
inline void LoginSessionInfo::clear_gate_id() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.gate_id_ = ::uint64_t{0u};
}
inline ::uint64_t LoginSessionInfo::gate_id() const {
  // @@protoc_insertion_point(field_get:loginpb.LoginSessionInfo.gate_id)
  return _internal_gate_id();
}
inline void LoginSessionInfo::set_gate_id(::uint64_t value) {
  _internal_set_gate_id(value);
  // @@protoc_insertion_point(field_set:loginpb.LoginSessionInfo.gate_id)
}
inline ::uint64_t LoginSessionInfo::_internal_gate_id() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.gate_id_;
}
inline void LoginSessionInfo::_internal_set_gate_id(::uint64_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.gate_id_ = value;
}

// string device_id = 5;
inline void LoginSessionInfo::clear_device_id() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.device_id_.ClearToEmpty();
}
inline const std::string& LoginSessionInfo::device_id() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:loginpb.LoginSessionInfo.device_id)
  return _internal_device_id();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void LoginSessionInfo::set_device_id(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.device_id_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:loginpb.LoginSessionInfo.device_id)
}
inline std::string* LoginSessionInfo::mutable_device_id() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_device_id();
  // @@protoc_insertion_point(field_mutable:loginpb.LoginSessionInfo.device_id)
  return _s;
}
inline const std::string& LoginSessionInfo::_internal_device_id() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.device_id_.Get();
}
inline void LoginSessionInfo::_internal_set_device_id(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.device_id_.Set(value, GetArena());
}
inline std::string* LoginSessionInfo::_internal_mutable_device_id() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.device_id_.Mutable( GetArena());
}
inline std::string* LoginSessionInfo::release_device_id() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:loginpb.LoginSessionInfo.device_id)
  return _impl_.device_id_.Release();
}
inline void LoginSessionInfo::set_allocated_device_id(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.device_id_.SetAllocated(value, GetArena());
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString() && _impl_.device_id_.IsDefault()) {
    _impl_.device_id_.Set("", GetArena());
  }
  // @@protoc_insertion_point(field_set_allocated:loginpb.LoginSessionInfo.device_id)
}

// int64 login_time = 6;
inline void LoginSessionInfo::clear_login_time() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.login_time_ = ::int64_t{0};
}
inline ::int64_t LoginSessionInfo::login_time() const {
  // @@protoc_insertion_point(field_get:loginpb.LoginSessionInfo.login_time)
  return _internal_login_time();
}
inline void LoginSessionInfo::set_login_time(::int64_t value) {
  _internal_set_login_time(value);
  // @@protoc_insertion_point(field_set:loginpb.LoginSessionInfo.login_time)
}
inline ::int64_t LoginSessionInfo::_internal_login_time() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.login_time_;
}
inline void LoginSessionInfo::_internal_set_login_time(::int64_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.login_time_ = value;
}

// string fsm = 7;
inline void LoginSessionInfo::clear_fsm() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.fsm_.ClearToEmpty();
}
inline const std::string& LoginSessionInfo::fsm() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:loginpb.LoginSessionInfo.fsm)
  return _internal_fsm();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void LoginSessionInfo::set_fsm(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.fsm_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:loginpb.LoginSessionInfo.fsm)
}
inline std::string* LoginSessionInfo::mutable_fsm() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_fsm();
  // @@protoc_insertion_point(field_mutable:loginpb.LoginSessionInfo.fsm)
  return _s;
}
inline const std::string& LoginSessionInfo::_internal_fsm() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.fsm_.Get();
}
inline void LoginSessionInfo::_internal_set_fsm(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.fsm_.Set(value, GetArena());
}
inline std::string* LoginSessionInfo::_internal_mutable_fsm() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.fsm_.Mutable( GetArena());
}
inline std::string* LoginSessionInfo::release_fsm() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:loginpb.LoginSessionInfo.fsm)
  return _impl_.fsm_.Release();
}
inline void LoginSessionInfo::set_allocated_fsm(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.fsm_.SetAllocated(value, GetArena());
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString() && _impl_.fsm_.IsDefault()) {
    _impl_.fsm_.Set("", GetArena());
  }
  // @@protoc_insertion_point(field_set_allocated:loginpb.LoginSessionInfo.fsm)
}

// -------------------------------------------------------------------

// AccountSimplePlayerWrapper

// .AccountSimplePlayer player = 1;
inline bool AccountSimplePlayerWrapper::has_player() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.player_ != nullptr);
  return value;
}
inline const ::AccountSimplePlayer& AccountSimplePlayerWrapper::_internal_player() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  const ::AccountSimplePlayer* p = _impl_.player_;
  return p != nullptr ? *p : reinterpret_cast<const ::AccountSimplePlayer&>(::_AccountSimplePlayer_default_instance_);
}
inline const ::AccountSimplePlayer& AccountSimplePlayerWrapper::player() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:loginpb.AccountSimplePlayerWrapper.player)
  return _internal_player();
}
inline void AccountSimplePlayerWrapper::unsafe_arena_set_allocated_player(::AccountSimplePlayer* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.player_);
  }
  _impl_.player_ = reinterpret_cast<::AccountSimplePlayer*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:loginpb.AccountSimplePlayerWrapper.player)
}
inline ::AccountSimplePlayer* AccountSimplePlayerWrapper::release_player() {
  ::google::protobuf::internal::TSanWrite(&_impl_);

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::AccountSimplePlayer* released = _impl_.player_;
  _impl_.player_ = nullptr;
  if (::google::protobuf::internal::DebugHardenForceCopyInRelease()) {
    auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    if (GetArena() == nullptr) {
      delete old;
    }
  } else {
    if (GetArena() != nullptr) {
      released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    }
  }
  return released;
}
inline ::AccountSimplePlayer* AccountSimplePlayerWrapper::unsafe_arena_release_player() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:loginpb.AccountSimplePlayerWrapper.player)

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::AccountSimplePlayer* temp = _impl_.player_;
  _impl_.player_ = nullptr;
  return temp;
}
inline ::AccountSimplePlayer* AccountSimplePlayerWrapper::_internal_mutable_player() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.player_ == nullptr) {
    auto* p = ::google::protobuf::Message::DefaultConstruct<::AccountSimplePlayer>(GetArena());
    _impl_.player_ = reinterpret_cast<::AccountSimplePlayer*>(p);
  }
  return _impl_.player_;
}
inline ::AccountSimplePlayer* AccountSimplePlayerWrapper::mutable_player() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  _impl_._has_bits_[0] |= 0x00000001u;
  ::AccountSimplePlayer* _msg = _internal_mutable_player();
  // @@protoc_insertion_point(field_mutable:loginpb.AccountSimplePlayerWrapper.player)
  return _msg;
}
inline void AccountSimplePlayerWrapper::set_allocated_player(::AccountSimplePlayer* value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (message_arena == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.player_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = reinterpret_cast<::google::protobuf::MessageLite*>(value)->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }

  _impl_.player_ = reinterpret_cast<::AccountSimplePlayer*>(value);
  // @@protoc_insertion_point(field_set_allocated:loginpb.AccountSimplePlayerWrapper.player)
}

// -------------------------------------------------------------------

// LoginRequest

// string account = 1;
inline void LoginRequest::clear_account() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.account_.ClearToEmpty();
}
inline const std::string& LoginRequest::account() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:loginpb.LoginRequest.account)
  return _internal_account();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void LoginRequest::set_account(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.account_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:loginpb.LoginRequest.account)
}
inline std::string* LoginRequest::mutable_account() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_account();
  // @@protoc_insertion_point(field_mutable:loginpb.LoginRequest.account)
  return _s;
}
inline const std::string& LoginRequest::_internal_account() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.account_.Get();
}
inline void LoginRequest::_internal_set_account(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.account_.Set(value, GetArena());
}
inline std::string* LoginRequest::_internal_mutable_account() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.account_.Mutable( GetArena());
}
inline std::string* LoginRequest::release_account() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:loginpb.LoginRequest.account)
  return _impl_.account_.Release();
}
inline void LoginRequest::set_allocated_account(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.account_.SetAllocated(value, GetArena());
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString() && _impl_.account_.IsDefault()) {
    _impl_.account_.Set("", GetArena());
  }
  // @@protoc_insertion_point(field_set_allocated:loginpb.LoginRequest.account)
}

// string password = 2;
inline void LoginRequest::clear_password() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.password_.ClearToEmpty();
}
inline const std::string& LoginRequest::password() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:loginpb.LoginRequest.password)
  return _internal_password();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void LoginRequest::set_password(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.password_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:loginpb.LoginRequest.password)
}
inline std::string* LoginRequest::mutable_password() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_password();
  // @@protoc_insertion_point(field_mutable:loginpb.LoginRequest.password)
  return _s;
}
inline const std::string& LoginRequest::_internal_password() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.password_.Get();
}
inline void LoginRequest::_internal_set_password(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.password_.Set(value, GetArena());
}
inline std::string* LoginRequest::_internal_mutable_password() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.password_.Mutable( GetArena());
}
inline std::string* LoginRequest::release_password() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:loginpb.LoginRequest.password)
  return _impl_.password_.Release();
}
inline void LoginRequest::set_allocated_password(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.password_.SetAllocated(value, GetArena());
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString() && _impl_.password_.IsDefault()) {
    _impl_.password_.Set("", GetArena());
  }
  // @@protoc_insertion_point(field_set_allocated:loginpb.LoginRequest.password)
}

// -------------------------------------------------------------------

// LoginResponse

// .TipInfoMessage error_message = 1;
inline bool LoginResponse::has_error_message() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.error_message_ != nullptr);
  return value;
}
inline const ::TipInfoMessage& LoginResponse::_internal_error_message() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  const ::TipInfoMessage* p = _impl_.error_message_;
  return p != nullptr ? *p : reinterpret_cast<const ::TipInfoMessage&>(::_TipInfoMessage_default_instance_);
}
inline const ::TipInfoMessage& LoginResponse::error_message() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:loginpb.LoginResponse.error_message)
  return _internal_error_message();
}
inline void LoginResponse::unsafe_arena_set_allocated_error_message(::TipInfoMessage* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.error_message_);
  }
  _impl_.error_message_ = reinterpret_cast<::TipInfoMessage*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:loginpb.LoginResponse.error_message)
}
inline ::TipInfoMessage* LoginResponse::release_error_message() {
  ::google::protobuf::internal::TSanWrite(&_impl_);

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::TipInfoMessage* released = _impl_.error_message_;
  _impl_.error_message_ = nullptr;
  if (::google::protobuf::internal::DebugHardenForceCopyInRelease()) {
    auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    if (GetArena() == nullptr) {
      delete old;
    }
  } else {
    if (GetArena() != nullptr) {
      released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    }
  }
  return released;
}
inline ::TipInfoMessage* LoginResponse::unsafe_arena_release_error_message() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:loginpb.LoginResponse.error_message)

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::TipInfoMessage* temp = _impl_.error_message_;
  _impl_.error_message_ = nullptr;
  return temp;
}
inline ::TipInfoMessage* LoginResponse::_internal_mutable_error_message() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.error_message_ == nullptr) {
    auto* p = ::google::protobuf::Message::DefaultConstruct<::TipInfoMessage>(GetArena());
    _impl_.error_message_ = reinterpret_cast<::TipInfoMessage*>(p);
  }
  return _impl_.error_message_;
}
inline ::TipInfoMessage* LoginResponse::mutable_error_message() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  _impl_._has_bits_[0] |= 0x00000001u;
  ::TipInfoMessage* _msg = _internal_mutable_error_message();
  // @@protoc_insertion_point(field_mutable:loginpb.LoginResponse.error_message)
  return _msg;
}
inline void LoginResponse::set_allocated_error_message(::TipInfoMessage* value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (message_arena == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.error_message_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = reinterpret_cast<::google::protobuf::MessageLite*>(value)->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }

  _impl_.error_message_ = reinterpret_cast<::TipInfoMessage*>(value);
  // @@protoc_insertion_point(field_set_allocated:loginpb.LoginResponse.error_message)
}

// repeated .loginpb.AccountSimplePlayerWrapper players = 2;
inline int LoginResponse::_internal_players_size() const {
  return _internal_players().size();
}
inline int LoginResponse::players_size() const {
  return _internal_players_size();
}
inline void LoginResponse::clear_players() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.players_.Clear();
}
inline ::loginpb::AccountSimplePlayerWrapper* LoginResponse::mutable_players(int index)
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable:loginpb.LoginResponse.players)
  return _internal_mutable_players()->Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField<::loginpb::AccountSimplePlayerWrapper>* LoginResponse::mutable_players()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable_list:loginpb.LoginResponse.players)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _internal_mutable_players();
}
inline const ::loginpb::AccountSimplePlayerWrapper& LoginResponse::players(int index) const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:loginpb.LoginResponse.players)
  return _internal_players().Get(index);
}
inline ::loginpb::AccountSimplePlayerWrapper* LoginResponse::add_players() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::loginpb::AccountSimplePlayerWrapper* _add = _internal_mutable_players()->Add();
  // @@protoc_insertion_point(field_add:loginpb.LoginResponse.players)
  return _add;
}
inline const ::google::protobuf::RepeatedPtrField<::loginpb::AccountSimplePlayerWrapper>& LoginResponse::players() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_list:loginpb.LoginResponse.players)
  return _internal_players();
}
inline const ::google::protobuf::RepeatedPtrField<::loginpb::AccountSimplePlayerWrapper>&
LoginResponse::_internal_players() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.players_;
}
inline ::google::protobuf::RepeatedPtrField<::loginpb::AccountSimplePlayerWrapper>*
LoginResponse::_internal_mutable_players() {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return &_impl_.players_;
}

// -------------------------------------------------------------------

// TestResponse

// .TipInfoMessage error_message = 1;
inline bool TestResponse::has_error_message() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.error_message_ != nullptr);
  return value;
}
inline const ::TipInfoMessage& TestResponse::_internal_error_message() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  const ::TipInfoMessage* p = _impl_.error_message_;
  return p != nullptr ? *p : reinterpret_cast<const ::TipInfoMessage&>(::_TipInfoMessage_default_instance_);
}
inline const ::TipInfoMessage& TestResponse::error_message() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:loginpb.TestResponse.error_message)
  return _internal_error_message();
}
inline void TestResponse::unsafe_arena_set_allocated_error_message(::TipInfoMessage* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.error_message_);
  }
  _impl_.error_message_ = reinterpret_cast<::TipInfoMessage*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:loginpb.TestResponse.error_message)
}
inline ::TipInfoMessage* TestResponse::release_error_message() {
  ::google::protobuf::internal::TSanWrite(&_impl_);

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::TipInfoMessage* released = _impl_.error_message_;
  _impl_.error_message_ = nullptr;
  if (::google::protobuf::internal::DebugHardenForceCopyInRelease()) {
    auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    if (GetArena() == nullptr) {
      delete old;
    }
  } else {
    if (GetArena() != nullptr) {
      released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    }
  }
  return released;
}
inline ::TipInfoMessage* TestResponse::unsafe_arena_release_error_message() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:loginpb.TestResponse.error_message)

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::TipInfoMessage* temp = _impl_.error_message_;
  _impl_.error_message_ = nullptr;
  return temp;
}
inline ::TipInfoMessage* TestResponse::_internal_mutable_error_message() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.error_message_ == nullptr) {
    auto* p = ::google::protobuf::Message::DefaultConstruct<::TipInfoMessage>(GetArena());
    _impl_.error_message_ = reinterpret_cast<::TipInfoMessage*>(p);
  }
  return _impl_.error_message_;
}
inline ::TipInfoMessage* TestResponse::mutable_error_message() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  _impl_._has_bits_[0] |= 0x00000001u;
  ::TipInfoMessage* _msg = _internal_mutable_error_message();
  // @@protoc_insertion_point(field_mutable:loginpb.TestResponse.error_message)
  return _msg;
}
inline void TestResponse::set_allocated_error_message(::TipInfoMessage* value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (message_arena == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.error_message_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = reinterpret_cast<::google::protobuf::MessageLite*>(value)->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }

  _impl_.error_message_ = reinterpret_cast<::TipInfoMessage*>(value);
  // @@protoc_insertion_point(field_set_allocated:loginpb.TestResponse.error_message)
}

// repeated .loginpb.AccountSimplePlayerWrapper players = 2;
inline int TestResponse::_internal_players_size() const {
  return _internal_players().size();
}
inline int TestResponse::players_size() const {
  return _internal_players_size();
}
inline void TestResponse::clear_players() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.players_.Clear();
}
inline ::loginpb::AccountSimplePlayerWrapper* TestResponse::mutable_players(int index)
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable:loginpb.TestResponse.players)
  return _internal_mutable_players()->Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField<::loginpb::AccountSimplePlayerWrapper>* TestResponse::mutable_players()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable_list:loginpb.TestResponse.players)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _internal_mutable_players();
}
inline const ::loginpb::AccountSimplePlayerWrapper& TestResponse::players(int index) const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:loginpb.TestResponse.players)
  return _internal_players().Get(index);
}
inline ::loginpb::AccountSimplePlayerWrapper* TestResponse::add_players() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::loginpb::AccountSimplePlayerWrapper* _add = _internal_mutable_players()->Add();
  // @@protoc_insertion_point(field_add:loginpb.TestResponse.players)
  return _add;
}
inline const ::google::protobuf::RepeatedPtrField<::loginpb::AccountSimplePlayerWrapper>& TestResponse::players() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_list:loginpb.TestResponse.players)
  return _internal_players();
}
inline const ::google::protobuf::RepeatedPtrField<::loginpb::AccountSimplePlayerWrapper>&
TestResponse::_internal_players() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.players_;
}
inline ::google::protobuf::RepeatedPtrField<::loginpb::AccountSimplePlayerWrapper>*
TestResponse::_internal_mutable_players() {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return &_impl_.players_;
}

// repeated string teststring = 3;
inline int TestResponse::_internal_teststring_size() const {
  return _internal_teststring().size();
}
inline int TestResponse::teststring_size() const {
  return _internal_teststring_size();
}
inline void TestResponse::clear_teststring() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.teststring_.Clear();
}
inline std::string* TestResponse::add_teststring() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  std::string* _s = _internal_mutable_teststring()->Add();
  // @@protoc_insertion_point(field_add_mutable:loginpb.TestResponse.teststring)
  return _s;
}
inline const std::string& TestResponse::teststring(int index) const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:loginpb.TestResponse.teststring)
  return _internal_teststring().Get(index);
}
inline std::string* TestResponse::mutable_teststring(int index)
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable:loginpb.TestResponse.teststring)
  return _internal_mutable_teststring()->Mutable(index);
}
template <typename Arg_, typename... Args_>
inline void TestResponse::set_teststring(int index, Arg_&& value, Args_... args) {
  ::google::protobuf::internal::AssignToString(
      *_internal_mutable_teststring()->Mutable(index),
      std::forward<Arg_>(value), args... );
  // @@protoc_insertion_point(field_set:loginpb.TestResponse.teststring)
}
template <typename Arg_, typename... Args_>
inline void TestResponse::add_teststring(Arg_&& value, Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::google::protobuf::internal::AddToRepeatedPtrField(*_internal_mutable_teststring(),
                               std::forward<Arg_>(value),
                               args... );
  // @@protoc_insertion_point(field_add:loginpb.TestResponse.teststring)
}
inline const ::google::protobuf::RepeatedPtrField<std::string>&
TestResponse::teststring() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_list:loginpb.TestResponse.teststring)
  return _internal_teststring();
}
inline ::google::protobuf::RepeatedPtrField<std::string>*
TestResponse::mutable_teststring() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable_list:loginpb.TestResponse.teststring)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _internal_mutable_teststring();
}
inline const ::google::protobuf::RepeatedPtrField<std::string>&
TestResponse::_internal_teststring() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.teststring_;
}
inline ::google::protobuf::RepeatedPtrField<std::string>*
TestResponse::_internal_mutable_teststring() {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return &_impl_.teststring_;
}

// repeated int32 testint = 4;
inline int TestResponse::_internal_testint_size() const {
  return _internal_testint().size();
}
inline int TestResponse::testint_size() const {
  return _internal_testint_size();
}
inline void TestResponse::clear_testint() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.testint_.Clear();
}
inline ::int32_t TestResponse::testint(int index) const {
  // @@protoc_insertion_point(field_get:loginpb.TestResponse.testint)
  return _internal_testint().Get(index);
}
inline void TestResponse::set_testint(int index, ::int32_t value) {
  _internal_mutable_testint()->Set(index, value);
  // @@protoc_insertion_point(field_set:loginpb.TestResponse.testint)
}
inline void TestResponse::add_testint(::int32_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _internal_mutable_testint()->Add(value);
  // @@protoc_insertion_point(field_add:loginpb.TestResponse.testint)
}
inline const ::google::protobuf::RepeatedField<::int32_t>& TestResponse::testint() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_list:loginpb.TestResponse.testint)
  return _internal_testint();
}
inline ::google::protobuf::RepeatedField<::int32_t>* TestResponse::mutable_testint()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable_list:loginpb.TestResponse.testint)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _internal_mutable_testint();
}
inline const ::google::protobuf::RepeatedField<::int32_t>&
TestResponse::_internal_testint() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.testint_;
}
inline ::google::protobuf::RepeatedField<::int32_t>* TestResponse::_internal_mutable_testint() {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return &_impl_.testint_;
}

// -------------------------------------------------------------------

// CreatePlayerRequest

// -------------------------------------------------------------------

// CreatePlayerResponse

// .TipInfoMessage error_message = 1;
inline bool CreatePlayerResponse::has_error_message() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.error_message_ != nullptr);
  return value;
}
inline const ::TipInfoMessage& CreatePlayerResponse::_internal_error_message() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  const ::TipInfoMessage* p = _impl_.error_message_;
  return p != nullptr ? *p : reinterpret_cast<const ::TipInfoMessage&>(::_TipInfoMessage_default_instance_);
}
inline const ::TipInfoMessage& CreatePlayerResponse::error_message() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:loginpb.CreatePlayerResponse.error_message)
  return _internal_error_message();
}
inline void CreatePlayerResponse::unsafe_arena_set_allocated_error_message(::TipInfoMessage* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.error_message_);
  }
  _impl_.error_message_ = reinterpret_cast<::TipInfoMessage*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:loginpb.CreatePlayerResponse.error_message)
}
inline ::TipInfoMessage* CreatePlayerResponse::release_error_message() {
  ::google::protobuf::internal::TSanWrite(&_impl_);

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::TipInfoMessage* released = _impl_.error_message_;
  _impl_.error_message_ = nullptr;
  if (::google::protobuf::internal::DebugHardenForceCopyInRelease()) {
    auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    if (GetArena() == nullptr) {
      delete old;
    }
  } else {
    if (GetArena() != nullptr) {
      released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    }
  }
  return released;
}
inline ::TipInfoMessage* CreatePlayerResponse::unsafe_arena_release_error_message() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:loginpb.CreatePlayerResponse.error_message)

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::TipInfoMessage* temp = _impl_.error_message_;
  _impl_.error_message_ = nullptr;
  return temp;
}
inline ::TipInfoMessage* CreatePlayerResponse::_internal_mutable_error_message() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.error_message_ == nullptr) {
    auto* p = ::google::protobuf::Message::DefaultConstruct<::TipInfoMessage>(GetArena());
    _impl_.error_message_ = reinterpret_cast<::TipInfoMessage*>(p);
  }
  return _impl_.error_message_;
}
inline ::TipInfoMessage* CreatePlayerResponse::mutable_error_message() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  _impl_._has_bits_[0] |= 0x00000001u;
  ::TipInfoMessage* _msg = _internal_mutable_error_message();
  // @@protoc_insertion_point(field_mutable:loginpb.CreatePlayerResponse.error_message)
  return _msg;
}
inline void CreatePlayerResponse::set_allocated_error_message(::TipInfoMessage* value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (message_arena == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.error_message_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = reinterpret_cast<::google::protobuf::MessageLite*>(value)->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }

  _impl_.error_message_ = reinterpret_cast<::TipInfoMessage*>(value);
  // @@protoc_insertion_point(field_set_allocated:loginpb.CreatePlayerResponse.error_message)
}

// repeated .loginpb.AccountSimplePlayerWrapper players = 2;
inline int CreatePlayerResponse::_internal_players_size() const {
  return _internal_players().size();
}
inline int CreatePlayerResponse::players_size() const {
  return _internal_players_size();
}
inline void CreatePlayerResponse::clear_players() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.players_.Clear();
}
inline ::loginpb::AccountSimplePlayerWrapper* CreatePlayerResponse::mutable_players(int index)
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable:loginpb.CreatePlayerResponse.players)
  return _internal_mutable_players()->Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField<::loginpb::AccountSimplePlayerWrapper>* CreatePlayerResponse::mutable_players()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable_list:loginpb.CreatePlayerResponse.players)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _internal_mutable_players();
}
inline const ::loginpb::AccountSimplePlayerWrapper& CreatePlayerResponse::players(int index) const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:loginpb.CreatePlayerResponse.players)
  return _internal_players().Get(index);
}
inline ::loginpb::AccountSimplePlayerWrapper* CreatePlayerResponse::add_players() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::loginpb::AccountSimplePlayerWrapper* _add = _internal_mutable_players()->Add();
  // @@protoc_insertion_point(field_add:loginpb.CreatePlayerResponse.players)
  return _add;
}
inline const ::google::protobuf::RepeatedPtrField<::loginpb::AccountSimplePlayerWrapper>& CreatePlayerResponse::players() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_list:loginpb.CreatePlayerResponse.players)
  return _internal_players();
}
inline const ::google::protobuf::RepeatedPtrField<::loginpb::AccountSimplePlayerWrapper>&
CreatePlayerResponse::_internal_players() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.players_;
}
inline ::google::protobuf::RepeatedPtrField<::loginpb::AccountSimplePlayerWrapper>*
CreatePlayerResponse::_internal_mutable_players() {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return &_impl_.players_;
}

// -------------------------------------------------------------------

// EnterGameRequest

// uint64 player_id = 1;
inline void EnterGameRequest::clear_player_id() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.player_id_ = ::uint64_t{0u};
}
inline ::uint64_t EnterGameRequest::player_id() const {
  // @@protoc_insertion_point(field_get:loginpb.EnterGameRequest.player_id)
  return _internal_player_id();
}
inline void EnterGameRequest::set_player_id(::uint64_t value) {
  _internal_set_player_id(value);
  // @@protoc_insertion_point(field_set:loginpb.EnterGameRequest.player_id)
}
inline ::uint64_t EnterGameRequest::_internal_player_id() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.player_id_;
}
inline void EnterGameRequest::_internal_set_player_id(::uint64_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.player_id_ = value;
}

// -------------------------------------------------------------------

// EnterGameResponse

// .TipInfoMessage error_message = 1;
inline bool EnterGameResponse::has_error_message() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.error_message_ != nullptr);
  return value;
}
inline const ::TipInfoMessage& EnterGameResponse::_internal_error_message() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  const ::TipInfoMessage* p = _impl_.error_message_;
  return p != nullptr ? *p : reinterpret_cast<const ::TipInfoMessage&>(::_TipInfoMessage_default_instance_);
}
inline const ::TipInfoMessage& EnterGameResponse::error_message() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:loginpb.EnterGameResponse.error_message)
  return _internal_error_message();
}
inline void EnterGameResponse::unsafe_arena_set_allocated_error_message(::TipInfoMessage* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.error_message_);
  }
  _impl_.error_message_ = reinterpret_cast<::TipInfoMessage*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:loginpb.EnterGameResponse.error_message)
}
inline ::TipInfoMessage* EnterGameResponse::release_error_message() {
  ::google::protobuf::internal::TSanWrite(&_impl_);

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::TipInfoMessage* released = _impl_.error_message_;
  _impl_.error_message_ = nullptr;
  if (::google::protobuf::internal::DebugHardenForceCopyInRelease()) {
    auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    if (GetArena() == nullptr) {
      delete old;
    }
  } else {
    if (GetArena() != nullptr) {
      released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    }
  }
  return released;
}
inline ::TipInfoMessage* EnterGameResponse::unsafe_arena_release_error_message() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:loginpb.EnterGameResponse.error_message)

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::TipInfoMessage* temp = _impl_.error_message_;
  _impl_.error_message_ = nullptr;
  return temp;
}
inline ::TipInfoMessage* EnterGameResponse::_internal_mutable_error_message() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.error_message_ == nullptr) {
    auto* p = ::google::protobuf::Message::DefaultConstruct<::TipInfoMessage>(GetArena());
    _impl_.error_message_ = reinterpret_cast<::TipInfoMessage*>(p);
  }
  return _impl_.error_message_;
}
inline ::TipInfoMessage* EnterGameResponse::mutable_error_message() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  _impl_._has_bits_[0] |= 0x00000001u;
  ::TipInfoMessage* _msg = _internal_mutable_error_message();
  // @@protoc_insertion_point(field_mutable:loginpb.EnterGameResponse.error_message)
  return _msg;
}
inline void EnterGameResponse::set_allocated_error_message(::TipInfoMessage* value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (message_arena == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.error_message_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = reinterpret_cast<::google::protobuf::MessageLite*>(value)->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }

  _impl_.error_message_ = reinterpret_cast<::TipInfoMessage*>(value);
  // @@protoc_insertion_point(field_set_allocated:loginpb.EnterGameResponse.error_message)
}

// uint64 player_id = 2;
inline void EnterGameResponse::clear_player_id() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.player_id_ = ::uint64_t{0u};
}
inline ::uint64_t EnterGameResponse::player_id() const {
  // @@protoc_insertion_point(field_get:loginpb.EnterGameResponse.player_id)
  return _internal_player_id();
}
inline void EnterGameResponse::set_player_id(::uint64_t value) {
  _internal_set_player_id(value);
  // @@protoc_insertion_point(field_set:loginpb.EnterGameResponse.player_id)
}
inline ::uint64_t EnterGameResponse::_internal_player_id() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.player_id_;
}
inline void EnterGameResponse::_internal_set_player_id(::uint64_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.player_id_ = value;
}

// -------------------------------------------------------------------

// LeaveGameRequest

// -------------------------------------------------------------------

// LoginNodeDisconnectRequest

// uint64 session_id = 1;
inline void LoginNodeDisconnectRequest::clear_session_id() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.session_id_ = ::uint64_t{0u};
}
inline ::uint64_t LoginNodeDisconnectRequest::session_id() const {
  // @@protoc_insertion_point(field_get:loginpb.LoginNodeDisconnectRequest.session_id)
  return _internal_session_id();
}
inline void LoginNodeDisconnectRequest::set_session_id(::uint64_t value) {
  _internal_set_session_id(value);
  // @@protoc_insertion_point(field_set:loginpb.LoginNodeDisconnectRequest.session_id)
}
inline ::uint64_t LoginNodeDisconnectRequest::_internal_session_id() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.session_id_;
}
inline void LoginNodeDisconnectRequest::_internal_set_session_id(::uint64_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.session_id_ = value;
}

#ifdef __GNUC__
#pragma GCC diagnostic pop
#endif  // __GNUC__

// @@protoc_insertion_point(namespace_scope)
}  // namespace loginpb


// @@protoc_insertion_point(global_scope)

#include "google/protobuf/port_undef.inc"

#endif  // proto_2flogin_2flogin_2eproto_2epb_2eh
