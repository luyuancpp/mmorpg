// Generated by the protocol buffer compiler.  DO NOT EDIT!
// NO CHECKED-IN PROTOBUF GENCODE
// source: condition_table.proto
// Protobuf C++ Version: 5.29.0

#include "condition_table.pb.h"

#include <algorithm>
#include <type_traits>
#include "google/protobuf/io/coded_stream.h"
#include "google/protobuf/generated_message_tctable_impl.h"
#include "google/protobuf/extension_set.h"
#include "google/protobuf/generated_message_util.h"
#include "google/protobuf/wire_format_lite.h"
#include "google/protobuf/descriptor.h"
#include "google/protobuf/generated_message_reflection.h"
#include "google/protobuf/reflection_ops.h"
#include "google/protobuf/wire_format.h"
// @@protoc_insertion_point(includes)

// Must be included last.
#include "google/protobuf/port_def.inc"
PROTOBUF_PRAGMA_INIT_SEG
namespace _pb = ::google::protobuf;
namespace _pbi = ::google::protobuf::internal;
namespace _fl = ::google::protobuf::internal::field_layout;

inline constexpr ConditionTable::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : condition1_{},
        _condition1_cached_byte_size_{0},
        condition2_{},
        _condition2_cached_byte_size_{0},
        condition3_{},
        _condition3_cached_byte_size_{0},
        condition4_{},
        _condition4_cached_byte_size_{0},
        id_{0u},
        condition_type_{0u},
        amount_type_{0u},
        amount_{0u},
        comparison_{0u},
        _cached_size_{0} {}

template <typename>
PROTOBUF_CONSTEXPR ConditionTable::ConditionTable(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct ConditionTableDefaultTypeInternal {
  PROTOBUF_CONSTEXPR ConditionTableDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~ConditionTableDefaultTypeInternal() {}
  union {
    ConditionTable _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 ConditionTableDefaultTypeInternal _ConditionTable_default_instance_;

inline constexpr ConditionTabledData::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : data_{},
        _cached_size_{0} {}

template <typename>
PROTOBUF_CONSTEXPR ConditionTabledData::ConditionTabledData(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct ConditionTabledDataDefaultTypeInternal {
  PROTOBUF_CONSTEXPR ConditionTabledDataDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~ConditionTabledDataDefaultTypeInternal() {}
  union {
    ConditionTabledData _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 ConditionTabledDataDefaultTypeInternal _ConditionTabledData_default_instance_;
static constexpr const ::_pb::EnumDescriptor**
    file_level_enum_descriptors_condition_5ftable_2eproto = nullptr;
static constexpr const ::_pb::ServiceDescriptor**
    file_level_service_descriptors_condition_5ftable_2eproto = nullptr;
const ::uint32_t
    TableStruct_condition_5ftable_2eproto::offsets[] ABSL_ATTRIBUTE_SECTION_VARIABLE(
        protodesc_cold) = {
        ~0u,  // no _has_bits_
        PROTOBUF_FIELD_OFFSET(::ConditionTable, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::ConditionTable, _impl_.id_),
        PROTOBUF_FIELD_OFFSET(::ConditionTable, _impl_.condition_type_),
        PROTOBUF_FIELD_OFFSET(::ConditionTable, _impl_.condition1_),
        PROTOBUF_FIELD_OFFSET(::ConditionTable, _impl_.condition2_),
        PROTOBUF_FIELD_OFFSET(::ConditionTable, _impl_.condition3_),
        PROTOBUF_FIELD_OFFSET(::ConditionTable, _impl_.condition4_),
        PROTOBUF_FIELD_OFFSET(::ConditionTable, _impl_.amount_type_),
        PROTOBUF_FIELD_OFFSET(::ConditionTable, _impl_.amount_),
        PROTOBUF_FIELD_OFFSET(::ConditionTable, _impl_.comparison_),
        ~0u,  // no _has_bits_
        PROTOBUF_FIELD_OFFSET(::ConditionTabledData, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::ConditionTabledData, _impl_.data_),
};

static const ::_pbi::MigrationSchema
    schemas[] ABSL_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
        {0, -1, -1, sizeof(::ConditionTable)},
        {17, -1, -1, sizeof(::ConditionTabledData)},
};
static const ::_pb::Message* const file_default_instances[] = {
    &::_ConditionTable_default_instance_._instance,
    &::_ConditionTabledData_default_instance_._instance,
};
const char descriptor_table_protodef_condition_5ftable_2eproto[] ABSL_ATTRIBUTE_SECTION_VARIABLE(
    protodesc_cold) = {
    "\n\025condition_table.proto\"\275\001\n\016ConditionTab"
    "le\022\n\n\002id\030\001 \001(\r\022\026\n\016condition_type\030\002 \001(\r\022\022"
    "\n\ncondition1\030\003 \003(\r\022\022\n\ncondition2\030\004 \003(\r\022\022"
    "\n\ncondition3\030\005 \003(\r\022\022\n\ncondition4\030\006 \003(\r\022\023"
    "\n\013amount_type\030\007 \001(\r\022\016\n\006amount\030\010 \001(\r\022\022\n\nc"
    "omparison\030\t \001(\r\"4\n\023ConditionTabledData\022\035"
    "\n\004data\030\001 \003(\0132\017.ConditionTableB\tZ\007pb/game"
    "b\006proto3"
};
static ::absl::once_flag descriptor_table_condition_5ftable_2eproto_once;
PROTOBUF_CONSTINIT const ::_pbi::DescriptorTable descriptor_table_condition_5ftable_2eproto = {
    false,
    false,
    288,
    descriptor_table_protodef_condition_5ftable_2eproto,
    "condition_table.proto",
    &descriptor_table_condition_5ftable_2eproto_once,
    nullptr,
    0,
    2,
    schemas,
    file_default_instances,
    TableStruct_condition_5ftable_2eproto::offsets,
    file_level_enum_descriptors_condition_5ftable_2eproto,
    file_level_service_descriptors_condition_5ftable_2eproto,
};
// ===================================================================

class ConditionTable::_Internal {
 public:
};

ConditionTable::ConditionTable(::google::protobuf::Arena* arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:ConditionTable)
}
inline PROTOBUF_NDEBUG_INLINE ConditionTable::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from, const ::ConditionTable& from_msg)
      : condition1_{visibility, arena, from.condition1_},
        _condition1_cached_byte_size_{0},
        condition2_{visibility, arena, from.condition2_},
        _condition2_cached_byte_size_{0},
        condition3_{visibility, arena, from.condition3_},
        _condition3_cached_byte_size_{0},
        condition4_{visibility, arena, from.condition4_},
        _condition4_cached_byte_size_{0},
        _cached_size_{0} {}

ConditionTable::ConditionTable(
    ::google::protobuf::Arena* arena,
    const ConditionTable& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  ConditionTable* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);
  ::memcpy(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, id_),
           reinterpret_cast<const char *>(&from._impl_) +
               offsetof(Impl_, id_),
           offsetof(Impl_, comparison_) -
               offsetof(Impl_, id_) +
               sizeof(Impl_::comparison_));

  // @@protoc_insertion_point(copy_constructor:ConditionTable)
}
inline PROTOBUF_NDEBUG_INLINE ConditionTable::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : condition1_{visibility, arena},
        _condition1_cached_byte_size_{0},
        condition2_{visibility, arena},
        _condition2_cached_byte_size_{0},
        condition3_{visibility, arena},
        _condition3_cached_byte_size_{0},
        condition4_{visibility, arena},
        _condition4_cached_byte_size_{0},
        _cached_size_{0} {}

inline void ConditionTable::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, id_),
           0,
           offsetof(Impl_, comparison_) -
               offsetof(Impl_, id_) +
               sizeof(Impl_::comparison_));
}
ConditionTable::~ConditionTable() {
  // @@protoc_insertion_point(destructor:ConditionTable)
  SharedDtor(*this);
}
inline void ConditionTable::SharedDtor(MessageLite& self) {
  ConditionTable& this_ = static_cast<ConditionTable&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  this_._impl_.~Impl_();
}

inline void* ConditionTable::PlacementNew_(const void*, void* mem,
                                        ::google::protobuf::Arena* arena) {
  return ::new (mem) ConditionTable(arena);
}
constexpr auto ConditionTable::InternalNewImpl_() {
  constexpr auto arena_bits = ::google::protobuf::internal::EncodePlacementArenaOffsets({
      PROTOBUF_FIELD_OFFSET(ConditionTable, _impl_.condition1_) +
          decltype(ConditionTable::_impl_.condition1_)::
              InternalGetArenaOffset(
                  ::google::protobuf::Message::internal_visibility()),
      PROTOBUF_FIELD_OFFSET(ConditionTable, _impl_.condition2_) +
          decltype(ConditionTable::_impl_.condition2_)::
              InternalGetArenaOffset(
                  ::google::protobuf::Message::internal_visibility()),
      PROTOBUF_FIELD_OFFSET(ConditionTable, _impl_.condition3_) +
          decltype(ConditionTable::_impl_.condition3_)::
              InternalGetArenaOffset(
                  ::google::protobuf::Message::internal_visibility()),
      PROTOBUF_FIELD_OFFSET(ConditionTable, _impl_.condition4_) +
          decltype(ConditionTable::_impl_.condition4_)::
              InternalGetArenaOffset(
                  ::google::protobuf::Message::internal_visibility()),
  });
  if (arena_bits.has_value()) {
    return ::google::protobuf::internal::MessageCreator::ZeroInit(
        sizeof(ConditionTable), alignof(ConditionTable), *arena_bits);
  } else {
    return ::google::protobuf::internal::MessageCreator(&ConditionTable::PlacementNew_,
                                 sizeof(ConditionTable),
                                 alignof(ConditionTable));
  }
}
PROTOBUF_CONSTINIT
PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::google::protobuf::internal::ClassDataFull ConditionTable::_class_data_ = {
    ::google::protobuf::internal::ClassData{
        &_ConditionTable_default_instance_._instance,
        &_table_.header,
        nullptr,  // OnDemandRegisterArenaDtor
        nullptr,  // IsInitialized
        &ConditionTable::MergeImpl,
        ::google::protobuf::Message::GetNewImpl<ConditionTable>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
        &ConditionTable::SharedDtor,
        ::google::protobuf::Message::GetClearImpl<ConditionTable>(), &ConditionTable::ByteSizeLong,
            &ConditionTable::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
        PROTOBUF_FIELD_OFFSET(ConditionTable, _impl_._cached_size_),
        false,
    },
    &ConditionTable::kDescriptorMethods,
    &descriptor_table_condition_5ftable_2eproto,
    nullptr,  // tracker
};
const ::google::protobuf::internal::ClassData* ConditionTable::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_class_data_.tc_table);
  return _class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<4, 9, 0, 0, 2> ConditionTable::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    9, 120,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294966784,  // skipmap
    offsetof(decltype(_table_), field_entries),
    9,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    _class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::ConditionTable>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
    // uint32 id = 1;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(ConditionTable, _impl_.id_), 63>(),
     {8, 63, 0, PROTOBUF_FIELD_OFFSET(ConditionTable, _impl_.id_)}},
    // uint32 condition_type = 2;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(ConditionTable, _impl_.condition_type_), 63>(),
     {16, 63, 0, PROTOBUF_FIELD_OFFSET(ConditionTable, _impl_.condition_type_)}},
    // repeated uint32 condition1 = 3;
    {::_pbi::TcParser::FastV32P1,
     {26, 63, 0, PROTOBUF_FIELD_OFFSET(ConditionTable, _impl_.condition1_)}},
    // repeated uint32 condition2 = 4;
    {::_pbi::TcParser::FastV32P1,
     {34, 63, 0, PROTOBUF_FIELD_OFFSET(ConditionTable, _impl_.condition2_)}},
    // repeated uint32 condition3 = 5;
    {::_pbi::TcParser::FastV32P1,
     {42, 63, 0, PROTOBUF_FIELD_OFFSET(ConditionTable, _impl_.condition3_)}},
    // repeated uint32 condition4 = 6;
    {::_pbi::TcParser::FastV32P1,
     {50, 63, 0, PROTOBUF_FIELD_OFFSET(ConditionTable, _impl_.condition4_)}},
    // uint32 amount_type = 7;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(ConditionTable, _impl_.amount_type_), 63>(),
     {56, 63, 0, PROTOBUF_FIELD_OFFSET(ConditionTable, _impl_.amount_type_)}},
    // uint32 amount = 8;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(ConditionTable, _impl_.amount_), 63>(),
     {64, 63, 0, PROTOBUF_FIELD_OFFSET(ConditionTable, _impl_.amount_)}},
    // uint32 comparison = 9;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(ConditionTable, _impl_.comparison_), 63>(),
     {72, 63, 0, PROTOBUF_FIELD_OFFSET(ConditionTable, _impl_.comparison_)}},
    {::_pbi::TcParser::MiniParse, {}},
    {::_pbi::TcParser::MiniParse, {}},
    {::_pbi::TcParser::MiniParse, {}},
    {::_pbi::TcParser::MiniParse, {}},
    {::_pbi::TcParser::MiniParse, {}},
    {::_pbi::TcParser::MiniParse, {}},
  }}, {{
    65535, 65535
  }}, {{
    // uint32 id = 1;
    {PROTOBUF_FIELD_OFFSET(ConditionTable, _impl_.id_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUInt32)},
    // uint32 condition_type = 2;
    {PROTOBUF_FIELD_OFFSET(ConditionTable, _impl_.condition_type_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUInt32)},
    // repeated uint32 condition1 = 3;
    {PROTOBUF_FIELD_OFFSET(ConditionTable, _impl_.condition1_), 0, 0,
    (0 | ::_fl::kFcRepeated | ::_fl::kPackedUInt32)},
    // repeated uint32 condition2 = 4;
    {PROTOBUF_FIELD_OFFSET(ConditionTable, _impl_.condition2_), 0, 0,
    (0 | ::_fl::kFcRepeated | ::_fl::kPackedUInt32)},
    // repeated uint32 condition3 = 5;
    {PROTOBUF_FIELD_OFFSET(ConditionTable, _impl_.condition3_), 0, 0,
    (0 | ::_fl::kFcRepeated | ::_fl::kPackedUInt32)},
    // repeated uint32 condition4 = 6;
    {PROTOBUF_FIELD_OFFSET(ConditionTable, _impl_.condition4_), 0, 0,
    (0 | ::_fl::kFcRepeated | ::_fl::kPackedUInt32)},
    // uint32 amount_type = 7;
    {PROTOBUF_FIELD_OFFSET(ConditionTable, _impl_.amount_type_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUInt32)},
    // uint32 amount = 8;
    {PROTOBUF_FIELD_OFFSET(ConditionTable, _impl_.amount_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUInt32)},
    // uint32 comparison = 9;
    {PROTOBUF_FIELD_OFFSET(ConditionTable, _impl_.comparison_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUInt32)},
  }},
  // no aux_entries
  {{
  }},
};

PROTOBUF_NOINLINE void ConditionTable::Clear() {
// @@protoc_insertion_point(message_clear_start:ConditionTable)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.condition1_.Clear();
  _impl_.condition2_.Clear();
  _impl_.condition3_.Clear();
  _impl_.condition4_.Clear();
  ::memset(&_impl_.id_, 0, static_cast<::size_t>(
      reinterpret_cast<char*>(&_impl_.comparison_) -
      reinterpret_cast<char*>(&_impl_.id_)) + sizeof(_impl_.comparison_));
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::uint8_t* ConditionTable::_InternalSerialize(
            const MessageLite& base, ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) {
          const ConditionTable& this_ = static_cast<const ConditionTable&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::uint8_t* ConditionTable::_InternalSerialize(
            ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) const {
          const ConditionTable& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(serialize_to_array_start:ConditionTable)
          ::uint32_t cached_has_bits = 0;
          (void)cached_has_bits;

          // uint32 id = 1;
          if (this_._internal_id() != 0) {
            target = stream->EnsureSpace(target);
            target = ::_pbi::WireFormatLite::WriteUInt32ToArray(
                1, this_._internal_id(), target);
          }

          // uint32 condition_type = 2;
          if (this_._internal_condition_type() != 0) {
            target = stream->EnsureSpace(target);
            target = ::_pbi::WireFormatLite::WriteUInt32ToArray(
                2, this_._internal_condition_type(), target);
          }

          // repeated uint32 condition1 = 3;
          {
            int byte_size = this_._impl_._condition1_cached_byte_size_.Get();
            if (byte_size > 0) {
              target = stream->WriteUInt32Packed(
                  3, this_._internal_condition1(), byte_size, target);
            }
          }

          // repeated uint32 condition2 = 4;
          {
            int byte_size = this_._impl_._condition2_cached_byte_size_.Get();
            if (byte_size > 0) {
              target = stream->WriteUInt32Packed(
                  4, this_._internal_condition2(), byte_size, target);
            }
          }

          // repeated uint32 condition3 = 5;
          {
            int byte_size = this_._impl_._condition3_cached_byte_size_.Get();
            if (byte_size > 0) {
              target = stream->WriteUInt32Packed(
                  5, this_._internal_condition3(), byte_size, target);
            }
          }

          // repeated uint32 condition4 = 6;
          {
            int byte_size = this_._impl_._condition4_cached_byte_size_.Get();
            if (byte_size > 0) {
              target = stream->WriteUInt32Packed(
                  6, this_._internal_condition4(), byte_size, target);
            }
          }

          // uint32 amount_type = 7;
          if (this_._internal_amount_type() != 0) {
            target = stream->EnsureSpace(target);
            target = ::_pbi::WireFormatLite::WriteUInt32ToArray(
                7, this_._internal_amount_type(), target);
          }

          // uint32 amount = 8;
          if (this_._internal_amount() != 0) {
            target = stream->EnsureSpace(target);
            target = ::_pbi::WireFormatLite::WriteUInt32ToArray(
                8, this_._internal_amount(), target);
          }

          // uint32 comparison = 9;
          if (this_._internal_comparison() != 0) {
            target = stream->EnsureSpace(target);
            target = ::_pbi::WireFormatLite::WriteUInt32ToArray(
                9, this_._internal_comparison(), target);
          }

          if (PROTOBUF_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
            target =
                ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
                    this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
          }
          // @@protoc_insertion_point(serialize_to_array_end:ConditionTable)
          return target;
        }

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::size_t ConditionTable::ByteSizeLong(const MessageLite& base) {
          const ConditionTable& this_ = static_cast<const ConditionTable&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::size_t ConditionTable::ByteSizeLong() const {
          const ConditionTable& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(message_byte_size_start:ConditionTable)
          ::size_t total_size = 0;

          ::uint32_t cached_has_bits = 0;
          // Prevent compiler warnings about cached_has_bits being unused
          (void)cached_has_bits;

          ::_pbi::Prefetch5LinesFrom7Lines(&this_);
           {
            // repeated uint32 condition1 = 3;
            {
              total_size +=
                  ::_pbi::WireFormatLite::UInt32SizeWithPackedTagSize(
                      this_._internal_condition1(), 1,
                      this_._impl_._condition1_cached_byte_size_);
            }
            // repeated uint32 condition2 = 4;
            {
              total_size +=
                  ::_pbi::WireFormatLite::UInt32SizeWithPackedTagSize(
                      this_._internal_condition2(), 1,
                      this_._impl_._condition2_cached_byte_size_);
            }
            // repeated uint32 condition3 = 5;
            {
              total_size +=
                  ::_pbi::WireFormatLite::UInt32SizeWithPackedTagSize(
                      this_._internal_condition3(), 1,
                      this_._impl_._condition3_cached_byte_size_);
            }
            // repeated uint32 condition4 = 6;
            {
              total_size +=
                  ::_pbi::WireFormatLite::UInt32SizeWithPackedTagSize(
                      this_._internal_condition4(), 1,
                      this_._impl_._condition4_cached_byte_size_);
            }
          }
           {
            // uint32 id = 1;
            if (this_._internal_id() != 0) {
              total_size += ::_pbi::WireFormatLite::UInt32SizePlusOne(
                  this_._internal_id());
            }
            // uint32 condition_type = 2;
            if (this_._internal_condition_type() != 0) {
              total_size += ::_pbi::WireFormatLite::UInt32SizePlusOne(
                  this_._internal_condition_type());
            }
            // uint32 amount_type = 7;
            if (this_._internal_amount_type() != 0) {
              total_size += ::_pbi::WireFormatLite::UInt32SizePlusOne(
                  this_._internal_amount_type());
            }
            // uint32 amount = 8;
            if (this_._internal_amount() != 0) {
              total_size += ::_pbi::WireFormatLite::UInt32SizePlusOne(
                  this_._internal_amount());
            }
            // uint32 comparison = 9;
            if (this_._internal_comparison() != 0) {
              total_size += ::_pbi::WireFormatLite::UInt32SizePlusOne(
                  this_._internal_comparison());
            }
          }
          return this_.MaybeComputeUnknownFieldsSize(total_size,
                                                     &this_._impl_._cached_size_);
        }

void ConditionTable::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<ConditionTable*>(&to_msg);
  auto& from = static_cast<const ConditionTable&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:ConditionTable)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_internal_mutable_condition1()->MergeFrom(from._internal_condition1());
  _this->_internal_mutable_condition2()->MergeFrom(from._internal_condition2());
  _this->_internal_mutable_condition3()->MergeFrom(from._internal_condition3());
  _this->_internal_mutable_condition4()->MergeFrom(from._internal_condition4());
  if (from._internal_id() != 0) {
    _this->_impl_.id_ = from._impl_.id_;
  }
  if (from._internal_condition_type() != 0) {
    _this->_impl_.condition_type_ = from._impl_.condition_type_;
  }
  if (from._internal_amount_type() != 0) {
    _this->_impl_.amount_type_ = from._impl_.amount_type_;
  }
  if (from._internal_amount() != 0) {
    _this->_impl_.amount_ = from._impl_.amount_;
  }
  if (from._internal_comparison() != 0) {
    _this->_impl_.comparison_ = from._impl_.comparison_;
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void ConditionTable::CopyFrom(const ConditionTable& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:ConditionTable)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void ConditionTable::InternalSwap(ConditionTable* PROTOBUF_RESTRICT other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  _impl_.condition1_.InternalSwap(&other->_impl_.condition1_);
  _impl_.condition2_.InternalSwap(&other->_impl_.condition2_);
  _impl_.condition3_.InternalSwap(&other->_impl_.condition3_);
  _impl_.condition4_.InternalSwap(&other->_impl_.condition4_);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(ConditionTable, _impl_.comparison_)
      + sizeof(ConditionTable::_impl_.comparison_)
      - PROTOBUF_FIELD_OFFSET(ConditionTable, _impl_.id_)>(
          reinterpret_cast<char*>(&_impl_.id_),
          reinterpret_cast<char*>(&other->_impl_.id_));
}

::google::protobuf::Metadata ConditionTable::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class ConditionTabledData::_Internal {
 public:
};

ConditionTabledData::ConditionTabledData(::google::protobuf::Arena* arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:ConditionTabledData)
}
inline PROTOBUF_NDEBUG_INLINE ConditionTabledData::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from, const ::ConditionTabledData& from_msg)
      : data_{visibility, arena, from.data_},
        _cached_size_{0} {}

ConditionTabledData::ConditionTabledData(
    ::google::protobuf::Arena* arena,
    const ConditionTabledData& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  ConditionTabledData* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);

  // @@protoc_insertion_point(copy_constructor:ConditionTabledData)
}
inline PROTOBUF_NDEBUG_INLINE ConditionTabledData::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : data_{visibility, arena},
        _cached_size_{0} {}

inline void ConditionTabledData::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
}
ConditionTabledData::~ConditionTabledData() {
  // @@protoc_insertion_point(destructor:ConditionTabledData)
  SharedDtor(*this);
}
inline void ConditionTabledData::SharedDtor(MessageLite& self) {
  ConditionTabledData& this_ = static_cast<ConditionTabledData&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  this_._impl_.~Impl_();
}

inline void* ConditionTabledData::PlacementNew_(const void*, void* mem,
                                        ::google::protobuf::Arena* arena) {
  return ::new (mem) ConditionTabledData(arena);
}
constexpr auto ConditionTabledData::InternalNewImpl_() {
  constexpr auto arena_bits = ::google::protobuf::internal::EncodePlacementArenaOffsets({
      PROTOBUF_FIELD_OFFSET(ConditionTabledData, _impl_.data_) +
          decltype(ConditionTabledData::_impl_.data_)::
              InternalGetArenaOffset(
                  ::google::protobuf::Message::internal_visibility()),
  });
  if (arena_bits.has_value()) {
    return ::google::protobuf::internal::MessageCreator::ZeroInit(
        sizeof(ConditionTabledData), alignof(ConditionTabledData), *arena_bits);
  } else {
    return ::google::protobuf::internal::MessageCreator(&ConditionTabledData::PlacementNew_,
                                 sizeof(ConditionTabledData),
                                 alignof(ConditionTabledData));
  }
}
PROTOBUF_CONSTINIT
PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::google::protobuf::internal::ClassDataFull ConditionTabledData::_class_data_ = {
    ::google::protobuf::internal::ClassData{
        &_ConditionTabledData_default_instance_._instance,
        &_table_.header,
        nullptr,  // OnDemandRegisterArenaDtor
        nullptr,  // IsInitialized
        &ConditionTabledData::MergeImpl,
        ::google::protobuf::Message::GetNewImpl<ConditionTabledData>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
        &ConditionTabledData::SharedDtor,
        ::google::protobuf::Message::GetClearImpl<ConditionTabledData>(), &ConditionTabledData::ByteSizeLong,
            &ConditionTabledData::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
        PROTOBUF_FIELD_OFFSET(ConditionTabledData, _impl_._cached_size_),
        false,
    },
    &ConditionTabledData::kDescriptorMethods,
    &descriptor_table_condition_5ftable_2eproto,
    nullptr,  // tracker
};
const ::google::protobuf::internal::ClassData* ConditionTabledData::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_class_data_.tc_table);
  return _class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<0, 1, 1, 0, 2> ConditionTabledData::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    1, 0,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967294,  // skipmap
    offsetof(decltype(_table_), field_entries),
    1,  // num_field_entries
    1,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    _class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::ConditionTabledData>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // repeated .ConditionTable data = 1;
    {::_pbi::TcParser::FastMtR1,
     {10, 63, 0, PROTOBUF_FIELD_OFFSET(ConditionTabledData, _impl_.data_)}},
  }}, {{
    65535, 65535
  }}, {{
    // repeated .ConditionTable data = 1;
    {PROTOBUF_FIELD_OFFSET(ConditionTabledData, _impl_.data_), 0, 0,
    (0 | ::_fl::kFcRepeated | ::_fl::kMessage | ::_fl::kTvTable)},
  }}, {{
    {::_pbi::TcParser::GetTable<::ConditionTable>()},
  }}, {{
  }},
};

PROTOBUF_NOINLINE void ConditionTabledData::Clear() {
// @@protoc_insertion_point(message_clear_start:ConditionTabledData)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.data_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::uint8_t* ConditionTabledData::_InternalSerialize(
            const MessageLite& base, ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) {
          const ConditionTabledData& this_ = static_cast<const ConditionTabledData&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::uint8_t* ConditionTabledData::_InternalSerialize(
            ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) const {
          const ConditionTabledData& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(serialize_to_array_start:ConditionTabledData)
          ::uint32_t cached_has_bits = 0;
          (void)cached_has_bits;

          // repeated .ConditionTable data = 1;
          for (unsigned i = 0, n = static_cast<unsigned>(
                                   this_._internal_data_size());
               i < n; i++) {
            const auto& repfield = this_._internal_data().Get(i);
            target =
                ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
                    1, repfield, repfield.GetCachedSize(),
                    target, stream);
          }

          if (PROTOBUF_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
            target =
                ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
                    this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
          }
          // @@protoc_insertion_point(serialize_to_array_end:ConditionTabledData)
          return target;
        }

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::size_t ConditionTabledData::ByteSizeLong(const MessageLite& base) {
          const ConditionTabledData& this_ = static_cast<const ConditionTabledData&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::size_t ConditionTabledData::ByteSizeLong() const {
          const ConditionTabledData& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(message_byte_size_start:ConditionTabledData)
          ::size_t total_size = 0;

          ::uint32_t cached_has_bits = 0;
          // Prevent compiler warnings about cached_has_bits being unused
          (void)cached_has_bits;

          ::_pbi::Prefetch5LinesFrom7Lines(&this_);
           {
            // repeated .ConditionTable data = 1;
            {
              total_size += 1UL * this_._internal_data_size();
              for (const auto& msg : this_._internal_data()) {
                total_size += ::google::protobuf::internal::WireFormatLite::MessageSize(msg);
              }
            }
          }
          return this_.MaybeComputeUnknownFieldsSize(total_size,
                                                     &this_._impl_._cached_size_);
        }

void ConditionTabledData::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<ConditionTabledData*>(&to_msg);
  auto& from = static_cast<const ConditionTabledData&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:ConditionTabledData)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_internal_mutable_data()->MergeFrom(
      from._internal_data());
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void ConditionTabledData::CopyFrom(const ConditionTabledData& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:ConditionTabledData)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void ConditionTabledData::InternalSwap(ConditionTabledData* PROTOBUF_RESTRICT other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  _impl_.data_.InternalSwap(&other->_impl_.data_);
}

::google::protobuf::Metadata ConditionTabledData::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// @@protoc_insertion_point(namespace_scope)
namespace google {
namespace protobuf {
}  // namespace protobuf
}  // namespace google
// @@protoc_insertion_point(global_scope)
PROTOBUF_ATTRIBUTE_INIT_PRIORITY2 static ::std::false_type
    _static_init2_ PROTOBUF_UNUSED =
        (::_pbi::AddDescriptors(&descriptor_table_condition_5ftable_2eproto),
         ::std::false_type{});
#include "google/protobuf/port_undef.inc"
