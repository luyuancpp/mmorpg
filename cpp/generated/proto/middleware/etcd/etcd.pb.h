// Generated by the protocol buffer compiler.  DO NOT EDIT!
// NO CHECKED-IN PROTOBUF GENCODE
// source: proto/middleware/etcd/etcd.proto
// Protobuf C++ Version: 6.31.1

#ifndef proto_2fmiddleware_2fetcd_2fetcd_2eproto_2epb_2eh
#define proto_2fmiddleware_2fetcd_2fetcd_2eproto_2epb_2eh

#include <limits>
#include <string>
#include <type_traits>
#include <utility>

#include "google/protobuf/runtime_version.h"
#if PROTOBUF_VERSION != 6031001
#error "Protobuf C++ gencode is built with an incompatible version of"
#error "Protobuf C++ headers/runtime. See"
#error "https://protobuf.dev/support/cross-version-runtime-guarantee/#cpp"
#endif
#include "google/protobuf/io/coded_stream.h"
#include "google/protobuf/arena.h"
#include "google/protobuf/arenastring.h"
#include "google/protobuf/generated_message_bases.h"
#include "google/protobuf/generated_message_tctable_decl.h"
#include "google/protobuf/generated_message_util.h"
#include "google/protobuf/metadata_lite.h"
#include "google/protobuf/generated_message_reflection.h"
#include "google/protobuf/message.h"
#include "google/protobuf/message_lite.h"
#include "google/protobuf/repeated_field.h"  // IWYU pragma: export
#include "google/protobuf/extension_set.h"  // IWYU pragma: export
#include "google/protobuf/generated_enum_reflection.h"
#include "google/protobuf/unknown_field_set.h"
#include "proto/middleware/etcd/kv.pb.h"
#include "proto/middleware/etcd/version.pb.h"
// @@protoc_insertion_point(includes)

// Must be included last.
#include "google/protobuf/port_def.inc"

#define PROTOBUF_INTERNAL_EXPORT_proto_2fmiddleware_2fetcd_2fetcd_2eproto

namespace google {
namespace protobuf {
namespace internal {
template <typename T>
::absl::string_view GetAnyMessageName();
}  // namespace internal
}  // namespace protobuf
}  // namespace google

// Internal implementation detail -- do not use these members.
struct TableStruct_proto_2fmiddleware_2fetcd_2fetcd_2eproto {
  static const ::uint32_t offsets[];
};
extern "C" {
extern const ::google::protobuf::internal::DescriptorTable descriptor_table_proto_2fmiddleware_2fetcd_2fetcd_2eproto;
}  // extern "C"
namespace etcdserverpb {
enum Compare_CompareResult : int;
extern const uint32_t Compare_CompareResult_internal_data_[];
enum Compare_CompareTarget : int;
extern const uint32_t Compare_CompareTarget_internal_data_[];
enum RangeRequest_SortOrder : int;
extern const uint32_t RangeRequest_SortOrder_internal_data_[];
enum RangeRequest_SortTarget : int;
extern const uint32_t RangeRequest_SortTarget_internal_data_[];
enum WatchCreateRequest_FilterType : int;
extern const uint32_t WatchCreateRequest_FilterType_internal_data_[];
class CompactionRequest;
struct CompactionRequestDefaultTypeInternal;
extern CompactionRequestDefaultTypeInternal _CompactionRequest_default_instance_;
extern const ::google::protobuf::internal::ClassDataFull CompactionRequest_class_data_;
class CompactionResponse;
struct CompactionResponseDefaultTypeInternal;
extern CompactionResponseDefaultTypeInternal _CompactionResponse_default_instance_;
extern const ::google::protobuf::internal::ClassDataFull CompactionResponse_class_data_;
class Compare;
struct CompareDefaultTypeInternal;
extern CompareDefaultTypeInternal _Compare_default_instance_;
extern const ::google::protobuf::internal::ClassDataFull Compare_class_data_;
class DeleteRangeRequest;
struct DeleteRangeRequestDefaultTypeInternal;
extern DeleteRangeRequestDefaultTypeInternal _DeleteRangeRequest_default_instance_;
extern const ::google::protobuf::internal::ClassDataFull DeleteRangeRequest_class_data_;
class DeleteRangeResponse;
struct DeleteRangeResponseDefaultTypeInternal;
extern DeleteRangeResponseDefaultTypeInternal _DeleteRangeResponse_default_instance_;
extern const ::google::protobuf::internal::ClassDataFull DeleteRangeResponse_class_data_;
class LeaseCheckpoint;
struct LeaseCheckpointDefaultTypeInternal;
extern LeaseCheckpointDefaultTypeInternal _LeaseCheckpoint_default_instance_;
extern const ::google::protobuf::internal::ClassDataFull LeaseCheckpoint_class_data_;
class LeaseCheckpointRequest;
struct LeaseCheckpointRequestDefaultTypeInternal;
extern LeaseCheckpointRequestDefaultTypeInternal _LeaseCheckpointRequest_default_instance_;
extern const ::google::protobuf::internal::ClassDataFull LeaseCheckpointRequest_class_data_;
class LeaseCheckpointResponse;
struct LeaseCheckpointResponseDefaultTypeInternal;
extern LeaseCheckpointResponseDefaultTypeInternal _LeaseCheckpointResponse_default_instance_;
extern const ::google::protobuf::internal::ClassDataFull LeaseCheckpointResponse_class_data_;
class LeaseGrantRequest;
struct LeaseGrantRequestDefaultTypeInternal;
extern LeaseGrantRequestDefaultTypeInternal _LeaseGrantRequest_default_instance_;
extern const ::google::protobuf::internal::ClassDataFull LeaseGrantRequest_class_data_;
class LeaseGrantResponse;
struct LeaseGrantResponseDefaultTypeInternal;
extern LeaseGrantResponseDefaultTypeInternal _LeaseGrantResponse_default_instance_;
extern const ::google::protobuf::internal::ClassDataFull LeaseGrantResponse_class_data_;
class LeaseKeepAliveRequest;
struct LeaseKeepAliveRequestDefaultTypeInternal;
extern LeaseKeepAliveRequestDefaultTypeInternal _LeaseKeepAliveRequest_default_instance_;
extern const ::google::protobuf::internal::ClassDataFull LeaseKeepAliveRequest_class_data_;
class LeaseKeepAliveResponse;
struct LeaseKeepAliveResponseDefaultTypeInternal;
extern LeaseKeepAliveResponseDefaultTypeInternal _LeaseKeepAliveResponse_default_instance_;
extern const ::google::protobuf::internal::ClassDataFull LeaseKeepAliveResponse_class_data_;
class LeaseLeasesRequest;
struct LeaseLeasesRequestDefaultTypeInternal;
extern LeaseLeasesRequestDefaultTypeInternal _LeaseLeasesRequest_default_instance_;
extern const ::google::protobuf::internal::ClassDataFull LeaseLeasesRequest_class_data_;
class LeaseLeasesResponse;
struct LeaseLeasesResponseDefaultTypeInternal;
extern LeaseLeasesResponseDefaultTypeInternal _LeaseLeasesResponse_default_instance_;
extern const ::google::protobuf::internal::ClassDataFull LeaseLeasesResponse_class_data_;
class LeaseRevokeRequest;
struct LeaseRevokeRequestDefaultTypeInternal;
extern LeaseRevokeRequestDefaultTypeInternal _LeaseRevokeRequest_default_instance_;
extern const ::google::protobuf::internal::ClassDataFull LeaseRevokeRequest_class_data_;
class LeaseRevokeResponse;
struct LeaseRevokeResponseDefaultTypeInternal;
extern LeaseRevokeResponseDefaultTypeInternal _LeaseRevokeResponse_default_instance_;
extern const ::google::protobuf::internal::ClassDataFull LeaseRevokeResponse_class_data_;
class LeaseStatus;
struct LeaseStatusDefaultTypeInternal;
extern LeaseStatusDefaultTypeInternal _LeaseStatus_default_instance_;
extern const ::google::protobuf::internal::ClassDataFull LeaseStatus_class_data_;
class LeaseTimeToLiveRequest;
struct LeaseTimeToLiveRequestDefaultTypeInternal;
extern LeaseTimeToLiveRequestDefaultTypeInternal _LeaseTimeToLiveRequest_default_instance_;
extern const ::google::protobuf::internal::ClassDataFull LeaseTimeToLiveRequest_class_data_;
class LeaseTimeToLiveResponse;
struct LeaseTimeToLiveResponseDefaultTypeInternal;
extern LeaseTimeToLiveResponseDefaultTypeInternal _LeaseTimeToLiveResponse_default_instance_;
extern const ::google::protobuf::internal::ClassDataFull LeaseTimeToLiveResponse_class_data_;
class PutRequest;
struct PutRequestDefaultTypeInternal;
extern PutRequestDefaultTypeInternal _PutRequest_default_instance_;
extern const ::google::protobuf::internal::ClassDataFull PutRequest_class_data_;
class PutResponse;
struct PutResponseDefaultTypeInternal;
extern PutResponseDefaultTypeInternal _PutResponse_default_instance_;
extern const ::google::protobuf::internal::ClassDataFull PutResponse_class_data_;
class RangeRequest;
struct RangeRequestDefaultTypeInternal;
extern RangeRequestDefaultTypeInternal _RangeRequest_default_instance_;
extern const ::google::protobuf::internal::ClassDataFull RangeRequest_class_data_;
class RangeResponse;
struct RangeResponseDefaultTypeInternal;
extern RangeResponseDefaultTypeInternal _RangeResponse_default_instance_;
extern const ::google::protobuf::internal::ClassDataFull RangeResponse_class_data_;
class RequestOp;
struct RequestOpDefaultTypeInternal;
extern RequestOpDefaultTypeInternal _RequestOp_default_instance_;
extern const ::google::protobuf::internal::ClassDataFull RequestOp_class_data_;
class ResponseHeader;
struct ResponseHeaderDefaultTypeInternal;
extern ResponseHeaderDefaultTypeInternal _ResponseHeader_default_instance_;
extern const ::google::protobuf::internal::ClassDataFull ResponseHeader_class_data_;
class ResponseOp;
struct ResponseOpDefaultTypeInternal;
extern ResponseOpDefaultTypeInternal _ResponseOp_default_instance_;
extern const ::google::protobuf::internal::ClassDataFull ResponseOp_class_data_;
class TxnRequest;
struct TxnRequestDefaultTypeInternal;
extern TxnRequestDefaultTypeInternal _TxnRequest_default_instance_;
extern const ::google::protobuf::internal::ClassDataFull TxnRequest_class_data_;
class TxnResponse;
struct TxnResponseDefaultTypeInternal;
extern TxnResponseDefaultTypeInternal _TxnResponse_default_instance_;
extern const ::google::protobuf::internal::ClassDataFull TxnResponse_class_data_;
class WatchCancelRequest;
struct WatchCancelRequestDefaultTypeInternal;
extern WatchCancelRequestDefaultTypeInternal _WatchCancelRequest_default_instance_;
extern const ::google::protobuf::internal::ClassDataFull WatchCancelRequest_class_data_;
class WatchCreateRequest;
struct WatchCreateRequestDefaultTypeInternal;
extern WatchCreateRequestDefaultTypeInternal _WatchCreateRequest_default_instance_;
extern const ::google::protobuf::internal::ClassDataFull WatchCreateRequest_class_data_;
class WatchProgressRequest;
struct WatchProgressRequestDefaultTypeInternal;
extern WatchProgressRequestDefaultTypeInternal _WatchProgressRequest_default_instance_;
extern const ::google::protobuf::internal::ClassDataFull WatchProgressRequest_class_data_;
class WatchRequest;
struct WatchRequestDefaultTypeInternal;
extern WatchRequestDefaultTypeInternal _WatchRequest_default_instance_;
extern const ::google::protobuf::internal::ClassDataFull WatchRequest_class_data_;
class WatchResponse;
struct WatchResponseDefaultTypeInternal;
extern WatchResponseDefaultTypeInternal _WatchResponse_default_instance_;
extern const ::google::protobuf::internal::ClassDataFull WatchResponse_class_data_;
}  // namespace etcdserverpb
namespace google {
namespace protobuf {
template <>
internal::EnumTraitsT<::etcdserverpb::Compare_CompareResult_internal_data_>
    internal::EnumTraitsImpl::value<::etcdserverpb::Compare_CompareResult>;
template <>
internal::EnumTraitsT<::etcdserverpb::Compare_CompareTarget_internal_data_>
    internal::EnumTraitsImpl::value<::etcdserverpb::Compare_CompareTarget>;
template <>
internal::EnumTraitsT<::etcdserverpb::RangeRequest_SortOrder_internal_data_>
    internal::EnumTraitsImpl::value<::etcdserverpb::RangeRequest_SortOrder>;
template <>
internal::EnumTraitsT<::etcdserverpb::RangeRequest_SortTarget_internal_data_>
    internal::EnumTraitsImpl::value<::etcdserverpb::RangeRequest_SortTarget>;
template <>
internal::EnumTraitsT<::etcdserverpb::WatchCreateRequest_FilterType_internal_data_>
    internal::EnumTraitsImpl::value<::etcdserverpb::WatchCreateRequest_FilterType>;
}  // namespace protobuf
}  // namespace google

namespace etcdserverpb {
enum RangeRequest_SortOrder : int {
  RangeRequest_SortOrder_NONE = 0,
  RangeRequest_SortOrder_ASCEND = 1,
  RangeRequest_SortOrder_DESCEND = 2,
  RangeRequest_SortOrder_RangeRequest_SortOrder_INT_MIN_SENTINEL_DO_NOT_USE_ =
      ::std::numeric_limits<::int32_t>::min(),
  RangeRequest_SortOrder_RangeRequest_SortOrder_INT_MAX_SENTINEL_DO_NOT_USE_ =
      ::std::numeric_limits<::int32_t>::max(),
};

extern const uint32_t RangeRequest_SortOrder_internal_data_[];
inline constexpr RangeRequest_SortOrder RangeRequest_SortOrder_SortOrder_MIN =
    static_cast<RangeRequest_SortOrder>(0);
inline constexpr RangeRequest_SortOrder RangeRequest_SortOrder_SortOrder_MAX =
    static_cast<RangeRequest_SortOrder>(2);
inline bool RangeRequest_SortOrder_IsValid(int value) {
  return 0 <= value && value <= 2;
}
inline constexpr int RangeRequest_SortOrder_SortOrder_ARRAYSIZE = 2 + 1;
const ::google::protobuf::EnumDescriptor* PROTOBUF_NONNULL RangeRequest_SortOrder_descriptor();
template <typename T>
const ::std::string& RangeRequest_SortOrder_Name(T value) {
  static_assert(::std::is_same<T, RangeRequest_SortOrder>::value ||
                    ::std::is_integral<T>::value,
                "Incorrect type passed to SortOrder_Name().");
  return RangeRequest_SortOrder_Name(static_cast<RangeRequest_SortOrder>(value));
}
template <>
inline const ::std::string& RangeRequest_SortOrder_Name(RangeRequest_SortOrder value) {
  return ::google::protobuf::internal::NameOfDenseEnum<RangeRequest_SortOrder_descriptor, 0, 2>(
      static_cast<int>(value));
}
inline bool RangeRequest_SortOrder_Parse(
    ::absl::string_view name, RangeRequest_SortOrder* PROTOBUF_NONNULL value) {
  return ::google::protobuf::internal::ParseNamedEnum<RangeRequest_SortOrder>(RangeRequest_SortOrder_descriptor(), name,
                                           value);
}
enum RangeRequest_SortTarget : int {
  RangeRequest_SortTarget_KEY = 0,
  RangeRequest_SortTarget_VERSION = 1,
  RangeRequest_SortTarget_CREATE = 2,
  RangeRequest_SortTarget_MOD = 3,
  RangeRequest_SortTarget_VALUE = 4,
  RangeRequest_SortTarget_RangeRequest_SortTarget_INT_MIN_SENTINEL_DO_NOT_USE_ =
      ::std::numeric_limits<::int32_t>::min(),
  RangeRequest_SortTarget_RangeRequest_SortTarget_INT_MAX_SENTINEL_DO_NOT_USE_ =
      ::std::numeric_limits<::int32_t>::max(),
};

extern const uint32_t RangeRequest_SortTarget_internal_data_[];
inline constexpr RangeRequest_SortTarget RangeRequest_SortTarget_SortTarget_MIN =
    static_cast<RangeRequest_SortTarget>(0);
inline constexpr RangeRequest_SortTarget RangeRequest_SortTarget_SortTarget_MAX =
    static_cast<RangeRequest_SortTarget>(4);
inline bool RangeRequest_SortTarget_IsValid(int value) {
  return 0 <= value && value <= 4;
}
inline constexpr int RangeRequest_SortTarget_SortTarget_ARRAYSIZE = 4 + 1;
const ::google::protobuf::EnumDescriptor* PROTOBUF_NONNULL RangeRequest_SortTarget_descriptor();
template <typename T>
const ::std::string& RangeRequest_SortTarget_Name(T value) {
  static_assert(::std::is_same<T, RangeRequest_SortTarget>::value ||
                    ::std::is_integral<T>::value,
                "Incorrect type passed to SortTarget_Name().");
  return RangeRequest_SortTarget_Name(static_cast<RangeRequest_SortTarget>(value));
}
template <>
inline const ::std::string& RangeRequest_SortTarget_Name(RangeRequest_SortTarget value) {
  return ::google::protobuf::internal::NameOfDenseEnum<RangeRequest_SortTarget_descriptor, 0, 4>(
      static_cast<int>(value));
}
inline bool RangeRequest_SortTarget_Parse(
    ::absl::string_view name, RangeRequest_SortTarget* PROTOBUF_NONNULL value) {
  return ::google::protobuf::internal::ParseNamedEnum<RangeRequest_SortTarget>(RangeRequest_SortTarget_descriptor(), name,
                                           value);
}
enum Compare_CompareResult : int {
  Compare_CompareResult_EQUAL = 0,
  Compare_CompareResult_GREATER = 1,
  Compare_CompareResult_LESS = 2,
  Compare_CompareResult_NOT_EQUAL = 3,
  Compare_CompareResult_Compare_CompareResult_INT_MIN_SENTINEL_DO_NOT_USE_ =
      ::std::numeric_limits<::int32_t>::min(),
  Compare_CompareResult_Compare_CompareResult_INT_MAX_SENTINEL_DO_NOT_USE_ =
      ::std::numeric_limits<::int32_t>::max(),
};

extern const uint32_t Compare_CompareResult_internal_data_[];
inline constexpr Compare_CompareResult Compare_CompareResult_CompareResult_MIN =
    static_cast<Compare_CompareResult>(0);
inline constexpr Compare_CompareResult Compare_CompareResult_CompareResult_MAX =
    static_cast<Compare_CompareResult>(3);
inline bool Compare_CompareResult_IsValid(int value) {
  return 0 <= value && value <= 3;
}
inline constexpr int Compare_CompareResult_CompareResult_ARRAYSIZE = 3 + 1;
const ::google::protobuf::EnumDescriptor* PROTOBUF_NONNULL Compare_CompareResult_descriptor();
template <typename T>
const ::std::string& Compare_CompareResult_Name(T value) {
  static_assert(::std::is_same<T, Compare_CompareResult>::value ||
                    ::std::is_integral<T>::value,
                "Incorrect type passed to CompareResult_Name().");
  return Compare_CompareResult_Name(static_cast<Compare_CompareResult>(value));
}
template <>
inline const ::std::string& Compare_CompareResult_Name(Compare_CompareResult value) {
  return ::google::protobuf::internal::NameOfDenseEnum<Compare_CompareResult_descriptor, 0, 3>(
      static_cast<int>(value));
}
inline bool Compare_CompareResult_Parse(
    ::absl::string_view name, Compare_CompareResult* PROTOBUF_NONNULL value) {
  return ::google::protobuf::internal::ParseNamedEnum<Compare_CompareResult>(Compare_CompareResult_descriptor(), name,
                                           value);
}
enum Compare_CompareTarget : int {
  Compare_CompareTarget_VERSION = 0,
  Compare_CompareTarget_CREATE = 1,
  Compare_CompareTarget_MOD = 2,
  Compare_CompareTarget_VALUE = 3,
  Compare_CompareTarget_LEASE = 4,
  Compare_CompareTarget_Compare_CompareTarget_INT_MIN_SENTINEL_DO_NOT_USE_ =
      ::std::numeric_limits<::int32_t>::min(),
  Compare_CompareTarget_Compare_CompareTarget_INT_MAX_SENTINEL_DO_NOT_USE_ =
      ::std::numeric_limits<::int32_t>::max(),
};

extern const uint32_t Compare_CompareTarget_internal_data_[];
inline constexpr Compare_CompareTarget Compare_CompareTarget_CompareTarget_MIN =
    static_cast<Compare_CompareTarget>(0);
inline constexpr Compare_CompareTarget Compare_CompareTarget_CompareTarget_MAX =
    static_cast<Compare_CompareTarget>(4);
inline bool Compare_CompareTarget_IsValid(int value) {
  return 0 <= value && value <= 4;
}
inline constexpr int Compare_CompareTarget_CompareTarget_ARRAYSIZE = 4 + 1;
const ::google::protobuf::EnumDescriptor* PROTOBUF_NONNULL Compare_CompareTarget_descriptor();
template <typename T>
const ::std::string& Compare_CompareTarget_Name(T value) {
  static_assert(::std::is_same<T, Compare_CompareTarget>::value ||
                    ::std::is_integral<T>::value,
                "Incorrect type passed to CompareTarget_Name().");
  return Compare_CompareTarget_Name(static_cast<Compare_CompareTarget>(value));
}
template <>
inline const ::std::string& Compare_CompareTarget_Name(Compare_CompareTarget value) {
  return ::google::protobuf::internal::NameOfDenseEnum<Compare_CompareTarget_descriptor, 0, 4>(
      static_cast<int>(value));
}
inline bool Compare_CompareTarget_Parse(
    ::absl::string_view name, Compare_CompareTarget* PROTOBUF_NONNULL value) {
  return ::google::protobuf::internal::ParseNamedEnum<Compare_CompareTarget>(Compare_CompareTarget_descriptor(), name,
                                           value);
}
enum WatchCreateRequest_FilterType : int {
  WatchCreateRequest_FilterType_NOPUT = 0,
  WatchCreateRequest_FilterType_NODELETE = 1,
  WatchCreateRequest_FilterType_WatchCreateRequest_FilterType_INT_MIN_SENTINEL_DO_NOT_USE_ =
      ::std::numeric_limits<::int32_t>::min(),
  WatchCreateRequest_FilterType_WatchCreateRequest_FilterType_INT_MAX_SENTINEL_DO_NOT_USE_ =
      ::std::numeric_limits<::int32_t>::max(),
};

extern const uint32_t WatchCreateRequest_FilterType_internal_data_[];
inline constexpr WatchCreateRequest_FilterType WatchCreateRequest_FilterType_FilterType_MIN =
    static_cast<WatchCreateRequest_FilterType>(0);
inline constexpr WatchCreateRequest_FilterType WatchCreateRequest_FilterType_FilterType_MAX =
    static_cast<WatchCreateRequest_FilterType>(1);
inline bool WatchCreateRequest_FilterType_IsValid(int value) {
  return 0 <= value && value <= 1;
}
inline constexpr int WatchCreateRequest_FilterType_FilterType_ARRAYSIZE = 1 + 1;
const ::google::protobuf::EnumDescriptor* PROTOBUF_NONNULL WatchCreateRequest_FilterType_descriptor();
template <typename T>
const ::std::string& WatchCreateRequest_FilterType_Name(T value) {
  static_assert(::std::is_same<T, WatchCreateRequest_FilterType>::value ||
                    ::std::is_integral<T>::value,
                "Incorrect type passed to FilterType_Name().");
  return WatchCreateRequest_FilterType_Name(static_cast<WatchCreateRequest_FilterType>(value));
}
template <>
inline const ::std::string& WatchCreateRequest_FilterType_Name(WatchCreateRequest_FilterType value) {
  return ::google::protobuf::internal::NameOfDenseEnum<WatchCreateRequest_FilterType_descriptor, 0, 1>(
      static_cast<int>(value));
}
inline bool WatchCreateRequest_FilterType_Parse(
    ::absl::string_view name, WatchCreateRequest_FilterType* PROTOBUF_NONNULL value) {
  return ::google::protobuf::internal::ParseNamedEnum<WatchCreateRequest_FilterType>(WatchCreateRequest_FilterType_descriptor(), name,
                                           value);
}

// ===================================================================


// -------------------------------------------------------------------

class WatchProgressRequest final : public ::google::protobuf::internal::ZeroFieldsBase
/* @@protoc_insertion_point(class_definition:etcdserverpb.WatchProgressRequest) */ {
 public:
  inline WatchProgressRequest() : WatchProgressRequest(nullptr) {}

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(WatchProgressRequest* PROTOBUF_NONNULL msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(WatchProgressRequest));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR WatchProgressRequest(::google::protobuf::internal::ConstantInitialized);

  inline WatchProgressRequest(const WatchProgressRequest& from) : WatchProgressRequest(nullptr, from) {}
  inline WatchProgressRequest(WatchProgressRequest&& from) noexcept
      : WatchProgressRequest(nullptr, ::std::move(from)) {}
  inline WatchProgressRequest& operator=(const WatchProgressRequest& from) {
    CopyFrom(from);
    return *this;
  }
  inline WatchProgressRequest& operator=(WatchProgressRequest&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* PROTOBUF_NONNULL mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* PROTOBUF_NONNULL descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* PROTOBUF_NONNULL GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* PROTOBUF_NONNULL GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const WatchProgressRequest& default_instance() {
    return *reinterpret_cast<const WatchProgressRequest*>(
        &_WatchProgressRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 17;
  friend void swap(WatchProgressRequest& a, WatchProgressRequest& b) { a.Swap(&b); }
  inline void Swap(WatchProgressRequest* PROTOBUF_NONNULL other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(WatchProgressRequest* PROTOBUF_NONNULL other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  WatchProgressRequest* PROTOBUF_NONNULL New(::google::protobuf::Arena* PROTOBUF_NULLABLE arena = nullptr) const {
    return ::google::protobuf::internal::ZeroFieldsBase::DefaultConstruct<WatchProgressRequest>(arena);
  }
  using ::google::protobuf::internal::ZeroFieldsBase::CopyFrom;
  inline void CopyFrom(const WatchProgressRequest& from) {
    ::google::protobuf::internal::ZeroFieldsBase::CopyImpl(*this, from);
  }
  using ::google::protobuf::internal::ZeroFieldsBase::MergeFrom;
  void MergeFrom(const WatchProgressRequest& from) {
    ::google::protobuf::internal::ZeroFieldsBase::MergeImpl(*this, from);
  }

  public:
  bool IsInitialized() const {
    return true;
  }
 private:
  template <typename T>
  friend ::absl::string_view(::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "etcdserverpb.WatchProgressRequest"; }

 protected:
  explicit WatchProgressRequest(::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  WatchProgressRequest(::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const WatchProgressRequest& from);
  WatchProgressRequest(
      ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, WatchProgressRequest&& from) noexcept
      : WatchProgressRequest(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* PROTOBUF_NONNULL GetClassData() const PROTOBUF_FINAL;
  static void* PROTOBUF_NONNULL PlacementNew_(
      const void* PROTOBUF_NONNULL, void* PROTOBUF_NONNULL mem,
      ::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  static constexpr auto InternalNewImpl_();

 public:
  static constexpr auto InternalGenerateClassData_();

  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  // @@protoc_insertion_point(class_scope:etcdserverpb.WatchProgressRequest)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<0, 0,
                                   0, 0,
                                   2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(
        ::google::protobuf::internal::InternalVisibility visibility,
        ::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
    inline explicit Impl_(
        ::google::protobuf::internal::InternalVisibility visibility,
        ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const Impl_& from,
        const WatchProgressRequest& from_msg);
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  friend struct ::TableStruct_proto_2fmiddleware_2fetcd_2fetcd_2eproto;
};

extern const ::google::protobuf::internal::ClassDataFull WatchProgressRequest_class_data_;
// -------------------------------------------------------------------

class WatchCreateRequest final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:etcdserverpb.WatchCreateRequest) */ {
 public:
  inline WatchCreateRequest() : WatchCreateRequest(nullptr) {}
  ~WatchCreateRequest() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(WatchCreateRequest* PROTOBUF_NONNULL msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(WatchCreateRequest));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR WatchCreateRequest(::google::protobuf::internal::ConstantInitialized);

  inline WatchCreateRequest(const WatchCreateRequest& from) : WatchCreateRequest(nullptr, from) {}
  inline WatchCreateRequest(WatchCreateRequest&& from) noexcept
      : WatchCreateRequest(nullptr, ::std::move(from)) {}
  inline WatchCreateRequest& operator=(const WatchCreateRequest& from) {
    CopyFrom(from);
    return *this;
  }
  inline WatchCreateRequest& operator=(WatchCreateRequest&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* PROTOBUF_NONNULL mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* PROTOBUF_NONNULL descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* PROTOBUF_NONNULL GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* PROTOBUF_NONNULL GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const WatchCreateRequest& default_instance() {
    return *reinterpret_cast<const WatchCreateRequest*>(
        &_WatchCreateRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 15;
  friend void swap(WatchCreateRequest& a, WatchCreateRequest& b) { a.Swap(&b); }
  inline void Swap(WatchCreateRequest* PROTOBUF_NONNULL other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(WatchCreateRequest* PROTOBUF_NONNULL other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  WatchCreateRequest* PROTOBUF_NONNULL New(::google::protobuf::Arena* PROTOBUF_NULLABLE arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<WatchCreateRequest>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const WatchCreateRequest& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const WatchCreateRequest& from) { WatchCreateRequest::MergeImpl(*this, from); }

  private:
  static void MergeImpl(::google::protobuf::MessageLite& to_msg,
                        const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* PROTOBUF_NONNULL _InternalSerialize(
      const ::google::protobuf::MessageLite& msg, ::uint8_t* PROTOBUF_NONNULL target,
      ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* PROTOBUF_NONNULL _InternalSerialize(
      ::uint8_t* PROTOBUF_NONNULL target,
      ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* PROTOBUF_NONNULL _InternalSerialize(
      ::uint8_t* PROTOBUF_NONNULL target,
      ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(WatchCreateRequest* PROTOBUF_NONNULL other);
 private:
  template <typename T>
  friend ::absl::string_view(::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "etcdserverpb.WatchCreateRequest"; }

 protected:
  explicit WatchCreateRequest(::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  WatchCreateRequest(::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const WatchCreateRequest& from);
  WatchCreateRequest(
      ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, WatchCreateRequest&& from) noexcept
      : WatchCreateRequest(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* PROTOBUF_NONNULL GetClassData() const PROTOBUF_FINAL;
  static void* PROTOBUF_NONNULL PlacementNew_(
      const void* PROTOBUF_NONNULL, void* PROTOBUF_NONNULL mem,
      ::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  static constexpr auto InternalNewImpl_();

 public:
  static constexpr auto InternalGenerateClassData_();

  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------
  using FilterType = WatchCreateRequest_FilterType;
  static constexpr FilterType NOPUT = WatchCreateRequest_FilterType_NOPUT;
  static constexpr FilterType NODELETE = WatchCreateRequest_FilterType_NODELETE;
  static inline bool FilterType_IsValid(int value) {
    return WatchCreateRequest_FilterType_IsValid(value);
  }
  static constexpr FilterType FilterType_MIN = WatchCreateRequest_FilterType_FilterType_MIN;
  static constexpr FilterType FilterType_MAX = WatchCreateRequest_FilterType_FilterType_MAX;
  static constexpr int FilterType_ARRAYSIZE = WatchCreateRequest_FilterType_FilterType_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor* PROTOBUF_NONNULL FilterType_descriptor() {
    return WatchCreateRequest_FilterType_descriptor();
  }
  template <typename T>
  static inline const ::std::string& FilterType_Name(T value) {
    return WatchCreateRequest_FilterType_Name(value);
  }
  static inline bool FilterType_Parse(
      ::absl::string_view name, FilterType* PROTOBUF_NONNULL value) {
    return WatchCreateRequest_FilterType_Parse(name, value);
  }

  // accessors -------------------------------------------------------
  enum : int {
    kFiltersFieldNumber = 5,
    kKeyFieldNumber = 1,
    kRangeEndFieldNumber = 2,
    kStartRevisionFieldNumber = 3,
    kWatchIdFieldNumber = 7,
    kProgressNotifyFieldNumber = 4,
    kPrevKvFieldNumber = 6,
    kFragmentFieldNumber = 8,
  };
  // repeated .etcdserverpb.WatchCreateRequest.FilterType filters = 5 [(.versionpb.etcd_version_field) = "3.1"];
  int filters_size() const;
  private:
  int _internal_filters_size() const;

  public:
  void clear_filters() ;
  public:
  ::etcdserverpb::WatchCreateRequest_FilterType filters(int index) const;
  void set_filters(int index, ::etcdserverpb::WatchCreateRequest_FilterType value);
  void add_filters(::etcdserverpb::WatchCreateRequest_FilterType value);
  const ::google::protobuf::RepeatedField<int>& filters() const;
  ::google::protobuf::RepeatedField<int>* PROTOBUF_NONNULL mutable_filters();

  private:
  const ::google::protobuf::RepeatedField<int>& _internal_filters() const;
  ::google::protobuf::RepeatedField<int>* PROTOBUF_NONNULL _internal_mutable_filters();

  public:
  // bytes key = 1;
  void clear_key() ;
  const ::std::string& key() const;
  template <typename Arg_ = const ::std::string&, typename... Args_>
  void set_key(Arg_&& arg, Args_... args);
  ::std::string* PROTOBUF_NONNULL mutable_key();
  [[nodiscard]] ::std::string* PROTOBUF_NULLABLE release_key();
  void set_allocated_key(::std::string* PROTOBUF_NULLABLE value);

  private:
  const ::std::string& _internal_key() const;
  PROTOBUF_ALWAYS_INLINE void _internal_set_key(const ::std::string& value);
  ::std::string* PROTOBUF_NONNULL _internal_mutable_key();

  public:
  // bytes range_end = 2;
  void clear_range_end() ;
  const ::std::string& range_end() const;
  template <typename Arg_ = const ::std::string&, typename... Args_>
  void set_range_end(Arg_&& arg, Args_... args);
  ::std::string* PROTOBUF_NONNULL mutable_range_end();
  [[nodiscard]] ::std::string* PROTOBUF_NULLABLE release_range_end();
  void set_allocated_range_end(::std::string* PROTOBUF_NULLABLE value);

  private:
  const ::std::string& _internal_range_end() const;
  PROTOBUF_ALWAYS_INLINE void _internal_set_range_end(const ::std::string& value);
  ::std::string* PROTOBUF_NONNULL _internal_mutable_range_end();

  public:
  // int64 start_revision = 3;
  void clear_start_revision() ;
  ::int64_t start_revision() const;
  void set_start_revision(::int64_t value);

  private:
  ::int64_t _internal_start_revision() const;
  void _internal_set_start_revision(::int64_t value);

  public:
  // int64 watch_id = 7 [(.versionpb.etcd_version_field) = "3.4"];
  void clear_watch_id() ;
  ::int64_t watch_id() const;
  void set_watch_id(::int64_t value);

  private:
  ::int64_t _internal_watch_id() const;
  void _internal_set_watch_id(::int64_t value);

  public:
  // bool progress_notify = 4;
  void clear_progress_notify() ;
  bool progress_notify() const;
  void set_progress_notify(bool value);

  private:
  bool _internal_progress_notify() const;
  void _internal_set_progress_notify(bool value);

  public:
  // bool prev_kv = 6 [(.versionpb.etcd_version_field) = "3.1"];
  void clear_prev_kv() ;
  bool prev_kv() const;
  void set_prev_kv(bool value);

  private:
  bool _internal_prev_kv() const;
  void _internal_set_prev_kv(bool value);

  public:
  // bool fragment = 8 [(.versionpb.etcd_version_field) = "3.4"];
  void clear_fragment() ;
  bool fragment() const;
  void set_fragment(bool value);

  private:
  bool _internal_fragment() const;
  void _internal_set_fragment(bool value);

  public:
  // @@protoc_insertion_point(class_scope:etcdserverpb.WatchCreateRequest)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<3, 8,
                                   0, 0,
                                   2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(
        ::google::protobuf::internal::InternalVisibility visibility,
        ::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
    inline explicit Impl_(
        ::google::protobuf::internal::InternalVisibility visibility,
        ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const Impl_& from,
        const WatchCreateRequest& from_msg);
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    ::google::protobuf::RepeatedField<int> filters_;
    ::google::protobuf::internal::CachedSize _filters_cached_byte_size_;
    ::google::protobuf::internal::ArenaStringPtr key_;
    ::google::protobuf::internal::ArenaStringPtr range_end_;
    ::int64_t start_revision_;
    ::int64_t watch_id_;
    bool progress_notify_;
    bool prev_kv_;
    bool fragment_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_proto_2fmiddleware_2fetcd_2fetcd_2eproto;
};

extern const ::google::protobuf::internal::ClassDataFull WatchCreateRequest_class_data_;
// -------------------------------------------------------------------

class WatchCancelRequest final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:etcdserverpb.WatchCancelRequest) */ {
 public:
  inline WatchCancelRequest() : WatchCancelRequest(nullptr) {}
  ~WatchCancelRequest() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(WatchCancelRequest* PROTOBUF_NONNULL msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(WatchCancelRequest));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR WatchCancelRequest(::google::protobuf::internal::ConstantInitialized);

  inline WatchCancelRequest(const WatchCancelRequest& from) : WatchCancelRequest(nullptr, from) {}
  inline WatchCancelRequest(WatchCancelRequest&& from) noexcept
      : WatchCancelRequest(nullptr, ::std::move(from)) {}
  inline WatchCancelRequest& operator=(const WatchCancelRequest& from) {
    CopyFrom(from);
    return *this;
  }
  inline WatchCancelRequest& operator=(WatchCancelRequest&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* PROTOBUF_NONNULL mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* PROTOBUF_NONNULL descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* PROTOBUF_NONNULL GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* PROTOBUF_NONNULL GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const WatchCancelRequest& default_instance() {
    return *reinterpret_cast<const WatchCancelRequest*>(
        &_WatchCancelRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 16;
  friend void swap(WatchCancelRequest& a, WatchCancelRequest& b) { a.Swap(&b); }
  inline void Swap(WatchCancelRequest* PROTOBUF_NONNULL other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(WatchCancelRequest* PROTOBUF_NONNULL other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  WatchCancelRequest* PROTOBUF_NONNULL New(::google::protobuf::Arena* PROTOBUF_NULLABLE arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<WatchCancelRequest>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const WatchCancelRequest& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const WatchCancelRequest& from) { WatchCancelRequest::MergeImpl(*this, from); }

  private:
  static void MergeImpl(::google::protobuf::MessageLite& to_msg,
                        const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* PROTOBUF_NONNULL _InternalSerialize(
      const ::google::protobuf::MessageLite& msg, ::uint8_t* PROTOBUF_NONNULL target,
      ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* PROTOBUF_NONNULL _InternalSerialize(
      ::uint8_t* PROTOBUF_NONNULL target,
      ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* PROTOBUF_NONNULL _InternalSerialize(
      ::uint8_t* PROTOBUF_NONNULL target,
      ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(WatchCancelRequest* PROTOBUF_NONNULL other);
 private:
  template <typename T>
  friend ::absl::string_view(::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "etcdserverpb.WatchCancelRequest"; }

 protected:
  explicit WatchCancelRequest(::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  WatchCancelRequest(::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const WatchCancelRequest& from);
  WatchCancelRequest(
      ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, WatchCancelRequest&& from) noexcept
      : WatchCancelRequest(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* PROTOBUF_NONNULL GetClassData() const PROTOBUF_FINAL;
  static void* PROTOBUF_NONNULL PlacementNew_(
      const void* PROTOBUF_NONNULL, void* PROTOBUF_NONNULL mem,
      ::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  static constexpr auto InternalNewImpl_();

 public:
  static constexpr auto InternalGenerateClassData_();

  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kWatchIdFieldNumber = 1,
  };
  // int64 watch_id = 1 [(.versionpb.etcd_version_field) = "3.1"];
  void clear_watch_id() ;
  ::int64_t watch_id() const;
  void set_watch_id(::int64_t value);

  private:
  ::int64_t _internal_watch_id() const;
  void _internal_set_watch_id(::int64_t value);

  public:
  // @@protoc_insertion_point(class_scope:etcdserverpb.WatchCancelRequest)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<0, 1,
                                   0, 0,
                                   2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(
        ::google::protobuf::internal::InternalVisibility visibility,
        ::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
    inline explicit Impl_(
        ::google::protobuf::internal::InternalVisibility visibility,
        ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const Impl_& from,
        const WatchCancelRequest& from_msg);
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    ::int64_t watch_id_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_proto_2fmiddleware_2fetcd_2fetcd_2eproto;
};

extern const ::google::protobuf::internal::ClassDataFull WatchCancelRequest_class_data_;
// -------------------------------------------------------------------

class ResponseHeader final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:etcdserverpb.ResponseHeader) */ {
 public:
  inline ResponseHeader() : ResponseHeader(nullptr) {}
  ~ResponseHeader() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(ResponseHeader* PROTOBUF_NONNULL msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(ResponseHeader));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR ResponseHeader(::google::protobuf::internal::ConstantInitialized);

  inline ResponseHeader(const ResponseHeader& from) : ResponseHeader(nullptr, from) {}
  inline ResponseHeader(ResponseHeader&& from) noexcept
      : ResponseHeader(nullptr, ::std::move(from)) {}
  inline ResponseHeader& operator=(const ResponseHeader& from) {
    CopyFrom(from);
    return *this;
  }
  inline ResponseHeader& operator=(ResponseHeader&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* PROTOBUF_NONNULL mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* PROTOBUF_NONNULL descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* PROTOBUF_NONNULL GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* PROTOBUF_NONNULL GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const ResponseHeader& default_instance() {
    return *reinterpret_cast<const ResponseHeader*>(
        &_ResponseHeader_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 0;
  friend void swap(ResponseHeader& a, ResponseHeader& b) { a.Swap(&b); }
  inline void Swap(ResponseHeader* PROTOBUF_NONNULL other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(ResponseHeader* PROTOBUF_NONNULL other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  ResponseHeader* PROTOBUF_NONNULL New(::google::protobuf::Arena* PROTOBUF_NULLABLE arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<ResponseHeader>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const ResponseHeader& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const ResponseHeader& from) { ResponseHeader::MergeImpl(*this, from); }

  private:
  static void MergeImpl(::google::protobuf::MessageLite& to_msg,
                        const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* PROTOBUF_NONNULL _InternalSerialize(
      const ::google::protobuf::MessageLite& msg, ::uint8_t* PROTOBUF_NONNULL target,
      ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* PROTOBUF_NONNULL _InternalSerialize(
      ::uint8_t* PROTOBUF_NONNULL target,
      ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* PROTOBUF_NONNULL _InternalSerialize(
      ::uint8_t* PROTOBUF_NONNULL target,
      ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(ResponseHeader* PROTOBUF_NONNULL other);
 private:
  template <typename T>
  friend ::absl::string_view(::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "etcdserverpb.ResponseHeader"; }

 protected:
  explicit ResponseHeader(::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  ResponseHeader(::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const ResponseHeader& from);
  ResponseHeader(
      ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, ResponseHeader&& from) noexcept
      : ResponseHeader(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* PROTOBUF_NONNULL GetClassData() const PROTOBUF_FINAL;
  static void* PROTOBUF_NONNULL PlacementNew_(
      const void* PROTOBUF_NONNULL, void* PROTOBUF_NONNULL mem,
      ::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  static constexpr auto InternalNewImpl_();

 public:
  static constexpr auto InternalGenerateClassData_();

  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kClusterIdFieldNumber = 1,
    kMemberIdFieldNumber = 2,
    kRevisionFieldNumber = 3,
    kRaftTermFieldNumber = 4,
  };
  // uint64 cluster_id = 1;
  void clear_cluster_id() ;
  ::uint64_t cluster_id() const;
  void set_cluster_id(::uint64_t value);

  private:
  ::uint64_t _internal_cluster_id() const;
  void _internal_set_cluster_id(::uint64_t value);

  public:
  // uint64 member_id = 2;
  void clear_member_id() ;
  ::uint64_t member_id() const;
  void set_member_id(::uint64_t value);

  private:
  ::uint64_t _internal_member_id() const;
  void _internal_set_member_id(::uint64_t value);

  public:
  // int64 revision = 3;
  void clear_revision() ;
  ::int64_t revision() const;
  void set_revision(::int64_t value);

  private:
  ::int64_t _internal_revision() const;
  void _internal_set_revision(::int64_t value);

  public:
  // uint64 raft_term = 4;
  void clear_raft_term() ;
  ::uint64_t raft_term() const;
  void set_raft_term(::uint64_t value);

  private:
  ::uint64_t _internal_raft_term() const;
  void _internal_set_raft_term(::uint64_t value);

  public:
  // @@protoc_insertion_point(class_scope:etcdserverpb.ResponseHeader)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<2, 4,
                                   0, 0,
                                   2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(
        ::google::protobuf::internal::InternalVisibility visibility,
        ::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
    inline explicit Impl_(
        ::google::protobuf::internal::InternalVisibility visibility,
        ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const Impl_& from,
        const ResponseHeader& from_msg);
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    ::uint64_t cluster_id_;
    ::uint64_t member_id_;
    ::int64_t revision_;
    ::uint64_t raft_term_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_proto_2fmiddleware_2fetcd_2fetcd_2eproto;
};

extern const ::google::protobuf::internal::ClassDataFull ResponseHeader_class_data_;
// -------------------------------------------------------------------

class RangeRequest final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:etcdserverpb.RangeRequest) */ {
 public:
  inline RangeRequest() : RangeRequest(nullptr) {}
  ~RangeRequest() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(RangeRequest* PROTOBUF_NONNULL msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(RangeRequest));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR RangeRequest(::google::protobuf::internal::ConstantInitialized);

  inline RangeRequest(const RangeRequest& from) : RangeRequest(nullptr, from) {}
  inline RangeRequest(RangeRequest&& from) noexcept
      : RangeRequest(nullptr, ::std::move(from)) {}
  inline RangeRequest& operator=(const RangeRequest& from) {
    CopyFrom(from);
    return *this;
  }
  inline RangeRequest& operator=(RangeRequest&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* PROTOBUF_NONNULL mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* PROTOBUF_NONNULL descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* PROTOBUF_NONNULL GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* PROTOBUF_NONNULL GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const RangeRequest& default_instance() {
    return *reinterpret_cast<const RangeRequest*>(
        &_RangeRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 1;
  friend void swap(RangeRequest& a, RangeRequest& b) { a.Swap(&b); }
  inline void Swap(RangeRequest* PROTOBUF_NONNULL other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(RangeRequest* PROTOBUF_NONNULL other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  RangeRequest* PROTOBUF_NONNULL New(::google::protobuf::Arena* PROTOBUF_NULLABLE arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<RangeRequest>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const RangeRequest& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const RangeRequest& from) { RangeRequest::MergeImpl(*this, from); }

  private:
  static void MergeImpl(::google::protobuf::MessageLite& to_msg,
                        const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* PROTOBUF_NONNULL _InternalSerialize(
      const ::google::protobuf::MessageLite& msg, ::uint8_t* PROTOBUF_NONNULL target,
      ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* PROTOBUF_NONNULL _InternalSerialize(
      ::uint8_t* PROTOBUF_NONNULL target,
      ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* PROTOBUF_NONNULL _InternalSerialize(
      ::uint8_t* PROTOBUF_NONNULL target,
      ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(RangeRequest* PROTOBUF_NONNULL other);
 private:
  template <typename T>
  friend ::absl::string_view(::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "etcdserverpb.RangeRequest"; }

 protected:
  explicit RangeRequest(::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  RangeRequest(::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const RangeRequest& from);
  RangeRequest(
      ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, RangeRequest&& from) noexcept
      : RangeRequest(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* PROTOBUF_NONNULL GetClassData() const PROTOBUF_FINAL;
  static void* PROTOBUF_NONNULL PlacementNew_(
      const void* PROTOBUF_NONNULL, void* PROTOBUF_NONNULL mem,
      ::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  static constexpr auto InternalNewImpl_();

 public:
  static constexpr auto InternalGenerateClassData_();

  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------
  using SortOrder = RangeRequest_SortOrder;
  static constexpr SortOrder NONE = RangeRequest_SortOrder_NONE;
  static constexpr SortOrder ASCEND = RangeRequest_SortOrder_ASCEND;
  static constexpr SortOrder DESCEND = RangeRequest_SortOrder_DESCEND;
  static inline bool SortOrder_IsValid(int value) {
    return RangeRequest_SortOrder_IsValid(value);
  }
  static constexpr SortOrder SortOrder_MIN = RangeRequest_SortOrder_SortOrder_MIN;
  static constexpr SortOrder SortOrder_MAX = RangeRequest_SortOrder_SortOrder_MAX;
  static constexpr int SortOrder_ARRAYSIZE = RangeRequest_SortOrder_SortOrder_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor* PROTOBUF_NONNULL SortOrder_descriptor() {
    return RangeRequest_SortOrder_descriptor();
  }
  template <typename T>
  static inline const ::std::string& SortOrder_Name(T value) {
    return RangeRequest_SortOrder_Name(value);
  }
  static inline bool SortOrder_Parse(
      ::absl::string_view name, SortOrder* PROTOBUF_NONNULL value) {
    return RangeRequest_SortOrder_Parse(name, value);
  }
  using SortTarget = RangeRequest_SortTarget;
  static constexpr SortTarget KEY = RangeRequest_SortTarget_KEY;
  static constexpr SortTarget VERSION = RangeRequest_SortTarget_VERSION;
  static constexpr SortTarget CREATE = RangeRequest_SortTarget_CREATE;
  static constexpr SortTarget MOD = RangeRequest_SortTarget_MOD;
  static constexpr SortTarget VALUE = RangeRequest_SortTarget_VALUE;
  static inline bool SortTarget_IsValid(int value) {
    return RangeRequest_SortTarget_IsValid(value);
  }
  static constexpr SortTarget SortTarget_MIN = RangeRequest_SortTarget_SortTarget_MIN;
  static constexpr SortTarget SortTarget_MAX = RangeRequest_SortTarget_SortTarget_MAX;
  static constexpr int SortTarget_ARRAYSIZE = RangeRequest_SortTarget_SortTarget_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor* PROTOBUF_NONNULL SortTarget_descriptor() {
    return RangeRequest_SortTarget_descriptor();
  }
  template <typename T>
  static inline const ::std::string& SortTarget_Name(T value) {
    return RangeRequest_SortTarget_Name(value);
  }
  static inline bool SortTarget_Parse(
      ::absl::string_view name, SortTarget* PROTOBUF_NONNULL value) {
    return RangeRequest_SortTarget_Parse(name, value);
  }

  // accessors -------------------------------------------------------
  enum : int {
    kKeyFieldNumber = 1,
    kRangeEndFieldNumber = 2,
    kLimitFieldNumber = 3,
    kRevisionFieldNumber = 4,
    kSortOrderFieldNumber = 5,
    kSortTargetFieldNumber = 6,
    kMinModRevisionFieldNumber = 10,
    kMaxModRevisionFieldNumber = 11,
    kMinCreateRevisionFieldNumber = 12,
    kMaxCreateRevisionFieldNumber = 13,
    kSerializableFieldNumber = 7,
    kKeysOnlyFieldNumber = 8,
    kCountOnlyFieldNumber = 9,
  };
  // bytes key = 1;
  void clear_key() ;
  const ::std::string& key() const;
  template <typename Arg_ = const ::std::string&, typename... Args_>
  void set_key(Arg_&& arg, Args_... args);
  ::std::string* PROTOBUF_NONNULL mutable_key();
  [[nodiscard]] ::std::string* PROTOBUF_NULLABLE release_key();
  void set_allocated_key(::std::string* PROTOBUF_NULLABLE value);

  private:
  const ::std::string& _internal_key() const;
  PROTOBUF_ALWAYS_INLINE void _internal_set_key(const ::std::string& value);
  ::std::string* PROTOBUF_NONNULL _internal_mutable_key();

  public:
  // bytes range_end = 2;
  void clear_range_end() ;
  const ::std::string& range_end() const;
  template <typename Arg_ = const ::std::string&, typename... Args_>
  void set_range_end(Arg_&& arg, Args_... args);
  ::std::string* PROTOBUF_NONNULL mutable_range_end();
  [[nodiscard]] ::std::string* PROTOBUF_NULLABLE release_range_end();
  void set_allocated_range_end(::std::string* PROTOBUF_NULLABLE value);

  private:
  const ::std::string& _internal_range_end() const;
  PROTOBUF_ALWAYS_INLINE void _internal_set_range_end(const ::std::string& value);
  ::std::string* PROTOBUF_NONNULL _internal_mutable_range_end();

  public:
  // int64 limit = 3;
  void clear_limit() ;
  ::int64_t limit() const;
  void set_limit(::int64_t value);

  private:
  ::int64_t _internal_limit() const;
  void _internal_set_limit(::int64_t value);

  public:
  // int64 revision = 4;
  void clear_revision() ;
  ::int64_t revision() const;
  void set_revision(::int64_t value);

  private:
  ::int64_t _internal_revision() const;
  void _internal_set_revision(::int64_t value);

  public:
  // .etcdserverpb.RangeRequest.SortOrder sort_order = 5;
  void clear_sort_order() ;
  ::etcdserverpb::RangeRequest_SortOrder sort_order() const;
  void set_sort_order(::etcdserverpb::RangeRequest_SortOrder value);

  private:
  ::etcdserverpb::RangeRequest_SortOrder _internal_sort_order() const;
  void _internal_set_sort_order(::etcdserverpb::RangeRequest_SortOrder value);

  public:
  // .etcdserverpb.RangeRequest.SortTarget sort_target = 6;
  void clear_sort_target() ;
  ::etcdserverpb::RangeRequest_SortTarget sort_target() const;
  void set_sort_target(::etcdserverpb::RangeRequest_SortTarget value);

  private:
  ::etcdserverpb::RangeRequest_SortTarget _internal_sort_target() const;
  void _internal_set_sort_target(::etcdserverpb::RangeRequest_SortTarget value);

  public:
  // int64 min_mod_revision = 10 [(.versionpb.etcd_version_field) = "3.1"];
  void clear_min_mod_revision() ;
  ::int64_t min_mod_revision() const;
  void set_min_mod_revision(::int64_t value);

  private:
  ::int64_t _internal_min_mod_revision() const;
  void _internal_set_min_mod_revision(::int64_t value);

  public:
  // int64 max_mod_revision = 11 [(.versionpb.etcd_version_field) = "3.1"];
  void clear_max_mod_revision() ;
  ::int64_t max_mod_revision() const;
  void set_max_mod_revision(::int64_t value);

  private:
  ::int64_t _internal_max_mod_revision() const;
  void _internal_set_max_mod_revision(::int64_t value);

  public:
  // int64 min_create_revision = 12 [(.versionpb.etcd_version_field) = "3.1"];
  void clear_min_create_revision() ;
  ::int64_t min_create_revision() const;
  void set_min_create_revision(::int64_t value);

  private:
  ::int64_t _internal_min_create_revision() const;
  void _internal_set_min_create_revision(::int64_t value);

  public:
  // int64 max_create_revision = 13 [(.versionpb.etcd_version_field) = "3.1"];
  void clear_max_create_revision() ;
  ::int64_t max_create_revision() const;
  void set_max_create_revision(::int64_t value);

  private:
  ::int64_t _internal_max_create_revision() const;
  void _internal_set_max_create_revision(::int64_t value);

  public:
  // bool serializable = 7;
  void clear_serializable() ;
  bool serializable() const;
  void set_serializable(bool value);

  private:
  bool _internal_serializable() const;
  void _internal_set_serializable(bool value);

  public:
  // bool keys_only = 8;
  void clear_keys_only() ;
  bool keys_only() const;
  void set_keys_only(bool value);

  private:
  bool _internal_keys_only() const;
  void _internal_set_keys_only(bool value);

  public:
  // bool count_only = 9;
  void clear_count_only() ;
  bool count_only() const;
  void set_count_only(bool value);

  private:
  bool _internal_count_only() const;
  void _internal_set_count_only(bool value);

  public:
  // @@protoc_insertion_point(class_scope:etcdserverpb.RangeRequest)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<4, 13,
                                   0, 0,
                                   2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(
        ::google::protobuf::internal::InternalVisibility visibility,
        ::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
    inline explicit Impl_(
        ::google::protobuf::internal::InternalVisibility visibility,
        ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const Impl_& from,
        const RangeRequest& from_msg);
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    ::google::protobuf::internal::ArenaStringPtr key_;
    ::google::protobuf::internal::ArenaStringPtr range_end_;
    ::int64_t limit_;
    ::int64_t revision_;
    int sort_order_;
    int sort_target_;
    ::int64_t min_mod_revision_;
    ::int64_t max_mod_revision_;
    ::int64_t min_create_revision_;
    ::int64_t max_create_revision_;
    bool serializable_;
    bool keys_only_;
    bool count_only_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_proto_2fmiddleware_2fetcd_2fetcd_2eproto;
};

extern const ::google::protobuf::internal::ClassDataFull RangeRequest_class_data_;
// -------------------------------------------------------------------

class PutRequest final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:etcdserverpb.PutRequest) */ {
 public:
  inline PutRequest() : PutRequest(nullptr) {}
  ~PutRequest() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(PutRequest* PROTOBUF_NONNULL msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(PutRequest));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR PutRequest(::google::protobuf::internal::ConstantInitialized);

  inline PutRequest(const PutRequest& from) : PutRequest(nullptr, from) {}
  inline PutRequest(PutRequest&& from) noexcept
      : PutRequest(nullptr, ::std::move(from)) {}
  inline PutRequest& operator=(const PutRequest& from) {
    CopyFrom(from);
    return *this;
  }
  inline PutRequest& operator=(PutRequest&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* PROTOBUF_NONNULL mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* PROTOBUF_NONNULL descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* PROTOBUF_NONNULL GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* PROTOBUF_NONNULL GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const PutRequest& default_instance() {
    return *reinterpret_cast<const PutRequest*>(
        &_PutRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 3;
  friend void swap(PutRequest& a, PutRequest& b) { a.Swap(&b); }
  inline void Swap(PutRequest* PROTOBUF_NONNULL other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(PutRequest* PROTOBUF_NONNULL other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  PutRequest* PROTOBUF_NONNULL New(::google::protobuf::Arena* PROTOBUF_NULLABLE arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<PutRequest>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const PutRequest& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const PutRequest& from) { PutRequest::MergeImpl(*this, from); }

  private:
  static void MergeImpl(::google::protobuf::MessageLite& to_msg,
                        const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* PROTOBUF_NONNULL _InternalSerialize(
      const ::google::protobuf::MessageLite& msg, ::uint8_t* PROTOBUF_NONNULL target,
      ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* PROTOBUF_NONNULL _InternalSerialize(
      ::uint8_t* PROTOBUF_NONNULL target,
      ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* PROTOBUF_NONNULL _InternalSerialize(
      ::uint8_t* PROTOBUF_NONNULL target,
      ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(PutRequest* PROTOBUF_NONNULL other);
 private:
  template <typename T>
  friend ::absl::string_view(::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "etcdserverpb.PutRequest"; }

 protected:
  explicit PutRequest(::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  PutRequest(::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const PutRequest& from);
  PutRequest(
      ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, PutRequest&& from) noexcept
      : PutRequest(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* PROTOBUF_NONNULL GetClassData() const PROTOBUF_FINAL;
  static void* PROTOBUF_NONNULL PlacementNew_(
      const void* PROTOBUF_NONNULL, void* PROTOBUF_NONNULL mem,
      ::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  static constexpr auto InternalNewImpl_();

 public:
  static constexpr auto InternalGenerateClassData_();

  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kKeyFieldNumber = 1,
    kValueFieldNumber = 2,
    kLeaseFieldNumber = 3,
    kPrevKvFieldNumber = 4,
    kIgnoreValueFieldNumber = 5,
    kIgnoreLeaseFieldNumber = 6,
  };
  // bytes key = 1;
  void clear_key() ;
  const ::std::string& key() const;
  template <typename Arg_ = const ::std::string&, typename... Args_>
  void set_key(Arg_&& arg, Args_... args);
  ::std::string* PROTOBUF_NONNULL mutable_key();
  [[nodiscard]] ::std::string* PROTOBUF_NULLABLE release_key();
  void set_allocated_key(::std::string* PROTOBUF_NULLABLE value);

  private:
  const ::std::string& _internal_key() const;
  PROTOBUF_ALWAYS_INLINE void _internal_set_key(const ::std::string& value);
  ::std::string* PROTOBUF_NONNULL _internal_mutable_key();

  public:
  // bytes value = 2;
  void clear_value() ;
  const ::std::string& value() const;
  template <typename Arg_ = const ::std::string&, typename... Args_>
  void set_value(Arg_&& arg, Args_... args);
  ::std::string* PROTOBUF_NONNULL mutable_value();
  [[nodiscard]] ::std::string* PROTOBUF_NULLABLE release_value();
  void set_allocated_value(::std::string* PROTOBUF_NULLABLE value);

  private:
  const ::std::string& _internal_value() const;
  PROTOBUF_ALWAYS_INLINE void _internal_set_value(const ::std::string& value);
  ::std::string* PROTOBUF_NONNULL _internal_mutable_value();

  public:
  // int64 lease = 3;
  void clear_lease() ;
  ::int64_t lease() const;
  void set_lease(::int64_t value);

  private:
  ::int64_t _internal_lease() const;
  void _internal_set_lease(::int64_t value);

  public:
  // bool prev_kv = 4 [(.versionpb.etcd_version_field) = "3.1"];
  void clear_prev_kv() ;
  bool prev_kv() const;
  void set_prev_kv(bool value);

  private:
  bool _internal_prev_kv() const;
  void _internal_set_prev_kv(bool value);

  public:
  // bool ignore_value = 5 [(.versionpb.etcd_version_field) = "3.2"];
  void clear_ignore_value() ;
  bool ignore_value() const;
  void set_ignore_value(bool value);

  private:
  bool _internal_ignore_value() const;
  void _internal_set_ignore_value(bool value);

  public:
  // bool ignore_lease = 6 [(.versionpb.etcd_version_field) = "3.2"];
  void clear_ignore_lease() ;
  bool ignore_lease() const;
  void set_ignore_lease(bool value);

  private:
  bool _internal_ignore_lease() const;
  void _internal_set_ignore_lease(bool value);

  public:
  // @@protoc_insertion_point(class_scope:etcdserverpb.PutRequest)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<3, 6,
                                   0, 0,
                                   2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(
        ::google::protobuf::internal::InternalVisibility visibility,
        ::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
    inline explicit Impl_(
        ::google::protobuf::internal::InternalVisibility visibility,
        ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const Impl_& from,
        const PutRequest& from_msg);
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    ::google::protobuf::internal::ArenaStringPtr key_;
    ::google::protobuf::internal::ArenaStringPtr value_;
    ::int64_t lease_;
    bool prev_kv_;
    bool ignore_value_;
    bool ignore_lease_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_proto_2fmiddleware_2fetcd_2fetcd_2eproto;
};

extern const ::google::protobuf::internal::ClassDataFull PutRequest_class_data_;
// -------------------------------------------------------------------

class LeaseTimeToLiveRequest final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:etcdserverpb.LeaseTimeToLiveRequest) */ {
 public:
  inline LeaseTimeToLiveRequest() : LeaseTimeToLiveRequest(nullptr) {}
  ~LeaseTimeToLiveRequest() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(LeaseTimeToLiveRequest* PROTOBUF_NONNULL msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(LeaseTimeToLiveRequest));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR LeaseTimeToLiveRequest(::google::protobuf::internal::ConstantInitialized);

  inline LeaseTimeToLiveRequest(const LeaseTimeToLiveRequest& from) : LeaseTimeToLiveRequest(nullptr, from) {}
  inline LeaseTimeToLiveRequest(LeaseTimeToLiveRequest&& from) noexcept
      : LeaseTimeToLiveRequest(nullptr, ::std::move(from)) {}
  inline LeaseTimeToLiveRequest& operator=(const LeaseTimeToLiveRequest& from) {
    CopyFrom(from);
    return *this;
  }
  inline LeaseTimeToLiveRequest& operator=(LeaseTimeToLiveRequest&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* PROTOBUF_NONNULL mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* PROTOBUF_NONNULL descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* PROTOBUF_NONNULL GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* PROTOBUF_NONNULL GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const LeaseTimeToLiveRequest& default_instance() {
    return *reinterpret_cast<const LeaseTimeToLiveRequest*>(
        &_LeaseTimeToLiveRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 28;
  friend void swap(LeaseTimeToLiveRequest& a, LeaseTimeToLiveRequest& b) { a.Swap(&b); }
  inline void Swap(LeaseTimeToLiveRequest* PROTOBUF_NONNULL other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(LeaseTimeToLiveRequest* PROTOBUF_NONNULL other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  LeaseTimeToLiveRequest* PROTOBUF_NONNULL New(::google::protobuf::Arena* PROTOBUF_NULLABLE arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<LeaseTimeToLiveRequest>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const LeaseTimeToLiveRequest& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const LeaseTimeToLiveRequest& from) { LeaseTimeToLiveRequest::MergeImpl(*this, from); }

  private:
  static void MergeImpl(::google::protobuf::MessageLite& to_msg,
                        const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* PROTOBUF_NONNULL _InternalSerialize(
      const ::google::protobuf::MessageLite& msg, ::uint8_t* PROTOBUF_NONNULL target,
      ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* PROTOBUF_NONNULL _InternalSerialize(
      ::uint8_t* PROTOBUF_NONNULL target,
      ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* PROTOBUF_NONNULL _InternalSerialize(
      ::uint8_t* PROTOBUF_NONNULL target,
      ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(LeaseTimeToLiveRequest* PROTOBUF_NONNULL other);
 private:
  template <typename T>
  friend ::absl::string_view(::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "etcdserverpb.LeaseTimeToLiveRequest"; }

 protected:
  explicit LeaseTimeToLiveRequest(::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  LeaseTimeToLiveRequest(::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const LeaseTimeToLiveRequest& from);
  LeaseTimeToLiveRequest(
      ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, LeaseTimeToLiveRequest&& from) noexcept
      : LeaseTimeToLiveRequest(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* PROTOBUF_NONNULL GetClassData() const PROTOBUF_FINAL;
  static void* PROTOBUF_NONNULL PlacementNew_(
      const void* PROTOBUF_NONNULL, void* PROTOBUF_NONNULL mem,
      ::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  static constexpr auto InternalNewImpl_();

 public:
  static constexpr auto InternalGenerateClassData_();

  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kIDFieldNumber = 1,
    kKeysFieldNumber = 2,
  };
  // int64 ID = 1;
  void clear_id() ;
  ::int64_t id() const;
  void set_id(::int64_t value);

  private:
  ::int64_t _internal_id() const;
  void _internal_set_id(::int64_t value);

  public:
  // bool keys = 2;
  void clear_keys() ;
  bool keys() const;
  void set_keys(bool value);

  private:
  bool _internal_keys() const;
  void _internal_set_keys(bool value);

  public:
  // @@protoc_insertion_point(class_scope:etcdserverpb.LeaseTimeToLiveRequest)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<1, 2,
                                   0, 0,
                                   2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(
        ::google::protobuf::internal::InternalVisibility visibility,
        ::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
    inline explicit Impl_(
        ::google::protobuf::internal::InternalVisibility visibility,
        ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const Impl_& from,
        const LeaseTimeToLiveRequest& from_msg);
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    ::int64_t id_;
    bool keys_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_proto_2fmiddleware_2fetcd_2fetcd_2eproto;
};

extern const ::google::protobuf::internal::ClassDataFull LeaseTimeToLiveRequest_class_data_;
// -------------------------------------------------------------------

class LeaseStatus final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:etcdserverpb.LeaseStatus) */ {
 public:
  inline LeaseStatus() : LeaseStatus(nullptr) {}
  ~LeaseStatus() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(LeaseStatus* PROTOBUF_NONNULL msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(LeaseStatus));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR LeaseStatus(::google::protobuf::internal::ConstantInitialized);

  inline LeaseStatus(const LeaseStatus& from) : LeaseStatus(nullptr, from) {}
  inline LeaseStatus(LeaseStatus&& from) noexcept
      : LeaseStatus(nullptr, ::std::move(from)) {}
  inline LeaseStatus& operator=(const LeaseStatus& from) {
    CopyFrom(from);
    return *this;
  }
  inline LeaseStatus& operator=(LeaseStatus&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* PROTOBUF_NONNULL mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* PROTOBUF_NONNULL descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* PROTOBUF_NONNULL GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* PROTOBUF_NONNULL GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const LeaseStatus& default_instance() {
    return *reinterpret_cast<const LeaseStatus*>(
        &_LeaseStatus_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 31;
  friend void swap(LeaseStatus& a, LeaseStatus& b) { a.Swap(&b); }
  inline void Swap(LeaseStatus* PROTOBUF_NONNULL other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(LeaseStatus* PROTOBUF_NONNULL other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  LeaseStatus* PROTOBUF_NONNULL New(::google::protobuf::Arena* PROTOBUF_NULLABLE arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<LeaseStatus>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const LeaseStatus& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const LeaseStatus& from) { LeaseStatus::MergeImpl(*this, from); }

  private:
  static void MergeImpl(::google::protobuf::MessageLite& to_msg,
                        const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* PROTOBUF_NONNULL _InternalSerialize(
      const ::google::protobuf::MessageLite& msg, ::uint8_t* PROTOBUF_NONNULL target,
      ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* PROTOBUF_NONNULL _InternalSerialize(
      ::uint8_t* PROTOBUF_NONNULL target,
      ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* PROTOBUF_NONNULL _InternalSerialize(
      ::uint8_t* PROTOBUF_NONNULL target,
      ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(LeaseStatus* PROTOBUF_NONNULL other);
 private:
  template <typename T>
  friend ::absl::string_view(::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "etcdserverpb.LeaseStatus"; }

 protected:
  explicit LeaseStatus(::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  LeaseStatus(::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const LeaseStatus& from);
  LeaseStatus(
      ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, LeaseStatus&& from) noexcept
      : LeaseStatus(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* PROTOBUF_NONNULL GetClassData() const PROTOBUF_FINAL;
  static void* PROTOBUF_NONNULL PlacementNew_(
      const void* PROTOBUF_NONNULL, void* PROTOBUF_NONNULL mem,
      ::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  static constexpr auto InternalNewImpl_();

 public:
  static constexpr auto InternalGenerateClassData_();

  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kIDFieldNumber = 1,
  };
  // int64 ID = 1;
  void clear_id() ;
  ::int64_t id() const;
  void set_id(::int64_t value);

  private:
  ::int64_t _internal_id() const;
  void _internal_set_id(::int64_t value);

  public:
  // @@protoc_insertion_point(class_scope:etcdserverpb.LeaseStatus)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<0, 1,
                                   0, 0,
                                   2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(
        ::google::protobuf::internal::InternalVisibility visibility,
        ::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
    inline explicit Impl_(
        ::google::protobuf::internal::InternalVisibility visibility,
        ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const Impl_& from,
        const LeaseStatus& from_msg);
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    ::int64_t id_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_proto_2fmiddleware_2fetcd_2fetcd_2eproto;
};

extern const ::google::protobuf::internal::ClassDataFull LeaseStatus_class_data_;
// -------------------------------------------------------------------

class LeaseRevokeRequest final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:etcdserverpb.LeaseRevokeRequest) */ {
 public:
  inline LeaseRevokeRequest() : LeaseRevokeRequest(nullptr) {}
  ~LeaseRevokeRequest() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(LeaseRevokeRequest* PROTOBUF_NONNULL msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(LeaseRevokeRequest));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR LeaseRevokeRequest(::google::protobuf::internal::ConstantInitialized);

  inline LeaseRevokeRequest(const LeaseRevokeRequest& from) : LeaseRevokeRequest(nullptr, from) {}
  inline LeaseRevokeRequest(LeaseRevokeRequest&& from) noexcept
      : LeaseRevokeRequest(nullptr, ::std::move(from)) {}
  inline LeaseRevokeRequest& operator=(const LeaseRevokeRequest& from) {
    CopyFrom(from);
    return *this;
  }
  inline LeaseRevokeRequest& operator=(LeaseRevokeRequest&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* PROTOBUF_NONNULL mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* PROTOBUF_NONNULL descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* PROTOBUF_NONNULL GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* PROTOBUF_NONNULL GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const LeaseRevokeRequest& default_instance() {
    return *reinterpret_cast<const LeaseRevokeRequest*>(
        &_LeaseRevokeRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 21;
  friend void swap(LeaseRevokeRequest& a, LeaseRevokeRequest& b) { a.Swap(&b); }
  inline void Swap(LeaseRevokeRequest* PROTOBUF_NONNULL other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(LeaseRevokeRequest* PROTOBUF_NONNULL other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  LeaseRevokeRequest* PROTOBUF_NONNULL New(::google::protobuf::Arena* PROTOBUF_NULLABLE arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<LeaseRevokeRequest>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const LeaseRevokeRequest& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const LeaseRevokeRequest& from) { LeaseRevokeRequest::MergeImpl(*this, from); }

  private:
  static void MergeImpl(::google::protobuf::MessageLite& to_msg,
                        const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* PROTOBUF_NONNULL _InternalSerialize(
      const ::google::protobuf::MessageLite& msg, ::uint8_t* PROTOBUF_NONNULL target,
      ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* PROTOBUF_NONNULL _InternalSerialize(
      ::uint8_t* PROTOBUF_NONNULL target,
      ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* PROTOBUF_NONNULL _InternalSerialize(
      ::uint8_t* PROTOBUF_NONNULL target,
      ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(LeaseRevokeRequest* PROTOBUF_NONNULL other);
 private:
  template <typename T>
  friend ::absl::string_view(::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "etcdserverpb.LeaseRevokeRequest"; }

 protected:
  explicit LeaseRevokeRequest(::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  LeaseRevokeRequest(::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const LeaseRevokeRequest& from);
  LeaseRevokeRequest(
      ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, LeaseRevokeRequest&& from) noexcept
      : LeaseRevokeRequest(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* PROTOBUF_NONNULL GetClassData() const PROTOBUF_FINAL;
  static void* PROTOBUF_NONNULL PlacementNew_(
      const void* PROTOBUF_NONNULL, void* PROTOBUF_NONNULL mem,
      ::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  static constexpr auto InternalNewImpl_();

 public:
  static constexpr auto InternalGenerateClassData_();

  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kIDFieldNumber = 1,
  };
  // int64 ID = 1;
  void clear_id() ;
  ::int64_t id() const;
  void set_id(::int64_t value);

  private:
  ::int64_t _internal_id() const;
  void _internal_set_id(::int64_t value);

  public:
  // @@protoc_insertion_point(class_scope:etcdserverpb.LeaseRevokeRequest)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<0, 1,
                                   0, 0,
                                   2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(
        ::google::protobuf::internal::InternalVisibility visibility,
        ::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
    inline explicit Impl_(
        ::google::protobuf::internal::InternalVisibility visibility,
        ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const Impl_& from,
        const LeaseRevokeRequest& from_msg);
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    ::int64_t id_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_proto_2fmiddleware_2fetcd_2fetcd_2eproto;
};

extern const ::google::protobuf::internal::ClassDataFull LeaseRevokeRequest_class_data_;
// -------------------------------------------------------------------

class LeaseLeasesRequest final : public ::google::protobuf::internal::ZeroFieldsBase
/* @@protoc_insertion_point(class_definition:etcdserverpb.LeaseLeasesRequest) */ {
 public:
  inline LeaseLeasesRequest() : LeaseLeasesRequest(nullptr) {}

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(LeaseLeasesRequest* PROTOBUF_NONNULL msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(LeaseLeasesRequest));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR LeaseLeasesRequest(::google::protobuf::internal::ConstantInitialized);

  inline LeaseLeasesRequest(const LeaseLeasesRequest& from) : LeaseLeasesRequest(nullptr, from) {}
  inline LeaseLeasesRequest(LeaseLeasesRequest&& from) noexcept
      : LeaseLeasesRequest(nullptr, ::std::move(from)) {}
  inline LeaseLeasesRequest& operator=(const LeaseLeasesRequest& from) {
    CopyFrom(from);
    return *this;
  }
  inline LeaseLeasesRequest& operator=(LeaseLeasesRequest&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* PROTOBUF_NONNULL mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* PROTOBUF_NONNULL descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* PROTOBUF_NONNULL GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* PROTOBUF_NONNULL GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const LeaseLeasesRequest& default_instance() {
    return *reinterpret_cast<const LeaseLeasesRequest*>(
        &_LeaseLeasesRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 30;
  friend void swap(LeaseLeasesRequest& a, LeaseLeasesRequest& b) { a.Swap(&b); }
  inline void Swap(LeaseLeasesRequest* PROTOBUF_NONNULL other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(LeaseLeasesRequest* PROTOBUF_NONNULL other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  LeaseLeasesRequest* PROTOBUF_NONNULL New(::google::protobuf::Arena* PROTOBUF_NULLABLE arena = nullptr) const {
    return ::google::protobuf::internal::ZeroFieldsBase::DefaultConstruct<LeaseLeasesRequest>(arena);
  }
  using ::google::protobuf::internal::ZeroFieldsBase::CopyFrom;
  inline void CopyFrom(const LeaseLeasesRequest& from) {
    ::google::protobuf::internal::ZeroFieldsBase::CopyImpl(*this, from);
  }
  using ::google::protobuf::internal::ZeroFieldsBase::MergeFrom;
  void MergeFrom(const LeaseLeasesRequest& from) {
    ::google::protobuf::internal::ZeroFieldsBase::MergeImpl(*this, from);
  }

  public:
  bool IsInitialized() const {
    return true;
  }
 private:
  template <typename T>
  friend ::absl::string_view(::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "etcdserverpb.LeaseLeasesRequest"; }

 protected:
  explicit LeaseLeasesRequest(::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  LeaseLeasesRequest(::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const LeaseLeasesRequest& from);
  LeaseLeasesRequest(
      ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, LeaseLeasesRequest&& from) noexcept
      : LeaseLeasesRequest(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* PROTOBUF_NONNULL GetClassData() const PROTOBUF_FINAL;
  static void* PROTOBUF_NONNULL PlacementNew_(
      const void* PROTOBUF_NONNULL, void* PROTOBUF_NONNULL mem,
      ::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  static constexpr auto InternalNewImpl_();

 public:
  static constexpr auto InternalGenerateClassData_();

  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  // @@protoc_insertion_point(class_scope:etcdserverpb.LeaseLeasesRequest)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<0, 0,
                                   0, 0,
                                   2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(
        ::google::protobuf::internal::InternalVisibility visibility,
        ::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
    inline explicit Impl_(
        ::google::protobuf::internal::InternalVisibility visibility,
        ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const Impl_& from,
        const LeaseLeasesRequest& from_msg);
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  friend struct ::TableStruct_proto_2fmiddleware_2fetcd_2fetcd_2eproto;
};

extern const ::google::protobuf::internal::ClassDataFull LeaseLeasesRequest_class_data_;
// -------------------------------------------------------------------

class LeaseKeepAliveRequest final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:etcdserverpb.LeaseKeepAliveRequest) */ {
 public:
  inline LeaseKeepAliveRequest() : LeaseKeepAliveRequest(nullptr) {}
  ~LeaseKeepAliveRequest() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(LeaseKeepAliveRequest* PROTOBUF_NONNULL msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(LeaseKeepAliveRequest));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR LeaseKeepAliveRequest(::google::protobuf::internal::ConstantInitialized);

  inline LeaseKeepAliveRequest(const LeaseKeepAliveRequest& from) : LeaseKeepAliveRequest(nullptr, from) {}
  inline LeaseKeepAliveRequest(LeaseKeepAliveRequest&& from) noexcept
      : LeaseKeepAliveRequest(nullptr, ::std::move(from)) {}
  inline LeaseKeepAliveRequest& operator=(const LeaseKeepAliveRequest& from) {
    CopyFrom(from);
    return *this;
  }
  inline LeaseKeepAliveRequest& operator=(LeaseKeepAliveRequest&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* PROTOBUF_NONNULL mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* PROTOBUF_NONNULL descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* PROTOBUF_NONNULL GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* PROTOBUF_NONNULL GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const LeaseKeepAliveRequest& default_instance() {
    return *reinterpret_cast<const LeaseKeepAliveRequest*>(
        &_LeaseKeepAliveRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 26;
  friend void swap(LeaseKeepAliveRequest& a, LeaseKeepAliveRequest& b) { a.Swap(&b); }
  inline void Swap(LeaseKeepAliveRequest* PROTOBUF_NONNULL other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(LeaseKeepAliveRequest* PROTOBUF_NONNULL other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  LeaseKeepAliveRequest* PROTOBUF_NONNULL New(::google::protobuf::Arena* PROTOBUF_NULLABLE arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<LeaseKeepAliveRequest>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const LeaseKeepAliveRequest& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const LeaseKeepAliveRequest& from) { LeaseKeepAliveRequest::MergeImpl(*this, from); }

  private:
  static void MergeImpl(::google::protobuf::MessageLite& to_msg,
                        const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* PROTOBUF_NONNULL _InternalSerialize(
      const ::google::protobuf::MessageLite& msg, ::uint8_t* PROTOBUF_NONNULL target,
      ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* PROTOBUF_NONNULL _InternalSerialize(
      ::uint8_t* PROTOBUF_NONNULL target,
      ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* PROTOBUF_NONNULL _InternalSerialize(
      ::uint8_t* PROTOBUF_NONNULL target,
      ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(LeaseKeepAliveRequest* PROTOBUF_NONNULL other);
 private:
  template <typename T>
  friend ::absl::string_view(::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "etcdserverpb.LeaseKeepAliveRequest"; }

 protected:
  explicit LeaseKeepAliveRequest(::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  LeaseKeepAliveRequest(::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const LeaseKeepAliveRequest& from);
  LeaseKeepAliveRequest(
      ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, LeaseKeepAliveRequest&& from) noexcept
      : LeaseKeepAliveRequest(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* PROTOBUF_NONNULL GetClassData() const PROTOBUF_FINAL;
  static void* PROTOBUF_NONNULL PlacementNew_(
      const void* PROTOBUF_NONNULL, void* PROTOBUF_NONNULL mem,
      ::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  static constexpr auto InternalNewImpl_();

 public:
  static constexpr auto InternalGenerateClassData_();

  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kIDFieldNumber = 1,
  };
  // int64 ID = 1;
  void clear_id() ;
  ::int64_t id() const;
  void set_id(::int64_t value);

  private:
  ::int64_t _internal_id() const;
  void _internal_set_id(::int64_t value);

  public:
  // @@protoc_insertion_point(class_scope:etcdserverpb.LeaseKeepAliveRequest)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<0, 1,
                                   0, 0,
                                   2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(
        ::google::protobuf::internal::InternalVisibility visibility,
        ::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
    inline explicit Impl_(
        ::google::protobuf::internal::InternalVisibility visibility,
        ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const Impl_& from,
        const LeaseKeepAliveRequest& from_msg);
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    ::int64_t id_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_proto_2fmiddleware_2fetcd_2fetcd_2eproto;
};

extern const ::google::protobuf::internal::ClassDataFull LeaseKeepAliveRequest_class_data_;
// -------------------------------------------------------------------

class LeaseGrantRequest final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:etcdserverpb.LeaseGrantRequest) */ {
 public:
  inline LeaseGrantRequest() : LeaseGrantRequest(nullptr) {}
  ~LeaseGrantRequest() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(LeaseGrantRequest* PROTOBUF_NONNULL msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(LeaseGrantRequest));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR LeaseGrantRequest(::google::protobuf::internal::ConstantInitialized);

  inline LeaseGrantRequest(const LeaseGrantRequest& from) : LeaseGrantRequest(nullptr, from) {}
  inline LeaseGrantRequest(LeaseGrantRequest&& from) noexcept
      : LeaseGrantRequest(nullptr, ::std::move(from)) {}
  inline LeaseGrantRequest& operator=(const LeaseGrantRequest& from) {
    CopyFrom(from);
    return *this;
  }
  inline LeaseGrantRequest& operator=(LeaseGrantRequest&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* PROTOBUF_NONNULL mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* PROTOBUF_NONNULL descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* PROTOBUF_NONNULL GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* PROTOBUF_NONNULL GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const LeaseGrantRequest& default_instance() {
    return *reinterpret_cast<const LeaseGrantRequest*>(
        &_LeaseGrantRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 19;
  friend void swap(LeaseGrantRequest& a, LeaseGrantRequest& b) { a.Swap(&b); }
  inline void Swap(LeaseGrantRequest* PROTOBUF_NONNULL other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(LeaseGrantRequest* PROTOBUF_NONNULL other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  LeaseGrantRequest* PROTOBUF_NONNULL New(::google::protobuf::Arena* PROTOBUF_NULLABLE arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<LeaseGrantRequest>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const LeaseGrantRequest& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const LeaseGrantRequest& from) { LeaseGrantRequest::MergeImpl(*this, from); }

  private:
  static void MergeImpl(::google::protobuf::MessageLite& to_msg,
                        const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* PROTOBUF_NONNULL _InternalSerialize(
      const ::google::protobuf::MessageLite& msg, ::uint8_t* PROTOBUF_NONNULL target,
      ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* PROTOBUF_NONNULL _InternalSerialize(
      ::uint8_t* PROTOBUF_NONNULL target,
      ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* PROTOBUF_NONNULL _InternalSerialize(
      ::uint8_t* PROTOBUF_NONNULL target,
      ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(LeaseGrantRequest* PROTOBUF_NONNULL other);
 private:
  template <typename T>
  friend ::absl::string_view(::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "etcdserverpb.LeaseGrantRequest"; }

 protected:
  explicit LeaseGrantRequest(::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  LeaseGrantRequest(::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const LeaseGrantRequest& from);
  LeaseGrantRequest(
      ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, LeaseGrantRequest&& from) noexcept
      : LeaseGrantRequest(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* PROTOBUF_NONNULL GetClassData() const PROTOBUF_FINAL;
  static void* PROTOBUF_NONNULL PlacementNew_(
      const void* PROTOBUF_NONNULL, void* PROTOBUF_NONNULL mem,
      ::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  static constexpr auto InternalNewImpl_();

 public:
  static constexpr auto InternalGenerateClassData_();

  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kTTLFieldNumber = 1,
    kIDFieldNumber = 2,
  };
  // int64 TTL = 1;
  void clear_ttl() ;
  ::int64_t ttl() const;
  void set_ttl(::int64_t value);

  private:
  ::int64_t _internal_ttl() const;
  void _internal_set_ttl(::int64_t value);

  public:
  // int64 ID = 2;
  void clear_id() ;
  ::int64_t id() const;
  void set_id(::int64_t value);

  private:
  ::int64_t _internal_id() const;
  void _internal_set_id(::int64_t value);

  public:
  // @@protoc_insertion_point(class_scope:etcdserverpb.LeaseGrantRequest)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<1, 2,
                                   0, 0,
                                   2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(
        ::google::protobuf::internal::InternalVisibility visibility,
        ::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
    inline explicit Impl_(
        ::google::protobuf::internal::InternalVisibility visibility,
        ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const Impl_& from,
        const LeaseGrantRequest& from_msg);
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    ::int64_t ttl_;
    ::int64_t id_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_proto_2fmiddleware_2fetcd_2fetcd_2eproto;
};

extern const ::google::protobuf::internal::ClassDataFull LeaseGrantRequest_class_data_;
// -------------------------------------------------------------------

class LeaseCheckpoint final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:etcdserverpb.LeaseCheckpoint) */ {
 public:
  inline LeaseCheckpoint() : LeaseCheckpoint(nullptr) {}
  ~LeaseCheckpoint() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(LeaseCheckpoint* PROTOBUF_NONNULL msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(LeaseCheckpoint));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR LeaseCheckpoint(::google::protobuf::internal::ConstantInitialized);

  inline LeaseCheckpoint(const LeaseCheckpoint& from) : LeaseCheckpoint(nullptr, from) {}
  inline LeaseCheckpoint(LeaseCheckpoint&& from) noexcept
      : LeaseCheckpoint(nullptr, ::std::move(from)) {}
  inline LeaseCheckpoint& operator=(const LeaseCheckpoint& from) {
    CopyFrom(from);
    return *this;
  }
  inline LeaseCheckpoint& operator=(LeaseCheckpoint&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* PROTOBUF_NONNULL mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* PROTOBUF_NONNULL descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* PROTOBUF_NONNULL GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* PROTOBUF_NONNULL GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const LeaseCheckpoint& default_instance() {
    return *reinterpret_cast<const LeaseCheckpoint*>(
        &_LeaseCheckpoint_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 23;
  friend void swap(LeaseCheckpoint& a, LeaseCheckpoint& b) { a.Swap(&b); }
  inline void Swap(LeaseCheckpoint* PROTOBUF_NONNULL other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(LeaseCheckpoint* PROTOBUF_NONNULL other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  LeaseCheckpoint* PROTOBUF_NONNULL New(::google::protobuf::Arena* PROTOBUF_NULLABLE arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<LeaseCheckpoint>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const LeaseCheckpoint& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const LeaseCheckpoint& from) { LeaseCheckpoint::MergeImpl(*this, from); }

  private:
  static void MergeImpl(::google::protobuf::MessageLite& to_msg,
                        const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* PROTOBUF_NONNULL _InternalSerialize(
      const ::google::protobuf::MessageLite& msg, ::uint8_t* PROTOBUF_NONNULL target,
      ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* PROTOBUF_NONNULL _InternalSerialize(
      ::uint8_t* PROTOBUF_NONNULL target,
      ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* PROTOBUF_NONNULL _InternalSerialize(
      ::uint8_t* PROTOBUF_NONNULL target,
      ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(LeaseCheckpoint* PROTOBUF_NONNULL other);
 private:
  template <typename T>
  friend ::absl::string_view(::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "etcdserverpb.LeaseCheckpoint"; }

 protected:
  explicit LeaseCheckpoint(::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  LeaseCheckpoint(::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const LeaseCheckpoint& from);
  LeaseCheckpoint(
      ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, LeaseCheckpoint&& from) noexcept
      : LeaseCheckpoint(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* PROTOBUF_NONNULL GetClassData() const PROTOBUF_FINAL;
  static void* PROTOBUF_NONNULL PlacementNew_(
      const void* PROTOBUF_NONNULL, void* PROTOBUF_NONNULL mem,
      ::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  static constexpr auto InternalNewImpl_();

 public:
  static constexpr auto InternalGenerateClassData_();

  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kIDFieldNumber = 1,
    kRemainingTTLFieldNumber = 2,
  };
  // int64 ID = 1;
  void clear_id() ;
  ::int64_t id() const;
  void set_id(::int64_t value);

  private:
  ::int64_t _internal_id() const;
  void _internal_set_id(::int64_t value);

  public:
  // int64 remaining_TTL = 2;
  void clear_remaining_ttl() ;
  ::int64_t remaining_ttl() const;
  void set_remaining_ttl(::int64_t value);

  private:
  ::int64_t _internal_remaining_ttl() const;
  void _internal_set_remaining_ttl(::int64_t value);

  public:
  // @@protoc_insertion_point(class_scope:etcdserverpb.LeaseCheckpoint)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<1, 2,
                                   0, 0,
                                   2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(
        ::google::protobuf::internal::InternalVisibility visibility,
        ::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
    inline explicit Impl_(
        ::google::protobuf::internal::InternalVisibility visibility,
        ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const Impl_& from,
        const LeaseCheckpoint& from_msg);
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    ::int64_t id_;
    ::int64_t remaining_ttl_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_proto_2fmiddleware_2fetcd_2fetcd_2eproto;
};

extern const ::google::protobuf::internal::ClassDataFull LeaseCheckpoint_class_data_;
// -------------------------------------------------------------------

class DeleteRangeRequest final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:etcdserverpb.DeleteRangeRequest) */ {
 public:
  inline DeleteRangeRequest() : DeleteRangeRequest(nullptr) {}
  ~DeleteRangeRequest() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(DeleteRangeRequest* PROTOBUF_NONNULL msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(DeleteRangeRequest));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR DeleteRangeRequest(::google::protobuf::internal::ConstantInitialized);

  inline DeleteRangeRequest(const DeleteRangeRequest& from) : DeleteRangeRequest(nullptr, from) {}
  inline DeleteRangeRequest(DeleteRangeRequest&& from) noexcept
      : DeleteRangeRequest(nullptr, ::std::move(from)) {}
  inline DeleteRangeRequest& operator=(const DeleteRangeRequest& from) {
    CopyFrom(from);
    return *this;
  }
  inline DeleteRangeRequest& operator=(DeleteRangeRequest&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* PROTOBUF_NONNULL mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* PROTOBUF_NONNULL descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* PROTOBUF_NONNULL GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* PROTOBUF_NONNULL GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const DeleteRangeRequest& default_instance() {
    return *reinterpret_cast<const DeleteRangeRequest*>(
        &_DeleteRangeRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 5;
  friend void swap(DeleteRangeRequest& a, DeleteRangeRequest& b) { a.Swap(&b); }
  inline void Swap(DeleteRangeRequest* PROTOBUF_NONNULL other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(DeleteRangeRequest* PROTOBUF_NONNULL other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  DeleteRangeRequest* PROTOBUF_NONNULL New(::google::protobuf::Arena* PROTOBUF_NULLABLE arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<DeleteRangeRequest>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const DeleteRangeRequest& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const DeleteRangeRequest& from) { DeleteRangeRequest::MergeImpl(*this, from); }

  private:
  static void MergeImpl(::google::protobuf::MessageLite& to_msg,
                        const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* PROTOBUF_NONNULL _InternalSerialize(
      const ::google::protobuf::MessageLite& msg, ::uint8_t* PROTOBUF_NONNULL target,
      ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* PROTOBUF_NONNULL _InternalSerialize(
      ::uint8_t* PROTOBUF_NONNULL target,
      ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* PROTOBUF_NONNULL _InternalSerialize(
      ::uint8_t* PROTOBUF_NONNULL target,
      ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(DeleteRangeRequest* PROTOBUF_NONNULL other);
 private:
  template <typename T>
  friend ::absl::string_view(::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "etcdserverpb.DeleteRangeRequest"; }

 protected:
  explicit DeleteRangeRequest(::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  DeleteRangeRequest(::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const DeleteRangeRequest& from);
  DeleteRangeRequest(
      ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, DeleteRangeRequest&& from) noexcept
      : DeleteRangeRequest(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* PROTOBUF_NONNULL GetClassData() const PROTOBUF_FINAL;
  static void* PROTOBUF_NONNULL PlacementNew_(
      const void* PROTOBUF_NONNULL, void* PROTOBUF_NONNULL mem,
      ::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  static constexpr auto InternalNewImpl_();

 public:
  static constexpr auto InternalGenerateClassData_();

  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kKeyFieldNumber = 1,
    kRangeEndFieldNumber = 2,
    kPrevKvFieldNumber = 3,
  };
  // bytes key = 1;
  void clear_key() ;
  const ::std::string& key() const;
  template <typename Arg_ = const ::std::string&, typename... Args_>
  void set_key(Arg_&& arg, Args_... args);
  ::std::string* PROTOBUF_NONNULL mutable_key();
  [[nodiscard]] ::std::string* PROTOBUF_NULLABLE release_key();
  void set_allocated_key(::std::string* PROTOBUF_NULLABLE value);

  private:
  const ::std::string& _internal_key() const;
  PROTOBUF_ALWAYS_INLINE void _internal_set_key(const ::std::string& value);
  ::std::string* PROTOBUF_NONNULL _internal_mutable_key();

  public:
  // bytes range_end = 2;
  void clear_range_end() ;
  const ::std::string& range_end() const;
  template <typename Arg_ = const ::std::string&, typename... Args_>
  void set_range_end(Arg_&& arg, Args_... args);
  ::std::string* PROTOBUF_NONNULL mutable_range_end();
  [[nodiscard]] ::std::string* PROTOBUF_NULLABLE release_range_end();
  void set_allocated_range_end(::std::string* PROTOBUF_NULLABLE value);

  private:
  const ::std::string& _internal_range_end() const;
  PROTOBUF_ALWAYS_INLINE void _internal_set_range_end(const ::std::string& value);
  ::std::string* PROTOBUF_NONNULL _internal_mutable_range_end();

  public:
  // bool prev_kv = 3 [(.versionpb.etcd_version_field) = "3.1"];
  void clear_prev_kv() ;
  bool prev_kv() const;
  void set_prev_kv(bool value);

  private:
  bool _internal_prev_kv() const;
  void _internal_set_prev_kv(bool value);

  public:
  // @@protoc_insertion_point(class_scope:etcdserverpb.DeleteRangeRequest)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<2, 3,
                                   0, 0,
                                   2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(
        ::google::protobuf::internal::InternalVisibility visibility,
        ::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
    inline explicit Impl_(
        ::google::protobuf::internal::InternalVisibility visibility,
        ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const Impl_& from,
        const DeleteRangeRequest& from_msg);
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    ::google::protobuf::internal::ArenaStringPtr key_;
    ::google::protobuf::internal::ArenaStringPtr range_end_;
    bool prev_kv_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_proto_2fmiddleware_2fetcd_2fetcd_2eproto;
};

extern const ::google::protobuf::internal::ClassDataFull DeleteRangeRequest_class_data_;
// -------------------------------------------------------------------

class Compare final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:etcdserverpb.Compare) */ {
 public:
  inline Compare() : Compare(nullptr) {}
  ~Compare() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(Compare* PROTOBUF_NONNULL msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(Compare));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR Compare(::google::protobuf::internal::ConstantInitialized);

  inline Compare(const Compare& from) : Compare(nullptr, from) {}
  inline Compare(Compare&& from) noexcept
      : Compare(nullptr, ::std::move(from)) {}
  inline Compare& operator=(const Compare& from) {
    CopyFrom(from);
    return *this;
  }
  inline Compare& operator=(Compare&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* PROTOBUF_NONNULL mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* PROTOBUF_NONNULL descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* PROTOBUF_NONNULL GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* PROTOBUF_NONNULL GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const Compare& default_instance() {
    return *reinterpret_cast<const Compare*>(
        &_Compare_default_instance_);
  }
  enum TargetUnionCase {
    kVersion = 4,
    kCreateRevision = 5,
    kModRevision = 6,
    kValue = 7,
    kLease = 8,
    TARGET_UNION_NOT_SET = 0,
  };
  static constexpr int kIndexInFileMessages = 9;
  friend void swap(Compare& a, Compare& b) { a.Swap(&b); }
  inline void Swap(Compare* PROTOBUF_NONNULL other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(Compare* PROTOBUF_NONNULL other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  Compare* PROTOBUF_NONNULL New(::google::protobuf::Arena* PROTOBUF_NULLABLE arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<Compare>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const Compare& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const Compare& from) { Compare::MergeImpl(*this, from); }

  private:
  static void MergeImpl(::google::protobuf::MessageLite& to_msg,
                        const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* PROTOBUF_NONNULL _InternalSerialize(
      const ::google::protobuf::MessageLite& msg, ::uint8_t* PROTOBUF_NONNULL target,
      ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* PROTOBUF_NONNULL _InternalSerialize(
      ::uint8_t* PROTOBUF_NONNULL target,
      ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* PROTOBUF_NONNULL _InternalSerialize(
      ::uint8_t* PROTOBUF_NONNULL target,
      ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(Compare* PROTOBUF_NONNULL other);
 private:
  template <typename T>
  friend ::absl::string_view(::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "etcdserverpb.Compare"; }

 protected:
  explicit Compare(::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  Compare(::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const Compare& from);
  Compare(
      ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, Compare&& from) noexcept
      : Compare(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* PROTOBUF_NONNULL GetClassData() const PROTOBUF_FINAL;
  static void* PROTOBUF_NONNULL PlacementNew_(
      const void* PROTOBUF_NONNULL, void* PROTOBUF_NONNULL mem,
      ::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  static constexpr auto InternalNewImpl_();

 public:
  static constexpr auto InternalGenerateClassData_();

  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------
  using CompareResult = Compare_CompareResult;
  static constexpr CompareResult EQUAL = Compare_CompareResult_EQUAL;
  static constexpr CompareResult GREATER = Compare_CompareResult_GREATER;
  static constexpr CompareResult LESS = Compare_CompareResult_LESS;
  static constexpr CompareResult NOT_EQUAL = Compare_CompareResult_NOT_EQUAL;
  static inline bool CompareResult_IsValid(int value) {
    return Compare_CompareResult_IsValid(value);
  }
  static constexpr CompareResult CompareResult_MIN = Compare_CompareResult_CompareResult_MIN;
  static constexpr CompareResult CompareResult_MAX = Compare_CompareResult_CompareResult_MAX;
  static constexpr int CompareResult_ARRAYSIZE = Compare_CompareResult_CompareResult_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor* PROTOBUF_NONNULL CompareResult_descriptor() {
    return Compare_CompareResult_descriptor();
  }
  template <typename T>
  static inline const ::std::string& CompareResult_Name(T value) {
    return Compare_CompareResult_Name(value);
  }
  static inline bool CompareResult_Parse(
      ::absl::string_view name, CompareResult* PROTOBUF_NONNULL value) {
    return Compare_CompareResult_Parse(name, value);
  }
  using CompareTarget = Compare_CompareTarget;
  static constexpr CompareTarget VERSION = Compare_CompareTarget_VERSION;
  static constexpr CompareTarget CREATE = Compare_CompareTarget_CREATE;
  static constexpr CompareTarget MOD = Compare_CompareTarget_MOD;
  static constexpr CompareTarget VALUE = Compare_CompareTarget_VALUE;
  static constexpr CompareTarget LEASE = Compare_CompareTarget_LEASE;
  static inline bool CompareTarget_IsValid(int value) {
    return Compare_CompareTarget_IsValid(value);
  }
  static constexpr CompareTarget CompareTarget_MIN = Compare_CompareTarget_CompareTarget_MIN;
  static constexpr CompareTarget CompareTarget_MAX = Compare_CompareTarget_CompareTarget_MAX;
  static constexpr int CompareTarget_ARRAYSIZE = Compare_CompareTarget_CompareTarget_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor* PROTOBUF_NONNULL CompareTarget_descriptor() {
    return Compare_CompareTarget_descriptor();
  }
  template <typename T>
  static inline const ::std::string& CompareTarget_Name(T value) {
    return Compare_CompareTarget_Name(value);
  }
  static inline bool CompareTarget_Parse(
      ::absl::string_view name, CompareTarget* PROTOBUF_NONNULL value) {
    return Compare_CompareTarget_Parse(name, value);
  }

  // accessors -------------------------------------------------------
  enum : int {
    kKeyFieldNumber = 3,
    kRangeEndFieldNumber = 64,
    kResultFieldNumber = 1,
    kTargetFieldNumber = 2,
    kVersionFieldNumber = 4,
    kCreateRevisionFieldNumber = 5,
    kModRevisionFieldNumber = 6,
    kValueFieldNumber = 7,
    kLeaseFieldNumber = 8,
  };
  // bytes key = 3;
  void clear_key() ;
  const ::std::string& key() const;
  template <typename Arg_ = const ::std::string&, typename... Args_>
  void set_key(Arg_&& arg, Args_... args);
  ::std::string* PROTOBUF_NONNULL mutable_key();
  [[nodiscard]] ::std::string* PROTOBUF_NULLABLE release_key();
  void set_allocated_key(::std::string* PROTOBUF_NULLABLE value);

  private:
  const ::std::string& _internal_key() const;
  PROTOBUF_ALWAYS_INLINE void _internal_set_key(const ::std::string& value);
  ::std::string* PROTOBUF_NONNULL _internal_mutable_key();

  public:
  // bytes range_end = 64 [(.versionpb.etcd_version_field) = "3.3"];
  void clear_range_end() ;
  const ::std::string& range_end() const;
  template <typename Arg_ = const ::std::string&, typename... Args_>
  void set_range_end(Arg_&& arg, Args_... args);
  ::std::string* PROTOBUF_NONNULL mutable_range_end();
  [[nodiscard]] ::std::string* PROTOBUF_NULLABLE release_range_end();
  void set_allocated_range_end(::std::string* PROTOBUF_NULLABLE value);

  private:
  const ::std::string& _internal_range_end() const;
  PROTOBUF_ALWAYS_INLINE void _internal_set_range_end(const ::std::string& value);
  ::std::string* PROTOBUF_NONNULL _internal_mutable_range_end();

  public:
  // .etcdserverpb.Compare.CompareResult result = 1;
  void clear_result() ;
  ::etcdserverpb::Compare_CompareResult result() const;
  void set_result(::etcdserverpb::Compare_CompareResult value);

  private:
  ::etcdserverpb::Compare_CompareResult _internal_result() const;
  void _internal_set_result(::etcdserverpb::Compare_CompareResult value);

  public:
  // .etcdserverpb.Compare.CompareTarget target = 2;
  void clear_target() ;
  ::etcdserverpb::Compare_CompareTarget target() const;
  void set_target(::etcdserverpb::Compare_CompareTarget value);

  private:
  ::etcdserverpb::Compare_CompareTarget _internal_target() const;
  void _internal_set_target(::etcdserverpb::Compare_CompareTarget value);

  public:
  // int64 version = 4;
  bool has_version() const;
  void clear_version() ;
  ::int64_t version() const;
  void set_version(::int64_t value);

  private:
  ::int64_t _internal_version() const;
  void _internal_set_version(::int64_t value);

  public:
  // int64 create_revision = 5;
  bool has_create_revision() const;
  void clear_create_revision() ;
  ::int64_t create_revision() const;
  void set_create_revision(::int64_t value);

  private:
  ::int64_t _internal_create_revision() const;
  void _internal_set_create_revision(::int64_t value);

  public:
  // int64 mod_revision = 6;
  bool has_mod_revision() const;
  void clear_mod_revision() ;
  ::int64_t mod_revision() const;
  void set_mod_revision(::int64_t value);

  private:
  ::int64_t _internal_mod_revision() const;
  void _internal_set_mod_revision(::int64_t value);

  public:
  // bytes value = 7;
  bool has_value() const;
  void clear_value() ;
  const ::std::string& value() const;
  template <typename Arg_ = const ::std::string&, typename... Args_>
  void set_value(Arg_&& arg, Args_... args);
  ::std::string* PROTOBUF_NONNULL mutable_value();
  [[nodiscard]] ::std::string* PROTOBUF_NULLABLE release_value();
  void set_allocated_value(::std::string* PROTOBUF_NULLABLE value);

  private:
  const ::std::string& _internal_value() const;
  PROTOBUF_ALWAYS_INLINE void _internal_set_value(const ::std::string& value);
  ::std::string* PROTOBUF_NONNULL _internal_mutable_value();

  public:
  // int64 lease = 8 [(.versionpb.etcd_version_field) = "3.3"];
  bool has_lease() const;
  void clear_lease() ;
  ::int64_t lease() const;
  void set_lease(::int64_t value);

  private:
  ::int64_t _internal_lease() const;
  void _internal_set_lease(::int64_t value);

  public:
  void clear_target_union();
  TargetUnionCase target_union_case() const;
  // @@protoc_insertion_point(class_scope:etcdserverpb.Compare)
 private:
  class _Internal;
  void set_has_version();
  void set_has_create_revision();
  void set_has_mod_revision();
  void set_has_value();
  void set_has_lease();
  inline bool has_target_union() const;
  inline void clear_has_target_union();
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<2, 9,
                                   0, 0,
                                   7>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(
        ::google::protobuf::internal::InternalVisibility visibility,
        ::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
    inline explicit Impl_(
        ::google::protobuf::internal::InternalVisibility visibility,
        ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const Impl_& from,
        const Compare& from_msg);
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    ::google::protobuf::internal::ArenaStringPtr key_;
    ::google::protobuf::internal::ArenaStringPtr range_end_;
    int result_;
    int target_;
    union TargetUnionUnion {
      constexpr TargetUnionUnion() : _constinit_{} {}
      ::google::protobuf::internal::ConstantInitialized _constinit_;
      ::int64_t version_;
      ::int64_t create_revision_;
      ::int64_t mod_revision_;
      ::google::protobuf::internal::ArenaStringPtr value_;
      ::int64_t lease_;
    } target_union_;
    ::uint32_t _oneof_case_[1];
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_proto_2fmiddleware_2fetcd_2fetcd_2eproto;
};

extern const ::google::protobuf::internal::ClassDataFull Compare_class_data_;
// -------------------------------------------------------------------

class CompactionRequest final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:etcdserverpb.CompactionRequest) */ {
 public:
  inline CompactionRequest() : CompactionRequest(nullptr) {}
  ~CompactionRequest() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(CompactionRequest* PROTOBUF_NONNULL msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(CompactionRequest));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR CompactionRequest(::google::protobuf::internal::ConstantInitialized);

  inline CompactionRequest(const CompactionRequest& from) : CompactionRequest(nullptr, from) {}
  inline CompactionRequest(CompactionRequest&& from) noexcept
      : CompactionRequest(nullptr, ::std::move(from)) {}
  inline CompactionRequest& operator=(const CompactionRequest& from) {
    CopyFrom(from);
    return *this;
  }
  inline CompactionRequest& operator=(CompactionRequest&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* PROTOBUF_NONNULL mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* PROTOBUF_NONNULL descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* PROTOBUF_NONNULL GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* PROTOBUF_NONNULL GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const CompactionRequest& default_instance() {
    return *reinterpret_cast<const CompactionRequest*>(
        &_CompactionRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 12;
  friend void swap(CompactionRequest& a, CompactionRequest& b) { a.Swap(&b); }
  inline void Swap(CompactionRequest* PROTOBUF_NONNULL other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(CompactionRequest* PROTOBUF_NONNULL other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  CompactionRequest* PROTOBUF_NONNULL New(::google::protobuf::Arena* PROTOBUF_NULLABLE arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<CompactionRequest>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const CompactionRequest& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const CompactionRequest& from) { CompactionRequest::MergeImpl(*this, from); }

  private:
  static void MergeImpl(::google::protobuf::MessageLite& to_msg,
                        const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* PROTOBUF_NONNULL _InternalSerialize(
      const ::google::protobuf::MessageLite& msg, ::uint8_t* PROTOBUF_NONNULL target,
      ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* PROTOBUF_NONNULL _InternalSerialize(
      ::uint8_t* PROTOBUF_NONNULL target,
      ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* PROTOBUF_NONNULL _InternalSerialize(
      ::uint8_t* PROTOBUF_NONNULL target,
      ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(CompactionRequest* PROTOBUF_NONNULL other);
 private:
  template <typename T>
  friend ::absl::string_view(::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "etcdserverpb.CompactionRequest"; }

 protected:
  explicit CompactionRequest(::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  CompactionRequest(::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const CompactionRequest& from);
  CompactionRequest(
      ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, CompactionRequest&& from) noexcept
      : CompactionRequest(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* PROTOBUF_NONNULL GetClassData() const PROTOBUF_FINAL;
  static void* PROTOBUF_NONNULL PlacementNew_(
      const void* PROTOBUF_NONNULL, void* PROTOBUF_NONNULL mem,
      ::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  static constexpr auto InternalNewImpl_();

 public:
  static constexpr auto InternalGenerateClassData_();

  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kRevisionFieldNumber = 1,
    kPhysicalFieldNumber = 2,
  };
  // int64 revision = 1;
  void clear_revision() ;
  ::int64_t revision() const;
  void set_revision(::int64_t value);

  private:
  ::int64_t _internal_revision() const;
  void _internal_set_revision(::int64_t value);

  public:
  // bool physical = 2;
  void clear_physical() ;
  bool physical() const;
  void set_physical(bool value);

  private:
  bool _internal_physical() const;
  void _internal_set_physical(bool value);

  public:
  // @@protoc_insertion_point(class_scope:etcdserverpb.CompactionRequest)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<1, 2,
                                   0, 0,
                                   2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(
        ::google::protobuf::internal::InternalVisibility visibility,
        ::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
    inline explicit Impl_(
        ::google::protobuf::internal::InternalVisibility visibility,
        ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const Impl_& from,
        const CompactionRequest& from_msg);
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    ::int64_t revision_;
    bool physical_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_proto_2fmiddleware_2fetcd_2fetcd_2eproto;
};

extern const ::google::protobuf::internal::ClassDataFull CompactionRequest_class_data_;
// -------------------------------------------------------------------

class WatchRequest final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:etcdserverpb.WatchRequest) */ {
 public:
  inline WatchRequest() : WatchRequest(nullptr) {}
  ~WatchRequest() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(WatchRequest* PROTOBUF_NONNULL msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(WatchRequest));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR WatchRequest(::google::protobuf::internal::ConstantInitialized);

  inline WatchRequest(const WatchRequest& from) : WatchRequest(nullptr, from) {}
  inline WatchRequest(WatchRequest&& from) noexcept
      : WatchRequest(nullptr, ::std::move(from)) {}
  inline WatchRequest& operator=(const WatchRequest& from) {
    CopyFrom(from);
    return *this;
  }
  inline WatchRequest& operator=(WatchRequest&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* PROTOBUF_NONNULL mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* PROTOBUF_NONNULL descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* PROTOBUF_NONNULL GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* PROTOBUF_NONNULL GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const WatchRequest& default_instance() {
    return *reinterpret_cast<const WatchRequest*>(
        &_WatchRequest_default_instance_);
  }
  enum RequestUnionCase {
    kCreateRequest = 1,
    kCancelRequest = 2,
    kProgressRequest = 3,
    REQUEST_UNION_NOT_SET = 0,
  };
  static constexpr int kIndexInFileMessages = 14;
  friend void swap(WatchRequest& a, WatchRequest& b) { a.Swap(&b); }
  inline void Swap(WatchRequest* PROTOBUF_NONNULL other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(WatchRequest* PROTOBUF_NONNULL other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  WatchRequest* PROTOBUF_NONNULL New(::google::protobuf::Arena* PROTOBUF_NULLABLE arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<WatchRequest>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const WatchRequest& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const WatchRequest& from) { WatchRequest::MergeImpl(*this, from); }

  private:
  static void MergeImpl(::google::protobuf::MessageLite& to_msg,
                        const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* PROTOBUF_NONNULL _InternalSerialize(
      const ::google::protobuf::MessageLite& msg, ::uint8_t* PROTOBUF_NONNULL target,
      ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* PROTOBUF_NONNULL _InternalSerialize(
      ::uint8_t* PROTOBUF_NONNULL target,
      ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* PROTOBUF_NONNULL _InternalSerialize(
      ::uint8_t* PROTOBUF_NONNULL target,
      ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(WatchRequest* PROTOBUF_NONNULL other);
 private:
  template <typename T>
  friend ::absl::string_view(::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "etcdserverpb.WatchRequest"; }

 protected:
  explicit WatchRequest(::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  WatchRequest(::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const WatchRequest& from);
  WatchRequest(
      ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, WatchRequest&& from) noexcept
      : WatchRequest(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* PROTOBUF_NONNULL GetClassData() const PROTOBUF_FINAL;
  static void* PROTOBUF_NONNULL PlacementNew_(
      const void* PROTOBUF_NONNULL, void* PROTOBUF_NONNULL mem,
      ::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  static constexpr auto InternalNewImpl_();

 public:
  static constexpr auto InternalGenerateClassData_();

  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kCreateRequestFieldNumber = 1,
    kCancelRequestFieldNumber = 2,
    kProgressRequestFieldNumber = 3,
  };
  // .etcdserverpb.WatchCreateRequest create_request = 1;
  bool has_create_request() const;
  private:
  bool _internal_has_create_request() const;

  public:
  void clear_create_request() ;
  const ::etcdserverpb::WatchCreateRequest& create_request() const;
  [[nodiscard]] ::etcdserverpb::WatchCreateRequest* PROTOBUF_NULLABLE release_create_request();
  ::etcdserverpb::WatchCreateRequest* PROTOBUF_NONNULL mutable_create_request();
  void set_allocated_create_request(::etcdserverpb::WatchCreateRequest* PROTOBUF_NULLABLE value);
  void unsafe_arena_set_allocated_create_request(::etcdserverpb::WatchCreateRequest* PROTOBUF_NULLABLE value);
  ::etcdserverpb::WatchCreateRequest* PROTOBUF_NULLABLE unsafe_arena_release_create_request();

  private:
  const ::etcdserverpb::WatchCreateRequest& _internal_create_request() const;
  ::etcdserverpb::WatchCreateRequest* PROTOBUF_NONNULL _internal_mutable_create_request();

  public:
  // .etcdserverpb.WatchCancelRequest cancel_request = 2;
  bool has_cancel_request() const;
  private:
  bool _internal_has_cancel_request() const;

  public:
  void clear_cancel_request() ;
  const ::etcdserverpb::WatchCancelRequest& cancel_request() const;
  [[nodiscard]] ::etcdserverpb::WatchCancelRequest* PROTOBUF_NULLABLE release_cancel_request();
  ::etcdserverpb::WatchCancelRequest* PROTOBUF_NONNULL mutable_cancel_request();
  void set_allocated_cancel_request(::etcdserverpb::WatchCancelRequest* PROTOBUF_NULLABLE value);
  void unsafe_arena_set_allocated_cancel_request(::etcdserverpb::WatchCancelRequest* PROTOBUF_NULLABLE value);
  ::etcdserverpb::WatchCancelRequest* PROTOBUF_NULLABLE unsafe_arena_release_cancel_request();

  private:
  const ::etcdserverpb::WatchCancelRequest& _internal_cancel_request() const;
  ::etcdserverpb::WatchCancelRequest* PROTOBUF_NONNULL _internal_mutable_cancel_request();

  public:
  // .etcdserverpb.WatchProgressRequest progress_request = 3 [(.versionpb.etcd_version_field) = "3.4"];
  bool has_progress_request() const;
  private:
  bool _internal_has_progress_request() const;

  public:
  void clear_progress_request() ;
  const ::etcdserverpb::WatchProgressRequest& progress_request() const;
  [[nodiscard]] ::etcdserverpb::WatchProgressRequest* PROTOBUF_NULLABLE release_progress_request();
  ::etcdserverpb::WatchProgressRequest* PROTOBUF_NONNULL mutable_progress_request();
  void set_allocated_progress_request(::etcdserverpb::WatchProgressRequest* PROTOBUF_NULLABLE value);
  void unsafe_arena_set_allocated_progress_request(::etcdserverpb::WatchProgressRequest* PROTOBUF_NULLABLE value);
  ::etcdserverpb::WatchProgressRequest* PROTOBUF_NULLABLE unsafe_arena_release_progress_request();

  private:
  const ::etcdserverpb::WatchProgressRequest& _internal_progress_request() const;
  ::etcdserverpb::WatchProgressRequest* PROTOBUF_NONNULL _internal_mutable_progress_request();

  public:
  void clear_request_union();
  RequestUnionCase request_union_case() const;
  // @@protoc_insertion_point(class_scope:etcdserverpb.WatchRequest)
 private:
  class _Internal;
  void set_has_create_request();
  void set_has_cancel_request();
  void set_has_progress_request();
  inline bool has_request_union() const;
  inline void clear_has_request_union();
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<0, 3,
                                   3, 0,
                                   2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(
        ::google::protobuf::internal::InternalVisibility visibility,
        ::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
    inline explicit Impl_(
        ::google::protobuf::internal::InternalVisibility visibility,
        ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const Impl_& from,
        const WatchRequest& from_msg);
    union RequestUnionUnion {
      constexpr RequestUnionUnion() : _constinit_{} {}
      ::google::protobuf::internal::ConstantInitialized _constinit_;
      ::google::protobuf::Message* PROTOBUF_NULLABLE create_request_;
      ::google::protobuf::Message* PROTOBUF_NULLABLE cancel_request_;
      ::google::protobuf::Message* PROTOBUF_NULLABLE progress_request_;
    } request_union_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    ::uint32_t _oneof_case_[1];
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_proto_2fmiddleware_2fetcd_2fetcd_2eproto;
};

extern const ::google::protobuf::internal::ClassDataFull WatchRequest_class_data_;
// -------------------------------------------------------------------

class RequestOp final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:etcdserverpb.RequestOp) */ {
 public:
  inline RequestOp() : RequestOp(nullptr) {}
  ~RequestOp() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(RequestOp* PROTOBUF_NONNULL msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(RequestOp));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR RequestOp(::google::protobuf::internal::ConstantInitialized);

  inline RequestOp(const RequestOp& from) : RequestOp(nullptr, from) {}
  inline RequestOp(RequestOp&& from) noexcept
      : RequestOp(nullptr, ::std::move(from)) {}
  inline RequestOp& operator=(const RequestOp& from) {
    CopyFrom(from);
    return *this;
  }
  inline RequestOp& operator=(RequestOp&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* PROTOBUF_NONNULL mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* PROTOBUF_NONNULL descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* PROTOBUF_NONNULL GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* PROTOBUF_NONNULL GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const RequestOp& default_instance() {
    return *reinterpret_cast<const RequestOp*>(
        &_RequestOp_default_instance_);
  }
  enum RequestCase {
    kRequestRange = 1,
    kRequestPut = 2,
    kRequestDeleteRange = 3,
    kRequestTxn = 4,
    REQUEST_NOT_SET = 0,
  };
  static constexpr int kIndexInFileMessages = 7;
  friend void swap(RequestOp& a, RequestOp& b) { a.Swap(&b); }
  inline void Swap(RequestOp* PROTOBUF_NONNULL other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(RequestOp* PROTOBUF_NONNULL other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  RequestOp* PROTOBUF_NONNULL New(::google::protobuf::Arena* PROTOBUF_NULLABLE arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<RequestOp>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const RequestOp& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const RequestOp& from) { RequestOp::MergeImpl(*this, from); }

  private:
  static void MergeImpl(::google::protobuf::MessageLite& to_msg,
                        const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* PROTOBUF_NONNULL _InternalSerialize(
      const ::google::protobuf::MessageLite& msg, ::uint8_t* PROTOBUF_NONNULL target,
      ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* PROTOBUF_NONNULL _InternalSerialize(
      ::uint8_t* PROTOBUF_NONNULL target,
      ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* PROTOBUF_NONNULL _InternalSerialize(
      ::uint8_t* PROTOBUF_NONNULL target,
      ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(RequestOp* PROTOBUF_NONNULL other);
 private:
  template <typename T>
  friend ::absl::string_view(::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "etcdserverpb.RequestOp"; }

 protected:
  explicit RequestOp(::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  RequestOp(::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const RequestOp& from);
  RequestOp(
      ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, RequestOp&& from) noexcept
      : RequestOp(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* PROTOBUF_NONNULL GetClassData() const PROTOBUF_FINAL;
  static void* PROTOBUF_NONNULL PlacementNew_(
      const void* PROTOBUF_NONNULL, void* PROTOBUF_NONNULL mem,
      ::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  static constexpr auto InternalNewImpl_();

 public:
  static constexpr auto InternalGenerateClassData_();

  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kRequestRangeFieldNumber = 1,
    kRequestPutFieldNumber = 2,
    kRequestDeleteRangeFieldNumber = 3,
    kRequestTxnFieldNumber = 4,
  };
  // .etcdserverpb.RangeRequest request_range = 1;
  bool has_request_range() const;
  private:
  bool _internal_has_request_range() const;

  public:
  void clear_request_range() ;
  const ::etcdserverpb::RangeRequest& request_range() const;
  [[nodiscard]] ::etcdserverpb::RangeRequest* PROTOBUF_NULLABLE release_request_range();
  ::etcdserverpb::RangeRequest* PROTOBUF_NONNULL mutable_request_range();
  void set_allocated_request_range(::etcdserverpb::RangeRequest* PROTOBUF_NULLABLE value);
  void unsafe_arena_set_allocated_request_range(::etcdserverpb::RangeRequest* PROTOBUF_NULLABLE value);
  ::etcdserverpb::RangeRequest* PROTOBUF_NULLABLE unsafe_arena_release_request_range();

  private:
  const ::etcdserverpb::RangeRequest& _internal_request_range() const;
  ::etcdserverpb::RangeRequest* PROTOBUF_NONNULL _internal_mutable_request_range();

  public:
  // .etcdserverpb.PutRequest request_put = 2;
  bool has_request_put() const;
  private:
  bool _internal_has_request_put() const;

  public:
  void clear_request_put() ;
  const ::etcdserverpb::PutRequest& request_put() const;
  [[nodiscard]] ::etcdserverpb::PutRequest* PROTOBUF_NULLABLE release_request_put();
  ::etcdserverpb::PutRequest* PROTOBUF_NONNULL mutable_request_put();
  void set_allocated_request_put(::etcdserverpb::PutRequest* PROTOBUF_NULLABLE value);
  void unsafe_arena_set_allocated_request_put(::etcdserverpb::PutRequest* PROTOBUF_NULLABLE value);
  ::etcdserverpb::PutRequest* PROTOBUF_NULLABLE unsafe_arena_release_request_put();

  private:
  const ::etcdserverpb::PutRequest& _internal_request_put() const;
  ::etcdserverpb::PutRequest* PROTOBUF_NONNULL _internal_mutable_request_put();

  public:
  // .etcdserverpb.DeleteRangeRequest request_delete_range = 3;
  bool has_request_delete_range() const;
  private:
  bool _internal_has_request_delete_range() const;

  public:
  void clear_request_delete_range() ;
  const ::etcdserverpb::DeleteRangeRequest& request_delete_range() const;
  [[nodiscard]] ::etcdserverpb::DeleteRangeRequest* PROTOBUF_NULLABLE release_request_delete_range();
  ::etcdserverpb::DeleteRangeRequest* PROTOBUF_NONNULL mutable_request_delete_range();
  void set_allocated_request_delete_range(::etcdserverpb::DeleteRangeRequest* PROTOBUF_NULLABLE value);
  void unsafe_arena_set_allocated_request_delete_range(::etcdserverpb::DeleteRangeRequest* PROTOBUF_NULLABLE value);
  ::etcdserverpb::DeleteRangeRequest* PROTOBUF_NULLABLE unsafe_arena_release_request_delete_range();

  private:
  const ::etcdserverpb::DeleteRangeRequest& _internal_request_delete_range() const;
  ::etcdserverpb::DeleteRangeRequest* PROTOBUF_NONNULL _internal_mutable_request_delete_range();

  public:
  // .etcdserverpb.TxnRequest request_txn = 4 [(.versionpb.etcd_version_field) = "3.3"];
  bool has_request_txn() const;
  private:
  bool _internal_has_request_txn() const;

  public:
  void clear_request_txn() ;
  const ::etcdserverpb::TxnRequest& request_txn() const;
  [[nodiscard]] ::etcdserverpb::TxnRequest* PROTOBUF_NULLABLE release_request_txn();
  ::etcdserverpb::TxnRequest* PROTOBUF_NONNULL mutable_request_txn();
  void set_allocated_request_txn(::etcdserverpb::TxnRequest* PROTOBUF_NULLABLE value);
  void unsafe_arena_set_allocated_request_txn(::etcdserverpb::TxnRequest* PROTOBUF_NULLABLE value);
  ::etcdserverpb::TxnRequest* PROTOBUF_NULLABLE unsafe_arena_release_request_txn();

  private:
  const ::etcdserverpb::TxnRequest& _internal_request_txn() const;
  ::etcdserverpb::TxnRequest* PROTOBUF_NONNULL _internal_mutable_request_txn();

  public:
  void clear_request();
  RequestCase request_case() const;
  // @@protoc_insertion_point(class_scope:etcdserverpb.RequestOp)
 private:
  class _Internal;
  void set_has_request_range();
  void set_has_request_put();
  void set_has_request_delete_range();
  void set_has_request_txn();
  inline bool has_request() const;
  inline void clear_has_request();
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<0, 4,
                                   4, 0,
                                   2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(
        ::google::protobuf::internal::InternalVisibility visibility,
        ::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
    inline explicit Impl_(
        ::google::protobuf::internal::InternalVisibility visibility,
        ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const Impl_& from,
        const RequestOp& from_msg);
    union RequestUnion {
      constexpr RequestUnion() : _constinit_{} {}
      ::google::protobuf::internal::ConstantInitialized _constinit_;
      ::google::protobuf::Message* PROTOBUF_NULLABLE request_range_;
      ::google::protobuf::Message* PROTOBUF_NULLABLE request_put_;
      ::google::protobuf::Message* PROTOBUF_NULLABLE request_delete_range_;
      ::google::protobuf::Message* PROTOBUF_NULLABLE request_txn_;
    } request_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    ::uint32_t _oneof_case_[1];
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_proto_2fmiddleware_2fetcd_2fetcd_2eproto;
};

extern const ::google::protobuf::internal::ClassDataFull RequestOp_class_data_;
// -------------------------------------------------------------------

class TxnRequest final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:etcdserverpb.TxnRequest) */ {
 public:
  inline TxnRequest() : TxnRequest(nullptr) {}
  ~TxnRequest() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(TxnRequest* PROTOBUF_NONNULL msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(TxnRequest));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR TxnRequest(::google::protobuf::internal::ConstantInitialized);

  inline TxnRequest(const TxnRequest& from) : TxnRequest(nullptr, from) {}
  inline TxnRequest(TxnRequest&& from) noexcept
      : TxnRequest(nullptr, ::std::move(from)) {}
  inline TxnRequest& operator=(const TxnRequest& from) {
    CopyFrom(from);
    return *this;
  }
  inline TxnRequest& operator=(TxnRequest&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* PROTOBUF_NONNULL mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* PROTOBUF_NONNULL descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* PROTOBUF_NONNULL GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* PROTOBUF_NONNULL GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const TxnRequest& default_instance() {
    return *reinterpret_cast<const TxnRequest*>(
        &_TxnRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 10;
  friend void swap(TxnRequest& a, TxnRequest& b) { a.Swap(&b); }
  inline void Swap(TxnRequest* PROTOBUF_NONNULL other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(TxnRequest* PROTOBUF_NONNULL other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  TxnRequest* PROTOBUF_NONNULL New(::google::protobuf::Arena* PROTOBUF_NULLABLE arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<TxnRequest>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const TxnRequest& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const TxnRequest& from) { TxnRequest::MergeImpl(*this, from); }

  private:
  static void MergeImpl(::google::protobuf::MessageLite& to_msg,
                        const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* PROTOBUF_NONNULL _InternalSerialize(
      const ::google::protobuf::MessageLite& msg, ::uint8_t* PROTOBUF_NONNULL target,
      ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* PROTOBUF_NONNULL _InternalSerialize(
      ::uint8_t* PROTOBUF_NONNULL target,
      ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* PROTOBUF_NONNULL _InternalSerialize(
      ::uint8_t* PROTOBUF_NONNULL target,
      ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(TxnRequest* PROTOBUF_NONNULL other);
 private:
  template <typename T>
  friend ::absl::string_view(::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "etcdserverpb.TxnRequest"; }

 protected:
  explicit TxnRequest(::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  TxnRequest(::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const TxnRequest& from);
  TxnRequest(
      ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, TxnRequest&& from) noexcept
      : TxnRequest(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* PROTOBUF_NONNULL GetClassData() const PROTOBUF_FINAL;
  static void* PROTOBUF_NONNULL PlacementNew_(
      const void* PROTOBUF_NONNULL, void* PROTOBUF_NONNULL mem,
      ::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  static constexpr auto InternalNewImpl_();

 public:
  static constexpr auto InternalGenerateClassData_();

  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kCompareFieldNumber = 1,
    kSuccessFieldNumber = 2,
    kFailureFieldNumber = 3,
  };
  // repeated .etcdserverpb.Compare compare = 1;
  int compare_size() const;
  private:
  int _internal_compare_size() const;

  public:
  void clear_compare() ;
  ::etcdserverpb::Compare* PROTOBUF_NONNULL mutable_compare(int index);
  ::google::protobuf::RepeatedPtrField<::etcdserverpb::Compare>* PROTOBUF_NONNULL mutable_compare();

  private:
  const ::google::protobuf::RepeatedPtrField<::etcdserverpb::Compare>& _internal_compare() const;
  ::google::protobuf::RepeatedPtrField<::etcdserverpb::Compare>* PROTOBUF_NONNULL _internal_mutable_compare();
  public:
  const ::etcdserverpb::Compare& compare(int index) const;
  ::etcdserverpb::Compare* PROTOBUF_NONNULL add_compare();
  const ::google::protobuf::RepeatedPtrField<::etcdserverpb::Compare>& compare() const;
  // repeated .etcdserverpb.RequestOp success = 2;
  int success_size() const;
  private:
  int _internal_success_size() const;

  public:
  void clear_success() ;
  ::etcdserverpb::RequestOp* PROTOBUF_NONNULL mutable_success(int index);
  ::google::protobuf::RepeatedPtrField<::etcdserverpb::RequestOp>* PROTOBUF_NONNULL mutable_success();

  private:
  const ::google::protobuf::RepeatedPtrField<::etcdserverpb::RequestOp>& _internal_success() const;
  ::google::protobuf::RepeatedPtrField<::etcdserverpb::RequestOp>* PROTOBUF_NONNULL _internal_mutable_success();
  public:
  const ::etcdserverpb::RequestOp& success(int index) const;
  ::etcdserverpb::RequestOp* PROTOBUF_NONNULL add_success();
  const ::google::protobuf::RepeatedPtrField<::etcdserverpb::RequestOp>& success() const;
  // repeated .etcdserverpb.RequestOp failure = 3;
  int failure_size() const;
  private:
  int _internal_failure_size() const;

  public:
  void clear_failure() ;
  ::etcdserverpb::RequestOp* PROTOBUF_NONNULL mutable_failure(int index);
  ::google::protobuf::RepeatedPtrField<::etcdserverpb::RequestOp>* PROTOBUF_NONNULL mutable_failure();

  private:
  const ::google::protobuf::RepeatedPtrField<::etcdserverpb::RequestOp>& _internal_failure() const;
  ::google::protobuf::RepeatedPtrField<::etcdserverpb::RequestOp>* PROTOBUF_NONNULL _internal_mutable_failure();
  public:
  const ::etcdserverpb::RequestOp& failure(int index) const;
  ::etcdserverpb::RequestOp* PROTOBUF_NONNULL add_failure();
  const ::google::protobuf::RepeatedPtrField<::etcdserverpb::RequestOp>& failure() const;
  // @@protoc_insertion_point(class_scope:etcdserverpb.TxnRequest)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<2, 3,
                                   3, 0,
                                   2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(
        ::google::protobuf::internal::InternalVisibility visibility,
        ::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
    inline explicit Impl_(
        ::google::protobuf::internal::InternalVisibility visibility,
        ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const Impl_& from,
        const TxnRequest& from_msg);
    ::google::protobuf::RepeatedPtrField< ::etcdserverpb::Compare > compare_;
    ::google::protobuf::RepeatedPtrField< ::etcdserverpb::RequestOp > success_;
    ::google::protobuf::RepeatedPtrField< ::etcdserverpb::RequestOp > failure_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_proto_2fmiddleware_2fetcd_2fetcd_2eproto;
};

extern const ::google::protobuf::internal::ClassDataFull TxnRequest_class_data_;
// -------------------------------------------------------------------

class RangeResponse final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:etcdserverpb.RangeResponse) */ {
 public:
  inline RangeResponse() : RangeResponse(nullptr) {}
  ~RangeResponse() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(RangeResponse* PROTOBUF_NONNULL msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(RangeResponse));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR RangeResponse(::google::protobuf::internal::ConstantInitialized);

  inline RangeResponse(const RangeResponse& from) : RangeResponse(nullptr, from) {}
  inline RangeResponse(RangeResponse&& from) noexcept
      : RangeResponse(nullptr, ::std::move(from)) {}
  inline RangeResponse& operator=(const RangeResponse& from) {
    CopyFrom(from);
    return *this;
  }
  inline RangeResponse& operator=(RangeResponse&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* PROTOBUF_NONNULL mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* PROTOBUF_NONNULL descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* PROTOBUF_NONNULL GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* PROTOBUF_NONNULL GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const RangeResponse& default_instance() {
    return *reinterpret_cast<const RangeResponse*>(
        &_RangeResponse_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 2;
  friend void swap(RangeResponse& a, RangeResponse& b) { a.Swap(&b); }
  inline void Swap(RangeResponse* PROTOBUF_NONNULL other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(RangeResponse* PROTOBUF_NONNULL other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  RangeResponse* PROTOBUF_NONNULL New(::google::protobuf::Arena* PROTOBUF_NULLABLE arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<RangeResponse>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const RangeResponse& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const RangeResponse& from) { RangeResponse::MergeImpl(*this, from); }

  private:
  static void MergeImpl(::google::protobuf::MessageLite& to_msg,
                        const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* PROTOBUF_NONNULL _InternalSerialize(
      const ::google::protobuf::MessageLite& msg, ::uint8_t* PROTOBUF_NONNULL target,
      ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* PROTOBUF_NONNULL _InternalSerialize(
      ::uint8_t* PROTOBUF_NONNULL target,
      ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* PROTOBUF_NONNULL _InternalSerialize(
      ::uint8_t* PROTOBUF_NONNULL target,
      ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(RangeResponse* PROTOBUF_NONNULL other);
 private:
  template <typename T>
  friend ::absl::string_view(::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "etcdserverpb.RangeResponse"; }

 protected:
  explicit RangeResponse(::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  RangeResponse(::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const RangeResponse& from);
  RangeResponse(
      ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, RangeResponse&& from) noexcept
      : RangeResponse(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* PROTOBUF_NONNULL GetClassData() const PROTOBUF_FINAL;
  static void* PROTOBUF_NONNULL PlacementNew_(
      const void* PROTOBUF_NONNULL, void* PROTOBUF_NONNULL mem,
      ::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  static constexpr auto InternalNewImpl_();

 public:
  static constexpr auto InternalGenerateClassData_();

  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kKvsFieldNumber = 2,
    kHeaderFieldNumber = 1,
    kCountFieldNumber = 4,
    kMoreFieldNumber = 3,
  };
  // repeated .mvccpb.KeyValue kvs = 2;
  int kvs_size() const;
  private:
  int _internal_kvs_size() const;

  public:
  void clear_kvs() ;
  ::mvccpb::KeyValue* PROTOBUF_NONNULL mutable_kvs(int index);
  ::google::protobuf::RepeatedPtrField<::mvccpb::KeyValue>* PROTOBUF_NONNULL mutable_kvs();

  private:
  const ::google::protobuf::RepeatedPtrField<::mvccpb::KeyValue>& _internal_kvs() const;
  ::google::protobuf::RepeatedPtrField<::mvccpb::KeyValue>* PROTOBUF_NONNULL _internal_mutable_kvs();
  public:
  const ::mvccpb::KeyValue& kvs(int index) const;
  ::mvccpb::KeyValue* PROTOBUF_NONNULL add_kvs();
  const ::google::protobuf::RepeatedPtrField<::mvccpb::KeyValue>& kvs() const;
  // .etcdserverpb.ResponseHeader header = 1;
  bool has_header() const;
  void clear_header() ;
  const ::etcdserverpb::ResponseHeader& header() const;
  [[nodiscard]] ::etcdserverpb::ResponseHeader* PROTOBUF_NULLABLE release_header();
  ::etcdserverpb::ResponseHeader* PROTOBUF_NONNULL mutable_header();
  void set_allocated_header(::etcdserverpb::ResponseHeader* PROTOBUF_NULLABLE value);
  void unsafe_arena_set_allocated_header(::etcdserverpb::ResponseHeader* PROTOBUF_NULLABLE value);
  ::etcdserverpb::ResponseHeader* PROTOBUF_NULLABLE unsafe_arena_release_header();

  private:
  const ::etcdserverpb::ResponseHeader& _internal_header() const;
  ::etcdserverpb::ResponseHeader* PROTOBUF_NONNULL _internal_mutable_header();

  public:
  // int64 count = 4;
  void clear_count() ;
  ::int64_t count() const;
  void set_count(::int64_t value);

  private:
  ::int64_t _internal_count() const;
  void _internal_set_count(::int64_t value);

  public:
  // bool more = 3;
  void clear_more() ;
  bool more() const;
  void set_more(bool value);

  private:
  bool _internal_more() const;
  void _internal_set_more(bool value);

  public:
  // @@protoc_insertion_point(class_scope:etcdserverpb.RangeResponse)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<2, 4,
                                   2, 0,
                                   2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(
        ::google::protobuf::internal::InternalVisibility visibility,
        ::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
    inline explicit Impl_(
        ::google::protobuf::internal::InternalVisibility visibility,
        ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const Impl_& from,
        const RangeResponse& from_msg);
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    ::google::protobuf::RepeatedPtrField< ::mvccpb::KeyValue > kvs_;
    ::etcdserverpb::ResponseHeader* PROTOBUF_NULLABLE header_;
    ::int64_t count_;
    bool more_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_proto_2fmiddleware_2fetcd_2fetcd_2eproto;
};

extern const ::google::protobuf::internal::ClassDataFull RangeResponse_class_data_;
// -------------------------------------------------------------------

class PutResponse final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:etcdserverpb.PutResponse) */ {
 public:
  inline PutResponse() : PutResponse(nullptr) {}
  ~PutResponse() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(PutResponse* PROTOBUF_NONNULL msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(PutResponse));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR PutResponse(::google::protobuf::internal::ConstantInitialized);

  inline PutResponse(const PutResponse& from) : PutResponse(nullptr, from) {}
  inline PutResponse(PutResponse&& from) noexcept
      : PutResponse(nullptr, ::std::move(from)) {}
  inline PutResponse& operator=(const PutResponse& from) {
    CopyFrom(from);
    return *this;
  }
  inline PutResponse& operator=(PutResponse&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* PROTOBUF_NONNULL mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* PROTOBUF_NONNULL descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* PROTOBUF_NONNULL GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* PROTOBUF_NONNULL GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const PutResponse& default_instance() {
    return *reinterpret_cast<const PutResponse*>(
        &_PutResponse_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 4;
  friend void swap(PutResponse& a, PutResponse& b) { a.Swap(&b); }
  inline void Swap(PutResponse* PROTOBUF_NONNULL other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(PutResponse* PROTOBUF_NONNULL other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  PutResponse* PROTOBUF_NONNULL New(::google::protobuf::Arena* PROTOBUF_NULLABLE arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<PutResponse>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const PutResponse& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const PutResponse& from) { PutResponse::MergeImpl(*this, from); }

  private:
  static void MergeImpl(::google::protobuf::MessageLite& to_msg,
                        const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* PROTOBUF_NONNULL _InternalSerialize(
      const ::google::protobuf::MessageLite& msg, ::uint8_t* PROTOBUF_NONNULL target,
      ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* PROTOBUF_NONNULL _InternalSerialize(
      ::uint8_t* PROTOBUF_NONNULL target,
      ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* PROTOBUF_NONNULL _InternalSerialize(
      ::uint8_t* PROTOBUF_NONNULL target,
      ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(PutResponse* PROTOBUF_NONNULL other);
 private:
  template <typename T>
  friend ::absl::string_view(::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "etcdserverpb.PutResponse"; }

 protected:
  explicit PutResponse(::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  PutResponse(::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const PutResponse& from);
  PutResponse(
      ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, PutResponse&& from) noexcept
      : PutResponse(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* PROTOBUF_NONNULL GetClassData() const PROTOBUF_FINAL;
  static void* PROTOBUF_NONNULL PlacementNew_(
      const void* PROTOBUF_NONNULL, void* PROTOBUF_NONNULL mem,
      ::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  static constexpr auto InternalNewImpl_();

 public:
  static constexpr auto InternalGenerateClassData_();

  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kHeaderFieldNumber = 1,
    kPrevKvFieldNumber = 2,
  };
  // .etcdserverpb.ResponseHeader header = 1;
  bool has_header() const;
  void clear_header() ;
  const ::etcdserverpb::ResponseHeader& header() const;
  [[nodiscard]] ::etcdserverpb::ResponseHeader* PROTOBUF_NULLABLE release_header();
  ::etcdserverpb::ResponseHeader* PROTOBUF_NONNULL mutable_header();
  void set_allocated_header(::etcdserverpb::ResponseHeader* PROTOBUF_NULLABLE value);
  void unsafe_arena_set_allocated_header(::etcdserverpb::ResponseHeader* PROTOBUF_NULLABLE value);
  ::etcdserverpb::ResponseHeader* PROTOBUF_NULLABLE unsafe_arena_release_header();

  private:
  const ::etcdserverpb::ResponseHeader& _internal_header() const;
  ::etcdserverpb::ResponseHeader* PROTOBUF_NONNULL _internal_mutable_header();

  public:
  // .mvccpb.KeyValue prev_kv = 2 [(.versionpb.etcd_version_field) = "3.1"];
  bool has_prev_kv() const;
  void clear_prev_kv() ;
  const ::mvccpb::KeyValue& prev_kv() const;
  [[nodiscard]] ::mvccpb::KeyValue* PROTOBUF_NULLABLE release_prev_kv();
  ::mvccpb::KeyValue* PROTOBUF_NONNULL mutable_prev_kv();
  void set_allocated_prev_kv(::mvccpb::KeyValue* PROTOBUF_NULLABLE value);
  void unsafe_arena_set_allocated_prev_kv(::mvccpb::KeyValue* PROTOBUF_NULLABLE value);
  ::mvccpb::KeyValue* PROTOBUF_NULLABLE unsafe_arena_release_prev_kv();

  private:
  const ::mvccpb::KeyValue& _internal_prev_kv() const;
  ::mvccpb::KeyValue* PROTOBUF_NONNULL _internal_mutable_prev_kv();

  public:
  // @@protoc_insertion_point(class_scope:etcdserverpb.PutResponse)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<1, 2,
                                   2, 0,
                                   2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(
        ::google::protobuf::internal::InternalVisibility visibility,
        ::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
    inline explicit Impl_(
        ::google::protobuf::internal::InternalVisibility visibility,
        ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const Impl_& from,
        const PutResponse& from_msg);
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    ::etcdserverpb::ResponseHeader* PROTOBUF_NULLABLE header_;
    ::mvccpb::KeyValue* PROTOBUF_NULLABLE prev_kv_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_proto_2fmiddleware_2fetcd_2fetcd_2eproto;
};

extern const ::google::protobuf::internal::ClassDataFull PutResponse_class_data_;
// -------------------------------------------------------------------

class LeaseTimeToLiveResponse final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:etcdserverpb.LeaseTimeToLiveResponse) */ {
 public:
  inline LeaseTimeToLiveResponse() : LeaseTimeToLiveResponse(nullptr) {}
  ~LeaseTimeToLiveResponse() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(LeaseTimeToLiveResponse* PROTOBUF_NONNULL msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(LeaseTimeToLiveResponse));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR LeaseTimeToLiveResponse(::google::protobuf::internal::ConstantInitialized);

  inline LeaseTimeToLiveResponse(const LeaseTimeToLiveResponse& from) : LeaseTimeToLiveResponse(nullptr, from) {}
  inline LeaseTimeToLiveResponse(LeaseTimeToLiveResponse&& from) noexcept
      : LeaseTimeToLiveResponse(nullptr, ::std::move(from)) {}
  inline LeaseTimeToLiveResponse& operator=(const LeaseTimeToLiveResponse& from) {
    CopyFrom(from);
    return *this;
  }
  inline LeaseTimeToLiveResponse& operator=(LeaseTimeToLiveResponse&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* PROTOBUF_NONNULL mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* PROTOBUF_NONNULL descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* PROTOBUF_NONNULL GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* PROTOBUF_NONNULL GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const LeaseTimeToLiveResponse& default_instance() {
    return *reinterpret_cast<const LeaseTimeToLiveResponse*>(
        &_LeaseTimeToLiveResponse_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 29;
  friend void swap(LeaseTimeToLiveResponse& a, LeaseTimeToLiveResponse& b) { a.Swap(&b); }
  inline void Swap(LeaseTimeToLiveResponse* PROTOBUF_NONNULL other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(LeaseTimeToLiveResponse* PROTOBUF_NONNULL other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  LeaseTimeToLiveResponse* PROTOBUF_NONNULL New(::google::protobuf::Arena* PROTOBUF_NULLABLE arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<LeaseTimeToLiveResponse>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const LeaseTimeToLiveResponse& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const LeaseTimeToLiveResponse& from) { LeaseTimeToLiveResponse::MergeImpl(*this, from); }

  private:
  static void MergeImpl(::google::protobuf::MessageLite& to_msg,
                        const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* PROTOBUF_NONNULL _InternalSerialize(
      const ::google::protobuf::MessageLite& msg, ::uint8_t* PROTOBUF_NONNULL target,
      ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* PROTOBUF_NONNULL _InternalSerialize(
      ::uint8_t* PROTOBUF_NONNULL target,
      ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* PROTOBUF_NONNULL _InternalSerialize(
      ::uint8_t* PROTOBUF_NONNULL target,
      ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(LeaseTimeToLiveResponse* PROTOBUF_NONNULL other);
 private:
  template <typename T>
  friend ::absl::string_view(::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "etcdserverpb.LeaseTimeToLiveResponse"; }

 protected:
  explicit LeaseTimeToLiveResponse(::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  LeaseTimeToLiveResponse(::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const LeaseTimeToLiveResponse& from);
  LeaseTimeToLiveResponse(
      ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, LeaseTimeToLiveResponse&& from) noexcept
      : LeaseTimeToLiveResponse(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* PROTOBUF_NONNULL GetClassData() const PROTOBUF_FINAL;
  static void* PROTOBUF_NONNULL PlacementNew_(
      const void* PROTOBUF_NONNULL, void* PROTOBUF_NONNULL mem,
      ::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  static constexpr auto InternalNewImpl_();

 public:
  static constexpr auto InternalGenerateClassData_();

  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kKeysFieldNumber = 5,
    kHeaderFieldNumber = 1,
    kIDFieldNumber = 2,
    kTTLFieldNumber = 3,
    kGrantedTTLFieldNumber = 4,
  };
  // repeated bytes keys = 5;
  int keys_size() const;
  private:
  int _internal_keys_size() const;

  public:
  void clear_keys() ;
  const ::std::string& keys(int index) const;
  ::std::string* PROTOBUF_NONNULL mutable_keys(int index);
  template <typename Arg_ = const ::std::string&, typename... Args_>
  void set_keys(int index, Arg_&& value, Args_... args);
  ::std::string* PROTOBUF_NONNULL add_keys();
  template <typename Arg_ = const ::std::string&, typename... Args_>
  void add_keys(Arg_&& value, Args_... args);
  const ::google::protobuf::RepeatedPtrField<::std::string>& keys() const;
  ::google::protobuf::RepeatedPtrField<::std::string>* PROTOBUF_NONNULL mutable_keys();

  private:
  const ::google::protobuf::RepeatedPtrField<::std::string>& _internal_keys() const;
  ::google::protobuf::RepeatedPtrField<::std::string>* PROTOBUF_NONNULL _internal_mutable_keys();

  public:
  // .etcdserverpb.ResponseHeader header = 1;
  bool has_header() const;
  void clear_header() ;
  const ::etcdserverpb::ResponseHeader& header() const;
  [[nodiscard]] ::etcdserverpb::ResponseHeader* PROTOBUF_NULLABLE release_header();
  ::etcdserverpb::ResponseHeader* PROTOBUF_NONNULL mutable_header();
  void set_allocated_header(::etcdserverpb::ResponseHeader* PROTOBUF_NULLABLE value);
  void unsafe_arena_set_allocated_header(::etcdserverpb::ResponseHeader* PROTOBUF_NULLABLE value);
  ::etcdserverpb::ResponseHeader* PROTOBUF_NULLABLE unsafe_arena_release_header();

  private:
  const ::etcdserverpb::ResponseHeader& _internal_header() const;
  ::etcdserverpb::ResponseHeader* PROTOBUF_NONNULL _internal_mutable_header();

  public:
  // int64 ID = 2;
  void clear_id() ;
  ::int64_t id() const;
  void set_id(::int64_t value);

  private:
  ::int64_t _internal_id() const;
  void _internal_set_id(::int64_t value);

  public:
  // int64 TTL = 3;
  void clear_ttl() ;
  ::int64_t ttl() const;
  void set_ttl(::int64_t value);

  private:
  ::int64_t _internal_ttl() const;
  void _internal_set_ttl(::int64_t value);

  public:
  // int64 grantedTTL = 4;
  void clear_grantedttl() ;
  ::int64_t grantedttl() const;
  void set_grantedttl(::int64_t value);

  private:
  ::int64_t _internal_grantedttl() const;
  void _internal_set_grantedttl(::int64_t value);

  public:
  // @@protoc_insertion_point(class_scope:etcdserverpb.LeaseTimeToLiveResponse)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<3, 5,
                                   1, 0,
                                   2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(
        ::google::protobuf::internal::InternalVisibility visibility,
        ::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
    inline explicit Impl_(
        ::google::protobuf::internal::InternalVisibility visibility,
        ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const Impl_& from,
        const LeaseTimeToLiveResponse& from_msg);
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    ::google::protobuf::RepeatedPtrField<::std::string> keys_;
    ::etcdserverpb::ResponseHeader* PROTOBUF_NULLABLE header_;
    ::int64_t id_;
    ::int64_t ttl_;
    ::int64_t grantedttl_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_proto_2fmiddleware_2fetcd_2fetcd_2eproto;
};

extern const ::google::protobuf::internal::ClassDataFull LeaseTimeToLiveResponse_class_data_;
// -------------------------------------------------------------------

class LeaseRevokeResponse final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:etcdserverpb.LeaseRevokeResponse) */ {
 public:
  inline LeaseRevokeResponse() : LeaseRevokeResponse(nullptr) {}
  ~LeaseRevokeResponse() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(LeaseRevokeResponse* PROTOBUF_NONNULL msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(LeaseRevokeResponse));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR LeaseRevokeResponse(::google::protobuf::internal::ConstantInitialized);

  inline LeaseRevokeResponse(const LeaseRevokeResponse& from) : LeaseRevokeResponse(nullptr, from) {}
  inline LeaseRevokeResponse(LeaseRevokeResponse&& from) noexcept
      : LeaseRevokeResponse(nullptr, ::std::move(from)) {}
  inline LeaseRevokeResponse& operator=(const LeaseRevokeResponse& from) {
    CopyFrom(from);
    return *this;
  }
  inline LeaseRevokeResponse& operator=(LeaseRevokeResponse&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* PROTOBUF_NONNULL mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* PROTOBUF_NONNULL descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* PROTOBUF_NONNULL GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* PROTOBUF_NONNULL GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const LeaseRevokeResponse& default_instance() {
    return *reinterpret_cast<const LeaseRevokeResponse*>(
        &_LeaseRevokeResponse_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 22;
  friend void swap(LeaseRevokeResponse& a, LeaseRevokeResponse& b) { a.Swap(&b); }
  inline void Swap(LeaseRevokeResponse* PROTOBUF_NONNULL other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(LeaseRevokeResponse* PROTOBUF_NONNULL other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  LeaseRevokeResponse* PROTOBUF_NONNULL New(::google::protobuf::Arena* PROTOBUF_NULLABLE arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<LeaseRevokeResponse>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const LeaseRevokeResponse& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const LeaseRevokeResponse& from) { LeaseRevokeResponse::MergeImpl(*this, from); }

  private:
  static void MergeImpl(::google::protobuf::MessageLite& to_msg,
                        const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* PROTOBUF_NONNULL _InternalSerialize(
      const ::google::protobuf::MessageLite& msg, ::uint8_t* PROTOBUF_NONNULL target,
      ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* PROTOBUF_NONNULL _InternalSerialize(
      ::uint8_t* PROTOBUF_NONNULL target,
      ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* PROTOBUF_NONNULL _InternalSerialize(
      ::uint8_t* PROTOBUF_NONNULL target,
      ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(LeaseRevokeResponse* PROTOBUF_NONNULL other);
 private:
  template <typename T>
  friend ::absl::string_view(::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "etcdserverpb.LeaseRevokeResponse"; }

 protected:
  explicit LeaseRevokeResponse(::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  LeaseRevokeResponse(::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const LeaseRevokeResponse& from);
  LeaseRevokeResponse(
      ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, LeaseRevokeResponse&& from) noexcept
      : LeaseRevokeResponse(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* PROTOBUF_NONNULL GetClassData() const PROTOBUF_FINAL;
  static void* PROTOBUF_NONNULL PlacementNew_(
      const void* PROTOBUF_NONNULL, void* PROTOBUF_NONNULL mem,
      ::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  static constexpr auto InternalNewImpl_();

 public:
  static constexpr auto InternalGenerateClassData_();

  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kHeaderFieldNumber = 1,
  };
  // .etcdserverpb.ResponseHeader header = 1;
  bool has_header() const;
  void clear_header() ;
  const ::etcdserverpb::ResponseHeader& header() const;
  [[nodiscard]] ::etcdserverpb::ResponseHeader* PROTOBUF_NULLABLE release_header();
  ::etcdserverpb::ResponseHeader* PROTOBUF_NONNULL mutable_header();
  void set_allocated_header(::etcdserverpb::ResponseHeader* PROTOBUF_NULLABLE value);
  void unsafe_arena_set_allocated_header(::etcdserverpb::ResponseHeader* PROTOBUF_NULLABLE value);
  ::etcdserverpb::ResponseHeader* PROTOBUF_NULLABLE unsafe_arena_release_header();

  private:
  const ::etcdserverpb::ResponseHeader& _internal_header() const;
  ::etcdserverpb::ResponseHeader* PROTOBUF_NONNULL _internal_mutable_header();

  public:
  // @@protoc_insertion_point(class_scope:etcdserverpb.LeaseRevokeResponse)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<0, 1,
                                   1, 0,
                                   2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(
        ::google::protobuf::internal::InternalVisibility visibility,
        ::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
    inline explicit Impl_(
        ::google::protobuf::internal::InternalVisibility visibility,
        ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const Impl_& from,
        const LeaseRevokeResponse& from_msg);
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    ::etcdserverpb::ResponseHeader* PROTOBUF_NULLABLE header_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_proto_2fmiddleware_2fetcd_2fetcd_2eproto;
};

extern const ::google::protobuf::internal::ClassDataFull LeaseRevokeResponse_class_data_;
// -------------------------------------------------------------------

class LeaseLeasesResponse final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:etcdserverpb.LeaseLeasesResponse) */ {
 public:
  inline LeaseLeasesResponse() : LeaseLeasesResponse(nullptr) {}
  ~LeaseLeasesResponse() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(LeaseLeasesResponse* PROTOBUF_NONNULL msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(LeaseLeasesResponse));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR LeaseLeasesResponse(::google::protobuf::internal::ConstantInitialized);

  inline LeaseLeasesResponse(const LeaseLeasesResponse& from) : LeaseLeasesResponse(nullptr, from) {}
  inline LeaseLeasesResponse(LeaseLeasesResponse&& from) noexcept
      : LeaseLeasesResponse(nullptr, ::std::move(from)) {}
  inline LeaseLeasesResponse& operator=(const LeaseLeasesResponse& from) {
    CopyFrom(from);
    return *this;
  }
  inline LeaseLeasesResponse& operator=(LeaseLeasesResponse&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* PROTOBUF_NONNULL mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* PROTOBUF_NONNULL descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* PROTOBUF_NONNULL GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* PROTOBUF_NONNULL GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const LeaseLeasesResponse& default_instance() {
    return *reinterpret_cast<const LeaseLeasesResponse*>(
        &_LeaseLeasesResponse_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 32;
  friend void swap(LeaseLeasesResponse& a, LeaseLeasesResponse& b) { a.Swap(&b); }
  inline void Swap(LeaseLeasesResponse* PROTOBUF_NONNULL other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(LeaseLeasesResponse* PROTOBUF_NONNULL other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  LeaseLeasesResponse* PROTOBUF_NONNULL New(::google::protobuf::Arena* PROTOBUF_NULLABLE arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<LeaseLeasesResponse>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const LeaseLeasesResponse& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const LeaseLeasesResponse& from) { LeaseLeasesResponse::MergeImpl(*this, from); }

  private:
  static void MergeImpl(::google::protobuf::MessageLite& to_msg,
                        const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* PROTOBUF_NONNULL _InternalSerialize(
      const ::google::protobuf::MessageLite& msg, ::uint8_t* PROTOBUF_NONNULL target,
      ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* PROTOBUF_NONNULL _InternalSerialize(
      ::uint8_t* PROTOBUF_NONNULL target,
      ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* PROTOBUF_NONNULL _InternalSerialize(
      ::uint8_t* PROTOBUF_NONNULL target,
      ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(LeaseLeasesResponse* PROTOBUF_NONNULL other);
 private:
  template <typename T>
  friend ::absl::string_view(::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "etcdserverpb.LeaseLeasesResponse"; }

 protected:
  explicit LeaseLeasesResponse(::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  LeaseLeasesResponse(::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const LeaseLeasesResponse& from);
  LeaseLeasesResponse(
      ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, LeaseLeasesResponse&& from) noexcept
      : LeaseLeasesResponse(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* PROTOBUF_NONNULL GetClassData() const PROTOBUF_FINAL;
  static void* PROTOBUF_NONNULL PlacementNew_(
      const void* PROTOBUF_NONNULL, void* PROTOBUF_NONNULL mem,
      ::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  static constexpr auto InternalNewImpl_();

 public:
  static constexpr auto InternalGenerateClassData_();

  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kLeasesFieldNumber = 2,
    kHeaderFieldNumber = 1,
  };
  // repeated .etcdserverpb.LeaseStatus leases = 2;
  int leases_size() const;
  private:
  int _internal_leases_size() const;

  public:
  void clear_leases() ;
  ::etcdserverpb::LeaseStatus* PROTOBUF_NONNULL mutable_leases(int index);
  ::google::protobuf::RepeatedPtrField<::etcdserverpb::LeaseStatus>* PROTOBUF_NONNULL mutable_leases();

  private:
  const ::google::protobuf::RepeatedPtrField<::etcdserverpb::LeaseStatus>& _internal_leases() const;
  ::google::protobuf::RepeatedPtrField<::etcdserverpb::LeaseStatus>* PROTOBUF_NONNULL _internal_mutable_leases();
  public:
  const ::etcdserverpb::LeaseStatus& leases(int index) const;
  ::etcdserverpb::LeaseStatus* PROTOBUF_NONNULL add_leases();
  const ::google::protobuf::RepeatedPtrField<::etcdserverpb::LeaseStatus>& leases() const;
  // .etcdserverpb.ResponseHeader header = 1;
  bool has_header() const;
  void clear_header() ;
  const ::etcdserverpb::ResponseHeader& header() const;
  [[nodiscard]] ::etcdserverpb::ResponseHeader* PROTOBUF_NULLABLE release_header();
  ::etcdserverpb::ResponseHeader* PROTOBUF_NONNULL mutable_header();
  void set_allocated_header(::etcdserverpb::ResponseHeader* PROTOBUF_NULLABLE value);
  void unsafe_arena_set_allocated_header(::etcdserverpb::ResponseHeader* PROTOBUF_NULLABLE value);
  ::etcdserverpb::ResponseHeader* PROTOBUF_NULLABLE unsafe_arena_release_header();

  private:
  const ::etcdserverpb::ResponseHeader& _internal_header() const;
  ::etcdserverpb::ResponseHeader* PROTOBUF_NONNULL _internal_mutable_header();

  public:
  // @@protoc_insertion_point(class_scope:etcdserverpb.LeaseLeasesResponse)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<1, 2,
                                   2, 0,
                                   2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(
        ::google::protobuf::internal::InternalVisibility visibility,
        ::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
    inline explicit Impl_(
        ::google::protobuf::internal::InternalVisibility visibility,
        ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const Impl_& from,
        const LeaseLeasesResponse& from_msg);
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    ::google::protobuf::RepeatedPtrField< ::etcdserverpb::LeaseStatus > leases_;
    ::etcdserverpb::ResponseHeader* PROTOBUF_NULLABLE header_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_proto_2fmiddleware_2fetcd_2fetcd_2eproto;
};

extern const ::google::protobuf::internal::ClassDataFull LeaseLeasesResponse_class_data_;
// -------------------------------------------------------------------

class LeaseKeepAliveResponse final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:etcdserverpb.LeaseKeepAliveResponse) */ {
 public:
  inline LeaseKeepAliveResponse() : LeaseKeepAliveResponse(nullptr) {}
  ~LeaseKeepAliveResponse() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(LeaseKeepAliveResponse* PROTOBUF_NONNULL msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(LeaseKeepAliveResponse));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR LeaseKeepAliveResponse(::google::protobuf::internal::ConstantInitialized);

  inline LeaseKeepAliveResponse(const LeaseKeepAliveResponse& from) : LeaseKeepAliveResponse(nullptr, from) {}
  inline LeaseKeepAliveResponse(LeaseKeepAliveResponse&& from) noexcept
      : LeaseKeepAliveResponse(nullptr, ::std::move(from)) {}
  inline LeaseKeepAliveResponse& operator=(const LeaseKeepAliveResponse& from) {
    CopyFrom(from);
    return *this;
  }
  inline LeaseKeepAliveResponse& operator=(LeaseKeepAliveResponse&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* PROTOBUF_NONNULL mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* PROTOBUF_NONNULL descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* PROTOBUF_NONNULL GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* PROTOBUF_NONNULL GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const LeaseKeepAliveResponse& default_instance() {
    return *reinterpret_cast<const LeaseKeepAliveResponse*>(
        &_LeaseKeepAliveResponse_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 27;
  friend void swap(LeaseKeepAliveResponse& a, LeaseKeepAliveResponse& b) { a.Swap(&b); }
  inline void Swap(LeaseKeepAliveResponse* PROTOBUF_NONNULL other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(LeaseKeepAliveResponse* PROTOBUF_NONNULL other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  LeaseKeepAliveResponse* PROTOBUF_NONNULL New(::google::protobuf::Arena* PROTOBUF_NULLABLE arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<LeaseKeepAliveResponse>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const LeaseKeepAliveResponse& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const LeaseKeepAliveResponse& from) { LeaseKeepAliveResponse::MergeImpl(*this, from); }

  private:
  static void MergeImpl(::google::protobuf::MessageLite& to_msg,
                        const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* PROTOBUF_NONNULL _InternalSerialize(
      const ::google::protobuf::MessageLite& msg, ::uint8_t* PROTOBUF_NONNULL target,
      ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* PROTOBUF_NONNULL _InternalSerialize(
      ::uint8_t* PROTOBUF_NONNULL target,
      ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* PROTOBUF_NONNULL _InternalSerialize(
      ::uint8_t* PROTOBUF_NONNULL target,
      ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(LeaseKeepAliveResponse* PROTOBUF_NONNULL other);
 private:
  template <typename T>
  friend ::absl::string_view(::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "etcdserverpb.LeaseKeepAliveResponse"; }

 protected:
  explicit LeaseKeepAliveResponse(::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  LeaseKeepAliveResponse(::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const LeaseKeepAliveResponse& from);
  LeaseKeepAliveResponse(
      ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, LeaseKeepAliveResponse&& from) noexcept
      : LeaseKeepAliveResponse(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* PROTOBUF_NONNULL GetClassData() const PROTOBUF_FINAL;
  static void* PROTOBUF_NONNULL PlacementNew_(
      const void* PROTOBUF_NONNULL, void* PROTOBUF_NONNULL mem,
      ::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  static constexpr auto InternalNewImpl_();

 public:
  static constexpr auto InternalGenerateClassData_();

  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kHeaderFieldNumber = 1,
    kIDFieldNumber = 2,
    kTTLFieldNumber = 3,
  };
  // .etcdserverpb.ResponseHeader header = 1;
  bool has_header() const;
  void clear_header() ;
  const ::etcdserverpb::ResponseHeader& header() const;
  [[nodiscard]] ::etcdserverpb::ResponseHeader* PROTOBUF_NULLABLE release_header();
  ::etcdserverpb::ResponseHeader* PROTOBUF_NONNULL mutable_header();
  void set_allocated_header(::etcdserverpb::ResponseHeader* PROTOBUF_NULLABLE value);
  void unsafe_arena_set_allocated_header(::etcdserverpb::ResponseHeader* PROTOBUF_NULLABLE value);
  ::etcdserverpb::ResponseHeader* PROTOBUF_NULLABLE unsafe_arena_release_header();

  private:
  const ::etcdserverpb::ResponseHeader& _internal_header() const;
  ::etcdserverpb::ResponseHeader* PROTOBUF_NONNULL _internal_mutable_header();

  public:
  // int64 ID = 2;
  void clear_id() ;
  ::int64_t id() const;
  void set_id(::int64_t value);

  private:
  ::int64_t _internal_id() const;
  void _internal_set_id(::int64_t value);

  public:
  // int64 TTL = 3;
  void clear_ttl() ;
  ::int64_t ttl() const;
  void set_ttl(::int64_t value);

  private:
  ::int64_t _internal_ttl() const;
  void _internal_set_ttl(::int64_t value);

  public:
  // @@protoc_insertion_point(class_scope:etcdserverpb.LeaseKeepAliveResponse)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<2, 3,
                                   1, 0,
                                   2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(
        ::google::protobuf::internal::InternalVisibility visibility,
        ::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
    inline explicit Impl_(
        ::google::protobuf::internal::InternalVisibility visibility,
        ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const Impl_& from,
        const LeaseKeepAliveResponse& from_msg);
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    ::etcdserverpb::ResponseHeader* PROTOBUF_NULLABLE header_;
    ::int64_t id_;
    ::int64_t ttl_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_proto_2fmiddleware_2fetcd_2fetcd_2eproto;
};

extern const ::google::protobuf::internal::ClassDataFull LeaseKeepAliveResponse_class_data_;
// -------------------------------------------------------------------

class LeaseGrantResponse final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:etcdserverpb.LeaseGrantResponse) */ {
 public:
  inline LeaseGrantResponse() : LeaseGrantResponse(nullptr) {}
  ~LeaseGrantResponse() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(LeaseGrantResponse* PROTOBUF_NONNULL msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(LeaseGrantResponse));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR LeaseGrantResponse(::google::protobuf::internal::ConstantInitialized);

  inline LeaseGrantResponse(const LeaseGrantResponse& from) : LeaseGrantResponse(nullptr, from) {}
  inline LeaseGrantResponse(LeaseGrantResponse&& from) noexcept
      : LeaseGrantResponse(nullptr, ::std::move(from)) {}
  inline LeaseGrantResponse& operator=(const LeaseGrantResponse& from) {
    CopyFrom(from);
    return *this;
  }
  inline LeaseGrantResponse& operator=(LeaseGrantResponse&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* PROTOBUF_NONNULL mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* PROTOBUF_NONNULL descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* PROTOBUF_NONNULL GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* PROTOBUF_NONNULL GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const LeaseGrantResponse& default_instance() {
    return *reinterpret_cast<const LeaseGrantResponse*>(
        &_LeaseGrantResponse_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 20;
  friend void swap(LeaseGrantResponse& a, LeaseGrantResponse& b) { a.Swap(&b); }
  inline void Swap(LeaseGrantResponse* PROTOBUF_NONNULL other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(LeaseGrantResponse* PROTOBUF_NONNULL other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  LeaseGrantResponse* PROTOBUF_NONNULL New(::google::protobuf::Arena* PROTOBUF_NULLABLE arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<LeaseGrantResponse>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const LeaseGrantResponse& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const LeaseGrantResponse& from) { LeaseGrantResponse::MergeImpl(*this, from); }

  private:
  static void MergeImpl(::google::protobuf::MessageLite& to_msg,
                        const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* PROTOBUF_NONNULL _InternalSerialize(
      const ::google::protobuf::MessageLite& msg, ::uint8_t* PROTOBUF_NONNULL target,
      ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* PROTOBUF_NONNULL _InternalSerialize(
      ::uint8_t* PROTOBUF_NONNULL target,
      ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* PROTOBUF_NONNULL _InternalSerialize(
      ::uint8_t* PROTOBUF_NONNULL target,
      ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(LeaseGrantResponse* PROTOBUF_NONNULL other);
 private:
  template <typename T>
  friend ::absl::string_view(::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "etcdserverpb.LeaseGrantResponse"; }

 protected:
  explicit LeaseGrantResponse(::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  LeaseGrantResponse(::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const LeaseGrantResponse& from);
  LeaseGrantResponse(
      ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, LeaseGrantResponse&& from) noexcept
      : LeaseGrantResponse(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* PROTOBUF_NONNULL GetClassData() const PROTOBUF_FINAL;
  static void* PROTOBUF_NONNULL PlacementNew_(
      const void* PROTOBUF_NONNULL, void* PROTOBUF_NONNULL mem,
      ::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  static constexpr auto InternalNewImpl_();

 public:
  static constexpr auto InternalGenerateClassData_();

  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kErrorFieldNumber = 4,
    kHeaderFieldNumber = 1,
    kIDFieldNumber = 2,
    kTTLFieldNumber = 3,
  };
  // string error = 4;
  void clear_error() ;
  const ::std::string& error() const;
  template <typename Arg_ = const ::std::string&, typename... Args_>
  void set_error(Arg_&& arg, Args_... args);
  ::std::string* PROTOBUF_NONNULL mutable_error();
  [[nodiscard]] ::std::string* PROTOBUF_NULLABLE release_error();
  void set_allocated_error(::std::string* PROTOBUF_NULLABLE value);

  private:
  const ::std::string& _internal_error() const;
  PROTOBUF_ALWAYS_INLINE void _internal_set_error(const ::std::string& value);
  ::std::string* PROTOBUF_NONNULL _internal_mutable_error();

  public:
  // .etcdserverpb.ResponseHeader header = 1;
  bool has_header() const;
  void clear_header() ;
  const ::etcdserverpb::ResponseHeader& header() const;
  [[nodiscard]] ::etcdserverpb::ResponseHeader* PROTOBUF_NULLABLE release_header();
  ::etcdserverpb::ResponseHeader* PROTOBUF_NONNULL mutable_header();
  void set_allocated_header(::etcdserverpb::ResponseHeader* PROTOBUF_NULLABLE value);
  void unsafe_arena_set_allocated_header(::etcdserverpb::ResponseHeader* PROTOBUF_NULLABLE value);
  ::etcdserverpb::ResponseHeader* PROTOBUF_NULLABLE unsafe_arena_release_header();

  private:
  const ::etcdserverpb::ResponseHeader& _internal_header() const;
  ::etcdserverpb::ResponseHeader* PROTOBUF_NONNULL _internal_mutable_header();

  public:
  // int64 ID = 2;
  void clear_id() ;
  ::int64_t id() const;
  void set_id(::int64_t value);

  private:
  ::int64_t _internal_id() const;
  void _internal_set_id(::int64_t value);

  public:
  // int64 TTL = 3;
  void clear_ttl() ;
  ::int64_t ttl() const;
  void set_ttl(::int64_t value);

  private:
  ::int64_t _internal_ttl() const;
  void _internal_set_ttl(::int64_t value);

  public:
  // @@protoc_insertion_point(class_scope:etcdserverpb.LeaseGrantResponse)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<2, 4,
                                   1, 45,
                                   2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(
        ::google::protobuf::internal::InternalVisibility visibility,
        ::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
    inline explicit Impl_(
        ::google::protobuf::internal::InternalVisibility visibility,
        ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const Impl_& from,
        const LeaseGrantResponse& from_msg);
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    ::google::protobuf::internal::ArenaStringPtr error_;
    ::etcdserverpb::ResponseHeader* PROTOBUF_NULLABLE header_;
    ::int64_t id_;
    ::int64_t ttl_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_proto_2fmiddleware_2fetcd_2fetcd_2eproto;
};

extern const ::google::protobuf::internal::ClassDataFull LeaseGrantResponse_class_data_;
// -------------------------------------------------------------------

class LeaseCheckpointResponse final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:etcdserverpb.LeaseCheckpointResponse) */ {
 public:
  inline LeaseCheckpointResponse() : LeaseCheckpointResponse(nullptr) {}
  ~LeaseCheckpointResponse() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(LeaseCheckpointResponse* PROTOBUF_NONNULL msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(LeaseCheckpointResponse));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR LeaseCheckpointResponse(::google::protobuf::internal::ConstantInitialized);

  inline LeaseCheckpointResponse(const LeaseCheckpointResponse& from) : LeaseCheckpointResponse(nullptr, from) {}
  inline LeaseCheckpointResponse(LeaseCheckpointResponse&& from) noexcept
      : LeaseCheckpointResponse(nullptr, ::std::move(from)) {}
  inline LeaseCheckpointResponse& operator=(const LeaseCheckpointResponse& from) {
    CopyFrom(from);
    return *this;
  }
  inline LeaseCheckpointResponse& operator=(LeaseCheckpointResponse&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* PROTOBUF_NONNULL mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* PROTOBUF_NONNULL descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* PROTOBUF_NONNULL GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* PROTOBUF_NONNULL GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const LeaseCheckpointResponse& default_instance() {
    return *reinterpret_cast<const LeaseCheckpointResponse*>(
        &_LeaseCheckpointResponse_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 25;
  friend void swap(LeaseCheckpointResponse& a, LeaseCheckpointResponse& b) { a.Swap(&b); }
  inline void Swap(LeaseCheckpointResponse* PROTOBUF_NONNULL other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(LeaseCheckpointResponse* PROTOBUF_NONNULL other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  LeaseCheckpointResponse* PROTOBUF_NONNULL New(::google::protobuf::Arena* PROTOBUF_NULLABLE arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<LeaseCheckpointResponse>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const LeaseCheckpointResponse& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const LeaseCheckpointResponse& from) { LeaseCheckpointResponse::MergeImpl(*this, from); }

  private:
  static void MergeImpl(::google::protobuf::MessageLite& to_msg,
                        const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* PROTOBUF_NONNULL _InternalSerialize(
      const ::google::protobuf::MessageLite& msg, ::uint8_t* PROTOBUF_NONNULL target,
      ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* PROTOBUF_NONNULL _InternalSerialize(
      ::uint8_t* PROTOBUF_NONNULL target,
      ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* PROTOBUF_NONNULL _InternalSerialize(
      ::uint8_t* PROTOBUF_NONNULL target,
      ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(LeaseCheckpointResponse* PROTOBUF_NONNULL other);
 private:
  template <typename T>
  friend ::absl::string_view(::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "etcdserverpb.LeaseCheckpointResponse"; }

 protected:
  explicit LeaseCheckpointResponse(::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  LeaseCheckpointResponse(::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const LeaseCheckpointResponse& from);
  LeaseCheckpointResponse(
      ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, LeaseCheckpointResponse&& from) noexcept
      : LeaseCheckpointResponse(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* PROTOBUF_NONNULL GetClassData() const PROTOBUF_FINAL;
  static void* PROTOBUF_NONNULL PlacementNew_(
      const void* PROTOBUF_NONNULL, void* PROTOBUF_NONNULL mem,
      ::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  static constexpr auto InternalNewImpl_();

 public:
  static constexpr auto InternalGenerateClassData_();

  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kHeaderFieldNumber = 1,
  };
  // .etcdserverpb.ResponseHeader header = 1;
  bool has_header() const;
  void clear_header() ;
  const ::etcdserverpb::ResponseHeader& header() const;
  [[nodiscard]] ::etcdserverpb::ResponseHeader* PROTOBUF_NULLABLE release_header();
  ::etcdserverpb::ResponseHeader* PROTOBUF_NONNULL mutable_header();
  void set_allocated_header(::etcdserverpb::ResponseHeader* PROTOBUF_NULLABLE value);
  void unsafe_arena_set_allocated_header(::etcdserverpb::ResponseHeader* PROTOBUF_NULLABLE value);
  ::etcdserverpb::ResponseHeader* PROTOBUF_NULLABLE unsafe_arena_release_header();

  private:
  const ::etcdserverpb::ResponseHeader& _internal_header() const;
  ::etcdserverpb::ResponseHeader* PROTOBUF_NONNULL _internal_mutable_header();

  public:
  // @@protoc_insertion_point(class_scope:etcdserverpb.LeaseCheckpointResponse)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<0, 1,
                                   1, 0,
                                   2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(
        ::google::protobuf::internal::InternalVisibility visibility,
        ::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
    inline explicit Impl_(
        ::google::protobuf::internal::InternalVisibility visibility,
        ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const Impl_& from,
        const LeaseCheckpointResponse& from_msg);
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    ::etcdserverpb::ResponseHeader* PROTOBUF_NULLABLE header_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_proto_2fmiddleware_2fetcd_2fetcd_2eproto;
};

extern const ::google::protobuf::internal::ClassDataFull LeaseCheckpointResponse_class_data_;
// -------------------------------------------------------------------

class LeaseCheckpointRequest final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:etcdserverpb.LeaseCheckpointRequest) */ {
 public:
  inline LeaseCheckpointRequest() : LeaseCheckpointRequest(nullptr) {}
  ~LeaseCheckpointRequest() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(LeaseCheckpointRequest* PROTOBUF_NONNULL msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(LeaseCheckpointRequest));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR LeaseCheckpointRequest(::google::protobuf::internal::ConstantInitialized);

  inline LeaseCheckpointRequest(const LeaseCheckpointRequest& from) : LeaseCheckpointRequest(nullptr, from) {}
  inline LeaseCheckpointRequest(LeaseCheckpointRequest&& from) noexcept
      : LeaseCheckpointRequest(nullptr, ::std::move(from)) {}
  inline LeaseCheckpointRequest& operator=(const LeaseCheckpointRequest& from) {
    CopyFrom(from);
    return *this;
  }
  inline LeaseCheckpointRequest& operator=(LeaseCheckpointRequest&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* PROTOBUF_NONNULL mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* PROTOBUF_NONNULL descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* PROTOBUF_NONNULL GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* PROTOBUF_NONNULL GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const LeaseCheckpointRequest& default_instance() {
    return *reinterpret_cast<const LeaseCheckpointRequest*>(
        &_LeaseCheckpointRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 24;
  friend void swap(LeaseCheckpointRequest& a, LeaseCheckpointRequest& b) { a.Swap(&b); }
  inline void Swap(LeaseCheckpointRequest* PROTOBUF_NONNULL other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(LeaseCheckpointRequest* PROTOBUF_NONNULL other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  LeaseCheckpointRequest* PROTOBUF_NONNULL New(::google::protobuf::Arena* PROTOBUF_NULLABLE arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<LeaseCheckpointRequest>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const LeaseCheckpointRequest& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const LeaseCheckpointRequest& from) { LeaseCheckpointRequest::MergeImpl(*this, from); }

  private:
  static void MergeImpl(::google::protobuf::MessageLite& to_msg,
                        const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* PROTOBUF_NONNULL _InternalSerialize(
      const ::google::protobuf::MessageLite& msg, ::uint8_t* PROTOBUF_NONNULL target,
      ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* PROTOBUF_NONNULL _InternalSerialize(
      ::uint8_t* PROTOBUF_NONNULL target,
      ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* PROTOBUF_NONNULL _InternalSerialize(
      ::uint8_t* PROTOBUF_NONNULL target,
      ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(LeaseCheckpointRequest* PROTOBUF_NONNULL other);
 private:
  template <typename T>
  friend ::absl::string_view(::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "etcdserverpb.LeaseCheckpointRequest"; }

 protected:
  explicit LeaseCheckpointRequest(::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  LeaseCheckpointRequest(::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const LeaseCheckpointRequest& from);
  LeaseCheckpointRequest(
      ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, LeaseCheckpointRequest&& from) noexcept
      : LeaseCheckpointRequest(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* PROTOBUF_NONNULL GetClassData() const PROTOBUF_FINAL;
  static void* PROTOBUF_NONNULL PlacementNew_(
      const void* PROTOBUF_NONNULL, void* PROTOBUF_NONNULL mem,
      ::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  static constexpr auto InternalNewImpl_();

 public:
  static constexpr auto InternalGenerateClassData_();

  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kCheckpointsFieldNumber = 1,
  };
  // repeated .etcdserverpb.LeaseCheckpoint checkpoints = 1;
  int checkpoints_size() const;
  private:
  int _internal_checkpoints_size() const;

  public:
  void clear_checkpoints() ;
  ::etcdserverpb::LeaseCheckpoint* PROTOBUF_NONNULL mutable_checkpoints(int index);
  ::google::protobuf::RepeatedPtrField<::etcdserverpb::LeaseCheckpoint>* PROTOBUF_NONNULL mutable_checkpoints();

  private:
  const ::google::protobuf::RepeatedPtrField<::etcdserverpb::LeaseCheckpoint>& _internal_checkpoints() const;
  ::google::protobuf::RepeatedPtrField<::etcdserverpb::LeaseCheckpoint>* PROTOBUF_NONNULL _internal_mutable_checkpoints();
  public:
  const ::etcdserverpb::LeaseCheckpoint& checkpoints(int index) const;
  ::etcdserverpb::LeaseCheckpoint* PROTOBUF_NONNULL add_checkpoints();
  const ::google::protobuf::RepeatedPtrField<::etcdserverpb::LeaseCheckpoint>& checkpoints() const;
  // @@protoc_insertion_point(class_scope:etcdserverpb.LeaseCheckpointRequest)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<0, 1,
                                   1, 0,
                                   2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(
        ::google::protobuf::internal::InternalVisibility visibility,
        ::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
    inline explicit Impl_(
        ::google::protobuf::internal::InternalVisibility visibility,
        ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const Impl_& from,
        const LeaseCheckpointRequest& from_msg);
    ::google::protobuf::RepeatedPtrField< ::etcdserverpb::LeaseCheckpoint > checkpoints_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_proto_2fmiddleware_2fetcd_2fetcd_2eproto;
};

extern const ::google::protobuf::internal::ClassDataFull LeaseCheckpointRequest_class_data_;
// -------------------------------------------------------------------

class DeleteRangeResponse final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:etcdserverpb.DeleteRangeResponse) */ {
 public:
  inline DeleteRangeResponse() : DeleteRangeResponse(nullptr) {}
  ~DeleteRangeResponse() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(DeleteRangeResponse* PROTOBUF_NONNULL msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(DeleteRangeResponse));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR DeleteRangeResponse(::google::protobuf::internal::ConstantInitialized);

  inline DeleteRangeResponse(const DeleteRangeResponse& from) : DeleteRangeResponse(nullptr, from) {}
  inline DeleteRangeResponse(DeleteRangeResponse&& from) noexcept
      : DeleteRangeResponse(nullptr, ::std::move(from)) {}
  inline DeleteRangeResponse& operator=(const DeleteRangeResponse& from) {
    CopyFrom(from);
    return *this;
  }
  inline DeleteRangeResponse& operator=(DeleteRangeResponse&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* PROTOBUF_NONNULL mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* PROTOBUF_NONNULL descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* PROTOBUF_NONNULL GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* PROTOBUF_NONNULL GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const DeleteRangeResponse& default_instance() {
    return *reinterpret_cast<const DeleteRangeResponse*>(
        &_DeleteRangeResponse_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 6;
  friend void swap(DeleteRangeResponse& a, DeleteRangeResponse& b) { a.Swap(&b); }
  inline void Swap(DeleteRangeResponse* PROTOBUF_NONNULL other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(DeleteRangeResponse* PROTOBUF_NONNULL other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  DeleteRangeResponse* PROTOBUF_NONNULL New(::google::protobuf::Arena* PROTOBUF_NULLABLE arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<DeleteRangeResponse>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const DeleteRangeResponse& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const DeleteRangeResponse& from) { DeleteRangeResponse::MergeImpl(*this, from); }

  private:
  static void MergeImpl(::google::protobuf::MessageLite& to_msg,
                        const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* PROTOBUF_NONNULL _InternalSerialize(
      const ::google::protobuf::MessageLite& msg, ::uint8_t* PROTOBUF_NONNULL target,
      ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* PROTOBUF_NONNULL _InternalSerialize(
      ::uint8_t* PROTOBUF_NONNULL target,
      ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* PROTOBUF_NONNULL _InternalSerialize(
      ::uint8_t* PROTOBUF_NONNULL target,
      ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(DeleteRangeResponse* PROTOBUF_NONNULL other);
 private:
  template <typename T>
  friend ::absl::string_view(::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "etcdserverpb.DeleteRangeResponse"; }

 protected:
  explicit DeleteRangeResponse(::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  DeleteRangeResponse(::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const DeleteRangeResponse& from);
  DeleteRangeResponse(
      ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, DeleteRangeResponse&& from) noexcept
      : DeleteRangeResponse(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* PROTOBUF_NONNULL GetClassData() const PROTOBUF_FINAL;
  static void* PROTOBUF_NONNULL PlacementNew_(
      const void* PROTOBUF_NONNULL, void* PROTOBUF_NONNULL mem,
      ::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  static constexpr auto InternalNewImpl_();

 public:
  static constexpr auto InternalGenerateClassData_();

  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kPrevKvsFieldNumber = 3,
    kHeaderFieldNumber = 1,
    kDeletedFieldNumber = 2,
  };
  // repeated .mvccpb.KeyValue prev_kvs = 3 [(.versionpb.etcd_version_field) = "3.1"];
  int prev_kvs_size() const;
  private:
  int _internal_prev_kvs_size() const;

  public:
  void clear_prev_kvs() ;
  ::mvccpb::KeyValue* PROTOBUF_NONNULL mutable_prev_kvs(int index);
  ::google::protobuf::RepeatedPtrField<::mvccpb::KeyValue>* PROTOBUF_NONNULL mutable_prev_kvs();

  private:
  const ::google::protobuf::RepeatedPtrField<::mvccpb::KeyValue>& _internal_prev_kvs() const;
  ::google::protobuf::RepeatedPtrField<::mvccpb::KeyValue>* PROTOBUF_NONNULL _internal_mutable_prev_kvs();
  public:
  const ::mvccpb::KeyValue& prev_kvs(int index) const;
  ::mvccpb::KeyValue* PROTOBUF_NONNULL add_prev_kvs();
  const ::google::protobuf::RepeatedPtrField<::mvccpb::KeyValue>& prev_kvs() const;
  // .etcdserverpb.ResponseHeader header = 1;
  bool has_header() const;
  void clear_header() ;
  const ::etcdserverpb::ResponseHeader& header() const;
  [[nodiscard]] ::etcdserverpb::ResponseHeader* PROTOBUF_NULLABLE release_header();
  ::etcdserverpb::ResponseHeader* PROTOBUF_NONNULL mutable_header();
  void set_allocated_header(::etcdserverpb::ResponseHeader* PROTOBUF_NULLABLE value);
  void unsafe_arena_set_allocated_header(::etcdserverpb::ResponseHeader* PROTOBUF_NULLABLE value);
  ::etcdserverpb::ResponseHeader* PROTOBUF_NULLABLE unsafe_arena_release_header();

  private:
  const ::etcdserverpb::ResponseHeader& _internal_header() const;
  ::etcdserverpb::ResponseHeader* PROTOBUF_NONNULL _internal_mutable_header();

  public:
  // int64 deleted = 2;
  void clear_deleted() ;
  ::int64_t deleted() const;
  void set_deleted(::int64_t value);

  private:
  ::int64_t _internal_deleted() const;
  void _internal_set_deleted(::int64_t value);

  public:
  // @@protoc_insertion_point(class_scope:etcdserverpb.DeleteRangeResponse)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<2, 3,
                                   2, 0,
                                   2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(
        ::google::protobuf::internal::InternalVisibility visibility,
        ::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
    inline explicit Impl_(
        ::google::protobuf::internal::InternalVisibility visibility,
        ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const Impl_& from,
        const DeleteRangeResponse& from_msg);
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    ::google::protobuf::RepeatedPtrField< ::mvccpb::KeyValue > prev_kvs_;
    ::etcdserverpb::ResponseHeader* PROTOBUF_NULLABLE header_;
    ::int64_t deleted_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_proto_2fmiddleware_2fetcd_2fetcd_2eproto;
};

extern const ::google::protobuf::internal::ClassDataFull DeleteRangeResponse_class_data_;
// -------------------------------------------------------------------

class CompactionResponse final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:etcdserverpb.CompactionResponse) */ {
 public:
  inline CompactionResponse() : CompactionResponse(nullptr) {}
  ~CompactionResponse() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(CompactionResponse* PROTOBUF_NONNULL msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(CompactionResponse));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR CompactionResponse(::google::protobuf::internal::ConstantInitialized);

  inline CompactionResponse(const CompactionResponse& from) : CompactionResponse(nullptr, from) {}
  inline CompactionResponse(CompactionResponse&& from) noexcept
      : CompactionResponse(nullptr, ::std::move(from)) {}
  inline CompactionResponse& operator=(const CompactionResponse& from) {
    CopyFrom(from);
    return *this;
  }
  inline CompactionResponse& operator=(CompactionResponse&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* PROTOBUF_NONNULL mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* PROTOBUF_NONNULL descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* PROTOBUF_NONNULL GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* PROTOBUF_NONNULL GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const CompactionResponse& default_instance() {
    return *reinterpret_cast<const CompactionResponse*>(
        &_CompactionResponse_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 13;
  friend void swap(CompactionResponse& a, CompactionResponse& b) { a.Swap(&b); }
  inline void Swap(CompactionResponse* PROTOBUF_NONNULL other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(CompactionResponse* PROTOBUF_NONNULL other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  CompactionResponse* PROTOBUF_NONNULL New(::google::protobuf::Arena* PROTOBUF_NULLABLE arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<CompactionResponse>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const CompactionResponse& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const CompactionResponse& from) { CompactionResponse::MergeImpl(*this, from); }

  private:
  static void MergeImpl(::google::protobuf::MessageLite& to_msg,
                        const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* PROTOBUF_NONNULL _InternalSerialize(
      const ::google::protobuf::MessageLite& msg, ::uint8_t* PROTOBUF_NONNULL target,
      ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* PROTOBUF_NONNULL _InternalSerialize(
      ::uint8_t* PROTOBUF_NONNULL target,
      ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* PROTOBUF_NONNULL _InternalSerialize(
      ::uint8_t* PROTOBUF_NONNULL target,
      ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(CompactionResponse* PROTOBUF_NONNULL other);
 private:
  template <typename T>
  friend ::absl::string_view(::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "etcdserverpb.CompactionResponse"; }

 protected:
  explicit CompactionResponse(::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  CompactionResponse(::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const CompactionResponse& from);
  CompactionResponse(
      ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, CompactionResponse&& from) noexcept
      : CompactionResponse(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* PROTOBUF_NONNULL GetClassData() const PROTOBUF_FINAL;
  static void* PROTOBUF_NONNULL PlacementNew_(
      const void* PROTOBUF_NONNULL, void* PROTOBUF_NONNULL mem,
      ::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  static constexpr auto InternalNewImpl_();

 public:
  static constexpr auto InternalGenerateClassData_();

  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kHeaderFieldNumber = 1,
  };
  // .etcdserverpb.ResponseHeader header = 1;
  bool has_header() const;
  void clear_header() ;
  const ::etcdserverpb::ResponseHeader& header() const;
  [[nodiscard]] ::etcdserverpb::ResponseHeader* PROTOBUF_NULLABLE release_header();
  ::etcdserverpb::ResponseHeader* PROTOBUF_NONNULL mutable_header();
  void set_allocated_header(::etcdserverpb::ResponseHeader* PROTOBUF_NULLABLE value);
  void unsafe_arena_set_allocated_header(::etcdserverpb::ResponseHeader* PROTOBUF_NULLABLE value);
  ::etcdserverpb::ResponseHeader* PROTOBUF_NULLABLE unsafe_arena_release_header();

  private:
  const ::etcdserverpb::ResponseHeader& _internal_header() const;
  ::etcdserverpb::ResponseHeader* PROTOBUF_NONNULL _internal_mutable_header();

  public:
  // @@protoc_insertion_point(class_scope:etcdserverpb.CompactionResponse)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<0, 1,
                                   1, 0,
                                   2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(
        ::google::protobuf::internal::InternalVisibility visibility,
        ::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
    inline explicit Impl_(
        ::google::protobuf::internal::InternalVisibility visibility,
        ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const Impl_& from,
        const CompactionResponse& from_msg);
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    ::etcdserverpb::ResponseHeader* PROTOBUF_NULLABLE header_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_proto_2fmiddleware_2fetcd_2fetcd_2eproto;
};

extern const ::google::protobuf::internal::ClassDataFull CompactionResponse_class_data_;
// -------------------------------------------------------------------

class WatchResponse final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:etcdserverpb.WatchResponse) */ {
 public:
  inline WatchResponse() : WatchResponse(nullptr) {}
  ~WatchResponse() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(WatchResponse* PROTOBUF_NONNULL msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(WatchResponse));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR WatchResponse(::google::protobuf::internal::ConstantInitialized);

  inline WatchResponse(const WatchResponse& from) : WatchResponse(nullptr, from) {}
  inline WatchResponse(WatchResponse&& from) noexcept
      : WatchResponse(nullptr, ::std::move(from)) {}
  inline WatchResponse& operator=(const WatchResponse& from) {
    CopyFrom(from);
    return *this;
  }
  inline WatchResponse& operator=(WatchResponse&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* PROTOBUF_NONNULL mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* PROTOBUF_NONNULL descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* PROTOBUF_NONNULL GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* PROTOBUF_NONNULL GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const WatchResponse& default_instance() {
    return *reinterpret_cast<const WatchResponse*>(
        &_WatchResponse_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 18;
  friend void swap(WatchResponse& a, WatchResponse& b) { a.Swap(&b); }
  inline void Swap(WatchResponse* PROTOBUF_NONNULL other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(WatchResponse* PROTOBUF_NONNULL other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  WatchResponse* PROTOBUF_NONNULL New(::google::protobuf::Arena* PROTOBUF_NULLABLE arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<WatchResponse>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const WatchResponse& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const WatchResponse& from) { WatchResponse::MergeImpl(*this, from); }

  private:
  static void MergeImpl(::google::protobuf::MessageLite& to_msg,
                        const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* PROTOBUF_NONNULL _InternalSerialize(
      const ::google::protobuf::MessageLite& msg, ::uint8_t* PROTOBUF_NONNULL target,
      ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* PROTOBUF_NONNULL _InternalSerialize(
      ::uint8_t* PROTOBUF_NONNULL target,
      ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* PROTOBUF_NONNULL _InternalSerialize(
      ::uint8_t* PROTOBUF_NONNULL target,
      ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(WatchResponse* PROTOBUF_NONNULL other);
 private:
  template <typename T>
  friend ::absl::string_view(::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "etcdserverpb.WatchResponse"; }

 protected:
  explicit WatchResponse(::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  WatchResponse(::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const WatchResponse& from);
  WatchResponse(
      ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, WatchResponse&& from) noexcept
      : WatchResponse(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* PROTOBUF_NONNULL GetClassData() const PROTOBUF_FINAL;
  static void* PROTOBUF_NONNULL PlacementNew_(
      const void* PROTOBUF_NONNULL, void* PROTOBUF_NONNULL mem,
      ::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  static constexpr auto InternalNewImpl_();

 public:
  static constexpr auto InternalGenerateClassData_();

  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kEventsFieldNumber = 11,
    kCancelReasonFieldNumber = 6,
    kHeaderFieldNumber = 1,
    kWatchIdFieldNumber = 2,
    kCompactRevisionFieldNumber = 5,
    kCreatedFieldNumber = 3,
    kCanceledFieldNumber = 4,
    kFragmentFieldNumber = 7,
  };
  // repeated .mvccpb.Event events = 11;
  int events_size() const;
  private:
  int _internal_events_size() const;

  public:
  void clear_events() ;
  ::mvccpb::Event* PROTOBUF_NONNULL mutable_events(int index);
  ::google::protobuf::RepeatedPtrField<::mvccpb::Event>* PROTOBUF_NONNULL mutable_events();

  private:
  const ::google::protobuf::RepeatedPtrField<::mvccpb::Event>& _internal_events() const;
  ::google::protobuf::RepeatedPtrField<::mvccpb::Event>* PROTOBUF_NONNULL _internal_mutable_events();
  public:
  const ::mvccpb::Event& events(int index) const;
  ::mvccpb::Event* PROTOBUF_NONNULL add_events();
  const ::google::protobuf::RepeatedPtrField<::mvccpb::Event>& events() const;
  // string cancel_reason = 6 [(.versionpb.etcd_version_field) = "3.4"];
  void clear_cancel_reason() ;
  const ::std::string& cancel_reason() const;
  template <typename Arg_ = const ::std::string&, typename... Args_>
  void set_cancel_reason(Arg_&& arg, Args_... args);
  ::std::string* PROTOBUF_NONNULL mutable_cancel_reason();
  [[nodiscard]] ::std::string* PROTOBUF_NULLABLE release_cancel_reason();
  void set_allocated_cancel_reason(::std::string* PROTOBUF_NULLABLE value);

  private:
  const ::std::string& _internal_cancel_reason() const;
  PROTOBUF_ALWAYS_INLINE void _internal_set_cancel_reason(const ::std::string& value);
  ::std::string* PROTOBUF_NONNULL _internal_mutable_cancel_reason();

  public:
  // .etcdserverpb.ResponseHeader header = 1;
  bool has_header() const;
  void clear_header() ;
  const ::etcdserverpb::ResponseHeader& header() const;
  [[nodiscard]] ::etcdserverpb::ResponseHeader* PROTOBUF_NULLABLE release_header();
  ::etcdserverpb::ResponseHeader* PROTOBUF_NONNULL mutable_header();
  void set_allocated_header(::etcdserverpb::ResponseHeader* PROTOBUF_NULLABLE value);
  void unsafe_arena_set_allocated_header(::etcdserverpb::ResponseHeader* PROTOBUF_NULLABLE value);
  ::etcdserverpb::ResponseHeader* PROTOBUF_NULLABLE unsafe_arena_release_header();

  private:
  const ::etcdserverpb::ResponseHeader& _internal_header() const;
  ::etcdserverpb::ResponseHeader* PROTOBUF_NONNULL _internal_mutable_header();

  public:
  // int64 watch_id = 2;
  void clear_watch_id() ;
  ::int64_t watch_id() const;
  void set_watch_id(::int64_t value);

  private:
  ::int64_t _internal_watch_id() const;
  void _internal_set_watch_id(::int64_t value);

  public:
  // int64 compact_revision = 5;
  void clear_compact_revision() ;
  ::int64_t compact_revision() const;
  void set_compact_revision(::int64_t value);

  private:
  ::int64_t _internal_compact_revision() const;
  void _internal_set_compact_revision(::int64_t value);

  public:
  // bool created = 3;
  void clear_created() ;
  bool created() const;
  void set_created(bool value);

  private:
  bool _internal_created() const;
  void _internal_set_created(bool value);

  public:
  // bool canceled = 4;
  void clear_canceled() ;
  bool canceled() const;
  void set_canceled(bool value);

  private:
  bool _internal_canceled() const;
  void _internal_set_canceled(bool value);

  public:
  // bool fragment = 7 [(.versionpb.etcd_version_field) = "3.4"];
  void clear_fragment() ;
  bool fragment() const;
  void set_fragment(bool value);

  private:
  bool _internal_fragment() const;
  void _internal_set_fragment(bool value);

  public:
  // @@protoc_insertion_point(class_scope:etcdserverpb.WatchResponse)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<4, 8,
                                   2, 56,
                                   2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(
        ::google::protobuf::internal::InternalVisibility visibility,
        ::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
    inline explicit Impl_(
        ::google::protobuf::internal::InternalVisibility visibility,
        ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const Impl_& from,
        const WatchResponse& from_msg);
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    ::google::protobuf::RepeatedPtrField< ::mvccpb::Event > events_;
    ::google::protobuf::internal::ArenaStringPtr cancel_reason_;
    ::etcdserverpb::ResponseHeader* PROTOBUF_NULLABLE header_;
    ::int64_t watch_id_;
    ::int64_t compact_revision_;
    bool created_;
    bool canceled_;
    bool fragment_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_proto_2fmiddleware_2fetcd_2fetcd_2eproto;
};

extern const ::google::protobuf::internal::ClassDataFull WatchResponse_class_data_;
// -------------------------------------------------------------------

class ResponseOp final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:etcdserverpb.ResponseOp) */ {
 public:
  inline ResponseOp() : ResponseOp(nullptr) {}
  ~ResponseOp() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(ResponseOp* PROTOBUF_NONNULL msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(ResponseOp));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR ResponseOp(::google::protobuf::internal::ConstantInitialized);

  inline ResponseOp(const ResponseOp& from) : ResponseOp(nullptr, from) {}
  inline ResponseOp(ResponseOp&& from) noexcept
      : ResponseOp(nullptr, ::std::move(from)) {}
  inline ResponseOp& operator=(const ResponseOp& from) {
    CopyFrom(from);
    return *this;
  }
  inline ResponseOp& operator=(ResponseOp&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* PROTOBUF_NONNULL mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* PROTOBUF_NONNULL descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* PROTOBUF_NONNULL GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* PROTOBUF_NONNULL GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const ResponseOp& default_instance() {
    return *reinterpret_cast<const ResponseOp*>(
        &_ResponseOp_default_instance_);
  }
  enum ResponseCase {
    kResponseRange = 1,
    kResponsePut = 2,
    kResponseDeleteRange = 3,
    kResponseTxn = 4,
    RESPONSE_NOT_SET = 0,
  };
  static constexpr int kIndexInFileMessages = 8;
  friend void swap(ResponseOp& a, ResponseOp& b) { a.Swap(&b); }
  inline void Swap(ResponseOp* PROTOBUF_NONNULL other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(ResponseOp* PROTOBUF_NONNULL other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  ResponseOp* PROTOBUF_NONNULL New(::google::protobuf::Arena* PROTOBUF_NULLABLE arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<ResponseOp>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const ResponseOp& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const ResponseOp& from) { ResponseOp::MergeImpl(*this, from); }

  private:
  static void MergeImpl(::google::protobuf::MessageLite& to_msg,
                        const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* PROTOBUF_NONNULL _InternalSerialize(
      const ::google::protobuf::MessageLite& msg, ::uint8_t* PROTOBUF_NONNULL target,
      ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* PROTOBUF_NONNULL _InternalSerialize(
      ::uint8_t* PROTOBUF_NONNULL target,
      ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* PROTOBUF_NONNULL _InternalSerialize(
      ::uint8_t* PROTOBUF_NONNULL target,
      ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(ResponseOp* PROTOBUF_NONNULL other);
 private:
  template <typename T>
  friend ::absl::string_view(::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "etcdserverpb.ResponseOp"; }

 protected:
  explicit ResponseOp(::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  ResponseOp(::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const ResponseOp& from);
  ResponseOp(
      ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, ResponseOp&& from) noexcept
      : ResponseOp(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* PROTOBUF_NONNULL GetClassData() const PROTOBUF_FINAL;
  static void* PROTOBUF_NONNULL PlacementNew_(
      const void* PROTOBUF_NONNULL, void* PROTOBUF_NONNULL mem,
      ::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  static constexpr auto InternalNewImpl_();

 public:
  static constexpr auto InternalGenerateClassData_();

  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kResponseRangeFieldNumber = 1,
    kResponsePutFieldNumber = 2,
    kResponseDeleteRangeFieldNumber = 3,
    kResponseTxnFieldNumber = 4,
  };
  // .etcdserverpb.RangeResponse response_range = 1;
  bool has_response_range() const;
  private:
  bool _internal_has_response_range() const;

  public:
  void clear_response_range() ;
  const ::etcdserverpb::RangeResponse& response_range() const;
  [[nodiscard]] ::etcdserverpb::RangeResponse* PROTOBUF_NULLABLE release_response_range();
  ::etcdserverpb::RangeResponse* PROTOBUF_NONNULL mutable_response_range();
  void set_allocated_response_range(::etcdserverpb::RangeResponse* PROTOBUF_NULLABLE value);
  void unsafe_arena_set_allocated_response_range(::etcdserverpb::RangeResponse* PROTOBUF_NULLABLE value);
  ::etcdserverpb::RangeResponse* PROTOBUF_NULLABLE unsafe_arena_release_response_range();

  private:
  const ::etcdserverpb::RangeResponse& _internal_response_range() const;
  ::etcdserverpb::RangeResponse* PROTOBUF_NONNULL _internal_mutable_response_range();

  public:
  // .etcdserverpb.PutResponse response_put = 2;
  bool has_response_put() const;
  private:
  bool _internal_has_response_put() const;

  public:
  void clear_response_put() ;
  const ::etcdserverpb::PutResponse& response_put() const;
  [[nodiscard]] ::etcdserverpb::PutResponse* PROTOBUF_NULLABLE release_response_put();
  ::etcdserverpb::PutResponse* PROTOBUF_NONNULL mutable_response_put();
  void set_allocated_response_put(::etcdserverpb::PutResponse* PROTOBUF_NULLABLE value);
  void unsafe_arena_set_allocated_response_put(::etcdserverpb::PutResponse* PROTOBUF_NULLABLE value);
  ::etcdserverpb::PutResponse* PROTOBUF_NULLABLE unsafe_arena_release_response_put();

  private:
  const ::etcdserverpb::PutResponse& _internal_response_put() const;
  ::etcdserverpb::PutResponse* PROTOBUF_NONNULL _internal_mutable_response_put();

  public:
  // .etcdserverpb.DeleteRangeResponse response_delete_range = 3;
  bool has_response_delete_range() const;
  private:
  bool _internal_has_response_delete_range() const;

  public:
  void clear_response_delete_range() ;
  const ::etcdserverpb::DeleteRangeResponse& response_delete_range() const;
  [[nodiscard]] ::etcdserverpb::DeleteRangeResponse* PROTOBUF_NULLABLE release_response_delete_range();
  ::etcdserverpb::DeleteRangeResponse* PROTOBUF_NONNULL mutable_response_delete_range();
  void set_allocated_response_delete_range(::etcdserverpb::DeleteRangeResponse* PROTOBUF_NULLABLE value);
  void unsafe_arena_set_allocated_response_delete_range(::etcdserverpb::DeleteRangeResponse* PROTOBUF_NULLABLE value);
  ::etcdserverpb::DeleteRangeResponse* PROTOBUF_NULLABLE unsafe_arena_release_response_delete_range();

  private:
  const ::etcdserverpb::DeleteRangeResponse& _internal_response_delete_range() const;
  ::etcdserverpb::DeleteRangeResponse* PROTOBUF_NONNULL _internal_mutable_response_delete_range();

  public:
  // .etcdserverpb.TxnResponse response_txn = 4 [(.versionpb.etcd_version_field) = "3.3"];
  bool has_response_txn() const;
  private:
  bool _internal_has_response_txn() const;

  public:
  void clear_response_txn() ;
  const ::etcdserverpb::TxnResponse& response_txn() const;
  [[nodiscard]] ::etcdserverpb::TxnResponse* PROTOBUF_NULLABLE release_response_txn();
  ::etcdserverpb::TxnResponse* PROTOBUF_NONNULL mutable_response_txn();
  void set_allocated_response_txn(::etcdserverpb::TxnResponse* PROTOBUF_NULLABLE value);
  void unsafe_arena_set_allocated_response_txn(::etcdserverpb::TxnResponse* PROTOBUF_NULLABLE value);
  ::etcdserverpb::TxnResponse* PROTOBUF_NULLABLE unsafe_arena_release_response_txn();

  private:
  const ::etcdserverpb::TxnResponse& _internal_response_txn() const;
  ::etcdserverpb::TxnResponse* PROTOBUF_NONNULL _internal_mutable_response_txn();

  public:
  void clear_response();
  ResponseCase response_case() const;
  // @@protoc_insertion_point(class_scope:etcdserverpb.ResponseOp)
 private:
  class _Internal;
  void set_has_response_range();
  void set_has_response_put();
  void set_has_response_delete_range();
  void set_has_response_txn();
  inline bool has_response() const;
  inline void clear_has_response();
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<0, 4,
                                   4, 0,
                                   2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(
        ::google::protobuf::internal::InternalVisibility visibility,
        ::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
    inline explicit Impl_(
        ::google::protobuf::internal::InternalVisibility visibility,
        ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const Impl_& from,
        const ResponseOp& from_msg);
    union ResponseUnion {
      constexpr ResponseUnion() : _constinit_{} {}
      ::google::protobuf::internal::ConstantInitialized _constinit_;
      ::google::protobuf::Message* PROTOBUF_NULLABLE response_range_;
      ::google::protobuf::Message* PROTOBUF_NULLABLE response_put_;
      ::google::protobuf::Message* PROTOBUF_NULLABLE response_delete_range_;
      ::google::protobuf::Message* PROTOBUF_NULLABLE response_txn_;
    } response_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    ::uint32_t _oneof_case_[1];
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_proto_2fmiddleware_2fetcd_2fetcd_2eproto;
};

extern const ::google::protobuf::internal::ClassDataFull ResponseOp_class_data_;
// -------------------------------------------------------------------

class TxnResponse final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:etcdserverpb.TxnResponse) */ {
 public:
  inline TxnResponse() : TxnResponse(nullptr) {}
  ~TxnResponse() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(TxnResponse* PROTOBUF_NONNULL msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(TxnResponse));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR TxnResponse(::google::protobuf::internal::ConstantInitialized);

  inline TxnResponse(const TxnResponse& from) : TxnResponse(nullptr, from) {}
  inline TxnResponse(TxnResponse&& from) noexcept
      : TxnResponse(nullptr, ::std::move(from)) {}
  inline TxnResponse& operator=(const TxnResponse& from) {
    CopyFrom(from);
    return *this;
  }
  inline TxnResponse& operator=(TxnResponse&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* PROTOBUF_NONNULL mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* PROTOBUF_NONNULL descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* PROTOBUF_NONNULL GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* PROTOBUF_NONNULL GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const TxnResponse& default_instance() {
    return *reinterpret_cast<const TxnResponse*>(
        &_TxnResponse_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 11;
  friend void swap(TxnResponse& a, TxnResponse& b) { a.Swap(&b); }
  inline void Swap(TxnResponse* PROTOBUF_NONNULL other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(TxnResponse* PROTOBUF_NONNULL other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  TxnResponse* PROTOBUF_NONNULL New(::google::protobuf::Arena* PROTOBUF_NULLABLE arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<TxnResponse>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const TxnResponse& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const TxnResponse& from) { TxnResponse::MergeImpl(*this, from); }

  private:
  static void MergeImpl(::google::protobuf::MessageLite& to_msg,
                        const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* PROTOBUF_NONNULL _InternalSerialize(
      const ::google::protobuf::MessageLite& msg, ::uint8_t* PROTOBUF_NONNULL target,
      ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* PROTOBUF_NONNULL _InternalSerialize(
      ::uint8_t* PROTOBUF_NONNULL target,
      ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* PROTOBUF_NONNULL _InternalSerialize(
      ::uint8_t* PROTOBUF_NONNULL target,
      ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(TxnResponse* PROTOBUF_NONNULL other);
 private:
  template <typename T>
  friend ::absl::string_view(::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "etcdserverpb.TxnResponse"; }

 protected:
  explicit TxnResponse(::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  TxnResponse(::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const TxnResponse& from);
  TxnResponse(
      ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, TxnResponse&& from) noexcept
      : TxnResponse(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* PROTOBUF_NONNULL GetClassData() const PROTOBUF_FINAL;
  static void* PROTOBUF_NONNULL PlacementNew_(
      const void* PROTOBUF_NONNULL, void* PROTOBUF_NONNULL mem,
      ::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  static constexpr auto InternalNewImpl_();

 public:
  static constexpr auto InternalGenerateClassData_();

  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kResponsesFieldNumber = 3,
    kHeaderFieldNumber = 1,
    kSucceededFieldNumber = 2,
  };
  // repeated .etcdserverpb.ResponseOp responses = 3;
  int responses_size() const;
  private:
  int _internal_responses_size() const;

  public:
  void clear_responses() ;
  ::etcdserverpb::ResponseOp* PROTOBUF_NONNULL mutable_responses(int index);
  ::google::protobuf::RepeatedPtrField<::etcdserverpb::ResponseOp>* PROTOBUF_NONNULL mutable_responses();

  private:
  const ::google::protobuf::RepeatedPtrField<::etcdserverpb::ResponseOp>& _internal_responses() const;
  ::google::protobuf::RepeatedPtrField<::etcdserverpb::ResponseOp>* PROTOBUF_NONNULL _internal_mutable_responses();
  public:
  const ::etcdserverpb::ResponseOp& responses(int index) const;
  ::etcdserverpb::ResponseOp* PROTOBUF_NONNULL add_responses();
  const ::google::protobuf::RepeatedPtrField<::etcdserverpb::ResponseOp>& responses() const;
  // .etcdserverpb.ResponseHeader header = 1;
  bool has_header() const;
  void clear_header() ;
  const ::etcdserverpb::ResponseHeader& header() const;
  [[nodiscard]] ::etcdserverpb::ResponseHeader* PROTOBUF_NULLABLE release_header();
  ::etcdserverpb::ResponseHeader* PROTOBUF_NONNULL mutable_header();
  void set_allocated_header(::etcdserverpb::ResponseHeader* PROTOBUF_NULLABLE value);
  void unsafe_arena_set_allocated_header(::etcdserverpb::ResponseHeader* PROTOBUF_NULLABLE value);
  ::etcdserverpb::ResponseHeader* PROTOBUF_NULLABLE unsafe_arena_release_header();

  private:
  const ::etcdserverpb::ResponseHeader& _internal_header() const;
  ::etcdserverpb::ResponseHeader* PROTOBUF_NONNULL _internal_mutable_header();

  public:
  // bool succeeded = 2;
  void clear_succeeded() ;
  bool succeeded() const;
  void set_succeeded(bool value);

  private:
  bool _internal_succeeded() const;
  void _internal_set_succeeded(bool value);

  public:
  // @@protoc_insertion_point(class_scope:etcdserverpb.TxnResponse)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<2, 3,
                                   2, 0,
                                   2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(
        ::google::protobuf::internal::InternalVisibility visibility,
        ::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
    inline explicit Impl_(
        ::google::protobuf::internal::InternalVisibility visibility,
        ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const Impl_& from,
        const TxnResponse& from_msg);
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    ::google::protobuf::RepeatedPtrField< ::etcdserverpb::ResponseOp > responses_;
    ::etcdserverpb::ResponseHeader* PROTOBUF_NULLABLE header_;
    bool succeeded_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_proto_2fmiddleware_2fetcd_2fetcd_2eproto;
};

extern const ::google::protobuf::internal::ClassDataFull TxnResponse_class_data_;

// ===================================================================




// ===================================================================


#ifdef __GNUC__
#pragma GCC diagnostic push
#pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif  // __GNUC__
// -------------------------------------------------------------------

// ResponseHeader

// uint64 cluster_id = 1;
inline void ResponseHeader::clear_cluster_id() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.cluster_id_ = ::uint64_t{0u};
  _impl_._has_bits_[0] &= ~0x00000001u;
}
inline ::uint64_t ResponseHeader::cluster_id() const {
  // @@protoc_insertion_point(field_get:etcdserverpb.ResponseHeader.cluster_id)
  return _internal_cluster_id();
}
inline void ResponseHeader::set_cluster_id(::uint64_t value) {
  _internal_set_cluster_id(value);
  _impl_._has_bits_[0] |= 0x00000001u;
  // @@protoc_insertion_point(field_set:etcdserverpb.ResponseHeader.cluster_id)
}
inline ::uint64_t ResponseHeader::_internal_cluster_id() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.cluster_id_;
}
inline void ResponseHeader::_internal_set_cluster_id(::uint64_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.cluster_id_ = value;
}

// uint64 member_id = 2;
inline void ResponseHeader::clear_member_id() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.member_id_ = ::uint64_t{0u};
  _impl_._has_bits_[0] &= ~0x00000002u;
}
inline ::uint64_t ResponseHeader::member_id() const {
  // @@protoc_insertion_point(field_get:etcdserverpb.ResponseHeader.member_id)
  return _internal_member_id();
}
inline void ResponseHeader::set_member_id(::uint64_t value) {
  _internal_set_member_id(value);
  _impl_._has_bits_[0] |= 0x00000002u;
  // @@protoc_insertion_point(field_set:etcdserverpb.ResponseHeader.member_id)
}
inline ::uint64_t ResponseHeader::_internal_member_id() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.member_id_;
}
inline void ResponseHeader::_internal_set_member_id(::uint64_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.member_id_ = value;
}

// int64 revision = 3;
inline void ResponseHeader::clear_revision() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.revision_ = ::int64_t{0};
  _impl_._has_bits_[0] &= ~0x00000004u;
}
inline ::int64_t ResponseHeader::revision() const {
  // @@protoc_insertion_point(field_get:etcdserverpb.ResponseHeader.revision)
  return _internal_revision();
}
inline void ResponseHeader::set_revision(::int64_t value) {
  _internal_set_revision(value);
  _impl_._has_bits_[0] |= 0x00000004u;
  // @@protoc_insertion_point(field_set:etcdserverpb.ResponseHeader.revision)
}
inline ::int64_t ResponseHeader::_internal_revision() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.revision_;
}
inline void ResponseHeader::_internal_set_revision(::int64_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.revision_ = value;
}

// uint64 raft_term = 4;
inline void ResponseHeader::clear_raft_term() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.raft_term_ = ::uint64_t{0u};
  _impl_._has_bits_[0] &= ~0x00000008u;
}
inline ::uint64_t ResponseHeader::raft_term() const {
  // @@protoc_insertion_point(field_get:etcdserverpb.ResponseHeader.raft_term)
  return _internal_raft_term();
}
inline void ResponseHeader::set_raft_term(::uint64_t value) {
  _internal_set_raft_term(value);
  _impl_._has_bits_[0] |= 0x00000008u;
  // @@protoc_insertion_point(field_set:etcdserverpb.ResponseHeader.raft_term)
}
inline ::uint64_t ResponseHeader::_internal_raft_term() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.raft_term_;
}
inline void ResponseHeader::_internal_set_raft_term(::uint64_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.raft_term_ = value;
}

// -------------------------------------------------------------------

// RangeRequest

// bytes key = 1;
inline void RangeRequest::clear_key() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.key_.ClearToEmpty();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
inline const ::std::string& RangeRequest::key() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:etcdserverpb.RangeRequest.key)
  return _internal_key();
}
template <typename Arg_, typename... Args_>
PROTOBUF_ALWAYS_INLINE void RangeRequest::set_key(Arg_&& arg, Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000001u;
  _impl_.key_.SetBytes(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:etcdserverpb.RangeRequest.key)
}
inline ::std::string* PROTOBUF_NONNULL RangeRequest::mutable_key()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::std::string* _s = _internal_mutable_key();
  // @@protoc_insertion_point(field_mutable:etcdserverpb.RangeRequest.key)
  return _s;
}
inline const ::std::string& RangeRequest::_internal_key() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.key_.Get();
}
inline void RangeRequest::_internal_set_key(const ::std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000001u;
  _impl_.key_.Set(value, GetArena());
}
inline ::std::string* PROTOBUF_NONNULL RangeRequest::_internal_mutable_key() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000001u;
  return _impl_.key_.Mutable( GetArena());
}
inline ::std::string* PROTOBUF_NULLABLE RangeRequest::release_key() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:etcdserverpb.RangeRequest.key)
  if ((_impl_._has_bits_[0] & 0x00000001u) == 0) {
    return nullptr;
  }
  _impl_._has_bits_[0] &= ~0x00000001u;
  auto* released = _impl_.key_.Release();
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString()) {
    _impl_.key_.Set("", GetArena());
  }
  return released;
}
inline void RangeRequest::set_allocated_key(::std::string* PROTOBUF_NULLABLE value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  _impl_.key_.SetAllocated(value, GetArena());
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString() && _impl_.key_.IsDefault()) {
    _impl_.key_.Set("", GetArena());
  }
  // @@protoc_insertion_point(field_set_allocated:etcdserverpb.RangeRequest.key)
}

// bytes range_end = 2;
inline void RangeRequest::clear_range_end() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.range_end_.ClearToEmpty();
  _impl_._has_bits_[0] &= ~0x00000002u;
}
inline const ::std::string& RangeRequest::range_end() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:etcdserverpb.RangeRequest.range_end)
  return _internal_range_end();
}
template <typename Arg_, typename... Args_>
PROTOBUF_ALWAYS_INLINE void RangeRequest::set_range_end(Arg_&& arg, Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000002u;
  _impl_.range_end_.SetBytes(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:etcdserverpb.RangeRequest.range_end)
}
inline ::std::string* PROTOBUF_NONNULL RangeRequest::mutable_range_end()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::std::string* _s = _internal_mutable_range_end();
  // @@protoc_insertion_point(field_mutable:etcdserverpb.RangeRequest.range_end)
  return _s;
}
inline const ::std::string& RangeRequest::_internal_range_end() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.range_end_.Get();
}
inline void RangeRequest::_internal_set_range_end(const ::std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000002u;
  _impl_.range_end_.Set(value, GetArena());
}
inline ::std::string* PROTOBUF_NONNULL RangeRequest::_internal_mutable_range_end() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000002u;
  return _impl_.range_end_.Mutable( GetArena());
}
inline ::std::string* PROTOBUF_NULLABLE RangeRequest::release_range_end() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:etcdserverpb.RangeRequest.range_end)
  if ((_impl_._has_bits_[0] & 0x00000002u) == 0) {
    return nullptr;
  }
  _impl_._has_bits_[0] &= ~0x00000002u;
  auto* released = _impl_.range_end_.Release();
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString()) {
    _impl_.range_end_.Set("", GetArena());
  }
  return released;
}
inline void RangeRequest::set_allocated_range_end(::std::string* PROTOBUF_NULLABLE value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000002u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000002u;
  }
  _impl_.range_end_.SetAllocated(value, GetArena());
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString() && _impl_.range_end_.IsDefault()) {
    _impl_.range_end_.Set("", GetArena());
  }
  // @@protoc_insertion_point(field_set_allocated:etcdserverpb.RangeRequest.range_end)
}

// int64 limit = 3;
inline void RangeRequest::clear_limit() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.limit_ = ::int64_t{0};
  _impl_._has_bits_[0] &= ~0x00000004u;
}
inline ::int64_t RangeRequest::limit() const {
  // @@protoc_insertion_point(field_get:etcdserverpb.RangeRequest.limit)
  return _internal_limit();
}
inline void RangeRequest::set_limit(::int64_t value) {
  _internal_set_limit(value);
  _impl_._has_bits_[0] |= 0x00000004u;
  // @@protoc_insertion_point(field_set:etcdserverpb.RangeRequest.limit)
}
inline ::int64_t RangeRequest::_internal_limit() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.limit_;
}
inline void RangeRequest::_internal_set_limit(::int64_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.limit_ = value;
}

// int64 revision = 4;
inline void RangeRequest::clear_revision() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.revision_ = ::int64_t{0};
  _impl_._has_bits_[0] &= ~0x00000008u;
}
inline ::int64_t RangeRequest::revision() const {
  // @@protoc_insertion_point(field_get:etcdserverpb.RangeRequest.revision)
  return _internal_revision();
}
inline void RangeRequest::set_revision(::int64_t value) {
  _internal_set_revision(value);
  _impl_._has_bits_[0] |= 0x00000008u;
  // @@protoc_insertion_point(field_set:etcdserverpb.RangeRequest.revision)
}
inline ::int64_t RangeRequest::_internal_revision() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.revision_;
}
inline void RangeRequest::_internal_set_revision(::int64_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.revision_ = value;
}

// .etcdserverpb.RangeRequest.SortOrder sort_order = 5;
inline void RangeRequest::clear_sort_order() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.sort_order_ = 0;
  _impl_._has_bits_[0] &= ~0x00000010u;
}
inline ::etcdserverpb::RangeRequest_SortOrder RangeRequest::sort_order() const {
  // @@protoc_insertion_point(field_get:etcdserverpb.RangeRequest.sort_order)
  return _internal_sort_order();
}
inline void RangeRequest::set_sort_order(::etcdserverpb::RangeRequest_SortOrder value) {
  _internal_set_sort_order(value);
  _impl_._has_bits_[0] |= 0x00000010u;
  // @@protoc_insertion_point(field_set:etcdserverpb.RangeRequest.sort_order)
}
inline ::etcdserverpb::RangeRequest_SortOrder RangeRequest::_internal_sort_order() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return static_cast<::etcdserverpb::RangeRequest_SortOrder>(_impl_.sort_order_);
}
inline void RangeRequest::_internal_set_sort_order(::etcdserverpb::RangeRequest_SortOrder value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.sort_order_ = value;
}

// .etcdserverpb.RangeRequest.SortTarget sort_target = 6;
inline void RangeRequest::clear_sort_target() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.sort_target_ = 0;
  _impl_._has_bits_[0] &= ~0x00000020u;
}
inline ::etcdserverpb::RangeRequest_SortTarget RangeRequest::sort_target() const {
  // @@protoc_insertion_point(field_get:etcdserverpb.RangeRequest.sort_target)
  return _internal_sort_target();
}
inline void RangeRequest::set_sort_target(::etcdserverpb::RangeRequest_SortTarget value) {
  _internal_set_sort_target(value);
  _impl_._has_bits_[0] |= 0x00000020u;
  // @@protoc_insertion_point(field_set:etcdserverpb.RangeRequest.sort_target)
}
inline ::etcdserverpb::RangeRequest_SortTarget RangeRequest::_internal_sort_target() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return static_cast<::etcdserverpb::RangeRequest_SortTarget>(_impl_.sort_target_);
}
inline void RangeRequest::_internal_set_sort_target(::etcdserverpb::RangeRequest_SortTarget value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.sort_target_ = value;
}

// bool serializable = 7;
inline void RangeRequest::clear_serializable() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.serializable_ = false;
  _impl_._has_bits_[0] &= ~0x00000400u;
}
inline bool RangeRequest::serializable() const {
  // @@protoc_insertion_point(field_get:etcdserverpb.RangeRequest.serializable)
  return _internal_serializable();
}
inline void RangeRequest::set_serializable(bool value) {
  _internal_set_serializable(value);
  _impl_._has_bits_[0] |= 0x00000400u;
  // @@protoc_insertion_point(field_set:etcdserverpb.RangeRequest.serializable)
}
inline bool RangeRequest::_internal_serializable() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.serializable_;
}
inline void RangeRequest::_internal_set_serializable(bool value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.serializable_ = value;
}

// bool keys_only = 8;
inline void RangeRequest::clear_keys_only() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.keys_only_ = false;
  _impl_._has_bits_[0] &= ~0x00000800u;
}
inline bool RangeRequest::keys_only() const {
  // @@protoc_insertion_point(field_get:etcdserverpb.RangeRequest.keys_only)
  return _internal_keys_only();
}
inline void RangeRequest::set_keys_only(bool value) {
  _internal_set_keys_only(value);
  _impl_._has_bits_[0] |= 0x00000800u;
  // @@protoc_insertion_point(field_set:etcdserverpb.RangeRequest.keys_only)
}
inline bool RangeRequest::_internal_keys_only() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.keys_only_;
}
inline void RangeRequest::_internal_set_keys_only(bool value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.keys_only_ = value;
}

// bool count_only = 9;
inline void RangeRequest::clear_count_only() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.count_only_ = false;
  _impl_._has_bits_[0] &= ~0x00001000u;
}
inline bool RangeRequest::count_only() const {
  // @@protoc_insertion_point(field_get:etcdserverpb.RangeRequest.count_only)
  return _internal_count_only();
}
inline void RangeRequest::set_count_only(bool value) {
  _internal_set_count_only(value);
  _impl_._has_bits_[0] |= 0x00001000u;
  // @@protoc_insertion_point(field_set:etcdserverpb.RangeRequest.count_only)
}
inline bool RangeRequest::_internal_count_only() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.count_only_;
}
inline void RangeRequest::_internal_set_count_only(bool value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.count_only_ = value;
}

// int64 min_mod_revision = 10 [(.versionpb.etcd_version_field) = "3.1"];
inline void RangeRequest::clear_min_mod_revision() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.min_mod_revision_ = ::int64_t{0};
  _impl_._has_bits_[0] &= ~0x00000040u;
}
inline ::int64_t RangeRequest::min_mod_revision() const {
  // @@protoc_insertion_point(field_get:etcdserverpb.RangeRequest.min_mod_revision)
  return _internal_min_mod_revision();
}
inline void RangeRequest::set_min_mod_revision(::int64_t value) {
  _internal_set_min_mod_revision(value);
  _impl_._has_bits_[0] |= 0x00000040u;
  // @@protoc_insertion_point(field_set:etcdserverpb.RangeRequest.min_mod_revision)
}
inline ::int64_t RangeRequest::_internal_min_mod_revision() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.min_mod_revision_;
}
inline void RangeRequest::_internal_set_min_mod_revision(::int64_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.min_mod_revision_ = value;
}

// int64 max_mod_revision = 11 [(.versionpb.etcd_version_field) = "3.1"];
inline void RangeRequest::clear_max_mod_revision() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.max_mod_revision_ = ::int64_t{0};
  _impl_._has_bits_[0] &= ~0x00000080u;
}
inline ::int64_t RangeRequest::max_mod_revision() const {
  // @@protoc_insertion_point(field_get:etcdserverpb.RangeRequest.max_mod_revision)
  return _internal_max_mod_revision();
}
inline void RangeRequest::set_max_mod_revision(::int64_t value) {
  _internal_set_max_mod_revision(value);
  _impl_._has_bits_[0] |= 0x00000080u;
  // @@protoc_insertion_point(field_set:etcdserverpb.RangeRequest.max_mod_revision)
}
inline ::int64_t RangeRequest::_internal_max_mod_revision() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.max_mod_revision_;
}
inline void RangeRequest::_internal_set_max_mod_revision(::int64_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.max_mod_revision_ = value;
}

// int64 min_create_revision = 12 [(.versionpb.etcd_version_field) = "3.1"];
inline void RangeRequest::clear_min_create_revision() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.min_create_revision_ = ::int64_t{0};
  _impl_._has_bits_[0] &= ~0x00000100u;
}
inline ::int64_t RangeRequest::min_create_revision() const {
  // @@protoc_insertion_point(field_get:etcdserverpb.RangeRequest.min_create_revision)
  return _internal_min_create_revision();
}
inline void RangeRequest::set_min_create_revision(::int64_t value) {
  _internal_set_min_create_revision(value);
  _impl_._has_bits_[0] |= 0x00000100u;
  // @@protoc_insertion_point(field_set:etcdserverpb.RangeRequest.min_create_revision)
}
inline ::int64_t RangeRequest::_internal_min_create_revision() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.min_create_revision_;
}
inline void RangeRequest::_internal_set_min_create_revision(::int64_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.min_create_revision_ = value;
}

// int64 max_create_revision = 13 [(.versionpb.etcd_version_field) = "3.1"];
inline void RangeRequest::clear_max_create_revision() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.max_create_revision_ = ::int64_t{0};
  _impl_._has_bits_[0] &= ~0x00000200u;
}
inline ::int64_t RangeRequest::max_create_revision() const {
  // @@protoc_insertion_point(field_get:etcdserverpb.RangeRequest.max_create_revision)
  return _internal_max_create_revision();
}
inline void RangeRequest::set_max_create_revision(::int64_t value) {
  _internal_set_max_create_revision(value);
  _impl_._has_bits_[0] |= 0x00000200u;
  // @@protoc_insertion_point(field_set:etcdserverpb.RangeRequest.max_create_revision)
}
inline ::int64_t RangeRequest::_internal_max_create_revision() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.max_create_revision_;
}
inline void RangeRequest::_internal_set_max_create_revision(::int64_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.max_create_revision_ = value;
}

// -------------------------------------------------------------------

// RangeResponse

// .etcdserverpb.ResponseHeader header = 1;
inline bool RangeResponse::has_header() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.header_ != nullptr);
  return value;
}
inline void RangeResponse::clear_header() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.header_ != nullptr) _impl_.header_->Clear();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
inline const ::etcdserverpb::ResponseHeader& RangeResponse::_internal_header() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  const ::etcdserverpb::ResponseHeader* p = _impl_.header_;
  return p != nullptr ? *p : reinterpret_cast<const ::etcdserverpb::ResponseHeader&>(::etcdserverpb::_ResponseHeader_default_instance_);
}
inline const ::etcdserverpb::ResponseHeader& RangeResponse::header() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:etcdserverpb.RangeResponse.header)
  return _internal_header();
}
inline void RangeResponse::unsafe_arena_set_allocated_header(
    ::etcdserverpb::ResponseHeader* PROTOBUF_NULLABLE value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.header_);
  }
  _impl_.header_ = reinterpret_cast<::etcdserverpb::ResponseHeader*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:etcdserverpb.RangeResponse.header)
}
inline ::etcdserverpb::ResponseHeader* PROTOBUF_NULLABLE RangeResponse::release_header() {
  ::google::protobuf::internal::TSanWrite(&_impl_);

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::etcdserverpb::ResponseHeader* released = _impl_.header_;
  _impl_.header_ = nullptr;
  if (::google::protobuf::internal::DebugHardenForceCopyInRelease()) {
    auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    if (GetArena() == nullptr) {
      delete old;
    }
  } else {
    if (GetArena() != nullptr) {
      released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    }
  }
  return released;
}
inline ::etcdserverpb::ResponseHeader* PROTOBUF_NULLABLE RangeResponse::unsafe_arena_release_header() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:etcdserverpb.RangeResponse.header)

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::etcdserverpb::ResponseHeader* temp = _impl_.header_;
  _impl_.header_ = nullptr;
  return temp;
}
inline ::etcdserverpb::ResponseHeader* PROTOBUF_NONNULL RangeResponse::_internal_mutable_header() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.header_ == nullptr) {
    auto* p = ::google::protobuf::Message::DefaultConstruct<::etcdserverpb::ResponseHeader>(GetArena());
    _impl_.header_ = reinterpret_cast<::etcdserverpb::ResponseHeader*>(p);
  }
  return _impl_.header_;
}
inline ::etcdserverpb::ResponseHeader* PROTOBUF_NONNULL RangeResponse::mutable_header()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  _impl_._has_bits_[0] |= 0x00000001u;
  ::etcdserverpb::ResponseHeader* _msg = _internal_mutable_header();
  // @@protoc_insertion_point(field_mutable:etcdserverpb.RangeResponse.header)
  return _msg;
}
inline void RangeResponse::set_allocated_header(::etcdserverpb::ResponseHeader* PROTOBUF_NULLABLE value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (message_arena == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.header_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = value->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }

  _impl_.header_ = reinterpret_cast<::etcdserverpb::ResponseHeader*>(value);
  // @@protoc_insertion_point(field_set_allocated:etcdserverpb.RangeResponse.header)
}

// repeated .mvccpb.KeyValue kvs = 2;
inline int RangeResponse::_internal_kvs_size() const {
  return _internal_kvs().size();
}
inline int RangeResponse::kvs_size() const {
  return _internal_kvs_size();
}
inline ::mvccpb::KeyValue* PROTOBUF_NONNULL RangeResponse::mutable_kvs(int index)
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable:etcdserverpb.RangeResponse.kvs)
  return _internal_mutable_kvs()->Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField<::mvccpb::KeyValue>* PROTOBUF_NONNULL RangeResponse::mutable_kvs()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable_list:etcdserverpb.RangeResponse.kvs)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _internal_mutable_kvs();
}
inline const ::mvccpb::KeyValue& RangeResponse::kvs(int index) const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:etcdserverpb.RangeResponse.kvs)
  return _internal_kvs().Get(index);
}
inline ::mvccpb::KeyValue* PROTOBUF_NONNULL RangeResponse::add_kvs()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::mvccpb::KeyValue* _add = _internal_mutable_kvs()->Add();
  // @@protoc_insertion_point(field_add:etcdserverpb.RangeResponse.kvs)
  return _add;
}
inline const ::google::protobuf::RepeatedPtrField<::mvccpb::KeyValue>& RangeResponse::kvs() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_list:etcdserverpb.RangeResponse.kvs)
  return _internal_kvs();
}
inline const ::google::protobuf::RepeatedPtrField<::mvccpb::KeyValue>&
RangeResponse::_internal_kvs() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.kvs_;
}
inline ::google::protobuf::RepeatedPtrField<::mvccpb::KeyValue>* PROTOBUF_NONNULL
RangeResponse::_internal_mutable_kvs() {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return &_impl_.kvs_;
}

// bool more = 3;
inline void RangeResponse::clear_more() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.more_ = false;
  _impl_._has_bits_[0] &= ~0x00000004u;
}
inline bool RangeResponse::more() const {
  // @@protoc_insertion_point(field_get:etcdserverpb.RangeResponse.more)
  return _internal_more();
}
inline void RangeResponse::set_more(bool value) {
  _internal_set_more(value);
  _impl_._has_bits_[0] |= 0x00000004u;
  // @@protoc_insertion_point(field_set:etcdserverpb.RangeResponse.more)
}
inline bool RangeResponse::_internal_more() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.more_;
}
inline void RangeResponse::_internal_set_more(bool value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.more_ = value;
}

// int64 count = 4;
inline void RangeResponse::clear_count() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.count_ = ::int64_t{0};
  _impl_._has_bits_[0] &= ~0x00000002u;
}
inline ::int64_t RangeResponse::count() const {
  // @@protoc_insertion_point(field_get:etcdserverpb.RangeResponse.count)
  return _internal_count();
}
inline void RangeResponse::set_count(::int64_t value) {
  _internal_set_count(value);
  _impl_._has_bits_[0] |= 0x00000002u;
  // @@protoc_insertion_point(field_set:etcdserverpb.RangeResponse.count)
}
inline ::int64_t RangeResponse::_internal_count() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.count_;
}
inline void RangeResponse::_internal_set_count(::int64_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.count_ = value;
}

// -------------------------------------------------------------------

// PutRequest

// bytes key = 1;
inline void PutRequest::clear_key() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.key_.ClearToEmpty();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
inline const ::std::string& PutRequest::key() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:etcdserverpb.PutRequest.key)
  return _internal_key();
}
template <typename Arg_, typename... Args_>
PROTOBUF_ALWAYS_INLINE void PutRequest::set_key(Arg_&& arg, Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000001u;
  _impl_.key_.SetBytes(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:etcdserverpb.PutRequest.key)
}
inline ::std::string* PROTOBUF_NONNULL PutRequest::mutable_key()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::std::string* _s = _internal_mutable_key();
  // @@protoc_insertion_point(field_mutable:etcdserverpb.PutRequest.key)
  return _s;
}
inline const ::std::string& PutRequest::_internal_key() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.key_.Get();
}
inline void PutRequest::_internal_set_key(const ::std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000001u;
  _impl_.key_.Set(value, GetArena());
}
inline ::std::string* PROTOBUF_NONNULL PutRequest::_internal_mutable_key() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000001u;
  return _impl_.key_.Mutable( GetArena());
}
inline ::std::string* PROTOBUF_NULLABLE PutRequest::release_key() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:etcdserverpb.PutRequest.key)
  if ((_impl_._has_bits_[0] & 0x00000001u) == 0) {
    return nullptr;
  }
  _impl_._has_bits_[0] &= ~0x00000001u;
  auto* released = _impl_.key_.Release();
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString()) {
    _impl_.key_.Set("", GetArena());
  }
  return released;
}
inline void PutRequest::set_allocated_key(::std::string* PROTOBUF_NULLABLE value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  _impl_.key_.SetAllocated(value, GetArena());
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString() && _impl_.key_.IsDefault()) {
    _impl_.key_.Set("", GetArena());
  }
  // @@protoc_insertion_point(field_set_allocated:etcdserverpb.PutRequest.key)
}

// bytes value = 2;
inline void PutRequest::clear_value() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.value_.ClearToEmpty();
  _impl_._has_bits_[0] &= ~0x00000002u;
}
inline const ::std::string& PutRequest::value() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:etcdserverpb.PutRequest.value)
  return _internal_value();
}
template <typename Arg_, typename... Args_>
PROTOBUF_ALWAYS_INLINE void PutRequest::set_value(Arg_&& arg, Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000002u;
  _impl_.value_.SetBytes(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:etcdserverpb.PutRequest.value)
}
inline ::std::string* PROTOBUF_NONNULL PutRequest::mutable_value()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::std::string* _s = _internal_mutable_value();
  // @@protoc_insertion_point(field_mutable:etcdserverpb.PutRequest.value)
  return _s;
}
inline const ::std::string& PutRequest::_internal_value() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.value_.Get();
}
inline void PutRequest::_internal_set_value(const ::std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000002u;
  _impl_.value_.Set(value, GetArena());
}
inline ::std::string* PROTOBUF_NONNULL PutRequest::_internal_mutable_value() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000002u;
  return _impl_.value_.Mutable( GetArena());
}
inline ::std::string* PROTOBUF_NULLABLE PutRequest::release_value() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:etcdserverpb.PutRequest.value)
  if ((_impl_._has_bits_[0] & 0x00000002u) == 0) {
    return nullptr;
  }
  _impl_._has_bits_[0] &= ~0x00000002u;
  auto* released = _impl_.value_.Release();
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString()) {
    _impl_.value_.Set("", GetArena());
  }
  return released;
}
inline void PutRequest::set_allocated_value(::std::string* PROTOBUF_NULLABLE value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000002u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000002u;
  }
  _impl_.value_.SetAllocated(value, GetArena());
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString() && _impl_.value_.IsDefault()) {
    _impl_.value_.Set("", GetArena());
  }
  // @@protoc_insertion_point(field_set_allocated:etcdserverpb.PutRequest.value)
}

// int64 lease = 3;
inline void PutRequest::clear_lease() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.lease_ = ::int64_t{0};
  _impl_._has_bits_[0] &= ~0x00000004u;
}
inline ::int64_t PutRequest::lease() const {
  // @@protoc_insertion_point(field_get:etcdserverpb.PutRequest.lease)
  return _internal_lease();
}
inline void PutRequest::set_lease(::int64_t value) {
  _internal_set_lease(value);
  _impl_._has_bits_[0] |= 0x00000004u;
  // @@protoc_insertion_point(field_set:etcdserverpb.PutRequest.lease)
}
inline ::int64_t PutRequest::_internal_lease() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.lease_;
}
inline void PutRequest::_internal_set_lease(::int64_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.lease_ = value;
}

// bool prev_kv = 4 [(.versionpb.etcd_version_field) = "3.1"];
inline void PutRequest::clear_prev_kv() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.prev_kv_ = false;
  _impl_._has_bits_[0] &= ~0x00000008u;
}
inline bool PutRequest::prev_kv() const {
  // @@protoc_insertion_point(field_get:etcdserverpb.PutRequest.prev_kv)
  return _internal_prev_kv();
}
inline void PutRequest::set_prev_kv(bool value) {
  _internal_set_prev_kv(value);
  _impl_._has_bits_[0] |= 0x00000008u;
  // @@protoc_insertion_point(field_set:etcdserverpb.PutRequest.prev_kv)
}
inline bool PutRequest::_internal_prev_kv() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.prev_kv_;
}
inline void PutRequest::_internal_set_prev_kv(bool value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.prev_kv_ = value;
}

// bool ignore_value = 5 [(.versionpb.etcd_version_field) = "3.2"];
inline void PutRequest::clear_ignore_value() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.ignore_value_ = false;
  _impl_._has_bits_[0] &= ~0x00000010u;
}
inline bool PutRequest::ignore_value() const {
  // @@protoc_insertion_point(field_get:etcdserverpb.PutRequest.ignore_value)
  return _internal_ignore_value();
}
inline void PutRequest::set_ignore_value(bool value) {
  _internal_set_ignore_value(value);
  _impl_._has_bits_[0] |= 0x00000010u;
  // @@protoc_insertion_point(field_set:etcdserverpb.PutRequest.ignore_value)
}
inline bool PutRequest::_internal_ignore_value() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.ignore_value_;
}
inline void PutRequest::_internal_set_ignore_value(bool value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.ignore_value_ = value;
}

// bool ignore_lease = 6 [(.versionpb.etcd_version_field) = "3.2"];
inline void PutRequest::clear_ignore_lease() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.ignore_lease_ = false;
  _impl_._has_bits_[0] &= ~0x00000020u;
}
inline bool PutRequest::ignore_lease() const {
  // @@protoc_insertion_point(field_get:etcdserverpb.PutRequest.ignore_lease)
  return _internal_ignore_lease();
}
inline void PutRequest::set_ignore_lease(bool value) {
  _internal_set_ignore_lease(value);
  _impl_._has_bits_[0] |= 0x00000020u;
  // @@protoc_insertion_point(field_set:etcdserverpb.PutRequest.ignore_lease)
}
inline bool PutRequest::_internal_ignore_lease() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.ignore_lease_;
}
inline void PutRequest::_internal_set_ignore_lease(bool value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.ignore_lease_ = value;
}

// -------------------------------------------------------------------

// PutResponse

// .etcdserverpb.ResponseHeader header = 1;
inline bool PutResponse::has_header() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.header_ != nullptr);
  return value;
}
inline void PutResponse::clear_header() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.header_ != nullptr) _impl_.header_->Clear();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
inline const ::etcdserverpb::ResponseHeader& PutResponse::_internal_header() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  const ::etcdserverpb::ResponseHeader* p = _impl_.header_;
  return p != nullptr ? *p : reinterpret_cast<const ::etcdserverpb::ResponseHeader&>(::etcdserverpb::_ResponseHeader_default_instance_);
}
inline const ::etcdserverpb::ResponseHeader& PutResponse::header() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:etcdserverpb.PutResponse.header)
  return _internal_header();
}
inline void PutResponse::unsafe_arena_set_allocated_header(
    ::etcdserverpb::ResponseHeader* PROTOBUF_NULLABLE value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.header_);
  }
  _impl_.header_ = reinterpret_cast<::etcdserverpb::ResponseHeader*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:etcdserverpb.PutResponse.header)
}
inline ::etcdserverpb::ResponseHeader* PROTOBUF_NULLABLE PutResponse::release_header() {
  ::google::protobuf::internal::TSanWrite(&_impl_);

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::etcdserverpb::ResponseHeader* released = _impl_.header_;
  _impl_.header_ = nullptr;
  if (::google::protobuf::internal::DebugHardenForceCopyInRelease()) {
    auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    if (GetArena() == nullptr) {
      delete old;
    }
  } else {
    if (GetArena() != nullptr) {
      released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    }
  }
  return released;
}
inline ::etcdserverpb::ResponseHeader* PROTOBUF_NULLABLE PutResponse::unsafe_arena_release_header() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:etcdserverpb.PutResponse.header)

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::etcdserverpb::ResponseHeader* temp = _impl_.header_;
  _impl_.header_ = nullptr;
  return temp;
}
inline ::etcdserverpb::ResponseHeader* PROTOBUF_NONNULL PutResponse::_internal_mutable_header() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.header_ == nullptr) {
    auto* p = ::google::protobuf::Message::DefaultConstruct<::etcdserverpb::ResponseHeader>(GetArena());
    _impl_.header_ = reinterpret_cast<::etcdserverpb::ResponseHeader*>(p);
  }
  return _impl_.header_;
}
inline ::etcdserverpb::ResponseHeader* PROTOBUF_NONNULL PutResponse::mutable_header()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  _impl_._has_bits_[0] |= 0x00000001u;
  ::etcdserverpb::ResponseHeader* _msg = _internal_mutable_header();
  // @@protoc_insertion_point(field_mutable:etcdserverpb.PutResponse.header)
  return _msg;
}
inline void PutResponse::set_allocated_header(::etcdserverpb::ResponseHeader* PROTOBUF_NULLABLE value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (message_arena == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.header_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = value->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }

  _impl_.header_ = reinterpret_cast<::etcdserverpb::ResponseHeader*>(value);
  // @@protoc_insertion_point(field_set_allocated:etcdserverpb.PutResponse.header)
}

// .mvccpb.KeyValue prev_kv = 2 [(.versionpb.etcd_version_field) = "3.1"];
inline bool PutResponse::has_prev_kv() const {
  bool value = (_impl_._has_bits_[0] & 0x00000002u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.prev_kv_ != nullptr);
  return value;
}
inline const ::mvccpb::KeyValue& PutResponse::_internal_prev_kv() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  const ::mvccpb::KeyValue* p = _impl_.prev_kv_;
  return p != nullptr ? *p : reinterpret_cast<const ::mvccpb::KeyValue&>(::mvccpb::_KeyValue_default_instance_);
}
inline const ::mvccpb::KeyValue& PutResponse::prev_kv() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:etcdserverpb.PutResponse.prev_kv)
  return _internal_prev_kv();
}
inline void PutResponse::unsafe_arena_set_allocated_prev_kv(
    ::mvccpb::KeyValue* PROTOBUF_NULLABLE value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.prev_kv_);
  }
  _impl_.prev_kv_ = reinterpret_cast<::mvccpb::KeyValue*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000002u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000002u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:etcdserverpb.PutResponse.prev_kv)
}
inline ::mvccpb::KeyValue* PROTOBUF_NULLABLE PutResponse::release_prev_kv() {
  ::google::protobuf::internal::TSanWrite(&_impl_);

  _impl_._has_bits_[0] &= ~0x00000002u;
  ::mvccpb::KeyValue* released = _impl_.prev_kv_;
  _impl_.prev_kv_ = nullptr;
  if (::google::protobuf::internal::DebugHardenForceCopyInRelease()) {
    auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    if (GetArena() == nullptr) {
      delete old;
    }
  } else {
    if (GetArena() != nullptr) {
      released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    }
  }
  return released;
}
inline ::mvccpb::KeyValue* PROTOBUF_NULLABLE PutResponse::unsafe_arena_release_prev_kv() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:etcdserverpb.PutResponse.prev_kv)

  _impl_._has_bits_[0] &= ~0x00000002u;
  ::mvccpb::KeyValue* temp = _impl_.prev_kv_;
  _impl_.prev_kv_ = nullptr;
  return temp;
}
inline ::mvccpb::KeyValue* PROTOBUF_NONNULL PutResponse::_internal_mutable_prev_kv() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.prev_kv_ == nullptr) {
    auto* p = ::google::protobuf::Message::DefaultConstruct<::mvccpb::KeyValue>(GetArena());
    _impl_.prev_kv_ = reinterpret_cast<::mvccpb::KeyValue*>(p);
  }
  return _impl_.prev_kv_;
}
inline ::mvccpb::KeyValue* PROTOBUF_NONNULL PutResponse::mutable_prev_kv()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  _impl_._has_bits_[0] |= 0x00000002u;
  ::mvccpb::KeyValue* _msg = _internal_mutable_prev_kv();
  // @@protoc_insertion_point(field_mutable:etcdserverpb.PutResponse.prev_kv)
  return _msg;
}
inline void PutResponse::set_allocated_prev_kv(::mvccpb::KeyValue* PROTOBUF_NULLABLE value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (message_arena == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.prev_kv_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = reinterpret_cast<::google::protobuf::Message*>(value)->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000002u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000002u;
  }

  _impl_.prev_kv_ = reinterpret_cast<::mvccpb::KeyValue*>(value);
  // @@protoc_insertion_point(field_set_allocated:etcdserverpb.PutResponse.prev_kv)
}

// -------------------------------------------------------------------

// DeleteRangeRequest

// bytes key = 1;
inline void DeleteRangeRequest::clear_key() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.key_.ClearToEmpty();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
inline const ::std::string& DeleteRangeRequest::key() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:etcdserverpb.DeleteRangeRequest.key)
  return _internal_key();
}
template <typename Arg_, typename... Args_>
PROTOBUF_ALWAYS_INLINE void DeleteRangeRequest::set_key(Arg_&& arg, Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000001u;
  _impl_.key_.SetBytes(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:etcdserverpb.DeleteRangeRequest.key)
}
inline ::std::string* PROTOBUF_NONNULL DeleteRangeRequest::mutable_key()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::std::string* _s = _internal_mutable_key();
  // @@protoc_insertion_point(field_mutable:etcdserverpb.DeleteRangeRequest.key)
  return _s;
}
inline const ::std::string& DeleteRangeRequest::_internal_key() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.key_.Get();
}
inline void DeleteRangeRequest::_internal_set_key(const ::std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000001u;
  _impl_.key_.Set(value, GetArena());
}
inline ::std::string* PROTOBUF_NONNULL DeleteRangeRequest::_internal_mutable_key() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000001u;
  return _impl_.key_.Mutable( GetArena());
}
inline ::std::string* PROTOBUF_NULLABLE DeleteRangeRequest::release_key() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:etcdserverpb.DeleteRangeRequest.key)
  if ((_impl_._has_bits_[0] & 0x00000001u) == 0) {
    return nullptr;
  }
  _impl_._has_bits_[0] &= ~0x00000001u;
  auto* released = _impl_.key_.Release();
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString()) {
    _impl_.key_.Set("", GetArena());
  }
  return released;
}
inline void DeleteRangeRequest::set_allocated_key(::std::string* PROTOBUF_NULLABLE value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  _impl_.key_.SetAllocated(value, GetArena());
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString() && _impl_.key_.IsDefault()) {
    _impl_.key_.Set("", GetArena());
  }
  // @@protoc_insertion_point(field_set_allocated:etcdserverpb.DeleteRangeRequest.key)
}

// bytes range_end = 2;
inline void DeleteRangeRequest::clear_range_end() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.range_end_.ClearToEmpty();
  _impl_._has_bits_[0] &= ~0x00000002u;
}
inline const ::std::string& DeleteRangeRequest::range_end() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:etcdserverpb.DeleteRangeRequest.range_end)
  return _internal_range_end();
}
template <typename Arg_, typename... Args_>
PROTOBUF_ALWAYS_INLINE void DeleteRangeRequest::set_range_end(Arg_&& arg, Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000002u;
  _impl_.range_end_.SetBytes(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:etcdserverpb.DeleteRangeRequest.range_end)
}
inline ::std::string* PROTOBUF_NONNULL DeleteRangeRequest::mutable_range_end()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::std::string* _s = _internal_mutable_range_end();
  // @@protoc_insertion_point(field_mutable:etcdserverpb.DeleteRangeRequest.range_end)
  return _s;
}
inline const ::std::string& DeleteRangeRequest::_internal_range_end() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.range_end_.Get();
}
inline void DeleteRangeRequest::_internal_set_range_end(const ::std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000002u;
  _impl_.range_end_.Set(value, GetArena());
}
inline ::std::string* PROTOBUF_NONNULL DeleteRangeRequest::_internal_mutable_range_end() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000002u;
  return _impl_.range_end_.Mutable( GetArena());
}
inline ::std::string* PROTOBUF_NULLABLE DeleteRangeRequest::release_range_end() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:etcdserverpb.DeleteRangeRequest.range_end)
  if ((_impl_._has_bits_[0] & 0x00000002u) == 0) {
    return nullptr;
  }
  _impl_._has_bits_[0] &= ~0x00000002u;
  auto* released = _impl_.range_end_.Release();
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString()) {
    _impl_.range_end_.Set("", GetArena());
  }
  return released;
}
inline void DeleteRangeRequest::set_allocated_range_end(::std::string* PROTOBUF_NULLABLE value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000002u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000002u;
  }
  _impl_.range_end_.SetAllocated(value, GetArena());
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString() && _impl_.range_end_.IsDefault()) {
    _impl_.range_end_.Set("", GetArena());
  }
  // @@protoc_insertion_point(field_set_allocated:etcdserverpb.DeleteRangeRequest.range_end)
}

// bool prev_kv = 3 [(.versionpb.etcd_version_field) = "3.1"];
inline void DeleteRangeRequest::clear_prev_kv() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.prev_kv_ = false;
  _impl_._has_bits_[0] &= ~0x00000004u;
}
inline bool DeleteRangeRequest::prev_kv() const {
  // @@protoc_insertion_point(field_get:etcdserverpb.DeleteRangeRequest.prev_kv)
  return _internal_prev_kv();
}
inline void DeleteRangeRequest::set_prev_kv(bool value) {
  _internal_set_prev_kv(value);
  _impl_._has_bits_[0] |= 0x00000004u;
  // @@protoc_insertion_point(field_set:etcdserverpb.DeleteRangeRequest.prev_kv)
}
inline bool DeleteRangeRequest::_internal_prev_kv() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.prev_kv_;
}
inline void DeleteRangeRequest::_internal_set_prev_kv(bool value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.prev_kv_ = value;
}

// -------------------------------------------------------------------

// DeleteRangeResponse

// .etcdserverpb.ResponseHeader header = 1;
inline bool DeleteRangeResponse::has_header() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.header_ != nullptr);
  return value;
}
inline void DeleteRangeResponse::clear_header() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.header_ != nullptr) _impl_.header_->Clear();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
inline const ::etcdserverpb::ResponseHeader& DeleteRangeResponse::_internal_header() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  const ::etcdserverpb::ResponseHeader* p = _impl_.header_;
  return p != nullptr ? *p : reinterpret_cast<const ::etcdserverpb::ResponseHeader&>(::etcdserverpb::_ResponseHeader_default_instance_);
}
inline const ::etcdserverpb::ResponseHeader& DeleteRangeResponse::header() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:etcdserverpb.DeleteRangeResponse.header)
  return _internal_header();
}
inline void DeleteRangeResponse::unsafe_arena_set_allocated_header(
    ::etcdserverpb::ResponseHeader* PROTOBUF_NULLABLE value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.header_);
  }
  _impl_.header_ = reinterpret_cast<::etcdserverpb::ResponseHeader*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:etcdserverpb.DeleteRangeResponse.header)
}
inline ::etcdserverpb::ResponseHeader* PROTOBUF_NULLABLE DeleteRangeResponse::release_header() {
  ::google::protobuf::internal::TSanWrite(&_impl_);

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::etcdserverpb::ResponseHeader* released = _impl_.header_;
  _impl_.header_ = nullptr;
  if (::google::protobuf::internal::DebugHardenForceCopyInRelease()) {
    auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    if (GetArena() == nullptr) {
      delete old;
    }
  } else {
    if (GetArena() != nullptr) {
      released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    }
  }
  return released;
}
inline ::etcdserverpb::ResponseHeader* PROTOBUF_NULLABLE DeleteRangeResponse::unsafe_arena_release_header() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:etcdserverpb.DeleteRangeResponse.header)

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::etcdserverpb::ResponseHeader* temp = _impl_.header_;
  _impl_.header_ = nullptr;
  return temp;
}
inline ::etcdserverpb::ResponseHeader* PROTOBUF_NONNULL DeleteRangeResponse::_internal_mutable_header() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.header_ == nullptr) {
    auto* p = ::google::protobuf::Message::DefaultConstruct<::etcdserverpb::ResponseHeader>(GetArena());
    _impl_.header_ = reinterpret_cast<::etcdserverpb::ResponseHeader*>(p);
  }
  return _impl_.header_;
}
inline ::etcdserverpb::ResponseHeader* PROTOBUF_NONNULL DeleteRangeResponse::mutable_header()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  _impl_._has_bits_[0] |= 0x00000001u;
  ::etcdserverpb::ResponseHeader* _msg = _internal_mutable_header();
  // @@protoc_insertion_point(field_mutable:etcdserverpb.DeleteRangeResponse.header)
  return _msg;
}
inline void DeleteRangeResponse::set_allocated_header(::etcdserverpb::ResponseHeader* PROTOBUF_NULLABLE value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (message_arena == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.header_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = value->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }

  _impl_.header_ = reinterpret_cast<::etcdserverpb::ResponseHeader*>(value);
  // @@protoc_insertion_point(field_set_allocated:etcdserverpb.DeleteRangeResponse.header)
}

// int64 deleted = 2;
inline void DeleteRangeResponse::clear_deleted() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.deleted_ = ::int64_t{0};
  _impl_._has_bits_[0] &= ~0x00000002u;
}
inline ::int64_t DeleteRangeResponse::deleted() const {
  // @@protoc_insertion_point(field_get:etcdserverpb.DeleteRangeResponse.deleted)
  return _internal_deleted();
}
inline void DeleteRangeResponse::set_deleted(::int64_t value) {
  _internal_set_deleted(value);
  _impl_._has_bits_[0] |= 0x00000002u;
  // @@protoc_insertion_point(field_set:etcdserverpb.DeleteRangeResponse.deleted)
}
inline ::int64_t DeleteRangeResponse::_internal_deleted() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.deleted_;
}
inline void DeleteRangeResponse::_internal_set_deleted(::int64_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.deleted_ = value;
}

// repeated .mvccpb.KeyValue prev_kvs = 3 [(.versionpb.etcd_version_field) = "3.1"];
inline int DeleteRangeResponse::_internal_prev_kvs_size() const {
  return _internal_prev_kvs().size();
}
inline int DeleteRangeResponse::prev_kvs_size() const {
  return _internal_prev_kvs_size();
}
inline ::mvccpb::KeyValue* PROTOBUF_NONNULL DeleteRangeResponse::mutable_prev_kvs(int index)
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable:etcdserverpb.DeleteRangeResponse.prev_kvs)
  return _internal_mutable_prev_kvs()->Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField<::mvccpb::KeyValue>* PROTOBUF_NONNULL DeleteRangeResponse::mutable_prev_kvs()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable_list:etcdserverpb.DeleteRangeResponse.prev_kvs)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _internal_mutable_prev_kvs();
}
inline const ::mvccpb::KeyValue& DeleteRangeResponse::prev_kvs(int index) const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:etcdserverpb.DeleteRangeResponse.prev_kvs)
  return _internal_prev_kvs().Get(index);
}
inline ::mvccpb::KeyValue* PROTOBUF_NONNULL DeleteRangeResponse::add_prev_kvs()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::mvccpb::KeyValue* _add = _internal_mutable_prev_kvs()->Add();
  // @@protoc_insertion_point(field_add:etcdserverpb.DeleteRangeResponse.prev_kvs)
  return _add;
}
inline const ::google::protobuf::RepeatedPtrField<::mvccpb::KeyValue>& DeleteRangeResponse::prev_kvs() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_list:etcdserverpb.DeleteRangeResponse.prev_kvs)
  return _internal_prev_kvs();
}
inline const ::google::protobuf::RepeatedPtrField<::mvccpb::KeyValue>&
DeleteRangeResponse::_internal_prev_kvs() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.prev_kvs_;
}
inline ::google::protobuf::RepeatedPtrField<::mvccpb::KeyValue>* PROTOBUF_NONNULL
DeleteRangeResponse::_internal_mutable_prev_kvs() {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return &_impl_.prev_kvs_;
}

// -------------------------------------------------------------------

// RequestOp

// .etcdserverpb.RangeRequest request_range = 1;
inline bool RequestOp::has_request_range() const {
  return request_case() == kRequestRange;
}
inline bool RequestOp::_internal_has_request_range() const {
  return request_case() == kRequestRange;
}
inline void RequestOp::set_has_request_range() {
  _impl_._oneof_case_[0] = kRequestRange;
}
inline void RequestOp::clear_request_range() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (request_case() == kRequestRange) {
    if (GetArena() == nullptr) {
      delete _impl_.request_.request_range_;
    } else if (::google::protobuf::internal::DebugHardenClearOneofMessageOnArena()) {
      ::google::protobuf::internal::MaybePoisonAfterClear(_impl_.request_.request_range_);
    }
    clear_has_request();
  }
}
inline ::etcdserverpb::RangeRequest* PROTOBUF_NULLABLE RequestOp::release_request_range() {
  // @@protoc_insertion_point(field_release:etcdserverpb.RequestOp.request_range)
  if (request_case() == kRequestRange) {
    clear_has_request();
    auto* temp = reinterpret_cast<::etcdserverpb::RangeRequest*>(_impl_.request_.request_range_);
    if (GetArena() != nullptr) {
      temp = ::google::protobuf::internal::DuplicateIfNonNull(temp);
    }
    _impl_.request_.request_range_ = nullptr;
    return temp;
  } else {
    return nullptr;
  }
}
inline const ::etcdserverpb::RangeRequest& RequestOp::_internal_request_range() const {
  return request_case() == kRequestRange ? *reinterpret_cast<::etcdserverpb::RangeRequest*>(_impl_.request_.request_range_) : reinterpret_cast<::etcdserverpb::RangeRequest&>(::etcdserverpb::_RangeRequest_default_instance_);
}
inline const ::etcdserverpb::RangeRequest& RequestOp::request_range() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:etcdserverpb.RequestOp.request_range)
  return _internal_request_range();
}
inline ::etcdserverpb::RangeRequest* PROTOBUF_NULLABLE RequestOp::unsafe_arena_release_request_range() {
  // @@protoc_insertion_point(field_unsafe_arena_release:etcdserverpb.RequestOp.request_range)
  if (request_case() == kRequestRange) {
    clear_has_request();
    auto* temp = reinterpret_cast<::etcdserverpb::RangeRequest*>(_impl_.request_.request_range_);
    _impl_.request_.request_range_ = nullptr;
    return temp;
  } else {
    return nullptr;
  }
}
inline void RequestOp::unsafe_arena_set_allocated_request_range(
    ::etcdserverpb::RangeRequest* PROTOBUF_NULLABLE value) {
  // We rely on the oneof clear method to free the earlier contents
  // of this oneof. We can directly use the pointer we're given to
  // set the new value.
  clear_request();
  if (value) {
    set_has_request_range();
    _impl_.request_.request_range_ = reinterpret_cast<::google::protobuf::Message*>(value);
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:etcdserverpb.RequestOp.request_range)
}
inline ::etcdserverpb::RangeRequest* PROTOBUF_NONNULL RequestOp::_internal_mutable_request_range() {
  if (request_case() != kRequestRange) {
    clear_request();
    set_has_request_range();
    _impl_.request_.request_range_ = reinterpret_cast<::google::protobuf::Message*>(
        ::google::protobuf::Message::DefaultConstruct<::etcdserverpb::RangeRequest>(GetArena()));
  }
  return reinterpret_cast<::etcdserverpb::RangeRequest*>(_impl_.request_.request_range_);
}
inline ::etcdserverpb::RangeRequest* PROTOBUF_NONNULL RequestOp::mutable_request_range()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::etcdserverpb::RangeRequest* _msg = _internal_mutable_request_range();
  // @@protoc_insertion_point(field_mutable:etcdserverpb.RequestOp.request_range)
  return _msg;
}

// .etcdserverpb.PutRequest request_put = 2;
inline bool RequestOp::has_request_put() const {
  return request_case() == kRequestPut;
}
inline bool RequestOp::_internal_has_request_put() const {
  return request_case() == kRequestPut;
}
inline void RequestOp::set_has_request_put() {
  _impl_._oneof_case_[0] = kRequestPut;
}
inline void RequestOp::clear_request_put() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (request_case() == kRequestPut) {
    if (GetArena() == nullptr) {
      delete _impl_.request_.request_put_;
    } else if (::google::protobuf::internal::DebugHardenClearOneofMessageOnArena()) {
      ::google::protobuf::internal::MaybePoisonAfterClear(_impl_.request_.request_put_);
    }
    clear_has_request();
  }
}
inline ::etcdserverpb::PutRequest* PROTOBUF_NULLABLE RequestOp::release_request_put() {
  // @@protoc_insertion_point(field_release:etcdserverpb.RequestOp.request_put)
  if (request_case() == kRequestPut) {
    clear_has_request();
    auto* temp = reinterpret_cast<::etcdserverpb::PutRequest*>(_impl_.request_.request_put_);
    if (GetArena() != nullptr) {
      temp = ::google::protobuf::internal::DuplicateIfNonNull(temp);
    }
    _impl_.request_.request_put_ = nullptr;
    return temp;
  } else {
    return nullptr;
  }
}
inline const ::etcdserverpb::PutRequest& RequestOp::_internal_request_put() const {
  return request_case() == kRequestPut ? *reinterpret_cast<::etcdserverpb::PutRequest*>(_impl_.request_.request_put_) : reinterpret_cast<::etcdserverpb::PutRequest&>(::etcdserverpb::_PutRequest_default_instance_);
}
inline const ::etcdserverpb::PutRequest& RequestOp::request_put() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:etcdserverpb.RequestOp.request_put)
  return _internal_request_put();
}
inline ::etcdserverpb::PutRequest* PROTOBUF_NULLABLE RequestOp::unsafe_arena_release_request_put() {
  // @@protoc_insertion_point(field_unsafe_arena_release:etcdserverpb.RequestOp.request_put)
  if (request_case() == kRequestPut) {
    clear_has_request();
    auto* temp = reinterpret_cast<::etcdserverpb::PutRequest*>(_impl_.request_.request_put_);
    _impl_.request_.request_put_ = nullptr;
    return temp;
  } else {
    return nullptr;
  }
}
inline void RequestOp::unsafe_arena_set_allocated_request_put(
    ::etcdserverpb::PutRequest* PROTOBUF_NULLABLE value) {
  // We rely on the oneof clear method to free the earlier contents
  // of this oneof. We can directly use the pointer we're given to
  // set the new value.
  clear_request();
  if (value) {
    set_has_request_put();
    _impl_.request_.request_put_ = reinterpret_cast<::google::protobuf::Message*>(value);
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:etcdserverpb.RequestOp.request_put)
}
inline ::etcdserverpb::PutRequest* PROTOBUF_NONNULL RequestOp::_internal_mutable_request_put() {
  if (request_case() != kRequestPut) {
    clear_request();
    set_has_request_put();
    _impl_.request_.request_put_ = reinterpret_cast<::google::protobuf::Message*>(
        ::google::protobuf::Message::DefaultConstruct<::etcdserverpb::PutRequest>(GetArena()));
  }
  return reinterpret_cast<::etcdserverpb::PutRequest*>(_impl_.request_.request_put_);
}
inline ::etcdserverpb::PutRequest* PROTOBUF_NONNULL RequestOp::mutable_request_put()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::etcdserverpb::PutRequest* _msg = _internal_mutable_request_put();
  // @@protoc_insertion_point(field_mutable:etcdserverpb.RequestOp.request_put)
  return _msg;
}

// .etcdserverpb.DeleteRangeRequest request_delete_range = 3;
inline bool RequestOp::has_request_delete_range() const {
  return request_case() == kRequestDeleteRange;
}
inline bool RequestOp::_internal_has_request_delete_range() const {
  return request_case() == kRequestDeleteRange;
}
inline void RequestOp::set_has_request_delete_range() {
  _impl_._oneof_case_[0] = kRequestDeleteRange;
}
inline void RequestOp::clear_request_delete_range() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (request_case() == kRequestDeleteRange) {
    if (GetArena() == nullptr) {
      delete _impl_.request_.request_delete_range_;
    } else if (::google::protobuf::internal::DebugHardenClearOneofMessageOnArena()) {
      ::google::protobuf::internal::MaybePoisonAfterClear(_impl_.request_.request_delete_range_);
    }
    clear_has_request();
  }
}
inline ::etcdserverpb::DeleteRangeRequest* PROTOBUF_NULLABLE RequestOp::release_request_delete_range() {
  // @@protoc_insertion_point(field_release:etcdserverpb.RequestOp.request_delete_range)
  if (request_case() == kRequestDeleteRange) {
    clear_has_request();
    auto* temp = reinterpret_cast<::etcdserverpb::DeleteRangeRequest*>(_impl_.request_.request_delete_range_);
    if (GetArena() != nullptr) {
      temp = ::google::protobuf::internal::DuplicateIfNonNull(temp);
    }
    _impl_.request_.request_delete_range_ = nullptr;
    return temp;
  } else {
    return nullptr;
  }
}
inline const ::etcdserverpb::DeleteRangeRequest& RequestOp::_internal_request_delete_range() const {
  return request_case() == kRequestDeleteRange ? *reinterpret_cast<::etcdserverpb::DeleteRangeRequest*>(_impl_.request_.request_delete_range_) : reinterpret_cast<::etcdserverpb::DeleteRangeRequest&>(::etcdserverpb::_DeleteRangeRequest_default_instance_);
}
inline const ::etcdserverpb::DeleteRangeRequest& RequestOp::request_delete_range() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:etcdserverpb.RequestOp.request_delete_range)
  return _internal_request_delete_range();
}
inline ::etcdserverpb::DeleteRangeRequest* PROTOBUF_NULLABLE RequestOp::unsafe_arena_release_request_delete_range() {
  // @@protoc_insertion_point(field_unsafe_arena_release:etcdserverpb.RequestOp.request_delete_range)
  if (request_case() == kRequestDeleteRange) {
    clear_has_request();
    auto* temp = reinterpret_cast<::etcdserverpb::DeleteRangeRequest*>(_impl_.request_.request_delete_range_);
    _impl_.request_.request_delete_range_ = nullptr;
    return temp;
  } else {
    return nullptr;
  }
}
inline void RequestOp::unsafe_arena_set_allocated_request_delete_range(
    ::etcdserverpb::DeleteRangeRequest* PROTOBUF_NULLABLE value) {
  // We rely on the oneof clear method to free the earlier contents
  // of this oneof. We can directly use the pointer we're given to
  // set the new value.
  clear_request();
  if (value) {
    set_has_request_delete_range();
    _impl_.request_.request_delete_range_ = reinterpret_cast<::google::protobuf::Message*>(value);
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:etcdserverpb.RequestOp.request_delete_range)
}
inline ::etcdserverpb::DeleteRangeRequest* PROTOBUF_NONNULL RequestOp::_internal_mutable_request_delete_range() {
  if (request_case() != kRequestDeleteRange) {
    clear_request();
    set_has_request_delete_range();
    _impl_.request_.request_delete_range_ = reinterpret_cast<::google::protobuf::Message*>(
        ::google::protobuf::Message::DefaultConstruct<::etcdserverpb::DeleteRangeRequest>(GetArena()));
  }
  return reinterpret_cast<::etcdserverpb::DeleteRangeRequest*>(_impl_.request_.request_delete_range_);
}
inline ::etcdserverpb::DeleteRangeRequest* PROTOBUF_NONNULL RequestOp::mutable_request_delete_range()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::etcdserverpb::DeleteRangeRequest* _msg = _internal_mutable_request_delete_range();
  // @@protoc_insertion_point(field_mutable:etcdserverpb.RequestOp.request_delete_range)
  return _msg;
}

// .etcdserverpb.TxnRequest request_txn = 4 [(.versionpb.etcd_version_field) = "3.3"];
inline bool RequestOp::has_request_txn() const {
  return request_case() == kRequestTxn;
}
inline bool RequestOp::_internal_has_request_txn() const {
  return request_case() == kRequestTxn;
}
inline void RequestOp::set_has_request_txn() {
  _impl_._oneof_case_[0] = kRequestTxn;
}
inline void RequestOp::clear_request_txn() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (request_case() == kRequestTxn) {
    if (GetArena() == nullptr) {
      delete _impl_.request_.request_txn_;
    } else if (::google::protobuf::internal::DebugHardenClearOneofMessageOnArena()) {
      ::google::protobuf::internal::MaybePoisonAfterClear(_impl_.request_.request_txn_);
    }
    clear_has_request();
  }
}
inline ::etcdserverpb::TxnRequest* PROTOBUF_NULLABLE RequestOp::release_request_txn() {
  // @@protoc_insertion_point(field_release:etcdserverpb.RequestOp.request_txn)
  if (request_case() == kRequestTxn) {
    clear_has_request();
    auto* temp = reinterpret_cast<::etcdserverpb::TxnRequest*>(_impl_.request_.request_txn_);
    if (GetArena() != nullptr) {
      temp = ::google::protobuf::internal::DuplicateIfNonNull(temp);
    }
    _impl_.request_.request_txn_ = nullptr;
    return temp;
  } else {
    return nullptr;
  }
}
inline const ::etcdserverpb::TxnRequest& RequestOp::_internal_request_txn() const {
  return request_case() == kRequestTxn ? *reinterpret_cast<::etcdserverpb::TxnRequest*>(_impl_.request_.request_txn_) : reinterpret_cast<::etcdserverpb::TxnRequest&>(::etcdserverpb::_TxnRequest_default_instance_);
}
inline const ::etcdserverpb::TxnRequest& RequestOp::request_txn() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:etcdserverpb.RequestOp.request_txn)
  return _internal_request_txn();
}
inline ::etcdserverpb::TxnRequest* PROTOBUF_NULLABLE RequestOp::unsafe_arena_release_request_txn() {
  // @@protoc_insertion_point(field_unsafe_arena_release:etcdserverpb.RequestOp.request_txn)
  if (request_case() == kRequestTxn) {
    clear_has_request();
    auto* temp = reinterpret_cast<::etcdserverpb::TxnRequest*>(_impl_.request_.request_txn_);
    _impl_.request_.request_txn_ = nullptr;
    return temp;
  } else {
    return nullptr;
  }
}
inline void RequestOp::unsafe_arena_set_allocated_request_txn(
    ::etcdserverpb::TxnRequest* PROTOBUF_NULLABLE value) {
  // We rely on the oneof clear method to free the earlier contents
  // of this oneof. We can directly use the pointer we're given to
  // set the new value.
  clear_request();
  if (value) {
    set_has_request_txn();
    _impl_.request_.request_txn_ = reinterpret_cast<::google::protobuf::Message*>(value);
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:etcdserverpb.RequestOp.request_txn)
}
inline ::etcdserverpb::TxnRequest* PROTOBUF_NONNULL RequestOp::_internal_mutable_request_txn() {
  if (request_case() != kRequestTxn) {
    clear_request();
    set_has_request_txn();
    _impl_.request_.request_txn_ = reinterpret_cast<::google::protobuf::Message*>(
        ::google::protobuf::Message::DefaultConstruct<::etcdserverpb::TxnRequest>(GetArena()));
  }
  return reinterpret_cast<::etcdserverpb::TxnRequest*>(_impl_.request_.request_txn_);
}
inline ::etcdserverpb::TxnRequest* PROTOBUF_NONNULL RequestOp::mutable_request_txn()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::etcdserverpb::TxnRequest* _msg = _internal_mutable_request_txn();
  // @@protoc_insertion_point(field_mutable:etcdserverpb.RequestOp.request_txn)
  return _msg;
}

inline bool RequestOp::has_request() const {
  return request_case() != REQUEST_NOT_SET;
}
inline void RequestOp::clear_has_request() {
  _impl_._oneof_case_[0] = REQUEST_NOT_SET;
}
inline RequestOp::RequestCase RequestOp::request_case() const {
  return RequestOp::RequestCase(_impl_._oneof_case_[0]);
}
// -------------------------------------------------------------------

// ResponseOp

// .etcdserverpb.RangeResponse response_range = 1;
inline bool ResponseOp::has_response_range() const {
  return response_case() == kResponseRange;
}
inline bool ResponseOp::_internal_has_response_range() const {
  return response_case() == kResponseRange;
}
inline void ResponseOp::set_has_response_range() {
  _impl_._oneof_case_[0] = kResponseRange;
}
inline void ResponseOp::clear_response_range() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (response_case() == kResponseRange) {
    if (GetArena() == nullptr) {
      delete _impl_.response_.response_range_;
    } else if (::google::protobuf::internal::DebugHardenClearOneofMessageOnArena()) {
      ::google::protobuf::internal::MaybePoisonAfterClear(_impl_.response_.response_range_);
    }
    clear_has_response();
  }
}
inline ::etcdserverpb::RangeResponse* PROTOBUF_NULLABLE ResponseOp::release_response_range() {
  // @@protoc_insertion_point(field_release:etcdserverpb.ResponseOp.response_range)
  if (response_case() == kResponseRange) {
    clear_has_response();
    auto* temp = reinterpret_cast<::etcdserverpb::RangeResponse*>(_impl_.response_.response_range_);
    if (GetArena() != nullptr) {
      temp = ::google::protobuf::internal::DuplicateIfNonNull(temp);
    }
    _impl_.response_.response_range_ = nullptr;
    return temp;
  } else {
    return nullptr;
  }
}
inline const ::etcdserverpb::RangeResponse& ResponseOp::_internal_response_range() const {
  return response_case() == kResponseRange ? *reinterpret_cast<::etcdserverpb::RangeResponse*>(_impl_.response_.response_range_) : reinterpret_cast<::etcdserverpb::RangeResponse&>(::etcdserverpb::_RangeResponse_default_instance_);
}
inline const ::etcdserverpb::RangeResponse& ResponseOp::response_range() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:etcdserverpb.ResponseOp.response_range)
  return _internal_response_range();
}
inline ::etcdserverpb::RangeResponse* PROTOBUF_NULLABLE ResponseOp::unsafe_arena_release_response_range() {
  // @@protoc_insertion_point(field_unsafe_arena_release:etcdserverpb.ResponseOp.response_range)
  if (response_case() == kResponseRange) {
    clear_has_response();
    auto* temp = reinterpret_cast<::etcdserverpb::RangeResponse*>(_impl_.response_.response_range_);
    _impl_.response_.response_range_ = nullptr;
    return temp;
  } else {
    return nullptr;
  }
}
inline void ResponseOp::unsafe_arena_set_allocated_response_range(
    ::etcdserverpb::RangeResponse* PROTOBUF_NULLABLE value) {
  // We rely on the oneof clear method to free the earlier contents
  // of this oneof. We can directly use the pointer we're given to
  // set the new value.
  clear_response();
  if (value) {
    set_has_response_range();
    _impl_.response_.response_range_ = reinterpret_cast<::google::protobuf::Message*>(value);
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:etcdserverpb.ResponseOp.response_range)
}
inline ::etcdserverpb::RangeResponse* PROTOBUF_NONNULL ResponseOp::_internal_mutable_response_range() {
  if (response_case() != kResponseRange) {
    clear_response();
    set_has_response_range();
    _impl_.response_.response_range_ = reinterpret_cast<::google::protobuf::Message*>(
        ::google::protobuf::Message::DefaultConstruct<::etcdserverpb::RangeResponse>(GetArena()));
  }
  return reinterpret_cast<::etcdserverpb::RangeResponse*>(_impl_.response_.response_range_);
}
inline ::etcdserverpb::RangeResponse* PROTOBUF_NONNULL ResponseOp::mutable_response_range()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::etcdserverpb::RangeResponse* _msg = _internal_mutable_response_range();
  // @@protoc_insertion_point(field_mutable:etcdserverpb.ResponseOp.response_range)
  return _msg;
}

// .etcdserverpb.PutResponse response_put = 2;
inline bool ResponseOp::has_response_put() const {
  return response_case() == kResponsePut;
}
inline bool ResponseOp::_internal_has_response_put() const {
  return response_case() == kResponsePut;
}
inline void ResponseOp::set_has_response_put() {
  _impl_._oneof_case_[0] = kResponsePut;
}
inline void ResponseOp::clear_response_put() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (response_case() == kResponsePut) {
    if (GetArena() == nullptr) {
      delete _impl_.response_.response_put_;
    } else if (::google::protobuf::internal::DebugHardenClearOneofMessageOnArena()) {
      ::google::protobuf::internal::MaybePoisonAfterClear(_impl_.response_.response_put_);
    }
    clear_has_response();
  }
}
inline ::etcdserverpb::PutResponse* PROTOBUF_NULLABLE ResponseOp::release_response_put() {
  // @@protoc_insertion_point(field_release:etcdserverpb.ResponseOp.response_put)
  if (response_case() == kResponsePut) {
    clear_has_response();
    auto* temp = reinterpret_cast<::etcdserverpb::PutResponse*>(_impl_.response_.response_put_);
    if (GetArena() != nullptr) {
      temp = ::google::protobuf::internal::DuplicateIfNonNull(temp);
    }
    _impl_.response_.response_put_ = nullptr;
    return temp;
  } else {
    return nullptr;
  }
}
inline const ::etcdserverpb::PutResponse& ResponseOp::_internal_response_put() const {
  return response_case() == kResponsePut ? *reinterpret_cast<::etcdserverpb::PutResponse*>(_impl_.response_.response_put_) : reinterpret_cast<::etcdserverpb::PutResponse&>(::etcdserverpb::_PutResponse_default_instance_);
}
inline const ::etcdserverpb::PutResponse& ResponseOp::response_put() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:etcdserverpb.ResponseOp.response_put)
  return _internal_response_put();
}
inline ::etcdserverpb::PutResponse* PROTOBUF_NULLABLE ResponseOp::unsafe_arena_release_response_put() {
  // @@protoc_insertion_point(field_unsafe_arena_release:etcdserverpb.ResponseOp.response_put)
  if (response_case() == kResponsePut) {
    clear_has_response();
    auto* temp = reinterpret_cast<::etcdserverpb::PutResponse*>(_impl_.response_.response_put_);
    _impl_.response_.response_put_ = nullptr;
    return temp;
  } else {
    return nullptr;
  }
}
inline void ResponseOp::unsafe_arena_set_allocated_response_put(
    ::etcdserverpb::PutResponse* PROTOBUF_NULLABLE value) {
  // We rely on the oneof clear method to free the earlier contents
  // of this oneof. We can directly use the pointer we're given to
  // set the new value.
  clear_response();
  if (value) {
    set_has_response_put();
    _impl_.response_.response_put_ = reinterpret_cast<::google::protobuf::Message*>(value);
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:etcdserverpb.ResponseOp.response_put)
}
inline ::etcdserverpb::PutResponse* PROTOBUF_NONNULL ResponseOp::_internal_mutable_response_put() {
  if (response_case() != kResponsePut) {
    clear_response();
    set_has_response_put();
    _impl_.response_.response_put_ = reinterpret_cast<::google::protobuf::Message*>(
        ::google::protobuf::Message::DefaultConstruct<::etcdserverpb::PutResponse>(GetArena()));
  }
  return reinterpret_cast<::etcdserverpb::PutResponse*>(_impl_.response_.response_put_);
}
inline ::etcdserverpb::PutResponse* PROTOBUF_NONNULL ResponseOp::mutable_response_put()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::etcdserverpb::PutResponse* _msg = _internal_mutable_response_put();
  // @@protoc_insertion_point(field_mutable:etcdserverpb.ResponseOp.response_put)
  return _msg;
}

// .etcdserverpb.DeleteRangeResponse response_delete_range = 3;
inline bool ResponseOp::has_response_delete_range() const {
  return response_case() == kResponseDeleteRange;
}
inline bool ResponseOp::_internal_has_response_delete_range() const {
  return response_case() == kResponseDeleteRange;
}
inline void ResponseOp::set_has_response_delete_range() {
  _impl_._oneof_case_[0] = kResponseDeleteRange;
}
inline void ResponseOp::clear_response_delete_range() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (response_case() == kResponseDeleteRange) {
    if (GetArena() == nullptr) {
      delete _impl_.response_.response_delete_range_;
    } else if (::google::protobuf::internal::DebugHardenClearOneofMessageOnArena()) {
      ::google::protobuf::internal::MaybePoisonAfterClear(_impl_.response_.response_delete_range_);
    }
    clear_has_response();
  }
}
inline ::etcdserverpb::DeleteRangeResponse* PROTOBUF_NULLABLE ResponseOp::release_response_delete_range() {
  // @@protoc_insertion_point(field_release:etcdserverpb.ResponseOp.response_delete_range)
  if (response_case() == kResponseDeleteRange) {
    clear_has_response();
    auto* temp = reinterpret_cast<::etcdserverpb::DeleteRangeResponse*>(_impl_.response_.response_delete_range_);
    if (GetArena() != nullptr) {
      temp = ::google::protobuf::internal::DuplicateIfNonNull(temp);
    }
    _impl_.response_.response_delete_range_ = nullptr;
    return temp;
  } else {
    return nullptr;
  }
}
inline const ::etcdserverpb::DeleteRangeResponse& ResponseOp::_internal_response_delete_range() const {
  return response_case() == kResponseDeleteRange ? *reinterpret_cast<::etcdserverpb::DeleteRangeResponse*>(_impl_.response_.response_delete_range_) : reinterpret_cast<::etcdserverpb::DeleteRangeResponse&>(::etcdserverpb::_DeleteRangeResponse_default_instance_);
}
inline const ::etcdserverpb::DeleteRangeResponse& ResponseOp::response_delete_range() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:etcdserverpb.ResponseOp.response_delete_range)
  return _internal_response_delete_range();
}
inline ::etcdserverpb::DeleteRangeResponse* PROTOBUF_NULLABLE ResponseOp::unsafe_arena_release_response_delete_range() {
  // @@protoc_insertion_point(field_unsafe_arena_release:etcdserverpb.ResponseOp.response_delete_range)
  if (response_case() == kResponseDeleteRange) {
    clear_has_response();
    auto* temp = reinterpret_cast<::etcdserverpb::DeleteRangeResponse*>(_impl_.response_.response_delete_range_);
    _impl_.response_.response_delete_range_ = nullptr;
    return temp;
  } else {
    return nullptr;
  }
}
inline void ResponseOp::unsafe_arena_set_allocated_response_delete_range(
    ::etcdserverpb::DeleteRangeResponse* PROTOBUF_NULLABLE value) {
  // We rely on the oneof clear method to free the earlier contents
  // of this oneof. We can directly use the pointer we're given to
  // set the new value.
  clear_response();
  if (value) {
    set_has_response_delete_range();
    _impl_.response_.response_delete_range_ = reinterpret_cast<::google::protobuf::Message*>(value);
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:etcdserverpb.ResponseOp.response_delete_range)
}
inline ::etcdserverpb::DeleteRangeResponse* PROTOBUF_NONNULL ResponseOp::_internal_mutable_response_delete_range() {
  if (response_case() != kResponseDeleteRange) {
    clear_response();
    set_has_response_delete_range();
    _impl_.response_.response_delete_range_ = reinterpret_cast<::google::protobuf::Message*>(
        ::google::protobuf::Message::DefaultConstruct<::etcdserverpb::DeleteRangeResponse>(GetArena()));
  }
  return reinterpret_cast<::etcdserverpb::DeleteRangeResponse*>(_impl_.response_.response_delete_range_);
}
inline ::etcdserverpb::DeleteRangeResponse* PROTOBUF_NONNULL ResponseOp::mutable_response_delete_range()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::etcdserverpb::DeleteRangeResponse* _msg = _internal_mutable_response_delete_range();
  // @@protoc_insertion_point(field_mutable:etcdserverpb.ResponseOp.response_delete_range)
  return _msg;
}

// .etcdserverpb.TxnResponse response_txn = 4 [(.versionpb.etcd_version_field) = "3.3"];
inline bool ResponseOp::has_response_txn() const {
  return response_case() == kResponseTxn;
}
inline bool ResponseOp::_internal_has_response_txn() const {
  return response_case() == kResponseTxn;
}
inline void ResponseOp::set_has_response_txn() {
  _impl_._oneof_case_[0] = kResponseTxn;
}
inline void ResponseOp::clear_response_txn() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (response_case() == kResponseTxn) {
    if (GetArena() == nullptr) {
      delete _impl_.response_.response_txn_;
    } else if (::google::protobuf::internal::DebugHardenClearOneofMessageOnArena()) {
      ::google::protobuf::internal::MaybePoisonAfterClear(_impl_.response_.response_txn_);
    }
    clear_has_response();
  }
}
inline ::etcdserverpb::TxnResponse* PROTOBUF_NULLABLE ResponseOp::release_response_txn() {
  // @@protoc_insertion_point(field_release:etcdserverpb.ResponseOp.response_txn)
  if (response_case() == kResponseTxn) {
    clear_has_response();
    auto* temp = reinterpret_cast<::etcdserverpb::TxnResponse*>(_impl_.response_.response_txn_);
    if (GetArena() != nullptr) {
      temp = ::google::protobuf::internal::DuplicateIfNonNull(temp);
    }
    _impl_.response_.response_txn_ = nullptr;
    return temp;
  } else {
    return nullptr;
  }
}
inline const ::etcdserverpb::TxnResponse& ResponseOp::_internal_response_txn() const {
  return response_case() == kResponseTxn ? *reinterpret_cast<::etcdserverpb::TxnResponse*>(_impl_.response_.response_txn_) : reinterpret_cast<::etcdserverpb::TxnResponse&>(::etcdserverpb::_TxnResponse_default_instance_);
}
inline const ::etcdserverpb::TxnResponse& ResponseOp::response_txn() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:etcdserverpb.ResponseOp.response_txn)
  return _internal_response_txn();
}
inline ::etcdserverpb::TxnResponse* PROTOBUF_NULLABLE ResponseOp::unsafe_arena_release_response_txn() {
  // @@protoc_insertion_point(field_unsafe_arena_release:etcdserverpb.ResponseOp.response_txn)
  if (response_case() == kResponseTxn) {
    clear_has_response();
    auto* temp = reinterpret_cast<::etcdserverpb::TxnResponse*>(_impl_.response_.response_txn_);
    _impl_.response_.response_txn_ = nullptr;
    return temp;
  } else {
    return nullptr;
  }
}
inline void ResponseOp::unsafe_arena_set_allocated_response_txn(
    ::etcdserverpb::TxnResponse* PROTOBUF_NULLABLE value) {
  // We rely on the oneof clear method to free the earlier contents
  // of this oneof. We can directly use the pointer we're given to
  // set the new value.
  clear_response();
  if (value) {
    set_has_response_txn();
    _impl_.response_.response_txn_ = reinterpret_cast<::google::protobuf::Message*>(value);
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:etcdserverpb.ResponseOp.response_txn)
}
inline ::etcdserverpb::TxnResponse* PROTOBUF_NONNULL ResponseOp::_internal_mutable_response_txn() {
  if (response_case() != kResponseTxn) {
    clear_response();
    set_has_response_txn();
    _impl_.response_.response_txn_ = reinterpret_cast<::google::protobuf::Message*>(
        ::google::protobuf::Message::DefaultConstruct<::etcdserverpb::TxnResponse>(GetArena()));
  }
  return reinterpret_cast<::etcdserverpb::TxnResponse*>(_impl_.response_.response_txn_);
}
inline ::etcdserverpb::TxnResponse* PROTOBUF_NONNULL ResponseOp::mutable_response_txn()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::etcdserverpb::TxnResponse* _msg = _internal_mutable_response_txn();
  // @@protoc_insertion_point(field_mutable:etcdserverpb.ResponseOp.response_txn)
  return _msg;
}

inline bool ResponseOp::has_response() const {
  return response_case() != RESPONSE_NOT_SET;
}
inline void ResponseOp::clear_has_response() {
  _impl_._oneof_case_[0] = RESPONSE_NOT_SET;
}
inline ResponseOp::ResponseCase ResponseOp::response_case() const {
  return ResponseOp::ResponseCase(_impl_._oneof_case_[0]);
}
// -------------------------------------------------------------------

// Compare

// .etcdserverpb.Compare.CompareResult result = 1;
inline void Compare::clear_result() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.result_ = 0;
  _impl_._has_bits_[0] &= ~0x00000004u;
}
inline ::etcdserverpb::Compare_CompareResult Compare::result() const {
  // @@protoc_insertion_point(field_get:etcdserverpb.Compare.result)
  return _internal_result();
}
inline void Compare::set_result(::etcdserverpb::Compare_CompareResult value) {
  _internal_set_result(value);
  _impl_._has_bits_[0] |= 0x00000004u;
  // @@protoc_insertion_point(field_set:etcdserverpb.Compare.result)
}
inline ::etcdserverpb::Compare_CompareResult Compare::_internal_result() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return static_cast<::etcdserverpb::Compare_CompareResult>(_impl_.result_);
}
inline void Compare::_internal_set_result(::etcdserverpb::Compare_CompareResult value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.result_ = value;
}

// .etcdserverpb.Compare.CompareTarget target = 2;
inline void Compare::clear_target() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.target_ = 0;
  _impl_._has_bits_[0] &= ~0x00000008u;
}
inline ::etcdserverpb::Compare_CompareTarget Compare::target() const {
  // @@protoc_insertion_point(field_get:etcdserverpb.Compare.target)
  return _internal_target();
}
inline void Compare::set_target(::etcdserverpb::Compare_CompareTarget value) {
  _internal_set_target(value);
  _impl_._has_bits_[0] |= 0x00000008u;
  // @@protoc_insertion_point(field_set:etcdserverpb.Compare.target)
}
inline ::etcdserverpb::Compare_CompareTarget Compare::_internal_target() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return static_cast<::etcdserverpb::Compare_CompareTarget>(_impl_.target_);
}
inline void Compare::_internal_set_target(::etcdserverpb::Compare_CompareTarget value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.target_ = value;
}

// bytes key = 3;
inline void Compare::clear_key() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.key_.ClearToEmpty();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
inline const ::std::string& Compare::key() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:etcdserverpb.Compare.key)
  return _internal_key();
}
template <typename Arg_, typename... Args_>
PROTOBUF_ALWAYS_INLINE void Compare::set_key(Arg_&& arg, Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000001u;
  _impl_.key_.SetBytes(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:etcdserverpb.Compare.key)
}
inline ::std::string* PROTOBUF_NONNULL Compare::mutable_key()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::std::string* _s = _internal_mutable_key();
  // @@protoc_insertion_point(field_mutable:etcdserverpb.Compare.key)
  return _s;
}
inline const ::std::string& Compare::_internal_key() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.key_.Get();
}
inline void Compare::_internal_set_key(const ::std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000001u;
  _impl_.key_.Set(value, GetArena());
}
inline ::std::string* PROTOBUF_NONNULL Compare::_internal_mutable_key() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000001u;
  return _impl_.key_.Mutable( GetArena());
}
inline ::std::string* PROTOBUF_NULLABLE Compare::release_key() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:etcdserverpb.Compare.key)
  if ((_impl_._has_bits_[0] & 0x00000001u) == 0) {
    return nullptr;
  }
  _impl_._has_bits_[0] &= ~0x00000001u;
  auto* released = _impl_.key_.Release();
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString()) {
    _impl_.key_.Set("", GetArena());
  }
  return released;
}
inline void Compare::set_allocated_key(::std::string* PROTOBUF_NULLABLE value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  _impl_.key_.SetAllocated(value, GetArena());
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString() && _impl_.key_.IsDefault()) {
    _impl_.key_.Set("", GetArena());
  }
  // @@protoc_insertion_point(field_set_allocated:etcdserverpb.Compare.key)
}

// int64 version = 4;
inline bool Compare::has_version() const {
  return target_union_case() == kVersion;
}
inline void Compare::set_has_version() {
  _impl_._oneof_case_[0] = kVersion;
}
inline void Compare::clear_version() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (target_union_case() == kVersion) {
    _impl_.target_union_.version_ = ::int64_t{0};
    clear_has_target_union();
  }
}
inline ::int64_t Compare::version() const {
  // @@protoc_insertion_point(field_get:etcdserverpb.Compare.version)
  return _internal_version();
}
inline void Compare::set_version(::int64_t value) {
  if (target_union_case() != kVersion) {
    clear_target_union();
    set_has_version();
  }
  _impl_.target_union_.version_ = value;
  // @@protoc_insertion_point(field_set:etcdserverpb.Compare.version)
}
inline ::int64_t Compare::_internal_version() const {
  if (target_union_case() == kVersion) {
    return _impl_.target_union_.version_;
  }
  return ::int64_t{0};
}

// int64 create_revision = 5;
inline bool Compare::has_create_revision() const {
  return target_union_case() == kCreateRevision;
}
inline void Compare::set_has_create_revision() {
  _impl_._oneof_case_[0] = kCreateRevision;
}
inline void Compare::clear_create_revision() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (target_union_case() == kCreateRevision) {
    _impl_.target_union_.create_revision_ = ::int64_t{0};
    clear_has_target_union();
  }
}
inline ::int64_t Compare::create_revision() const {
  // @@protoc_insertion_point(field_get:etcdserverpb.Compare.create_revision)
  return _internal_create_revision();
}
inline void Compare::set_create_revision(::int64_t value) {
  if (target_union_case() != kCreateRevision) {
    clear_target_union();
    set_has_create_revision();
  }
  _impl_.target_union_.create_revision_ = value;
  // @@protoc_insertion_point(field_set:etcdserverpb.Compare.create_revision)
}
inline ::int64_t Compare::_internal_create_revision() const {
  if (target_union_case() == kCreateRevision) {
    return _impl_.target_union_.create_revision_;
  }
  return ::int64_t{0};
}

// int64 mod_revision = 6;
inline bool Compare::has_mod_revision() const {
  return target_union_case() == kModRevision;
}
inline void Compare::set_has_mod_revision() {
  _impl_._oneof_case_[0] = kModRevision;
}
inline void Compare::clear_mod_revision() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (target_union_case() == kModRevision) {
    _impl_.target_union_.mod_revision_ = ::int64_t{0};
    clear_has_target_union();
  }
}
inline ::int64_t Compare::mod_revision() const {
  // @@protoc_insertion_point(field_get:etcdserverpb.Compare.mod_revision)
  return _internal_mod_revision();
}
inline void Compare::set_mod_revision(::int64_t value) {
  if (target_union_case() != kModRevision) {
    clear_target_union();
    set_has_mod_revision();
  }
  _impl_.target_union_.mod_revision_ = value;
  // @@protoc_insertion_point(field_set:etcdserverpb.Compare.mod_revision)
}
inline ::int64_t Compare::_internal_mod_revision() const {
  if (target_union_case() == kModRevision) {
    return _impl_.target_union_.mod_revision_;
  }
  return ::int64_t{0};
}

// bytes value = 7;
inline bool Compare::has_value() const {
  return target_union_case() == kValue;
}
inline void Compare::set_has_value() {
  _impl_._oneof_case_[0] = kValue;
}
inline void Compare::clear_value() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (target_union_case() == kValue) {
    _impl_.target_union_.value_.Destroy();
    clear_has_target_union();
  }
}
inline const ::std::string& Compare::value() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:etcdserverpb.Compare.value)
  return _internal_value();
}
template <typename Arg_, typename... Args_>
PROTOBUF_ALWAYS_INLINE void Compare::set_value(Arg_&& arg, Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (target_union_case() != kValue) {
    clear_target_union();

    set_has_value();
    _impl_.target_union_.value_.InitDefault();
  }
  _impl_.target_union_.value_.SetBytes(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:etcdserverpb.Compare.value)
}
inline ::std::string* PROTOBUF_NONNULL Compare::mutable_value()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::std::string* _s = _internal_mutable_value();
  // @@protoc_insertion_point(field_mutable:etcdserverpb.Compare.value)
  return _s;
}
inline const ::std::string& Compare::_internal_value() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  if (target_union_case() != kValue) {
    return ::google::protobuf::internal::GetEmptyStringAlreadyInited();
  }
  return _impl_.target_union_.value_.Get();
}
inline void Compare::_internal_set_value(const ::std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (target_union_case() != kValue) {
    clear_target_union();

    set_has_value();
    _impl_.target_union_.value_.InitDefault();
  }
  _impl_.target_union_.value_.Set(value, GetArena());
}
inline ::std::string* PROTOBUF_NONNULL Compare::_internal_mutable_value() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (target_union_case() != kValue) {
    clear_target_union();

    set_has_value();
    _impl_.target_union_.value_.InitDefault();
  }
  return _impl_.target_union_.value_.Mutable( GetArena());
}
inline ::std::string* PROTOBUF_NULLABLE Compare::release_value() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:etcdserverpb.Compare.value)
  if (target_union_case() != kValue) {
    return nullptr;
  }
  clear_has_target_union();
  return _impl_.target_union_.value_.Release();
}
inline void Compare::set_allocated_value(::std::string* PROTOBUF_NULLABLE value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (has_target_union()) {
    clear_target_union();
  }
  if (value != nullptr) {
    set_has_value();
    _impl_.target_union_.value_.InitAllocated(value, GetArena());
  }
  // @@protoc_insertion_point(field_set_allocated:etcdserverpb.Compare.value)
}

// int64 lease = 8 [(.versionpb.etcd_version_field) = "3.3"];
inline bool Compare::has_lease() const {
  return target_union_case() == kLease;
}
inline void Compare::set_has_lease() {
  _impl_._oneof_case_[0] = kLease;
}
inline void Compare::clear_lease() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (target_union_case() == kLease) {
    _impl_.target_union_.lease_ = ::int64_t{0};
    clear_has_target_union();
  }
}
inline ::int64_t Compare::lease() const {
  // @@protoc_insertion_point(field_get:etcdserverpb.Compare.lease)
  return _internal_lease();
}
inline void Compare::set_lease(::int64_t value) {
  if (target_union_case() != kLease) {
    clear_target_union();
    set_has_lease();
  }
  _impl_.target_union_.lease_ = value;
  // @@protoc_insertion_point(field_set:etcdserverpb.Compare.lease)
}
inline ::int64_t Compare::_internal_lease() const {
  if (target_union_case() == kLease) {
    return _impl_.target_union_.lease_;
  }
  return ::int64_t{0};
}

// bytes range_end = 64 [(.versionpb.etcd_version_field) = "3.3"];
inline void Compare::clear_range_end() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.range_end_.ClearToEmpty();
  _impl_._has_bits_[0] &= ~0x00000002u;
}
inline const ::std::string& Compare::range_end() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:etcdserverpb.Compare.range_end)
  return _internal_range_end();
}
template <typename Arg_, typename... Args_>
PROTOBUF_ALWAYS_INLINE void Compare::set_range_end(Arg_&& arg, Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000002u;
  _impl_.range_end_.SetBytes(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:etcdserverpb.Compare.range_end)
}
inline ::std::string* PROTOBUF_NONNULL Compare::mutable_range_end()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::std::string* _s = _internal_mutable_range_end();
  // @@protoc_insertion_point(field_mutable:etcdserverpb.Compare.range_end)
  return _s;
}
inline const ::std::string& Compare::_internal_range_end() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.range_end_.Get();
}
inline void Compare::_internal_set_range_end(const ::std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000002u;
  _impl_.range_end_.Set(value, GetArena());
}
inline ::std::string* PROTOBUF_NONNULL Compare::_internal_mutable_range_end() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000002u;
  return _impl_.range_end_.Mutable( GetArena());
}
inline ::std::string* PROTOBUF_NULLABLE Compare::release_range_end() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:etcdserverpb.Compare.range_end)
  if ((_impl_._has_bits_[0] & 0x00000002u) == 0) {
    return nullptr;
  }
  _impl_._has_bits_[0] &= ~0x00000002u;
  auto* released = _impl_.range_end_.Release();
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString()) {
    _impl_.range_end_.Set("", GetArena());
  }
  return released;
}
inline void Compare::set_allocated_range_end(::std::string* PROTOBUF_NULLABLE value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000002u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000002u;
  }
  _impl_.range_end_.SetAllocated(value, GetArena());
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString() && _impl_.range_end_.IsDefault()) {
    _impl_.range_end_.Set("", GetArena());
  }
  // @@protoc_insertion_point(field_set_allocated:etcdserverpb.Compare.range_end)
}

inline bool Compare::has_target_union() const {
  return target_union_case() != TARGET_UNION_NOT_SET;
}
inline void Compare::clear_has_target_union() {
  _impl_._oneof_case_[0] = TARGET_UNION_NOT_SET;
}
inline Compare::TargetUnionCase Compare::target_union_case() const {
  return Compare::TargetUnionCase(_impl_._oneof_case_[0]);
}
// -------------------------------------------------------------------

// TxnRequest

// repeated .etcdserverpb.Compare compare = 1;
inline int TxnRequest::_internal_compare_size() const {
  return _internal_compare().size();
}
inline int TxnRequest::compare_size() const {
  return _internal_compare_size();
}
inline void TxnRequest::clear_compare() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.compare_.Clear();
}
inline ::etcdserverpb::Compare* PROTOBUF_NONNULL TxnRequest::mutable_compare(int index)
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable:etcdserverpb.TxnRequest.compare)
  return _internal_mutable_compare()->Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField<::etcdserverpb::Compare>* PROTOBUF_NONNULL TxnRequest::mutable_compare()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable_list:etcdserverpb.TxnRequest.compare)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _internal_mutable_compare();
}
inline const ::etcdserverpb::Compare& TxnRequest::compare(int index) const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:etcdserverpb.TxnRequest.compare)
  return _internal_compare().Get(index);
}
inline ::etcdserverpb::Compare* PROTOBUF_NONNULL TxnRequest::add_compare()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::etcdserverpb::Compare* _add = _internal_mutable_compare()->Add();
  // @@protoc_insertion_point(field_add:etcdserverpb.TxnRequest.compare)
  return _add;
}
inline const ::google::protobuf::RepeatedPtrField<::etcdserverpb::Compare>& TxnRequest::compare() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_list:etcdserverpb.TxnRequest.compare)
  return _internal_compare();
}
inline const ::google::protobuf::RepeatedPtrField<::etcdserverpb::Compare>&
TxnRequest::_internal_compare() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.compare_;
}
inline ::google::protobuf::RepeatedPtrField<::etcdserverpb::Compare>* PROTOBUF_NONNULL
TxnRequest::_internal_mutable_compare() {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return &_impl_.compare_;
}

// repeated .etcdserverpb.RequestOp success = 2;
inline int TxnRequest::_internal_success_size() const {
  return _internal_success().size();
}
inline int TxnRequest::success_size() const {
  return _internal_success_size();
}
inline void TxnRequest::clear_success() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.success_.Clear();
}
inline ::etcdserverpb::RequestOp* PROTOBUF_NONNULL TxnRequest::mutable_success(int index)
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable:etcdserverpb.TxnRequest.success)
  return _internal_mutable_success()->Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField<::etcdserverpb::RequestOp>* PROTOBUF_NONNULL TxnRequest::mutable_success()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable_list:etcdserverpb.TxnRequest.success)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _internal_mutable_success();
}
inline const ::etcdserverpb::RequestOp& TxnRequest::success(int index) const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:etcdserverpb.TxnRequest.success)
  return _internal_success().Get(index);
}
inline ::etcdserverpb::RequestOp* PROTOBUF_NONNULL TxnRequest::add_success()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::etcdserverpb::RequestOp* _add = _internal_mutable_success()->Add();
  // @@protoc_insertion_point(field_add:etcdserverpb.TxnRequest.success)
  return _add;
}
inline const ::google::protobuf::RepeatedPtrField<::etcdserverpb::RequestOp>& TxnRequest::success() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_list:etcdserverpb.TxnRequest.success)
  return _internal_success();
}
inline const ::google::protobuf::RepeatedPtrField<::etcdserverpb::RequestOp>&
TxnRequest::_internal_success() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.success_;
}
inline ::google::protobuf::RepeatedPtrField<::etcdserverpb::RequestOp>* PROTOBUF_NONNULL
TxnRequest::_internal_mutable_success() {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return &_impl_.success_;
}

// repeated .etcdserverpb.RequestOp failure = 3;
inline int TxnRequest::_internal_failure_size() const {
  return _internal_failure().size();
}
inline int TxnRequest::failure_size() const {
  return _internal_failure_size();
}
inline void TxnRequest::clear_failure() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.failure_.Clear();
}
inline ::etcdserverpb::RequestOp* PROTOBUF_NONNULL TxnRequest::mutable_failure(int index)
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable:etcdserverpb.TxnRequest.failure)
  return _internal_mutable_failure()->Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField<::etcdserverpb::RequestOp>* PROTOBUF_NONNULL TxnRequest::mutable_failure()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable_list:etcdserverpb.TxnRequest.failure)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _internal_mutable_failure();
}
inline const ::etcdserverpb::RequestOp& TxnRequest::failure(int index) const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:etcdserverpb.TxnRequest.failure)
  return _internal_failure().Get(index);
}
inline ::etcdserverpb::RequestOp* PROTOBUF_NONNULL TxnRequest::add_failure()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::etcdserverpb::RequestOp* _add = _internal_mutable_failure()->Add();
  // @@protoc_insertion_point(field_add:etcdserverpb.TxnRequest.failure)
  return _add;
}
inline const ::google::protobuf::RepeatedPtrField<::etcdserverpb::RequestOp>& TxnRequest::failure() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_list:etcdserverpb.TxnRequest.failure)
  return _internal_failure();
}
inline const ::google::protobuf::RepeatedPtrField<::etcdserverpb::RequestOp>&
TxnRequest::_internal_failure() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.failure_;
}
inline ::google::protobuf::RepeatedPtrField<::etcdserverpb::RequestOp>* PROTOBUF_NONNULL
TxnRequest::_internal_mutable_failure() {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return &_impl_.failure_;
}

// -------------------------------------------------------------------

// TxnResponse

// .etcdserverpb.ResponseHeader header = 1;
inline bool TxnResponse::has_header() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.header_ != nullptr);
  return value;
}
inline void TxnResponse::clear_header() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.header_ != nullptr) _impl_.header_->Clear();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
inline const ::etcdserverpb::ResponseHeader& TxnResponse::_internal_header() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  const ::etcdserverpb::ResponseHeader* p = _impl_.header_;
  return p != nullptr ? *p : reinterpret_cast<const ::etcdserverpb::ResponseHeader&>(::etcdserverpb::_ResponseHeader_default_instance_);
}
inline const ::etcdserverpb::ResponseHeader& TxnResponse::header() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:etcdserverpb.TxnResponse.header)
  return _internal_header();
}
inline void TxnResponse::unsafe_arena_set_allocated_header(
    ::etcdserverpb::ResponseHeader* PROTOBUF_NULLABLE value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.header_);
  }
  _impl_.header_ = reinterpret_cast<::etcdserverpb::ResponseHeader*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:etcdserverpb.TxnResponse.header)
}
inline ::etcdserverpb::ResponseHeader* PROTOBUF_NULLABLE TxnResponse::release_header() {
  ::google::protobuf::internal::TSanWrite(&_impl_);

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::etcdserverpb::ResponseHeader* released = _impl_.header_;
  _impl_.header_ = nullptr;
  if (::google::protobuf::internal::DebugHardenForceCopyInRelease()) {
    auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    if (GetArena() == nullptr) {
      delete old;
    }
  } else {
    if (GetArena() != nullptr) {
      released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    }
  }
  return released;
}
inline ::etcdserverpb::ResponseHeader* PROTOBUF_NULLABLE TxnResponse::unsafe_arena_release_header() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:etcdserverpb.TxnResponse.header)

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::etcdserverpb::ResponseHeader* temp = _impl_.header_;
  _impl_.header_ = nullptr;
  return temp;
}
inline ::etcdserverpb::ResponseHeader* PROTOBUF_NONNULL TxnResponse::_internal_mutable_header() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.header_ == nullptr) {
    auto* p = ::google::protobuf::Message::DefaultConstruct<::etcdserverpb::ResponseHeader>(GetArena());
    _impl_.header_ = reinterpret_cast<::etcdserverpb::ResponseHeader*>(p);
  }
  return _impl_.header_;
}
inline ::etcdserverpb::ResponseHeader* PROTOBUF_NONNULL TxnResponse::mutable_header()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  _impl_._has_bits_[0] |= 0x00000001u;
  ::etcdserverpb::ResponseHeader* _msg = _internal_mutable_header();
  // @@protoc_insertion_point(field_mutable:etcdserverpb.TxnResponse.header)
  return _msg;
}
inline void TxnResponse::set_allocated_header(::etcdserverpb::ResponseHeader* PROTOBUF_NULLABLE value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (message_arena == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.header_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = value->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }

  _impl_.header_ = reinterpret_cast<::etcdserverpb::ResponseHeader*>(value);
  // @@protoc_insertion_point(field_set_allocated:etcdserverpb.TxnResponse.header)
}

// bool succeeded = 2;
inline void TxnResponse::clear_succeeded() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.succeeded_ = false;
  _impl_._has_bits_[0] &= ~0x00000002u;
}
inline bool TxnResponse::succeeded() const {
  // @@protoc_insertion_point(field_get:etcdserverpb.TxnResponse.succeeded)
  return _internal_succeeded();
}
inline void TxnResponse::set_succeeded(bool value) {
  _internal_set_succeeded(value);
  _impl_._has_bits_[0] |= 0x00000002u;
  // @@protoc_insertion_point(field_set:etcdserverpb.TxnResponse.succeeded)
}
inline bool TxnResponse::_internal_succeeded() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.succeeded_;
}
inline void TxnResponse::_internal_set_succeeded(bool value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.succeeded_ = value;
}

// repeated .etcdserverpb.ResponseOp responses = 3;
inline int TxnResponse::_internal_responses_size() const {
  return _internal_responses().size();
}
inline int TxnResponse::responses_size() const {
  return _internal_responses_size();
}
inline void TxnResponse::clear_responses() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.responses_.Clear();
}
inline ::etcdserverpb::ResponseOp* PROTOBUF_NONNULL TxnResponse::mutable_responses(int index)
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable:etcdserverpb.TxnResponse.responses)
  return _internal_mutable_responses()->Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField<::etcdserverpb::ResponseOp>* PROTOBUF_NONNULL TxnResponse::mutable_responses()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable_list:etcdserverpb.TxnResponse.responses)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _internal_mutable_responses();
}
inline const ::etcdserverpb::ResponseOp& TxnResponse::responses(int index) const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:etcdserverpb.TxnResponse.responses)
  return _internal_responses().Get(index);
}
inline ::etcdserverpb::ResponseOp* PROTOBUF_NONNULL TxnResponse::add_responses()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::etcdserverpb::ResponseOp* _add = _internal_mutable_responses()->Add();
  // @@protoc_insertion_point(field_add:etcdserverpb.TxnResponse.responses)
  return _add;
}
inline const ::google::protobuf::RepeatedPtrField<::etcdserverpb::ResponseOp>& TxnResponse::responses() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_list:etcdserverpb.TxnResponse.responses)
  return _internal_responses();
}
inline const ::google::protobuf::RepeatedPtrField<::etcdserverpb::ResponseOp>&
TxnResponse::_internal_responses() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.responses_;
}
inline ::google::protobuf::RepeatedPtrField<::etcdserverpb::ResponseOp>* PROTOBUF_NONNULL
TxnResponse::_internal_mutable_responses() {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return &_impl_.responses_;
}

// -------------------------------------------------------------------

// CompactionRequest

// int64 revision = 1;
inline void CompactionRequest::clear_revision() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.revision_ = ::int64_t{0};
  _impl_._has_bits_[0] &= ~0x00000001u;
}
inline ::int64_t CompactionRequest::revision() const {
  // @@protoc_insertion_point(field_get:etcdserverpb.CompactionRequest.revision)
  return _internal_revision();
}
inline void CompactionRequest::set_revision(::int64_t value) {
  _internal_set_revision(value);
  _impl_._has_bits_[0] |= 0x00000001u;
  // @@protoc_insertion_point(field_set:etcdserverpb.CompactionRequest.revision)
}
inline ::int64_t CompactionRequest::_internal_revision() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.revision_;
}
inline void CompactionRequest::_internal_set_revision(::int64_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.revision_ = value;
}

// bool physical = 2;
inline void CompactionRequest::clear_physical() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.physical_ = false;
  _impl_._has_bits_[0] &= ~0x00000002u;
}
inline bool CompactionRequest::physical() const {
  // @@protoc_insertion_point(field_get:etcdserverpb.CompactionRequest.physical)
  return _internal_physical();
}
inline void CompactionRequest::set_physical(bool value) {
  _internal_set_physical(value);
  _impl_._has_bits_[0] |= 0x00000002u;
  // @@protoc_insertion_point(field_set:etcdserverpb.CompactionRequest.physical)
}
inline bool CompactionRequest::_internal_physical() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.physical_;
}
inline void CompactionRequest::_internal_set_physical(bool value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.physical_ = value;
}

// -------------------------------------------------------------------

// CompactionResponse

// .etcdserverpb.ResponseHeader header = 1;
inline bool CompactionResponse::has_header() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.header_ != nullptr);
  return value;
}
inline void CompactionResponse::clear_header() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.header_ != nullptr) _impl_.header_->Clear();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
inline const ::etcdserverpb::ResponseHeader& CompactionResponse::_internal_header() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  const ::etcdserverpb::ResponseHeader* p = _impl_.header_;
  return p != nullptr ? *p : reinterpret_cast<const ::etcdserverpb::ResponseHeader&>(::etcdserverpb::_ResponseHeader_default_instance_);
}
inline const ::etcdserverpb::ResponseHeader& CompactionResponse::header() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:etcdserverpb.CompactionResponse.header)
  return _internal_header();
}
inline void CompactionResponse::unsafe_arena_set_allocated_header(
    ::etcdserverpb::ResponseHeader* PROTOBUF_NULLABLE value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.header_);
  }
  _impl_.header_ = reinterpret_cast<::etcdserverpb::ResponseHeader*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:etcdserverpb.CompactionResponse.header)
}
inline ::etcdserverpb::ResponseHeader* PROTOBUF_NULLABLE CompactionResponse::release_header() {
  ::google::protobuf::internal::TSanWrite(&_impl_);

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::etcdserverpb::ResponseHeader* released = _impl_.header_;
  _impl_.header_ = nullptr;
  if (::google::protobuf::internal::DebugHardenForceCopyInRelease()) {
    auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    if (GetArena() == nullptr) {
      delete old;
    }
  } else {
    if (GetArena() != nullptr) {
      released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    }
  }
  return released;
}
inline ::etcdserverpb::ResponseHeader* PROTOBUF_NULLABLE CompactionResponse::unsafe_arena_release_header() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:etcdserverpb.CompactionResponse.header)

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::etcdserverpb::ResponseHeader* temp = _impl_.header_;
  _impl_.header_ = nullptr;
  return temp;
}
inline ::etcdserverpb::ResponseHeader* PROTOBUF_NONNULL CompactionResponse::_internal_mutable_header() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.header_ == nullptr) {
    auto* p = ::google::protobuf::Message::DefaultConstruct<::etcdserverpb::ResponseHeader>(GetArena());
    _impl_.header_ = reinterpret_cast<::etcdserverpb::ResponseHeader*>(p);
  }
  return _impl_.header_;
}
inline ::etcdserverpb::ResponseHeader* PROTOBUF_NONNULL CompactionResponse::mutable_header()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  _impl_._has_bits_[0] |= 0x00000001u;
  ::etcdserverpb::ResponseHeader* _msg = _internal_mutable_header();
  // @@protoc_insertion_point(field_mutable:etcdserverpb.CompactionResponse.header)
  return _msg;
}
inline void CompactionResponse::set_allocated_header(::etcdserverpb::ResponseHeader* PROTOBUF_NULLABLE value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (message_arena == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.header_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = value->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }

  _impl_.header_ = reinterpret_cast<::etcdserverpb::ResponseHeader*>(value);
  // @@protoc_insertion_point(field_set_allocated:etcdserverpb.CompactionResponse.header)
}

// -------------------------------------------------------------------

// WatchRequest

// .etcdserverpb.WatchCreateRequest create_request = 1;
inline bool WatchRequest::has_create_request() const {
  return request_union_case() == kCreateRequest;
}
inline bool WatchRequest::_internal_has_create_request() const {
  return request_union_case() == kCreateRequest;
}
inline void WatchRequest::set_has_create_request() {
  _impl_._oneof_case_[0] = kCreateRequest;
}
inline void WatchRequest::clear_create_request() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (request_union_case() == kCreateRequest) {
    if (GetArena() == nullptr) {
      delete _impl_.request_union_.create_request_;
    } else if (::google::protobuf::internal::DebugHardenClearOneofMessageOnArena()) {
      ::google::protobuf::internal::MaybePoisonAfterClear(_impl_.request_union_.create_request_);
    }
    clear_has_request_union();
  }
}
inline ::etcdserverpb::WatchCreateRequest* PROTOBUF_NULLABLE WatchRequest::release_create_request() {
  // @@protoc_insertion_point(field_release:etcdserverpb.WatchRequest.create_request)
  if (request_union_case() == kCreateRequest) {
    clear_has_request_union();
    auto* temp = reinterpret_cast<::etcdserverpb::WatchCreateRequest*>(_impl_.request_union_.create_request_);
    if (GetArena() != nullptr) {
      temp = ::google::protobuf::internal::DuplicateIfNonNull(temp);
    }
    _impl_.request_union_.create_request_ = nullptr;
    return temp;
  } else {
    return nullptr;
  }
}
inline const ::etcdserverpb::WatchCreateRequest& WatchRequest::_internal_create_request() const {
  return request_union_case() == kCreateRequest ? *reinterpret_cast<::etcdserverpb::WatchCreateRequest*>(_impl_.request_union_.create_request_) : reinterpret_cast<::etcdserverpb::WatchCreateRequest&>(::etcdserverpb::_WatchCreateRequest_default_instance_);
}
inline const ::etcdserverpb::WatchCreateRequest& WatchRequest::create_request() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:etcdserverpb.WatchRequest.create_request)
  return _internal_create_request();
}
inline ::etcdserverpb::WatchCreateRequest* PROTOBUF_NULLABLE WatchRequest::unsafe_arena_release_create_request() {
  // @@protoc_insertion_point(field_unsafe_arena_release:etcdserverpb.WatchRequest.create_request)
  if (request_union_case() == kCreateRequest) {
    clear_has_request_union();
    auto* temp = reinterpret_cast<::etcdserverpb::WatchCreateRequest*>(_impl_.request_union_.create_request_);
    _impl_.request_union_.create_request_ = nullptr;
    return temp;
  } else {
    return nullptr;
  }
}
inline void WatchRequest::unsafe_arena_set_allocated_create_request(
    ::etcdserverpb::WatchCreateRequest* PROTOBUF_NULLABLE value) {
  // We rely on the oneof clear method to free the earlier contents
  // of this oneof. We can directly use the pointer we're given to
  // set the new value.
  clear_request_union();
  if (value) {
    set_has_create_request();
    _impl_.request_union_.create_request_ = reinterpret_cast<::google::protobuf::Message*>(value);
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:etcdserverpb.WatchRequest.create_request)
}
inline ::etcdserverpb::WatchCreateRequest* PROTOBUF_NONNULL WatchRequest::_internal_mutable_create_request() {
  if (request_union_case() != kCreateRequest) {
    clear_request_union();
    set_has_create_request();
    _impl_.request_union_.create_request_ = reinterpret_cast<::google::protobuf::Message*>(
        ::google::protobuf::Message::DefaultConstruct<::etcdserverpb::WatchCreateRequest>(GetArena()));
  }
  return reinterpret_cast<::etcdserverpb::WatchCreateRequest*>(_impl_.request_union_.create_request_);
}
inline ::etcdserverpb::WatchCreateRequest* PROTOBUF_NONNULL WatchRequest::mutable_create_request()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::etcdserverpb::WatchCreateRequest* _msg = _internal_mutable_create_request();
  // @@protoc_insertion_point(field_mutable:etcdserverpb.WatchRequest.create_request)
  return _msg;
}

// .etcdserverpb.WatchCancelRequest cancel_request = 2;
inline bool WatchRequest::has_cancel_request() const {
  return request_union_case() == kCancelRequest;
}
inline bool WatchRequest::_internal_has_cancel_request() const {
  return request_union_case() == kCancelRequest;
}
inline void WatchRequest::set_has_cancel_request() {
  _impl_._oneof_case_[0] = kCancelRequest;
}
inline void WatchRequest::clear_cancel_request() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (request_union_case() == kCancelRequest) {
    if (GetArena() == nullptr) {
      delete _impl_.request_union_.cancel_request_;
    } else if (::google::protobuf::internal::DebugHardenClearOneofMessageOnArena()) {
      ::google::protobuf::internal::MaybePoisonAfterClear(_impl_.request_union_.cancel_request_);
    }
    clear_has_request_union();
  }
}
inline ::etcdserverpb::WatchCancelRequest* PROTOBUF_NULLABLE WatchRequest::release_cancel_request() {
  // @@protoc_insertion_point(field_release:etcdserverpb.WatchRequest.cancel_request)
  if (request_union_case() == kCancelRequest) {
    clear_has_request_union();
    auto* temp = reinterpret_cast<::etcdserverpb::WatchCancelRequest*>(_impl_.request_union_.cancel_request_);
    if (GetArena() != nullptr) {
      temp = ::google::protobuf::internal::DuplicateIfNonNull(temp);
    }
    _impl_.request_union_.cancel_request_ = nullptr;
    return temp;
  } else {
    return nullptr;
  }
}
inline const ::etcdserverpb::WatchCancelRequest& WatchRequest::_internal_cancel_request() const {
  return request_union_case() == kCancelRequest ? *reinterpret_cast<::etcdserverpb::WatchCancelRequest*>(_impl_.request_union_.cancel_request_) : reinterpret_cast<::etcdserverpb::WatchCancelRequest&>(::etcdserverpb::_WatchCancelRequest_default_instance_);
}
inline const ::etcdserverpb::WatchCancelRequest& WatchRequest::cancel_request() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:etcdserverpb.WatchRequest.cancel_request)
  return _internal_cancel_request();
}
inline ::etcdserverpb::WatchCancelRequest* PROTOBUF_NULLABLE WatchRequest::unsafe_arena_release_cancel_request() {
  // @@protoc_insertion_point(field_unsafe_arena_release:etcdserverpb.WatchRequest.cancel_request)
  if (request_union_case() == kCancelRequest) {
    clear_has_request_union();
    auto* temp = reinterpret_cast<::etcdserverpb::WatchCancelRequest*>(_impl_.request_union_.cancel_request_);
    _impl_.request_union_.cancel_request_ = nullptr;
    return temp;
  } else {
    return nullptr;
  }
}
inline void WatchRequest::unsafe_arena_set_allocated_cancel_request(
    ::etcdserverpb::WatchCancelRequest* PROTOBUF_NULLABLE value) {
  // We rely on the oneof clear method to free the earlier contents
  // of this oneof. We can directly use the pointer we're given to
  // set the new value.
  clear_request_union();
  if (value) {
    set_has_cancel_request();
    _impl_.request_union_.cancel_request_ = reinterpret_cast<::google::protobuf::Message*>(value);
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:etcdserverpb.WatchRequest.cancel_request)
}
inline ::etcdserverpb::WatchCancelRequest* PROTOBUF_NONNULL WatchRequest::_internal_mutable_cancel_request() {
  if (request_union_case() != kCancelRequest) {
    clear_request_union();
    set_has_cancel_request();
    _impl_.request_union_.cancel_request_ = reinterpret_cast<::google::protobuf::Message*>(
        ::google::protobuf::Message::DefaultConstruct<::etcdserverpb::WatchCancelRequest>(GetArena()));
  }
  return reinterpret_cast<::etcdserverpb::WatchCancelRequest*>(_impl_.request_union_.cancel_request_);
}
inline ::etcdserverpb::WatchCancelRequest* PROTOBUF_NONNULL WatchRequest::mutable_cancel_request()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::etcdserverpb::WatchCancelRequest* _msg = _internal_mutable_cancel_request();
  // @@protoc_insertion_point(field_mutable:etcdserverpb.WatchRequest.cancel_request)
  return _msg;
}

// .etcdserverpb.WatchProgressRequest progress_request = 3 [(.versionpb.etcd_version_field) = "3.4"];
inline bool WatchRequest::has_progress_request() const {
  return request_union_case() == kProgressRequest;
}
inline bool WatchRequest::_internal_has_progress_request() const {
  return request_union_case() == kProgressRequest;
}
inline void WatchRequest::set_has_progress_request() {
  _impl_._oneof_case_[0] = kProgressRequest;
}
inline void WatchRequest::clear_progress_request() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (request_union_case() == kProgressRequest) {
    if (GetArena() == nullptr) {
      delete _impl_.request_union_.progress_request_;
    } else if (::google::protobuf::internal::DebugHardenClearOneofMessageOnArena()) {
      ::google::protobuf::internal::MaybePoisonAfterClear(_impl_.request_union_.progress_request_);
    }
    clear_has_request_union();
  }
}
inline ::etcdserverpb::WatchProgressRequest* PROTOBUF_NULLABLE WatchRequest::release_progress_request() {
  // @@protoc_insertion_point(field_release:etcdserverpb.WatchRequest.progress_request)
  if (request_union_case() == kProgressRequest) {
    clear_has_request_union();
    auto* temp = reinterpret_cast<::etcdserverpb::WatchProgressRequest*>(_impl_.request_union_.progress_request_);
    if (GetArena() != nullptr) {
      temp = ::google::protobuf::internal::DuplicateIfNonNull(temp);
    }
    _impl_.request_union_.progress_request_ = nullptr;
    return temp;
  } else {
    return nullptr;
  }
}
inline const ::etcdserverpb::WatchProgressRequest& WatchRequest::_internal_progress_request() const {
  return request_union_case() == kProgressRequest ? *reinterpret_cast<::etcdserverpb::WatchProgressRequest*>(_impl_.request_union_.progress_request_) : reinterpret_cast<::etcdserverpb::WatchProgressRequest&>(::etcdserverpb::_WatchProgressRequest_default_instance_);
}
inline const ::etcdserverpb::WatchProgressRequest& WatchRequest::progress_request() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:etcdserverpb.WatchRequest.progress_request)
  return _internal_progress_request();
}
inline ::etcdserverpb::WatchProgressRequest* PROTOBUF_NULLABLE WatchRequest::unsafe_arena_release_progress_request() {
  // @@protoc_insertion_point(field_unsafe_arena_release:etcdserverpb.WatchRequest.progress_request)
  if (request_union_case() == kProgressRequest) {
    clear_has_request_union();
    auto* temp = reinterpret_cast<::etcdserverpb::WatchProgressRequest*>(_impl_.request_union_.progress_request_);
    _impl_.request_union_.progress_request_ = nullptr;
    return temp;
  } else {
    return nullptr;
  }
}
inline void WatchRequest::unsafe_arena_set_allocated_progress_request(
    ::etcdserverpb::WatchProgressRequest* PROTOBUF_NULLABLE value) {
  // We rely on the oneof clear method to free the earlier contents
  // of this oneof. We can directly use the pointer we're given to
  // set the new value.
  clear_request_union();
  if (value) {
    set_has_progress_request();
    _impl_.request_union_.progress_request_ = reinterpret_cast<::google::protobuf::Message*>(value);
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:etcdserverpb.WatchRequest.progress_request)
}
inline ::etcdserverpb::WatchProgressRequest* PROTOBUF_NONNULL WatchRequest::_internal_mutable_progress_request() {
  if (request_union_case() != kProgressRequest) {
    clear_request_union();
    set_has_progress_request();
    _impl_.request_union_.progress_request_ = reinterpret_cast<::google::protobuf::Message*>(
        ::google::protobuf::Message::DefaultConstruct<::etcdserverpb::WatchProgressRequest>(GetArena()));
  }
  return reinterpret_cast<::etcdserverpb::WatchProgressRequest*>(_impl_.request_union_.progress_request_);
}
inline ::etcdserverpb::WatchProgressRequest* PROTOBUF_NONNULL WatchRequest::mutable_progress_request()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::etcdserverpb::WatchProgressRequest* _msg = _internal_mutable_progress_request();
  // @@protoc_insertion_point(field_mutable:etcdserverpb.WatchRequest.progress_request)
  return _msg;
}

inline bool WatchRequest::has_request_union() const {
  return request_union_case() != REQUEST_UNION_NOT_SET;
}
inline void WatchRequest::clear_has_request_union() {
  _impl_._oneof_case_[0] = REQUEST_UNION_NOT_SET;
}
inline WatchRequest::RequestUnionCase WatchRequest::request_union_case() const {
  return WatchRequest::RequestUnionCase(_impl_._oneof_case_[0]);
}
// -------------------------------------------------------------------

// WatchCreateRequest

// bytes key = 1;
inline void WatchCreateRequest::clear_key() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.key_.ClearToEmpty();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
inline const ::std::string& WatchCreateRequest::key() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:etcdserverpb.WatchCreateRequest.key)
  return _internal_key();
}
template <typename Arg_, typename... Args_>
PROTOBUF_ALWAYS_INLINE void WatchCreateRequest::set_key(Arg_&& arg, Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000001u;
  _impl_.key_.SetBytes(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:etcdserverpb.WatchCreateRequest.key)
}
inline ::std::string* PROTOBUF_NONNULL WatchCreateRequest::mutable_key()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::std::string* _s = _internal_mutable_key();
  // @@protoc_insertion_point(field_mutable:etcdserverpb.WatchCreateRequest.key)
  return _s;
}
inline const ::std::string& WatchCreateRequest::_internal_key() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.key_.Get();
}
inline void WatchCreateRequest::_internal_set_key(const ::std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000001u;
  _impl_.key_.Set(value, GetArena());
}
inline ::std::string* PROTOBUF_NONNULL WatchCreateRequest::_internal_mutable_key() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000001u;
  return _impl_.key_.Mutable( GetArena());
}
inline ::std::string* PROTOBUF_NULLABLE WatchCreateRequest::release_key() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:etcdserverpb.WatchCreateRequest.key)
  if ((_impl_._has_bits_[0] & 0x00000001u) == 0) {
    return nullptr;
  }
  _impl_._has_bits_[0] &= ~0x00000001u;
  auto* released = _impl_.key_.Release();
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString()) {
    _impl_.key_.Set("", GetArena());
  }
  return released;
}
inline void WatchCreateRequest::set_allocated_key(::std::string* PROTOBUF_NULLABLE value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  _impl_.key_.SetAllocated(value, GetArena());
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString() && _impl_.key_.IsDefault()) {
    _impl_.key_.Set("", GetArena());
  }
  // @@protoc_insertion_point(field_set_allocated:etcdserverpb.WatchCreateRequest.key)
}

// bytes range_end = 2;
inline void WatchCreateRequest::clear_range_end() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.range_end_.ClearToEmpty();
  _impl_._has_bits_[0] &= ~0x00000002u;
}
inline const ::std::string& WatchCreateRequest::range_end() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:etcdserverpb.WatchCreateRequest.range_end)
  return _internal_range_end();
}
template <typename Arg_, typename... Args_>
PROTOBUF_ALWAYS_INLINE void WatchCreateRequest::set_range_end(Arg_&& arg, Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000002u;
  _impl_.range_end_.SetBytes(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:etcdserverpb.WatchCreateRequest.range_end)
}
inline ::std::string* PROTOBUF_NONNULL WatchCreateRequest::mutable_range_end()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::std::string* _s = _internal_mutable_range_end();
  // @@protoc_insertion_point(field_mutable:etcdserverpb.WatchCreateRequest.range_end)
  return _s;
}
inline const ::std::string& WatchCreateRequest::_internal_range_end() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.range_end_.Get();
}
inline void WatchCreateRequest::_internal_set_range_end(const ::std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000002u;
  _impl_.range_end_.Set(value, GetArena());
}
inline ::std::string* PROTOBUF_NONNULL WatchCreateRequest::_internal_mutable_range_end() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000002u;
  return _impl_.range_end_.Mutable( GetArena());
}
inline ::std::string* PROTOBUF_NULLABLE WatchCreateRequest::release_range_end() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:etcdserverpb.WatchCreateRequest.range_end)
  if ((_impl_._has_bits_[0] & 0x00000002u) == 0) {
    return nullptr;
  }
  _impl_._has_bits_[0] &= ~0x00000002u;
  auto* released = _impl_.range_end_.Release();
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString()) {
    _impl_.range_end_.Set("", GetArena());
  }
  return released;
}
inline void WatchCreateRequest::set_allocated_range_end(::std::string* PROTOBUF_NULLABLE value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000002u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000002u;
  }
  _impl_.range_end_.SetAllocated(value, GetArena());
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString() && _impl_.range_end_.IsDefault()) {
    _impl_.range_end_.Set("", GetArena());
  }
  // @@protoc_insertion_point(field_set_allocated:etcdserverpb.WatchCreateRequest.range_end)
}

// int64 start_revision = 3;
inline void WatchCreateRequest::clear_start_revision() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.start_revision_ = ::int64_t{0};
  _impl_._has_bits_[0] &= ~0x00000004u;
}
inline ::int64_t WatchCreateRequest::start_revision() const {
  // @@protoc_insertion_point(field_get:etcdserverpb.WatchCreateRequest.start_revision)
  return _internal_start_revision();
}
inline void WatchCreateRequest::set_start_revision(::int64_t value) {
  _internal_set_start_revision(value);
  _impl_._has_bits_[0] |= 0x00000004u;
  // @@protoc_insertion_point(field_set:etcdserverpb.WatchCreateRequest.start_revision)
}
inline ::int64_t WatchCreateRequest::_internal_start_revision() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.start_revision_;
}
inline void WatchCreateRequest::_internal_set_start_revision(::int64_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.start_revision_ = value;
}

// bool progress_notify = 4;
inline void WatchCreateRequest::clear_progress_notify() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.progress_notify_ = false;
  _impl_._has_bits_[0] &= ~0x00000010u;
}
inline bool WatchCreateRequest::progress_notify() const {
  // @@protoc_insertion_point(field_get:etcdserverpb.WatchCreateRequest.progress_notify)
  return _internal_progress_notify();
}
inline void WatchCreateRequest::set_progress_notify(bool value) {
  _internal_set_progress_notify(value);
  _impl_._has_bits_[0] |= 0x00000010u;
  // @@protoc_insertion_point(field_set:etcdserverpb.WatchCreateRequest.progress_notify)
}
inline bool WatchCreateRequest::_internal_progress_notify() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.progress_notify_;
}
inline void WatchCreateRequest::_internal_set_progress_notify(bool value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.progress_notify_ = value;
}

// repeated .etcdserverpb.WatchCreateRequest.FilterType filters = 5 [(.versionpb.etcd_version_field) = "3.1"];
inline int WatchCreateRequest::_internal_filters_size() const {
  return _internal_filters().size();
}
inline int WatchCreateRequest::filters_size() const {
  return _internal_filters_size();
}
inline void WatchCreateRequest::clear_filters() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.filters_.Clear();
}
inline ::etcdserverpb::WatchCreateRequest_FilterType WatchCreateRequest::filters(int index) const {
  // @@protoc_insertion_point(field_get:etcdserverpb.WatchCreateRequest.filters)
  return static_cast<::etcdserverpb::WatchCreateRequest_FilterType>(_internal_filters().Get(index));
}
inline void WatchCreateRequest::set_filters(int index, ::etcdserverpb::WatchCreateRequest_FilterType value) {
  _internal_mutable_filters()->Set(index, value);
  // @@protoc_insertion_point(field_set:etcdserverpb.WatchCreateRequest.filters)
}
inline void WatchCreateRequest::add_filters(::etcdserverpb::WatchCreateRequest_FilterType value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _internal_mutable_filters()->Add(value);
  // @@protoc_insertion_point(field_add:etcdserverpb.WatchCreateRequest.filters)
}
inline const ::google::protobuf::RepeatedField<int>& WatchCreateRequest::filters() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_list:etcdserverpb.WatchCreateRequest.filters)
  return _internal_filters();
}
inline ::google::protobuf::RepeatedField<int>* PROTOBUF_NONNULL WatchCreateRequest::mutable_filters()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable_list:etcdserverpb.WatchCreateRequest.filters)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _internal_mutable_filters();
}
inline const ::google::protobuf::RepeatedField<int>& WatchCreateRequest::_internal_filters()
    const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.filters_;
}
inline ::google::protobuf::RepeatedField<int>* PROTOBUF_NONNULL
WatchCreateRequest::_internal_mutable_filters() {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return &_impl_.filters_;
}

// bool prev_kv = 6 [(.versionpb.etcd_version_field) = "3.1"];
inline void WatchCreateRequest::clear_prev_kv() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.prev_kv_ = false;
  _impl_._has_bits_[0] &= ~0x00000020u;
}
inline bool WatchCreateRequest::prev_kv() const {
  // @@protoc_insertion_point(field_get:etcdserverpb.WatchCreateRequest.prev_kv)
  return _internal_prev_kv();
}
inline void WatchCreateRequest::set_prev_kv(bool value) {
  _internal_set_prev_kv(value);
  _impl_._has_bits_[0] |= 0x00000020u;
  // @@protoc_insertion_point(field_set:etcdserverpb.WatchCreateRequest.prev_kv)
}
inline bool WatchCreateRequest::_internal_prev_kv() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.prev_kv_;
}
inline void WatchCreateRequest::_internal_set_prev_kv(bool value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.prev_kv_ = value;
}

// int64 watch_id = 7 [(.versionpb.etcd_version_field) = "3.4"];
inline void WatchCreateRequest::clear_watch_id() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.watch_id_ = ::int64_t{0};
  _impl_._has_bits_[0] &= ~0x00000008u;
}
inline ::int64_t WatchCreateRequest::watch_id() const {
  // @@protoc_insertion_point(field_get:etcdserverpb.WatchCreateRequest.watch_id)
  return _internal_watch_id();
}
inline void WatchCreateRequest::set_watch_id(::int64_t value) {
  _internal_set_watch_id(value);
  _impl_._has_bits_[0] |= 0x00000008u;
  // @@protoc_insertion_point(field_set:etcdserverpb.WatchCreateRequest.watch_id)
}
inline ::int64_t WatchCreateRequest::_internal_watch_id() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.watch_id_;
}
inline void WatchCreateRequest::_internal_set_watch_id(::int64_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.watch_id_ = value;
}

// bool fragment = 8 [(.versionpb.etcd_version_field) = "3.4"];
inline void WatchCreateRequest::clear_fragment() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.fragment_ = false;
  _impl_._has_bits_[0] &= ~0x00000040u;
}
inline bool WatchCreateRequest::fragment() const {
  // @@protoc_insertion_point(field_get:etcdserverpb.WatchCreateRequest.fragment)
  return _internal_fragment();
}
inline void WatchCreateRequest::set_fragment(bool value) {
  _internal_set_fragment(value);
  _impl_._has_bits_[0] |= 0x00000040u;
  // @@protoc_insertion_point(field_set:etcdserverpb.WatchCreateRequest.fragment)
}
inline bool WatchCreateRequest::_internal_fragment() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.fragment_;
}
inline void WatchCreateRequest::_internal_set_fragment(bool value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.fragment_ = value;
}

// -------------------------------------------------------------------

// WatchCancelRequest

// int64 watch_id = 1 [(.versionpb.etcd_version_field) = "3.1"];
inline void WatchCancelRequest::clear_watch_id() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.watch_id_ = ::int64_t{0};
  _impl_._has_bits_[0] &= ~0x00000001u;
}
inline ::int64_t WatchCancelRequest::watch_id() const {
  // @@protoc_insertion_point(field_get:etcdserverpb.WatchCancelRequest.watch_id)
  return _internal_watch_id();
}
inline void WatchCancelRequest::set_watch_id(::int64_t value) {
  _internal_set_watch_id(value);
  _impl_._has_bits_[0] |= 0x00000001u;
  // @@protoc_insertion_point(field_set:etcdserverpb.WatchCancelRequest.watch_id)
}
inline ::int64_t WatchCancelRequest::_internal_watch_id() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.watch_id_;
}
inline void WatchCancelRequest::_internal_set_watch_id(::int64_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.watch_id_ = value;
}

// -------------------------------------------------------------------

// WatchProgressRequest

// -------------------------------------------------------------------

// WatchResponse

// .etcdserverpb.ResponseHeader header = 1;
inline bool WatchResponse::has_header() const {
  bool value = (_impl_._has_bits_[0] & 0x00000002u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.header_ != nullptr);
  return value;
}
inline void WatchResponse::clear_header() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.header_ != nullptr) _impl_.header_->Clear();
  _impl_._has_bits_[0] &= ~0x00000002u;
}
inline const ::etcdserverpb::ResponseHeader& WatchResponse::_internal_header() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  const ::etcdserverpb::ResponseHeader* p = _impl_.header_;
  return p != nullptr ? *p : reinterpret_cast<const ::etcdserverpb::ResponseHeader&>(::etcdserverpb::_ResponseHeader_default_instance_);
}
inline const ::etcdserverpb::ResponseHeader& WatchResponse::header() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:etcdserverpb.WatchResponse.header)
  return _internal_header();
}
inline void WatchResponse::unsafe_arena_set_allocated_header(
    ::etcdserverpb::ResponseHeader* PROTOBUF_NULLABLE value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.header_);
  }
  _impl_.header_ = reinterpret_cast<::etcdserverpb::ResponseHeader*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000002u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000002u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:etcdserverpb.WatchResponse.header)
}
inline ::etcdserverpb::ResponseHeader* PROTOBUF_NULLABLE WatchResponse::release_header() {
  ::google::protobuf::internal::TSanWrite(&_impl_);

  _impl_._has_bits_[0] &= ~0x00000002u;
  ::etcdserverpb::ResponseHeader* released = _impl_.header_;
  _impl_.header_ = nullptr;
  if (::google::protobuf::internal::DebugHardenForceCopyInRelease()) {
    auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    if (GetArena() == nullptr) {
      delete old;
    }
  } else {
    if (GetArena() != nullptr) {
      released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    }
  }
  return released;
}
inline ::etcdserverpb::ResponseHeader* PROTOBUF_NULLABLE WatchResponse::unsafe_arena_release_header() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:etcdserverpb.WatchResponse.header)

  _impl_._has_bits_[0] &= ~0x00000002u;
  ::etcdserverpb::ResponseHeader* temp = _impl_.header_;
  _impl_.header_ = nullptr;
  return temp;
}
inline ::etcdserverpb::ResponseHeader* PROTOBUF_NONNULL WatchResponse::_internal_mutable_header() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.header_ == nullptr) {
    auto* p = ::google::protobuf::Message::DefaultConstruct<::etcdserverpb::ResponseHeader>(GetArena());
    _impl_.header_ = reinterpret_cast<::etcdserverpb::ResponseHeader*>(p);
  }
  return _impl_.header_;
}
inline ::etcdserverpb::ResponseHeader* PROTOBUF_NONNULL WatchResponse::mutable_header()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  _impl_._has_bits_[0] |= 0x00000002u;
  ::etcdserverpb::ResponseHeader* _msg = _internal_mutable_header();
  // @@protoc_insertion_point(field_mutable:etcdserverpb.WatchResponse.header)
  return _msg;
}
inline void WatchResponse::set_allocated_header(::etcdserverpb::ResponseHeader* PROTOBUF_NULLABLE value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (message_arena == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.header_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = value->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000002u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000002u;
  }

  _impl_.header_ = reinterpret_cast<::etcdserverpb::ResponseHeader*>(value);
  // @@protoc_insertion_point(field_set_allocated:etcdserverpb.WatchResponse.header)
}

// int64 watch_id = 2;
inline void WatchResponse::clear_watch_id() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.watch_id_ = ::int64_t{0};
  _impl_._has_bits_[0] &= ~0x00000004u;
}
inline ::int64_t WatchResponse::watch_id() const {
  // @@protoc_insertion_point(field_get:etcdserverpb.WatchResponse.watch_id)
  return _internal_watch_id();
}
inline void WatchResponse::set_watch_id(::int64_t value) {
  _internal_set_watch_id(value);
  _impl_._has_bits_[0] |= 0x00000004u;
  // @@protoc_insertion_point(field_set:etcdserverpb.WatchResponse.watch_id)
}
inline ::int64_t WatchResponse::_internal_watch_id() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.watch_id_;
}
inline void WatchResponse::_internal_set_watch_id(::int64_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.watch_id_ = value;
}

// bool created = 3;
inline void WatchResponse::clear_created() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.created_ = false;
  _impl_._has_bits_[0] &= ~0x00000010u;
}
inline bool WatchResponse::created() const {
  // @@protoc_insertion_point(field_get:etcdserverpb.WatchResponse.created)
  return _internal_created();
}
inline void WatchResponse::set_created(bool value) {
  _internal_set_created(value);
  _impl_._has_bits_[0] |= 0x00000010u;
  // @@protoc_insertion_point(field_set:etcdserverpb.WatchResponse.created)
}
inline bool WatchResponse::_internal_created() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.created_;
}
inline void WatchResponse::_internal_set_created(bool value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.created_ = value;
}

// bool canceled = 4;
inline void WatchResponse::clear_canceled() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.canceled_ = false;
  _impl_._has_bits_[0] &= ~0x00000020u;
}
inline bool WatchResponse::canceled() const {
  // @@protoc_insertion_point(field_get:etcdserverpb.WatchResponse.canceled)
  return _internal_canceled();
}
inline void WatchResponse::set_canceled(bool value) {
  _internal_set_canceled(value);
  _impl_._has_bits_[0] |= 0x00000020u;
  // @@protoc_insertion_point(field_set:etcdserverpb.WatchResponse.canceled)
}
inline bool WatchResponse::_internal_canceled() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.canceled_;
}
inline void WatchResponse::_internal_set_canceled(bool value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.canceled_ = value;
}

// int64 compact_revision = 5;
inline void WatchResponse::clear_compact_revision() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.compact_revision_ = ::int64_t{0};
  _impl_._has_bits_[0] &= ~0x00000008u;
}
inline ::int64_t WatchResponse::compact_revision() const {
  // @@protoc_insertion_point(field_get:etcdserverpb.WatchResponse.compact_revision)
  return _internal_compact_revision();
}
inline void WatchResponse::set_compact_revision(::int64_t value) {
  _internal_set_compact_revision(value);
  _impl_._has_bits_[0] |= 0x00000008u;
  // @@protoc_insertion_point(field_set:etcdserverpb.WatchResponse.compact_revision)
}
inline ::int64_t WatchResponse::_internal_compact_revision() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.compact_revision_;
}
inline void WatchResponse::_internal_set_compact_revision(::int64_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.compact_revision_ = value;
}

// string cancel_reason = 6 [(.versionpb.etcd_version_field) = "3.4"];
inline void WatchResponse::clear_cancel_reason() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.cancel_reason_.ClearToEmpty();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
inline const ::std::string& WatchResponse::cancel_reason() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:etcdserverpb.WatchResponse.cancel_reason)
  return _internal_cancel_reason();
}
template <typename Arg_, typename... Args_>
PROTOBUF_ALWAYS_INLINE void WatchResponse::set_cancel_reason(Arg_&& arg, Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000001u;
  _impl_.cancel_reason_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:etcdserverpb.WatchResponse.cancel_reason)
}
inline ::std::string* PROTOBUF_NONNULL WatchResponse::mutable_cancel_reason()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::std::string* _s = _internal_mutable_cancel_reason();
  // @@protoc_insertion_point(field_mutable:etcdserverpb.WatchResponse.cancel_reason)
  return _s;
}
inline const ::std::string& WatchResponse::_internal_cancel_reason() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.cancel_reason_.Get();
}
inline void WatchResponse::_internal_set_cancel_reason(const ::std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000001u;
  _impl_.cancel_reason_.Set(value, GetArena());
}
inline ::std::string* PROTOBUF_NONNULL WatchResponse::_internal_mutable_cancel_reason() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000001u;
  return _impl_.cancel_reason_.Mutable( GetArena());
}
inline ::std::string* PROTOBUF_NULLABLE WatchResponse::release_cancel_reason() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:etcdserverpb.WatchResponse.cancel_reason)
  if ((_impl_._has_bits_[0] & 0x00000001u) == 0) {
    return nullptr;
  }
  _impl_._has_bits_[0] &= ~0x00000001u;
  auto* released = _impl_.cancel_reason_.Release();
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString()) {
    _impl_.cancel_reason_.Set("", GetArena());
  }
  return released;
}
inline void WatchResponse::set_allocated_cancel_reason(::std::string* PROTOBUF_NULLABLE value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  _impl_.cancel_reason_.SetAllocated(value, GetArena());
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString() && _impl_.cancel_reason_.IsDefault()) {
    _impl_.cancel_reason_.Set("", GetArena());
  }
  // @@protoc_insertion_point(field_set_allocated:etcdserverpb.WatchResponse.cancel_reason)
}

// bool fragment = 7 [(.versionpb.etcd_version_field) = "3.4"];
inline void WatchResponse::clear_fragment() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.fragment_ = false;
  _impl_._has_bits_[0] &= ~0x00000040u;
}
inline bool WatchResponse::fragment() const {
  // @@protoc_insertion_point(field_get:etcdserverpb.WatchResponse.fragment)
  return _internal_fragment();
}
inline void WatchResponse::set_fragment(bool value) {
  _internal_set_fragment(value);
  _impl_._has_bits_[0] |= 0x00000040u;
  // @@protoc_insertion_point(field_set:etcdserverpb.WatchResponse.fragment)
}
inline bool WatchResponse::_internal_fragment() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.fragment_;
}
inline void WatchResponse::_internal_set_fragment(bool value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.fragment_ = value;
}

// repeated .mvccpb.Event events = 11;
inline int WatchResponse::_internal_events_size() const {
  return _internal_events().size();
}
inline int WatchResponse::events_size() const {
  return _internal_events_size();
}
inline ::mvccpb::Event* PROTOBUF_NONNULL WatchResponse::mutable_events(int index)
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable:etcdserverpb.WatchResponse.events)
  return _internal_mutable_events()->Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField<::mvccpb::Event>* PROTOBUF_NONNULL WatchResponse::mutable_events()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable_list:etcdserverpb.WatchResponse.events)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _internal_mutable_events();
}
inline const ::mvccpb::Event& WatchResponse::events(int index) const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:etcdserverpb.WatchResponse.events)
  return _internal_events().Get(index);
}
inline ::mvccpb::Event* PROTOBUF_NONNULL WatchResponse::add_events()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::mvccpb::Event* _add = _internal_mutable_events()->Add();
  // @@protoc_insertion_point(field_add:etcdserverpb.WatchResponse.events)
  return _add;
}
inline const ::google::protobuf::RepeatedPtrField<::mvccpb::Event>& WatchResponse::events() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_list:etcdserverpb.WatchResponse.events)
  return _internal_events();
}
inline const ::google::protobuf::RepeatedPtrField<::mvccpb::Event>&
WatchResponse::_internal_events() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.events_;
}
inline ::google::protobuf::RepeatedPtrField<::mvccpb::Event>* PROTOBUF_NONNULL
WatchResponse::_internal_mutable_events() {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return &_impl_.events_;
}

// -------------------------------------------------------------------

// LeaseGrantRequest

// int64 TTL = 1;
inline void LeaseGrantRequest::clear_ttl() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.ttl_ = ::int64_t{0};
  _impl_._has_bits_[0] &= ~0x00000001u;
}
inline ::int64_t LeaseGrantRequest::ttl() const {
  // @@protoc_insertion_point(field_get:etcdserverpb.LeaseGrantRequest.TTL)
  return _internal_ttl();
}
inline void LeaseGrantRequest::set_ttl(::int64_t value) {
  _internal_set_ttl(value);
  _impl_._has_bits_[0] |= 0x00000001u;
  // @@protoc_insertion_point(field_set:etcdserverpb.LeaseGrantRequest.TTL)
}
inline ::int64_t LeaseGrantRequest::_internal_ttl() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.ttl_;
}
inline void LeaseGrantRequest::_internal_set_ttl(::int64_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.ttl_ = value;
}

// int64 ID = 2;
inline void LeaseGrantRequest::clear_id() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.id_ = ::int64_t{0};
  _impl_._has_bits_[0] &= ~0x00000002u;
}
inline ::int64_t LeaseGrantRequest::id() const {
  // @@protoc_insertion_point(field_get:etcdserverpb.LeaseGrantRequest.ID)
  return _internal_id();
}
inline void LeaseGrantRequest::set_id(::int64_t value) {
  _internal_set_id(value);
  _impl_._has_bits_[0] |= 0x00000002u;
  // @@protoc_insertion_point(field_set:etcdserverpb.LeaseGrantRequest.ID)
}
inline ::int64_t LeaseGrantRequest::_internal_id() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.id_;
}
inline void LeaseGrantRequest::_internal_set_id(::int64_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.id_ = value;
}

// -------------------------------------------------------------------

// LeaseGrantResponse

// .etcdserverpb.ResponseHeader header = 1;
inline bool LeaseGrantResponse::has_header() const {
  bool value = (_impl_._has_bits_[0] & 0x00000002u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.header_ != nullptr);
  return value;
}
inline void LeaseGrantResponse::clear_header() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.header_ != nullptr) _impl_.header_->Clear();
  _impl_._has_bits_[0] &= ~0x00000002u;
}
inline const ::etcdserverpb::ResponseHeader& LeaseGrantResponse::_internal_header() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  const ::etcdserverpb::ResponseHeader* p = _impl_.header_;
  return p != nullptr ? *p : reinterpret_cast<const ::etcdserverpb::ResponseHeader&>(::etcdserverpb::_ResponseHeader_default_instance_);
}
inline const ::etcdserverpb::ResponseHeader& LeaseGrantResponse::header() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:etcdserverpb.LeaseGrantResponse.header)
  return _internal_header();
}
inline void LeaseGrantResponse::unsafe_arena_set_allocated_header(
    ::etcdserverpb::ResponseHeader* PROTOBUF_NULLABLE value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.header_);
  }
  _impl_.header_ = reinterpret_cast<::etcdserverpb::ResponseHeader*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000002u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000002u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:etcdserverpb.LeaseGrantResponse.header)
}
inline ::etcdserverpb::ResponseHeader* PROTOBUF_NULLABLE LeaseGrantResponse::release_header() {
  ::google::protobuf::internal::TSanWrite(&_impl_);

  _impl_._has_bits_[0] &= ~0x00000002u;
  ::etcdserverpb::ResponseHeader* released = _impl_.header_;
  _impl_.header_ = nullptr;
  if (::google::protobuf::internal::DebugHardenForceCopyInRelease()) {
    auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    if (GetArena() == nullptr) {
      delete old;
    }
  } else {
    if (GetArena() != nullptr) {
      released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    }
  }
  return released;
}
inline ::etcdserverpb::ResponseHeader* PROTOBUF_NULLABLE LeaseGrantResponse::unsafe_arena_release_header() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:etcdserverpb.LeaseGrantResponse.header)

  _impl_._has_bits_[0] &= ~0x00000002u;
  ::etcdserverpb::ResponseHeader* temp = _impl_.header_;
  _impl_.header_ = nullptr;
  return temp;
}
inline ::etcdserverpb::ResponseHeader* PROTOBUF_NONNULL LeaseGrantResponse::_internal_mutable_header() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.header_ == nullptr) {
    auto* p = ::google::protobuf::Message::DefaultConstruct<::etcdserverpb::ResponseHeader>(GetArena());
    _impl_.header_ = reinterpret_cast<::etcdserverpb::ResponseHeader*>(p);
  }
  return _impl_.header_;
}
inline ::etcdserverpb::ResponseHeader* PROTOBUF_NONNULL LeaseGrantResponse::mutable_header()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  _impl_._has_bits_[0] |= 0x00000002u;
  ::etcdserverpb::ResponseHeader* _msg = _internal_mutable_header();
  // @@protoc_insertion_point(field_mutable:etcdserverpb.LeaseGrantResponse.header)
  return _msg;
}
inline void LeaseGrantResponse::set_allocated_header(::etcdserverpb::ResponseHeader* PROTOBUF_NULLABLE value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (message_arena == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.header_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = value->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000002u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000002u;
  }

  _impl_.header_ = reinterpret_cast<::etcdserverpb::ResponseHeader*>(value);
  // @@protoc_insertion_point(field_set_allocated:etcdserverpb.LeaseGrantResponse.header)
}

// int64 ID = 2;
inline void LeaseGrantResponse::clear_id() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.id_ = ::int64_t{0};
  _impl_._has_bits_[0] &= ~0x00000004u;
}
inline ::int64_t LeaseGrantResponse::id() const {
  // @@protoc_insertion_point(field_get:etcdserverpb.LeaseGrantResponse.ID)
  return _internal_id();
}
inline void LeaseGrantResponse::set_id(::int64_t value) {
  _internal_set_id(value);
  _impl_._has_bits_[0] |= 0x00000004u;
  // @@protoc_insertion_point(field_set:etcdserverpb.LeaseGrantResponse.ID)
}
inline ::int64_t LeaseGrantResponse::_internal_id() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.id_;
}
inline void LeaseGrantResponse::_internal_set_id(::int64_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.id_ = value;
}

// int64 TTL = 3;
inline void LeaseGrantResponse::clear_ttl() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.ttl_ = ::int64_t{0};
  _impl_._has_bits_[0] &= ~0x00000008u;
}
inline ::int64_t LeaseGrantResponse::ttl() const {
  // @@protoc_insertion_point(field_get:etcdserverpb.LeaseGrantResponse.TTL)
  return _internal_ttl();
}
inline void LeaseGrantResponse::set_ttl(::int64_t value) {
  _internal_set_ttl(value);
  _impl_._has_bits_[0] |= 0x00000008u;
  // @@protoc_insertion_point(field_set:etcdserverpb.LeaseGrantResponse.TTL)
}
inline ::int64_t LeaseGrantResponse::_internal_ttl() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.ttl_;
}
inline void LeaseGrantResponse::_internal_set_ttl(::int64_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.ttl_ = value;
}

// string error = 4;
inline void LeaseGrantResponse::clear_error() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.error_.ClearToEmpty();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
inline const ::std::string& LeaseGrantResponse::error() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:etcdserverpb.LeaseGrantResponse.error)
  return _internal_error();
}
template <typename Arg_, typename... Args_>
PROTOBUF_ALWAYS_INLINE void LeaseGrantResponse::set_error(Arg_&& arg, Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000001u;
  _impl_.error_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:etcdserverpb.LeaseGrantResponse.error)
}
inline ::std::string* PROTOBUF_NONNULL LeaseGrantResponse::mutable_error()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::std::string* _s = _internal_mutable_error();
  // @@protoc_insertion_point(field_mutable:etcdserverpb.LeaseGrantResponse.error)
  return _s;
}
inline const ::std::string& LeaseGrantResponse::_internal_error() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.error_.Get();
}
inline void LeaseGrantResponse::_internal_set_error(const ::std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000001u;
  _impl_.error_.Set(value, GetArena());
}
inline ::std::string* PROTOBUF_NONNULL LeaseGrantResponse::_internal_mutable_error() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000001u;
  return _impl_.error_.Mutable( GetArena());
}
inline ::std::string* PROTOBUF_NULLABLE LeaseGrantResponse::release_error() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:etcdserverpb.LeaseGrantResponse.error)
  if ((_impl_._has_bits_[0] & 0x00000001u) == 0) {
    return nullptr;
  }
  _impl_._has_bits_[0] &= ~0x00000001u;
  auto* released = _impl_.error_.Release();
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString()) {
    _impl_.error_.Set("", GetArena());
  }
  return released;
}
inline void LeaseGrantResponse::set_allocated_error(::std::string* PROTOBUF_NULLABLE value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  _impl_.error_.SetAllocated(value, GetArena());
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString() && _impl_.error_.IsDefault()) {
    _impl_.error_.Set("", GetArena());
  }
  // @@protoc_insertion_point(field_set_allocated:etcdserverpb.LeaseGrantResponse.error)
}

// -------------------------------------------------------------------

// LeaseRevokeRequest

// int64 ID = 1;
inline void LeaseRevokeRequest::clear_id() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.id_ = ::int64_t{0};
  _impl_._has_bits_[0] &= ~0x00000001u;
}
inline ::int64_t LeaseRevokeRequest::id() const {
  // @@protoc_insertion_point(field_get:etcdserverpb.LeaseRevokeRequest.ID)
  return _internal_id();
}
inline void LeaseRevokeRequest::set_id(::int64_t value) {
  _internal_set_id(value);
  _impl_._has_bits_[0] |= 0x00000001u;
  // @@protoc_insertion_point(field_set:etcdserverpb.LeaseRevokeRequest.ID)
}
inline ::int64_t LeaseRevokeRequest::_internal_id() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.id_;
}
inline void LeaseRevokeRequest::_internal_set_id(::int64_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.id_ = value;
}

// -------------------------------------------------------------------

// LeaseRevokeResponse

// .etcdserverpb.ResponseHeader header = 1;
inline bool LeaseRevokeResponse::has_header() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.header_ != nullptr);
  return value;
}
inline void LeaseRevokeResponse::clear_header() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.header_ != nullptr) _impl_.header_->Clear();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
inline const ::etcdserverpb::ResponseHeader& LeaseRevokeResponse::_internal_header() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  const ::etcdserverpb::ResponseHeader* p = _impl_.header_;
  return p != nullptr ? *p : reinterpret_cast<const ::etcdserverpb::ResponseHeader&>(::etcdserverpb::_ResponseHeader_default_instance_);
}
inline const ::etcdserverpb::ResponseHeader& LeaseRevokeResponse::header() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:etcdserverpb.LeaseRevokeResponse.header)
  return _internal_header();
}
inline void LeaseRevokeResponse::unsafe_arena_set_allocated_header(
    ::etcdserverpb::ResponseHeader* PROTOBUF_NULLABLE value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.header_);
  }
  _impl_.header_ = reinterpret_cast<::etcdserverpb::ResponseHeader*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:etcdserverpb.LeaseRevokeResponse.header)
}
inline ::etcdserverpb::ResponseHeader* PROTOBUF_NULLABLE LeaseRevokeResponse::release_header() {
  ::google::protobuf::internal::TSanWrite(&_impl_);

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::etcdserverpb::ResponseHeader* released = _impl_.header_;
  _impl_.header_ = nullptr;
  if (::google::protobuf::internal::DebugHardenForceCopyInRelease()) {
    auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    if (GetArena() == nullptr) {
      delete old;
    }
  } else {
    if (GetArena() != nullptr) {
      released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    }
  }
  return released;
}
inline ::etcdserverpb::ResponseHeader* PROTOBUF_NULLABLE LeaseRevokeResponse::unsafe_arena_release_header() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:etcdserverpb.LeaseRevokeResponse.header)

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::etcdserverpb::ResponseHeader* temp = _impl_.header_;
  _impl_.header_ = nullptr;
  return temp;
}
inline ::etcdserverpb::ResponseHeader* PROTOBUF_NONNULL LeaseRevokeResponse::_internal_mutable_header() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.header_ == nullptr) {
    auto* p = ::google::protobuf::Message::DefaultConstruct<::etcdserverpb::ResponseHeader>(GetArena());
    _impl_.header_ = reinterpret_cast<::etcdserverpb::ResponseHeader*>(p);
  }
  return _impl_.header_;
}
inline ::etcdserverpb::ResponseHeader* PROTOBUF_NONNULL LeaseRevokeResponse::mutable_header()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  _impl_._has_bits_[0] |= 0x00000001u;
  ::etcdserverpb::ResponseHeader* _msg = _internal_mutable_header();
  // @@protoc_insertion_point(field_mutable:etcdserverpb.LeaseRevokeResponse.header)
  return _msg;
}
inline void LeaseRevokeResponse::set_allocated_header(::etcdserverpb::ResponseHeader* PROTOBUF_NULLABLE value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (message_arena == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.header_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = value->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }

  _impl_.header_ = reinterpret_cast<::etcdserverpb::ResponseHeader*>(value);
  // @@protoc_insertion_point(field_set_allocated:etcdserverpb.LeaseRevokeResponse.header)
}

// -------------------------------------------------------------------

// LeaseCheckpoint

// int64 ID = 1;
inline void LeaseCheckpoint::clear_id() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.id_ = ::int64_t{0};
  _impl_._has_bits_[0] &= ~0x00000001u;
}
inline ::int64_t LeaseCheckpoint::id() const {
  // @@protoc_insertion_point(field_get:etcdserverpb.LeaseCheckpoint.ID)
  return _internal_id();
}
inline void LeaseCheckpoint::set_id(::int64_t value) {
  _internal_set_id(value);
  _impl_._has_bits_[0] |= 0x00000001u;
  // @@protoc_insertion_point(field_set:etcdserverpb.LeaseCheckpoint.ID)
}
inline ::int64_t LeaseCheckpoint::_internal_id() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.id_;
}
inline void LeaseCheckpoint::_internal_set_id(::int64_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.id_ = value;
}

// int64 remaining_TTL = 2;
inline void LeaseCheckpoint::clear_remaining_ttl() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.remaining_ttl_ = ::int64_t{0};
  _impl_._has_bits_[0] &= ~0x00000002u;
}
inline ::int64_t LeaseCheckpoint::remaining_ttl() const {
  // @@protoc_insertion_point(field_get:etcdserverpb.LeaseCheckpoint.remaining_TTL)
  return _internal_remaining_ttl();
}
inline void LeaseCheckpoint::set_remaining_ttl(::int64_t value) {
  _internal_set_remaining_ttl(value);
  _impl_._has_bits_[0] |= 0x00000002u;
  // @@protoc_insertion_point(field_set:etcdserverpb.LeaseCheckpoint.remaining_TTL)
}
inline ::int64_t LeaseCheckpoint::_internal_remaining_ttl() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.remaining_ttl_;
}
inline void LeaseCheckpoint::_internal_set_remaining_ttl(::int64_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.remaining_ttl_ = value;
}

// -------------------------------------------------------------------

// LeaseCheckpointRequest

// repeated .etcdserverpb.LeaseCheckpoint checkpoints = 1;
inline int LeaseCheckpointRequest::_internal_checkpoints_size() const {
  return _internal_checkpoints().size();
}
inline int LeaseCheckpointRequest::checkpoints_size() const {
  return _internal_checkpoints_size();
}
inline void LeaseCheckpointRequest::clear_checkpoints() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.checkpoints_.Clear();
}
inline ::etcdserverpb::LeaseCheckpoint* PROTOBUF_NONNULL LeaseCheckpointRequest::mutable_checkpoints(int index)
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable:etcdserverpb.LeaseCheckpointRequest.checkpoints)
  return _internal_mutable_checkpoints()->Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField<::etcdserverpb::LeaseCheckpoint>* PROTOBUF_NONNULL LeaseCheckpointRequest::mutable_checkpoints()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable_list:etcdserverpb.LeaseCheckpointRequest.checkpoints)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _internal_mutable_checkpoints();
}
inline const ::etcdserverpb::LeaseCheckpoint& LeaseCheckpointRequest::checkpoints(int index) const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:etcdserverpb.LeaseCheckpointRequest.checkpoints)
  return _internal_checkpoints().Get(index);
}
inline ::etcdserverpb::LeaseCheckpoint* PROTOBUF_NONNULL LeaseCheckpointRequest::add_checkpoints()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::etcdserverpb::LeaseCheckpoint* _add = _internal_mutable_checkpoints()->Add();
  // @@protoc_insertion_point(field_add:etcdserverpb.LeaseCheckpointRequest.checkpoints)
  return _add;
}
inline const ::google::protobuf::RepeatedPtrField<::etcdserverpb::LeaseCheckpoint>& LeaseCheckpointRequest::checkpoints() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_list:etcdserverpb.LeaseCheckpointRequest.checkpoints)
  return _internal_checkpoints();
}
inline const ::google::protobuf::RepeatedPtrField<::etcdserverpb::LeaseCheckpoint>&
LeaseCheckpointRequest::_internal_checkpoints() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.checkpoints_;
}
inline ::google::protobuf::RepeatedPtrField<::etcdserverpb::LeaseCheckpoint>* PROTOBUF_NONNULL
LeaseCheckpointRequest::_internal_mutable_checkpoints() {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return &_impl_.checkpoints_;
}

// -------------------------------------------------------------------

// LeaseCheckpointResponse

// .etcdserverpb.ResponseHeader header = 1;
inline bool LeaseCheckpointResponse::has_header() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.header_ != nullptr);
  return value;
}
inline void LeaseCheckpointResponse::clear_header() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.header_ != nullptr) _impl_.header_->Clear();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
inline const ::etcdserverpb::ResponseHeader& LeaseCheckpointResponse::_internal_header() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  const ::etcdserverpb::ResponseHeader* p = _impl_.header_;
  return p != nullptr ? *p : reinterpret_cast<const ::etcdserverpb::ResponseHeader&>(::etcdserverpb::_ResponseHeader_default_instance_);
}
inline const ::etcdserverpb::ResponseHeader& LeaseCheckpointResponse::header() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:etcdserverpb.LeaseCheckpointResponse.header)
  return _internal_header();
}
inline void LeaseCheckpointResponse::unsafe_arena_set_allocated_header(
    ::etcdserverpb::ResponseHeader* PROTOBUF_NULLABLE value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.header_);
  }
  _impl_.header_ = reinterpret_cast<::etcdserverpb::ResponseHeader*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:etcdserverpb.LeaseCheckpointResponse.header)
}
inline ::etcdserverpb::ResponseHeader* PROTOBUF_NULLABLE LeaseCheckpointResponse::release_header() {
  ::google::protobuf::internal::TSanWrite(&_impl_);

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::etcdserverpb::ResponseHeader* released = _impl_.header_;
  _impl_.header_ = nullptr;
  if (::google::protobuf::internal::DebugHardenForceCopyInRelease()) {
    auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    if (GetArena() == nullptr) {
      delete old;
    }
  } else {
    if (GetArena() != nullptr) {
      released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    }
  }
  return released;
}
inline ::etcdserverpb::ResponseHeader* PROTOBUF_NULLABLE LeaseCheckpointResponse::unsafe_arena_release_header() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:etcdserverpb.LeaseCheckpointResponse.header)

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::etcdserverpb::ResponseHeader* temp = _impl_.header_;
  _impl_.header_ = nullptr;
  return temp;
}
inline ::etcdserverpb::ResponseHeader* PROTOBUF_NONNULL LeaseCheckpointResponse::_internal_mutable_header() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.header_ == nullptr) {
    auto* p = ::google::protobuf::Message::DefaultConstruct<::etcdserverpb::ResponseHeader>(GetArena());
    _impl_.header_ = reinterpret_cast<::etcdserverpb::ResponseHeader*>(p);
  }
  return _impl_.header_;
}
inline ::etcdserverpb::ResponseHeader* PROTOBUF_NONNULL LeaseCheckpointResponse::mutable_header()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  _impl_._has_bits_[0] |= 0x00000001u;
  ::etcdserverpb::ResponseHeader* _msg = _internal_mutable_header();
  // @@protoc_insertion_point(field_mutable:etcdserverpb.LeaseCheckpointResponse.header)
  return _msg;
}
inline void LeaseCheckpointResponse::set_allocated_header(::etcdserverpb::ResponseHeader* PROTOBUF_NULLABLE value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (message_arena == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.header_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = value->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }

  _impl_.header_ = reinterpret_cast<::etcdserverpb::ResponseHeader*>(value);
  // @@protoc_insertion_point(field_set_allocated:etcdserverpb.LeaseCheckpointResponse.header)
}

// -------------------------------------------------------------------

// LeaseKeepAliveRequest

// int64 ID = 1;
inline void LeaseKeepAliveRequest::clear_id() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.id_ = ::int64_t{0};
  _impl_._has_bits_[0] &= ~0x00000001u;
}
inline ::int64_t LeaseKeepAliveRequest::id() const {
  // @@protoc_insertion_point(field_get:etcdserverpb.LeaseKeepAliveRequest.ID)
  return _internal_id();
}
inline void LeaseKeepAliveRequest::set_id(::int64_t value) {
  _internal_set_id(value);
  _impl_._has_bits_[0] |= 0x00000001u;
  // @@protoc_insertion_point(field_set:etcdserverpb.LeaseKeepAliveRequest.ID)
}
inline ::int64_t LeaseKeepAliveRequest::_internal_id() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.id_;
}
inline void LeaseKeepAliveRequest::_internal_set_id(::int64_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.id_ = value;
}

// -------------------------------------------------------------------

// LeaseKeepAliveResponse

// .etcdserverpb.ResponseHeader header = 1;
inline bool LeaseKeepAliveResponse::has_header() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.header_ != nullptr);
  return value;
}
inline void LeaseKeepAliveResponse::clear_header() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.header_ != nullptr) _impl_.header_->Clear();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
inline const ::etcdserverpb::ResponseHeader& LeaseKeepAliveResponse::_internal_header() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  const ::etcdserverpb::ResponseHeader* p = _impl_.header_;
  return p != nullptr ? *p : reinterpret_cast<const ::etcdserverpb::ResponseHeader&>(::etcdserverpb::_ResponseHeader_default_instance_);
}
inline const ::etcdserverpb::ResponseHeader& LeaseKeepAliveResponse::header() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:etcdserverpb.LeaseKeepAliveResponse.header)
  return _internal_header();
}
inline void LeaseKeepAliveResponse::unsafe_arena_set_allocated_header(
    ::etcdserverpb::ResponseHeader* PROTOBUF_NULLABLE value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.header_);
  }
  _impl_.header_ = reinterpret_cast<::etcdserverpb::ResponseHeader*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:etcdserverpb.LeaseKeepAliveResponse.header)
}
inline ::etcdserverpb::ResponseHeader* PROTOBUF_NULLABLE LeaseKeepAliveResponse::release_header() {
  ::google::protobuf::internal::TSanWrite(&_impl_);

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::etcdserverpb::ResponseHeader* released = _impl_.header_;
  _impl_.header_ = nullptr;
  if (::google::protobuf::internal::DebugHardenForceCopyInRelease()) {
    auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    if (GetArena() == nullptr) {
      delete old;
    }
  } else {
    if (GetArena() != nullptr) {
      released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    }
  }
  return released;
}
inline ::etcdserverpb::ResponseHeader* PROTOBUF_NULLABLE LeaseKeepAliveResponse::unsafe_arena_release_header() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:etcdserverpb.LeaseKeepAliveResponse.header)

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::etcdserverpb::ResponseHeader* temp = _impl_.header_;
  _impl_.header_ = nullptr;
  return temp;
}
inline ::etcdserverpb::ResponseHeader* PROTOBUF_NONNULL LeaseKeepAliveResponse::_internal_mutable_header() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.header_ == nullptr) {
    auto* p = ::google::protobuf::Message::DefaultConstruct<::etcdserverpb::ResponseHeader>(GetArena());
    _impl_.header_ = reinterpret_cast<::etcdserverpb::ResponseHeader*>(p);
  }
  return _impl_.header_;
}
inline ::etcdserverpb::ResponseHeader* PROTOBUF_NONNULL LeaseKeepAliveResponse::mutable_header()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  _impl_._has_bits_[0] |= 0x00000001u;
  ::etcdserverpb::ResponseHeader* _msg = _internal_mutable_header();
  // @@protoc_insertion_point(field_mutable:etcdserverpb.LeaseKeepAliveResponse.header)
  return _msg;
}
inline void LeaseKeepAliveResponse::set_allocated_header(::etcdserverpb::ResponseHeader* PROTOBUF_NULLABLE value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (message_arena == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.header_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = value->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }

  _impl_.header_ = reinterpret_cast<::etcdserverpb::ResponseHeader*>(value);
  // @@protoc_insertion_point(field_set_allocated:etcdserverpb.LeaseKeepAliveResponse.header)
}

// int64 ID = 2;
inline void LeaseKeepAliveResponse::clear_id() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.id_ = ::int64_t{0};
  _impl_._has_bits_[0] &= ~0x00000002u;
}
inline ::int64_t LeaseKeepAliveResponse::id() const {
  // @@protoc_insertion_point(field_get:etcdserverpb.LeaseKeepAliveResponse.ID)
  return _internal_id();
}
inline void LeaseKeepAliveResponse::set_id(::int64_t value) {
  _internal_set_id(value);
  _impl_._has_bits_[0] |= 0x00000002u;
  // @@protoc_insertion_point(field_set:etcdserverpb.LeaseKeepAliveResponse.ID)
}
inline ::int64_t LeaseKeepAliveResponse::_internal_id() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.id_;
}
inline void LeaseKeepAliveResponse::_internal_set_id(::int64_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.id_ = value;
}

// int64 TTL = 3;
inline void LeaseKeepAliveResponse::clear_ttl() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.ttl_ = ::int64_t{0};
  _impl_._has_bits_[0] &= ~0x00000004u;
}
inline ::int64_t LeaseKeepAliveResponse::ttl() const {
  // @@protoc_insertion_point(field_get:etcdserverpb.LeaseKeepAliveResponse.TTL)
  return _internal_ttl();
}
inline void LeaseKeepAliveResponse::set_ttl(::int64_t value) {
  _internal_set_ttl(value);
  _impl_._has_bits_[0] |= 0x00000004u;
  // @@protoc_insertion_point(field_set:etcdserverpb.LeaseKeepAliveResponse.TTL)
}
inline ::int64_t LeaseKeepAliveResponse::_internal_ttl() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.ttl_;
}
inline void LeaseKeepAliveResponse::_internal_set_ttl(::int64_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.ttl_ = value;
}

// -------------------------------------------------------------------

// LeaseTimeToLiveRequest

// int64 ID = 1;
inline void LeaseTimeToLiveRequest::clear_id() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.id_ = ::int64_t{0};
  _impl_._has_bits_[0] &= ~0x00000001u;
}
inline ::int64_t LeaseTimeToLiveRequest::id() const {
  // @@protoc_insertion_point(field_get:etcdserverpb.LeaseTimeToLiveRequest.ID)
  return _internal_id();
}
inline void LeaseTimeToLiveRequest::set_id(::int64_t value) {
  _internal_set_id(value);
  _impl_._has_bits_[0] |= 0x00000001u;
  // @@protoc_insertion_point(field_set:etcdserverpb.LeaseTimeToLiveRequest.ID)
}
inline ::int64_t LeaseTimeToLiveRequest::_internal_id() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.id_;
}
inline void LeaseTimeToLiveRequest::_internal_set_id(::int64_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.id_ = value;
}

// bool keys = 2;
inline void LeaseTimeToLiveRequest::clear_keys() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.keys_ = false;
  _impl_._has_bits_[0] &= ~0x00000002u;
}
inline bool LeaseTimeToLiveRequest::keys() const {
  // @@protoc_insertion_point(field_get:etcdserverpb.LeaseTimeToLiveRequest.keys)
  return _internal_keys();
}
inline void LeaseTimeToLiveRequest::set_keys(bool value) {
  _internal_set_keys(value);
  _impl_._has_bits_[0] |= 0x00000002u;
  // @@protoc_insertion_point(field_set:etcdserverpb.LeaseTimeToLiveRequest.keys)
}
inline bool LeaseTimeToLiveRequest::_internal_keys() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.keys_;
}
inline void LeaseTimeToLiveRequest::_internal_set_keys(bool value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.keys_ = value;
}

// -------------------------------------------------------------------

// LeaseTimeToLiveResponse

// .etcdserverpb.ResponseHeader header = 1;
inline bool LeaseTimeToLiveResponse::has_header() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.header_ != nullptr);
  return value;
}
inline void LeaseTimeToLiveResponse::clear_header() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.header_ != nullptr) _impl_.header_->Clear();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
inline const ::etcdserverpb::ResponseHeader& LeaseTimeToLiveResponse::_internal_header() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  const ::etcdserverpb::ResponseHeader* p = _impl_.header_;
  return p != nullptr ? *p : reinterpret_cast<const ::etcdserverpb::ResponseHeader&>(::etcdserverpb::_ResponseHeader_default_instance_);
}
inline const ::etcdserverpb::ResponseHeader& LeaseTimeToLiveResponse::header() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:etcdserverpb.LeaseTimeToLiveResponse.header)
  return _internal_header();
}
inline void LeaseTimeToLiveResponse::unsafe_arena_set_allocated_header(
    ::etcdserverpb::ResponseHeader* PROTOBUF_NULLABLE value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.header_);
  }
  _impl_.header_ = reinterpret_cast<::etcdserverpb::ResponseHeader*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:etcdserverpb.LeaseTimeToLiveResponse.header)
}
inline ::etcdserverpb::ResponseHeader* PROTOBUF_NULLABLE LeaseTimeToLiveResponse::release_header() {
  ::google::protobuf::internal::TSanWrite(&_impl_);

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::etcdserverpb::ResponseHeader* released = _impl_.header_;
  _impl_.header_ = nullptr;
  if (::google::protobuf::internal::DebugHardenForceCopyInRelease()) {
    auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    if (GetArena() == nullptr) {
      delete old;
    }
  } else {
    if (GetArena() != nullptr) {
      released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    }
  }
  return released;
}
inline ::etcdserverpb::ResponseHeader* PROTOBUF_NULLABLE LeaseTimeToLiveResponse::unsafe_arena_release_header() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:etcdserverpb.LeaseTimeToLiveResponse.header)

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::etcdserverpb::ResponseHeader* temp = _impl_.header_;
  _impl_.header_ = nullptr;
  return temp;
}
inline ::etcdserverpb::ResponseHeader* PROTOBUF_NONNULL LeaseTimeToLiveResponse::_internal_mutable_header() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.header_ == nullptr) {
    auto* p = ::google::protobuf::Message::DefaultConstruct<::etcdserverpb::ResponseHeader>(GetArena());
    _impl_.header_ = reinterpret_cast<::etcdserverpb::ResponseHeader*>(p);
  }
  return _impl_.header_;
}
inline ::etcdserverpb::ResponseHeader* PROTOBUF_NONNULL LeaseTimeToLiveResponse::mutable_header()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  _impl_._has_bits_[0] |= 0x00000001u;
  ::etcdserverpb::ResponseHeader* _msg = _internal_mutable_header();
  // @@protoc_insertion_point(field_mutable:etcdserverpb.LeaseTimeToLiveResponse.header)
  return _msg;
}
inline void LeaseTimeToLiveResponse::set_allocated_header(::etcdserverpb::ResponseHeader* PROTOBUF_NULLABLE value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (message_arena == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.header_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = value->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }

  _impl_.header_ = reinterpret_cast<::etcdserverpb::ResponseHeader*>(value);
  // @@protoc_insertion_point(field_set_allocated:etcdserverpb.LeaseTimeToLiveResponse.header)
}

// int64 ID = 2;
inline void LeaseTimeToLiveResponse::clear_id() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.id_ = ::int64_t{0};
  _impl_._has_bits_[0] &= ~0x00000002u;
}
inline ::int64_t LeaseTimeToLiveResponse::id() const {
  // @@protoc_insertion_point(field_get:etcdserverpb.LeaseTimeToLiveResponse.ID)
  return _internal_id();
}
inline void LeaseTimeToLiveResponse::set_id(::int64_t value) {
  _internal_set_id(value);
  _impl_._has_bits_[0] |= 0x00000002u;
  // @@protoc_insertion_point(field_set:etcdserverpb.LeaseTimeToLiveResponse.ID)
}
inline ::int64_t LeaseTimeToLiveResponse::_internal_id() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.id_;
}
inline void LeaseTimeToLiveResponse::_internal_set_id(::int64_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.id_ = value;
}

// int64 TTL = 3;
inline void LeaseTimeToLiveResponse::clear_ttl() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.ttl_ = ::int64_t{0};
  _impl_._has_bits_[0] &= ~0x00000004u;
}
inline ::int64_t LeaseTimeToLiveResponse::ttl() const {
  // @@protoc_insertion_point(field_get:etcdserverpb.LeaseTimeToLiveResponse.TTL)
  return _internal_ttl();
}
inline void LeaseTimeToLiveResponse::set_ttl(::int64_t value) {
  _internal_set_ttl(value);
  _impl_._has_bits_[0] |= 0x00000004u;
  // @@protoc_insertion_point(field_set:etcdserverpb.LeaseTimeToLiveResponse.TTL)
}
inline ::int64_t LeaseTimeToLiveResponse::_internal_ttl() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.ttl_;
}
inline void LeaseTimeToLiveResponse::_internal_set_ttl(::int64_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.ttl_ = value;
}

// int64 grantedTTL = 4;
inline void LeaseTimeToLiveResponse::clear_grantedttl() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.grantedttl_ = ::int64_t{0};
  _impl_._has_bits_[0] &= ~0x00000008u;
}
inline ::int64_t LeaseTimeToLiveResponse::grantedttl() const {
  // @@protoc_insertion_point(field_get:etcdserverpb.LeaseTimeToLiveResponse.grantedTTL)
  return _internal_grantedttl();
}
inline void LeaseTimeToLiveResponse::set_grantedttl(::int64_t value) {
  _internal_set_grantedttl(value);
  _impl_._has_bits_[0] |= 0x00000008u;
  // @@protoc_insertion_point(field_set:etcdserverpb.LeaseTimeToLiveResponse.grantedTTL)
}
inline ::int64_t LeaseTimeToLiveResponse::_internal_grantedttl() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.grantedttl_;
}
inline void LeaseTimeToLiveResponse::_internal_set_grantedttl(::int64_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.grantedttl_ = value;
}

// repeated bytes keys = 5;
inline int LeaseTimeToLiveResponse::_internal_keys_size() const {
  return _internal_keys().size();
}
inline int LeaseTimeToLiveResponse::keys_size() const {
  return _internal_keys_size();
}
inline void LeaseTimeToLiveResponse::clear_keys() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.keys_.Clear();
}
inline ::std::string* PROTOBUF_NONNULL LeaseTimeToLiveResponse::add_keys()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::std::string* _s = _internal_mutable_keys()->Add();
  // @@protoc_insertion_point(field_add_mutable:etcdserverpb.LeaseTimeToLiveResponse.keys)
  return _s;
}
inline const ::std::string& LeaseTimeToLiveResponse::keys(int index) const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:etcdserverpb.LeaseTimeToLiveResponse.keys)
  return _internal_keys().Get(index);
}
inline ::std::string* PROTOBUF_NONNULL LeaseTimeToLiveResponse::mutable_keys(int index)
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable:etcdserverpb.LeaseTimeToLiveResponse.keys)
  return _internal_mutable_keys()->Mutable(index);
}
template <typename Arg_, typename... Args_>
inline void LeaseTimeToLiveResponse::set_keys(int index, Arg_&& value, Args_... args) {
  ::google::protobuf::internal::AssignToString(*_internal_mutable_keys()->Mutable(index), ::std::forward<Arg_>(value),
                        args... , ::google::protobuf::internal::BytesTag{});
  // @@protoc_insertion_point(field_set:etcdserverpb.LeaseTimeToLiveResponse.keys)
}
template <typename Arg_, typename... Args_>
inline void LeaseTimeToLiveResponse::add_keys(Arg_&& value, Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::google::protobuf::internal::AddToRepeatedPtrField(*_internal_mutable_keys(),
                               ::std::forward<Arg_>(value),
                               args... , ::google::protobuf::internal::BytesTag{});
  // @@protoc_insertion_point(field_add:etcdserverpb.LeaseTimeToLiveResponse.keys)
}
inline const ::google::protobuf::RepeatedPtrField<::std::string>& LeaseTimeToLiveResponse::keys()
    const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_list:etcdserverpb.LeaseTimeToLiveResponse.keys)
  return _internal_keys();
}
inline ::google::protobuf::RepeatedPtrField<::std::string>* PROTOBUF_NONNULL
LeaseTimeToLiveResponse::mutable_keys() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable_list:etcdserverpb.LeaseTimeToLiveResponse.keys)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _internal_mutable_keys();
}
inline const ::google::protobuf::RepeatedPtrField<::std::string>&
LeaseTimeToLiveResponse::_internal_keys() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.keys_;
}
inline ::google::protobuf::RepeatedPtrField<::std::string>* PROTOBUF_NONNULL
LeaseTimeToLiveResponse::_internal_mutable_keys() {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return &_impl_.keys_;
}

// -------------------------------------------------------------------

// LeaseLeasesRequest

// -------------------------------------------------------------------

// LeaseStatus

// int64 ID = 1;
inline void LeaseStatus::clear_id() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.id_ = ::int64_t{0};
  _impl_._has_bits_[0] &= ~0x00000001u;
}
inline ::int64_t LeaseStatus::id() const {
  // @@protoc_insertion_point(field_get:etcdserverpb.LeaseStatus.ID)
  return _internal_id();
}
inline void LeaseStatus::set_id(::int64_t value) {
  _internal_set_id(value);
  _impl_._has_bits_[0] |= 0x00000001u;
  // @@protoc_insertion_point(field_set:etcdserverpb.LeaseStatus.ID)
}
inline ::int64_t LeaseStatus::_internal_id() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.id_;
}
inline void LeaseStatus::_internal_set_id(::int64_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.id_ = value;
}

// -------------------------------------------------------------------

// LeaseLeasesResponse

// .etcdserverpb.ResponseHeader header = 1;
inline bool LeaseLeasesResponse::has_header() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.header_ != nullptr);
  return value;
}
inline void LeaseLeasesResponse::clear_header() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.header_ != nullptr) _impl_.header_->Clear();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
inline const ::etcdserverpb::ResponseHeader& LeaseLeasesResponse::_internal_header() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  const ::etcdserverpb::ResponseHeader* p = _impl_.header_;
  return p != nullptr ? *p : reinterpret_cast<const ::etcdserverpb::ResponseHeader&>(::etcdserverpb::_ResponseHeader_default_instance_);
}
inline const ::etcdserverpb::ResponseHeader& LeaseLeasesResponse::header() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:etcdserverpb.LeaseLeasesResponse.header)
  return _internal_header();
}
inline void LeaseLeasesResponse::unsafe_arena_set_allocated_header(
    ::etcdserverpb::ResponseHeader* PROTOBUF_NULLABLE value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.header_);
  }
  _impl_.header_ = reinterpret_cast<::etcdserverpb::ResponseHeader*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:etcdserverpb.LeaseLeasesResponse.header)
}
inline ::etcdserverpb::ResponseHeader* PROTOBUF_NULLABLE LeaseLeasesResponse::release_header() {
  ::google::protobuf::internal::TSanWrite(&_impl_);

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::etcdserverpb::ResponseHeader* released = _impl_.header_;
  _impl_.header_ = nullptr;
  if (::google::protobuf::internal::DebugHardenForceCopyInRelease()) {
    auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    if (GetArena() == nullptr) {
      delete old;
    }
  } else {
    if (GetArena() != nullptr) {
      released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    }
  }
  return released;
}
inline ::etcdserverpb::ResponseHeader* PROTOBUF_NULLABLE LeaseLeasesResponse::unsafe_arena_release_header() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:etcdserverpb.LeaseLeasesResponse.header)

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::etcdserverpb::ResponseHeader* temp = _impl_.header_;
  _impl_.header_ = nullptr;
  return temp;
}
inline ::etcdserverpb::ResponseHeader* PROTOBUF_NONNULL LeaseLeasesResponse::_internal_mutable_header() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.header_ == nullptr) {
    auto* p = ::google::protobuf::Message::DefaultConstruct<::etcdserverpb::ResponseHeader>(GetArena());
    _impl_.header_ = reinterpret_cast<::etcdserverpb::ResponseHeader*>(p);
  }
  return _impl_.header_;
}
inline ::etcdserverpb::ResponseHeader* PROTOBUF_NONNULL LeaseLeasesResponse::mutable_header()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  _impl_._has_bits_[0] |= 0x00000001u;
  ::etcdserverpb::ResponseHeader* _msg = _internal_mutable_header();
  // @@protoc_insertion_point(field_mutable:etcdserverpb.LeaseLeasesResponse.header)
  return _msg;
}
inline void LeaseLeasesResponse::set_allocated_header(::etcdserverpb::ResponseHeader* PROTOBUF_NULLABLE value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (message_arena == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.header_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = value->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }

  _impl_.header_ = reinterpret_cast<::etcdserverpb::ResponseHeader*>(value);
  // @@protoc_insertion_point(field_set_allocated:etcdserverpb.LeaseLeasesResponse.header)
}

// repeated .etcdserverpb.LeaseStatus leases = 2;
inline int LeaseLeasesResponse::_internal_leases_size() const {
  return _internal_leases().size();
}
inline int LeaseLeasesResponse::leases_size() const {
  return _internal_leases_size();
}
inline void LeaseLeasesResponse::clear_leases() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.leases_.Clear();
}
inline ::etcdserverpb::LeaseStatus* PROTOBUF_NONNULL LeaseLeasesResponse::mutable_leases(int index)
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable:etcdserverpb.LeaseLeasesResponse.leases)
  return _internal_mutable_leases()->Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField<::etcdserverpb::LeaseStatus>* PROTOBUF_NONNULL LeaseLeasesResponse::mutable_leases()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable_list:etcdserverpb.LeaseLeasesResponse.leases)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _internal_mutable_leases();
}
inline const ::etcdserverpb::LeaseStatus& LeaseLeasesResponse::leases(int index) const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:etcdserverpb.LeaseLeasesResponse.leases)
  return _internal_leases().Get(index);
}
inline ::etcdserverpb::LeaseStatus* PROTOBUF_NONNULL LeaseLeasesResponse::add_leases()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::etcdserverpb::LeaseStatus* _add = _internal_mutable_leases()->Add();
  // @@protoc_insertion_point(field_add:etcdserverpb.LeaseLeasesResponse.leases)
  return _add;
}
inline const ::google::protobuf::RepeatedPtrField<::etcdserverpb::LeaseStatus>& LeaseLeasesResponse::leases() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_list:etcdserverpb.LeaseLeasesResponse.leases)
  return _internal_leases();
}
inline const ::google::protobuf::RepeatedPtrField<::etcdserverpb::LeaseStatus>&
LeaseLeasesResponse::_internal_leases() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.leases_;
}
inline ::google::protobuf::RepeatedPtrField<::etcdserverpb::LeaseStatus>* PROTOBUF_NONNULL
LeaseLeasesResponse::_internal_mutable_leases() {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return &_impl_.leases_;
}

#ifdef __GNUC__
#pragma GCC diagnostic pop
#endif  // __GNUC__

// @@protoc_insertion_point(namespace_scope)
}  // namespace etcdserverpb


namespace google {
namespace protobuf {

template <>
struct is_proto_enum<::etcdserverpb::RangeRequest_SortOrder> : std::true_type {};
template <>
inline const EnumDescriptor* PROTOBUF_NONNULL GetEnumDescriptor<::etcdserverpb::RangeRequest_SortOrder>() {
  return ::etcdserverpb::RangeRequest_SortOrder_descriptor();
}
template <>
struct is_proto_enum<::etcdserverpb::RangeRequest_SortTarget> : std::true_type {};
template <>
inline const EnumDescriptor* PROTOBUF_NONNULL GetEnumDescriptor<::etcdserverpb::RangeRequest_SortTarget>() {
  return ::etcdserverpb::RangeRequest_SortTarget_descriptor();
}
template <>
struct is_proto_enum<::etcdserverpb::Compare_CompareResult> : std::true_type {};
template <>
inline const EnumDescriptor* PROTOBUF_NONNULL GetEnumDescriptor<::etcdserverpb::Compare_CompareResult>() {
  return ::etcdserverpb::Compare_CompareResult_descriptor();
}
template <>
struct is_proto_enum<::etcdserverpb::Compare_CompareTarget> : std::true_type {};
template <>
inline const EnumDescriptor* PROTOBUF_NONNULL GetEnumDescriptor<::etcdserverpb::Compare_CompareTarget>() {
  return ::etcdserverpb::Compare_CompareTarget_descriptor();
}
template <>
struct is_proto_enum<::etcdserverpb::WatchCreateRequest_FilterType> : std::true_type {};
template <>
inline const EnumDescriptor* PROTOBUF_NONNULL GetEnumDescriptor<::etcdserverpb::WatchCreateRequest_FilterType>() {
  return ::etcdserverpb::WatchCreateRequest_FilterType_descriptor();
}

}  // namespace protobuf
}  // namespace google

// @@protoc_insertion_point(global_scope)

#include "google/protobuf/port_undef.inc"

#endif  // proto_2fmiddleware_2fetcd_2fetcd_2eproto_2epb_2eh
