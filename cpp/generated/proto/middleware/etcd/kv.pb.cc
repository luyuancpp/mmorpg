// Generated by the protocol buffer compiler.  DO NOT EDIT!
// NO CHECKED-IN PROTOBUF GENCODE
// source: proto/middleware/etcd/kv.proto
// Protobuf C++ Version: 6.31.1

#include "proto/middleware/etcd/kv.pb.h"

#include <algorithm>
#include <type_traits>
#include "google/protobuf/io/coded_stream.h"
#include "google/protobuf/generated_message_tctable_impl.h"
#include "google/protobuf/extension_set.h"
#include "google/protobuf/generated_message_util.h"
#include "google/protobuf/wire_format_lite.h"
#include "google/protobuf/descriptor.h"
#include "google/protobuf/generated_message_reflection.h"
#include "google/protobuf/reflection_ops.h"
#include "google/protobuf/wire_format.h"
// @@protoc_insertion_point(includes)

// Must be included last.
#include "google/protobuf/port_def.inc"
PROTOBUF_PRAGMA_INIT_SEG
namespace _pb = ::google::protobuf;
namespace _pbi = ::google::protobuf::internal;
namespace _fl = ::google::protobuf::internal::field_layout;
namespace mvccpb {

inline constexpr KeyValue::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        key_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        value_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        create_revision_{::int64_t{0}},
        mod_revision_{::int64_t{0}},
        version_{::int64_t{0}},
        lease_{::int64_t{0}} {}

template <typename>
PROTOBUF_CONSTEXPR KeyValue::KeyValue(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(KeyValue_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct KeyValueDefaultTypeInternal {
  PROTOBUF_CONSTEXPR KeyValueDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~KeyValueDefaultTypeInternal() {}
  union {
    KeyValue _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 KeyValueDefaultTypeInternal _KeyValue_default_instance_;

inline constexpr Event::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        kv_{nullptr},
        prev_kv_{nullptr},
        type_{static_cast< ::mvccpb::Event_EventType >(0)} {}

template <typename>
PROTOBUF_CONSTEXPR Event::Event(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(Event_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct EventDefaultTypeInternal {
  PROTOBUF_CONSTEXPR EventDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~EventDefaultTypeInternal() {}
  union {
    Event _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 EventDefaultTypeInternal _Event_default_instance_;
}  // namespace mvccpb
static const ::_pb::EnumDescriptor* PROTOBUF_NONNULL
    file_level_enum_descriptors_proto_2fmiddleware_2fetcd_2fkv_2eproto[1];
static constexpr const ::_pb::ServiceDescriptor *PROTOBUF_NONNULL *PROTOBUF_NULLABLE
    file_level_service_descriptors_proto_2fmiddleware_2fetcd_2fkv_2eproto = nullptr;
const ::uint32_t
    TableStruct_proto_2fmiddleware_2fetcd_2fkv_2eproto::offsets[] ABSL_ATTRIBUTE_SECTION_VARIABLE(
        protodesc_cold) = {
        0x081, // bitmap
        PROTOBUF_FIELD_OFFSET(::mvccpb::KeyValue, _impl_._has_bits_),
        9, // hasbit index offset
        PROTOBUF_FIELD_OFFSET(::mvccpb::KeyValue, _impl_.key_),
        PROTOBUF_FIELD_OFFSET(::mvccpb::KeyValue, _impl_.create_revision_),
        PROTOBUF_FIELD_OFFSET(::mvccpb::KeyValue, _impl_.mod_revision_),
        PROTOBUF_FIELD_OFFSET(::mvccpb::KeyValue, _impl_.version_),
        PROTOBUF_FIELD_OFFSET(::mvccpb::KeyValue, _impl_.value_),
        PROTOBUF_FIELD_OFFSET(::mvccpb::KeyValue, _impl_.lease_),
        0,
        2,
        3,
        4,
        1,
        5,
        0x081, // bitmap
        PROTOBUF_FIELD_OFFSET(::mvccpb::Event, _impl_._has_bits_),
        6, // hasbit index offset
        PROTOBUF_FIELD_OFFSET(::mvccpb::Event, _impl_.type_),
        PROTOBUF_FIELD_OFFSET(::mvccpb::Event, _impl_.kv_),
        PROTOBUF_FIELD_OFFSET(::mvccpb::Event, _impl_.prev_kv_),
        2,
        0,
        1,
};

static const ::_pbi::MigrationSchema
    schemas[] ABSL_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
        {0, sizeof(::mvccpb::KeyValue)},
        {15, sizeof(::mvccpb::Event)},
};
static const ::_pb::Message* PROTOBUF_NONNULL const file_default_instances[] = {
    &::mvccpb::_KeyValue_default_instance_._instance,
    &::mvccpb::_Event_default_instance_._instance,
};
const char descriptor_table_protodef_proto_2fmiddleware_2fetcd_2fkv_2eproto[] ABSL_ATTRIBUTE_SECTION_VARIABLE(
    protodesc_cold) = {
    "\n\036proto/middleware/etcd/kv.proto\022\006mvccpb"
    "\"u\n\010KeyValue\022\013\n\003key\030\001 \001(\014\022\027\n\017create_revi"
    "sion\030\002 \001(\003\022\024\n\014mod_revision\030\003 \001(\003\022\017\n\007vers"
    "ion\030\004 \001(\003\022\r\n\005value\030\005 \001(\014\022\r\n\005lease\030\006 \001(\003\""
    "\221\001\n\005Event\022%\n\004type\030\001 \001(\0162\027.mvccpb.Event.E"
    "ventType\022\034\n\002kv\030\002 \001(\0132\020.mvccpb.KeyValue\022!"
    "\n\007prev_kv\030\003 \001(\0132\020.mvccpb.KeyValue\" \n\tEve"
    "ntType\022\007\n\003PUT\020\000\022\n\n\006DELETE\020\001b\006proto3"
};
static ::absl::once_flag descriptor_table_proto_2fmiddleware_2fetcd_2fkv_2eproto_once;
PROTOBUF_CONSTINIT const ::_pbi::DescriptorTable descriptor_table_proto_2fmiddleware_2fetcd_2fkv_2eproto = {
    false,
    false,
    315,
    descriptor_table_protodef_proto_2fmiddleware_2fetcd_2fkv_2eproto,
    "proto/middleware/etcd/kv.proto",
    &descriptor_table_proto_2fmiddleware_2fetcd_2fkv_2eproto_once,
    nullptr,
    0,
    2,
    schemas,
    file_default_instances,
    TableStruct_proto_2fmiddleware_2fetcd_2fkv_2eproto::offsets,
    file_level_enum_descriptors_proto_2fmiddleware_2fetcd_2fkv_2eproto,
    file_level_service_descriptors_proto_2fmiddleware_2fetcd_2fkv_2eproto,
};
namespace mvccpb {
const ::google::protobuf::EnumDescriptor* PROTOBUF_NONNULL Event_EventType_descriptor() {
  ::google::protobuf::internal::AssignDescriptors(&descriptor_table_proto_2fmiddleware_2fetcd_2fkv_2eproto);
  return file_level_enum_descriptors_proto_2fmiddleware_2fetcd_2fkv_2eproto[0];
}
PROTOBUF_CONSTINIT const uint32_t Event_EventType_internal_data_[] = {
    131072u, 0u, };
// ===================================================================

class KeyValue::_Internal {
 public:
  using HasBits =
      decltype(::std::declval<KeyValue>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
      8 * PROTOBUF_FIELD_OFFSET(KeyValue, _impl_._has_bits_);
};

KeyValue::KeyValue(::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, KeyValue_class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:mvccpb.KeyValue)
}
PROTOBUF_NDEBUG_INLINE KeyValue::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const Impl_& from,
    const ::mvccpb::KeyValue& from_msg)
      : _has_bits_{from._has_bits_},
        _cached_size_{0},
        key_(arena, from.key_),
        value_(arena, from.value_) {}

KeyValue::KeyValue(
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena,
    const KeyValue& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, KeyValue_class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  KeyValue* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);
  ::memcpy(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, create_revision_),
           reinterpret_cast<const char *>(&from._impl_) +
               offsetof(Impl_, create_revision_),
           offsetof(Impl_, lease_) -
               offsetof(Impl_, create_revision_) +
               sizeof(Impl_::lease_));

  // @@protoc_insertion_point(copy_constructor:mvccpb.KeyValue)
}
PROTOBUF_NDEBUG_INLINE KeyValue::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
      : _cached_size_{0},
        key_(arena),
        value_(arena) {}

inline void KeyValue::SharedCtor(::_pb::Arena* PROTOBUF_NULLABLE arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, create_revision_),
           0,
           offsetof(Impl_, lease_) -
               offsetof(Impl_, create_revision_) +
               sizeof(Impl_::lease_));
}
KeyValue::~KeyValue() {
  // @@protoc_insertion_point(destructor:mvccpb.KeyValue)
  SharedDtor(*this);
}
inline void KeyValue::SharedDtor(MessageLite& self) {
  KeyValue& this_ = static_cast<KeyValue&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  this_._impl_.key_.Destroy();
  this_._impl_.value_.Destroy();
  this_._impl_.~Impl_();
}

inline void* PROTOBUF_NONNULL KeyValue::PlacementNew_(
    const void* PROTOBUF_NONNULL, void* PROTOBUF_NONNULL mem,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena) {
  return ::new (mem) KeyValue(arena);
}
constexpr auto KeyValue::InternalNewImpl_() {
  return ::google::protobuf::internal::MessageCreator::CopyInit(sizeof(KeyValue),
                                            alignof(KeyValue));
}
constexpr auto KeyValue::InternalGenerateClassData_() {
  return ::google::protobuf::internal::ClassDataFull{
      ::google::protobuf::internal::ClassData{
          &_KeyValue_default_instance_._instance,
          &_table_.header,
          nullptr,  // OnDemandRegisterArenaDtor
          nullptr,  // IsInitialized
          &KeyValue::MergeImpl,
          ::google::protobuf::Message::GetNewImpl<KeyValue>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
          &KeyValue::SharedDtor,
          ::google::protobuf::Message::GetClearImpl<KeyValue>(), &KeyValue::ByteSizeLong,
              &KeyValue::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
          PROTOBUF_FIELD_OFFSET(KeyValue, _impl_._cached_size_),
          false,
      },
      &KeyValue::kDescriptorMethods,
      &descriptor_table_proto_2fmiddleware_2fetcd_2fkv_2eproto,
      nullptr,  // tracker
  };
}

PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 const
    ::google::protobuf::internal::ClassDataFull KeyValue_class_data_ =
        KeyValue::InternalGenerateClassData_();

PROTOBUF_ATTRIBUTE_WEAK const ::google::protobuf::internal::ClassData* PROTOBUF_NONNULL
KeyValue::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&KeyValue_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(KeyValue_class_data_.tc_table);
  return KeyValue_class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<3, 6, 0, 0, 2>
KeyValue::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(KeyValue, _impl_._has_bits_),
    0, // no _extensions_
    6, 56,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967232,  // skipmap
    offsetof(decltype(_table_), field_entries),
    6,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    KeyValue_class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::mvccpb::KeyValue>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
    // bytes key = 1;
    {::_pbi::TcParser::FastBS1,
     {10, 0, 0, PROTOBUF_FIELD_OFFSET(KeyValue, _impl_.key_)}},
    // int64 create_revision = 2;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint64_t, offsetof(KeyValue, _impl_.create_revision_), 2>(),
     {16, 2, 0, PROTOBUF_FIELD_OFFSET(KeyValue, _impl_.create_revision_)}},
    // int64 mod_revision = 3;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint64_t, offsetof(KeyValue, _impl_.mod_revision_), 3>(),
     {24, 3, 0, PROTOBUF_FIELD_OFFSET(KeyValue, _impl_.mod_revision_)}},
    // int64 version = 4;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint64_t, offsetof(KeyValue, _impl_.version_), 4>(),
     {32, 4, 0, PROTOBUF_FIELD_OFFSET(KeyValue, _impl_.version_)}},
    // bytes value = 5;
    {::_pbi::TcParser::FastBS1,
     {42, 1, 0, PROTOBUF_FIELD_OFFSET(KeyValue, _impl_.value_)}},
    // int64 lease = 6;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint64_t, offsetof(KeyValue, _impl_.lease_), 5>(),
     {48, 5, 0, PROTOBUF_FIELD_OFFSET(KeyValue, _impl_.lease_)}},
    {::_pbi::TcParser::MiniParse, {}},
  }}, {{
    65535, 65535
  }}, {{
    // bytes key = 1;
    {PROTOBUF_FIELD_OFFSET(KeyValue, _impl_.key_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kBytes | ::_fl::kRepAString)},
    // int64 create_revision = 2;
    {PROTOBUF_FIELD_OFFSET(KeyValue, _impl_.create_revision_), _Internal::kHasBitsOffset + 2, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kInt64)},
    // int64 mod_revision = 3;
    {PROTOBUF_FIELD_OFFSET(KeyValue, _impl_.mod_revision_), _Internal::kHasBitsOffset + 3, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kInt64)},
    // int64 version = 4;
    {PROTOBUF_FIELD_OFFSET(KeyValue, _impl_.version_), _Internal::kHasBitsOffset + 4, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kInt64)},
    // bytes value = 5;
    {PROTOBUF_FIELD_OFFSET(KeyValue, _impl_.value_), _Internal::kHasBitsOffset + 1, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kBytes | ::_fl::kRepAString)},
    // int64 lease = 6;
    {PROTOBUF_FIELD_OFFSET(KeyValue, _impl_.lease_), _Internal::kHasBitsOffset + 5, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kInt64)},
  }},
  // no aux_entries
  {{
  }},
};
PROTOBUF_NOINLINE void KeyValue::Clear() {
// @@protoc_insertion_point(message_clear_start:mvccpb.KeyValue)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if ((cached_has_bits & 0x00000003u) != 0) {
    if ((cached_has_bits & 0x00000001u) != 0) {
      _impl_.key_.ClearNonDefaultToEmpty();
    }
    if ((cached_has_bits & 0x00000002u) != 0) {
      _impl_.value_.ClearNonDefaultToEmpty();
    }
  }
  if ((cached_has_bits & 0x0000003cu) != 0) {
    ::memset(&_impl_.create_revision_, 0, static_cast<::size_t>(
        reinterpret_cast<char*>(&_impl_.lease_) -
        reinterpret_cast<char*>(&_impl_.create_revision_)) + sizeof(_impl_.lease_));
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::uint8_t* PROTOBUF_NONNULL KeyValue::_InternalSerialize(
    const ::google::protobuf::MessageLite& base, ::uint8_t* PROTOBUF_NONNULL target,
    ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) {
  const KeyValue& this_ = static_cast<const KeyValue&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::uint8_t* PROTOBUF_NONNULL KeyValue::_InternalSerialize(
    ::uint8_t* PROTOBUF_NONNULL target,
    ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const {
  const KeyValue& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
  // @@protoc_insertion_point(serialize_to_array_start:mvccpb.KeyValue)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  // bytes key = 1;
  if ((this_._impl_._has_bits_[0] & 0x00000001u) != 0) {
    if (!this_._internal_key().empty()) {
      const ::std::string& _s = this_._internal_key();
      target = stream->WriteBytesMaybeAliased(1, _s, target);
    }
  }

  // int64 create_revision = 2;
  if ((this_._impl_._has_bits_[0] & 0x00000004u) != 0) {
    if (this_._internal_create_revision() != 0) {
      target =
          ::google::protobuf::internal::WireFormatLite::WriteInt64ToArrayWithField<2>(
              stream, this_._internal_create_revision(), target);
    }
  }

  // int64 mod_revision = 3;
  if ((this_._impl_._has_bits_[0] & 0x00000008u) != 0) {
    if (this_._internal_mod_revision() != 0) {
      target =
          ::google::protobuf::internal::WireFormatLite::WriteInt64ToArrayWithField<3>(
              stream, this_._internal_mod_revision(), target);
    }
  }

  // int64 version = 4;
  if ((this_._impl_._has_bits_[0] & 0x00000010u) != 0) {
    if (this_._internal_version() != 0) {
      target =
          ::google::protobuf::internal::WireFormatLite::WriteInt64ToArrayWithField<4>(
              stream, this_._internal_version(), target);
    }
  }

  // bytes value = 5;
  if ((this_._impl_._has_bits_[0] & 0x00000002u) != 0) {
    if (!this_._internal_value().empty()) {
      const ::std::string& _s = this_._internal_value();
      target = stream->WriteBytesMaybeAliased(5, _s, target);
    }
  }

  // int64 lease = 6;
  if ((this_._impl_._has_bits_[0] & 0x00000020u) != 0) {
    if (this_._internal_lease() != 0) {
      target =
          ::google::protobuf::internal::WireFormatLite::WriteInt64ToArrayWithField<6>(
              stream, this_._internal_lease(), target);
    }
  }

  if (ABSL_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:mvccpb.KeyValue)
  return target;
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::size_t KeyValue::ByteSizeLong(const MessageLite& base) {
  const KeyValue& this_ = static_cast<const KeyValue&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::size_t KeyValue::ByteSizeLong() const {
  const KeyValue& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
  // @@protoc_insertion_point(message_byte_size_start:mvccpb.KeyValue)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void)cached_has_bits;

  ::_pbi::Prefetch5LinesFrom7Lines(&this_);
  cached_has_bits = this_._impl_._has_bits_[0];
  if ((cached_has_bits & 0x0000003fu) != 0) {
    // bytes key = 1;
    if ((cached_has_bits & 0x00000001u) != 0) {
      if (!this_._internal_key().empty()) {
        total_size += 1 + ::google::protobuf::internal::WireFormatLite::BytesSize(
                                        this_._internal_key());
      }
    }
    // bytes value = 5;
    if ((cached_has_bits & 0x00000002u) != 0) {
      if (!this_._internal_value().empty()) {
        total_size += 1 + ::google::protobuf::internal::WireFormatLite::BytesSize(
                                        this_._internal_value());
      }
    }
    // int64 create_revision = 2;
    if ((cached_has_bits & 0x00000004u) != 0) {
      if (this_._internal_create_revision() != 0) {
        total_size += ::_pbi::WireFormatLite::Int64SizePlusOne(
            this_._internal_create_revision());
      }
    }
    // int64 mod_revision = 3;
    if ((cached_has_bits & 0x00000008u) != 0) {
      if (this_._internal_mod_revision() != 0) {
        total_size += ::_pbi::WireFormatLite::Int64SizePlusOne(
            this_._internal_mod_revision());
      }
    }
    // int64 version = 4;
    if ((cached_has_bits & 0x00000010u) != 0) {
      if (this_._internal_version() != 0) {
        total_size += ::_pbi::WireFormatLite::Int64SizePlusOne(
            this_._internal_version());
      }
    }
    // int64 lease = 6;
    if ((cached_has_bits & 0x00000020u) != 0) {
      if (this_._internal_lease() != 0) {
        total_size += ::_pbi::WireFormatLite::Int64SizePlusOne(
            this_._internal_lease());
      }
    }
  }
  return this_.MaybeComputeUnknownFieldsSize(total_size,
                                             &this_._impl_._cached_size_);
}

void KeyValue::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<KeyValue*>(&to_msg);
  auto& from = static_cast<const KeyValue&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:mvccpb.KeyValue)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._impl_._has_bits_[0];
  if ((cached_has_bits & 0x0000003fu) != 0) {
    if ((cached_has_bits & 0x00000001u) != 0) {
      if (!from._internal_key().empty()) {
        _this->_internal_set_key(from._internal_key());
      } else {
        if (_this->_impl_.key_.IsDefault()) {
          _this->_internal_set_key("");
        }
      }
    }
    if ((cached_has_bits & 0x00000002u) != 0) {
      if (!from._internal_value().empty()) {
        _this->_internal_set_value(from._internal_value());
      } else {
        if (_this->_impl_.value_.IsDefault()) {
          _this->_internal_set_value("");
        }
      }
    }
    if ((cached_has_bits & 0x00000004u) != 0) {
      if (from._internal_create_revision() != 0) {
        _this->_impl_.create_revision_ = from._impl_.create_revision_;
      }
    }
    if ((cached_has_bits & 0x00000008u) != 0) {
      if (from._internal_mod_revision() != 0) {
        _this->_impl_.mod_revision_ = from._impl_.mod_revision_;
      }
    }
    if ((cached_has_bits & 0x00000010u) != 0) {
      if (from._internal_version() != 0) {
        _this->_impl_.version_ = from._impl_.version_;
      }
    }
    if ((cached_has_bits & 0x00000020u) != 0) {
      if (from._internal_lease() != 0) {
        _this->_impl_.lease_ = from._impl_.lease_;
      }
    }
  }
  _this->_impl_._has_bits_[0] |= cached_has_bits;
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void KeyValue::CopyFrom(const KeyValue& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:mvccpb.KeyValue)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void KeyValue::InternalSwap(KeyValue* PROTOBUF_RESTRICT PROTOBUF_NONNULL other) {
  using ::std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.key_, &other->_impl_.key_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.value_, &other->_impl_.value_, arena);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(KeyValue, _impl_.lease_)
      + sizeof(KeyValue::_impl_.lease_)
      - PROTOBUF_FIELD_OFFSET(KeyValue, _impl_.create_revision_)>(
          reinterpret_cast<char*>(&_impl_.create_revision_),
          reinterpret_cast<char*>(&other->_impl_.create_revision_));
}

::google::protobuf::Metadata KeyValue::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class Event::_Internal {
 public:
  using HasBits =
      decltype(::std::declval<Event>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
      8 * PROTOBUF_FIELD_OFFSET(Event, _impl_._has_bits_);
};

Event::Event(::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, Event_class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:mvccpb.Event)
}
PROTOBUF_NDEBUG_INLINE Event::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const Impl_& from,
    const ::mvccpb::Event& from_msg)
      : _has_bits_{from._has_bits_},
        _cached_size_{0} {}

Event::Event(
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena,
    const Event& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, Event_class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  Event* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);
  ::uint32_t cached_has_bits = _impl_._has_bits_[0];
  _impl_.kv_ = ((cached_has_bits & 0x00000001u) != 0)
                ? ::google::protobuf::Message::CopyConstruct(arena, *from._impl_.kv_)
                : nullptr;
  _impl_.prev_kv_ = ((cached_has_bits & 0x00000002u) != 0)
                ? ::google::protobuf::Message::CopyConstruct(arena, *from._impl_.prev_kv_)
                : nullptr;
  _impl_.type_ = from._impl_.type_;

  // @@protoc_insertion_point(copy_constructor:mvccpb.Event)
}
PROTOBUF_NDEBUG_INLINE Event::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
      : _cached_size_{0} {}

inline void Event::SharedCtor(::_pb::Arena* PROTOBUF_NULLABLE arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, kv_),
           0,
           offsetof(Impl_, type_) -
               offsetof(Impl_, kv_) +
               sizeof(Impl_::type_));
}
Event::~Event() {
  // @@protoc_insertion_point(destructor:mvccpb.Event)
  SharedDtor(*this);
}
inline void Event::SharedDtor(MessageLite& self) {
  Event& this_ = static_cast<Event&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  delete this_._impl_.kv_;
  delete this_._impl_.prev_kv_;
  this_._impl_.~Impl_();
}

inline void* PROTOBUF_NONNULL Event::PlacementNew_(
    const void* PROTOBUF_NONNULL, void* PROTOBUF_NONNULL mem,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena) {
  return ::new (mem) Event(arena);
}
constexpr auto Event::InternalNewImpl_() {
  return ::google::protobuf::internal::MessageCreator::ZeroInit(sizeof(Event),
                                            alignof(Event));
}
constexpr auto Event::InternalGenerateClassData_() {
  return ::google::protobuf::internal::ClassDataFull{
      ::google::protobuf::internal::ClassData{
          &_Event_default_instance_._instance,
          &_table_.header,
          nullptr,  // OnDemandRegisterArenaDtor
          nullptr,  // IsInitialized
          &Event::MergeImpl,
          ::google::protobuf::Message::GetNewImpl<Event>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
          &Event::SharedDtor,
          ::google::protobuf::Message::GetClearImpl<Event>(), &Event::ByteSizeLong,
              &Event::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
          PROTOBUF_FIELD_OFFSET(Event, _impl_._cached_size_),
          false,
      },
      &Event::kDescriptorMethods,
      &descriptor_table_proto_2fmiddleware_2fetcd_2fkv_2eproto,
      nullptr,  // tracker
  };
}

PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 const
    ::google::protobuf::internal::ClassDataFull Event_class_data_ =
        Event::InternalGenerateClassData_();

PROTOBUF_ATTRIBUTE_WEAK const ::google::protobuf::internal::ClassData* PROTOBUF_NONNULL
Event::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&Event_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(Event_class_data_.tc_table);
  return Event_class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<2, 3, 2, 0, 2>
Event::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(Event, _impl_._has_bits_),
    0, // no _extensions_
    3, 24,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967288,  // skipmap
    offsetof(decltype(_table_), field_entries),
    3,  // num_field_entries
    2,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    Event_class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::mvccpb::Event>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
    // .mvccpb.Event.EventType type = 1;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(Event, _impl_.type_), 2>(),
     {8, 2, 0, PROTOBUF_FIELD_OFFSET(Event, _impl_.type_)}},
    // .mvccpb.KeyValue kv = 2;
    {::_pbi::TcParser::FastMtS1,
     {18, 0, 0, PROTOBUF_FIELD_OFFSET(Event, _impl_.kv_)}},
    // .mvccpb.KeyValue prev_kv = 3;
    {::_pbi::TcParser::FastMtS1,
     {26, 1, 1, PROTOBUF_FIELD_OFFSET(Event, _impl_.prev_kv_)}},
  }}, {{
    65535, 65535
  }}, {{
    // .mvccpb.Event.EventType type = 1;
    {PROTOBUF_FIELD_OFFSET(Event, _impl_.type_), _Internal::kHasBitsOffset + 2, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kOpenEnum)},
    // .mvccpb.KeyValue kv = 2;
    {PROTOBUF_FIELD_OFFSET(Event, _impl_.kv_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
    // .mvccpb.KeyValue prev_kv = 3;
    {PROTOBUF_FIELD_OFFSET(Event, _impl_.prev_kv_), _Internal::kHasBitsOffset + 1, 1,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
  }},
  {{
      {::_pbi::TcParser::GetTable<::mvccpb::KeyValue>()},
      {::_pbi::TcParser::GetTable<::mvccpb::KeyValue>()},
  }},
  {{
  }},
};
PROTOBUF_NOINLINE void Event::Clear() {
// @@protoc_insertion_point(message_clear_start:mvccpb.Event)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if ((cached_has_bits & 0x00000003u) != 0) {
    if ((cached_has_bits & 0x00000001u) != 0) {
      ABSL_DCHECK(_impl_.kv_ != nullptr);
      _impl_.kv_->Clear();
    }
    if ((cached_has_bits & 0x00000002u) != 0) {
      ABSL_DCHECK(_impl_.prev_kv_ != nullptr);
      _impl_.prev_kv_->Clear();
    }
  }
  _impl_.type_ = 0;
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::uint8_t* PROTOBUF_NONNULL Event::_InternalSerialize(
    const ::google::protobuf::MessageLite& base, ::uint8_t* PROTOBUF_NONNULL target,
    ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) {
  const Event& this_ = static_cast<const Event&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::uint8_t* PROTOBUF_NONNULL Event::_InternalSerialize(
    ::uint8_t* PROTOBUF_NONNULL target,
    ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const {
  const Event& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
  // @@protoc_insertion_point(serialize_to_array_start:mvccpb.Event)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  // .mvccpb.Event.EventType type = 1;
  if ((this_._impl_._has_bits_[0] & 0x00000004u) != 0) {
    if (this_._internal_type() != 0) {
      target = stream->EnsureSpace(target);
      target = ::_pbi::WireFormatLite::WriteEnumToArray(
          1, this_._internal_type(), target);
    }
  }

  cached_has_bits = this_._impl_._has_bits_[0];
  // .mvccpb.KeyValue kv = 2;
  if ((cached_has_bits & 0x00000001u) != 0) {
    target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
        2, *this_._impl_.kv_, this_._impl_.kv_->GetCachedSize(), target,
        stream);
  }

  // .mvccpb.KeyValue prev_kv = 3;
  if ((cached_has_bits & 0x00000002u) != 0) {
    target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
        3, *this_._impl_.prev_kv_, this_._impl_.prev_kv_->GetCachedSize(), target,
        stream);
  }

  if (ABSL_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:mvccpb.Event)
  return target;
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::size_t Event::ByteSizeLong(const MessageLite& base) {
  const Event& this_ = static_cast<const Event&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::size_t Event::ByteSizeLong() const {
  const Event& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
  // @@protoc_insertion_point(message_byte_size_start:mvccpb.Event)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void)cached_has_bits;

  ::_pbi::Prefetch5LinesFrom7Lines(&this_);
  cached_has_bits = this_._impl_._has_bits_[0];
  if ((cached_has_bits & 0x00000007u) != 0) {
    // .mvccpb.KeyValue kv = 2;
    if ((cached_has_bits & 0x00000001u) != 0) {
      total_size += 1 +
                    ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.kv_);
    }
    // .mvccpb.KeyValue prev_kv = 3;
    if ((cached_has_bits & 0x00000002u) != 0) {
      total_size += 1 +
                    ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.prev_kv_);
    }
    // .mvccpb.Event.EventType type = 1;
    if ((cached_has_bits & 0x00000004u) != 0) {
      if (this_._internal_type() != 0) {
        total_size += 1 +
                      ::_pbi::WireFormatLite::EnumSize(this_._internal_type());
      }
    }
  }
  return this_.MaybeComputeUnknownFieldsSize(total_size,
                                             &this_._impl_._cached_size_);
}

void Event::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<Event*>(&to_msg);
  auto& from = static_cast<const Event&>(from_msg);
  ::google::protobuf::Arena* arena = _this->GetArena();
  // @@protoc_insertion_point(class_specific_merge_from_start:mvccpb.Event)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._impl_._has_bits_[0];
  if ((cached_has_bits & 0x00000007u) != 0) {
    if ((cached_has_bits & 0x00000001u) != 0) {
      ABSL_DCHECK(from._impl_.kv_ != nullptr);
      if (_this->_impl_.kv_ == nullptr) {
        _this->_impl_.kv_ = ::google::protobuf::Message::CopyConstruct(arena, *from._impl_.kv_);
      } else {
        _this->_impl_.kv_->MergeFrom(*from._impl_.kv_);
      }
    }
    if ((cached_has_bits & 0x00000002u) != 0) {
      ABSL_DCHECK(from._impl_.prev_kv_ != nullptr);
      if (_this->_impl_.prev_kv_ == nullptr) {
        _this->_impl_.prev_kv_ = ::google::protobuf::Message::CopyConstruct(arena, *from._impl_.prev_kv_);
      } else {
        _this->_impl_.prev_kv_->MergeFrom(*from._impl_.prev_kv_);
      }
    }
    if ((cached_has_bits & 0x00000004u) != 0) {
      if (from._internal_type() != 0) {
        _this->_impl_.type_ = from._impl_.type_;
      }
    }
  }
  _this->_impl_._has_bits_[0] |= cached_has_bits;
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void Event::CopyFrom(const Event& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:mvccpb.Event)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void Event::InternalSwap(Event* PROTOBUF_RESTRICT PROTOBUF_NONNULL other) {
  using ::std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(Event, _impl_.type_)
      + sizeof(Event::_impl_.type_)
      - PROTOBUF_FIELD_OFFSET(Event, _impl_.kv_)>(
          reinterpret_cast<char*>(&_impl_.kv_),
          reinterpret_cast<char*>(&other->_impl_.kv_));
}

::google::protobuf::Metadata Event::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// @@protoc_insertion_point(namespace_scope)
}  // namespace mvccpb
namespace google {
namespace protobuf {
}  // namespace protobuf
}  // namespace google
// @@protoc_insertion_point(global_scope)
PROTOBUF_ATTRIBUTE_INIT_PRIORITY2 static ::std::false_type
    _static_init2_ [[maybe_unused]] =
        (::_pbi::AddDescriptors(&descriptor_table_proto_2fmiddleware_2fetcd_2fkv_2eproto),
         ::std::false_type{});
#include "google/protobuf/port_undef.inc"
