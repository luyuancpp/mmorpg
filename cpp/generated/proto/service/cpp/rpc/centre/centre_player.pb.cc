// Generated by the protocol buffer compiler.  DO NOT EDIT!
// NO CHECKED-IN PROTOBUF GENCODE
// source: proto/service/cpp/rpc/centre/centre_player.proto
// Protobuf C++ Version: 6.31.1

#include "proto/service/cpp/rpc/centre/centre_player.pb.h"

#include <algorithm>
#include <type_traits>
#include "google/protobuf/io/coded_stream.h"
#include "google/protobuf/generated_message_tctable_impl.h"
#include "google/protobuf/extension_set.h"
#include "google/protobuf/generated_message_util.h"
#include "google/protobuf/wire_format_lite.h"
#include "google/protobuf/descriptor.h"
#include "google/protobuf/generated_message_reflection.h"
#include "google/protobuf/reflection_ops.h"
#include "google/protobuf/wire_format.h"
// @@protoc_insertion_point(includes)

// Must be included last.
#include "google/protobuf/port_def.inc"
PROTOBUF_PRAGMA_INIT_SEG
namespace _pb = ::google::protobuf;
namespace _pbi = ::google::protobuf::internal;
namespace _fl = ::google::protobuf::internal::field_layout;

inline constexpr CentreKickPlayerRequest::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        operator__(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        reason_{nullptr} {}

template <typename>
PROTOBUF_CONSTEXPR CentreKickPlayerRequest::CentreKickPlayerRequest(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(CentreKickPlayerRequest_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct CentreKickPlayerRequestDefaultTypeInternal {
  PROTOBUF_CONSTEXPR CentreKickPlayerRequestDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~CentreKickPlayerRequestDefaultTypeInternal() {}
  union {
    CentreKickPlayerRequest _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 CentreKickPlayerRequestDefaultTypeInternal _CentreKickPlayerRequest_default_instance_;
static constexpr const ::_pb::EnumDescriptor *PROTOBUF_NONNULL *PROTOBUF_NULLABLE
    file_level_enum_descriptors_proto_2fservice_2fcpp_2frpc_2fcentre_2fcentre_5fplayer_2eproto = nullptr;
static const ::_pb::ServiceDescriptor* PROTOBUF_NONNULL
    file_level_service_descriptors_proto_2fservice_2fcpp_2frpc_2fcentre_2fcentre_5fplayer_2eproto[1];
const ::uint32_t
    TableStruct_proto_2fservice_2fcpp_2frpc_2fcentre_2fcentre_5fplayer_2eproto::offsets[] ABSL_ATTRIBUTE_SECTION_VARIABLE(
        protodesc_cold) = {
        0x081, // bitmap
        PROTOBUF_FIELD_OFFSET(::CentreKickPlayerRequest, _impl_._has_bits_),
        5, // hasbit index offset
        PROTOBUF_FIELD_OFFSET(::CentreKickPlayerRequest, _impl_.reason_),
        PROTOBUF_FIELD_OFFSET(::CentreKickPlayerRequest, _impl_.operator__),
        1,
        0,
};

static const ::_pbi::MigrationSchema
    schemas[] ABSL_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
        {0, sizeof(::CentreKickPlayerRequest)},
};
static const ::_pb::Message* PROTOBUF_NONNULL const file_default_instances[] = {
    &::_CentreKickPlayerRequest_default_instance_._instance,
};
const char descriptor_table_protodef_proto_2fservice_2fcpp_2frpc_2fcentre_2fcentre_5fplayer_2eproto[] ABSL_ATTRIBUTE_SECTION_VARIABLE(
    protodesc_cold) = {
    "\n0proto/service/cpp/rpc/centre/centre_pl"
    "ayer.proto\032\026proto/common/tip.proto\032\030prot"
    "o/common/empty.proto\"L\n\027CentreKickPlayer"
    "Request\022\037\n\006reason\030\001 \001(\0132\017.TipInfoMessage"
    "\022\020\n\010operator\030\002 \001(\t2q\n\023CentrePlayerUtilit"
    "y\022*\n\017SendTipToClient\022\017.TipInfoMessage\032\006."
    "Empty\022.\n\nKickPlayer\022\030.CentreKickPlayerRe"
    "quest\032\006.EmptyB\003\200\001\001b\006proto3"
};
static const ::_pbi::DescriptorTable* PROTOBUF_NONNULL const
    descriptor_table_proto_2fservice_2fcpp_2frpc_2fcentre_2fcentre_5fplayer_2eproto_deps[2] = {
        &::descriptor_table_proto_2fcommon_2fempty_2eproto,
        &::descriptor_table_proto_2fcommon_2ftip_2eproto,
};
static ::absl::once_flag descriptor_table_proto_2fservice_2fcpp_2frpc_2fcentre_2fcentre_5fplayer_2eproto_once;
PROTOBUF_CONSTINIT const ::_pbi::DescriptorTable descriptor_table_proto_2fservice_2fcpp_2frpc_2fcentre_2fcentre_5fplayer_2eproto = {
    false,
    false,
    306,
    descriptor_table_protodef_proto_2fservice_2fcpp_2frpc_2fcentre_2fcentre_5fplayer_2eproto,
    "proto/service/cpp/rpc/centre/centre_player.proto",
    &descriptor_table_proto_2fservice_2fcpp_2frpc_2fcentre_2fcentre_5fplayer_2eproto_once,
    descriptor_table_proto_2fservice_2fcpp_2frpc_2fcentre_2fcentre_5fplayer_2eproto_deps,
    2,
    1,
    schemas,
    file_default_instances,
    TableStruct_proto_2fservice_2fcpp_2frpc_2fcentre_2fcentre_5fplayer_2eproto::offsets,
    file_level_enum_descriptors_proto_2fservice_2fcpp_2frpc_2fcentre_2fcentre_5fplayer_2eproto,
    file_level_service_descriptors_proto_2fservice_2fcpp_2frpc_2fcentre_2fcentre_5fplayer_2eproto,
};
// ===================================================================

class CentreKickPlayerRequest::_Internal {
 public:
  using HasBits =
      decltype(::std::declval<CentreKickPlayerRequest>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
      8 * PROTOBUF_FIELD_OFFSET(CentreKickPlayerRequest, _impl_._has_bits_);
};

void CentreKickPlayerRequest::clear_reason() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.reason_ != nullptr) _impl_.reason_->Clear();
  _impl_._has_bits_[0] &= ~0x00000002u;
}
CentreKickPlayerRequest::CentreKickPlayerRequest(::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, CentreKickPlayerRequest_class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:CentreKickPlayerRequest)
}
PROTOBUF_NDEBUG_INLINE CentreKickPlayerRequest::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const Impl_& from,
    const ::CentreKickPlayerRequest& from_msg)
      : _has_bits_{from._has_bits_},
        _cached_size_{0},
        operator__(arena, from.operator__) {}

CentreKickPlayerRequest::CentreKickPlayerRequest(
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena,
    const CentreKickPlayerRequest& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, CentreKickPlayerRequest_class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  CentreKickPlayerRequest* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);
  ::uint32_t cached_has_bits = _impl_._has_bits_[0];
  _impl_.reason_ = ((cached_has_bits & 0x00000002u) != 0)
                ? ::google::protobuf::Message::CopyConstruct(arena, *from._impl_.reason_)
                : nullptr;

  // @@protoc_insertion_point(copy_constructor:CentreKickPlayerRequest)
}
PROTOBUF_NDEBUG_INLINE CentreKickPlayerRequest::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
      : _cached_size_{0},
        operator__(arena) {}

inline void CentreKickPlayerRequest::SharedCtor(::_pb::Arena* PROTOBUF_NULLABLE arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  _impl_.reason_ = {};
}
CentreKickPlayerRequest::~CentreKickPlayerRequest() {
  // @@protoc_insertion_point(destructor:CentreKickPlayerRequest)
  SharedDtor(*this);
}
inline void CentreKickPlayerRequest::SharedDtor(MessageLite& self) {
  CentreKickPlayerRequest& this_ = static_cast<CentreKickPlayerRequest&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  this_._impl_.operator__.Destroy();
  delete this_._impl_.reason_;
  this_._impl_.~Impl_();
}

inline void* PROTOBUF_NONNULL CentreKickPlayerRequest::PlacementNew_(
    const void* PROTOBUF_NONNULL, void* PROTOBUF_NONNULL mem,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena) {
  return ::new (mem) CentreKickPlayerRequest(arena);
}
constexpr auto CentreKickPlayerRequest::InternalNewImpl_() {
  return ::google::protobuf::internal::MessageCreator::CopyInit(sizeof(CentreKickPlayerRequest),
                                            alignof(CentreKickPlayerRequest));
}
constexpr auto CentreKickPlayerRequest::InternalGenerateClassData_() {
  return ::google::protobuf::internal::ClassDataFull{
      ::google::protobuf::internal::ClassData{
          &_CentreKickPlayerRequest_default_instance_._instance,
          &_table_.header,
          nullptr,  // OnDemandRegisterArenaDtor
          nullptr,  // IsInitialized
          &CentreKickPlayerRequest::MergeImpl,
          ::google::protobuf::Message::GetNewImpl<CentreKickPlayerRequest>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
          &CentreKickPlayerRequest::SharedDtor,
          ::google::protobuf::Message::GetClearImpl<CentreKickPlayerRequest>(), &CentreKickPlayerRequest::ByteSizeLong,
              &CentreKickPlayerRequest::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
          PROTOBUF_FIELD_OFFSET(CentreKickPlayerRequest, _impl_._cached_size_),
          false,
      },
      &CentreKickPlayerRequest::kDescriptorMethods,
      &descriptor_table_proto_2fservice_2fcpp_2frpc_2fcentre_2fcentre_5fplayer_2eproto,
      nullptr,  // tracker
  };
}

PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 const
    ::google::protobuf::internal::ClassDataFull CentreKickPlayerRequest_class_data_ =
        CentreKickPlayerRequest::InternalGenerateClassData_();

PROTOBUF_ATTRIBUTE_WEAK const ::google::protobuf::internal::ClassData* PROTOBUF_NONNULL
CentreKickPlayerRequest::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&CentreKickPlayerRequest_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(CentreKickPlayerRequest_class_data_.tc_table);
  return CentreKickPlayerRequest_class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<1, 2, 1, 40, 2>
CentreKickPlayerRequest::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(CentreKickPlayerRequest, _impl_._has_bits_),
    0, // no _extensions_
    2, 8,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967292,  // skipmap
    offsetof(decltype(_table_), field_entries),
    2,  // num_field_entries
    1,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    CentreKickPlayerRequest_class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::CentreKickPlayerRequest>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // string operator = 2;
    {::_pbi::TcParser::FastUS1,
     {18, 0, 0, PROTOBUF_FIELD_OFFSET(CentreKickPlayerRequest, _impl_.operator__)}},
    // .TipInfoMessage reason = 1;
    {::_pbi::TcParser::FastMtS1,
     {10, 1, 0, PROTOBUF_FIELD_OFFSET(CentreKickPlayerRequest, _impl_.reason_)}},
  }}, {{
    65535, 65535
  }}, {{
    // .TipInfoMessage reason = 1;
    {PROTOBUF_FIELD_OFFSET(CentreKickPlayerRequest, _impl_.reason_), _Internal::kHasBitsOffset + 1, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
    // string operator = 2;
    {PROTOBUF_FIELD_OFFSET(CentreKickPlayerRequest, _impl_.operator__), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kUtf8String | ::_fl::kRepAString)},
  }},
  {{
      {::_pbi::TcParser::GetTable<::TipInfoMessage>()},
  }},
  {{
    "\27\0\10\0\0\0\0\0"
    "CentreKickPlayerRequest"
    "operator"
  }},
};
PROTOBUF_NOINLINE void CentreKickPlayerRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:CentreKickPlayerRequest)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if ((cached_has_bits & 0x00000003u) != 0) {
    if ((cached_has_bits & 0x00000001u) != 0) {
      _impl_.operator__.ClearNonDefaultToEmpty();
    }
    if ((cached_has_bits & 0x00000002u) != 0) {
      ABSL_DCHECK(_impl_.reason_ != nullptr);
      _impl_.reason_->Clear();
    }
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::uint8_t* PROTOBUF_NONNULL CentreKickPlayerRequest::_InternalSerialize(
    const ::google::protobuf::MessageLite& base, ::uint8_t* PROTOBUF_NONNULL target,
    ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) {
  const CentreKickPlayerRequest& this_ = static_cast<const CentreKickPlayerRequest&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::uint8_t* PROTOBUF_NONNULL CentreKickPlayerRequest::_InternalSerialize(
    ::uint8_t* PROTOBUF_NONNULL target,
    ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const {
  const CentreKickPlayerRequest& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
  // @@protoc_insertion_point(serialize_to_array_start:CentreKickPlayerRequest)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  cached_has_bits = this_._impl_._has_bits_[0];
  // .TipInfoMessage reason = 1;
  if ((cached_has_bits & 0x00000002u) != 0) {
    target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
        1, *this_._impl_.reason_, this_._impl_.reason_->GetCachedSize(), target,
        stream);
  }

  // string operator = 2;
  if ((cached_has_bits & 0x00000001u) != 0) {
    if (!this_._internal_operator_().empty()) {
      const ::std::string& _s = this_._internal_operator_();
      ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
          _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "CentreKickPlayerRequest.operator");
      target = stream->WriteStringMaybeAliased(2, _s, target);
    }
  }

  if (ABSL_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CentreKickPlayerRequest)
  return target;
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::size_t CentreKickPlayerRequest::ByteSizeLong(const MessageLite& base) {
  const CentreKickPlayerRequest& this_ = static_cast<const CentreKickPlayerRequest&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::size_t CentreKickPlayerRequest::ByteSizeLong() const {
  const CentreKickPlayerRequest& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
  // @@protoc_insertion_point(message_byte_size_start:CentreKickPlayerRequest)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void)cached_has_bits;

  ::_pbi::Prefetch5LinesFrom7Lines(&this_);
  cached_has_bits = this_._impl_._has_bits_[0];
  if ((cached_has_bits & 0x00000003u) != 0) {
    // string operator = 2;
    if ((cached_has_bits & 0x00000001u) != 0) {
      if (!this_._internal_operator_().empty()) {
        total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                        this_._internal_operator_());
      }
    }
    // .TipInfoMessage reason = 1;
    if ((cached_has_bits & 0x00000002u) != 0) {
      total_size += 1 +
                    ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.reason_);
    }
  }
  return this_.MaybeComputeUnknownFieldsSize(total_size,
                                             &this_._impl_._cached_size_);
}

void CentreKickPlayerRequest::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<CentreKickPlayerRequest*>(&to_msg);
  auto& from = static_cast<const CentreKickPlayerRequest&>(from_msg);
  ::google::protobuf::Arena* arena = _this->GetArena();
  // @@protoc_insertion_point(class_specific_merge_from_start:CentreKickPlayerRequest)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._impl_._has_bits_[0];
  if ((cached_has_bits & 0x00000003u) != 0) {
    if ((cached_has_bits & 0x00000001u) != 0) {
      if (!from._internal_operator_().empty()) {
        _this->_internal_set_operator_(from._internal_operator_());
      } else {
        if (_this->_impl_.operator__.IsDefault()) {
          _this->_internal_set_operator_("");
        }
      }
    }
    if ((cached_has_bits & 0x00000002u) != 0) {
      ABSL_DCHECK(from._impl_.reason_ != nullptr);
      if (_this->_impl_.reason_ == nullptr) {
        _this->_impl_.reason_ = ::google::protobuf::Message::CopyConstruct(arena, *from._impl_.reason_);
      } else {
        _this->_impl_.reason_->MergeFrom(*from._impl_.reason_);
      }
    }
  }
  _this->_impl_._has_bits_[0] |= cached_has_bits;
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void CentreKickPlayerRequest::CopyFrom(const CentreKickPlayerRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CentreKickPlayerRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void CentreKickPlayerRequest::InternalSwap(CentreKickPlayerRequest* PROTOBUF_RESTRICT PROTOBUF_NONNULL other) {
  using ::std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.operator__, &other->_impl_.operator__, arena);
  swap(_impl_.reason_, other->_impl_.reason_);
}

::google::protobuf::Metadata CentreKickPlayerRequest::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

const ::google::protobuf::ServiceDescriptor* PROTOBUF_NONNULL CentrePlayerUtility::descriptor() {
  ::google::protobuf::internal::AssignDescriptors(&descriptor_table_proto_2fservice_2fcpp_2frpc_2fcentre_2fcentre_5fplayer_2eproto);
  return file_level_service_descriptors_proto_2fservice_2fcpp_2frpc_2fcentre_2fcentre_5fplayer_2eproto[0];
}

const ::google::protobuf::ServiceDescriptor* PROTOBUF_NONNULL CentrePlayerUtility::GetDescriptor() {
  return descriptor();
}

void CentrePlayerUtility::SendTipToClient(::google::protobuf::RpcController* PROTOBUF_NULLABLE controller,
                         const ::TipInfoMessage* PROTOBUF_NONNULL,
                         ::Empty* PROTOBUF_NONNULL,
                         ::google::protobuf::Closure* PROTOBUF_NULLABLE done) {
  controller->SetFailed("Method SendTipToClient() not implemented.");
  done->Run();
}
void CentrePlayerUtility::KickPlayer(::google::protobuf::RpcController* PROTOBUF_NULLABLE controller,
                         const ::CentreKickPlayerRequest* PROTOBUF_NONNULL,
                         ::Empty* PROTOBUF_NONNULL,
                         ::google::protobuf::Closure* PROTOBUF_NULLABLE done) {
  controller->SetFailed("Method KickPlayer() not implemented.");
  done->Run();
}

void CentrePlayerUtility::CallMethod(
    const ::google::protobuf::MethodDescriptor* PROTOBUF_NONNULL method,
    ::google::protobuf::RpcController* PROTOBUF_NULLABLE controller,
    const ::google::protobuf::Message* PROTOBUF_NONNULL request,
    ::google::protobuf::Message* PROTOBUF_NONNULL response, ::google::protobuf::Closure* PROTOBUF_NULLABLE done) {
  ABSL_DCHECK_EQ(method->service(), file_level_service_descriptors_proto_2fservice_2fcpp_2frpc_2fcentre_2fcentre_5fplayer_2eproto[0]);
  switch (method->index()) {
    case 0:
      this->SendTipToClient(controller, ::google::protobuf::DownCastMessage<::TipInfoMessage>(request),
                   ::google::protobuf::DownCastMessage<::Empty>(response), done);
      break;
    case 1:
      this->KickPlayer(controller, ::google::protobuf::DownCastMessage<::CentreKickPlayerRequest>(request),
                   ::google::protobuf::DownCastMessage<::Empty>(response), done);
      break;

    default:
      ABSL_LOG(FATAL) << "Bad method index; this should never happen.";
      break;
  }
}

const ::google::protobuf::Message& CentrePlayerUtility::GetRequestPrototype(
    const ::google::protobuf::MethodDescriptor* PROTOBUF_NONNULL method) const {
  ABSL_DCHECK_EQ(method->service(), descriptor());
  switch (method->index()) {
    case 0:
      return ::TipInfoMessage::default_instance();
    case 1:
      return ::CentreKickPlayerRequest::default_instance();

    default:
      ABSL_LOG(FATAL) << "Bad method index; this should never happen.";
      return *::google::protobuf::MessageFactory::generated_factory()->GetPrototype(
          method->input_type());
  }
}

const ::google::protobuf::Message& CentrePlayerUtility::GetResponsePrototype(
    const ::google::protobuf::MethodDescriptor* PROTOBUF_NONNULL method) const {
  ABSL_DCHECK_EQ(method->service(), descriptor());
  switch (method->index()) {
    case 0:
      return ::Empty::default_instance();
    case 1:
      return ::Empty::default_instance();

    default:
      ABSL_LOG(FATAL) << "Bad method index; this should never happen.";
      return *::google::protobuf::MessageFactory::generated_factory()->GetPrototype(
          method->output_type());
  }
}

CentrePlayerUtility_Stub::CentrePlayerUtility_Stub(::google::protobuf::RpcChannel* PROTOBUF_NULLABLE channel)
    : channel_(channel), owns_channel_(false) {}

CentrePlayerUtility_Stub::CentrePlayerUtility_Stub(
    ::google::protobuf::RpcChannel* PROTOBUF_NULLABLE channel,
    ::google::protobuf::Service::ChannelOwnership ownership)
    : channel_(channel),
      owns_channel_(ownership == ::google::protobuf::Service::STUB_OWNS_CHANNEL) {}

CentrePlayerUtility_Stub::~CentrePlayerUtility_Stub() {
  if (owns_channel_) delete channel_;
}

void CentrePlayerUtility_Stub::SendTipToClient(
    ::google::protobuf::RpcController* PROTOBUF_NULLABLE controller,
    const ::TipInfoMessage* PROTOBUF_NONNULL request, ::Empty* PROTOBUF_NONNULL response,
    ::google::protobuf::Closure* PROTOBUF_NULLABLE done) {
  channel_->CallMethod(descriptor()->method(0), controller,
                       request, response, done);
}
void CentrePlayerUtility_Stub::KickPlayer(
    ::google::protobuf::RpcController* PROTOBUF_NULLABLE controller,
    const ::CentreKickPlayerRequest* PROTOBUF_NONNULL request, ::Empty* PROTOBUF_NONNULL response,
    ::google::protobuf::Closure* PROTOBUF_NULLABLE done) {
  channel_->CallMethod(descriptor()->method(1), controller,
                       request, response, done);
}
// @@protoc_insertion_point(namespace_scope)
namespace google {
namespace protobuf {
}  // namespace protobuf
}  // namespace google
// @@protoc_insertion_point(global_scope)
PROTOBUF_ATTRIBUTE_INIT_PRIORITY2 static ::std::false_type
    _static_init2_ [[maybe_unused]] =
        (::_pbi::AddDescriptors(&descriptor_table_proto_2fservice_2fcpp_2frpc_2fcentre_2fcentre_5fplayer_2eproto),
         ::std::false_type{});
#include "google/protobuf/port_undef.inc"
