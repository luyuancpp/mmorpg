// Generated by the protocol buffer compiler.  DO NOT EDIT!
// NO CHECKED-IN PROTOBUF GENCODE
// source: proto/service/go/grpc/db/db_task.proto
// Protobuf C++ Version: 6.31.1

#include "proto/service/go/grpc/db/db_task.pb.h"

#include <algorithm>
#include <type_traits>
#include "google/protobuf/io/coded_stream.h"
#include "google/protobuf/generated_message_tctable_impl.h"
#include "google/protobuf/extension_set.h"
#include "google/protobuf/generated_message_util.h"
#include "google/protobuf/wire_format_lite.h"
#include "google/protobuf/descriptor.h"
#include "google/protobuf/generated_message_reflection.h"
#include "google/protobuf/reflection_ops.h"
#include "google/protobuf/wire_format.h"
// @@protoc_insertion_point(includes)

// Must be included last.
#include "google/protobuf/port_def.inc"
PROTOBUF_PRAGMA_INIT_SEG
namespace _pb = ::google::protobuf;
namespace _pbi = ::google::protobuf::internal;
namespace _fl = ::google::protobuf::internal::field_layout;
namespace taskpb {

inline constexpr TaskResult::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        data_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        error_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        success_{false} {}

template <typename>
PROTOBUF_CONSTEXPR TaskResult::TaskResult(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(TaskResult_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct TaskResultDefaultTypeInternal {
  PROTOBUF_CONSTEXPR TaskResultDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~TaskResultDefaultTypeInternal() {}
  union {
    TaskResult _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 TaskResultDefaultTypeInternal _TaskResult_default_instance_;

inline constexpr DBTask::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        where_case_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        op_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        msg_type_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        body_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        task_id_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        key_{::uint64_t{0u}} {}

template <typename>
PROTOBUF_CONSTEXPR DBTask::DBTask(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(DBTask_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct DBTaskDefaultTypeInternal {
  PROTOBUF_CONSTEXPR DBTaskDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~DBTaskDefaultTypeInternal() {}
  union {
    DBTask _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 DBTaskDefaultTypeInternal _DBTask_default_instance_;
}  // namespace taskpb
static constexpr const ::_pb::EnumDescriptor *PROTOBUF_NONNULL *PROTOBUF_NULLABLE
    file_level_enum_descriptors_proto_2fservice_2fgo_2fgrpc_2fdb_2fdb_5ftask_2eproto = nullptr;
static constexpr const ::_pb::ServiceDescriptor *PROTOBUF_NONNULL *PROTOBUF_NULLABLE
    file_level_service_descriptors_proto_2fservice_2fgo_2fgrpc_2fdb_2fdb_5ftask_2eproto = nullptr;
const ::uint32_t
    TableStruct_proto_2fservice_2fgo_2fgrpc_2fdb_2fdb_5ftask_2eproto::offsets[] ABSL_ATTRIBUTE_SECTION_VARIABLE(
        protodesc_cold) = {
        0x081, // bitmap
        PROTOBUF_FIELD_OFFSET(::taskpb::DBTask, _impl_._has_bits_),
        9, // hasbit index offset
        PROTOBUF_FIELD_OFFSET(::taskpb::DBTask, _impl_.key_),
        PROTOBUF_FIELD_OFFSET(::taskpb::DBTask, _impl_.where_case_),
        PROTOBUF_FIELD_OFFSET(::taskpb::DBTask, _impl_.op_),
        PROTOBUF_FIELD_OFFSET(::taskpb::DBTask, _impl_.msg_type_),
        PROTOBUF_FIELD_OFFSET(::taskpb::DBTask, _impl_.body_),
        PROTOBUF_FIELD_OFFSET(::taskpb::DBTask, _impl_.task_id_),
        5,
        0,
        1,
        2,
        3,
        4,
        0x081, // bitmap
        PROTOBUF_FIELD_OFFSET(::taskpb::TaskResult, _impl_._has_bits_),
        6, // hasbit index offset
        PROTOBUF_FIELD_OFFSET(::taskpb::TaskResult, _impl_.success_),
        PROTOBUF_FIELD_OFFSET(::taskpb::TaskResult, _impl_.data_),
        PROTOBUF_FIELD_OFFSET(::taskpb::TaskResult, _impl_.error_),
        2,
        0,
        1,
};

static const ::_pbi::MigrationSchema
    schemas[] ABSL_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
        {0, sizeof(::taskpb::DBTask)},
        {15, sizeof(::taskpb::TaskResult)},
};
static const ::_pb::Message* PROTOBUF_NONNULL const file_default_instances[] = {
    &::taskpb::_DBTask_default_instance_._instance,
    &::taskpb::_TaskResult_default_instance_._instance,
};
const char descriptor_table_protodef_proto_2fservice_2fgo_2fgrpc_2fdb_2fdb_5ftask_2eproto[] ABSL_ATTRIBUTE_SECTION_VARIABLE(
    protodesc_cold) = {
    "\n&proto/service/go/grpc/db/db_task.proto"
    "\022\006taskpb\"f\n\006DBTask\022\013\n\003key\030\001 \001(\004\022\022\n\nwhere"
    "_case\030\002 \001(\t\022\n\n\002op\030\003 \001(\t\022\020\n\010msg_type\030\004 \001("
    "\t\022\014\n\004body\030\005 \001(\014\022\017\n\007task_id\030\006 \001(\t\":\n\nTask"
    "Result\022\017\n\007success\030\001 \001(\010\022\014\n\004data\030\002 \001(\014\022\r\n"
    "\005error\030\003 \001(\tb\006proto3"
};
static ::absl::once_flag descriptor_table_proto_2fservice_2fgo_2fgrpc_2fdb_2fdb_5ftask_2eproto_once;
PROTOBUF_CONSTINIT const ::_pbi::DescriptorTable descriptor_table_proto_2fservice_2fgo_2fgrpc_2fdb_2fdb_5ftask_2eproto = {
    false,
    false,
    220,
    descriptor_table_protodef_proto_2fservice_2fgo_2fgrpc_2fdb_2fdb_5ftask_2eproto,
    "proto/service/go/grpc/db/db_task.proto",
    &descriptor_table_proto_2fservice_2fgo_2fgrpc_2fdb_2fdb_5ftask_2eproto_once,
    nullptr,
    0,
    2,
    schemas,
    file_default_instances,
    TableStruct_proto_2fservice_2fgo_2fgrpc_2fdb_2fdb_5ftask_2eproto::offsets,
    file_level_enum_descriptors_proto_2fservice_2fgo_2fgrpc_2fdb_2fdb_5ftask_2eproto,
    file_level_service_descriptors_proto_2fservice_2fgo_2fgrpc_2fdb_2fdb_5ftask_2eproto,
};
namespace taskpb {
// ===================================================================

class DBTask::_Internal {
 public:
  using HasBits =
      decltype(::std::declval<DBTask>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
      8 * PROTOBUF_FIELD_OFFSET(DBTask, _impl_._has_bits_);
};

DBTask::DBTask(::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, DBTask_class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:taskpb.DBTask)
}
PROTOBUF_NDEBUG_INLINE DBTask::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const Impl_& from,
    const ::taskpb::DBTask& from_msg)
      : _has_bits_{from._has_bits_},
        _cached_size_{0},
        where_case_(arena, from.where_case_),
        op_(arena, from.op_),
        msg_type_(arena, from.msg_type_),
        body_(arena, from.body_),
        task_id_(arena, from.task_id_) {}

DBTask::DBTask(
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena,
    const DBTask& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, DBTask_class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  DBTask* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);
  _impl_.key_ = from._impl_.key_;

  // @@protoc_insertion_point(copy_constructor:taskpb.DBTask)
}
PROTOBUF_NDEBUG_INLINE DBTask::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
      : _cached_size_{0},
        where_case_(arena),
        op_(arena),
        msg_type_(arena),
        body_(arena),
        task_id_(arena) {}

inline void DBTask::SharedCtor(::_pb::Arena* PROTOBUF_NULLABLE arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  _impl_.key_ = {};
}
DBTask::~DBTask() {
  // @@protoc_insertion_point(destructor:taskpb.DBTask)
  SharedDtor(*this);
}
inline void DBTask::SharedDtor(MessageLite& self) {
  DBTask& this_ = static_cast<DBTask&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  this_._impl_.where_case_.Destroy();
  this_._impl_.op_.Destroy();
  this_._impl_.msg_type_.Destroy();
  this_._impl_.body_.Destroy();
  this_._impl_.task_id_.Destroy();
  this_._impl_.~Impl_();
}

inline void* PROTOBUF_NONNULL DBTask::PlacementNew_(
    const void* PROTOBUF_NONNULL, void* PROTOBUF_NONNULL mem,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena) {
  return ::new (mem) DBTask(arena);
}
constexpr auto DBTask::InternalNewImpl_() {
  return ::google::protobuf::internal::MessageCreator::CopyInit(sizeof(DBTask),
                                            alignof(DBTask));
}
constexpr auto DBTask::InternalGenerateClassData_() {
  return ::google::protobuf::internal::ClassDataFull{
      ::google::protobuf::internal::ClassData{
          &_DBTask_default_instance_._instance,
          &_table_.header,
          nullptr,  // OnDemandRegisterArenaDtor
          nullptr,  // IsInitialized
          &DBTask::MergeImpl,
          ::google::protobuf::Message::GetNewImpl<DBTask>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
          &DBTask::SharedDtor,
          ::google::protobuf::Message::GetClearImpl<DBTask>(), &DBTask::ByteSizeLong,
              &DBTask::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
          PROTOBUF_FIELD_OFFSET(DBTask, _impl_._cached_size_),
          false,
      },
      &DBTask::kDescriptorMethods,
      &descriptor_table_proto_2fservice_2fgo_2fgrpc_2fdb_2fdb_5ftask_2eproto,
      nullptr,  // tracker
  };
}

PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 const
    ::google::protobuf::internal::ClassDataFull DBTask_class_data_ =
        DBTask::InternalGenerateClassData_();

PROTOBUF_ATTRIBUTE_WEAK const ::google::protobuf::internal::ClassData* PROTOBUF_NONNULL
DBTask::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&DBTask_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(DBTask_class_data_.tc_table);
  return DBTask_class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<3, 6, 0, 49, 2>
DBTask::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(DBTask, _impl_._has_bits_),
    0, // no _extensions_
    6, 56,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967232,  // skipmap
    offsetof(decltype(_table_), field_entries),
    6,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    DBTask_class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::taskpb::DBTask>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
    // uint64 key = 1;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint64_t, offsetof(DBTask, _impl_.key_), 5>(),
     {8, 5, 0, PROTOBUF_FIELD_OFFSET(DBTask, _impl_.key_)}},
    // string where_case = 2;
    {::_pbi::TcParser::FastUS1,
     {18, 0, 0, PROTOBUF_FIELD_OFFSET(DBTask, _impl_.where_case_)}},
    // string op = 3;
    {::_pbi::TcParser::FastUS1,
     {26, 1, 0, PROTOBUF_FIELD_OFFSET(DBTask, _impl_.op_)}},
    // string msg_type = 4;
    {::_pbi::TcParser::FastUS1,
     {34, 2, 0, PROTOBUF_FIELD_OFFSET(DBTask, _impl_.msg_type_)}},
    // bytes body = 5;
    {::_pbi::TcParser::FastBS1,
     {42, 3, 0, PROTOBUF_FIELD_OFFSET(DBTask, _impl_.body_)}},
    // string task_id = 6;
    {::_pbi::TcParser::FastUS1,
     {50, 4, 0, PROTOBUF_FIELD_OFFSET(DBTask, _impl_.task_id_)}},
    {::_pbi::TcParser::MiniParse, {}},
  }}, {{
    65535, 65535
  }}, {{
    // uint64 key = 1;
    {PROTOBUF_FIELD_OFFSET(DBTask, _impl_.key_), _Internal::kHasBitsOffset + 5, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kUInt64)},
    // string where_case = 2;
    {PROTOBUF_FIELD_OFFSET(DBTask, _impl_.where_case_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // string op = 3;
    {PROTOBUF_FIELD_OFFSET(DBTask, _impl_.op_), _Internal::kHasBitsOffset + 1, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // string msg_type = 4;
    {PROTOBUF_FIELD_OFFSET(DBTask, _impl_.msg_type_), _Internal::kHasBitsOffset + 2, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // bytes body = 5;
    {PROTOBUF_FIELD_OFFSET(DBTask, _impl_.body_), _Internal::kHasBitsOffset + 3, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kBytes | ::_fl::kRepAString)},
    // string task_id = 6;
    {PROTOBUF_FIELD_OFFSET(DBTask, _impl_.task_id_), _Internal::kHasBitsOffset + 4, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kUtf8String | ::_fl::kRepAString)},
  }},
  // no aux_entries
  {{
    "\15\0\12\2\10\0\7\0"
    "taskpb.DBTask"
    "where_case"
    "op"
    "msg_type"
    "task_id"
  }},
};
PROTOBUF_NOINLINE void DBTask::Clear() {
// @@protoc_insertion_point(message_clear_start:taskpb.DBTask)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if ((cached_has_bits & 0x0000001fu) != 0) {
    if ((cached_has_bits & 0x00000001u) != 0) {
      _impl_.where_case_.ClearNonDefaultToEmpty();
    }
    if ((cached_has_bits & 0x00000002u) != 0) {
      _impl_.op_.ClearNonDefaultToEmpty();
    }
    if ((cached_has_bits & 0x00000004u) != 0) {
      _impl_.msg_type_.ClearNonDefaultToEmpty();
    }
    if ((cached_has_bits & 0x00000008u) != 0) {
      _impl_.body_.ClearNonDefaultToEmpty();
    }
    if ((cached_has_bits & 0x00000010u) != 0) {
      _impl_.task_id_.ClearNonDefaultToEmpty();
    }
  }
  _impl_.key_ = ::uint64_t{0u};
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::uint8_t* PROTOBUF_NONNULL DBTask::_InternalSerialize(
    const ::google::protobuf::MessageLite& base, ::uint8_t* PROTOBUF_NONNULL target,
    ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) {
  const DBTask& this_ = static_cast<const DBTask&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::uint8_t* PROTOBUF_NONNULL DBTask::_InternalSerialize(
    ::uint8_t* PROTOBUF_NONNULL target,
    ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const {
  const DBTask& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
  // @@protoc_insertion_point(serialize_to_array_start:taskpb.DBTask)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  // uint64 key = 1;
  if ((this_._impl_._has_bits_[0] & 0x00000020u) != 0) {
    if (this_._internal_key() != 0) {
      target = stream->EnsureSpace(target);
      target = ::_pbi::WireFormatLite::WriteUInt64ToArray(
          1, this_._internal_key(), target);
    }
  }

  // string where_case = 2;
  if ((this_._impl_._has_bits_[0] & 0x00000001u) != 0) {
    if (!this_._internal_where_case().empty()) {
      const ::std::string& _s = this_._internal_where_case();
      ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
          _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "taskpb.DBTask.where_case");
      target = stream->WriteStringMaybeAliased(2, _s, target);
    }
  }

  // string op = 3;
  if ((this_._impl_._has_bits_[0] & 0x00000002u) != 0) {
    if (!this_._internal_op().empty()) {
      const ::std::string& _s = this_._internal_op();
      ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
          _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "taskpb.DBTask.op");
      target = stream->WriteStringMaybeAliased(3, _s, target);
    }
  }

  // string msg_type = 4;
  if ((this_._impl_._has_bits_[0] & 0x00000004u) != 0) {
    if (!this_._internal_msg_type().empty()) {
      const ::std::string& _s = this_._internal_msg_type();
      ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
          _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "taskpb.DBTask.msg_type");
      target = stream->WriteStringMaybeAliased(4, _s, target);
    }
  }

  // bytes body = 5;
  if ((this_._impl_._has_bits_[0] & 0x00000008u) != 0) {
    if (!this_._internal_body().empty()) {
      const ::std::string& _s = this_._internal_body();
      target = stream->WriteBytesMaybeAliased(5, _s, target);
    }
  }

  // string task_id = 6;
  if ((this_._impl_._has_bits_[0] & 0x00000010u) != 0) {
    if (!this_._internal_task_id().empty()) {
      const ::std::string& _s = this_._internal_task_id();
      ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
          _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "taskpb.DBTask.task_id");
      target = stream->WriteStringMaybeAliased(6, _s, target);
    }
  }

  if (ABSL_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:taskpb.DBTask)
  return target;
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::size_t DBTask::ByteSizeLong(const MessageLite& base) {
  const DBTask& this_ = static_cast<const DBTask&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::size_t DBTask::ByteSizeLong() const {
  const DBTask& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
  // @@protoc_insertion_point(message_byte_size_start:taskpb.DBTask)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void)cached_has_bits;

  ::_pbi::Prefetch5LinesFrom7Lines(&this_);
  cached_has_bits = this_._impl_._has_bits_[0];
  if ((cached_has_bits & 0x0000003fu) != 0) {
    // string where_case = 2;
    if ((cached_has_bits & 0x00000001u) != 0) {
      if (!this_._internal_where_case().empty()) {
        total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                        this_._internal_where_case());
      }
    }
    // string op = 3;
    if ((cached_has_bits & 0x00000002u) != 0) {
      if (!this_._internal_op().empty()) {
        total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                        this_._internal_op());
      }
    }
    // string msg_type = 4;
    if ((cached_has_bits & 0x00000004u) != 0) {
      if (!this_._internal_msg_type().empty()) {
        total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                        this_._internal_msg_type());
      }
    }
    // bytes body = 5;
    if ((cached_has_bits & 0x00000008u) != 0) {
      if (!this_._internal_body().empty()) {
        total_size += 1 + ::google::protobuf::internal::WireFormatLite::BytesSize(
                                        this_._internal_body());
      }
    }
    // string task_id = 6;
    if ((cached_has_bits & 0x00000010u) != 0) {
      if (!this_._internal_task_id().empty()) {
        total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                        this_._internal_task_id());
      }
    }
    // uint64 key = 1;
    if ((cached_has_bits & 0x00000020u) != 0) {
      if (this_._internal_key() != 0) {
        total_size += ::_pbi::WireFormatLite::UInt64SizePlusOne(
            this_._internal_key());
      }
    }
  }
  return this_.MaybeComputeUnknownFieldsSize(total_size,
                                             &this_._impl_._cached_size_);
}

void DBTask::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<DBTask*>(&to_msg);
  auto& from = static_cast<const DBTask&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:taskpb.DBTask)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._impl_._has_bits_[0];
  if ((cached_has_bits & 0x0000003fu) != 0) {
    if ((cached_has_bits & 0x00000001u) != 0) {
      if (!from._internal_where_case().empty()) {
        _this->_internal_set_where_case(from._internal_where_case());
      } else {
        if (_this->_impl_.where_case_.IsDefault()) {
          _this->_internal_set_where_case("");
        }
      }
    }
    if ((cached_has_bits & 0x00000002u) != 0) {
      if (!from._internal_op().empty()) {
        _this->_internal_set_op(from._internal_op());
      } else {
        if (_this->_impl_.op_.IsDefault()) {
          _this->_internal_set_op("");
        }
      }
    }
    if ((cached_has_bits & 0x00000004u) != 0) {
      if (!from._internal_msg_type().empty()) {
        _this->_internal_set_msg_type(from._internal_msg_type());
      } else {
        if (_this->_impl_.msg_type_.IsDefault()) {
          _this->_internal_set_msg_type("");
        }
      }
    }
    if ((cached_has_bits & 0x00000008u) != 0) {
      if (!from._internal_body().empty()) {
        _this->_internal_set_body(from._internal_body());
      } else {
        if (_this->_impl_.body_.IsDefault()) {
          _this->_internal_set_body("");
        }
      }
    }
    if ((cached_has_bits & 0x00000010u) != 0) {
      if (!from._internal_task_id().empty()) {
        _this->_internal_set_task_id(from._internal_task_id());
      } else {
        if (_this->_impl_.task_id_.IsDefault()) {
          _this->_internal_set_task_id("");
        }
      }
    }
    if ((cached_has_bits & 0x00000020u) != 0) {
      if (from._internal_key() != 0) {
        _this->_impl_.key_ = from._impl_.key_;
      }
    }
  }
  _this->_impl_._has_bits_[0] |= cached_has_bits;
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void DBTask::CopyFrom(const DBTask& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:taskpb.DBTask)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void DBTask::InternalSwap(DBTask* PROTOBUF_RESTRICT PROTOBUF_NONNULL other) {
  using ::std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.where_case_, &other->_impl_.where_case_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.op_, &other->_impl_.op_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.msg_type_, &other->_impl_.msg_type_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.body_, &other->_impl_.body_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.task_id_, &other->_impl_.task_id_, arena);
  swap(_impl_.key_, other->_impl_.key_);
}

::google::protobuf::Metadata DBTask::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class TaskResult::_Internal {
 public:
  using HasBits =
      decltype(::std::declval<TaskResult>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
      8 * PROTOBUF_FIELD_OFFSET(TaskResult, _impl_._has_bits_);
};

TaskResult::TaskResult(::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, TaskResult_class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:taskpb.TaskResult)
}
PROTOBUF_NDEBUG_INLINE TaskResult::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const Impl_& from,
    const ::taskpb::TaskResult& from_msg)
      : _has_bits_{from._has_bits_},
        _cached_size_{0},
        data_(arena, from.data_),
        error_(arena, from.error_) {}

TaskResult::TaskResult(
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena,
    const TaskResult& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, TaskResult_class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  TaskResult* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);
  _impl_.success_ = from._impl_.success_;

  // @@protoc_insertion_point(copy_constructor:taskpb.TaskResult)
}
PROTOBUF_NDEBUG_INLINE TaskResult::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
      : _cached_size_{0},
        data_(arena),
        error_(arena) {}

inline void TaskResult::SharedCtor(::_pb::Arena* PROTOBUF_NULLABLE arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  _impl_.success_ = {};
}
TaskResult::~TaskResult() {
  // @@protoc_insertion_point(destructor:taskpb.TaskResult)
  SharedDtor(*this);
}
inline void TaskResult::SharedDtor(MessageLite& self) {
  TaskResult& this_ = static_cast<TaskResult&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  this_._impl_.data_.Destroy();
  this_._impl_.error_.Destroy();
  this_._impl_.~Impl_();
}

inline void* PROTOBUF_NONNULL TaskResult::PlacementNew_(
    const void* PROTOBUF_NONNULL, void* PROTOBUF_NONNULL mem,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena) {
  return ::new (mem) TaskResult(arena);
}
constexpr auto TaskResult::InternalNewImpl_() {
  return ::google::protobuf::internal::MessageCreator::CopyInit(sizeof(TaskResult),
                                            alignof(TaskResult));
}
constexpr auto TaskResult::InternalGenerateClassData_() {
  return ::google::protobuf::internal::ClassDataFull{
      ::google::protobuf::internal::ClassData{
          &_TaskResult_default_instance_._instance,
          &_table_.header,
          nullptr,  // OnDemandRegisterArenaDtor
          nullptr,  // IsInitialized
          &TaskResult::MergeImpl,
          ::google::protobuf::Message::GetNewImpl<TaskResult>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
          &TaskResult::SharedDtor,
          ::google::protobuf::Message::GetClearImpl<TaskResult>(), &TaskResult::ByteSizeLong,
              &TaskResult::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
          PROTOBUF_FIELD_OFFSET(TaskResult, _impl_._cached_size_),
          false,
      },
      &TaskResult::kDescriptorMethods,
      &descriptor_table_proto_2fservice_2fgo_2fgrpc_2fdb_2fdb_5ftask_2eproto,
      nullptr,  // tracker
  };
}

PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 const
    ::google::protobuf::internal::ClassDataFull TaskResult_class_data_ =
        TaskResult::InternalGenerateClassData_();

PROTOBUF_ATTRIBUTE_WEAK const ::google::protobuf::internal::ClassData* PROTOBUF_NONNULL
TaskResult::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&TaskResult_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(TaskResult_class_data_.tc_table);
  return TaskResult_class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<2, 3, 0, 31, 2>
TaskResult::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(TaskResult, _impl_._has_bits_),
    0, // no _extensions_
    3, 24,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967288,  // skipmap
    offsetof(decltype(_table_), field_entries),
    3,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    TaskResult_class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::taskpb::TaskResult>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
    // bool success = 1;
    {::_pbi::TcParser::SingularVarintNoZag1<bool, offsetof(TaskResult, _impl_.success_), 2>(),
     {8, 2, 0, PROTOBUF_FIELD_OFFSET(TaskResult, _impl_.success_)}},
    // bytes data = 2;
    {::_pbi::TcParser::FastBS1,
     {18, 0, 0, PROTOBUF_FIELD_OFFSET(TaskResult, _impl_.data_)}},
    // string error = 3;
    {::_pbi::TcParser::FastUS1,
     {26, 1, 0, PROTOBUF_FIELD_OFFSET(TaskResult, _impl_.error_)}},
  }}, {{
    65535, 65535
  }}, {{
    // bool success = 1;
    {PROTOBUF_FIELD_OFFSET(TaskResult, _impl_.success_), _Internal::kHasBitsOffset + 2, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kBool)},
    // bytes data = 2;
    {PROTOBUF_FIELD_OFFSET(TaskResult, _impl_.data_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kBytes | ::_fl::kRepAString)},
    // string error = 3;
    {PROTOBUF_FIELD_OFFSET(TaskResult, _impl_.error_), _Internal::kHasBitsOffset + 1, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kUtf8String | ::_fl::kRepAString)},
  }},
  // no aux_entries
  {{
    "\21\0\0\5\0\0\0\0"
    "taskpb.TaskResult"
    "error"
  }},
};
PROTOBUF_NOINLINE void TaskResult::Clear() {
// @@protoc_insertion_point(message_clear_start:taskpb.TaskResult)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if ((cached_has_bits & 0x00000003u) != 0) {
    if ((cached_has_bits & 0x00000001u) != 0) {
      _impl_.data_.ClearNonDefaultToEmpty();
    }
    if ((cached_has_bits & 0x00000002u) != 0) {
      _impl_.error_.ClearNonDefaultToEmpty();
    }
  }
  _impl_.success_ = false;
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::uint8_t* PROTOBUF_NONNULL TaskResult::_InternalSerialize(
    const ::google::protobuf::MessageLite& base, ::uint8_t* PROTOBUF_NONNULL target,
    ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) {
  const TaskResult& this_ = static_cast<const TaskResult&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::uint8_t* PROTOBUF_NONNULL TaskResult::_InternalSerialize(
    ::uint8_t* PROTOBUF_NONNULL target,
    ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const {
  const TaskResult& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
  // @@protoc_insertion_point(serialize_to_array_start:taskpb.TaskResult)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  // bool success = 1;
  if ((this_._impl_._has_bits_[0] & 0x00000004u) != 0) {
    if (this_._internal_success() != 0) {
      target = stream->EnsureSpace(target);
      target = ::_pbi::WireFormatLite::WriteBoolToArray(
          1, this_._internal_success(), target);
    }
  }

  // bytes data = 2;
  if ((this_._impl_._has_bits_[0] & 0x00000001u) != 0) {
    if (!this_._internal_data().empty()) {
      const ::std::string& _s = this_._internal_data();
      target = stream->WriteBytesMaybeAliased(2, _s, target);
    }
  }

  // string error = 3;
  if ((this_._impl_._has_bits_[0] & 0x00000002u) != 0) {
    if (!this_._internal_error().empty()) {
      const ::std::string& _s = this_._internal_error();
      ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
          _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "taskpb.TaskResult.error");
      target = stream->WriteStringMaybeAliased(3, _s, target);
    }
  }

  if (ABSL_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:taskpb.TaskResult)
  return target;
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::size_t TaskResult::ByteSizeLong(const MessageLite& base) {
  const TaskResult& this_ = static_cast<const TaskResult&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::size_t TaskResult::ByteSizeLong() const {
  const TaskResult& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
  // @@protoc_insertion_point(message_byte_size_start:taskpb.TaskResult)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void)cached_has_bits;

  ::_pbi::Prefetch5LinesFrom7Lines(&this_);
  cached_has_bits = this_._impl_._has_bits_[0];
  if ((cached_has_bits & 0x00000007u) != 0) {
    // bytes data = 2;
    if ((cached_has_bits & 0x00000001u) != 0) {
      if (!this_._internal_data().empty()) {
        total_size += 1 + ::google::protobuf::internal::WireFormatLite::BytesSize(
                                        this_._internal_data());
      }
    }
    // string error = 3;
    if ((cached_has_bits & 0x00000002u) != 0) {
      if (!this_._internal_error().empty()) {
        total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                        this_._internal_error());
      }
    }
    // bool success = 1;
    if ((cached_has_bits & 0x00000004u) != 0) {
      if (this_._internal_success() != 0) {
        total_size += 2;
      }
    }
  }
  return this_.MaybeComputeUnknownFieldsSize(total_size,
                                             &this_._impl_._cached_size_);
}

void TaskResult::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<TaskResult*>(&to_msg);
  auto& from = static_cast<const TaskResult&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:taskpb.TaskResult)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._impl_._has_bits_[0];
  if ((cached_has_bits & 0x00000007u) != 0) {
    if ((cached_has_bits & 0x00000001u) != 0) {
      if (!from._internal_data().empty()) {
        _this->_internal_set_data(from._internal_data());
      } else {
        if (_this->_impl_.data_.IsDefault()) {
          _this->_internal_set_data("");
        }
      }
    }
    if ((cached_has_bits & 0x00000002u) != 0) {
      if (!from._internal_error().empty()) {
        _this->_internal_set_error(from._internal_error());
      } else {
        if (_this->_impl_.error_.IsDefault()) {
          _this->_internal_set_error("");
        }
      }
    }
    if ((cached_has_bits & 0x00000004u) != 0) {
      if (from._internal_success() != 0) {
        _this->_impl_.success_ = from._impl_.success_;
      }
    }
  }
  _this->_impl_._has_bits_[0] |= cached_has_bits;
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void TaskResult::CopyFrom(const TaskResult& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:taskpb.TaskResult)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void TaskResult::InternalSwap(TaskResult* PROTOBUF_RESTRICT PROTOBUF_NONNULL other) {
  using ::std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.data_, &other->_impl_.data_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.error_, &other->_impl_.error_, arena);
  swap(_impl_.success_, other->_impl_.success_);
}

::google::protobuf::Metadata TaskResult::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// @@protoc_insertion_point(namespace_scope)
}  // namespace taskpb
namespace google {
namespace protobuf {
}  // namespace protobuf
}  // namespace google
// @@protoc_insertion_point(global_scope)
PROTOBUF_ATTRIBUTE_INIT_PRIORITY2 static ::std::false_type
    _static_init2_ [[maybe_unused]] =
        (::_pbi::AddDescriptors(&descriptor_table_proto_2fservice_2fgo_2fgrpc_2fdb_2fdb_5ftask_2eproto),
         ::std::false_type{});
#include "google/protobuf/port_undef.inc"
