// Generated by the protocol buffer compiler.  DO NOT EDIT!
// NO CHECKED-IN PROTOBUF GENCODE
// source: proto/logic/component/frame_comp.proto
// Protobuf C++ Version: 5.29.0

#include "proto/logic/component/frame_comp.pb.h"

#include <algorithm>
#include <type_traits>
#include "google/protobuf/io/coded_stream.h"
#include "google/protobuf/generated_message_tctable_impl.h"
#include "google/protobuf/extension_set.h"
#include "google/protobuf/generated_message_util.h"
#include "google/protobuf/wire_format_lite.h"
#include "google/protobuf/descriptor.h"
#include "google/protobuf/generated_message_reflection.h"
#include "google/protobuf/reflection_ops.h"
#include "google/protobuf/wire_format.h"
// @@protoc_insertion_point(includes)

// Must be included last.
#include "google/protobuf/port_def.inc"
PROTOBUF_PRAGMA_INIT_SEG
namespace _pb = ::google::protobuf;
namespace _pbi = ::google::protobuf::internal;
namespace _fl = ::google::protobuf::internal::field_layout;

inline constexpr FrameTime::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : previous_time_{::uint64_t{0u}},
        delta_time_{0},
        time_accumulator_{0},
        current_frame_{::uint64_t{0u}},
        target_fps_{0u},
        _cached_size_{0} {}

template <typename>
PROTOBUF_CONSTEXPR FrameTime::FrameTime(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct FrameTimeDefaultTypeInternal {
  PROTOBUF_CONSTEXPR FrameTimeDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~FrameTimeDefaultTypeInternal() {}
  union {
    FrameTime _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 FrameTimeDefaultTypeInternal _FrameTime_default_instance_;
static constexpr const ::_pb::EnumDescriptor**
    file_level_enum_descriptors_proto_2flogic_2fcomponent_2fframe_5fcomp_2eproto = nullptr;
static constexpr const ::_pb::ServiceDescriptor**
    file_level_service_descriptors_proto_2flogic_2fcomponent_2fframe_5fcomp_2eproto = nullptr;
const ::uint32_t
    TableStruct_proto_2flogic_2fcomponent_2fframe_5fcomp_2eproto::offsets[] ABSL_ATTRIBUTE_SECTION_VARIABLE(
        protodesc_cold) = {
        ~0u,  // no _has_bits_
        PROTOBUF_FIELD_OFFSET(::FrameTime, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::FrameTime, _impl_.previous_time_),
        PROTOBUF_FIELD_OFFSET(::FrameTime, _impl_.delta_time_),
        PROTOBUF_FIELD_OFFSET(::FrameTime, _impl_.target_fps_),
        PROTOBUF_FIELD_OFFSET(::FrameTime, _impl_.time_accumulator_),
        PROTOBUF_FIELD_OFFSET(::FrameTime, _impl_.current_frame_),
};

static const ::_pbi::MigrationSchema
    schemas[] ABSL_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
        {0, -1, -1, sizeof(::FrameTime)},
};
static const ::_pb::Message* const file_default_instances[] = {
    &::_FrameTime_default_instance_._instance,
};
const char descriptor_table_protodef_proto_2flogic_2fcomponent_2fframe_5fcomp_2eproto[] ABSL_ATTRIBUTE_SECTION_VARIABLE(
    protodesc_cold) = {
    "\n&proto/logic/component/frame_comp.proto"
    "\"{\n\tFrameTime\022\025\n\rprevious_time\030\001 \001(\004\022\022\n\n"
    "delta_time\030\002 \001(\001\022\022\n\ntarget_fps\030\003 \001(\r\022\030\n\020"
    "time_accumulator\030\004 \001(\001\022\025\n\rcurrent_frame\030"
    "\005 \001(\004B\tZ\007pb/gameb\006proto3"
};
static ::absl::once_flag descriptor_table_proto_2flogic_2fcomponent_2fframe_5fcomp_2eproto_once;
PROTOBUF_CONSTINIT const ::_pbi::DescriptorTable descriptor_table_proto_2flogic_2fcomponent_2fframe_5fcomp_2eproto = {
    false,
    false,
    184,
    descriptor_table_protodef_proto_2flogic_2fcomponent_2fframe_5fcomp_2eproto,
    "proto/logic/component/frame_comp.proto",
    &descriptor_table_proto_2flogic_2fcomponent_2fframe_5fcomp_2eproto_once,
    nullptr,
    0,
    1,
    schemas,
    file_default_instances,
    TableStruct_proto_2flogic_2fcomponent_2fframe_5fcomp_2eproto::offsets,
    file_level_enum_descriptors_proto_2flogic_2fcomponent_2fframe_5fcomp_2eproto,
    file_level_service_descriptors_proto_2flogic_2fcomponent_2fframe_5fcomp_2eproto,
};
// ===================================================================

class FrameTime::_Internal {
 public:
};

FrameTime::FrameTime(::google::protobuf::Arena* arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:FrameTime)
}
FrameTime::FrameTime(
    ::google::protobuf::Arena* arena, const FrameTime& from)
    : FrameTime(arena) {
  MergeFrom(from);
}
inline PROTOBUF_NDEBUG_INLINE FrameTime::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0} {}

inline void FrameTime::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, previous_time_),
           0,
           offsetof(Impl_, target_fps_) -
               offsetof(Impl_, previous_time_) +
               sizeof(Impl_::target_fps_));
}
FrameTime::~FrameTime() {
  // @@protoc_insertion_point(destructor:FrameTime)
  SharedDtor(*this);
}
inline void FrameTime::SharedDtor(MessageLite& self) {
  FrameTime& this_ = static_cast<FrameTime&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  this_._impl_.~Impl_();
}

inline void* FrameTime::PlacementNew_(const void*, void* mem,
                                        ::google::protobuf::Arena* arena) {
  return ::new (mem) FrameTime(arena);
}
constexpr auto FrameTime::InternalNewImpl_() {
  return ::google::protobuf::internal::MessageCreator::ZeroInit(sizeof(FrameTime),
                                            alignof(FrameTime));
}
PROTOBUF_CONSTINIT
PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::google::protobuf::internal::ClassDataFull FrameTime::_class_data_ = {
    ::google::protobuf::internal::ClassData{
        &_FrameTime_default_instance_._instance,
        &_table_.header,
        nullptr,  // OnDemandRegisterArenaDtor
        nullptr,  // IsInitialized
        &FrameTime::MergeImpl,
        ::google::protobuf::Message::GetNewImpl<FrameTime>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
        &FrameTime::SharedDtor,
        ::google::protobuf::Message::GetClearImpl<FrameTime>(), &FrameTime::ByteSizeLong,
            &FrameTime::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
        PROTOBUF_FIELD_OFFSET(FrameTime, _impl_._cached_size_),
        false,
    },
    &FrameTime::kDescriptorMethods,
    &descriptor_table_proto_2flogic_2fcomponent_2fframe_5fcomp_2eproto,
    nullptr,  // tracker
};
const ::google::protobuf::internal::ClassData* FrameTime::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_class_data_.tc_table);
  return _class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<3, 5, 0, 0, 2> FrameTime::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    5, 56,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967264,  // skipmap
    offsetof(decltype(_table_), field_entries),
    5,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    _class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::FrameTime>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
    // uint64 previous_time = 1;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint64_t, offsetof(FrameTime, _impl_.previous_time_), 63>(),
     {8, 63, 0, PROTOBUF_FIELD_OFFSET(FrameTime, _impl_.previous_time_)}},
    // double delta_time = 2;
    {::_pbi::TcParser::FastF64S1,
     {17, 63, 0, PROTOBUF_FIELD_OFFSET(FrameTime, _impl_.delta_time_)}},
    // uint32 target_fps = 3;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(FrameTime, _impl_.target_fps_), 63>(),
     {24, 63, 0, PROTOBUF_FIELD_OFFSET(FrameTime, _impl_.target_fps_)}},
    // double time_accumulator = 4;
    {::_pbi::TcParser::FastF64S1,
     {33, 63, 0, PROTOBUF_FIELD_OFFSET(FrameTime, _impl_.time_accumulator_)}},
    // uint64 current_frame = 5;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint64_t, offsetof(FrameTime, _impl_.current_frame_), 63>(),
     {40, 63, 0, PROTOBUF_FIELD_OFFSET(FrameTime, _impl_.current_frame_)}},
    {::_pbi::TcParser::MiniParse, {}},
    {::_pbi::TcParser::MiniParse, {}},
  }}, {{
    65535, 65535
  }}, {{
    // uint64 previous_time = 1;
    {PROTOBUF_FIELD_OFFSET(FrameTime, _impl_.previous_time_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUInt64)},
    // double delta_time = 2;
    {PROTOBUF_FIELD_OFFSET(FrameTime, _impl_.delta_time_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kDouble)},
    // uint32 target_fps = 3;
    {PROTOBUF_FIELD_OFFSET(FrameTime, _impl_.target_fps_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUInt32)},
    // double time_accumulator = 4;
    {PROTOBUF_FIELD_OFFSET(FrameTime, _impl_.time_accumulator_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kDouble)},
    // uint64 current_frame = 5;
    {PROTOBUF_FIELD_OFFSET(FrameTime, _impl_.current_frame_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUInt64)},
  }},
  // no aux_entries
  {{
  }},
};

PROTOBUF_NOINLINE void FrameTime::Clear() {
// @@protoc_insertion_point(message_clear_start:FrameTime)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&_impl_.previous_time_, 0, static_cast<::size_t>(
      reinterpret_cast<char*>(&_impl_.target_fps_) -
      reinterpret_cast<char*>(&_impl_.previous_time_)) + sizeof(_impl_.target_fps_));
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::uint8_t* FrameTime::_InternalSerialize(
            const MessageLite& base, ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) {
          const FrameTime& this_ = static_cast<const FrameTime&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::uint8_t* FrameTime::_InternalSerialize(
            ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) const {
          const FrameTime& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(serialize_to_array_start:FrameTime)
          ::uint32_t cached_has_bits = 0;
          (void)cached_has_bits;

          // uint64 previous_time = 1;
          if (this_._internal_previous_time() != 0) {
            target = stream->EnsureSpace(target);
            target = ::_pbi::WireFormatLite::WriteUInt64ToArray(
                1, this_._internal_previous_time(), target);
          }

          // double delta_time = 2;
          if (::absl::bit_cast<::uint64_t>(this_._internal_delta_time()) != 0) {
            target = stream->EnsureSpace(target);
            target = ::_pbi::WireFormatLite::WriteDoubleToArray(
                2, this_._internal_delta_time(), target);
          }

          // uint32 target_fps = 3;
          if (this_._internal_target_fps() != 0) {
            target = stream->EnsureSpace(target);
            target = ::_pbi::WireFormatLite::WriteUInt32ToArray(
                3, this_._internal_target_fps(), target);
          }

          // double time_accumulator = 4;
          if (::absl::bit_cast<::uint64_t>(this_._internal_time_accumulator()) != 0) {
            target = stream->EnsureSpace(target);
            target = ::_pbi::WireFormatLite::WriteDoubleToArray(
                4, this_._internal_time_accumulator(), target);
          }

          // uint64 current_frame = 5;
          if (this_._internal_current_frame() != 0) {
            target = stream->EnsureSpace(target);
            target = ::_pbi::WireFormatLite::WriteUInt64ToArray(
                5, this_._internal_current_frame(), target);
          }

          if (PROTOBUF_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
            target =
                ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
                    this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
          }
          // @@protoc_insertion_point(serialize_to_array_end:FrameTime)
          return target;
        }

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::size_t FrameTime::ByteSizeLong(const MessageLite& base) {
          const FrameTime& this_ = static_cast<const FrameTime&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::size_t FrameTime::ByteSizeLong() const {
          const FrameTime& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(message_byte_size_start:FrameTime)
          ::size_t total_size = 0;

          ::uint32_t cached_has_bits = 0;
          // Prevent compiler warnings about cached_has_bits being unused
          (void)cached_has_bits;

          ::_pbi::Prefetch5LinesFrom7Lines(&this_);
           {
            // uint64 previous_time = 1;
            if (this_._internal_previous_time() != 0) {
              total_size += ::_pbi::WireFormatLite::UInt64SizePlusOne(
                  this_._internal_previous_time());
            }
            // double delta_time = 2;
            if (::absl::bit_cast<::uint64_t>(this_._internal_delta_time()) != 0) {
              total_size += 9;
            }
            // double time_accumulator = 4;
            if (::absl::bit_cast<::uint64_t>(this_._internal_time_accumulator()) != 0) {
              total_size += 9;
            }
            // uint64 current_frame = 5;
            if (this_._internal_current_frame() != 0) {
              total_size += ::_pbi::WireFormatLite::UInt64SizePlusOne(
                  this_._internal_current_frame());
            }
            // uint32 target_fps = 3;
            if (this_._internal_target_fps() != 0) {
              total_size += ::_pbi::WireFormatLite::UInt32SizePlusOne(
                  this_._internal_target_fps());
            }
          }
          return this_.MaybeComputeUnknownFieldsSize(total_size,
                                                     &this_._impl_._cached_size_);
        }

void FrameTime::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<FrameTime*>(&to_msg);
  auto& from = static_cast<const FrameTime&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:FrameTime)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_previous_time() != 0) {
    _this->_impl_.previous_time_ = from._impl_.previous_time_;
  }
  if (::absl::bit_cast<::uint64_t>(from._internal_delta_time()) != 0) {
    _this->_impl_.delta_time_ = from._impl_.delta_time_;
  }
  if (::absl::bit_cast<::uint64_t>(from._internal_time_accumulator()) != 0) {
    _this->_impl_.time_accumulator_ = from._impl_.time_accumulator_;
  }
  if (from._internal_current_frame() != 0) {
    _this->_impl_.current_frame_ = from._impl_.current_frame_;
  }
  if (from._internal_target_fps() != 0) {
    _this->_impl_.target_fps_ = from._impl_.target_fps_;
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void FrameTime::CopyFrom(const FrameTime& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:FrameTime)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void FrameTime::InternalSwap(FrameTime* PROTOBUF_RESTRICT other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(FrameTime, _impl_.target_fps_)
      + sizeof(FrameTime::_impl_.target_fps_)
      - PROTOBUF_FIELD_OFFSET(FrameTime, _impl_.previous_time_)>(
          reinterpret_cast<char*>(&_impl_.previous_time_),
          reinterpret_cast<char*>(&other->_impl_.previous_time_));
}

::google::protobuf::Metadata FrameTime::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// @@protoc_insertion_point(namespace_scope)
namespace google {
namespace protobuf {
}  // namespace protobuf
}  // namespace google
// @@protoc_insertion_point(global_scope)
PROTOBUF_ATTRIBUTE_INIT_PRIORITY2 static ::std::false_type
    _static_init2_ PROTOBUF_UNUSED =
        (::_pbi::AddDescriptors(&descriptor_table_proto_2flogic_2fcomponent_2fframe_5fcomp_2eproto),
         ::std::false_type{});
#include "google/protobuf/port_undef.inc"
