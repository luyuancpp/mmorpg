// Generated by the protocol buffer compiler.  DO NOT EDIT!
// NO CHECKED-IN PROTOBUF GENCODE
// source: proto/player_locator/player_locator.proto
// Protobuf C++ Version: 5.29.0

#include "proto/player_locator/player_locator.pb.h"

#include <algorithm>
#include <type_traits>
#include "google/protobuf/io/coded_stream.h"
#include "google/protobuf/generated_message_tctable_impl.h"
#include "google/protobuf/extension_set.h"
#include "google/protobuf/generated_message_util.h"
#include "google/protobuf/wire_format_lite.h"
#include "google/protobuf/descriptor.h"
#include "google/protobuf/generated_message_reflection.h"
#include "google/protobuf/reflection_ops.h"
#include "google/protobuf/wire_format.h"
// @@protoc_insertion_point(includes)

// Must be included last.
#include "google/protobuf/port_def.inc"
PROTOBUF_PRAGMA_INIT_SEG
namespace _pb = ::google::protobuf;
namespace _pbi = ::google::protobuf::internal;
namespace _fl = ::google::protobuf::internal::field_layout;
namespace playerlocator {

inline constexpr PlayerLocation::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : server_id_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        token_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        uid_{::int64_t{0}},
        online_{false},
        migrating_{false},
        scene_id_{0},
        ts_{::int64_t{0}},
        _cached_size_{0} {}

template <typename>
PROTOBUF_CONSTEXPR PlayerLocation::PlayerLocation(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct PlayerLocationDefaultTypeInternal {
  PROTOBUF_CONSTEXPR PlayerLocationDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~PlayerLocationDefaultTypeInternal() {}
  union {
    PlayerLocation _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 PlayerLocationDefaultTypeInternal _PlayerLocation_default_instance_;

inline constexpr PlayerId::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : uid_{::int64_t{0}},
        _cached_size_{0} {}

template <typename>
PROTOBUF_CONSTEXPR PlayerId::PlayerId(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct PlayerIdDefaultTypeInternal {
  PROTOBUF_CONSTEXPR PlayerIdDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~PlayerIdDefaultTypeInternal() {}
  union {
    PlayerId _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 PlayerIdDefaultTypeInternal _PlayerId_default_instance_;
}  // namespace playerlocator
static constexpr const ::_pb::EnumDescriptor**
    file_level_enum_descriptors_proto_2fplayer_5flocator_2fplayer_5flocator_2eproto = nullptr;
static constexpr const ::_pb::ServiceDescriptor**
    file_level_service_descriptors_proto_2fplayer_5flocator_2fplayer_5flocator_2eproto = nullptr;
const ::uint32_t
    TableStruct_proto_2fplayer_5flocator_2fplayer_5flocator_2eproto::offsets[] ABSL_ATTRIBUTE_SECTION_VARIABLE(
        protodesc_cold) = {
        ~0u,  // no _has_bits_
        PROTOBUF_FIELD_OFFSET(::playerlocator::PlayerLocation, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::playerlocator::PlayerLocation, _impl_.uid_),
        PROTOBUF_FIELD_OFFSET(::playerlocator::PlayerLocation, _impl_.server_id_),
        PROTOBUF_FIELD_OFFSET(::playerlocator::PlayerLocation, _impl_.online_),
        PROTOBUF_FIELD_OFFSET(::playerlocator::PlayerLocation, _impl_.migrating_),
        PROTOBUF_FIELD_OFFSET(::playerlocator::PlayerLocation, _impl_.scene_id_),
        PROTOBUF_FIELD_OFFSET(::playerlocator::PlayerLocation, _impl_.token_),
        PROTOBUF_FIELD_OFFSET(::playerlocator::PlayerLocation, _impl_.ts_),
        ~0u,  // no _has_bits_
        PROTOBUF_FIELD_OFFSET(::playerlocator::PlayerId, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::playerlocator::PlayerId, _impl_.uid_),
};

static const ::_pbi::MigrationSchema
    schemas[] ABSL_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
        {0, -1, -1, sizeof(::playerlocator::PlayerLocation)},
        {15, -1, -1, sizeof(::playerlocator::PlayerId)},
};
static const ::_pb::Message* const file_default_instances[] = {
    &::playerlocator::_PlayerLocation_default_instance_._instance,
    &::playerlocator::_PlayerId_default_instance_._instance,
};
const char descriptor_table_protodef_proto_2fplayer_5flocator_2fplayer_5flocator_2eproto[] ABSL_ATTRIBUTE_SECTION_VARIABLE(
    protodesc_cold) = {
    "\n)proto/player_locator/player_locator.pr"
    "oto\022\rplayerlocator\032\030proto/common/empty.p"
    "roto\"\200\001\n\016PlayerLocation\022\013\n\003uid\030\001 \001(\003\022\021\n\t"
    "server_id\030\002 \001(\t\022\016\n\006online\030\003 \001(\010\022\021\n\tmigra"
    "ting\030\004 \001(\010\022\020\n\010scene_id\030\005 \001(\005\022\r\n\005token\030\006 "
    "\001(\t\022\n\n\002ts\030\007 \001(\003\"\027\n\010PlayerId\022\013\n\003uid\030\001 \001(\003"
    "2\274\001\n\rPlayerLocator\0224\n\013SetLocation\022\035.play"
    "erlocator.PlayerLocation\032\006.Empty\022E\n\013GetL"
    "ocation\022\027.playerlocator.PlayerId\032\035.playe"
    "rlocator.PlayerLocation\022.\n\013MarkOffline\022\027"
    ".playerlocator.PlayerId\032\006.EmptyB\tZ\007pb/ga"
    "meb\006proto3"
};
static const ::_pbi::DescriptorTable* const descriptor_table_proto_2fplayer_5flocator_2fplayer_5flocator_2eproto_deps[1] =
    {
        &::descriptor_table_proto_2fcommon_2fempty_2eproto,
};
static ::absl::once_flag descriptor_table_proto_2fplayer_5flocator_2fplayer_5flocator_2eproto_once;
PROTOBUF_CONSTINIT const ::_pbi::DescriptorTable descriptor_table_proto_2fplayer_5flocator_2fplayer_5flocator_2eproto = {
    false,
    false,
    450,
    descriptor_table_protodef_proto_2fplayer_5flocator_2fplayer_5flocator_2eproto,
    "proto/player_locator/player_locator.proto",
    &descriptor_table_proto_2fplayer_5flocator_2fplayer_5flocator_2eproto_once,
    descriptor_table_proto_2fplayer_5flocator_2fplayer_5flocator_2eproto_deps,
    1,
    2,
    schemas,
    file_default_instances,
    TableStruct_proto_2fplayer_5flocator_2fplayer_5flocator_2eproto::offsets,
    file_level_enum_descriptors_proto_2fplayer_5flocator_2fplayer_5flocator_2eproto,
    file_level_service_descriptors_proto_2fplayer_5flocator_2fplayer_5flocator_2eproto,
};
namespace playerlocator {
// ===================================================================

class PlayerLocation::_Internal {
 public:
};

PlayerLocation::PlayerLocation(::google::protobuf::Arena* arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:playerlocator.PlayerLocation)
}
inline PROTOBUF_NDEBUG_INLINE PlayerLocation::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from, const ::playerlocator::PlayerLocation& from_msg)
      : server_id_(arena, from.server_id_),
        token_(arena, from.token_),
        _cached_size_{0} {}

PlayerLocation::PlayerLocation(
    ::google::protobuf::Arena* arena,
    const PlayerLocation& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  PlayerLocation* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);
  ::memcpy(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, uid_),
           reinterpret_cast<const char *>(&from._impl_) +
               offsetof(Impl_, uid_),
           offsetof(Impl_, ts_) -
               offsetof(Impl_, uid_) +
               sizeof(Impl_::ts_));

  // @@protoc_insertion_point(copy_constructor:playerlocator.PlayerLocation)
}
inline PROTOBUF_NDEBUG_INLINE PlayerLocation::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : server_id_(arena),
        token_(arena),
        _cached_size_{0} {}

inline void PlayerLocation::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, uid_),
           0,
           offsetof(Impl_, ts_) -
               offsetof(Impl_, uid_) +
               sizeof(Impl_::ts_));
}
PlayerLocation::~PlayerLocation() {
  // @@protoc_insertion_point(destructor:playerlocator.PlayerLocation)
  SharedDtor(*this);
}
inline void PlayerLocation::SharedDtor(MessageLite& self) {
  PlayerLocation& this_ = static_cast<PlayerLocation&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  this_._impl_.server_id_.Destroy();
  this_._impl_.token_.Destroy();
  this_._impl_.~Impl_();
}

inline void* PlayerLocation::PlacementNew_(const void*, void* mem,
                                        ::google::protobuf::Arena* arena) {
  return ::new (mem) PlayerLocation(arena);
}
constexpr auto PlayerLocation::InternalNewImpl_() {
  return ::google::protobuf::internal::MessageCreator::CopyInit(sizeof(PlayerLocation),
                                            alignof(PlayerLocation));
}
PROTOBUF_CONSTINIT
PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::google::protobuf::internal::ClassDataFull PlayerLocation::_class_data_ = {
    ::google::protobuf::internal::ClassData{
        &_PlayerLocation_default_instance_._instance,
        &_table_.header,
        nullptr,  // OnDemandRegisterArenaDtor
        nullptr,  // IsInitialized
        &PlayerLocation::MergeImpl,
        ::google::protobuf::Message::GetNewImpl<PlayerLocation>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
        &PlayerLocation::SharedDtor,
        ::google::protobuf::Message::GetClearImpl<PlayerLocation>(), &PlayerLocation::ByteSizeLong,
            &PlayerLocation::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
        PROTOBUF_FIELD_OFFSET(PlayerLocation, _impl_._cached_size_),
        false,
    },
    &PlayerLocation::kDescriptorMethods,
    &descriptor_table_proto_2fplayer_5flocator_2fplayer_5flocator_2eproto,
    nullptr,  // tracker
};
const ::google::protobuf::internal::ClassData* PlayerLocation::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_class_data_.tc_table);
  return _class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<3, 7, 0, 51, 2> PlayerLocation::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    7, 56,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967168,  // skipmap
    offsetof(decltype(_table_), field_entries),
    7,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    _class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::playerlocator::PlayerLocation>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
    // int64 uid = 1;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint64_t, offsetof(PlayerLocation, _impl_.uid_), 63>(),
     {8, 63, 0, PROTOBUF_FIELD_OFFSET(PlayerLocation, _impl_.uid_)}},
    // string server_id = 2;
    {::_pbi::TcParser::FastUS1,
     {18, 63, 0, PROTOBUF_FIELD_OFFSET(PlayerLocation, _impl_.server_id_)}},
    // bool online = 3;
    {::_pbi::TcParser::SingularVarintNoZag1<bool, offsetof(PlayerLocation, _impl_.online_), 63>(),
     {24, 63, 0, PROTOBUF_FIELD_OFFSET(PlayerLocation, _impl_.online_)}},
    // bool migrating = 4;
    {::_pbi::TcParser::SingularVarintNoZag1<bool, offsetof(PlayerLocation, _impl_.migrating_), 63>(),
     {32, 63, 0, PROTOBUF_FIELD_OFFSET(PlayerLocation, _impl_.migrating_)}},
    // int32 scene_id = 5;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(PlayerLocation, _impl_.scene_id_), 63>(),
     {40, 63, 0, PROTOBUF_FIELD_OFFSET(PlayerLocation, _impl_.scene_id_)}},
    // string token = 6;
    {::_pbi::TcParser::FastUS1,
     {50, 63, 0, PROTOBUF_FIELD_OFFSET(PlayerLocation, _impl_.token_)}},
    // int64 ts = 7;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint64_t, offsetof(PlayerLocation, _impl_.ts_), 63>(),
     {56, 63, 0, PROTOBUF_FIELD_OFFSET(PlayerLocation, _impl_.ts_)}},
  }}, {{
    65535, 65535
  }}, {{
    // int64 uid = 1;
    {PROTOBUF_FIELD_OFFSET(PlayerLocation, _impl_.uid_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kInt64)},
    // string server_id = 2;
    {PROTOBUF_FIELD_OFFSET(PlayerLocation, _impl_.server_id_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // bool online = 3;
    {PROTOBUF_FIELD_OFFSET(PlayerLocation, _impl_.online_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kBool)},
    // bool migrating = 4;
    {PROTOBUF_FIELD_OFFSET(PlayerLocation, _impl_.migrating_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kBool)},
    // int32 scene_id = 5;
    {PROTOBUF_FIELD_OFFSET(PlayerLocation, _impl_.scene_id_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kInt32)},
    // string token = 6;
    {PROTOBUF_FIELD_OFFSET(PlayerLocation, _impl_.token_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // int64 ts = 7;
    {PROTOBUF_FIELD_OFFSET(PlayerLocation, _impl_.ts_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kInt64)},
  }},
  // no aux_entries
  {{
    "\34\0\11\0\0\0\5\0"
    "playerlocator.PlayerLocation"
    "server_id"
    "token"
  }},
};

PROTOBUF_NOINLINE void PlayerLocation::Clear() {
// @@protoc_insertion_point(message_clear_start:playerlocator.PlayerLocation)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.server_id_.ClearToEmpty();
  _impl_.token_.ClearToEmpty();
  ::memset(&_impl_.uid_, 0, static_cast<::size_t>(
      reinterpret_cast<char*>(&_impl_.ts_) -
      reinterpret_cast<char*>(&_impl_.uid_)) + sizeof(_impl_.ts_));
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::uint8_t* PlayerLocation::_InternalSerialize(
            const MessageLite& base, ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) {
          const PlayerLocation& this_ = static_cast<const PlayerLocation&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::uint8_t* PlayerLocation::_InternalSerialize(
            ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) const {
          const PlayerLocation& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(serialize_to_array_start:playerlocator.PlayerLocation)
          ::uint32_t cached_has_bits = 0;
          (void)cached_has_bits;

          // int64 uid = 1;
          if (this_._internal_uid() != 0) {
            target = ::google::protobuf::internal::WireFormatLite::
                WriteInt64ToArrayWithField<1>(
                    stream, this_._internal_uid(), target);
          }

          // string server_id = 2;
          if (!this_._internal_server_id().empty()) {
            const std::string& _s = this_._internal_server_id();
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "playerlocator.PlayerLocation.server_id");
            target = stream->WriteStringMaybeAliased(2, _s, target);
          }

          // bool online = 3;
          if (this_._internal_online() != 0) {
            target = stream->EnsureSpace(target);
            target = ::_pbi::WireFormatLite::WriteBoolToArray(
                3, this_._internal_online(), target);
          }

          // bool migrating = 4;
          if (this_._internal_migrating() != 0) {
            target = stream->EnsureSpace(target);
            target = ::_pbi::WireFormatLite::WriteBoolToArray(
                4, this_._internal_migrating(), target);
          }

          // int32 scene_id = 5;
          if (this_._internal_scene_id() != 0) {
            target = ::google::protobuf::internal::WireFormatLite::
                WriteInt32ToArrayWithField<5>(
                    stream, this_._internal_scene_id(), target);
          }

          // string token = 6;
          if (!this_._internal_token().empty()) {
            const std::string& _s = this_._internal_token();
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "playerlocator.PlayerLocation.token");
            target = stream->WriteStringMaybeAliased(6, _s, target);
          }

          // int64 ts = 7;
          if (this_._internal_ts() != 0) {
            target = ::google::protobuf::internal::WireFormatLite::
                WriteInt64ToArrayWithField<7>(
                    stream, this_._internal_ts(), target);
          }

          if (PROTOBUF_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
            target =
                ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
                    this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
          }
          // @@protoc_insertion_point(serialize_to_array_end:playerlocator.PlayerLocation)
          return target;
        }

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::size_t PlayerLocation::ByteSizeLong(const MessageLite& base) {
          const PlayerLocation& this_ = static_cast<const PlayerLocation&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::size_t PlayerLocation::ByteSizeLong() const {
          const PlayerLocation& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(message_byte_size_start:playerlocator.PlayerLocation)
          ::size_t total_size = 0;

          ::uint32_t cached_has_bits = 0;
          // Prevent compiler warnings about cached_has_bits being unused
          (void)cached_has_bits;

          ::_pbi::Prefetch5LinesFrom7Lines(&this_);
           {
            // string server_id = 2;
            if (!this_._internal_server_id().empty()) {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                              this_._internal_server_id());
            }
            // string token = 6;
            if (!this_._internal_token().empty()) {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                              this_._internal_token());
            }
            // int64 uid = 1;
            if (this_._internal_uid() != 0) {
              total_size += ::_pbi::WireFormatLite::Int64SizePlusOne(
                  this_._internal_uid());
            }
            // bool online = 3;
            if (this_._internal_online() != 0) {
              total_size += 2;
            }
            // bool migrating = 4;
            if (this_._internal_migrating() != 0) {
              total_size += 2;
            }
            // int32 scene_id = 5;
            if (this_._internal_scene_id() != 0) {
              total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(
                  this_._internal_scene_id());
            }
            // int64 ts = 7;
            if (this_._internal_ts() != 0) {
              total_size += ::_pbi::WireFormatLite::Int64SizePlusOne(
                  this_._internal_ts());
            }
          }
          return this_.MaybeComputeUnknownFieldsSize(total_size,
                                                     &this_._impl_._cached_size_);
        }

void PlayerLocation::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<PlayerLocation*>(&to_msg);
  auto& from = static_cast<const PlayerLocation&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:playerlocator.PlayerLocation)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_server_id().empty()) {
    _this->_internal_set_server_id(from._internal_server_id());
  }
  if (!from._internal_token().empty()) {
    _this->_internal_set_token(from._internal_token());
  }
  if (from._internal_uid() != 0) {
    _this->_impl_.uid_ = from._impl_.uid_;
  }
  if (from._internal_online() != 0) {
    _this->_impl_.online_ = from._impl_.online_;
  }
  if (from._internal_migrating() != 0) {
    _this->_impl_.migrating_ = from._impl_.migrating_;
  }
  if (from._internal_scene_id() != 0) {
    _this->_impl_.scene_id_ = from._impl_.scene_id_;
  }
  if (from._internal_ts() != 0) {
    _this->_impl_.ts_ = from._impl_.ts_;
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void PlayerLocation::CopyFrom(const PlayerLocation& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:playerlocator.PlayerLocation)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void PlayerLocation::InternalSwap(PlayerLocation* PROTOBUF_RESTRICT other) {
  using std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.server_id_, &other->_impl_.server_id_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.token_, &other->_impl_.token_, arena);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(PlayerLocation, _impl_.ts_)
      + sizeof(PlayerLocation::_impl_.ts_)
      - PROTOBUF_FIELD_OFFSET(PlayerLocation, _impl_.uid_)>(
          reinterpret_cast<char*>(&_impl_.uid_),
          reinterpret_cast<char*>(&other->_impl_.uid_));
}

::google::protobuf::Metadata PlayerLocation::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class PlayerId::_Internal {
 public:
};

PlayerId::PlayerId(::google::protobuf::Arena* arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:playerlocator.PlayerId)
}
PlayerId::PlayerId(
    ::google::protobuf::Arena* arena, const PlayerId& from)
    : PlayerId(arena) {
  MergeFrom(from);
}
inline PROTOBUF_NDEBUG_INLINE PlayerId::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0} {}

inline void PlayerId::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  _impl_.uid_ = {};
}
PlayerId::~PlayerId() {
  // @@protoc_insertion_point(destructor:playerlocator.PlayerId)
  SharedDtor(*this);
}
inline void PlayerId::SharedDtor(MessageLite& self) {
  PlayerId& this_ = static_cast<PlayerId&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  this_._impl_.~Impl_();
}

inline void* PlayerId::PlacementNew_(const void*, void* mem,
                                        ::google::protobuf::Arena* arena) {
  return ::new (mem) PlayerId(arena);
}
constexpr auto PlayerId::InternalNewImpl_() {
  return ::google::protobuf::internal::MessageCreator::ZeroInit(sizeof(PlayerId),
                                            alignof(PlayerId));
}
PROTOBUF_CONSTINIT
PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::google::protobuf::internal::ClassDataFull PlayerId::_class_data_ = {
    ::google::protobuf::internal::ClassData{
        &_PlayerId_default_instance_._instance,
        &_table_.header,
        nullptr,  // OnDemandRegisterArenaDtor
        nullptr,  // IsInitialized
        &PlayerId::MergeImpl,
        ::google::protobuf::Message::GetNewImpl<PlayerId>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
        &PlayerId::SharedDtor,
        ::google::protobuf::Message::GetClearImpl<PlayerId>(), &PlayerId::ByteSizeLong,
            &PlayerId::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
        PROTOBUF_FIELD_OFFSET(PlayerId, _impl_._cached_size_),
        false,
    },
    &PlayerId::kDescriptorMethods,
    &descriptor_table_proto_2fplayer_5flocator_2fplayer_5flocator_2eproto,
    nullptr,  // tracker
};
const ::google::protobuf::internal::ClassData* PlayerId::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_class_data_.tc_table);
  return _class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<0, 1, 0, 0, 2> PlayerId::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    1, 0,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967294,  // skipmap
    offsetof(decltype(_table_), field_entries),
    1,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    _class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::playerlocator::PlayerId>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // int64 uid = 1;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint64_t, offsetof(PlayerId, _impl_.uid_), 63>(),
     {8, 63, 0, PROTOBUF_FIELD_OFFSET(PlayerId, _impl_.uid_)}},
  }}, {{
    65535, 65535
  }}, {{
    // int64 uid = 1;
    {PROTOBUF_FIELD_OFFSET(PlayerId, _impl_.uid_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kInt64)},
  }},
  // no aux_entries
  {{
  }},
};

PROTOBUF_NOINLINE void PlayerId::Clear() {
// @@protoc_insertion_point(message_clear_start:playerlocator.PlayerId)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.uid_ = ::int64_t{0};
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::uint8_t* PlayerId::_InternalSerialize(
            const MessageLite& base, ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) {
          const PlayerId& this_ = static_cast<const PlayerId&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::uint8_t* PlayerId::_InternalSerialize(
            ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) const {
          const PlayerId& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(serialize_to_array_start:playerlocator.PlayerId)
          ::uint32_t cached_has_bits = 0;
          (void)cached_has_bits;

          // int64 uid = 1;
          if (this_._internal_uid() != 0) {
            target = ::google::protobuf::internal::WireFormatLite::
                WriteInt64ToArrayWithField<1>(
                    stream, this_._internal_uid(), target);
          }

          if (PROTOBUF_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
            target =
                ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
                    this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
          }
          // @@protoc_insertion_point(serialize_to_array_end:playerlocator.PlayerId)
          return target;
        }

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::size_t PlayerId::ByteSizeLong(const MessageLite& base) {
          const PlayerId& this_ = static_cast<const PlayerId&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::size_t PlayerId::ByteSizeLong() const {
          const PlayerId& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(message_byte_size_start:playerlocator.PlayerId)
          ::size_t total_size = 0;

          ::uint32_t cached_has_bits = 0;
          // Prevent compiler warnings about cached_has_bits being unused
          (void)cached_has_bits;

           {
            // int64 uid = 1;
            if (this_._internal_uid() != 0) {
              total_size += ::_pbi::WireFormatLite::Int64SizePlusOne(
                  this_._internal_uid());
            }
          }
          return this_.MaybeComputeUnknownFieldsSize(total_size,
                                                     &this_._impl_._cached_size_);
        }

void PlayerId::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<PlayerId*>(&to_msg);
  auto& from = static_cast<const PlayerId&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:playerlocator.PlayerId)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_uid() != 0) {
    _this->_impl_.uid_ = from._impl_.uid_;
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void PlayerId::CopyFrom(const PlayerId& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:playerlocator.PlayerId)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void PlayerId::InternalSwap(PlayerId* PROTOBUF_RESTRICT other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
        swap(_impl_.uid_, other->_impl_.uid_);
}

::google::protobuf::Metadata PlayerId::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// @@protoc_insertion_point(namespace_scope)
}  // namespace playerlocator
namespace google {
namespace protobuf {
}  // namespace protobuf
}  // namespace google
// @@protoc_insertion_point(global_scope)
PROTOBUF_ATTRIBUTE_INIT_PRIORITY2 static ::std::false_type
    _static_init2_ PROTOBUF_UNUSED =
        (::_pbi::AddDescriptors(&descriptor_table_proto_2fplayer_5flocator_2fplayer_5flocator_2eproto),
         ::std::false_type{});
#include "google/protobuf/port_undef.inc"
