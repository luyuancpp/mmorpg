// Generated by the protocol buffer compiler.  DO NOT EDIT!
// NO CHECKED-IN PROTOBUF GENCODE
// source: proto/etcd/etcd.proto
// Protobuf C++ Version: 6.31.1

#include "proto/etcd/etcd.pb.h"

#include <algorithm>
#include <type_traits>
#include "google/protobuf/io/coded_stream.h"
#include "google/protobuf/generated_message_tctable_impl.h"
#include "google/protobuf/extension_set.h"
#include "google/protobuf/generated_message_util.h"
#include "google/protobuf/wire_format_lite.h"
#include "google/protobuf/descriptor.h"
#include "google/protobuf/generated_message_reflection.h"
#include "google/protobuf/reflection_ops.h"
#include "google/protobuf/wire_format.h"
// @@protoc_insertion_point(includes)

// Must be included last.
#include "google/protobuf/port_def.inc"
PROTOBUF_PRAGMA_INIT_SEG
namespace _pb = ::google::protobuf;
namespace _pbi = ::google::protobuf::internal;
namespace _fl = ::google::protobuf::internal::field_layout;
namespace etcdserverpb {
template <typename>
PROTOBUF_CONSTEXPR WatchProgressRequest::WatchProgressRequest(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::internal::ZeroFieldsBase(WatchProgressRequest_class_data_.base()){}
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::internal::ZeroFieldsBase() {
}
#endif  // PROTOBUF_CUSTOM_VTABLE
struct WatchProgressRequestDefaultTypeInternal {
  PROTOBUF_CONSTEXPR WatchProgressRequestDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~WatchProgressRequestDefaultTypeInternal() {}
  union {
    WatchProgressRequest _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 WatchProgressRequestDefaultTypeInternal _WatchProgressRequest_default_instance_;

inline constexpr WatchCreateRequest::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        filters_{},
        _filters_cached_byte_size_{0},
        key_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        range_end_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        start_revision_{::int64_t{0}},
        watch_id_{::int64_t{0}},
        progress_notify_{false},
        prev_kv_{false},
        fragment_{false} {}

template <typename>
PROTOBUF_CONSTEXPR WatchCreateRequest::WatchCreateRequest(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(WatchCreateRequest_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct WatchCreateRequestDefaultTypeInternal {
  PROTOBUF_CONSTEXPR WatchCreateRequestDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~WatchCreateRequestDefaultTypeInternal() {}
  union {
    WatchCreateRequest _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 WatchCreateRequestDefaultTypeInternal _WatchCreateRequest_default_instance_;

inline constexpr WatchCancelRequest::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        watch_id_{::int64_t{0}} {}

template <typename>
PROTOBUF_CONSTEXPR WatchCancelRequest::WatchCancelRequest(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(WatchCancelRequest_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct WatchCancelRequestDefaultTypeInternal {
  PROTOBUF_CONSTEXPR WatchCancelRequestDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~WatchCancelRequestDefaultTypeInternal() {}
  union {
    WatchCancelRequest _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 WatchCancelRequestDefaultTypeInternal _WatchCancelRequest_default_instance_;

inline constexpr ResponseHeader::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        cluster_id_{::uint64_t{0u}},
        member_id_{::uint64_t{0u}},
        revision_{::int64_t{0}},
        raft_term_{::uint64_t{0u}} {}

template <typename>
PROTOBUF_CONSTEXPR ResponseHeader::ResponseHeader(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(ResponseHeader_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct ResponseHeaderDefaultTypeInternal {
  PROTOBUF_CONSTEXPR ResponseHeaderDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~ResponseHeaderDefaultTypeInternal() {}
  union {
    ResponseHeader _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 ResponseHeaderDefaultTypeInternal _ResponseHeader_default_instance_;

inline constexpr RangeRequest::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        key_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        range_end_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        limit_{::int64_t{0}},
        revision_{::int64_t{0}},
        sort_order_{static_cast< ::etcdserverpb::RangeRequest_SortOrder >(0)},
        sort_target_{static_cast< ::etcdserverpb::RangeRequest_SortTarget >(0)},
        min_mod_revision_{::int64_t{0}},
        max_mod_revision_{::int64_t{0}},
        min_create_revision_{::int64_t{0}},
        max_create_revision_{::int64_t{0}},
        serializable_{false},
        keys_only_{false},
        count_only_{false} {}

template <typename>
PROTOBUF_CONSTEXPR RangeRequest::RangeRequest(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(RangeRequest_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct RangeRequestDefaultTypeInternal {
  PROTOBUF_CONSTEXPR RangeRequestDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~RangeRequestDefaultTypeInternal() {}
  union {
    RangeRequest _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 RangeRequestDefaultTypeInternal _RangeRequest_default_instance_;

inline constexpr PutRequest::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        key_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        value_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        lease_{::int64_t{0}},
        prev_kv_{false},
        ignore_value_{false},
        ignore_lease_{false} {}

template <typename>
PROTOBUF_CONSTEXPR PutRequest::PutRequest(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(PutRequest_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct PutRequestDefaultTypeInternal {
  PROTOBUF_CONSTEXPR PutRequestDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~PutRequestDefaultTypeInternal() {}
  union {
    PutRequest _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 PutRequestDefaultTypeInternal _PutRequest_default_instance_;

inline constexpr LeaseTimeToLiveRequest::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        id_{::int64_t{0}},
        keys_{false} {}

template <typename>
PROTOBUF_CONSTEXPR LeaseTimeToLiveRequest::LeaseTimeToLiveRequest(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(LeaseTimeToLiveRequest_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct LeaseTimeToLiveRequestDefaultTypeInternal {
  PROTOBUF_CONSTEXPR LeaseTimeToLiveRequestDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~LeaseTimeToLiveRequestDefaultTypeInternal() {}
  union {
    LeaseTimeToLiveRequest _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 LeaseTimeToLiveRequestDefaultTypeInternal _LeaseTimeToLiveRequest_default_instance_;

inline constexpr LeaseStatus::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        id_{::int64_t{0}} {}

template <typename>
PROTOBUF_CONSTEXPR LeaseStatus::LeaseStatus(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(LeaseStatus_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct LeaseStatusDefaultTypeInternal {
  PROTOBUF_CONSTEXPR LeaseStatusDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~LeaseStatusDefaultTypeInternal() {}
  union {
    LeaseStatus _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 LeaseStatusDefaultTypeInternal _LeaseStatus_default_instance_;

inline constexpr LeaseRevokeRequest::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        id_{::int64_t{0}} {}

template <typename>
PROTOBUF_CONSTEXPR LeaseRevokeRequest::LeaseRevokeRequest(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(LeaseRevokeRequest_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct LeaseRevokeRequestDefaultTypeInternal {
  PROTOBUF_CONSTEXPR LeaseRevokeRequestDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~LeaseRevokeRequestDefaultTypeInternal() {}
  union {
    LeaseRevokeRequest _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 LeaseRevokeRequestDefaultTypeInternal _LeaseRevokeRequest_default_instance_;
template <typename>
PROTOBUF_CONSTEXPR LeaseLeasesRequest::LeaseLeasesRequest(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::internal::ZeroFieldsBase(LeaseLeasesRequest_class_data_.base()){}
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::internal::ZeroFieldsBase() {
}
#endif  // PROTOBUF_CUSTOM_VTABLE
struct LeaseLeasesRequestDefaultTypeInternal {
  PROTOBUF_CONSTEXPR LeaseLeasesRequestDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~LeaseLeasesRequestDefaultTypeInternal() {}
  union {
    LeaseLeasesRequest _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 LeaseLeasesRequestDefaultTypeInternal _LeaseLeasesRequest_default_instance_;

inline constexpr LeaseKeepAliveRequest::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        id_{::int64_t{0}} {}

template <typename>
PROTOBUF_CONSTEXPR LeaseKeepAliveRequest::LeaseKeepAliveRequest(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(LeaseKeepAliveRequest_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct LeaseKeepAliveRequestDefaultTypeInternal {
  PROTOBUF_CONSTEXPR LeaseKeepAliveRequestDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~LeaseKeepAliveRequestDefaultTypeInternal() {}
  union {
    LeaseKeepAliveRequest _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 LeaseKeepAliveRequestDefaultTypeInternal _LeaseKeepAliveRequest_default_instance_;

inline constexpr LeaseGrantRequest::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        ttl_{::int64_t{0}},
        id_{::int64_t{0}} {}

template <typename>
PROTOBUF_CONSTEXPR LeaseGrantRequest::LeaseGrantRequest(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(LeaseGrantRequest_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct LeaseGrantRequestDefaultTypeInternal {
  PROTOBUF_CONSTEXPR LeaseGrantRequestDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~LeaseGrantRequestDefaultTypeInternal() {}
  union {
    LeaseGrantRequest _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 LeaseGrantRequestDefaultTypeInternal _LeaseGrantRequest_default_instance_;

inline constexpr LeaseCheckpoint::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        id_{::int64_t{0}},
        remaining_ttl_{::int64_t{0}} {}

template <typename>
PROTOBUF_CONSTEXPR LeaseCheckpoint::LeaseCheckpoint(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(LeaseCheckpoint_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct LeaseCheckpointDefaultTypeInternal {
  PROTOBUF_CONSTEXPR LeaseCheckpointDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~LeaseCheckpointDefaultTypeInternal() {}
  union {
    LeaseCheckpoint _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 LeaseCheckpointDefaultTypeInternal _LeaseCheckpoint_default_instance_;

inline constexpr DeleteRangeRequest::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        key_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        range_end_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        prev_kv_{false} {}

template <typename>
PROTOBUF_CONSTEXPR DeleteRangeRequest::DeleteRangeRequest(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(DeleteRangeRequest_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct DeleteRangeRequestDefaultTypeInternal {
  PROTOBUF_CONSTEXPR DeleteRangeRequestDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~DeleteRangeRequestDefaultTypeInternal() {}
  union {
    DeleteRangeRequest _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 DeleteRangeRequestDefaultTypeInternal _DeleteRangeRequest_default_instance_;

inline constexpr Compare::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        key_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        range_end_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        result_{static_cast< ::etcdserverpb::Compare_CompareResult >(0)},
        target_{static_cast< ::etcdserverpb::Compare_CompareTarget >(0)},
        target_union_{},
        _oneof_case_{} {}

template <typename>
PROTOBUF_CONSTEXPR Compare::Compare(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(Compare_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct CompareDefaultTypeInternal {
  PROTOBUF_CONSTEXPR CompareDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~CompareDefaultTypeInternal() {}
  union {
    Compare _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 CompareDefaultTypeInternal _Compare_default_instance_;

inline constexpr CompactionRequest::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        revision_{::int64_t{0}},
        physical_{false} {}

template <typename>
PROTOBUF_CONSTEXPR CompactionRequest::CompactionRequest(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(CompactionRequest_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct CompactionRequestDefaultTypeInternal {
  PROTOBUF_CONSTEXPR CompactionRequestDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~CompactionRequestDefaultTypeInternal() {}
  union {
    CompactionRequest _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 CompactionRequestDefaultTypeInternal _CompactionRequest_default_instance_;

inline constexpr WatchRequest::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : request_union_{},
        _cached_size_{0},
        _oneof_case_{} {}

template <typename>
PROTOBUF_CONSTEXPR WatchRequest::WatchRequest(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(WatchRequest_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct WatchRequestDefaultTypeInternal {
  PROTOBUF_CONSTEXPR WatchRequestDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~WatchRequestDefaultTypeInternal() {}
  union {
    WatchRequest _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 WatchRequestDefaultTypeInternal _WatchRequest_default_instance_;

inline constexpr RequestOp::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : request_{},
        _cached_size_{0},
        _oneof_case_{} {}

template <typename>
PROTOBUF_CONSTEXPR RequestOp::RequestOp(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(RequestOp_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct RequestOpDefaultTypeInternal {
  PROTOBUF_CONSTEXPR RequestOpDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~RequestOpDefaultTypeInternal() {}
  union {
    RequestOp _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 RequestOpDefaultTypeInternal _RequestOp_default_instance_;

inline constexpr TxnRequest::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : compare_{},
        success_{},
        failure_{},
        _cached_size_{0} {}

template <typename>
PROTOBUF_CONSTEXPR TxnRequest::TxnRequest(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(TxnRequest_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct TxnRequestDefaultTypeInternal {
  PROTOBUF_CONSTEXPR TxnRequestDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~TxnRequestDefaultTypeInternal() {}
  union {
    TxnRequest _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 TxnRequestDefaultTypeInternal _TxnRequest_default_instance_;

inline constexpr RangeResponse::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        kvs_{},
        header_{nullptr},
        count_{::int64_t{0}},
        more_{false} {}

template <typename>
PROTOBUF_CONSTEXPR RangeResponse::RangeResponse(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(RangeResponse_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct RangeResponseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR RangeResponseDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~RangeResponseDefaultTypeInternal() {}
  union {
    RangeResponse _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 RangeResponseDefaultTypeInternal _RangeResponse_default_instance_;

inline constexpr PutResponse::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        header_{nullptr},
        prev_kv_{nullptr} {}

template <typename>
PROTOBUF_CONSTEXPR PutResponse::PutResponse(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(PutResponse_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct PutResponseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR PutResponseDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~PutResponseDefaultTypeInternal() {}
  union {
    PutResponse _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 PutResponseDefaultTypeInternal _PutResponse_default_instance_;

inline constexpr LeaseTimeToLiveResponse::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        keys_{},
        header_{nullptr},
        id_{::int64_t{0}},
        ttl_{::int64_t{0}},
        grantedttl_{::int64_t{0}} {}

template <typename>
PROTOBUF_CONSTEXPR LeaseTimeToLiveResponse::LeaseTimeToLiveResponse(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(LeaseTimeToLiveResponse_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct LeaseTimeToLiveResponseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR LeaseTimeToLiveResponseDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~LeaseTimeToLiveResponseDefaultTypeInternal() {}
  union {
    LeaseTimeToLiveResponse _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 LeaseTimeToLiveResponseDefaultTypeInternal _LeaseTimeToLiveResponse_default_instance_;

inline constexpr LeaseRevokeResponse::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        header_{nullptr} {}

template <typename>
PROTOBUF_CONSTEXPR LeaseRevokeResponse::LeaseRevokeResponse(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(LeaseRevokeResponse_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct LeaseRevokeResponseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR LeaseRevokeResponseDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~LeaseRevokeResponseDefaultTypeInternal() {}
  union {
    LeaseRevokeResponse _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 LeaseRevokeResponseDefaultTypeInternal _LeaseRevokeResponse_default_instance_;

inline constexpr LeaseLeasesResponse::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        leases_{},
        header_{nullptr} {}

template <typename>
PROTOBUF_CONSTEXPR LeaseLeasesResponse::LeaseLeasesResponse(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(LeaseLeasesResponse_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct LeaseLeasesResponseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR LeaseLeasesResponseDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~LeaseLeasesResponseDefaultTypeInternal() {}
  union {
    LeaseLeasesResponse _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 LeaseLeasesResponseDefaultTypeInternal _LeaseLeasesResponse_default_instance_;

inline constexpr LeaseKeepAliveResponse::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        header_{nullptr},
        id_{::int64_t{0}},
        ttl_{::int64_t{0}} {}

template <typename>
PROTOBUF_CONSTEXPR LeaseKeepAliveResponse::LeaseKeepAliveResponse(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(LeaseKeepAliveResponse_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct LeaseKeepAliveResponseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR LeaseKeepAliveResponseDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~LeaseKeepAliveResponseDefaultTypeInternal() {}
  union {
    LeaseKeepAliveResponse _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 LeaseKeepAliveResponseDefaultTypeInternal _LeaseKeepAliveResponse_default_instance_;

inline constexpr LeaseGrantResponse::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        error_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        header_{nullptr},
        id_{::int64_t{0}},
        ttl_{::int64_t{0}} {}

template <typename>
PROTOBUF_CONSTEXPR LeaseGrantResponse::LeaseGrantResponse(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(LeaseGrantResponse_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct LeaseGrantResponseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR LeaseGrantResponseDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~LeaseGrantResponseDefaultTypeInternal() {}
  union {
    LeaseGrantResponse _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 LeaseGrantResponseDefaultTypeInternal _LeaseGrantResponse_default_instance_;

inline constexpr LeaseCheckpointResponse::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        header_{nullptr} {}

template <typename>
PROTOBUF_CONSTEXPR LeaseCheckpointResponse::LeaseCheckpointResponse(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(LeaseCheckpointResponse_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct LeaseCheckpointResponseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR LeaseCheckpointResponseDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~LeaseCheckpointResponseDefaultTypeInternal() {}
  union {
    LeaseCheckpointResponse _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 LeaseCheckpointResponseDefaultTypeInternal _LeaseCheckpointResponse_default_instance_;

inline constexpr LeaseCheckpointRequest::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : checkpoints_{},
        _cached_size_{0} {}

template <typename>
PROTOBUF_CONSTEXPR LeaseCheckpointRequest::LeaseCheckpointRequest(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(LeaseCheckpointRequest_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct LeaseCheckpointRequestDefaultTypeInternal {
  PROTOBUF_CONSTEXPR LeaseCheckpointRequestDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~LeaseCheckpointRequestDefaultTypeInternal() {}
  union {
    LeaseCheckpointRequest _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 LeaseCheckpointRequestDefaultTypeInternal _LeaseCheckpointRequest_default_instance_;

inline constexpr DeleteRangeResponse::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        prev_kvs_{},
        header_{nullptr},
        deleted_{::int64_t{0}} {}

template <typename>
PROTOBUF_CONSTEXPR DeleteRangeResponse::DeleteRangeResponse(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(DeleteRangeResponse_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct DeleteRangeResponseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR DeleteRangeResponseDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~DeleteRangeResponseDefaultTypeInternal() {}
  union {
    DeleteRangeResponse _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 DeleteRangeResponseDefaultTypeInternal _DeleteRangeResponse_default_instance_;

inline constexpr CompactionResponse::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        header_{nullptr} {}

template <typename>
PROTOBUF_CONSTEXPR CompactionResponse::CompactionResponse(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(CompactionResponse_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct CompactionResponseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR CompactionResponseDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~CompactionResponseDefaultTypeInternal() {}
  union {
    CompactionResponse _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 CompactionResponseDefaultTypeInternal _CompactionResponse_default_instance_;

inline constexpr WatchResponse::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        events_{},
        cancel_reason_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        header_{nullptr},
        watch_id_{::int64_t{0}},
        compact_revision_{::int64_t{0}},
        created_{false},
        canceled_{false},
        fragment_{false} {}

template <typename>
PROTOBUF_CONSTEXPR WatchResponse::WatchResponse(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(WatchResponse_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct WatchResponseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR WatchResponseDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~WatchResponseDefaultTypeInternal() {}
  union {
    WatchResponse _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 WatchResponseDefaultTypeInternal _WatchResponse_default_instance_;

inline constexpr ResponseOp::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : response_{},
        _cached_size_{0},
        _oneof_case_{} {}

template <typename>
PROTOBUF_CONSTEXPR ResponseOp::ResponseOp(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(ResponseOp_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct ResponseOpDefaultTypeInternal {
  PROTOBUF_CONSTEXPR ResponseOpDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~ResponseOpDefaultTypeInternal() {}
  union {
    ResponseOp _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 ResponseOpDefaultTypeInternal _ResponseOp_default_instance_;

inline constexpr TxnResponse::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        responses_{},
        header_{nullptr},
        succeeded_{false} {}

template <typename>
PROTOBUF_CONSTEXPR TxnResponse::TxnResponse(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(TxnResponse_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct TxnResponseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR TxnResponseDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~TxnResponseDefaultTypeInternal() {}
  union {
    TxnResponse _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 TxnResponseDefaultTypeInternal _TxnResponse_default_instance_;
}  // namespace etcdserverpb
static const ::_pb::EnumDescriptor* PROTOBUF_NONNULL
    file_level_enum_descriptors_proto_2fetcd_2fetcd_2eproto[5];
static constexpr const ::_pb::ServiceDescriptor *PROTOBUF_NONNULL *PROTOBUF_NULLABLE
    file_level_service_descriptors_proto_2fetcd_2fetcd_2eproto = nullptr;
const ::uint32_t
    TableStruct_proto_2fetcd_2fetcd_2eproto::offsets[] ABSL_ATTRIBUTE_SECTION_VARIABLE(
        protodesc_cold) = {
        0x081, // bitmap
        PROTOBUF_FIELD_OFFSET(::etcdserverpb::ResponseHeader, _impl_._has_bits_),
        7, // hasbit index offset
        PROTOBUF_FIELD_OFFSET(::etcdserverpb::ResponseHeader, _impl_.cluster_id_),
        PROTOBUF_FIELD_OFFSET(::etcdserverpb::ResponseHeader, _impl_.member_id_),
        PROTOBUF_FIELD_OFFSET(::etcdserverpb::ResponseHeader, _impl_.revision_),
        PROTOBUF_FIELD_OFFSET(::etcdserverpb::ResponseHeader, _impl_.raft_term_),
        0,
        1,
        2,
        3,
        0x081, // bitmap
        PROTOBUF_FIELD_OFFSET(::etcdserverpb::RangeRequest, _impl_._has_bits_),
        16, // hasbit index offset
        PROTOBUF_FIELD_OFFSET(::etcdserverpb::RangeRequest, _impl_.key_),
        PROTOBUF_FIELD_OFFSET(::etcdserverpb::RangeRequest, _impl_.range_end_),
        PROTOBUF_FIELD_OFFSET(::etcdserverpb::RangeRequest, _impl_.limit_),
        PROTOBUF_FIELD_OFFSET(::etcdserverpb::RangeRequest, _impl_.revision_),
        PROTOBUF_FIELD_OFFSET(::etcdserverpb::RangeRequest, _impl_.sort_order_),
        PROTOBUF_FIELD_OFFSET(::etcdserverpb::RangeRequest, _impl_.sort_target_),
        PROTOBUF_FIELD_OFFSET(::etcdserverpb::RangeRequest, _impl_.serializable_),
        PROTOBUF_FIELD_OFFSET(::etcdserverpb::RangeRequest, _impl_.keys_only_),
        PROTOBUF_FIELD_OFFSET(::etcdserverpb::RangeRequest, _impl_.count_only_),
        PROTOBUF_FIELD_OFFSET(::etcdserverpb::RangeRequest, _impl_.min_mod_revision_),
        PROTOBUF_FIELD_OFFSET(::etcdserverpb::RangeRequest, _impl_.max_mod_revision_),
        PROTOBUF_FIELD_OFFSET(::etcdserverpb::RangeRequest, _impl_.min_create_revision_),
        PROTOBUF_FIELD_OFFSET(::etcdserverpb::RangeRequest, _impl_.max_create_revision_),
        0,
        1,
        2,
        3,
        4,
        5,
        10,
        11,
        12,
        6,
        7,
        8,
        9,
        0x081, // bitmap
        PROTOBUF_FIELD_OFFSET(::etcdserverpb::RangeResponse, _impl_._has_bits_),
        7, // hasbit index offset
        PROTOBUF_FIELD_OFFSET(::etcdserverpb::RangeResponse, _impl_.header_),
        PROTOBUF_FIELD_OFFSET(::etcdserverpb::RangeResponse, _impl_.kvs_),
        PROTOBUF_FIELD_OFFSET(::etcdserverpb::RangeResponse, _impl_.more_),
        PROTOBUF_FIELD_OFFSET(::etcdserverpb::RangeResponse, _impl_.count_),
        0,
        ~0u,
        2,
        1,
        0x081, // bitmap
        PROTOBUF_FIELD_OFFSET(::etcdserverpb::PutRequest, _impl_._has_bits_),
        9, // hasbit index offset
        PROTOBUF_FIELD_OFFSET(::etcdserverpb::PutRequest, _impl_.key_),
        PROTOBUF_FIELD_OFFSET(::etcdserverpb::PutRequest, _impl_.value_),
        PROTOBUF_FIELD_OFFSET(::etcdserverpb::PutRequest, _impl_.lease_),
        PROTOBUF_FIELD_OFFSET(::etcdserverpb::PutRequest, _impl_.prev_kv_),
        PROTOBUF_FIELD_OFFSET(::etcdserverpb::PutRequest, _impl_.ignore_value_),
        PROTOBUF_FIELD_OFFSET(::etcdserverpb::PutRequest, _impl_.ignore_lease_),
        0,
        1,
        2,
        3,
        4,
        5,
        0x081, // bitmap
        PROTOBUF_FIELD_OFFSET(::etcdserverpb::PutResponse, _impl_._has_bits_),
        5, // hasbit index offset
        PROTOBUF_FIELD_OFFSET(::etcdserverpb::PutResponse, _impl_.header_),
        PROTOBUF_FIELD_OFFSET(::etcdserverpb::PutResponse, _impl_.prev_kv_),
        0,
        1,
        0x081, // bitmap
        PROTOBUF_FIELD_OFFSET(::etcdserverpb::DeleteRangeRequest, _impl_._has_bits_),
        6, // hasbit index offset
        PROTOBUF_FIELD_OFFSET(::etcdserverpb::DeleteRangeRequest, _impl_.key_),
        PROTOBUF_FIELD_OFFSET(::etcdserverpb::DeleteRangeRequest, _impl_.range_end_),
        PROTOBUF_FIELD_OFFSET(::etcdserverpb::DeleteRangeRequest, _impl_.prev_kv_),
        0,
        1,
        2,
        0x081, // bitmap
        PROTOBUF_FIELD_OFFSET(::etcdserverpb::DeleteRangeResponse, _impl_._has_bits_),
        6, // hasbit index offset
        PROTOBUF_FIELD_OFFSET(::etcdserverpb::DeleteRangeResponse, _impl_.header_),
        PROTOBUF_FIELD_OFFSET(::etcdserverpb::DeleteRangeResponse, _impl_.deleted_),
        PROTOBUF_FIELD_OFFSET(::etcdserverpb::DeleteRangeResponse, _impl_.prev_kvs_),
        0,
        1,
        ~0u,
        0x004, // bitmap
        PROTOBUF_FIELD_OFFSET(::etcdserverpb::RequestOp, _impl_._oneof_case_[0]),
        ::_pbi::kInvalidFieldOffsetTag,
        ::_pbi::kInvalidFieldOffsetTag,
        ::_pbi::kInvalidFieldOffsetTag,
        ::_pbi::kInvalidFieldOffsetTag,
        PROTOBUF_FIELD_OFFSET(::etcdserverpb::RequestOp, _impl_.request_),
        0x004, // bitmap
        PROTOBUF_FIELD_OFFSET(::etcdserverpb::ResponseOp, _impl_._oneof_case_[0]),
        ::_pbi::kInvalidFieldOffsetTag,
        ::_pbi::kInvalidFieldOffsetTag,
        ::_pbi::kInvalidFieldOffsetTag,
        ::_pbi::kInvalidFieldOffsetTag,
        PROTOBUF_FIELD_OFFSET(::etcdserverpb::ResponseOp, _impl_.response_),
        0x085, // bitmap
        PROTOBUF_FIELD_OFFSET(::etcdserverpb::Compare, _impl_._has_bits_),
        PROTOBUF_FIELD_OFFSET(::etcdserverpb::Compare, _impl_._oneof_case_[0]),
        14, // hasbit index offset
        PROTOBUF_FIELD_OFFSET(::etcdserverpb::Compare, _impl_.result_),
        PROTOBUF_FIELD_OFFSET(::etcdserverpb::Compare, _impl_.target_),
        PROTOBUF_FIELD_OFFSET(::etcdserverpb::Compare, _impl_.key_),
        ::_pbi::kInvalidFieldOffsetTag,
        ::_pbi::kInvalidFieldOffsetTag,
        ::_pbi::kInvalidFieldOffsetTag,
        ::_pbi::kInvalidFieldOffsetTag,
        ::_pbi::kInvalidFieldOffsetTag,
        PROTOBUF_FIELD_OFFSET(::etcdserverpb::Compare, _impl_.range_end_),
        PROTOBUF_FIELD_OFFSET(::etcdserverpb::Compare, _impl_.target_union_),
        2,
        3,
        0,
        ~0u,
        ~0u,
        ~0u,
        ~0u,
        ~0u,
        1,
        0x000, // bitmap
        PROTOBUF_FIELD_OFFSET(::etcdserverpb::TxnRequest, _impl_.compare_),
        PROTOBUF_FIELD_OFFSET(::etcdserverpb::TxnRequest, _impl_.success_),
        PROTOBUF_FIELD_OFFSET(::etcdserverpb::TxnRequest, _impl_.failure_),
        0x081, // bitmap
        PROTOBUF_FIELD_OFFSET(::etcdserverpb::TxnResponse, _impl_._has_bits_),
        6, // hasbit index offset
        PROTOBUF_FIELD_OFFSET(::etcdserverpb::TxnResponse, _impl_.header_),
        PROTOBUF_FIELD_OFFSET(::etcdserverpb::TxnResponse, _impl_.succeeded_),
        PROTOBUF_FIELD_OFFSET(::etcdserverpb::TxnResponse, _impl_.responses_),
        0,
        1,
        ~0u,
        0x081, // bitmap
        PROTOBUF_FIELD_OFFSET(::etcdserverpb::CompactionRequest, _impl_._has_bits_),
        5, // hasbit index offset
        PROTOBUF_FIELD_OFFSET(::etcdserverpb::CompactionRequest, _impl_.revision_),
        PROTOBUF_FIELD_OFFSET(::etcdserverpb::CompactionRequest, _impl_.physical_),
        0,
        1,
        0x081, // bitmap
        PROTOBUF_FIELD_OFFSET(::etcdserverpb::CompactionResponse, _impl_._has_bits_),
        4, // hasbit index offset
        PROTOBUF_FIELD_OFFSET(::etcdserverpb::CompactionResponse, _impl_.header_),
        0,
        0x004, // bitmap
        PROTOBUF_FIELD_OFFSET(::etcdserverpb::WatchRequest, _impl_._oneof_case_[0]),
        ::_pbi::kInvalidFieldOffsetTag,
        ::_pbi::kInvalidFieldOffsetTag,
        ::_pbi::kInvalidFieldOffsetTag,
        PROTOBUF_FIELD_OFFSET(::etcdserverpb::WatchRequest, _impl_.request_union_),
        0x081, // bitmap
        PROTOBUF_FIELD_OFFSET(::etcdserverpb::WatchCreateRequest, _impl_._has_bits_),
        11, // hasbit index offset
        PROTOBUF_FIELD_OFFSET(::etcdserverpb::WatchCreateRequest, _impl_.key_),
        PROTOBUF_FIELD_OFFSET(::etcdserverpb::WatchCreateRequest, _impl_.range_end_),
        PROTOBUF_FIELD_OFFSET(::etcdserverpb::WatchCreateRequest, _impl_.start_revision_),
        PROTOBUF_FIELD_OFFSET(::etcdserverpb::WatchCreateRequest, _impl_.progress_notify_),
        PROTOBUF_FIELD_OFFSET(::etcdserverpb::WatchCreateRequest, _impl_.filters_),
        PROTOBUF_FIELD_OFFSET(::etcdserverpb::WatchCreateRequest, _impl_.prev_kv_),
        PROTOBUF_FIELD_OFFSET(::etcdserverpb::WatchCreateRequest, _impl_.watch_id_),
        PROTOBUF_FIELD_OFFSET(::etcdserverpb::WatchCreateRequest, _impl_.fragment_),
        0,
        1,
        2,
        4,
        ~0u,
        5,
        3,
        6,
        0x081, // bitmap
        PROTOBUF_FIELD_OFFSET(::etcdserverpb::WatchCancelRequest, _impl_._has_bits_),
        4, // hasbit index offset
        PROTOBUF_FIELD_OFFSET(::etcdserverpb::WatchCancelRequest, _impl_.watch_id_),
        0,
        0x000, // bitmap
        0x081, // bitmap
        PROTOBUF_FIELD_OFFSET(::etcdserverpb::WatchResponse, _impl_._has_bits_),
        11, // hasbit index offset
        PROTOBUF_FIELD_OFFSET(::etcdserverpb::WatchResponse, _impl_.header_),
        PROTOBUF_FIELD_OFFSET(::etcdserverpb::WatchResponse, _impl_.watch_id_),
        PROTOBUF_FIELD_OFFSET(::etcdserverpb::WatchResponse, _impl_.created_),
        PROTOBUF_FIELD_OFFSET(::etcdserverpb::WatchResponse, _impl_.canceled_),
        PROTOBUF_FIELD_OFFSET(::etcdserverpb::WatchResponse, _impl_.compact_revision_),
        PROTOBUF_FIELD_OFFSET(::etcdserverpb::WatchResponse, _impl_.cancel_reason_),
        PROTOBUF_FIELD_OFFSET(::etcdserverpb::WatchResponse, _impl_.fragment_),
        PROTOBUF_FIELD_OFFSET(::etcdserverpb::WatchResponse, _impl_.events_),
        1,
        2,
        4,
        5,
        3,
        0,
        6,
        ~0u,
        0x081, // bitmap
        PROTOBUF_FIELD_OFFSET(::etcdserverpb::LeaseGrantRequest, _impl_._has_bits_),
        5, // hasbit index offset
        PROTOBUF_FIELD_OFFSET(::etcdserverpb::LeaseGrantRequest, _impl_.ttl_),
        PROTOBUF_FIELD_OFFSET(::etcdserverpb::LeaseGrantRequest, _impl_.id_),
        0,
        1,
        0x081, // bitmap
        PROTOBUF_FIELD_OFFSET(::etcdserverpb::LeaseGrantResponse, _impl_._has_bits_),
        7, // hasbit index offset
        PROTOBUF_FIELD_OFFSET(::etcdserverpb::LeaseGrantResponse, _impl_.header_),
        PROTOBUF_FIELD_OFFSET(::etcdserverpb::LeaseGrantResponse, _impl_.id_),
        PROTOBUF_FIELD_OFFSET(::etcdserverpb::LeaseGrantResponse, _impl_.ttl_),
        PROTOBUF_FIELD_OFFSET(::etcdserverpb::LeaseGrantResponse, _impl_.error_),
        1,
        2,
        3,
        0,
        0x081, // bitmap
        PROTOBUF_FIELD_OFFSET(::etcdserverpb::LeaseRevokeRequest, _impl_._has_bits_),
        4, // hasbit index offset
        PROTOBUF_FIELD_OFFSET(::etcdserverpb::LeaseRevokeRequest, _impl_.id_),
        0,
        0x081, // bitmap
        PROTOBUF_FIELD_OFFSET(::etcdserverpb::LeaseRevokeResponse, _impl_._has_bits_),
        4, // hasbit index offset
        PROTOBUF_FIELD_OFFSET(::etcdserverpb::LeaseRevokeResponse, _impl_.header_),
        0,
        0x081, // bitmap
        PROTOBUF_FIELD_OFFSET(::etcdserverpb::LeaseCheckpoint, _impl_._has_bits_),
        5, // hasbit index offset
        PROTOBUF_FIELD_OFFSET(::etcdserverpb::LeaseCheckpoint, _impl_.id_),
        PROTOBUF_FIELD_OFFSET(::etcdserverpb::LeaseCheckpoint, _impl_.remaining_ttl_),
        0,
        1,
        0x000, // bitmap
        PROTOBUF_FIELD_OFFSET(::etcdserverpb::LeaseCheckpointRequest, _impl_.checkpoints_),
        0x081, // bitmap
        PROTOBUF_FIELD_OFFSET(::etcdserverpb::LeaseCheckpointResponse, _impl_._has_bits_),
        4, // hasbit index offset
        PROTOBUF_FIELD_OFFSET(::etcdserverpb::LeaseCheckpointResponse, _impl_.header_),
        0,
        0x081, // bitmap
        PROTOBUF_FIELD_OFFSET(::etcdserverpb::LeaseKeepAliveRequest, _impl_._has_bits_),
        4, // hasbit index offset
        PROTOBUF_FIELD_OFFSET(::etcdserverpb::LeaseKeepAliveRequest, _impl_.id_),
        0,
        0x081, // bitmap
        PROTOBUF_FIELD_OFFSET(::etcdserverpb::LeaseKeepAliveResponse, _impl_._has_bits_),
        6, // hasbit index offset
        PROTOBUF_FIELD_OFFSET(::etcdserverpb::LeaseKeepAliveResponse, _impl_.header_),
        PROTOBUF_FIELD_OFFSET(::etcdserverpb::LeaseKeepAliveResponse, _impl_.id_),
        PROTOBUF_FIELD_OFFSET(::etcdserverpb::LeaseKeepAliveResponse, _impl_.ttl_),
        0,
        1,
        2,
        0x081, // bitmap
        PROTOBUF_FIELD_OFFSET(::etcdserverpb::LeaseTimeToLiveRequest, _impl_._has_bits_),
        5, // hasbit index offset
        PROTOBUF_FIELD_OFFSET(::etcdserverpb::LeaseTimeToLiveRequest, _impl_.id_),
        PROTOBUF_FIELD_OFFSET(::etcdserverpb::LeaseTimeToLiveRequest, _impl_.keys_),
        0,
        1,
        0x081, // bitmap
        PROTOBUF_FIELD_OFFSET(::etcdserverpb::LeaseTimeToLiveResponse, _impl_._has_bits_),
        8, // hasbit index offset
        PROTOBUF_FIELD_OFFSET(::etcdserverpb::LeaseTimeToLiveResponse, _impl_.header_),
        PROTOBUF_FIELD_OFFSET(::etcdserverpb::LeaseTimeToLiveResponse, _impl_.id_),
        PROTOBUF_FIELD_OFFSET(::etcdserverpb::LeaseTimeToLiveResponse, _impl_.ttl_),
        PROTOBUF_FIELD_OFFSET(::etcdserverpb::LeaseTimeToLiveResponse, _impl_.grantedttl_),
        PROTOBUF_FIELD_OFFSET(::etcdserverpb::LeaseTimeToLiveResponse, _impl_.keys_),
        0,
        1,
        2,
        3,
        ~0u,
        0x000, // bitmap
        0x081, // bitmap
        PROTOBUF_FIELD_OFFSET(::etcdserverpb::LeaseStatus, _impl_._has_bits_),
        4, // hasbit index offset
        PROTOBUF_FIELD_OFFSET(::etcdserverpb::LeaseStatus, _impl_.id_),
        0,
        0x081, // bitmap
        PROTOBUF_FIELD_OFFSET(::etcdserverpb::LeaseLeasesResponse, _impl_._has_bits_),
        5, // hasbit index offset
        PROTOBUF_FIELD_OFFSET(::etcdserverpb::LeaseLeasesResponse, _impl_.header_),
        PROTOBUF_FIELD_OFFSET(::etcdserverpb::LeaseLeasesResponse, _impl_.leases_),
        0,
        ~0u,
};

static const ::_pbi::MigrationSchema
    schemas[] ABSL_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
        {0, sizeof(::etcdserverpb::ResponseHeader)},
        {11, sizeof(::etcdserverpb::RangeRequest)},
        {40, sizeof(::etcdserverpb::RangeResponse)},
        {51, sizeof(::etcdserverpb::PutRequest)},
        {66, sizeof(::etcdserverpb::PutResponse)},
        {73, sizeof(::etcdserverpb::DeleteRangeRequest)},
        {82, sizeof(::etcdserverpb::DeleteRangeResponse)},
        {91, sizeof(::etcdserverpb::RequestOp)},
        {98, sizeof(::etcdserverpb::ResponseOp)},
        {105, sizeof(::etcdserverpb::Compare)},
        {128, sizeof(::etcdserverpb::TxnRequest)},
        {132, sizeof(::etcdserverpb::TxnResponse)},
        {141, sizeof(::etcdserverpb::CompactionRequest)},
        {148, sizeof(::etcdserverpb::CompactionResponse)},
        {153, sizeof(::etcdserverpb::WatchRequest)},
        {159, sizeof(::etcdserverpb::WatchCreateRequest)},
        {178, sizeof(::etcdserverpb::WatchCancelRequest)},
        {183, sizeof(::etcdserverpb::WatchProgressRequest)},
        {184, sizeof(::etcdserverpb::WatchResponse)},
        {203, sizeof(::etcdserverpb::LeaseGrantRequest)},
        {210, sizeof(::etcdserverpb::LeaseGrantResponse)},
        {221, sizeof(::etcdserverpb::LeaseRevokeRequest)},
        {226, sizeof(::etcdserverpb::LeaseRevokeResponse)},
        {231, sizeof(::etcdserverpb::LeaseCheckpoint)},
        {238, sizeof(::etcdserverpb::LeaseCheckpointRequest)},
        {240, sizeof(::etcdserverpb::LeaseCheckpointResponse)},
        {245, sizeof(::etcdserverpb::LeaseKeepAliveRequest)},
        {250, sizeof(::etcdserverpb::LeaseKeepAliveResponse)},
        {259, sizeof(::etcdserverpb::LeaseTimeToLiveRequest)},
        {266, sizeof(::etcdserverpb::LeaseTimeToLiveResponse)},
        {279, sizeof(::etcdserverpb::LeaseLeasesRequest)},
        {280, sizeof(::etcdserverpb::LeaseStatus)},
        {285, sizeof(::etcdserverpb::LeaseLeasesResponse)},
};
static const ::_pb::Message* PROTOBUF_NONNULL const file_default_instances[] = {
    &::etcdserverpb::_ResponseHeader_default_instance_._instance,
    &::etcdserverpb::_RangeRequest_default_instance_._instance,
    &::etcdserverpb::_RangeResponse_default_instance_._instance,
    &::etcdserverpb::_PutRequest_default_instance_._instance,
    &::etcdserverpb::_PutResponse_default_instance_._instance,
    &::etcdserverpb::_DeleteRangeRequest_default_instance_._instance,
    &::etcdserverpb::_DeleteRangeResponse_default_instance_._instance,
    &::etcdserverpb::_RequestOp_default_instance_._instance,
    &::etcdserverpb::_ResponseOp_default_instance_._instance,
    &::etcdserverpb::_Compare_default_instance_._instance,
    &::etcdserverpb::_TxnRequest_default_instance_._instance,
    &::etcdserverpb::_TxnResponse_default_instance_._instance,
    &::etcdserverpb::_CompactionRequest_default_instance_._instance,
    &::etcdserverpb::_CompactionResponse_default_instance_._instance,
    &::etcdserverpb::_WatchRequest_default_instance_._instance,
    &::etcdserverpb::_WatchCreateRequest_default_instance_._instance,
    &::etcdserverpb::_WatchCancelRequest_default_instance_._instance,
    &::etcdserverpb::_WatchProgressRequest_default_instance_._instance,
    &::etcdserverpb::_WatchResponse_default_instance_._instance,
    &::etcdserverpb::_LeaseGrantRequest_default_instance_._instance,
    &::etcdserverpb::_LeaseGrantResponse_default_instance_._instance,
    &::etcdserverpb::_LeaseRevokeRequest_default_instance_._instance,
    &::etcdserverpb::_LeaseRevokeResponse_default_instance_._instance,
    &::etcdserverpb::_LeaseCheckpoint_default_instance_._instance,
    &::etcdserverpb::_LeaseCheckpointRequest_default_instance_._instance,
    &::etcdserverpb::_LeaseCheckpointResponse_default_instance_._instance,
    &::etcdserverpb::_LeaseKeepAliveRequest_default_instance_._instance,
    &::etcdserverpb::_LeaseKeepAliveResponse_default_instance_._instance,
    &::etcdserverpb::_LeaseTimeToLiveRequest_default_instance_._instance,
    &::etcdserverpb::_LeaseTimeToLiveResponse_default_instance_._instance,
    &::etcdserverpb::_LeaseLeasesRequest_default_instance_._instance,
    &::etcdserverpb::_LeaseStatus_default_instance_._instance,
    &::etcdserverpb::_LeaseLeasesResponse_default_instance_._instance,
};
const char descriptor_table_protodef_proto_2fetcd_2fetcd_2eproto[] ABSL_ATTRIBUTE_SECTION_VARIABLE(
    protodesc_cold) = {
    "\n\025proto/etcd/etcd.proto\022\014etcdserverpb\032\023p"
    "roto/etcd/kv.proto\032\030proto/etcd/version.p"
    "roto\"e\n\016ResponseHeader\022\022\n\ncluster_id\030\001 \001"
    "(\004\022\021\n\tmember_id\030\002 \001(\004\022\020\n\010revision\030\003 \001(\003\022"
    "\021\n\traft_term\030\004 \001(\004:\007\202\265\030\0033.0\"\243\004\n\014RangeReq"
    "uest\022\013\n\003key\030\001 \001(\014\022\021\n\trange_end\030\002 \001(\014\022\r\n\005"
    "limit\030\003 \001(\003\022\020\n\010revision\030\004 \001(\003\0228\n\nsort_or"
    "der\030\005 \001(\0162$.etcdserverpb.RangeRequest.So"
    "rtOrder\022:\n\013sort_target\030\006 \001(\0162%.etcdserve"
    "rpb.RangeRequest.SortTarget\022\024\n\014serializa"
    "ble\030\007 \001(\010\022\021\n\tkeys_only\030\010 \001(\010\022\022\n\ncount_on"
    "ly\030\t \001(\010\022!\n\020min_mod_revision\030\n \001(\003B\007\212\265\030\003"
    "3.1\022!\n\020max_mod_revision\030\013 \001(\003B\007\212\265\030\0033.1\022$"
    "\n\023min_create_revision\030\014 \001(\003B\007\212\265\030\0033.1\022$\n\023"
    "max_create_revision\030\r \001(\003B\007\212\265\030\0033.1\"7\n\tSo"
    "rtOrder\022\010\n\004NONE\020\000\022\n\n\006ASCEND\020\001\022\013\n\007DESCEND"
    "\020\002\032\007\222\265\030\0033.0\"K\n\nSortTarget\022\007\n\003KEY\020\000\022\013\n\007VE"
    "RSION\020\001\022\n\n\006CREATE\020\002\022\007\n\003MOD\020\003\022\t\n\005VALUE\020\004\032"
    "\007\222\265\030\0033.0:\007\202\265\030\0033.0\"\202\001\n\rRangeResponse\022,\n\006h"
    "eader\030\001 \001(\0132\034.etcdserverpb.ResponseHeade"
    "r\022\035\n\003kvs\030\002 \003(\0132\020.mvccpb.KeyValue\022\014\n\004more"
    "\030\003 \001(\010\022\r\n\005count\030\004 \001(\003:\007\202\265\030\0033.0\"\230\001\n\nPutRe"
    "quest\022\013\n\003key\030\001 \001(\014\022\r\n\005value\030\002 \001(\014\022\r\n\005lea"
    "se\030\003 \001(\003\022\030\n\007prev_kv\030\004 \001(\010B\007\212\265\030\0033.1\022\035\n\014ig"
    "nore_value\030\005 \001(\010B\007\212\265\030\0033.2\022\035\n\014ignore_leas"
    "e\030\006 \001(\010B\007\212\265\030\0033.2:\007\202\265\030\0033.0\"p\n\013PutResponse"
    "\022,\n\006header\030\001 \001(\0132\034.etcdserverpb.Response"
    "Header\022*\n\007prev_kv\030\002 \001(\0132\020.mvccpb.KeyValu"
    "eB\007\212\265\030\0033.1:\007\202\265\030\0033.0\"W\n\022DeleteRangeReques"
    "t\022\013\n\003key\030\001 \001(\014\022\021\n\trange_end\030\002 \001(\014\022\030\n\007pre"
    "v_kv\030\003 \001(\010B\007\212\265\030\0033.1:\007\202\265\030\0033.0\"\212\001\n\023DeleteR"
    "angeResponse\022,\n\006header\030\001 \001(\0132\034.etcdserve"
    "rpb.ResponseHeader\022\017\n\007deleted\030\002 \001(\003\022+\n\010p"
    "rev_kvs\030\003 \003(\0132\020.mvccpb.KeyValueB\007\212\265\030\0033.1"
    ":\007\202\265\030\0033.0\"\201\002\n\tRequestOp\0223\n\rrequest_range"
    "\030\001 \001(\0132\032.etcdserverpb.RangeRequestH\000\022/\n\013"
    "request_put\030\002 \001(\0132\030.etcdserverpb.PutRequ"
    "estH\000\022@\n\024request_delete_range\030\003 \001(\0132 .et"
    "cdserverpb.DeleteRangeRequestH\000\0228\n\013reque"
    "st_txn\030\004 \001(\0132\030.etcdserverpb.TxnRequestB\007"
    "\212\265\030\0033.3H\000:\007\202\265\030\0033.0B\t\n\007request\"\213\002\n\nRespon"
    "seOp\0225\n\016response_range\030\001 \001(\0132\033.etcdserve"
    "rpb.RangeResponseH\000\0221\n\014response_put\030\002 \001("
    "\0132\031.etcdserverpb.PutResponseH\000\022B\n\025respon"
    "se_delete_range\030\003 \001(\0132!.etcdserverpb.Del"
    "eteRangeResponseH\000\022:\n\014response_txn\030\004 \001(\013"
    "2\031.etcdserverpb.TxnResponseB\007\212\265\030\0033.3H\000:\007"
    "\202\265\030\0033.0B\n\n\010response\"\325\003\n\007Compare\0223\n\006resul"
    "t\030\001 \001(\0162#.etcdserverpb.Compare.CompareRe"
    "sult\0223\n\006target\030\002 \001(\0162#.etcdserverpb.Comp"
    "are.CompareTarget\022\013\n\003key\030\003 \001(\014\022\021\n\007versio"
    "n\030\004 \001(\003H\000\022\031\n\017create_revision\030\005 \001(\003H\000\022\026\n\014"
    "mod_revision\030\006 \001(\003H\000\022\017\n\005value\030\007 \001(\014H\000\022\030\n"
    "\005lease\030\010 \001(\003B\007\212\265\030\0033.3H\000\022\032\n\trange_end\030@ \001"
    "(\014B\007\212\265\030\0033.3\"R\n\rCompareResult\022\t\n\005EQUAL\020\000\022"
    "\013\n\007GREATER\020\001\022\010\n\004LESS\020\002\022\026\n\tNOT_EQUAL\020\003\032\007\232"
    "\265\030\0033.1\032\007\222\265\030\0033.0\"Y\n\rCompareTarget\022\013\n\007VERS"
    "ION\020\000\022\n\n\006CREATE\020\001\022\007\n\003MOD\020\002\022\t\n\005VALUE\020\003\022\022\n"
    "\005LEASE\020\004\032\007\232\265\030\0033.3\032\007\222\265\030\0033.0:\007\202\265\030\0033.0B\016\n\014t"
    "arget_union\"\221\001\n\nTxnRequest\022&\n\007compare\030\001 "
    "\003(\0132\025.etcdserverpb.Compare\022(\n\007success\030\002 "
    "\003(\0132\027.etcdserverpb.RequestOp\022(\n\007failure\030"
    "\003 \003(\0132\027.etcdserverpb.RequestOp:\007\202\265\030\0033.0\""
    "\204\001\n\013TxnResponse\022,\n\006header\030\001 \001(\0132\034.etcdse"
    "rverpb.ResponseHeader\022\021\n\tsucceeded\030\002 \001(\010"
    "\022+\n\tresponses\030\003 \003(\0132\030.etcdserverpb.Respo"
    "nseOp:\007\202\265\030\0033.0\"@\n\021CompactionRequest\022\020\n\010r"
    "evision\030\001 \001(\003\022\020\n\010physical\030\002 \001(\010:\007\202\265\030\0033.0"
    "\"K\n\022CompactionResponse\022,\n\006header\030\001 \001(\0132\034"
    ".etcdserverpb.ResponseHeader:\007\202\265\030\0033.0\"\351\001"
    "\n\014WatchRequest\022:\n\016create_request\030\001 \001(\0132 "
    ".etcdserverpb.WatchCreateRequestH\000\022:\n\016ca"
    "ncel_request\030\002 \001(\0132 .etcdserverpb.WatchC"
    "ancelRequestH\000\022G\n\020progress_request\030\003 \001(\013"
    "2\".etcdserverpb.WatchProgressRequestB\007\212\265"
    "\030\0033.4H\000:\007\202\265\030\0033.0B\017\n\rrequest_union\"\265\002\n\022Wa"
    "tchCreateRequest\022\013\n\003key\030\001 \001(\014\022\021\n\trange_e"
    "nd\030\002 \001(\014\022\026\n\016start_revision\030\003 \001(\003\022\027\n\017prog"
    "ress_notify\030\004 \001(\010\022E\n\007filters\030\005 \003(\0162+.etc"
    "dserverpb.WatchCreateRequest.FilterTypeB"
    "\007\212\265\030\0033.1\022\030\n\007prev_kv\030\006 \001(\010B\007\212\265\030\0033.1\022\031\n\010wa"
    "tch_id\030\007 \001(\003B\007\212\265\030\0033.4\022\031\n\010fragment\030\010 \001(\010B"
    "\007\212\265\030\0033.4\".\n\nFilterType\022\t\n\005NOPUT\020\000\022\014\n\010NOD"
    "ELETE\020\001\032\007\222\265\030\0033.1:\007\202\265\030\0033.0\"8\n\022WatchCancel"
    "Request\022\031\n\010watch_id\030\001 \001(\003B\007\212\265\030\0033.1:\007\202\265\030\003"
    "3.1\"\037\n\024WatchProgressRequest:\007\202\265\030\0033.4\"\357\001\n"
    "\rWatchResponse\022,\n\006header\030\001 \001(\0132\034.etcdser"
    "verpb.ResponseHeader\022\020\n\010watch_id\030\002 \001(\003\022\017"
    "\n\007created\030\003 \001(\010\022\020\n\010canceled\030\004 \001(\010\022\030\n\020com"
    "pact_revision\030\005 \001(\003\022\036\n\rcancel_reason\030\006 \001"
    "(\tB\007\212\265\030\0033.4\022\031\n\010fragment\030\007 \001(\010B\007\212\265\030\0033.4\022\035"
    "\n\006events\030\013 \003(\0132\r.mvccpb.Event:\007\202\265\030\0033.0\"5"
    "\n\021LeaseGrantRequest\022\013\n\003TTL\030\001 \001(\003\022\n\n\002ID\030\002"
    " \001(\003:\007\202\265\030\0033.0\"s\n\022LeaseGrantResponse\022,\n\006h"
    "eader\030\001 \001(\0132\034.etcdserverpb.ResponseHeade"
    "r\022\n\n\002ID\030\002 \001(\003\022\013\n\003TTL\030\003 \001(\003\022\r\n\005error\030\004 \001("
    "\t:\007\202\265\030\0033.0\")\n\022LeaseRevokeRequest\022\n\n\002ID\030\001"
    " \001(\003:\007\202\265\030\0033.0\"L\n\023LeaseRevokeResponse\022,\n\006"
    "header\030\001 \001(\0132\034.etcdserverpb.ResponseHead"
    "er:\007\202\265\030\0033.0\"=\n\017LeaseCheckpoint\022\n\n\002ID\030\001 \001"
    "(\003\022\025\n\rremaining_TTL\030\002 \001(\003:\007\202\265\030\0033.4\"U\n\026Le"
    "aseCheckpointRequest\0222\n\013checkpoints\030\001 \003("
    "\0132\035.etcdserverpb.LeaseCheckpoint:\007\202\265\030\0033."
    "4\"P\n\027LeaseCheckpointResponse\022,\n\006header\030\001"
    " \001(\0132\034.etcdserverpb.ResponseHeader:\007\202\265\030\003"
    "3.4\",\n\025LeaseKeepAliveRequest\022\n\n\002ID\030\001 \001(\003"
    ":\007\202\265\030\0033.0\"h\n\026LeaseKeepAliveResponse\022,\n\006h"
    "eader\030\001 \001(\0132\034.etcdserverpb.ResponseHeade"
    "r\022\n\n\002ID\030\002 \001(\003\022\013\n\003TTL\030\003 \001(\003:\007\202\265\030\0033.0\";\n\026L"
    "easeTimeToLiveRequest\022\n\n\002ID\030\001 \001(\003\022\014\n\004key"
    "s\030\002 \001(\010:\007\202\265\030\0033.1\"\213\001\n\027LeaseTimeToLiveResp"
    "onse\022,\n\006header\030\001 \001(\0132\034.etcdserverpb.Resp"
    "onseHeader\022\n\n\002ID\030\002 \001(\003\022\013\n\003TTL\030\003 \001(\003\022\022\n\ng"
    "rantedTTL\030\004 \001(\003\022\014\n\004keys\030\005 \003(\014:\007\202\265\030\0033.1\"\035"
    "\n\022LeaseLeasesRequest:\007\202\265\030\0033.3\"\"\n\013LeaseSt"
    "atus\022\n\n\002ID\030\001 \001(\003:\007\202\265\030\0033.3\"w\n\023LeaseLeases"
    "Response\022,\n\006header\030\001 \001(\0132\034.etcdserverpb."
    "ResponseHeader\022)\n\006leases\030\002 \003(\0132\031.etcdser"
    "verpb.LeaseStatus:\007\202\265\030\0033.32\340\002\n\002KV\022@\n\005Ran"
    "ge\022\032.etcdserverpb.RangeRequest\032\033.etcdser"
    "verpb.RangeResponse\022:\n\003Put\022\030.etcdserverp"
    "b.PutRequest\032\031.etcdserverpb.PutResponse\022"
    "R\n\013DeleteRange\022 .etcdserverpb.DeleteRang"
    "eRequest\032!.etcdserverpb.DeleteRangeRespo"
    "nse\022:\n\003Txn\022\030.etcdserverpb.TxnRequest\032\031.e"
    "tcdserverpb.TxnResponse\022L\n\007Compact\022\037.etc"
    "dserverpb.CompactionRequest\032 .etcdserver"
    "pb.CompactionResponse2M\n\005Watch\022D\n\005Watch\022"
    "\032.etcdserverpb.WatchRequest\032\033.etcdserver"
    "pb.WatchResponse(\0010\0012\301\003\n\005Lease\022O\n\nLeaseG"
    "rant\022\037.etcdserverpb.LeaseGrantRequest\032 ."
    "etcdserverpb.LeaseGrantResponse\022R\n\013Lease"
    "Revoke\022 .etcdserverpb.LeaseRevokeRequest"
    "\032!.etcdserverpb.LeaseRevokeResponse\022_\n\016L"
    "easeKeepAlive\022#.etcdserverpb.LeaseKeepAl"
    "iveRequest\032$.etcdserverpb.LeaseKeepAlive"
    "Response(\0010\001\022^\n\017LeaseTimeToLive\022$.etcdse"
    "rverpb.LeaseTimeToLiveRequest\032%.etcdserv"
    "erpb.LeaseTimeToLiveResponse\022R\n\013LeaseLea"
    "ses\022 .etcdserverpb.LeaseLeasesRequest\032!."
    "etcdserverpb.LeaseLeasesResponseB\035Z\033gene"
    "rated/game/etcdserverpbb\006proto3"
};
static const ::_pbi::DescriptorTable* PROTOBUF_NONNULL const
    descriptor_table_proto_2fetcd_2fetcd_2eproto_deps[2] = {
        &::descriptor_table_proto_2fetcd_2fkv_2eproto,
        &::descriptor_table_proto_2fetcd_2fversion_2eproto,
};
static ::absl::once_flag descriptor_table_proto_2fetcd_2fetcd_2eproto_once;
PROTOBUF_CONSTINIT const ::_pbi::DescriptorTable descriptor_table_proto_2fetcd_2fetcd_2eproto = {
    false,
    false,
    5671,
    descriptor_table_protodef_proto_2fetcd_2fetcd_2eproto,
    "proto/etcd/etcd.proto",
    &descriptor_table_proto_2fetcd_2fetcd_2eproto_once,
    descriptor_table_proto_2fetcd_2fetcd_2eproto_deps,
    2,
    33,
    schemas,
    file_default_instances,
    TableStruct_proto_2fetcd_2fetcd_2eproto::offsets,
    file_level_enum_descriptors_proto_2fetcd_2fetcd_2eproto,
    file_level_service_descriptors_proto_2fetcd_2fetcd_2eproto,
};
namespace etcdserverpb {
const ::google::protobuf::EnumDescriptor* PROTOBUF_NONNULL RangeRequest_SortOrder_descriptor() {
  ::google::protobuf::internal::AssignDescriptors(&descriptor_table_proto_2fetcd_2fetcd_2eproto);
  return file_level_enum_descriptors_proto_2fetcd_2fetcd_2eproto[0];
}
PROTOBUF_CONSTINIT const uint32_t RangeRequest_SortOrder_internal_data_[] = {
    196608u, 0u, };
const ::google::protobuf::EnumDescriptor* PROTOBUF_NONNULL RangeRequest_SortTarget_descriptor() {
  ::google::protobuf::internal::AssignDescriptors(&descriptor_table_proto_2fetcd_2fetcd_2eproto);
  return file_level_enum_descriptors_proto_2fetcd_2fetcd_2eproto[1];
}
PROTOBUF_CONSTINIT const uint32_t RangeRequest_SortTarget_internal_data_[] = {
    327680u, 0u, };
const ::google::protobuf::EnumDescriptor* PROTOBUF_NONNULL Compare_CompareResult_descriptor() {
  ::google::protobuf::internal::AssignDescriptors(&descriptor_table_proto_2fetcd_2fetcd_2eproto);
  return file_level_enum_descriptors_proto_2fetcd_2fetcd_2eproto[2];
}
PROTOBUF_CONSTINIT const uint32_t Compare_CompareResult_internal_data_[] = {
    262144u, 0u, };
const ::google::protobuf::EnumDescriptor* PROTOBUF_NONNULL Compare_CompareTarget_descriptor() {
  ::google::protobuf::internal::AssignDescriptors(&descriptor_table_proto_2fetcd_2fetcd_2eproto);
  return file_level_enum_descriptors_proto_2fetcd_2fetcd_2eproto[3];
}
PROTOBUF_CONSTINIT const uint32_t Compare_CompareTarget_internal_data_[] = {
    327680u, 0u, };
const ::google::protobuf::EnumDescriptor* PROTOBUF_NONNULL WatchCreateRequest_FilterType_descriptor() {
  ::google::protobuf::internal::AssignDescriptors(&descriptor_table_proto_2fetcd_2fetcd_2eproto);
  return file_level_enum_descriptors_proto_2fetcd_2fetcd_2eproto[4];
}
PROTOBUF_CONSTINIT const uint32_t WatchCreateRequest_FilterType_internal_data_[] = {
    131072u, 0u, };
// ===================================================================

class ResponseHeader::_Internal {
 public:
  using HasBits =
      decltype(::std::declval<ResponseHeader>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
      8 * PROTOBUF_FIELD_OFFSET(ResponseHeader, _impl_._has_bits_);
};

ResponseHeader::ResponseHeader(::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, ResponseHeader_class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:etcdserverpb.ResponseHeader)
}
ResponseHeader::ResponseHeader(
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const ResponseHeader& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, ResponseHeader_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(from._impl_) {
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
}
PROTOBUF_NDEBUG_INLINE ResponseHeader::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
      : _cached_size_{0} {}

inline void ResponseHeader::SharedCtor(::_pb::Arena* PROTOBUF_NULLABLE arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, cluster_id_),
           0,
           offsetof(Impl_, raft_term_) -
               offsetof(Impl_, cluster_id_) +
               sizeof(Impl_::raft_term_));
}
ResponseHeader::~ResponseHeader() {
  // @@protoc_insertion_point(destructor:etcdserverpb.ResponseHeader)
  SharedDtor(*this);
}
inline void ResponseHeader::SharedDtor(MessageLite& self) {
  ResponseHeader& this_ = static_cast<ResponseHeader&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  this_._impl_.~Impl_();
}

inline void* PROTOBUF_NONNULL ResponseHeader::PlacementNew_(
    const void* PROTOBUF_NONNULL, void* PROTOBUF_NONNULL mem,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena) {
  return ::new (mem) ResponseHeader(arena);
}
constexpr auto ResponseHeader::InternalNewImpl_() {
  return ::google::protobuf::internal::MessageCreator::ZeroInit(sizeof(ResponseHeader),
                                            alignof(ResponseHeader));
}
constexpr auto ResponseHeader::InternalGenerateClassData_() {
  return ::google::protobuf::internal::ClassDataFull{
      ::google::protobuf::internal::ClassData{
          &_ResponseHeader_default_instance_._instance,
          &_table_.header,
          nullptr,  // OnDemandRegisterArenaDtor
          nullptr,  // IsInitialized
          &ResponseHeader::MergeImpl,
          ::google::protobuf::Message::GetNewImpl<ResponseHeader>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
          &ResponseHeader::SharedDtor,
          ::google::protobuf::Message::GetClearImpl<ResponseHeader>(), &ResponseHeader::ByteSizeLong,
              &ResponseHeader::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
          PROTOBUF_FIELD_OFFSET(ResponseHeader, _impl_._cached_size_),
          false,
      },
      &ResponseHeader::kDescriptorMethods,
      &descriptor_table_proto_2fetcd_2fetcd_2eproto,
      nullptr,  // tracker
  };
}

PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 const
    ::google::protobuf::internal::ClassDataFull ResponseHeader_class_data_ =
        ResponseHeader::InternalGenerateClassData_();

PROTOBUF_ATTRIBUTE_WEAK const ::google::protobuf::internal::ClassData* PROTOBUF_NONNULL
ResponseHeader::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&ResponseHeader_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(ResponseHeader_class_data_.tc_table);
  return ResponseHeader_class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<2, 4, 0, 0, 2>
ResponseHeader::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(ResponseHeader, _impl_._has_bits_),
    0, // no _extensions_
    4, 24,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967280,  // skipmap
    offsetof(decltype(_table_), field_entries),
    4,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    ResponseHeader_class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::etcdserverpb::ResponseHeader>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // uint64 raft_term = 4;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint64_t, offsetof(ResponseHeader, _impl_.raft_term_), 3>(),
     {32, 3, 0, PROTOBUF_FIELD_OFFSET(ResponseHeader, _impl_.raft_term_)}},
    // uint64 cluster_id = 1;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint64_t, offsetof(ResponseHeader, _impl_.cluster_id_), 0>(),
     {8, 0, 0, PROTOBUF_FIELD_OFFSET(ResponseHeader, _impl_.cluster_id_)}},
    // uint64 member_id = 2;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint64_t, offsetof(ResponseHeader, _impl_.member_id_), 1>(),
     {16, 1, 0, PROTOBUF_FIELD_OFFSET(ResponseHeader, _impl_.member_id_)}},
    // int64 revision = 3;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint64_t, offsetof(ResponseHeader, _impl_.revision_), 2>(),
     {24, 2, 0, PROTOBUF_FIELD_OFFSET(ResponseHeader, _impl_.revision_)}},
  }}, {{
    65535, 65535
  }}, {{
    // uint64 cluster_id = 1;
    {PROTOBUF_FIELD_OFFSET(ResponseHeader, _impl_.cluster_id_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kUInt64)},
    // uint64 member_id = 2;
    {PROTOBUF_FIELD_OFFSET(ResponseHeader, _impl_.member_id_), _Internal::kHasBitsOffset + 1, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kUInt64)},
    // int64 revision = 3;
    {PROTOBUF_FIELD_OFFSET(ResponseHeader, _impl_.revision_), _Internal::kHasBitsOffset + 2, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kInt64)},
    // uint64 raft_term = 4;
    {PROTOBUF_FIELD_OFFSET(ResponseHeader, _impl_.raft_term_), _Internal::kHasBitsOffset + 3, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kUInt64)},
  }},
  // no aux_entries
  {{
  }},
};
PROTOBUF_NOINLINE void ResponseHeader::Clear() {
// @@protoc_insertion_point(message_clear_start:etcdserverpb.ResponseHeader)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if ((cached_has_bits & 0x0000000fu) != 0) {
    ::memset(&_impl_.cluster_id_, 0, static_cast<::size_t>(
        reinterpret_cast<char*>(&_impl_.raft_term_) -
        reinterpret_cast<char*>(&_impl_.cluster_id_)) + sizeof(_impl_.raft_term_));
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::uint8_t* PROTOBUF_NONNULL ResponseHeader::_InternalSerialize(
    const ::google::protobuf::MessageLite& base, ::uint8_t* PROTOBUF_NONNULL target,
    ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) {
  const ResponseHeader& this_ = static_cast<const ResponseHeader&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::uint8_t* PROTOBUF_NONNULL ResponseHeader::_InternalSerialize(
    ::uint8_t* PROTOBUF_NONNULL target,
    ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const {
  const ResponseHeader& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
  // @@protoc_insertion_point(serialize_to_array_start:etcdserverpb.ResponseHeader)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  // uint64 cluster_id = 1;
  if ((this_._impl_._has_bits_[0] & 0x00000001u) != 0) {
    if (this_._internal_cluster_id() != 0) {
      target = stream->EnsureSpace(target);
      target = ::_pbi::WireFormatLite::WriteUInt64ToArray(
          1, this_._internal_cluster_id(), target);
    }
  }

  // uint64 member_id = 2;
  if ((this_._impl_._has_bits_[0] & 0x00000002u) != 0) {
    if (this_._internal_member_id() != 0) {
      target = stream->EnsureSpace(target);
      target = ::_pbi::WireFormatLite::WriteUInt64ToArray(
          2, this_._internal_member_id(), target);
    }
  }

  // int64 revision = 3;
  if ((this_._impl_._has_bits_[0] & 0x00000004u) != 0) {
    if (this_._internal_revision() != 0) {
      target =
          ::google::protobuf::internal::WireFormatLite::WriteInt64ToArrayWithField<3>(
              stream, this_._internal_revision(), target);
    }
  }

  // uint64 raft_term = 4;
  if ((this_._impl_._has_bits_[0] & 0x00000008u) != 0) {
    if (this_._internal_raft_term() != 0) {
      target = stream->EnsureSpace(target);
      target = ::_pbi::WireFormatLite::WriteUInt64ToArray(
          4, this_._internal_raft_term(), target);
    }
  }

  if (ABSL_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:etcdserverpb.ResponseHeader)
  return target;
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::size_t ResponseHeader::ByteSizeLong(const MessageLite& base) {
  const ResponseHeader& this_ = static_cast<const ResponseHeader&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::size_t ResponseHeader::ByteSizeLong() const {
  const ResponseHeader& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
  // @@protoc_insertion_point(message_byte_size_start:etcdserverpb.ResponseHeader)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void)cached_has_bits;

  ::_pbi::Prefetch5LinesFrom7Lines(&this_);
  cached_has_bits = this_._impl_._has_bits_[0];
  if ((cached_has_bits & 0x0000000fu) != 0) {
    // uint64 cluster_id = 1;
    if ((cached_has_bits & 0x00000001u) != 0) {
      if (this_._internal_cluster_id() != 0) {
        total_size += ::_pbi::WireFormatLite::UInt64SizePlusOne(
            this_._internal_cluster_id());
      }
    }
    // uint64 member_id = 2;
    if ((cached_has_bits & 0x00000002u) != 0) {
      if (this_._internal_member_id() != 0) {
        total_size += ::_pbi::WireFormatLite::UInt64SizePlusOne(
            this_._internal_member_id());
      }
    }
    // int64 revision = 3;
    if ((cached_has_bits & 0x00000004u) != 0) {
      if (this_._internal_revision() != 0) {
        total_size += ::_pbi::WireFormatLite::Int64SizePlusOne(
            this_._internal_revision());
      }
    }
    // uint64 raft_term = 4;
    if ((cached_has_bits & 0x00000008u) != 0) {
      if (this_._internal_raft_term() != 0) {
        total_size += ::_pbi::WireFormatLite::UInt64SizePlusOne(
            this_._internal_raft_term());
      }
    }
  }
  return this_.MaybeComputeUnknownFieldsSize(total_size,
                                             &this_._impl_._cached_size_);
}

void ResponseHeader::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<ResponseHeader*>(&to_msg);
  auto& from = static_cast<const ResponseHeader&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:etcdserverpb.ResponseHeader)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._impl_._has_bits_[0];
  if ((cached_has_bits & 0x0000000fu) != 0) {
    if ((cached_has_bits & 0x00000001u) != 0) {
      if (from._internal_cluster_id() != 0) {
        _this->_impl_.cluster_id_ = from._impl_.cluster_id_;
      }
    }
    if ((cached_has_bits & 0x00000002u) != 0) {
      if (from._internal_member_id() != 0) {
        _this->_impl_.member_id_ = from._impl_.member_id_;
      }
    }
    if ((cached_has_bits & 0x00000004u) != 0) {
      if (from._internal_revision() != 0) {
        _this->_impl_.revision_ = from._impl_.revision_;
      }
    }
    if ((cached_has_bits & 0x00000008u) != 0) {
      if (from._internal_raft_term() != 0) {
        _this->_impl_.raft_term_ = from._impl_.raft_term_;
      }
    }
  }
  _this->_impl_._has_bits_[0] |= cached_has_bits;
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void ResponseHeader::CopyFrom(const ResponseHeader& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:etcdserverpb.ResponseHeader)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void ResponseHeader::InternalSwap(ResponseHeader* PROTOBUF_RESTRICT PROTOBUF_NONNULL other) {
  using ::std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(ResponseHeader, _impl_.raft_term_)
      + sizeof(ResponseHeader::_impl_.raft_term_)
      - PROTOBUF_FIELD_OFFSET(ResponseHeader, _impl_.cluster_id_)>(
          reinterpret_cast<char*>(&_impl_.cluster_id_),
          reinterpret_cast<char*>(&other->_impl_.cluster_id_));
}

::google::protobuf::Metadata ResponseHeader::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class RangeRequest::_Internal {
 public:
  using HasBits =
      decltype(::std::declval<RangeRequest>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
      8 * PROTOBUF_FIELD_OFFSET(RangeRequest, _impl_._has_bits_);
};

RangeRequest::RangeRequest(::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, RangeRequest_class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:etcdserverpb.RangeRequest)
}
PROTOBUF_NDEBUG_INLINE RangeRequest::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const Impl_& from,
    const ::etcdserverpb::RangeRequest& from_msg)
      : _has_bits_{from._has_bits_},
        _cached_size_{0},
        key_(arena, from.key_),
        range_end_(arena, from.range_end_) {}

RangeRequest::RangeRequest(
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena,
    const RangeRequest& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, RangeRequest_class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  RangeRequest* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);
  ::memcpy(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, limit_),
           reinterpret_cast<const char *>(&from._impl_) +
               offsetof(Impl_, limit_),
           offsetof(Impl_, count_only_) -
               offsetof(Impl_, limit_) +
               sizeof(Impl_::count_only_));

  // @@protoc_insertion_point(copy_constructor:etcdserverpb.RangeRequest)
}
PROTOBUF_NDEBUG_INLINE RangeRequest::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
      : _cached_size_{0},
        key_(arena),
        range_end_(arena) {}

inline void RangeRequest::SharedCtor(::_pb::Arena* PROTOBUF_NULLABLE arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, limit_),
           0,
           offsetof(Impl_, count_only_) -
               offsetof(Impl_, limit_) +
               sizeof(Impl_::count_only_));
}
RangeRequest::~RangeRequest() {
  // @@protoc_insertion_point(destructor:etcdserverpb.RangeRequest)
  SharedDtor(*this);
}
inline void RangeRequest::SharedDtor(MessageLite& self) {
  RangeRequest& this_ = static_cast<RangeRequest&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  this_._impl_.key_.Destroy();
  this_._impl_.range_end_.Destroy();
  this_._impl_.~Impl_();
}

inline void* PROTOBUF_NONNULL RangeRequest::PlacementNew_(
    const void* PROTOBUF_NONNULL, void* PROTOBUF_NONNULL mem,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena) {
  return ::new (mem) RangeRequest(arena);
}
constexpr auto RangeRequest::InternalNewImpl_() {
  return ::google::protobuf::internal::MessageCreator::CopyInit(sizeof(RangeRequest),
                                            alignof(RangeRequest));
}
constexpr auto RangeRequest::InternalGenerateClassData_() {
  return ::google::protobuf::internal::ClassDataFull{
      ::google::protobuf::internal::ClassData{
          &_RangeRequest_default_instance_._instance,
          &_table_.header,
          nullptr,  // OnDemandRegisterArenaDtor
          nullptr,  // IsInitialized
          &RangeRequest::MergeImpl,
          ::google::protobuf::Message::GetNewImpl<RangeRequest>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
          &RangeRequest::SharedDtor,
          ::google::protobuf::Message::GetClearImpl<RangeRequest>(), &RangeRequest::ByteSizeLong,
              &RangeRequest::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
          PROTOBUF_FIELD_OFFSET(RangeRequest, _impl_._cached_size_),
          false,
      },
      &RangeRequest::kDescriptorMethods,
      &descriptor_table_proto_2fetcd_2fetcd_2eproto,
      nullptr,  // tracker
  };
}

PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 const
    ::google::protobuf::internal::ClassDataFull RangeRequest_class_data_ =
        RangeRequest::InternalGenerateClassData_();

PROTOBUF_ATTRIBUTE_WEAK const ::google::protobuf::internal::ClassData* PROTOBUF_NONNULL
RangeRequest::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&RangeRequest_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(RangeRequest_class_data_.tc_table);
  return RangeRequest_class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<4, 13, 0, 0, 2>
RangeRequest::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(RangeRequest, _impl_._has_bits_),
    0, // no _extensions_
    13, 120,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294959104,  // skipmap
    offsetof(decltype(_table_), field_entries),
    13,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    RangeRequest_class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::etcdserverpb::RangeRequest>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
    // bytes key = 1;
    {::_pbi::TcParser::FastBS1,
     {10, 0, 0, PROTOBUF_FIELD_OFFSET(RangeRequest, _impl_.key_)}},
    // bytes range_end = 2;
    {::_pbi::TcParser::FastBS1,
     {18, 1, 0, PROTOBUF_FIELD_OFFSET(RangeRequest, _impl_.range_end_)}},
    // int64 limit = 3;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint64_t, offsetof(RangeRequest, _impl_.limit_), 2>(),
     {24, 2, 0, PROTOBUF_FIELD_OFFSET(RangeRequest, _impl_.limit_)}},
    // int64 revision = 4;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint64_t, offsetof(RangeRequest, _impl_.revision_), 3>(),
     {32, 3, 0, PROTOBUF_FIELD_OFFSET(RangeRequest, _impl_.revision_)}},
    // .etcdserverpb.RangeRequest.SortOrder sort_order = 5;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(RangeRequest, _impl_.sort_order_), 4>(),
     {40, 4, 0, PROTOBUF_FIELD_OFFSET(RangeRequest, _impl_.sort_order_)}},
    // .etcdserverpb.RangeRequest.SortTarget sort_target = 6;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(RangeRequest, _impl_.sort_target_), 5>(),
     {48, 5, 0, PROTOBUF_FIELD_OFFSET(RangeRequest, _impl_.sort_target_)}},
    // bool serializable = 7;
    {::_pbi::TcParser::SingularVarintNoZag1<bool, offsetof(RangeRequest, _impl_.serializable_), 10>(),
     {56, 10, 0, PROTOBUF_FIELD_OFFSET(RangeRequest, _impl_.serializable_)}},
    // bool keys_only = 8;
    {::_pbi::TcParser::SingularVarintNoZag1<bool, offsetof(RangeRequest, _impl_.keys_only_), 11>(),
     {64, 11, 0, PROTOBUF_FIELD_OFFSET(RangeRequest, _impl_.keys_only_)}},
    // bool count_only = 9;
    {::_pbi::TcParser::SingularVarintNoZag1<bool, offsetof(RangeRequest, _impl_.count_only_), 12>(),
     {72, 12, 0, PROTOBUF_FIELD_OFFSET(RangeRequest, _impl_.count_only_)}},
    // int64 min_mod_revision = 10 [(.versionpb.etcd_version_field) = "3.1"];
    {::_pbi::TcParser::SingularVarintNoZag1<::uint64_t, offsetof(RangeRequest, _impl_.min_mod_revision_), 6>(),
     {80, 6, 0, PROTOBUF_FIELD_OFFSET(RangeRequest, _impl_.min_mod_revision_)}},
    // int64 max_mod_revision = 11 [(.versionpb.etcd_version_field) = "3.1"];
    {::_pbi::TcParser::SingularVarintNoZag1<::uint64_t, offsetof(RangeRequest, _impl_.max_mod_revision_), 7>(),
     {88, 7, 0, PROTOBUF_FIELD_OFFSET(RangeRequest, _impl_.max_mod_revision_)}},
    // int64 min_create_revision = 12 [(.versionpb.etcd_version_field) = "3.1"];
    {::_pbi::TcParser::SingularVarintNoZag1<::uint64_t, offsetof(RangeRequest, _impl_.min_create_revision_), 8>(),
     {96, 8, 0, PROTOBUF_FIELD_OFFSET(RangeRequest, _impl_.min_create_revision_)}},
    // int64 max_create_revision = 13 [(.versionpb.etcd_version_field) = "3.1"];
    {::_pbi::TcParser::SingularVarintNoZag1<::uint64_t, offsetof(RangeRequest, _impl_.max_create_revision_), 9>(),
     {104, 9, 0, PROTOBUF_FIELD_OFFSET(RangeRequest, _impl_.max_create_revision_)}},
    {::_pbi::TcParser::MiniParse, {}},
    {::_pbi::TcParser::MiniParse, {}},
  }}, {{
    65535, 65535
  }}, {{
    // bytes key = 1;
    {PROTOBUF_FIELD_OFFSET(RangeRequest, _impl_.key_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kBytes | ::_fl::kRepAString)},
    // bytes range_end = 2;
    {PROTOBUF_FIELD_OFFSET(RangeRequest, _impl_.range_end_), _Internal::kHasBitsOffset + 1, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kBytes | ::_fl::kRepAString)},
    // int64 limit = 3;
    {PROTOBUF_FIELD_OFFSET(RangeRequest, _impl_.limit_), _Internal::kHasBitsOffset + 2, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kInt64)},
    // int64 revision = 4;
    {PROTOBUF_FIELD_OFFSET(RangeRequest, _impl_.revision_), _Internal::kHasBitsOffset + 3, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kInt64)},
    // .etcdserverpb.RangeRequest.SortOrder sort_order = 5;
    {PROTOBUF_FIELD_OFFSET(RangeRequest, _impl_.sort_order_), _Internal::kHasBitsOffset + 4, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kOpenEnum)},
    // .etcdserverpb.RangeRequest.SortTarget sort_target = 6;
    {PROTOBUF_FIELD_OFFSET(RangeRequest, _impl_.sort_target_), _Internal::kHasBitsOffset + 5, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kOpenEnum)},
    // bool serializable = 7;
    {PROTOBUF_FIELD_OFFSET(RangeRequest, _impl_.serializable_), _Internal::kHasBitsOffset + 10, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kBool)},
    // bool keys_only = 8;
    {PROTOBUF_FIELD_OFFSET(RangeRequest, _impl_.keys_only_), _Internal::kHasBitsOffset + 11, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kBool)},
    // bool count_only = 9;
    {PROTOBUF_FIELD_OFFSET(RangeRequest, _impl_.count_only_), _Internal::kHasBitsOffset + 12, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kBool)},
    // int64 min_mod_revision = 10 [(.versionpb.etcd_version_field) = "3.1"];
    {PROTOBUF_FIELD_OFFSET(RangeRequest, _impl_.min_mod_revision_), _Internal::kHasBitsOffset + 6, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kInt64)},
    // int64 max_mod_revision = 11 [(.versionpb.etcd_version_field) = "3.1"];
    {PROTOBUF_FIELD_OFFSET(RangeRequest, _impl_.max_mod_revision_), _Internal::kHasBitsOffset + 7, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kInt64)},
    // int64 min_create_revision = 12 [(.versionpb.etcd_version_field) = "3.1"];
    {PROTOBUF_FIELD_OFFSET(RangeRequest, _impl_.min_create_revision_), _Internal::kHasBitsOffset + 8, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kInt64)},
    // int64 max_create_revision = 13 [(.versionpb.etcd_version_field) = "3.1"];
    {PROTOBUF_FIELD_OFFSET(RangeRequest, _impl_.max_create_revision_), _Internal::kHasBitsOffset + 9, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kInt64)},
  }},
  // no aux_entries
  {{
  }},
};
PROTOBUF_NOINLINE void RangeRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:etcdserverpb.RangeRequest)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if ((cached_has_bits & 0x00000003u) != 0) {
    if ((cached_has_bits & 0x00000001u) != 0) {
      _impl_.key_.ClearNonDefaultToEmpty();
    }
    if ((cached_has_bits & 0x00000002u) != 0) {
      _impl_.range_end_.ClearNonDefaultToEmpty();
    }
  }
  if ((cached_has_bits & 0x000000fcu) != 0) {
    ::memset(&_impl_.limit_, 0, static_cast<::size_t>(
        reinterpret_cast<char*>(&_impl_.max_mod_revision_) -
        reinterpret_cast<char*>(&_impl_.limit_)) + sizeof(_impl_.max_mod_revision_));
  }
  if ((cached_has_bits & 0x00001f00u) != 0) {
    ::memset(&_impl_.min_create_revision_, 0, static_cast<::size_t>(
        reinterpret_cast<char*>(&_impl_.count_only_) -
        reinterpret_cast<char*>(&_impl_.min_create_revision_)) + sizeof(_impl_.count_only_));
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::uint8_t* PROTOBUF_NONNULL RangeRequest::_InternalSerialize(
    const ::google::protobuf::MessageLite& base, ::uint8_t* PROTOBUF_NONNULL target,
    ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) {
  const RangeRequest& this_ = static_cast<const RangeRequest&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::uint8_t* PROTOBUF_NONNULL RangeRequest::_InternalSerialize(
    ::uint8_t* PROTOBUF_NONNULL target,
    ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const {
  const RangeRequest& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
  // @@protoc_insertion_point(serialize_to_array_start:etcdserverpb.RangeRequest)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  // bytes key = 1;
  if ((this_._impl_._has_bits_[0] & 0x00000001u) != 0) {
    if (!this_._internal_key().empty()) {
      const ::std::string& _s = this_._internal_key();
      target = stream->WriteBytesMaybeAliased(1, _s, target);
    }
  }

  // bytes range_end = 2;
  if ((this_._impl_._has_bits_[0] & 0x00000002u) != 0) {
    if (!this_._internal_range_end().empty()) {
      const ::std::string& _s = this_._internal_range_end();
      target = stream->WriteBytesMaybeAliased(2, _s, target);
    }
  }

  // int64 limit = 3;
  if ((this_._impl_._has_bits_[0] & 0x00000004u) != 0) {
    if (this_._internal_limit() != 0) {
      target =
          ::google::protobuf::internal::WireFormatLite::WriteInt64ToArrayWithField<3>(
              stream, this_._internal_limit(), target);
    }
  }

  // int64 revision = 4;
  if ((this_._impl_._has_bits_[0] & 0x00000008u) != 0) {
    if (this_._internal_revision() != 0) {
      target =
          ::google::protobuf::internal::WireFormatLite::WriteInt64ToArrayWithField<4>(
              stream, this_._internal_revision(), target);
    }
  }

  // .etcdserverpb.RangeRequest.SortOrder sort_order = 5;
  if ((this_._impl_._has_bits_[0] & 0x00000010u) != 0) {
    if (this_._internal_sort_order() != 0) {
      target = stream->EnsureSpace(target);
      target = ::_pbi::WireFormatLite::WriteEnumToArray(
          5, this_._internal_sort_order(), target);
    }
  }

  // .etcdserverpb.RangeRequest.SortTarget sort_target = 6;
  if ((this_._impl_._has_bits_[0] & 0x00000020u) != 0) {
    if (this_._internal_sort_target() != 0) {
      target = stream->EnsureSpace(target);
      target = ::_pbi::WireFormatLite::WriteEnumToArray(
          6, this_._internal_sort_target(), target);
    }
  }

  // bool serializable = 7;
  if ((this_._impl_._has_bits_[0] & 0x00000400u) != 0) {
    if (this_._internal_serializable() != 0) {
      target = stream->EnsureSpace(target);
      target = ::_pbi::WireFormatLite::WriteBoolToArray(
          7, this_._internal_serializable(), target);
    }
  }

  // bool keys_only = 8;
  if ((this_._impl_._has_bits_[0] & 0x00000800u) != 0) {
    if (this_._internal_keys_only() != 0) {
      target = stream->EnsureSpace(target);
      target = ::_pbi::WireFormatLite::WriteBoolToArray(
          8, this_._internal_keys_only(), target);
    }
  }

  // bool count_only = 9;
  if ((this_._impl_._has_bits_[0] & 0x00001000u) != 0) {
    if (this_._internal_count_only() != 0) {
      target = stream->EnsureSpace(target);
      target = ::_pbi::WireFormatLite::WriteBoolToArray(
          9, this_._internal_count_only(), target);
    }
  }

  // int64 min_mod_revision = 10 [(.versionpb.etcd_version_field) = "3.1"];
  if ((this_._impl_._has_bits_[0] & 0x00000040u) != 0) {
    if (this_._internal_min_mod_revision() != 0) {
      target =
          ::google::protobuf::internal::WireFormatLite::WriteInt64ToArrayWithField<10>(
              stream, this_._internal_min_mod_revision(), target);
    }
  }

  // int64 max_mod_revision = 11 [(.versionpb.etcd_version_field) = "3.1"];
  if ((this_._impl_._has_bits_[0] & 0x00000080u) != 0) {
    if (this_._internal_max_mod_revision() != 0) {
      target =
          ::google::protobuf::internal::WireFormatLite::WriteInt64ToArrayWithField<11>(
              stream, this_._internal_max_mod_revision(), target);
    }
  }

  // int64 min_create_revision = 12 [(.versionpb.etcd_version_field) = "3.1"];
  if ((this_._impl_._has_bits_[0] & 0x00000100u) != 0) {
    if (this_._internal_min_create_revision() != 0) {
      target =
          ::google::protobuf::internal::WireFormatLite::WriteInt64ToArrayWithField<12>(
              stream, this_._internal_min_create_revision(), target);
    }
  }

  // int64 max_create_revision = 13 [(.versionpb.etcd_version_field) = "3.1"];
  if ((this_._impl_._has_bits_[0] & 0x00000200u) != 0) {
    if (this_._internal_max_create_revision() != 0) {
      target =
          ::google::protobuf::internal::WireFormatLite::WriteInt64ToArrayWithField<13>(
              stream, this_._internal_max_create_revision(), target);
    }
  }

  if (ABSL_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:etcdserverpb.RangeRequest)
  return target;
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::size_t RangeRequest::ByteSizeLong(const MessageLite& base) {
  const RangeRequest& this_ = static_cast<const RangeRequest&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::size_t RangeRequest::ByteSizeLong() const {
  const RangeRequest& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
  // @@protoc_insertion_point(message_byte_size_start:etcdserverpb.RangeRequest)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void)cached_has_bits;

  ::_pbi::Prefetch5LinesFrom7Lines(&this_);
  cached_has_bits = this_._impl_._has_bits_[0];
  if ((cached_has_bits & 0x000000ffu) != 0) {
    // bytes key = 1;
    if ((cached_has_bits & 0x00000001u) != 0) {
      if (!this_._internal_key().empty()) {
        total_size += 1 + ::google::protobuf::internal::WireFormatLite::BytesSize(
                                        this_._internal_key());
      }
    }
    // bytes range_end = 2;
    if ((cached_has_bits & 0x00000002u) != 0) {
      if (!this_._internal_range_end().empty()) {
        total_size += 1 + ::google::protobuf::internal::WireFormatLite::BytesSize(
                                        this_._internal_range_end());
      }
    }
    // int64 limit = 3;
    if ((cached_has_bits & 0x00000004u) != 0) {
      if (this_._internal_limit() != 0) {
        total_size += ::_pbi::WireFormatLite::Int64SizePlusOne(
            this_._internal_limit());
      }
    }
    // int64 revision = 4;
    if ((cached_has_bits & 0x00000008u) != 0) {
      if (this_._internal_revision() != 0) {
        total_size += ::_pbi::WireFormatLite::Int64SizePlusOne(
            this_._internal_revision());
      }
    }
    // .etcdserverpb.RangeRequest.SortOrder sort_order = 5;
    if ((cached_has_bits & 0x00000010u) != 0) {
      if (this_._internal_sort_order() != 0) {
        total_size += 1 +
                      ::_pbi::WireFormatLite::EnumSize(this_._internal_sort_order());
      }
    }
    // .etcdserverpb.RangeRequest.SortTarget sort_target = 6;
    if ((cached_has_bits & 0x00000020u) != 0) {
      if (this_._internal_sort_target() != 0) {
        total_size += 1 +
                      ::_pbi::WireFormatLite::EnumSize(this_._internal_sort_target());
      }
    }
    // int64 min_mod_revision = 10 [(.versionpb.etcd_version_field) = "3.1"];
    if ((cached_has_bits & 0x00000040u) != 0) {
      if (this_._internal_min_mod_revision() != 0) {
        total_size += ::_pbi::WireFormatLite::Int64SizePlusOne(
            this_._internal_min_mod_revision());
      }
    }
    // int64 max_mod_revision = 11 [(.versionpb.etcd_version_field) = "3.1"];
    if ((cached_has_bits & 0x00000080u) != 0) {
      if (this_._internal_max_mod_revision() != 0) {
        total_size += ::_pbi::WireFormatLite::Int64SizePlusOne(
            this_._internal_max_mod_revision());
      }
    }
  }
  if ((cached_has_bits & 0x00001f00u) != 0) {
    // int64 min_create_revision = 12 [(.versionpb.etcd_version_field) = "3.1"];
    if ((cached_has_bits & 0x00000100u) != 0) {
      if (this_._internal_min_create_revision() != 0) {
        total_size += ::_pbi::WireFormatLite::Int64SizePlusOne(
            this_._internal_min_create_revision());
      }
    }
    // int64 max_create_revision = 13 [(.versionpb.etcd_version_field) = "3.1"];
    if ((cached_has_bits & 0x00000200u) != 0) {
      if (this_._internal_max_create_revision() != 0) {
        total_size += ::_pbi::WireFormatLite::Int64SizePlusOne(
            this_._internal_max_create_revision());
      }
    }
    // bool serializable = 7;
    if ((cached_has_bits & 0x00000400u) != 0) {
      if (this_._internal_serializable() != 0) {
        total_size += 2;
      }
    }
    // bool keys_only = 8;
    if ((cached_has_bits & 0x00000800u) != 0) {
      if (this_._internal_keys_only() != 0) {
        total_size += 2;
      }
    }
    // bool count_only = 9;
    if ((cached_has_bits & 0x00001000u) != 0) {
      if (this_._internal_count_only() != 0) {
        total_size += 2;
      }
    }
  }
  return this_.MaybeComputeUnknownFieldsSize(total_size,
                                             &this_._impl_._cached_size_);
}

void RangeRequest::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<RangeRequest*>(&to_msg);
  auto& from = static_cast<const RangeRequest&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:etcdserverpb.RangeRequest)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._impl_._has_bits_[0];
  if ((cached_has_bits & 0x000000ffu) != 0) {
    if ((cached_has_bits & 0x00000001u) != 0) {
      if (!from._internal_key().empty()) {
        _this->_internal_set_key(from._internal_key());
      } else {
        if (_this->_impl_.key_.IsDefault()) {
          _this->_internal_set_key("");
        }
      }
    }
    if ((cached_has_bits & 0x00000002u) != 0) {
      if (!from._internal_range_end().empty()) {
        _this->_internal_set_range_end(from._internal_range_end());
      } else {
        if (_this->_impl_.range_end_.IsDefault()) {
          _this->_internal_set_range_end("");
        }
      }
    }
    if ((cached_has_bits & 0x00000004u) != 0) {
      if (from._internal_limit() != 0) {
        _this->_impl_.limit_ = from._impl_.limit_;
      }
    }
    if ((cached_has_bits & 0x00000008u) != 0) {
      if (from._internal_revision() != 0) {
        _this->_impl_.revision_ = from._impl_.revision_;
      }
    }
    if ((cached_has_bits & 0x00000010u) != 0) {
      if (from._internal_sort_order() != 0) {
        _this->_impl_.sort_order_ = from._impl_.sort_order_;
      }
    }
    if ((cached_has_bits & 0x00000020u) != 0) {
      if (from._internal_sort_target() != 0) {
        _this->_impl_.sort_target_ = from._impl_.sort_target_;
      }
    }
    if ((cached_has_bits & 0x00000040u) != 0) {
      if (from._internal_min_mod_revision() != 0) {
        _this->_impl_.min_mod_revision_ = from._impl_.min_mod_revision_;
      }
    }
    if ((cached_has_bits & 0x00000080u) != 0) {
      if (from._internal_max_mod_revision() != 0) {
        _this->_impl_.max_mod_revision_ = from._impl_.max_mod_revision_;
      }
    }
  }
  if ((cached_has_bits & 0x00001f00u) != 0) {
    if ((cached_has_bits & 0x00000100u) != 0) {
      if (from._internal_min_create_revision() != 0) {
        _this->_impl_.min_create_revision_ = from._impl_.min_create_revision_;
      }
    }
    if ((cached_has_bits & 0x00000200u) != 0) {
      if (from._internal_max_create_revision() != 0) {
        _this->_impl_.max_create_revision_ = from._impl_.max_create_revision_;
      }
    }
    if ((cached_has_bits & 0x00000400u) != 0) {
      if (from._internal_serializable() != 0) {
        _this->_impl_.serializable_ = from._impl_.serializable_;
      }
    }
    if ((cached_has_bits & 0x00000800u) != 0) {
      if (from._internal_keys_only() != 0) {
        _this->_impl_.keys_only_ = from._impl_.keys_only_;
      }
    }
    if ((cached_has_bits & 0x00001000u) != 0) {
      if (from._internal_count_only() != 0) {
        _this->_impl_.count_only_ = from._impl_.count_only_;
      }
    }
  }
  _this->_impl_._has_bits_[0] |= cached_has_bits;
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void RangeRequest::CopyFrom(const RangeRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:etcdserverpb.RangeRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void RangeRequest::InternalSwap(RangeRequest* PROTOBUF_RESTRICT PROTOBUF_NONNULL other) {
  using ::std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.key_, &other->_impl_.key_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.range_end_, &other->_impl_.range_end_, arena);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(RangeRequest, _impl_.count_only_)
      + sizeof(RangeRequest::_impl_.count_only_)
      - PROTOBUF_FIELD_OFFSET(RangeRequest, _impl_.limit_)>(
          reinterpret_cast<char*>(&_impl_.limit_),
          reinterpret_cast<char*>(&other->_impl_.limit_));
}

::google::protobuf::Metadata RangeRequest::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class RangeResponse::_Internal {
 public:
  using HasBits =
      decltype(::std::declval<RangeResponse>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
      8 * PROTOBUF_FIELD_OFFSET(RangeResponse, _impl_._has_bits_);
};

void RangeResponse::clear_kvs() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.kvs_.Clear();
}
RangeResponse::RangeResponse(::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, RangeResponse_class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:etcdserverpb.RangeResponse)
}
PROTOBUF_NDEBUG_INLINE RangeResponse::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const Impl_& from,
    const ::etcdserverpb::RangeResponse& from_msg)
      : _has_bits_{from._has_bits_},
        _cached_size_{0},
        kvs_{visibility, arena, from.kvs_} {}

RangeResponse::RangeResponse(
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena,
    const RangeResponse& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, RangeResponse_class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  RangeResponse* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);
  ::uint32_t cached_has_bits = _impl_._has_bits_[0];
  _impl_.header_ = ((cached_has_bits & 0x00000001u) != 0)
                ? ::google::protobuf::Message::CopyConstruct(arena, *from._impl_.header_)
                : nullptr;
  ::memcpy(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, count_),
           reinterpret_cast<const char *>(&from._impl_) +
               offsetof(Impl_, count_),
           offsetof(Impl_, more_) -
               offsetof(Impl_, count_) +
               sizeof(Impl_::more_));

  // @@protoc_insertion_point(copy_constructor:etcdserverpb.RangeResponse)
}
PROTOBUF_NDEBUG_INLINE RangeResponse::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
      : _cached_size_{0},
        kvs_{visibility, arena} {}

inline void RangeResponse::SharedCtor(::_pb::Arena* PROTOBUF_NULLABLE arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, header_),
           0,
           offsetof(Impl_, more_) -
               offsetof(Impl_, header_) +
               sizeof(Impl_::more_));
}
RangeResponse::~RangeResponse() {
  // @@protoc_insertion_point(destructor:etcdserverpb.RangeResponse)
  SharedDtor(*this);
}
inline void RangeResponse::SharedDtor(MessageLite& self) {
  RangeResponse& this_ = static_cast<RangeResponse&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  delete this_._impl_.header_;
  this_._impl_.~Impl_();
}

inline void* PROTOBUF_NONNULL RangeResponse::PlacementNew_(
    const void* PROTOBUF_NONNULL, void* PROTOBUF_NONNULL mem,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena) {
  return ::new (mem) RangeResponse(arena);
}
constexpr auto RangeResponse::InternalNewImpl_() {
  constexpr auto arena_bits = ::google::protobuf::internal::EncodePlacementArenaOffsets({
      PROTOBUF_FIELD_OFFSET(RangeResponse, _impl_.kvs_) +
          decltype(RangeResponse::_impl_.kvs_)::
              InternalGetArenaOffset(
                  ::google::protobuf::Message::internal_visibility()),
  });
  if (arena_bits.has_value()) {
    return ::google::protobuf::internal::MessageCreator::ZeroInit(
        sizeof(RangeResponse), alignof(RangeResponse), *arena_bits);
  } else {
    return ::google::protobuf::internal::MessageCreator(&RangeResponse::PlacementNew_,
                                 sizeof(RangeResponse),
                                 alignof(RangeResponse));
  }
}
constexpr auto RangeResponse::InternalGenerateClassData_() {
  return ::google::protobuf::internal::ClassDataFull{
      ::google::protobuf::internal::ClassData{
          &_RangeResponse_default_instance_._instance,
          &_table_.header,
          nullptr,  // OnDemandRegisterArenaDtor
          nullptr,  // IsInitialized
          &RangeResponse::MergeImpl,
          ::google::protobuf::Message::GetNewImpl<RangeResponse>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
          &RangeResponse::SharedDtor,
          ::google::protobuf::Message::GetClearImpl<RangeResponse>(), &RangeResponse::ByteSizeLong,
              &RangeResponse::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
          PROTOBUF_FIELD_OFFSET(RangeResponse, _impl_._cached_size_),
          false,
      },
      &RangeResponse::kDescriptorMethods,
      &descriptor_table_proto_2fetcd_2fetcd_2eproto,
      nullptr,  // tracker
  };
}

PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 const
    ::google::protobuf::internal::ClassDataFull RangeResponse_class_data_ =
        RangeResponse::InternalGenerateClassData_();

PROTOBUF_ATTRIBUTE_WEAK const ::google::protobuf::internal::ClassData* PROTOBUF_NONNULL
RangeResponse::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&RangeResponse_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(RangeResponse_class_data_.tc_table);
  return RangeResponse_class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<2, 4, 2, 0, 2>
RangeResponse::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(RangeResponse, _impl_._has_bits_),
    0, // no _extensions_
    4, 24,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967280,  // skipmap
    offsetof(decltype(_table_), field_entries),
    4,  // num_field_entries
    2,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    RangeResponse_class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::etcdserverpb::RangeResponse>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // int64 count = 4;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint64_t, offsetof(RangeResponse, _impl_.count_), 1>(),
     {32, 1, 0, PROTOBUF_FIELD_OFFSET(RangeResponse, _impl_.count_)}},
    // .etcdserverpb.ResponseHeader header = 1;
    {::_pbi::TcParser::FastMtS1,
     {10, 0, 0, PROTOBUF_FIELD_OFFSET(RangeResponse, _impl_.header_)}},
    // repeated .mvccpb.KeyValue kvs = 2;
    {::_pbi::TcParser::FastMtR1,
     {18, 63, 1, PROTOBUF_FIELD_OFFSET(RangeResponse, _impl_.kvs_)}},
    // bool more = 3;
    {::_pbi::TcParser::SingularVarintNoZag1<bool, offsetof(RangeResponse, _impl_.more_), 2>(),
     {24, 2, 0, PROTOBUF_FIELD_OFFSET(RangeResponse, _impl_.more_)}},
  }}, {{
    65535, 65535
  }}, {{
    // .etcdserverpb.ResponseHeader header = 1;
    {PROTOBUF_FIELD_OFFSET(RangeResponse, _impl_.header_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
    // repeated .mvccpb.KeyValue kvs = 2;
    {PROTOBUF_FIELD_OFFSET(RangeResponse, _impl_.kvs_), -1, 1,
    (0 | ::_fl::kFcRepeated | ::_fl::kMessage | ::_fl::kTvTable)},
    // bool more = 3;
    {PROTOBUF_FIELD_OFFSET(RangeResponse, _impl_.more_), _Internal::kHasBitsOffset + 2, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kBool)},
    // int64 count = 4;
    {PROTOBUF_FIELD_OFFSET(RangeResponse, _impl_.count_), _Internal::kHasBitsOffset + 1, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kInt64)},
  }},
  {{
      {::_pbi::TcParser::GetTable<::etcdserverpb::ResponseHeader>()},
      {::_pbi::TcParser::GetTable<::mvccpb::KeyValue>()},
  }},
  {{
  }},
};
PROTOBUF_NOINLINE void RangeResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:etcdserverpb.RangeResponse)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.kvs_.Clear();
  cached_has_bits = _impl_._has_bits_[0];
  if ((cached_has_bits & 0x00000001u) != 0) {
    ABSL_DCHECK(_impl_.header_ != nullptr);
    _impl_.header_->Clear();
  }
  if ((cached_has_bits & 0x00000006u) != 0) {
    ::memset(&_impl_.count_, 0, static_cast<::size_t>(
        reinterpret_cast<char*>(&_impl_.more_) -
        reinterpret_cast<char*>(&_impl_.count_)) + sizeof(_impl_.more_));
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::uint8_t* PROTOBUF_NONNULL RangeResponse::_InternalSerialize(
    const ::google::protobuf::MessageLite& base, ::uint8_t* PROTOBUF_NONNULL target,
    ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) {
  const RangeResponse& this_ = static_cast<const RangeResponse&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::uint8_t* PROTOBUF_NONNULL RangeResponse::_InternalSerialize(
    ::uint8_t* PROTOBUF_NONNULL target,
    ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const {
  const RangeResponse& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
  // @@protoc_insertion_point(serialize_to_array_start:etcdserverpb.RangeResponse)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  cached_has_bits = this_._impl_._has_bits_[0];
  // .etcdserverpb.ResponseHeader header = 1;
  if ((cached_has_bits & 0x00000001u) != 0) {
    target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
        1, *this_._impl_.header_, this_._impl_.header_->GetCachedSize(), target,
        stream);
  }

  // repeated .mvccpb.KeyValue kvs = 2;
  for (unsigned i = 0, n = static_cast<unsigned>(
                           this_._internal_kvs_size());
       i < n; i++) {
    const auto& repfield = this_._internal_kvs().Get(i);
    target =
        ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
            2, repfield, repfield.GetCachedSize(),
            target, stream);
  }

  // bool more = 3;
  if ((cached_has_bits & 0x00000004u) != 0) {
    if (this_._internal_more() != 0) {
      target = stream->EnsureSpace(target);
      target = ::_pbi::WireFormatLite::WriteBoolToArray(
          3, this_._internal_more(), target);
    }
  }

  // int64 count = 4;
  if ((cached_has_bits & 0x00000002u) != 0) {
    if (this_._internal_count() != 0) {
      target =
          ::google::protobuf::internal::WireFormatLite::WriteInt64ToArrayWithField<4>(
              stream, this_._internal_count(), target);
    }
  }

  if (ABSL_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:etcdserverpb.RangeResponse)
  return target;
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::size_t RangeResponse::ByteSizeLong(const MessageLite& base) {
  const RangeResponse& this_ = static_cast<const RangeResponse&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::size_t RangeResponse::ByteSizeLong() const {
  const RangeResponse& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
  // @@protoc_insertion_point(message_byte_size_start:etcdserverpb.RangeResponse)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void)cached_has_bits;

  ::_pbi::Prefetch5LinesFrom7Lines(&this_);
   {
    // repeated .mvccpb.KeyValue kvs = 2;
    {
      total_size += 1UL * this_._internal_kvs_size();
      for (const auto& msg : this_._internal_kvs()) {
        total_size += ::google::protobuf::internal::WireFormatLite::MessageSize(msg);
      }
    }
  }
  cached_has_bits = this_._impl_._has_bits_[0];
  if ((cached_has_bits & 0x00000007u) != 0) {
    // .etcdserverpb.ResponseHeader header = 1;
    if ((cached_has_bits & 0x00000001u) != 0) {
      total_size += 1 +
                    ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.header_);
    }
    // int64 count = 4;
    if ((cached_has_bits & 0x00000002u) != 0) {
      if (this_._internal_count() != 0) {
        total_size += ::_pbi::WireFormatLite::Int64SizePlusOne(
            this_._internal_count());
      }
    }
    // bool more = 3;
    if ((cached_has_bits & 0x00000004u) != 0) {
      if (this_._internal_more() != 0) {
        total_size += 2;
      }
    }
  }
  return this_.MaybeComputeUnknownFieldsSize(total_size,
                                             &this_._impl_._cached_size_);
}

void RangeResponse::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<RangeResponse*>(&to_msg);
  auto& from = static_cast<const RangeResponse&>(from_msg);
  ::google::protobuf::Arena* arena = _this->GetArena();
  // @@protoc_insertion_point(class_specific_merge_from_start:etcdserverpb.RangeResponse)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_internal_mutable_kvs()->MergeFrom(
      from._internal_kvs());
  cached_has_bits = from._impl_._has_bits_[0];
  if ((cached_has_bits & 0x00000007u) != 0) {
    if ((cached_has_bits & 0x00000001u) != 0) {
      ABSL_DCHECK(from._impl_.header_ != nullptr);
      if (_this->_impl_.header_ == nullptr) {
        _this->_impl_.header_ = ::google::protobuf::Message::CopyConstruct(arena, *from._impl_.header_);
      } else {
        _this->_impl_.header_->MergeFrom(*from._impl_.header_);
      }
    }
    if ((cached_has_bits & 0x00000002u) != 0) {
      if (from._internal_count() != 0) {
        _this->_impl_.count_ = from._impl_.count_;
      }
    }
    if ((cached_has_bits & 0x00000004u) != 0) {
      if (from._internal_more() != 0) {
        _this->_impl_.more_ = from._impl_.more_;
      }
    }
  }
  _this->_impl_._has_bits_[0] |= cached_has_bits;
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void RangeResponse::CopyFrom(const RangeResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:etcdserverpb.RangeResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void RangeResponse::InternalSwap(RangeResponse* PROTOBUF_RESTRICT PROTOBUF_NONNULL other) {
  using ::std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  _impl_.kvs_.InternalSwap(&other->_impl_.kvs_);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(RangeResponse, _impl_.more_)
      + sizeof(RangeResponse::_impl_.more_)
      - PROTOBUF_FIELD_OFFSET(RangeResponse, _impl_.header_)>(
          reinterpret_cast<char*>(&_impl_.header_),
          reinterpret_cast<char*>(&other->_impl_.header_));
}

::google::protobuf::Metadata RangeResponse::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class PutRequest::_Internal {
 public:
  using HasBits =
      decltype(::std::declval<PutRequest>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
      8 * PROTOBUF_FIELD_OFFSET(PutRequest, _impl_._has_bits_);
};

PutRequest::PutRequest(::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, PutRequest_class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:etcdserverpb.PutRequest)
}
PROTOBUF_NDEBUG_INLINE PutRequest::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const Impl_& from,
    const ::etcdserverpb::PutRequest& from_msg)
      : _has_bits_{from._has_bits_},
        _cached_size_{0},
        key_(arena, from.key_),
        value_(arena, from.value_) {}

PutRequest::PutRequest(
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena,
    const PutRequest& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, PutRequest_class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  PutRequest* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);
  ::memcpy(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, lease_),
           reinterpret_cast<const char *>(&from._impl_) +
               offsetof(Impl_, lease_),
           offsetof(Impl_, ignore_lease_) -
               offsetof(Impl_, lease_) +
               sizeof(Impl_::ignore_lease_));

  // @@protoc_insertion_point(copy_constructor:etcdserverpb.PutRequest)
}
PROTOBUF_NDEBUG_INLINE PutRequest::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
      : _cached_size_{0},
        key_(arena),
        value_(arena) {}

inline void PutRequest::SharedCtor(::_pb::Arena* PROTOBUF_NULLABLE arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, lease_),
           0,
           offsetof(Impl_, ignore_lease_) -
               offsetof(Impl_, lease_) +
               sizeof(Impl_::ignore_lease_));
}
PutRequest::~PutRequest() {
  // @@protoc_insertion_point(destructor:etcdserverpb.PutRequest)
  SharedDtor(*this);
}
inline void PutRequest::SharedDtor(MessageLite& self) {
  PutRequest& this_ = static_cast<PutRequest&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  this_._impl_.key_.Destroy();
  this_._impl_.value_.Destroy();
  this_._impl_.~Impl_();
}

inline void* PROTOBUF_NONNULL PutRequest::PlacementNew_(
    const void* PROTOBUF_NONNULL, void* PROTOBUF_NONNULL mem,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena) {
  return ::new (mem) PutRequest(arena);
}
constexpr auto PutRequest::InternalNewImpl_() {
  return ::google::protobuf::internal::MessageCreator::CopyInit(sizeof(PutRequest),
                                            alignof(PutRequest));
}
constexpr auto PutRequest::InternalGenerateClassData_() {
  return ::google::protobuf::internal::ClassDataFull{
      ::google::protobuf::internal::ClassData{
          &_PutRequest_default_instance_._instance,
          &_table_.header,
          nullptr,  // OnDemandRegisterArenaDtor
          nullptr,  // IsInitialized
          &PutRequest::MergeImpl,
          ::google::protobuf::Message::GetNewImpl<PutRequest>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
          &PutRequest::SharedDtor,
          ::google::protobuf::Message::GetClearImpl<PutRequest>(), &PutRequest::ByteSizeLong,
              &PutRequest::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
          PROTOBUF_FIELD_OFFSET(PutRequest, _impl_._cached_size_),
          false,
      },
      &PutRequest::kDescriptorMethods,
      &descriptor_table_proto_2fetcd_2fetcd_2eproto,
      nullptr,  // tracker
  };
}

PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 const
    ::google::protobuf::internal::ClassDataFull PutRequest_class_data_ =
        PutRequest::InternalGenerateClassData_();

PROTOBUF_ATTRIBUTE_WEAK const ::google::protobuf::internal::ClassData* PROTOBUF_NONNULL
PutRequest::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&PutRequest_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(PutRequest_class_data_.tc_table);
  return PutRequest_class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<3, 6, 0, 0, 2>
PutRequest::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(PutRequest, _impl_._has_bits_),
    0, // no _extensions_
    6, 56,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967232,  // skipmap
    offsetof(decltype(_table_), field_entries),
    6,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    PutRequest_class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::etcdserverpb::PutRequest>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
    // bytes key = 1;
    {::_pbi::TcParser::FastBS1,
     {10, 0, 0, PROTOBUF_FIELD_OFFSET(PutRequest, _impl_.key_)}},
    // bytes value = 2;
    {::_pbi::TcParser::FastBS1,
     {18, 1, 0, PROTOBUF_FIELD_OFFSET(PutRequest, _impl_.value_)}},
    // int64 lease = 3;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint64_t, offsetof(PutRequest, _impl_.lease_), 2>(),
     {24, 2, 0, PROTOBUF_FIELD_OFFSET(PutRequest, _impl_.lease_)}},
    // bool prev_kv = 4 [(.versionpb.etcd_version_field) = "3.1"];
    {::_pbi::TcParser::SingularVarintNoZag1<bool, offsetof(PutRequest, _impl_.prev_kv_), 3>(),
     {32, 3, 0, PROTOBUF_FIELD_OFFSET(PutRequest, _impl_.prev_kv_)}},
    // bool ignore_value = 5 [(.versionpb.etcd_version_field) = "3.2"];
    {::_pbi::TcParser::SingularVarintNoZag1<bool, offsetof(PutRequest, _impl_.ignore_value_), 4>(),
     {40, 4, 0, PROTOBUF_FIELD_OFFSET(PutRequest, _impl_.ignore_value_)}},
    // bool ignore_lease = 6 [(.versionpb.etcd_version_field) = "3.2"];
    {::_pbi::TcParser::SingularVarintNoZag1<bool, offsetof(PutRequest, _impl_.ignore_lease_), 5>(),
     {48, 5, 0, PROTOBUF_FIELD_OFFSET(PutRequest, _impl_.ignore_lease_)}},
    {::_pbi::TcParser::MiniParse, {}},
  }}, {{
    65535, 65535
  }}, {{
    // bytes key = 1;
    {PROTOBUF_FIELD_OFFSET(PutRequest, _impl_.key_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kBytes | ::_fl::kRepAString)},
    // bytes value = 2;
    {PROTOBUF_FIELD_OFFSET(PutRequest, _impl_.value_), _Internal::kHasBitsOffset + 1, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kBytes | ::_fl::kRepAString)},
    // int64 lease = 3;
    {PROTOBUF_FIELD_OFFSET(PutRequest, _impl_.lease_), _Internal::kHasBitsOffset + 2, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kInt64)},
    // bool prev_kv = 4 [(.versionpb.etcd_version_field) = "3.1"];
    {PROTOBUF_FIELD_OFFSET(PutRequest, _impl_.prev_kv_), _Internal::kHasBitsOffset + 3, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kBool)},
    // bool ignore_value = 5 [(.versionpb.etcd_version_field) = "3.2"];
    {PROTOBUF_FIELD_OFFSET(PutRequest, _impl_.ignore_value_), _Internal::kHasBitsOffset + 4, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kBool)},
    // bool ignore_lease = 6 [(.versionpb.etcd_version_field) = "3.2"];
    {PROTOBUF_FIELD_OFFSET(PutRequest, _impl_.ignore_lease_), _Internal::kHasBitsOffset + 5, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kBool)},
  }},
  // no aux_entries
  {{
  }},
};
PROTOBUF_NOINLINE void PutRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:etcdserverpb.PutRequest)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if ((cached_has_bits & 0x00000003u) != 0) {
    if ((cached_has_bits & 0x00000001u) != 0) {
      _impl_.key_.ClearNonDefaultToEmpty();
    }
    if ((cached_has_bits & 0x00000002u) != 0) {
      _impl_.value_.ClearNonDefaultToEmpty();
    }
  }
  if ((cached_has_bits & 0x0000003cu) != 0) {
    ::memset(&_impl_.lease_, 0, static_cast<::size_t>(
        reinterpret_cast<char*>(&_impl_.ignore_lease_) -
        reinterpret_cast<char*>(&_impl_.lease_)) + sizeof(_impl_.ignore_lease_));
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::uint8_t* PROTOBUF_NONNULL PutRequest::_InternalSerialize(
    const ::google::protobuf::MessageLite& base, ::uint8_t* PROTOBUF_NONNULL target,
    ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) {
  const PutRequest& this_ = static_cast<const PutRequest&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::uint8_t* PROTOBUF_NONNULL PutRequest::_InternalSerialize(
    ::uint8_t* PROTOBUF_NONNULL target,
    ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const {
  const PutRequest& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
  // @@protoc_insertion_point(serialize_to_array_start:etcdserverpb.PutRequest)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  // bytes key = 1;
  if ((this_._impl_._has_bits_[0] & 0x00000001u) != 0) {
    if (!this_._internal_key().empty()) {
      const ::std::string& _s = this_._internal_key();
      target = stream->WriteBytesMaybeAliased(1, _s, target);
    }
  }

  // bytes value = 2;
  if ((this_._impl_._has_bits_[0] & 0x00000002u) != 0) {
    if (!this_._internal_value().empty()) {
      const ::std::string& _s = this_._internal_value();
      target = stream->WriteBytesMaybeAliased(2, _s, target);
    }
  }

  // int64 lease = 3;
  if ((this_._impl_._has_bits_[0] & 0x00000004u) != 0) {
    if (this_._internal_lease() != 0) {
      target =
          ::google::protobuf::internal::WireFormatLite::WriteInt64ToArrayWithField<3>(
              stream, this_._internal_lease(), target);
    }
  }

  // bool prev_kv = 4 [(.versionpb.etcd_version_field) = "3.1"];
  if ((this_._impl_._has_bits_[0] & 0x00000008u) != 0) {
    if (this_._internal_prev_kv() != 0) {
      target = stream->EnsureSpace(target);
      target = ::_pbi::WireFormatLite::WriteBoolToArray(
          4, this_._internal_prev_kv(), target);
    }
  }

  // bool ignore_value = 5 [(.versionpb.etcd_version_field) = "3.2"];
  if ((this_._impl_._has_bits_[0] & 0x00000010u) != 0) {
    if (this_._internal_ignore_value() != 0) {
      target = stream->EnsureSpace(target);
      target = ::_pbi::WireFormatLite::WriteBoolToArray(
          5, this_._internal_ignore_value(), target);
    }
  }

  // bool ignore_lease = 6 [(.versionpb.etcd_version_field) = "3.2"];
  if ((this_._impl_._has_bits_[0] & 0x00000020u) != 0) {
    if (this_._internal_ignore_lease() != 0) {
      target = stream->EnsureSpace(target);
      target = ::_pbi::WireFormatLite::WriteBoolToArray(
          6, this_._internal_ignore_lease(), target);
    }
  }

  if (ABSL_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:etcdserverpb.PutRequest)
  return target;
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::size_t PutRequest::ByteSizeLong(const MessageLite& base) {
  const PutRequest& this_ = static_cast<const PutRequest&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::size_t PutRequest::ByteSizeLong() const {
  const PutRequest& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
  // @@protoc_insertion_point(message_byte_size_start:etcdserverpb.PutRequest)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void)cached_has_bits;

  ::_pbi::Prefetch5LinesFrom7Lines(&this_);
  cached_has_bits = this_._impl_._has_bits_[0];
  if ((cached_has_bits & 0x0000003fu) != 0) {
    // bytes key = 1;
    if ((cached_has_bits & 0x00000001u) != 0) {
      if (!this_._internal_key().empty()) {
        total_size += 1 + ::google::protobuf::internal::WireFormatLite::BytesSize(
                                        this_._internal_key());
      }
    }
    // bytes value = 2;
    if ((cached_has_bits & 0x00000002u) != 0) {
      if (!this_._internal_value().empty()) {
        total_size += 1 + ::google::protobuf::internal::WireFormatLite::BytesSize(
                                        this_._internal_value());
      }
    }
    // int64 lease = 3;
    if ((cached_has_bits & 0x00000004u) != 0) {
      if (this_._internal_lease() != 0) {
        total_size += ::_pbi::WireFormatLite::Int64SizePlusOne(
            this_._internal_lease());
      }
    }
    // bool prev_kv = 4 [(.versionpb.etcd_version_field) = "3.1"];
    if ((cached_has_bits & 0x00000008u) != 0) {
      if (this_._internal_prev_kv() != 0) {
        total_size += 2;
      }
    }
    // bool ignore_value = 5 [(.versionpb.etcd_version_field) = "3.2"];
    if ((cached_has_bits & 0x00000010u) != 0) {
      if (this_._internal_ignore_value() != 0) {
        total_size += 2;
      }
    }
    // bool ignore_lease = 6 [(.versionpb.etcd_version_field) = "3.2"];
    if ((cached_has_bits & 0x00000020u) != 0) {
      if (this_._internal_ignore_lease() != 0) {
        total_size += 2;
      }
    }
  }
  return this_.MaybeComputeUnknownFieldsSize(total_size,
                                             &this_._impl_._cached_size_);
}

void PutRequest::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<PutRequest*>(&to_msg);
  auto& from = static_cast<const PutRequest&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:etcdserverpb.PutRequest)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._impl_._has_bits_[0];
  if ((cached_has_bits & 0x0000003fu) != 0) {
    if ((cached_has_bits & 0x00000001u) != 0) {
      if (!from._internal_key().empty()) {
        _this->_internal_set_key(from._internal_key());
      } else {
        if (_this->_impl_.key_.IsDefault()) {
          _this->_internal_set_key("");
        }
      }
    }
    if ((cached_has_bits & 0x00000002u) != 0) {
      if (!from._internal_value().empty()) {
        _this->_internal_set_value(from._internal_value());
      } else {
        if (_this->_impl_.value_.IsDefault()) {
          _this->_internal_set_value("");
        }
      }
    }
    if ((cached_has_bits & 0x00000004u) != 0) {
      if (from._internal_lease() != 0) {
        _this->_impl_.lease_ = from._impl_.lease_;
      }
    }
    if ((cached_has_bits & 0x00000008u) != 0) {
      if (from._internal_prev_kv() != 0) {
        _this->_impl_.prev_kv_ = from._impl_.prev_kv_;
      }
    }
    if ((cached_has_bits & 0x00000010u) != 0) {
      if (from._internal_ignore_value() != 0) {
        _this->_impl_.ignore_value_ = from._impl_.ignore_value_;
      }
    }
    if ((cached_has_bits & 0x00000020u) != 0) {
      if (from._internal_ignore_lease() != 0) {
        _this->_impl_.ignore_lease_ = from._impl_.ignore_lease_;
      }
    }
  }
  _this->_impl_._has_bits_[0] |= cached_has_bits;
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void PutRequest::CopyFrom(const PutRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:etcdserverpb.PutRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void PutRequest::InternalSwap(PutRequest* PROTOBUF_RESTRICT PROTOBUF_NONNULL other) {
  using ::std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.key_, &other->_impl_.key_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.value_, &other->_impl_.value_, arena);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(PutRequest, _impl_.ignore_lease_)
      + sizeof(PutRequest::_impl_.ignore_lease_)
      - PROTOBUF_FIELD_OFFSET(PutRequest, _impl_.lease_)>(
          reinterpret_cast<char*>(&_impl_.lease_),
          reinterpret_cast<char*>(&other->_impl_.lease_));
}

::google::protobuf::Metadata PutRequest::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class PutResponse::_Internal {
 public:
  using HasBits =
      decltype(::std::declval<PutResponse>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
      8 * PROTOBUF_FIELD_OFFSET(PutResponse, _impl_._has_bits_);
};

void PutResponse::clear_prev_kv() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.prev_kv_ != nullptr) _impl_.prev_kv_->Clear();
  _impl_._has_bits_[0] &= ~0x00000002u;
}
PutResponse::PutResponse(::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, PutResponse_class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:etcdserverpb.PutResponse)
}
PROTOBUF_NDEBUG_INLINE PutResponse::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const Impl_& from,
    const ::etcdserverpb::PutResponse& from_msg)
      : _has_bits_{from._has_bits_},
        _cached_size_{0} {}

PutResponse::PutResponse(
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena,
    const PutResponse& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, PutResponse_class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  PutResponse* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);
  ::uint32_t cached_has_bits = _impl_._has_bits_[0];
  _impl_.header_ = ((cached_has_bits & 0x00000001u) != 0)
                ? ::google::protobuf::Message::CopyConstruct(arena, *from._impl_.header_)
                : nullptr;
  _impl_.prev_kv_ = ((cached_has_bits & 0x00000002u) != 0)
                ? ::google::protobuf::Message::CopyConstruct(arena, *from._impl_.prev_kv_)
                : nullptr;

  // @@protoc_insertion_point(copy_constructor:etcdserverpb.PutResponse)
}
PROTOBUF_NDEBUG_INLINE PutResponse::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
      : _cached_size_{0} {}

inline void PutResponse::SharedCtor(::_pb::Arena* PROTOBUF_NULLABLE arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, header_),
           0,
           offsetof(Impl_, prev_kv_) -
               offsetof(Impl_, header_) +
               sizeof(Impl_::prev_kv_));
}
PutResponse::~PutResponse() {
  // @@protoc_insertion_point(destructor:etcdserverpb.PutResponse)
  SharedDtor(*this);
}
inline void PutResponse::SharedDtor(MessageLite& self) {
  PutResponse& this_ = static_cast<PutResponse&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  delete this_._impl_.header_;
  delete this_._impl_.prev_kv_;
  this_._impl_.~Impl_();
}

inline void* PROTOBUF_NONNULL PutResponse::PlacementNew_(
    const void* PROTOBUF_NONNULL, void* PROTOBUF_NONNULL mem,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena) {
  return ::new (mem) PutResponse(arena);
}
constexpr auto PutResponse::InternalNewImpl_() {
  return ::google::protobuf::internal::MessageCreator::ZeroInit(sizeof(PutResponse),
                                            alignof(PutResponse));
}
constexpr auto PutResponse::InternalGenerateClassData_() {
  return ::google::protobuf::internal::ClassDataFull{
      ::google::protobuf::internal::ClassData{
          &_PutResponse_default_instance_._instance,
          &_table_.header,
          nullptr,  // OnDemandRegisterArenaDtor
          nullptr,  // IsInitialized
          &PutResponse::MergeImpl,
          ::google::protobuf::Message::GetNewImpl<PutResponse>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
          &PutResponse::SharedDtor,
          ::google::protobuf::Message::GetClearImpl<PutResponse>(), &PutResponse::ByteSizeLong,
              &PutResponse::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
          PROTOBUF_FIELD_OFFSET(PutResponse, _impl_._cached_size_),
          false,
      },
      &PutResponse::kDescriptorMethods,
      &descriptor_table_proto_2fetcd_2fetcd_2eproto,
      nullptr,  // tracker
  };
}

PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 const
    ::google::protobuf::internal::ClassDataFull PutResponse_class_data_ =
        PutResponse::InternalGenerateClassData_();

PROTOBUF_ATTRIBUTE_WEAK const ::google::protobuf::internal::ClassData* PROTOBUF_NONNULL
PutResponse::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&PutResponse_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(PutResponse_class_data_.tc_table);
  return PutResponse_class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<1, 2, 2, 0, 2>
PutResponse::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(PutResponse, _impl_._has_bits_),
    0, // no _extensions_
    2, 8,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967292,  // skipmap
    offsetof(decltype(_table_), field_entries),
    2,  // num_field_entries
    2,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    PutResponse_class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::etcdserverpb::PutResponse>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // .mvccpb.KeyValue prev_kv = 2 [(.versionpb.etcd_version_field) = "3.1"];
    {::_pbi::TcParser::FastMtS1,
     {18, 1, 1, PROTOBUF_FIELD_OFFSET(PutResponse, _impl_.prev_kv_)}},
    // .etcdserverpb.ResponseHeader header = 1;
    {::_pbi::TcParser::FastMtS1,
     {10, 0, 0, PROTOBUF_FIELD_OFFSET(PutResponse, _impl_.header_)}},
  }}, {{
    65535, 65535
  }}, {{
    // .etcdserverpb.ResponseHeader header = 1;
    {PROTOBUF_FIELD_OFFSET(PutResponse, _impl_.header_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
    // .mvccpb.KeyValue prev_kv = 2 [(.versionpb.etcd_version_field) = "3.1"];
    {PROTOBUF_FIELD_OFFSET(PutResponse, _impl_.prev_kv_), _Internal::kHasBitsOffset + 1, 1,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
  }},
  {{
      {::_pbi::TcParser::GetTable<::etcdserverpb::ResponseHeader>()},
      {::_pbi::TcParser::GetTable<::mvccpb::KeyValue>()},
  }},
  {{
  }},
};
PROTOBUF_NOINLINE void PutResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:etcdserverpb.PutResponse)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if ((cached_has_bits & 0x00000003u) != 0) {
    if ((cached_has_bits & 0x00000001u) != 0) {
      ABSL_DCHECK(_impl_.header_ != nullptr);
      _impl_.header_->Clear();
    }
    if ((cached_has_bits & 0x00000002u) != 0) {
      ABSL_DCHECK(_impl_.prev_kv_ != nullptr);
      _impl_.prev_kv_->Clear();
    }
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::uint8_t* PROTOBUF_NONNULL PutResponse::_InternalSerialize(
    const ::google::protobuf::MessageLite& base, ::uint8_t* PROTOBUF_NONNULL target,
    ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) {
  const PutResponse& this_ = static_cast<const PutResponse&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::uint8_t* PROTOBUF_NONNULL PutResponse::_InternalSerialize(
    ::uint8_t* PROTOBUF_NONNULL target,
    ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const {
  const PutResponse& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
  // @@protoc_insertion_point(serialize_to_array_start:etcdserverpb.PutResponse)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  cached_has_bits = this_._impl_._has_bits_[0];
  // .etcdserverpb.ResponseHeader header = 1;
  if ((cached_has_bits & 0x00000001u) != 0) {
    target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
        1, *this_._impl_.header_, this_._impl_.header_->GetCachedSize(), target,
        stream);
  }

  // .mvccpb.KeyValue prev_kv = 2 [(.versionpb.etcd_version_field) = "3.1"];
  if ((cached_has_bits & 0x00000002u) != 0) {
    target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
        2, *this_._impl_.prev_kv_, this_._impl_.prev_kv_->GetCachedSize(), target,
        stream);
  }

  if (ABSL_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:etcdserverpb.PutResponse)
  return target;
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::size_t PutResponse::ByteSizeLong(const MessageLite& base) {
  const PutResponse& this_ = static_cast<const PutResponse&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::size_t PutResponse::ByteSizeLong() const {
  const PutResponse& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
  // @@protoc_insertion_point(message_byte_size_start:etcdserverpb.PutResponse)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void)cached_has_bits;

  ::_pbi::Prefetch5LinesFrom7Lines(&this_);
  cached_has_bits = this_._impl_._has_bits_[0];
  if ((cached_has_bits & 0x00000003u) != 0) {
    // .etcdserverpb.ResponseHeader header = 1;
    if ((cached_has_bits & 0x00000001u) != 0) {
      total_size += 1 +
                    ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.header_);
    }
    // .mvccpb.KeyValue prev_kv = 2 [(.versionpb.etcd_version_field) = "3.1"];
    if ((cached_has_bits & 0x00000002u) != 0) {
      total_size += 1 +
                    ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.prev_kv_);
    }
  }
  return this_.MaybeComputeUnknownFieldsSize(total_size,
                                             &this_._impl_._cached_size_);
}

void PutResponse::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<PutResponse*>(&to_msg);
  auto& from = static_cast<const PutResponse&>(from_msg);
  ::google::protobuf::Arena* arena = _this->GetArena();
  // @@protoc_insertion_point(class_specific_merge_from_start:etcdserverpb.PutResponse)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._impl_._has_bits_[0];
  if ((cached_has_bits & 0x00000003u) != 0) {
    if ((cached_has_bits & 0x00000001u) != 0) {
      ABSL_DCHECK(from._impl_.header_ != nullptr);
      if (_this->_impl_.header_ == nullptr) {
        _this->_impl_.header_ = ::google::protobuf::Message::CopyConstruct(arena, *from._impl_.header_);
      } else {
        _this->_impl_.header_->MergeFrom(*from._impl_.header_);
      }
    }
    if ((cached_has_bits & 0x00000002u) != 0) {
      ABSL_DCHECK(from._impl_.prev_kv_ != nullptr);
      if (_this->_impl_.prev_kv_ == nullptr) {
        _this->_impl_.prev_kv_ = ::google::protobuf::Message::CopyConstruct(arena, *from._impl_.prev_kv_);
      } else {
        _this->_impl_.prev_kv_->MergeFrom(*from._impl_.prev_kv_);
      }
    }
  }
  _this->_impl_._has_bits_[0] |= cached_has_bits;
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void PutResponse::CopyFrom(const PutResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:etcdserverpb.PutResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void PutResponse::InternalSwap(PutResponse* PROTOBUF_RESTRICT PROTOBUF_NONNULL other) {
  using ::std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(PutResponse, _impl_.prev_kv_)
      + sizeof(PutResponse::_impl_.prev_kv_)
      - PROTOBUF_FIELD_OFFSET(PutResponse, _impl_.header_)>(
          reinterpret_cast<char*>(&_impl_.header_),
          reinterpret_cast<char*>(&other->_impl_.header_));
}

::google::protobuf::Metadata PutResponse::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class DeleteRangeRequest::_Internal {
 public:
  using HasBits =
      decltype(::std::declval<DeleteRangeRequest>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
      8 * PROTOBUF_FIELD_OFFSET(DeleteRangeRequest, _impl_._has_bits_);
};

DeleteRangeRequest::DeleteRangeRequest(::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, DeleteRangeRequest_class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:etcdserverpb.DeleteRangeRequest)
}
PROTOBUF_NDEBUG_INLINE DeleteRangeRequest::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const Impl_& from,
    const ::etcdserverpb::DeleteRangeRequest& from_msg)
      : _has_bits_{from._has_bits_},
        _cached_size_{0},
        key_(arena, from.key_),
        range_end_(arena, from.range_end_) {}

DeleteRangeRequest::DeleteRangeRequest(
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena,
    const DeleteRangeRequest& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, DeleteRangeRequest_class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  DeleteRangeRequest* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);
  _impl_.prev_kv_ = from._impl_.prev_kv_;

  // @@protoc_insertion_point(copy_constructor:etcdserverpb.DeleteRangeRequest)
}
PROTOBUF_NDEBUG_INLINE DeleteRangeRequest::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
      : _cached_size_{0},
        key_(arena),
        range_end_(arena) {}

inline void DeleteRangeRequest::SharedCtor(::_pb::Arena* PROTOBUF_NULLABLE arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  _impl_.prev_kv_ = {};
}
DeleteRangeRequest::~DeleteRangeRequest() {
  // @@protoc_insertion_point(destructor:etcdserverpb.DeleteRangeRequest)
  SharedDtor(*this);
}
inline void DeleteRangeRequest::SharedDtor(MessageLite& self) {
  DeleteRangeRequest& this_ = static_cast<DeleteRangeRequest&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  this_._impl_.key_.Destroy();
  this_._impl_.range_end_.Destroy();
  this_._impl_.~Impl_();
}

inline void* PROTOBUF_NONNULL DeleteRangeRequest::PlacementNew_(
    const void* PROTOBUF_NONNULL, void* PROTOBUF_NONNULL mem,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena) {
  return ::new (mem) DeleteRangeRequest(arena);
}
constexpr auto DeleteRangeRequest::InternalNewImpl_() {
  return ::google::protobuf::internal::MessageCreator::CopyInit(sizeof(DeleteRangeRequest),
                                            alignof(DeleteRangeRequest));
}
constexpr auto DeleteRangeRequest::InternalGenerateClassData_() {
  return ::google::protobuf::internal::ClassDataFull{
      ::google::protobuf::internal::ClassData{
          &_DeleteRangeRequest_default_instance_._instance,
          &_table_.header,
          nullptr,  // OnDemandRegisterArenaDtor
          nullptr,  // IsInitialized
          &DeleteRangeRequest::MergeImpl,
          ::google::protobuf::Message::GetNewImpl<DeleteRangeRequest>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
          &DeleteRangeRequest::SharedDtor,
          ::google::protobuf::Message::GetClearImpl<DeleteRangeRequest>(), &DeleteRangeRequest::ByteSizeLong,
              &DeleteRangeRequest::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
          PROTOBUF_FIELD_OFFSET(DeleteRangeRequest, _impl_._cached_size_),
          false,
      },
      &DeleteRangeRequest::kDescriptorMethods,
      &descriptor_table_proto_2fetcd_2fetcd_2eproto,
      nullptr,  // tracker
  };
}

PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 const
    ::google::protobuf::internal::ClassDataFull DeleteRangeRequest_class_data_ =
        DeleteRangeRequest::InternalGenerateClassData_();

PROTOBUF_ATTRIBUTE_WEAK const ::google::protobuf::internal::ClassData* PROTOBUF_NONNULL
DeleteRangeRequest::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&DeleteRangeRequest_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(DeleteRangeRequest_class_data_.tc_table);
  return DeleteRangeRequest_class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<2, 3, 0, 0, 2>
DeleteRangeRequest::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(DeleteRangeRequest, _impl_._has_bits_),
    0, // no _extensions_
    3, 24,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967288,  // skipmap
    offsetof(decltype(_table_), field_entries),
    3,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    DeleteRangeRequest_class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::etcdserverpb::DeleteRangeRequest>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
    // bytes key = 1;
    {::_pbi::TcParser::FastBS1,
     {10, 0, 0, PROTOBUF_FIELD_OFFSET(DeleteRangeRequest, _impl_.key_)}},
    // bytes range_end = 2;
    {::_pbi::TcParser::FastBS1,
     {18, 1, 0, PROTOBUF_FIELD_OFFSET(DeleteRangeRequest, _impl_.range_end_)}},
    // bool prev_kv = 3 [(.versionpb.etcd_version_field) = "3.1"];
    {::_pbi::TcParser::SingularVarintNoZag1<bool, offsetof(DeleteRangeRequest, _impl_.prev_kv_), 2>(),
     {24, 2, 0, PROTOBUF_FIELD_OFFSET(DeleteRangeRequest, _impl_.prev_kv_)}},
  }}, {{
    65535, 65535
  }}, {{
    // bytes key = 1;
    {PROTOBUF_FIELD_OFFSET(DeleteRangeRequest, _impl_.key_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kBytes | ::_fl::kRepAString)},
    // bytes range_end = 2;
    {PROTOBUF_FIELD_OFFSET(DeleteRangeRequest, _impl_.range_end_), _Internal::kHasBitsOffset + 1, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kBytes | ::_fl::kRepAString)},
    // bool prev_kv = 3 [(.versionpb.etcd_version_field) = "3.1"];
    {PROTOBUF_FIELD_OFFSET(DeleteRangeRequest, _impl_.prev_kv_), _Internal::kHasBitsOffset + 2, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kBool)},
  }},
  // no aux_entries
  {{
  }},
};
PROTOBUF_NOINLINE void DeleteRangeRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:etcdserverpb.DeleteRangeRequest)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if ((cached_has_bits & 0x00000003u) != 0) {
    if ((cached_has_bits & 0x00000001u) != 0) {
      _impl_.key_.ClearNonDefaultToEmpty();
    }
    if ((cached_has_bits & 0x00000002u) != 0) {
      _impl_.range_end_.ClearNonDefaultToEmpty();
    }
  }
  _impl_.prev_kv_ = false;
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::uint8_t* PROTOBUF_NONNULL DeleteRangeRequest::_InternalSerialize(
    const ::google::protobuf::MessageLite& base, ::uint8_t* PROTOBUF_NONNULL target,
    ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) {
  const DeleteRangeRequest& this_ = static_cast<const DeleteRangeRequest&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::uint8_t* PROTOBUF_NONNULL DeleteRangeRequest::_InternalSerialize(
    ::uint8_t* PROTOBUF_NONNULL target,
    ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const {
  const DeleteRangeRequest& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
  // @@protoc_insertion_point(serialize_to_array_start:etcdserverpb.DeleteRangeRequest)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  // bytes key = 1;
  if ((this_._impl_._has_bits_[0] & 0x00000001u) != 0) {
    if (!this_._internal_key().empty()) {
      const ::std::string& _s = this_._internal_key();
      target = stream->WriteBytesMaybeAliased(1, _s, target);
    }
  }

  // bytes range_end = 2;
  if ((this_._impl_._has_bits_[0] & 0x00000002u) != 0) {
    if (!this_._internal_range_end().empty()) {
      const ::std::string& _s = this_._internal_range_end();
      target = stream->WriteBytesMaybeAliased(2, _s, target);
    }
  }

  // bool prev_kv = 3 [(.versionpb.etcd_version_field) = "3.1"];
  if ((this_._impl_._has_bits_[0] & 0x00000004u) != 0) {
    if (this_._internal_prev_kv() != 0) {
      target = stream->EnsureSpace(target);
      target = ::_pbi::WireFormatLite::WriteBoolToArray(
          3, this_._internal_prev_kv(), target);
    }
  }

  if (ABSL_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:etcdserverpb.DeleteRangeRequest)
  return target;
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::size_t DeleteRangeRequest::ByteSizeLong(const MessageLite& base) {
  const DeleteRangeRequest& this_ = static_cast<const DeleteRangeRequest&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::size_t DeleteRangeRequest::ByteSizeLong() const {
  const DeleteRangeRequest& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
  // @@protoc_insertion_point(message_byte_size_start:etcdserverpb.DeleteRangeRequest)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void)cached_has_bits;

  ::_pbi::Prefetch5LinesFrom7Lines(&this_);
  cached_has_bits = this_._impl_._has_bits_[0];
  if ((cached_has_bits & 0x00000007u) != 0) {
    // bytes key = 1;
    if ((cached_has_bits & 0x00000001u) != 0) {
      if (!this_._internal_key().empty()) {
        total_size += 1 + ::google::protobuf::internal::WireFormatLite::BytesSize(
                                        this_._internal_key());
      }
    }
    // bytes range_end = 2;
    if ((cached_has_bits & 0x00000002u) != 0) {
      if (!this_._internal_range_end().empty()) {
        total_size += 1 + ::google::protobuf::internal::WireFormatLite::BytesSize(
                                        this_._internal_range_end());
      }
    }
    // bool prev_kv = 3 [(.versionpb.etcd_version_field) = "3.1"];
    if ((cached_has_bits & 0x00000004u) != 0) {
      if (this_._internal_prev_kv() != 0) {
        total_size += 2;
      }
    }
  }
  return this_.MaybeComputeUnknownFieldsSize(total_size,
                                             &this_._impl_._cached_size_);
}

void DeleteRangeRequest::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<DeleteRangeRequest*>(&to_msg);
  auto& from = static_cast<const DeleteRangeRequest&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:etcdserverpb.DeleteRangeRequest)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._impl_._has_bits_[0];
  if ((cached_has_bits & 0x00000007u) != 0) {
    if ((cached_has_bits & 0x00000001u) != 0) {
      if (!from._internal_key().empty()) {
        _this->_internal_set_key(from._internal_key());
      } else {
        if (_this->_impl_.key_.IsDefault()) {
          _this->_internal_set_key("");
        }
      }
    }
    if ((cached_has_bits & 0x00000002u) != 0) {
      if (!from._internal_range_end().empty()) {
        _this->_internal_set_range_end(from._internal_range_end());
      } else {
        if (_this->_impl_.range_end_.IsDefault()) {
          _this->_internal_set_range_end("");
        }
      }
    }
    if ((cached_has_bits & 0x00000004u) != 0) {
      if (from._internal_prev_kv() != 0) {
        _this->_impl_.prev_kv_ = from._impl_.prev_kv_;
      }
    }
  }
  _this->_impl_._has_bits_[0] |= cached_has_bits;
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void DeleteRangeRequest::CopyFrom(const DeleteRangeRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:etcdserverpb.DeleteRangeRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void DeleteRangeRequest::InternalSwap(DeleteRangeRequest* PROTOBUF_RESTRICT PROTOBUF_NONNULL other) {
  using ::std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.key_, &other->_impl_.key_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.range_end_, &other->_impl_.range_end_, arena);
  swap(_impl_.prev_kv_, other->_impl_.prev_kv_);
}

::google::protobuf::Metadata DeleteRangeRequest::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class DeleteRangeResponse::_Internal {
 public:
  using HasBits =
      decltype(::std::declval<DeleteRangeResponse>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
      8 * PROTOBUF_FIELD_OFFSET(DeleteRangeResponse, _impl_._has_bits_);
};

void DeleteRangeResponse::clear_prev_kvs() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.prev_kvs_.Clear();
}
DeleteRangeResponse::DeleteRangeResponse(::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, DeleteRangeResponse_class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:etcdserverpb.DeleteRangeResponse)
}
PROTOBUF_NDEBUG_INLINE DeleteRangeResponse::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const Impl_& from,
    const ::etcdserverpb::DeleteRangeResponse& from_msg)
      : _has_bits_{from._has_bits_},
        _cached_size_{0},
        prev_kvs_{visibility, arena, from.prev_kvs_} {}

DeleteRangeResponse::DeleteRangeResponse(
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena,
    const DeleteRangeResponse& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, DeleteRangeResponse_class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  DeleteRangeResponse* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);
  ::uint32_t cached_has_bits = _impl_._has_bits_[0];
  _impl_.header_ = ((cached_has_bits & 0x00000001u) != 0)
                ? ::google::protobuf::Message::CopyConstruct(arena, *from._impl_.header_)
                : nullptr;
  _impl_.deleted_ = from._impl_.deleted_;

  // @@protoc_insertion_point(copy_constructor:etcdserverpb.DeleteRangeResponse)
}
PROTOBUF_NDEBUG_INLINE DeleteRangeResponse::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
      : _cached_size_{0},
        prev_kvs_{visibility, arena} {}

inline void DeleteRangeResponse::SharedCtor(::_pb::Arena* PROTOBUF_NULLABLE arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, header_),
           0,
           offsetof(Impl_, deleted_) -
               offsetof(Impl_, header_) +
               sizeof(Impl_::deleted_));
}
DeleteRangeResponse::~DeleteRangeResponse() {
  // @@protoc_insertion_point(destructor:etcdserverpb.DeleteRangeResponse)
  SharedDtor(*this);
}
inline void DeleteRangeResponse::SharedDtor(MessageLite& self) {
  DeleteRangeResponse& this_ = static_cast<DeleteRangeResponse&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  delete this_._impl_.header_;
  this_._impl_.~Impl_();
}

inline void* PROTOBUF_NONNULL DeleteRangeResponse::PlacementNew_(
    const void* PROTOBUF_NONNULL, void* PROTOBUF_NONNULL mem,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena) {
  return ::new (mem) DeleteRangeResponse(arena);
}
constexpr auto DeleteRangeResponse::InternalNewImpl_() {
  constexpr auto arena_bits = ::google::protobuf::internal::EncodePlacementArenaOffsets({
      PROTOBUF_FIELD_OFFSET(DeleteRangeResponse, _impl_.prev_kvs_) +
          decltype(DeleteRangeResponse::_impl_.prev_kvs_)::
              InternalGetArenaOffset(
                  ::google::protobuf::Message::internal_visibility()),
  });
  if (arena_bits.has_value()) {
    return ::google::protobuf::internal::MessageCreator::ZeroInit(
        sizeof(DeleteRangeResponse), alignof(DeleteRangeResponse), *arena_bits);
  } else {
    return ::google::protobuf::internal::MessageCreator(&DeleteRangeResponse::PlacementNew_,
                                 sizeof(DeleteRangeResponse),
                                 alignof(DeleteRangeResponse));
  }
}
constexpr auto DeleteRangeResponse::InternalGenerateClassData_() {
  return ::google::protobuf::internal::ClassDataFull{
      ::google::protobuf::internal::ClassData{
          &_DeleteRangeResponse_default_instance_._instance,
          &_table_.header,
          nullptr,  // OnDemandRegisterArenaDtor
          nullptr,  // IsInitialized
          &DeleteRangeResponse::MergeImpl,
          ::google::protobuf::Message::GetNewImpl<DeleteRangeResponse>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
          &DeleteRangeResponse::SharedDtor,
          ::google::protobuf::Message::GetClearImpl<DeleteRangeResponse>(), &DeleteRangeResponse::ByteSizeLong,
              &DeleteRangeResponse::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
          PROTOBUF_FIELD_OFFSET(DeleteRangeResponse, _impl_._cached_size_),
          false,
      },
      &DeleteRangeResponse::kDescriptorMethods,
      &descriptor_table_proto_2fetcd_2fetcd_2eproto,
      nullptr,  // tracker
  };
}

PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 const
    ::google::protobuf::internal::ClassDataFull DeleteRangeResponse_class_data_ =
        DeleteRangeResponse::InternalGenerateClassData_();

PROTOBUF_ATTRIBUTE_WEAK const ::google::protobuf::internal::ClassData* PROTOBUF_NONNULL
DeleteRangeResponse::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&DeleteRangeResponse_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(DeleteRangeResponse_class_data_.tc_table);
  return DeleteRangeResponse_class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<2, 3, 2, 0, 2>
DeleteRangeResponse::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(DeleteRangeResponse, _impl_._has_bits_),
    0, // no _extensions_
    3, 24,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967288,  // skipmap
    offsetof(decltype(_table_), field_entries),
    3,  // num_field_entries
    2,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    DeleteRangeResponse_class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::etcdserverpb::DeleteRangeResponse>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
    // .etcdserverpb.ResponseHeader header = 1;
    {::_pbi::TcParser::FastMtS1,
     {10, 0, 0, PROTOBUF_FIELD_OFFSET(DeleteRangeResponse, _impl_.header_)}},
    // int64 deleted = 2;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint64_t, offsetof(DeleteRangeResponse, _impl_.deleted_), 1>(),
     {16, 1, 0, PROTOBUF_FIELD_OFFSET(DeleteRangeResponse, _impl_.deleted_)}},
    // repeated .mvccpb.KeyValue prev_kvs = 3 [(.versionpb.etcd_version_field) = "3.1"];
    {::_pbi::TcParser::FastMtR1,
     {26, 63, 1, PROTOBUF_FIELD_OFFSET(DeleteRangeResponse, _impl_.prev_kvs_)}},
  }}, {{
    65535, 65535
  }}, {{
    // .etcdserverpb.ResponseHeader header = 1;
    {PROTOBUF_FIELD_OFFSET(DeleteRangeResponse, _impl_.header_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
    // int64 deleted = 2;
    {PROTOBUF_FIELD_OFFSET(DeleteRangeResponse, _impl_.deleted_), _Internal::kHasBitsOffset + 1, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kInt64)},
    // repeated .mvccpb.KeyValue prev_kvs = 3 [(.versionpb.etcd_version_field) = "3.1"];
    {PROTOBUF_FIELD_OFFSET(DeleteRangeResponse, _impl_.prev_kvs_), -1, 1,
    (0 | ::_fl::kFcRepeated | ::_fl::kMessage | ::_fl::kTvTable)},
  }},
  {{
      {::_pbi::TcParser::GetTable<::etcdserverpb::ResponseHeader>()},
      {::_pbi::TcParser::GetTable<::mvccpb::KeyValue>()},
  }},
  {{
  }},
};
PROTOBUF_NOINLINE void DeleteRangeResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:etcdserverpb.DeleteRangeResponse)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.prev_kvs_.Clear();
  cached_has_bits = _impl_._has_bits_[0];
  if ((cached_has_bits & 0x00000001u) != 0) {
    ABSL_DCHECK(_impl_.header_ != nullptr);
    _impl_.header_->Clear();
  }
  _impl_.deleted_ = ::int64_t{0};
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::uint8_t* PROTOBUF_NONNULL DeleteRangeResponse::_InternalSerialize(
    const ::google::protobuf::MessageLite& base, ::uint8_t* PROTOBUF_NONNULL target,
    ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) {
  const DeleteRangeResponse& this_ = static_cast<const DeleteRangeResponse&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::uint8_t* PROTOBUF_NONNULL DeleteRangeResponse::_InternalSerialize(
    ::uint8_t* PROTOBUF_NONNULL target,
    ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const {
  const DeleteRangeResponse& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
  // @@protoc_insertion_point(serialize_to_array_start:etcdserverpb.DeleteRangeResponse)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  cached_has_bits = this_._impl_._has_bits_[0];
  // .etcdserverpb.ResponseHeader header = 1;
  if ((cached_has_bits & 0x00000001u) != 0) {
    target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
        1, *this_._impl_.header_, this_._impl_.header_->GetCachedSize(), target,
        stream);
  }

  // int64 deleted = 2;
  if ((cached_has_bits & 0x00000002u) != 0) {
    if (this_._internal_deleted() != 0) {
      target =
          ::google::protobuf::internal::WireFormatLite::WriteInt64ToArrayWithField<2>(
              stream, this_._internal_deleted(), target);
    }
  }

  // repeated .mvccpb.KeyValue prev_kvs = 3 [(.versionpb.etcd_version_field) = "3.1"];
  for (unsigned i = 0, n = static_cast<unsigned>(
                           this_._internal_prev_kvs_size());
       i < n; i++) {
    const auto& repfield = this_._internal_prev_kvs().Get(i);
    target =
        ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
            3, repfield, repfield.GetCachedSize(),
            target, stream);
  }

  if (ABSL_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:etcdserverpb.DeleteRangeResponse)
  return target;
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::size_t DeleteRangeResponse::ByteSizeLong(const MessageLite& base) {
  const DeleteRangeResponse& this_ = static_cast<const DeleteRangeResponse&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::size_t DeleteRangeResponse::ByteSizeLong() const {
  const DeleteRangeResponse& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
  // @@protoc_insertion_point(message_byte_size_start:etcdserverpb.DeleteRangeResponse)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void)cached_has_bits;

  ::_pbi::Prefetch5LinesFrom7Lines(&this_);
   {
    // repeated .mvccpb.KeyValue prev_kvs = 3 [(.versionpb.etcd_version_field) = "3.1"];
    {
      total_size += 1UL * this_._internal_prev_kvs_size();
      for (const auto& msg : this_._internal_prev_kvs()) {
        total_size += ::google::protobuf::internal::WireFormatLite::MessageSize(msg);
      }
    }
  }
  cached_has_bits = this_._impl_._has_bits_[0];
  if ((cached_has_bits & 0x00000003u) != 0) {
    // .etcdserverpb.ResponseHeader header = 1;
    if ((cached_has_bits & 0x00000001u) != 0) {
      total_size += 1 +
                    ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.header_);
    }
    // int64 deleted = 2;
    if ((cached_has_bits & 0x00000002u) != 0) {
      if (this_._internal_deleted() != 0) {
        total_size += ::_pbi::WireFormatLite::Int64SizePlusOne(
            this_._internal_deleted());
      }
    }
  }
  return this_.MaybeComputeUnknownFieldsSize(total_size,
                                             &this_._impl_._cached_size_);
}

void DeleteRangeResponse::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<DeleteRangeResponse*>(&to_msg);
  auto& from = static_cast<const DeleteRangeResponse&>(from_msg);
  ::google::protobuf::Arena* arena = _this->GetArena();
  // @@protoc_insertion_point(class_specific_merge_from_start:etcdserverpb.DeleteRangeResponse)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_internal_mutable_prev_kvs()->MergeFrom(
      from._internal_prev_kvs());
  cached_has_bits = from._impl_._has_bits_[0];
  if ((cached_has_bits & 0x00000003u) != 0) {
    if ((cached_has_bits & 0x00000001u) != 0) {
      ABSL_DCHECK(from._impl_.header_ != nullptr);
      if (_this->_impl_.header_ == nullptr) {
        _this->_impl_.header_ = ::google::protobuf::Message::CopyConstruct(arena, *from._impl_.header_);
      } else {
        _this->_impl_.header_->MergeFrom(*from._impl_.header_);
      }
    }
    if ((cached_has_bits & 0x00000002u) != 0) {
      if (from._internal_deleted() != 0) {
        _this->_impl_.deleted_ = from._impl_.deleted_;
      }
    }
  }
  _this->_impl_._has_bits_[0] |= cached_has_bits;
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void DeleteRangeResponse::CopyFrom(const DeleteRangeResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:etcdserverpb.DeleteRangeResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void DeleteRangeResponse::InternalSwap(DeleteRangeResponse* PROTOBUF_RESTRICT PROTOBUF_NONNULL other) {
  using ::std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  _impl_.prev_kvs_.InternalSwap(&other->_impl_.prev_kvs_);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(DeleteRangeResponse, _impl_.deleted_)
      + sizeof(DeleteRangeResponse::_impl_.deleted_)
      - PROTOBUF_FIELD_OFFSET(DeleteRangeResponse, _impl_.header_)>(
          reinterpret_cast<char*>(&_impl_.header_),
          reinterpret_cast<char*>(&other->_impl_.header_));
}

::google::protobuf::Metadata DeleteRangeResponse::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class RequestOp::_Internal {
 public:
  static constexpr ::int32_t kOneofCaseOffset =
      PROTOBUF_FIELD_OFFSET(::etcdserverpb::RequestOp, _impl_._oneof_case_);
};

void RequestOp::set_allocated_request_range(::etcdserverpb::RangeRequest* PROTOBUF_NULLABLE request_range) {
  ::google::protobuf::Arena* message_arena = GetArena();
  clear_request();
  if (request_range) {
    ::google::protobuf::Arena* submessage_arena = request_range->GetArena();
    if (message_arena != submessage_arena) {
      request_range = ::google::protobuf::internal::GetOwnedMessage(message_arena, request_range, submessage_arena);
    }
    set_has_request_range();
    _impl_.request_.request_range_ = request_range;
  }
  // @@protoc_insertion_point(field_set_allocated:etcdserverpb.RequestOp.request_range)
}
void RequestOp::set_allocated_request_put(::etcdserverpb::PutRequest* PROTOBUF_NULLABLE request_put) {
  ::google::protobuf::Arena* message_arena = GetArena();
  clear_request();
  if (request_put) {
    ::google::protobuf::Arena* submessage_arena = request_put->GetArena();
    if (message_arena != submessage_arena) {
      request_put = ::google::protobuf::internal::GetOwnedMessage(message_arena, request_put, submessage_arena);
    }
    set_has_request_put();
    _impl_.request_.request_put_ = request_put;
  }
  // @@protoc_insertion_point(field_set_allocated:etcdserverpb.RequestOp.request_put)
}
void RequestOp::set_allocated_request_delete_range(::etcdserverpb::DeleteRangeRequest* PROTOBUF_NULLABLE request_delete_range) {
  ::google::protobuf::Arena* message_arena = GetArena();
  clear_request();
  if (request_delete_range) {
    ::google::protobuf::Arena* submessage_arena = request_delete_range->GetArena();
    if (message_arena != submessage_arena) {
      request_delete_range = ::google::protobuf::internal::GetOwnedMessage(message_arena, request_delete_range, submessage_arena);
    }
    set_has_request_delete_range();
    _impl_.request_.request_delete_range_ = request_delete_range;
  }
  // @@protoc_insertion_point(field_set_allocated:etcdserverpb.RequestOp.request_delete_range)
}
void RequestOp::set_allocated_request_txn(::etcdserverpb::TxnRequest* PROTOBUF_NULLABLE request_txn) {
  ::google::protobuf::Arena* message_arena = GetArena();
  clear_request();
  if (request_txn) {
    ::google::protobuf::Arena* submessage_arena = request_txn->GetArena();
    if (message_arena != submessage_arena) {
      request_txn = ::google::protobuf::internal::GetOwnedMessage(message_arena, request_txn, submessage_arena);
    }
    set_has_request_txn();
    _impl_.request_.request_txn_ = request_txn;
  }
  // @@protoc_insertion_point(field_set_allocated:etcdserverpb.RequestOp.request_txn)
}
RequestOp::RequestOp(::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, RequestOp_class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:etcdserverpb.RequestOp)
}
PROTOBUF_NDEBUG_INLINE RequestOp::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const Impl_& from,
    const ::etcdserverpb::RequestOp& from_msg)
      : request_{},
        _cached_size_{0},
        _oneof_case_{from._oneof_case_[0]} {}

RequestOp::RequestOp(
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena,
    const RequestOp& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, RequestOp_class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  RequestOp* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);
  switch (request_case()) {
    case REQUEST_NOT_SET:
      break;
      case kRequestRange:
        _impl_.request_.request_range_ = ::google::protobuf::Message::CopyConstruct(arena, *from._impl_.request_.request_range_);
        break;
      case kRequestPut:
        _impl_.request_.request_put_ = ::google::protobuf::Message::CopyConstruct(arena, *from._impl_.request_.request_put_);
        break;
      case kRequestDeleteRange:
        _impl_.request_.request_delete_range_ = ::google::protobuf::Message::CopyConstruct(arena, *from._impl_.request_.request_delete_range_);
        break;
      case kRequestTxn:
        _impl_.request_.request_txn_ = ::google::protobuf::Message::CopyConstruct(arena, *from._impl_.request_.request_txn_);
        break;
  }

  // @@protoc_insertion_point(copy_constructor:etcdserverpb.RequestOp)
}
PROTOBUF_NDEBUG_INLINE RequestOp::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
      : request_{},
        _cached_size_{0},
        _oneof_case_{} {}

inline void RequestOp::SharedCtor(::_pb::Arena* PROTOBUF_NULLABLE arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
}
RequestOp::~RequestOp() {
  // @@protoc_insertion_point(destructor:etcdserverpb.RequestOp)
  SharedDtor(*this);
}
inline void RequestOp::SharedDtor(MessageLite& self) {
  RequestOp& this_ = static_cast<RequestOp&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  if (this_.has_request()) {
    this_.clear_request();
  }
  this_._impl_.~Impl_();
}

void RequestOp::clear_request() {
// @@protoc_insertion_point(one_of_clear_start:etcdserverpb.RequestOp)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  switch (request_case()) {
    case kRequestRange: {
      if (GetArena() == nullptr) {
        delete _impl_.request_.request_range_;
      } else if (::google::protobuf::internal::DebugHardenClearOneofMessageOnArena()) {
        ::google::protobuf::internal::MaybePoisonAfterClear(_impl_.request_.request_range_);
      }
      break;
    }
    case kRequestPut: {
      if (GetArena() == nullptr) {
        delete _impl_.request_.request_put_;
      } else if (::google::protobuf::internal::DebugHardenClearOneofMessageOnArena()) {
        ::google::protobuf::internal::MaybePoisonAfterClear(_impl_.request_.request_put_);
      }
      break;
    }
    case kRequestDeleteRange: {
      if (GetArena() == nullptr) {
        delete _impl_.request_.request_delete_range_;
      } else if (::google::protobuf::internal::DebugHardenClearOneofMessageOnArena()) {
        ::google::protobuf::internal::MaybePoisonAfterClear(_impl_.request_.request_delete_range_);
      }
      break;
    }
    case kRequestTxn: {
      if (GetArena() == nullptr) {
        delete _impl_.request_.request_txn_;
      } else if (::google::protobuf::internal::DebugHardenClearOneofMessageOnArena()) {
        ::google::protobuf::internal::MaybePoisonAfterClear(_impl_.request_.request_txn_);
      }
      break;
    }
    case REQUEST_NOT_SET: {
      break;
    }
  }
  _impl_._oneof_case_[0] = REQUEST_NOT_SET;
}


inline void* PROTOBUF_NONNULL RequestOp::PlacementNew_(
    const void* PROTOBUF_NONNULL, void* PROTOBUF_NONNULL mem,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena) {
  return ::new (mem) RequestOp(arena);
}
constexpr auto RequestOp::InternalNewImpl_() {
  return ::google::protobuf::internal::MessageCreator::ZeroInit(sizeof(RequestOp),
                                            alignof(RequestOp));
}
constexpr auto RequestOp::InternalGenerateClassData_() {
  return ::google::protobuf::internal::ClassDataFull{
      ::google::protobuf::internal::ClassData{
          &_RequestOp_default_instance_._instance,
          &_table_.header,
          nullptr,  // OnDemandRegisterArenaDtor
          nullptr,  // IsInitialized
          &RequestOp::MergeImpl,
          ::google::protobuf::Message::GetNewImpl<RequestOp>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
          &RequestOp::SharedDtor,
          ::google::protobuf::Message::GetClearImpl<RequestOp>(), &RequestOp::ByteSizeLong,
              &RequestOp::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
          PROTOBUF_FIELD_OFFSET(RequestOp, _impl_._cached_size_),
          false,
      },
      &RequestOp::kDescriptorMethods,
      &descriptor_table_proto_2fetcd_2fetcd_2eproto,
      nullptr,  // tracker
  };
}

PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 const
    ::google::protobuf::internal::ClassDataFull RequestOp_class_data_ =
        RequestOp::InternalGenerateClassData_();

PROTOBUF_ATTRIBUTE_WEAK const ::google::protobuf::internal::ClassData* PROTOBUF_NONNULL
RequestOp::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&RequestOp_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(RequestOp_class_data_.tc_table);
  return RequestOp_class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<0, 4, 4, 0, 2>
RequestOp::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    4, 0,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967280,  // skipmap
    offsetof(decltype(_table_), field_entries),
    4,  // num_field_entries
    4,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    RequestOp_class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::etcdserverpb::RequestOp>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
  }}, {{
    65535, 65535
  }}, {{
    // .etcdserverpb.RangeRequest request_range = 1;
    {PROTOBUF_FIELD_OFFSET(RequestOp, _impl_.request_.request_range_), _Internal::kOneofCaseOffset + 0, 0,
    (0 | ::_fl::kFcOneof | ::_fl::kMessage | ::_fl::kTvTable)},
    // .etcdserverpb.PutRequest request_put = 2;
    {PROTOBUF_FIELD_OFFSET(RequestOp, _impl_.request_.request_put_), _Internal::kOneofCaseOffset + 0, 1,
    (0 | ::_fl::kFcOneof | ::_fl::kMessage | ::_fl::kTvTable)},
    // .etcdserverpb.DeleteRangeRequest request_delete_range = 3;
    {PROTOBUF_FIELD_OFFSET(RequestOp, _impl_.request_.request_delete_range_), _Internal::kOneofCaseOffset + 0, 2,
    (0 | ::_fl::kFcOneof | ::_fl::kMessage | ::_fl::kTvTable)},
    // .etcdserverpb.TxnRequest request_txn = 4 [(.versionpb.etcd_version_field) = "3.3"];
    {PROTOBUF_FIELD_OFFSET(RequestOp, _impl_.request_.request_txn_), _Internal::kOneofCaseOffset + 0, 3,
    (0 | ::_fl::kFcOneof | ::_fl::kMessage | ::_fl::kTvTable)},
  }},
  {{
      {::_pbi::TcParser::GetTable<::etcdserverpb::RangeRequest>()},
      {::_pbi::TcParser::GetTable<::etcdserverpb::PutRequest>()},
      {::_pbi::TcParser::GetTable<::etcdserverpb::DeleteRangeRequest>()},
      {::_pbi::TcParser::GetTable<::etcdserverpb::TxnRequest>()},
  }},
  {{
  }},
};
PROTOBUF_NOINLINE void RequestOp::Clear() {
// @@protoc_insertion_point(message_clear_start:etcdserverpb.RequestOp)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  clear_request();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::uint8_t* PROTOBUF_NONNULL RequestOp::_InternalSerialize(
    const ::google::protobuf::MessageLite& base, ::uint8_t* PROTOBUF_NONNULL target,
    ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) {
  const RequestOp& this_ = static_cast<const RequestOp&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::uint8_t* PROTOBUF_NONNULL RequestOp::_InternalSerialize(
    ::uint8_t* PROTOBUF_NONNULL target,
    ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const {
  const RequestOp& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
  // @@protoc_insertion_point(serialize_to_array_start:etcdserverpb.RequestOp)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  switch (this_.request_case()) {
    case kRequestRange: {
      target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
          1, *this_._impl_.request_.request_range_, this_._impl_.request_.request_range_->GetCachedSize(), target,
          stream);
      break;
    }
    case kRequestPut: {
      target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
          2, *this_._impl_.request_.request_put_, this_._impl_.request_.request_put_->GetCachedSize(), target,
          stream);
      break;
    }
    case kRequestDeleteRange: {
      target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
          3, *this_._impl_.request_.request_delete_range_, this_._impl_.request_.request_delete_range_->GetCachedSize(), target,
          stream);
      break;
    }
    case kRequestTxn: {
      target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
          4, *this_._impl_.request_.request_txn_, this_._impl_.request_.request_txn_->GetCachedSize(), target,
          stream);
      break;
    }
    default:
      break;
  }
  if (ABSL_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:etcdserverpb.RequestOp)
  return target;
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::size_t RequestOp::ByteSizeLong(const MessageLite& base) {
  const RequestOp& this_ = static_cast<const RequestOp&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::size_t RequestOp::ByteSizeLong() const {
  const RequestOp& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
  // @@protoc_insertion_point(message_byte_size_start:etcdserverpb.RequestOp)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void)cached_has_bits;

  switch (this_.request_case()) {
    // .etcdserverpb.RangeRequest request_range = 1;
    case kRequestRange: {
      total_size += 1 +
                    ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.request_.request_range_);
      break;
    }
    // .etcdserverpb.PutRequest request_put = 2;
    case kRequestPut: {
      total_size += 1 +
                    ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.request_.request_put_);
      break;
    }
    // .etcdserverpb.DeleteRangeRequest request_delete_range = 3;
    case kRequestDeleteRange: {
      total_size += 1 +
                    ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.request_.request_delete_range_);
      break;
    }
    // .etcdserverpb.TxnRequest request_txn = 4 [(.versionpb.etcd_version_field) = "3.3"];
    case kRequestTxn: {
      total_size += 1 +
                    ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.request_.request_txn_);
      break;
    }
    case REQUEST_NOT_SET: {
      break;
    }
  }
  return this_.MaybeComputeUnknownFieldsSize(total_size,
                                             &this_._impl_._cached_size_);
}

void RequestOp::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<RequestOp*>(&to_msg);
  auto& from = static_cast<const RequestOp&>(from_msg);
  ::google::protobuf::Arena* arena = _this->GetArena();
  // @@protoc_insertion_point(class_specific_merge_from_start:etcdserverpb.RequestOp)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (const uint32_t oneof_from_case = from._impl_._oneof_case_[0]) {
    const uint32_t oneof_to_case = _this->_impl_._oneof_case_[0];
    const bool oneof_needs_init = oneof_to_case != oneof_from_case;
    if (oneof_needs_init) {
      if (oneof_to_case != 0) {
        _this->clear_request();
      }
      _this->_impl_._oneof_case_[0] = oneof_from_case;
    }

    switch (oneof_from_case) {
      case kRequestRange: {
        if (oneof_needs_init) {
          _this->_impl_.request_.request_range_ = ::google::protobuf::Message::CopyConstruct(arena, *from._impl_.request_.request_range_);
        } else {
          _this->_impl_.request_.request_range_->MergeFrom(*from._impl_.request_.request_range_);
        }
        break;
      }
      case kRequestPut: {
        if (oneof_needs_init) {
          _this->_impl_.request_.request_put_ = ::google::protobuf::Message::CopyConstruct(arena, *from._impl_.request_.request_put_);
        } else {
          _this->_impl_.request_.request_put_->MergeFrom(*from._impl_.request_.request_put_);
        }
        break;
      }
      case kRequestDeleteRange: {
        if (oneof_needs_init) {
          _this->_impl_.request_.request_delete_range_ = ::google::protobuf::Message::CopyConstruct(arena, *from._impl_.request_.request_delete_range_);
        } else {
          _this->_impl_.request_.request_delete_range_->MergeFrom(*from._impl_.request_.request_delete_range_);
        }
        break;
      }
      case kRequestTxn: {
        if (oneof_needs_init) {
          _this->_impl_.request_.request_txn_ = ::google::protobuf::Message::CopyConstruct(arena, *from._impl_.request_.request_txn_);
        } else {
          _this->_impl_.request_.request_txn_->MergeFrom(*from._impl_.request_.request_txn_);
        }
        break;
      }
      case REQUEST_NOT_SET:
        break;
    }
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void RequestOp::CopyFrom(const RequestOp& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:etcdserverpb.RequestOp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void RequestOp::InternalSwap(RequestOp* PROTOBUF_RESTRICT PROTOBUF_NONNULL other) {
  using ::std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_.request_, other->_impl_.request_);
  swap(_impl_._oneof_case_[0], other->_impl_._oneof_case_[0]);
}

::google::protobuf::Metadata RequestOp::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class ResponseOp::_Internal {
 public:
  static constexpr ::int32_t kOneofCaseOffset =
      PROTOBUF_FIELD_OFFSET(::etcdserverpb::ResponseOp, _impl_._oneof_case_);
};

void ResponseOp::set_allocated_response_range(::etcdserverpb::RangeResponse* PROTOBUF_NULLABLE response_range) {
  ::google::protobuf::Arena* message_arena = GetArena();
  clear_response();
  if (response_range) {
    ::google::protobuf::Arena* submessage_arena = response_range->GetArena();
    if (message_arena != submessage_arena) {
      response_range = ::google::protobuf::internal::GetOwnedMessage(message_arena, response_range, submessage_arena);
    }
    set_has_response_range();
    _impl_.response_.response_range_ = response_range;
  }
  // @@protoc_insertion_point(field_set_allocated:etcdserverpb.ResponseOp.response_range)
}
void ResponseOp::set_allocated_response_put(::etcdserverpb::PutResponse* PROTOBUF_NULLABLE response_put) {
  ::google::protobuf::Arena* message_arena = GetArena();
  clear_response();
  if (response_put) {
    ::google::protobuf::Arena* submessage_arena = response_put->GetArena();
    if (message_arena != submessage_arena) {
      response_put = ::google::protobuf::internal::GetOwnedMessage(message_arena, response_put, submessage_arena);
    }
    set_has_response_put();
    _impl_.response_.response_put_ = response_put;
  }
  // @@protoc_insertion_point(field_set_allocated:etcdserverpb.ResponseOp.response_put)
}
void ResponseOp::set_allocated_response_delete_range(::etcdserverpb::DeleteRangeResponse* PROTOBUF_NULLABLE response_delete_range) {
  ::google::protobuf::Arena* message_arena = GetArena();
  clear_response();
  if (response_delete_range) {
    ::google::protobuf::Arena* submessage_arena = response_delete_range->GetArena();
    if (message_arena != submessage_arena) {
      response_delete_range = ::google::protobuf::internal::GetOwnedMessage(message_arena, response_delete_range, submessage_arena);
    }
    set_has_response_delete_range();
    _impl_.response_.response_delete_range_ = response_delete_range;
  }
  // @@protoc_insertion_point(field_set_allocated:etcdserverpb.ResponseOp.response_delete_range)
}
void ResponseOp::set_allocated_response_txn(::etcdserverpb::TxnResponse* PROTOBUF_NULLABLE response_txn) {
  ::google::protobuf::Arena* message_arena = GetArena();
  clear_response();
  if (response_txn) {
    ::google::protobuf::Arena* submessage_arena = response_txn->GetArena();
    if (message_arena != submessage_arena) {
      response_txn = ::google::protobuf::internal::GetOwnedMessage(message_arena, response_txn, submessage_arena);
    }
    set_has_response_txn();
    _impl_.response_.response_txn_ = response_txn;
  }
  // @@protoc_insertion_point(field_set_allocated:etcdserverpb.ResponseOp.response_txn)
}
ResponseOp::ResponseOp(::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, ResponseOp_class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:etcdserverpb.ResponseOp)
}
PROTOBUF_NDEBUG_INLINE ResponseOp::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const Impl_& from,
    const ::etcdserverpb::ResponseOp& from_msg)
      : response_{},
        _cached_size_{0},
        _oneof_case_{from._oneof_case_[0]} {}

ResponseOp::ResponseOp(
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena,
    const ResponseOp& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, ResponseOp_class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  ResponseOp* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);
  switch (response_case()) {
    case RESPONSE_NOT_SET:
      break;
      case kResponseRange:
        _impl_.response_.response_range_ = ::google::protobuf::Message::CopyConstruct(arena, *from._impl_.response_.response_range_);
        break;
      case kResponsePut:
        _impl_.response_.response_put_ = ::google::protobuf::Message::CopyConstruct(arena, *from._impl_.response_.response_put_);
        break;
      case kResponseDeleteRange:
        _impl_.response_.response_delete_range_ = ::google::protobuf::Message::CopyConstruct(arena, *from._impl_.response_.response_delete_range_);
        break;
      case kResponseTxn:
        _impl_.response_.response_txn_ = ::google::protobuf::Message::CopyConstruct(arena, *from._impl_.response_.response_txn_);
        break;
  }

  // @@protoc_insertion_point(copy_constructor:etcdserverpb.ResponseOp)
}
PROTOBUF_NDEBUG_INLINE ResponseOp::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
      : response_{},
        _cached_size_{0},
        _oneof_case_{} {}

inline void ResponseOp::SharedCtor(::_pb::Arena* PROTOBUF_NULLABLE arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
}
ResponseOp::~ResponseOp() {
  // @@protoc_insertion_point(destructor:etcdserverpb.ResponseOp)
  SharedDtor(*this);
}
inline void ResponseOp::SharedDtor(MessageLite& self) {
  ResponseOp& this_ = static_cast<ResponseOp&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  if (this_.has_response()) {
    this_.clear_response();
  }
  this_._impl_.~Impl_();
}

void ResponseOp::clear_response() {
// @@protoc_insertion_point(one_of_clear_start:etcdserverpb.ResponseOp)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  switch (response_case()) {
    case kResponseRange: {
      if (GetArena() == nullptr) {
        delete _impl_.response_.response_range_;
      } else if (::google::protobuf::internal::DebugHardenClearOneofMessageOnArena()) {
        ::google::protobuf::internal::MaybePoisonAfterClear(_impl_.response_.response_range_);
      }
      break;
    }
    case kResponsePut: {
      if (GetArena() == nullptr) {
        delete _impl_.response_.response_put_;
      } else if (::google::protobuf::internal::DebugHardenClearOneofMessageOnArena()) {
        ::google::protobuf::internal::MaybePoisonAfterClear(_impl_.response_.response_put_);
      }
      break;
    }
    case kResponseDeleteRange: {
      if (GetArena() == nullptr) {
        delete _impl_.response_.response_delete_range_;
      } else if (::google::protobuf::internal::DebugHardenClearOneofMessageOnArena()) {
        ::google::protobuf::internal::MaybePoisonAfterClear(_impl_.response_.response_delete_range_);
      }
      break;
    }
    case kResponseTxn: {
      if (GetArena() == nullptr) {
        delete _impl_.response_.response_txn_;
      } else if (::google::protobuf::internal::DebugHardenClearOneofMessageOnArena()) {
        ::google::protobuf::internal::MaybePoisonAfterClear(_impl_.response_.response_txn_);
      }
      break;
    }
    case RESPONSE_NOT_SET: {
      break;
    }
  }
  _impl_._oneof_case_[0] = RESPONSE_NOT_SET;
}


inline void* PROTOBUF_NONNULL ResponseOp::PlacementNew_(
    const void* PROTOBUF_NONNULL, void* PROTOBUF_NONNULL mem,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena) {
  return ::new (mem) ResponseOp(arena);
}
constexpr auto ResponseOp::InternalNewImpl_() {
  return ::google::protobuf::internal::MessageCreator::ZeroInit(sizeof(ResponseOp),
                                            alignof(ResponseOp));
}
constexpr auto ResponseOp::InternalGenerateClassData_() {
  return ::google::protobuf::internal::ClassDataFull{
      ::google::protobuf::internal::ClassData{
          &_ResponseOp_default_instance_._instance,
          &_table_.header,
          nullptr,  // OnDemandRegisterArenaDtor
          nullptr,  // IsInitialized
          &ResponseOp::MergeImpl,
          ::google::protobuf::Message::GetNewImpl<ResponseOp>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
          &ResponseOp::SharedDtor,
          ::google::protobuf::Message::GetClearImpl<ResponseOp>(), &ResponseOp::ByteSizeLong,
              &ResponseOp::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
          PROTOBUF_FIELD_OFFSET(ResponseOp, _impl_._cached_size_),
          false,
      },
      &ResponseOp::kDescriptorMethods,
      &descriptor_table_proto_2fetcd_2fetcd_2eproto,
      nullptr,  // tracker
  };
}

PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 const
    ::google::protobuf::internal::ClassDataFull ResponseOp_class_data_ =
        ResponseOp::InternalGenerateClassData_();

PROTOBUF_ATTRIBUTE_WEAK const ::google::protobuf::internal::ClassData* PROTOBUF_NONNULL
ResponseOp::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&ResponseOp_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(ResponseOp_class_data_.tc_table);
  return ResponseOp_class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<0, 4, 4, 0, 2>
ResponseOp::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    4, 0,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967280,  // skipmap
    offsetof(decltype(_table_), field_entries),
    4,  // num_field_entries
    4,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    ResponseOp_class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::etcdserverpb::ResponseOp>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
  }}, {{
    65535, 65535
  }}, {{
    // .etcdserverpb.RangeResponse response_range = 1;
    {PROTOBUF_FIELD_OFFSET(ResponseOp, _impl_.response_.response_range_), _Internal::kOneofCaseOffset + 0, 0,
    (0 | ::_fl::kFcOneof | ::_fl::kMessage | ::_fl::kTvTable)},
    // .etcdserverpb.PutResponse response_put = 2;
    {PROTOBUF_FIELD_OFFSET(ResponseOp, _impl_.response_.response_put_), _Internal::kOneofCaseOffset + 0, 1,
    (0 | ::_fl::kFcOneof | ::_fl::kMessage | ::_fl::kTvTable)},
    // .etcdserverpb.DeleteRangeResponse response_delete_range = 3;
    {PROTOBUF_FIELD_OFFSET(ResponseOp, _impl_.response_.response_delete_range_), _Internal::kOneofCaseOffset + 0, 2,
    (0 | ::_fl::kFcOneof | ::_fl::kMessage | ::_fl::kTvTable)},
    // .etcdserverpb.TxnResponse response_txn = 4 [(.versionpb.etcd_version_field) = "3.3"];
    {PROTOBUF_FIELD_OFFSET(ResponseOp, _impl_.response_.response_txn_), _Internal::kOneofCaseOffset + 0, 3,
    (0 | ::_fl::kFcOneof | ::_fl::kMessage | ::_fl::kTvTable)},
  }},
  {{
      {::_pbi::TcParser::GetTable<::etcdserverpb::RangeResponse>()},
      {::_pbi::TcParser::GetTable<::etcdserverpb::PutResponse>()},
      {::_pbi::TcParser::GetTable<::etcdserverpb::DeleteRangeResponse>()},
      {::_pbi::TcParser::GetTable<::etcdserverpb::TxnResponse>()},
  }},
  {{
  }},
};
PROTOBUF_NOINLINE void ResponseOp::Clear() {
// @@protoc_insertion_point(message_clear_start:etcdserverpb.ResponseOp)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  clear_response();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::uint8_t* PROTOBUF_NONNULL ResponseOp::_InternalSerialize(
    const ::google::protobuf::MessageLite& base, ::uint8_t* PROTOBUF_NONNULL target,
    ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) {
  const ResponseOp& this_ = static_cast<const ResponseOp&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::uint8_t* PROTOBUF_NONNULL ResponseOp::_InternalSerialize(
    ::uint8_t* PROTOBUF_NONNULL target,
    ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const {
  const ResponseOp& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
  // @@protoc_insertion_point(serialize_to_array_start:etcdserverpb.ResponseOp)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  switch (this_.response_case()) {
    case kResponseRange: {
      target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
          1, *this_._impl_.response_.response_range_, this_._impl_.response_.response_range_->GetCachedSize(), target,
          stream);
      break;
    }
    case kResponsePut: {
      target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
          2, *this_._impl_.response_.response_put_, this_._impl_.response_.response_put_->GetCachedSize(), target,
          stream);
      break;
    }
    case kResponseDeleteRange: {
      target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
          3, *this_._impl_.response_.response_delete_range_, this_._impl_.response_.response_delete_range_->GetCachedSize(), target,
          stream);
      break;
    }
    case kResponseTxn: {
      target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
          4, *this_._impl_.response_.response_txn_, this_._impl_.response_.response_txn_->GetCachedSize(), target,
          stream);
      break;
    }
    default:
      break;
  }
  if (ABSL_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:etcdserverpb.ResponseOp)
  return target;
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::size_t ResponseOp::ByteSizeLong(const MessageLite& base) {
  const ResponseOp& this_ = static_cast<const ResponseOp&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::size_t ResponseOp::ByteSizeLong() const {
  const ResponseOp& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
  // @@protoc_insertion_point(message_byte_size_start:etcdserverpb.ResponseOp)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void)cached_has_bits;

  switch (this_.response_case()) {
    // .etcdserverpb.RangeResponse response_range = 1;
    case kResponseRange: {
      total_size += 1 +
                    ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.response_.response_range_);
      break;
    }
    // .etcdserverpb.PutResponse response_put = 2;
    case kResponsePut: {
      total_size += 1 +
                    ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.response_.response_put_);
      break;
    }
    // .etcdserverpb.DeleteRangeResponse response_delete_range = 3;
    case kResponseDeleteRange: {
      total_size += 1 +
                    ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.response_.response_delete_range_);
      break;
    }
    // .etcdserverpb.TxnResponse response_txn = 4 [(.versionpb.etcd_version_field) = "3.3"];
    case kResponseTxn: {
      total_size += 1 +
                    ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.response_.response_txn_);
      break;
    }
    case RESPONSE_NOT_SET: {
      break;
    }
  }
  return this_.MaybeComputeUnknownFieldsSize(total_size,
                                             &this_._impl_._cached_size_);
}

void ResponseOp::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<ResponseOp*>(&to_msg);
  auto& from = static_cast<const ResponseOp&>(from_msg);
  ::google::protobuf::Arena* arena = _this->GetArena();
  // @@protoc_insertion_point(class_specific_merge_from_start:etcdserverpb.ResponseOp)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (const uint32_t oneof_from_case = from._impl_._oneof_case_[0]) {
    const uint32_t oneof_to_case = _this->_impl_._oneof_case_[0];
    const bool oneof_needs_init = oneof_to_case != oneof_from_case;
    if (oneof_needs_init) {
      if (oneof_to_case != 0) {
        _this->clear_response();
      }
      _this->_impl_._oneof_case_[0] = oneof_from_case;
    }

    switch (oneof_from_case) {
      case kResponseRange: {
        if (oneof_needs_init) {
          _this->_impl_.response_.response_range_ = ::google::protobuf::Message::CopyConstruct(arena, *from._impl_.response_.response_range_);
        } else {
          _this->_impl_.response_.response_range_->MergeFrom(*from._impl_.response_.response_range_);
        }
        break;
      }
      case kResponsePut: {
        if (oneof_needs_init) {
          _this->_impl_.response_.response_put_ = ::google::protobuf::Message::CopyConstruct(arena, *from._impl_.response_.response_put_);
        } else {
          _this->_impl_.response_.response_put_->MergeFrom(*from._impl_.response_.response_put_);
        }
        break;
      }
      case kResponseDeleteRange: {
        if (oneof_needs_init) {
          _this->_impl_.response_.response_delete_range_ = ::google::protobuf::Message::CopyConstruct(arena, *from._impl_.response_.response_delete_range_);
        } else {
          _this->_impl_.response_.response_delete_range_->MergeFrom(*from._impl_.response_.response_delete_range_);
        }
        break;
      }
      case kResponseTxn: {
        if (oneof_needs_init) {
          _this->_impl_.response_.response_txn_ = ::google::protobuf::Message::CopyConstruct(arena, *from._impl_.response_.response_txn_);
        } else {
          _this->_impl_.response_.response_txn_->MergeFrom(*from._impl_.response_.response_txn_);
        }
        break;
      }
      case RESPONSE_NOT_SET:
        break;
    }
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void ResponseOp::CopyFrom(const ResponseOp& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:etcdserverpb.ResponseOp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void ResponseOp::InternalSwap(ResponseOp* PROTOBUF_RESTRICT PROTOBUF_NONNULL other) {
  using ::std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_.response_, other->_impl_.response_);
  swap(_impl_._oneof_case_[0], other->_impl_._oneof_case_[0]);
}

::google::protobuf::Metadata ResponseOp::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class Compare::_Internal {
 public:
  using HasBits =
      decltype(::std::declval<Compare>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
      8 * PROTOBUF_FIELD_OFFSET(Compare, _impl_._has_bits_);
  static constexpr ::int32_t kOneofCaseOffset =
      PROTOBUF_FIELD_OFFSET(::etcdserverpb::Compare, _impl_._oneof_case_);
};

Compare::Compare(::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, Compare_class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:etcdserverpb.Compare)
}
PROTOBUF_NDEBUG_INLINE Compare::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const Impl_& from,
    const ::etcdserverpb::Compare& from_msg)
      : _has_bits_{from._has_bits_},
        _cached_size_{0},
        key_(arena, from.key_),
        range_end_(arena, from.range_end_),
        target_union_{},
        _oneof_case_{from._oneof_case_[0]} {}

Compare::Compare(
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena,
    const Compare& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, Compare_class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  Compare* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);
  ::memcpy(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, result_),
           reinterpret_cast<const char *>(&from._impl_) +
               offsetof(Impl_, result_),
           offsetof(Impl_, target_) -
               offsetof(Impl_, result_) +
               sizeof(Impl_::target_));
  switch (target_union_case()) {
    case TARGET_UNION_NOT_SET:
      break;
      case kVersion:
        _impl_.target_union_.version_ = from._impl_.target_union_.version_;
        break;
      case kCreateRevision:
        _impl_.target_union_.create_revision_ = from._impl_.target_union_.create_revision_;
        break;
      case kModRevision:
        _impl_.target_union_.mod_revision_ = from._impl_.target_union_.mod_revision_;
        break;
      case kValue:
        new (&_impl_.target_union_.value_) decltype(_impl_.target_union_.value_){arena, from._impl_.target_union_.value_};
        break;
      case kLease:
        _impl_.target_union_.lease_ = from._impl_.target_union_.lease_;
        break;
  }

  // @@protoc_insertion_point(copy_constructor:etcdserverpb.Compare)
}
PROTOBUF_NDEBUG_INLINE Compare::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
      : _cached_size_{0},
        key_(arena),
        range_end_(arena),
        target_union_{},
        _oneof_case_{} {}

inline void Compare::SharedCtor(::_pb::Arena* PROTOBUF_NULLABLE arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, result_),
           0,
           offsetof(Impl_, target_) -
               offsetof(Impl_, result_) +
               sizeof(Impl_::target_));
}
Compare::~Compare() {
  // @@protoc_insertion_point(destructor:etcdserverpb.Compare)
  SharedDtor(*this);
}
inline void Compare::SharedDtor(MessageLite& self) {
  Compare& this_ = static_cast<Compare&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  this_._impl_.key_.Destroy();
  this_._impl_.range_end_.Destroy();
  if (this_.has_target_union()) {
    this_.clear_target_union();
  }
  this_._impl_.~Impl_();
}

void Compare::clear_target_union() {
// @@protoc_insertion_point(one_of_clear_start:etcdserverpb.Compare)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  switch (target_union_case()) {
    case kVersion: {
      // No need to clear
      break;
    }
    case kCreateRevision: {
      // No need to clear
      break;
    }
    case kModRevision: {
      // No need to clear
      break;
    }
    case kValue: {
      _impl_.target_union_.value_.Destroy();
      break;
    }
    case kLease: {
      // No need to clear
      break;
    }
    case TARGET_UNION_NOT_SET: {
      break;
    }
  }
  _impl_._oneof_case_[0] = TARGET_UNION_NOT_SET;
}


inline void* PROTOBUF_NONNULL Compare::PlacementNew_(
    const void* PROTOBUF_NONNULL, void* PROTOBUF_NONNULL mem,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena) {
  return ::new (mem) Compare(arena);
}
constexpr auto Compare::InternalNewImpl_() {
  return ::google::protobuf::internal::MessageCreator::CopyInit(sizeof(Compare),
                                            alignof(Compare));
}
constexpr auto Compare::InternalGenerateClassData_() {
  return ::google::protobuf::internal::ClassDataFull{
      ::google::protobuf::internal::ClassData{
          &_Compare_default_instance_._instance,
          &_table_.header,
          nullptr,  // OnDemandRegisterArenaDtor
          nullptr,  // IsInitialized
          &Compare::MergeImpl,
          ::google::protobuf::Message::GetNewImpl<Compare>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
          &Compare::SharedDtor,
          ::google::protobuf::Message::GetClearImpl<Compare>(), &Compare::ByteSizeLong,
              &Compare::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
          PROTOBUF_FIELD_OFFSET(Compare, _impl_._cached_size_),
          false,
      },
      &Compare::kDescriptorMethods,
      &descriptor_table_proto_2fetcd_2fetcd_2eproto,
      nullptr,  // tracker
  };
}

PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 const
    ::google::protobuf::internal::ClassDataFull Compare_class_data_ =
        Compare::InternalGenerateClassData_();

PROTOBUF_ATTRIBUTE_WEAK const ::google::protobuf::internal::ClassData* PROTOBUF_NONNULL
Compare::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&Compare_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(Compare_class_data_.tc_table);
  return Compare_class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<2, 9, 0, 0, 7>
Compare::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(Compare, _impl_._has_bits_),
    0, // no _extensions_
    64, 24,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967040,  // skipmap
    offsetof(decltype(_table_), field_entries),
    9,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    Compare_class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::etcdserverpb::Compare>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // bytes range_end = 64 [(.versionpb.etcd_version_field) = "3.3"];
    {::_pbi::TcParser::FastBS2,
     {1154, 1, 0, PROTOBUF_FIELD_OFFSET(Compare, _impl_.range_end_)}},
    // .etcdserverpb.Compare.CompareResult result = 1;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(Compare, _impl_.result_), 2>(),
     {8, 2, 0, PROTOBUF_FIELD_OFFSET(Compare, _impl_.result_)}},
    // .etcdserverpb.Compare.CompareTarget target = 2;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(Compare, _impl_.target_), 3>(),
     {16, 3, 0, PROTOBUF_FIELD_OFFSET(Compare, _impl_.target_)}},
    // bytes key = 3;
    {::_pbi::TcParser::FastBS1,
     {26, 0, 0, PROTOBUF_FIELD_OFFSET(Compare, _impl_.key_)}},
  }}, {{
    64, 0, 1,
    65534, 8,
    65535, 65535
  }}, {{
    // .etcdserverpb.Compare.CompareResult result = 1;
    {PROTOBUF_FIELD_OFFSET(Compare, _impl_.result_), _Internal::kHasBitsOffset + 2, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kOpenEnum)},
    // .etcdserverpb.Compare.CompareTarget target = 2;
    {PROTOBUF_FIELD_OFFSET(Compare, _impl_.target_), _Internal::kHasBitsOffset + 3, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kOpenEnum)},
    // bytes key = 3;
    {PROTOBUF_FIELD_OFFSET(Compare, _impl_.key_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kBytes | ::_fl::kRepAString)},
    // int64 version = 4;
    {PROTOBUF_FIELD_OFFSET(Compare, _impl_.target_union_.version_), _Internal::kOneofCaseOffset + 0, 0,
    (0 | ::_fl::kFcOneof | ::_fl::kInt64)},
    // int64 create_revision = 5;
    {PROTOBUF_FIELD_OFFSET(Compare, _impl_.target_union_.create_revision_), _Internal::kOneofCaseOffset + 0, 0,
    (0 | ::_fl::kFcOneof | ::_fl::kInt64)},
    // int64 mod_revision = 6;
    {PROTOBUF_FIELD_OFFSET(Compare, _impl_.target_union_.mod_revision_), _Internal::kOneofCaseOffset + 0, 0,
    (0 | ::_fl::kFcOneof | ::_fl::kInt64)},
    // bytes value = 7;
    {PROTOBUF_FIELD_OFFSET(Compare, _impl_.target_union_.value_), _Internal::kOneofCaseOffset + 0, 0,
    (0 | ::_fl::kFcOneof | ::_fl::kBytes | ::_fl::kRepAString)},
    // int64 lease = 8 [(.versionpb.etcd_version_field) = "3.3"];
    {PROTOBUF_FIELD_OFFSET(Compare, _impl_.target_union_.lease_), _Internal::kOneofCaseOffset + 0, 0,
    (0 | ::_fl::kFcOneof | ::_fl::kInt64)},
    // bytes range_end = 64 [(.versionpb.etcd_version_field) = "3.3"];
    {PROTOBUF_FIELD_OFFSET(Compare, _impl_.range_end_), _Internal::kHasBitsOffset + 1, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kBytes | ::_fl::kRepAString)},
  }},
  // no aux_entries
  {{
  }},
};
PROTOBUF_NOINLINE void Compare::Clear() {
// @@protoc_insertion_point(message_clear_start:etcdserverpb.Compare)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if ((cached_has_bits & 0x00000003u) != 0) {
    if ((cached_has_bits & 0x00000001u) != 0) {
      _impl_.key_.ClearNonDefaultToEmpty();
    }
    if ((cached_has_bits & 0x00000002u) != 0) {
      _impl_.range_end_.ClearNonDefaultToEmpty();
    }
  }
  if ((cached_has_bits & 0x0000000cu) != 0) {
    ::memset(&_impl_.result_, 0, static_cast<::size_t>(
        reinterpret_cast<char*>(&_impl_.target_) -
        reinterpret_cast<char*>(&_impl_.result_)) + sizeof(_impl_.target_));
  }
  clear_target_union();
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::uint8_t* PROTOBUF_NONNULL Compare::_InternalSerialize(
    const ::google::protobuf::MessageLite& base, ::uint8_t* PROTOBUF_NONNULL target,
    ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) {
  const Compare& this_ = static_cast<const Compare&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::uint8_t* PROTOBUF_NONNULL Compare::_InternalSerialize(
    ::uint8_t* PROTOBUF_NONNULL target,
    ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const {
  const Compare& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
  // @@protoc_insertion_point(serialize_to_array_start:etcdserverpb.Compare)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  // .etcdserverpb.Compare.CompareResult result = 1;
  if ((this_._impl_._has_bits_[0] & 0x00000004u) != 0) {
    if (this_._internal_result() != 0) {
      target = stream->EnsureSpace(target);
      target = ::_pbi::WireFormatLite::WriteEnumToArray(
          1, this_._internal_result(), target);
    }
  }

  // .etcdserverpb.Compare.CompareTarget target = 2;
  if ((this_._impl_._has_bits_[0] & 0x00000008u) != 0) {
    if (this_._internal_target() != 0) {
      target = stream->EnsureSpace(target);
      target = ::_pbi::WireFormatLite::WriteEnumToArray(
          2, this_._internal_target(), target);
    }
  }

  // bytes key = 3;
  if ((this_._impl_._has_bits_[0] & 0x00000001u) != 0) {
    if (!this_._internal_key().empty()) {
      const ::std::string& _s = this_._internal_key();
      target = stream->WriteBytesMaybeAliased(3, _s, target);
    }
  }

  switch (this_.target_union_case()) {
    case kVersion: {
      target =
          ::google::protobuf::internal::WireFormatLite::WriteInt64ToArrayWithField<4>(
              stream, this_._internal_version(), target);
      break;
    }
    case kCreateRevision: {
      target =
          ::google::protobuf::internal::WireFormatLite::WriteInt64ToArrayWithField<5>(
              stream, this_._internal_create_revision(), target);
      break;
    }
    case kModRevision: {
      target =
          ::google::protobuf::internal::WireFormatLite::WriteInt64ToArrayWithField<6>(
              stream, this_._internal_mod_revision(), target);
      break;
    }
    case kValue: {
      const ::std::string& _s = this_._internal_value();
      target = stream->WriteBytesMaybeAliased(7, _s, target);
      break;
    }
    case kLease: {
      target =
          ::google::protobuf::internal::WireFormatLite::WriteInt64ToArrayWithField<8>(
              stream, this_._internal_lease(), target);
      break;
    }
    default:
      break;
  }
  // bytes range_end = 64 [(.versionpb.etcd_version_field) = "3.3"];
  if ((this_._impl_._has_bits_[0] & 0x00000002u) != 0) {
    if (!this_._internal_range_end().empty()) {
      const ::std::string& _s = this_._internal_range_end();
      target = stream->WriteBytesMaybeAliased(64, _s, target);
    }
  }

  if (ABSL_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:etcdserverpb.Compare)
  return target;
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::size_t Compare::ByteSizeLong(const MessageLite& base) {
  const Compare& this_ = static_cast<const Compare&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::size_t Compare::ByteSizeLong() const {
  const Compare& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
  // @@protoc_insertion_point(message_byte_size_start:etcdserverpb.Compare)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void)cached_has_bits;

  ::_pbi::Prefetch5LinesFrom7Lines(&this_);
  cached_has_bits = this_._impl_._has_bits_[0];
  if ((cached_has_bits & 0x0000000fu) != 0) {
    // bytes key = 3;
    if ((cached_has_bits & 0x00000001u) != 0) {
      if (!this_._internal_key().empty()) {
        total_size += 1 + ::google::protobuf::internal::WireFormatLite::BytesSize(
                                        this_._internal_key());
      }
    }
    // bytes range_end = 64 [(.versionpb.etcd_version_field) = "3.3"];
    if ((cached_has_bits & 0x00000002u) != 0) {
      if (!this_._internal_range_end().empty()) {
        total_size += 2 + ::google::protobuf::internal::WireFormatLite::BytesSize(
                                        this_._internal_range_end());
      }
    }
    // .etcdserverpb.Compare.CompareResult result = 1;
    if ((cached_has_bits & 0x00000004u) != 0) {
      if (this_._internal_result() != 0) {
        total_size += 1 +
                      ::_pbi::WireFormatLite::EnumSize(this_._internal_result());
      }
    }
    // .etcdserverpb.Compare.CompareTarget target = 2;
    if ((cached_has_bits & 0x00000008u) != 0) {
      if (this_._internal_target() != 0) {
        total_size += 1 +
                      ::_pbi::WireFormatLite::EnumSize(this_._internal_target());
      }
    }
  }
  switch (this_.target_union_case()) {
    // int64 version = 4;
    case kVersion: {
      total_size += ::_pbi::WireFormatLite::Int64SizePlusOne(
          this_._internal_version());
      break;
    }
    // int64 create_revision = 5;
    case kCreateRevision: {
      total_size += ::_pbi::WireFormatLite::Int64SizePlusOne(
          this_._internal_create_revision());
      break;
    }
    // int64 mod_revision = 6;
    case kModRevision: {
      total_size += ::_pbi::WireFormatLite::Int64SizePlusOne(
          this_._internal_mod_revision());
      break;
    }
    // bytes value = 7;
    case kValue: {
      total_size += 1 + ::google::protobuf::internal::WireFormatLite::BytesSize(
                                      this_._internal_value());
      break;
    }
    // int64 lease = 8 [(.versionpb.etcd_version_field) = "3.3"];
    case kLease: {
      total_size += ::_pbi::WireFormatLite::Int64SizePlusOne(
          this_._internal_lease());
      break;
    }
    case TARGET_UNION_NOT_SET: {
      break;
    }
  }
  return this_.MaybeComputeUnknownFieldsSize(total_size,
                                             &this_._impl_._cached_size_);
}

void Compare::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<Compare*>(&to_msg);
  auto& from = static_cast<const Compare&>(from_msg);
  ::google::protobuf::Arena* arena = _this->GetArena();
  // @@protoc_insertion_point(class_specific_merge_from_start:etcdserverpb.Compare)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._impl_._has_bits_[0];
  if ((cached_has_bits & 0x0000000fu) != 0) {
    if ((cached_has_bits & 0x00000001u) != 0) {
      if (!from._internal_key().empty()) {
        _this->_internal_set_key(from._internal_key());
      } else {
        if (_this->_impl_.key_.IsDefault()) {
          _this->_internal_set_key("");
        }
      }
    }
    if ((cached_has_bits & 0x00000002u) != 0) {
      if (!from._internal_range_end().empty()) {
        _this->_internal_set_range_end(from._internal_range_end());
      } else {
        if (_this->_impl_.range_end_.IsDefault()) {
          _this->_internal_set_range_end("");
        }
      }
    }
    if ((cached_has_bits & 0x00000004u) != 0) {
      if (from._internal_result() != 0) {
        _this->_impl_.result_ = from._impl_.result_;
      }
    }
    if ((cached_has_bits & 0x00000008u) != 0) {
      if (from._internal_target() != 0) {
        _this->_impl_.target_ = from._impl_.target_;
      }
    }
  }
  _this->_impl_._has_bits_[0] |= cached_has_bits;
  if (const uint32_t oneof_from_case = from._impl_._oneof_case_[0]) {
    const uint32_t oneof_to_case = _this->_impl_._oneof_case_[0];
    const bool oneof_needs_init = oneof_to_case != oneof_from_case;
    if (oneof_needs_init) {
      if (oneof_to_case != 0) {
        _this->clear_target_union();
      }
      _this->_impl_._oneof_case_[0] = oneof_from_case;
    }

    switch (oneof_from_case) {
      case kVersion: {
        _this->_impl_.target_union_.version_ = from._impl_.target_union_.version_;
        break;
      }
      case kCreateRevision: {
        _this->_impl_.target_union_.create_revision_ = from._impl_.target_union_.create_revision_;
        break;
      }
      case kModRevision: {
        _this->_impl_.target_union_.mod_revision_ = from._impl_.target_union_.mod_revision_;
        break;
      }
      case kValue: {
        if (oneof_needs_init) {
          _this->_impl_.target_union_.value_.InitDefault();
        }
        _this->_impl_.target_union_.value_.Set(from._internal_value(), arena);
        break;
      }
      case kLease: {
        _this->_impl_.target_union_.lease_ = from._impl_.target_union_.lease_;
        break;
      }
      case TARGET_UNION_NOT_SET:
        break;
    }
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void Compare::CopyFrom(const Compare& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:etcdserverpb.Compare)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void Compare::InternalSwap(Compare* PROTOBUF_RESTRICT PROTOBUF_NONNULL other) {
  using ::std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.key_, &other->_impl_.key_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.range_end_, &other->_impl_.range_end_, arena);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(Compare, _impl_.target_)
      + sizeof(Compare::_impl_.target_)
      - PROTOBUF_FIELD_OFFSET(Compare, _impl_.result_)>(
          reinterpret_cast<char*>(&_impl_.result_),
          reinterpret_cast<char*>(&other->_impl_.result_));
  swap(_impl_.target_union_, other->_impl_.target_union_);
  swap(_impl_._oneof_case_[0], other->_impl_._oneof_case_[0]);
}

::google::protobuf::Metadata Compare::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class TxnRequest::_Internal {
 public:
};

TxnRequest::TxnRequest(::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, TxnRequest_class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:etcdserverpb.TxnRequest)
}
PROTOBUF_NDEBUG_INLINE TxnRequest::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const Impl_& from,
    const ::etcdserverpb::TxnRequest& from_msg)
      : compare_{visibility, arena, from.compare_},
        success_{visibility, arena, from.success_},
        failure_{visibility, arena, from.failure_},
        _cached_size_{0} {}

TxnRequest::TxnRequest(
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena,
    const TxnRequest& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, TxnRequest_class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  TxnRequest* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);

  // @@protoc_insertion_point(copy_constructor:etcdserverpb.TxnRequest)
}
PROTOBUF_NDEBUG_INLINE TxnRequest::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
      : compare_{visibility, arena},
        success_{visibility, arena},
        failure_{visibility, arena},
        _cached_size_{0} {}

inline void TxnRequest::SharedCtor(::_pb::Arena* PROTOBUF_NULLABLE arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
}
TxnRequest::~TxnRequest() {
  // @@protoc_insertion_point(destructor:etcdserverpb.TxnRequest)
  SharedDtor(*this);
}
inline void TxnRequest::SharedDtor(MessageLite& self) {
  TxnRequest& this_ = static_cast<TxnRequest&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  this_._impl_.~Impl_();
}

inline void* PROTOBUF_NONNULL TxnRequest::PlacementNew_(
    const void* PROTOBUF_NONNULL, void* PROTOBUF_NONNULL mem,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena) {
  return ::new (mem) TxnRequest(arena);
}
constexpr auto TxnRequest::InternalNewImpl_() {
  constexpr auto arena_bits = ::google::protobuf::internal::EncodePlacementArenaOffsets({
      PROTOBUF_FIELD_OFFSET(TxnRequest, _impl_.compare_) +
          decltype(TxnRequest::_impl_.compare_)::
              InternalGetArenaOffset(
                  ::google::protobuf::Message::internal_visibility()),
      PROTOBUF_FIELD_OFFSET(TxnRequest, _impl_.success_) +
          decltype(TxnRequest::_impl_.success_)::
              InternalGetArenaOffset(
                  ::google::protobuf::Message::internal_visibility()),
      PROTOBUF_FIELD_OFFSET(TxnRequest, _impl_.failure_) +
          decltype(TxnRequest::_impl_.failure_)::
              InternalGetArenaOffset(
                  ::google::protobuf::Message::internal_visibility()),
  });
  if (arena_bits.has_value()) {
    return ::google::protobuf::internal::MessageCreator::ZeroInit(
        sizeof(TxnRequest), alignof(TxnRequest), *arena_bits);
  } else {
    return ::google::protobuf::internal::MessageCreator(&TxnRequest::PlacementNew_,
                                 sizeof(TxnRequest),
                                 alignof(TxnRequest));
  }
}
constexpr auto TxnRequest::InternalGenerateClassData_() {
  return ::google::protobuf::internal::ClassDataFull{
      ::google::protobuf::internal::ClassData{
          &_TxnRequest_default_instance_._instance,
          &_table_.header,
          nullptr,  // OnDemandRegisterArenaDtor
          nullptr,  // IsInitialized
          &TxnRequest::MergeImpl,
          ::google::protobuf::Message::GetNewImpl<TxnRequest>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
          &TxnRequest::SharedDtor,
          ::google::protobuf::Message::GetClearImpl<TxnRequest>(), &TxnRequest::ByteSizeLong,
              &TxnRequest::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
          PROTOBUF_FIELD_OFFSET(TxnRequest, _impl_._cached_size_),
          false,
      },
      &TxnRequest::kDescriptorMethods,
      &descriptor_table_proto_2fetcd_2fetcd_2eproto,
      nullptr,  // tracker
  };
}

PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 const
    ::google::protobuf::internal::ClassDataFull TxnRequest_class_data_ =
        TxnRequest::InternalGenerateClassData_();

PROTOBUF_ATTRIBUTE_WEAK const ::google::protobuf::internal::ClassData* PROTOBUF_NONNULL
TxnRequest::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&TxnRequest_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(TxnRequest_class_data_.tc_table);
  return TxnRequest_class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<2, 3, 3, 0, 2>
TxnRequest::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    3, 24,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967288,  // skipmap
    offsetof(decltype(_table_), field_entries),
    3,  // num_field_entries
    3,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    TxnRequest_class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::etcdserverpb::TxnRequest>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
    // repeated .etcdserverpb.Compare compare = 1;
    {::_pbi::TcParser::FastMtR1,
     {10, 63, 0, PROTOBUF_FIELD_OFFSET(TxnRequest, _impl_.compare_)}},
    // repeated .etcdserverpb.RequestOp success = 2;
    {::_pbi::TcParser::FastMtR1,
     {18, 63, 1, PROTOBUF_FIELD_OFFSET(TxnRequest, _impl_.success_)}},
    // repeated .etcdserverpb.RequestOp failure = 3;
    {::_pbi::TcParser::FastMtR1,
     {26, 63, 2, PROTOBUF_FIELD_OFFSET(TxnRequest, _impl_.failure_)}},
  }}, {{
    65535, 65535
  }}, {{
    // repeated .etcdserverpb.Compare compare = 1;
    {PROTOBUF_FIELD_OFFSET(TxnRequest, _impl_.compare_), 0, 0,
    (0 | ::_fl::kFcRepeated | ::_fl::kMessage | ::_fl::kTvTable)},
    // repeated .etcdserverpb.RequestOp success = 2;
    {PROTOBUF_FIELD_OFFSET(TxnRequest, _impl_.success_), 0, 1,
    (0 | ::_fl::kFcRepeated | ::_fl::kMessage | ::_fl::kTvTable)},
    // repeated .etcdserverpb.RequestOp failure = 3;
    {PROTOBUF_FIELD_OFFSET(TxnRequest, _impl_.failure_), 0, 2,
    (0 | ::_fl::kFcRepeated | ::_fl::kMessage | ::_fl::kTvTable)},
  }},
  {{
      {::_pbi::TcParser::GetTable<::etcdserverpb::Compare>()},
      {::_pbi::TcParser::GetTable<::etcdserverpb::RequestOp>()},
      {::_pbi::TcParser::GetTable<::etcdserverpb::RequestOp>()},
  }},
  {{
  }},
};
PROTOBUF_NOINLINE void TxnRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:etcdserverpb.TxnRequest)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.compare_.Clear();
  _impl_.success_.Clear();
  _impl_.failure_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::uint8_t* PROTOBUF_NONNULL TxnRequest::_InternalSerialize(
    const ::google::protobuf::MessageLite& base, ::uint8_t* PROTOBUF_NONNULL target,
    ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) {
  const TxnRequest& this_ = static_cast<const TxnRequest&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::uint8_t* PROTOBUF_NONNULL TxnRequest::_InternalSerialize(
    ::uint8_t* PROTOBUF_NONNULL target,
    ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const {
  const TxnRequest& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
  // @@protoc_insertion_point(serialize_to_array_start:etcdserverpb.TxnRequest)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  // repeated .etcdserverpb.Compare compare = 1;
  for (unsigned i = 0, n = static_cast<unsigned>(
                           this_._internal_compare_size());
       i < n; i++) {
    const auto& repfield = this_._internal_compare().Get(i);
    target =
        ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
            1, repfield, repfield.GetCachedSize(),
            target, stream);
  }

  // repeated .etcdserverpb.RequestOp success = 2;
  for (unsigned i = 0, n = static_cast<unsigned>(
                           this_._internal_success_size());
       i < n; i++) {
    const auto& repfield = this_._internal_success().Get(i);
    target =
        ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
            2, repfield, repfield.GetCachedSize(),
            target, stream);
  }

  // repeated .etcdserverpb.RequestOp failure = 3;
  for (unsigned i = 0, n = static_cast<unsigned>(
                           this_._internal_failure_size());
       i < n; i++) {
    const auto& repfield = this_._internal_failure().Get(i);
    target =
        ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
            3, repfield, repfield.GetCachedSize(),
            target, stream);
  }

  if (ABSL_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:etcdserverpb.TxnRequest)
  return target;
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::size_t TxnRequest::ByteSizeLong(const MessageLite& base) {
  const TxnRequest& this_ = static_cast<const TxnRequest&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::size_t TxnRequest::ByteSizeLong() const {
  const TxnRequest& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
  // @@protoc_insertion_point(message_byte_size_start:etcdserverpb.TxnRequest)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void)cached_has_bits;

  ::_pbi::Prefetch5LinesFrom7Lines(&this_);
   {
    // repeated .etcdserverpb.Compare compare = 1;
    {
      total_size += 1UL * this_._internal_compare_size();
      for (const auto& msg : this_._internal_compare()) {
        total_size += ::google::protobuf::internal::WireFormatLite::MessageSize(msg);
      }
    }
    // repeated .etcdserverpb.RequestOp success = 2;
    {
      total_size += 1UL * this_._internal_success_size();
      for (const auto& msg : this_._internal_success()) {
        total_size += ::google::protobuf::internal::WireFormatLite::MessageSize(msg);
      }
    }
    // repeated .etcdserverpb.RequestOp failure = 3;
    {
      total_size += 1UL * this_._internal_failure_size();
      for (const auto& msg : this_._internal_failure()) {
        total_size += ::google::protobuf::internal::WireFormatLite::MessageSize(msg);
      }
    }
  }
  return this_.MaybeComputeUnknownFieldsSize(total_size,
                                             &this_._impl_._cached_size_);
}

void TxnRequest::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<TxnRequest*>(&to_msg);
  auto& from = static_cast<const TxnRequest&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:etcdserverpb.TxnRequest)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_internal_mutable_compare()->MergeFrom(
      from._internal_compare());
  _this->_internal_mutable_success()->MergeFrom(
      from._internal_success());
  _this->_internal_mutable_failure()->MergeFrom(
      from._internal_failure());
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void TxnRequest::CopyFrom(const TxnRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:etcdserverpb.TxnRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void TxnRequest::InternalSwap(TxnRequest* PROTOBUF_RESTRICT PROTOBUF_NONNULL other) {
  using ::std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  _impl_.compare_.InternalSwap(&other->_impl_.compare_);
  _impl_.success_.InternalSwap(&other->_impl_.success_);
  _impl_.failure_.InternalSwap(&other->_impl_.failure_);
}

::google::protobuf::Metadata TxnRequest::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class TxnResponse::_Internal {
 public:
  using HasBits =
      decltype(::std::declval<TxnResponse>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
      8 * PROTOBUF_FIELD_OFFSET(TxnResponse, _impl_._has_bits_);
};

TxnResponse::TxnResponse(::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, TxnResponse_class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:etcdserverpb.TxnResponse)
}
PROTOBUF_NDEBUG_INLINE TxnResponse::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const Impl_& from,
    const ::etcdserverpb::TxnResponse& from_msg)
      : _has_bits_{from._has_bits_},
        _cached_size_{0},
        responses_{visibility, arena, from.responses_} {}

TxnResponse::TxnResponse(
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena,
    const TxnResponse& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, TxnResponse_class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  TxnResponse* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);
  ::uint32_t cached_has_bits = _impl_._has_bits_[0];
  _impl_.header_ = ((cached_has_bits & 0x00000001u) != 0)
                ? ::google::protobuf::Message::CopyConstruct(arena, *from._impl_.header_)
                : nullptr;
  _impl_.succeeded_ = from._impl_.succeeded_;

  // @@protoc_insertion_point(copy_constructor:etcdserverpb.TxnResponse)
}
PROTOBUF_NDEBUG_INLINE TxnResponse::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
      : _cached_size_{0},
        responses_{visibility, arena} {}

inline void TxnResponse::SharedCtor(::_pb::Arena* PROTOBUF_NULLABLE arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, header_),
           0,
           offsetof(Impl_, succeeded_) -
               offsetof(Impl_, header_) +
               sizeof(Impl_::succeeded_));
}
TxnResponse::~TxnResponse() {
  // @@protoc_insertion_point(destructor:etcdserverpb.TxnResponse)
  SharedDtor(*this);
}
inline void TxnResponse::SharedDtor(MessageLite& self) {
  TxnResponse& this_ = static_cast<TxnResponse&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  delete this_._impl_.header_;
  this_._impl_.~Impl_();
}

inline void* PROTOBUF_NONNULL TxnResponse::PlacementNew_(
    const void* PROTOBUF_NONNULL, void* PROTOBUF_NONNULL mem,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena) {
  return ::new (mem) TxnResponse(arena);
}
constexpr auto TxnResponse::InternalNewImpl_() {
  constexpr auto arena_bits = ::google::protobuf::internal::EncodePlacementArenaOffsets({
      PROTOBUF_FIELD_OFFSET(TxnResponse, _impl_.responses_) +
          decltype(TxnResponse::_impl_.responses_)::
              InternalGetArenaOffset(
                  ::google::protobuf::Message::internal_visibility()),
  });
  if (arena_bits.has_value()) {
    return ::google::protobuf::internal::MessageCreator::ZeroInit(
        sizeof(TxnResponse), alignof(TxnResponse), *arena_bits);
  } else {
    return ::google::protobuf::internal::MessageCreator(&TxnResponse::PlacementNew_,
                                 sizeof(TxnResponse),
                                 alignof(TxnResponse));
  }
}
constexpr auto TxnResponse::InternalGenerateClassData_() {
  return ::google::protobuf::internal::ClassDataFull{
      ::google::protobuf::internal::ClassData{
          &_TxnResponse_default_instance_._instance,
          &_table_.header,
          nullptr,  // OnDemandRegisterArenaDtor
          nullptr,  // IsInitialized
          &TxnResponse::MergeImpl,
          ::google::protobuf::Message::GetNewImpl<TxnResponse>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
          &TxnResponse::SharedDtor,
          ::google::protobuf::Message::GetClearImpl<TxnResponse>(), &TxnResponse::ByteSizeLong,
              &TxnResponse::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
          PROTOBUF_FIELD_OFFSET(TxnResponse, _impl_._cached_size_),
          false,
      },
      &TxnResponse::kDescriptorMethods,
      &descriptor_table_proto_2fetcd_2fetcd_2eproto,
      nullptr,  // tracker
  };
}

PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 const
    ::google::protobuf::internal::ClassDataFull TxnResponse_class_data_ =
        TxnResponse::InternalGenerateClassData_();

PROTOBUF_ATTRIBUTE_WEAK const ::google::protobuf::internal::ClassData* PROTOBUF_NONNULL
TxnResponse::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&TxnResponse_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(TxnResponse_class_data_.tc_table);
  return TxnResponse_class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<2, 3, 2, 0, 2>
TxnResponse::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(TxnResponse, _impl_._has_bits_),
    0, // no _extensions_
    3, 24,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967288,  // skipmap
    offsetof(decltype(_table_), field_entries),
    3,  // num_field_entries
    2,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    TxnResponse_class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::etcdserverpb::TxnResponse>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
    // .etcdserverpb.ResponseHeader header = 1;
    {::_pbi::TcParser::FastMtS1,
     {10, 0, 0, PROTOBUF_FIELD_OFFSET(TxnResponse, _impl_.header_)}},
    // bool succeeded = 2;
    {::_pbi::TcParser::SingularVarintNoZag1<bool, offsetof(TxnResponse, _impl_.succeeded_), 1>(),
     {16, 1, 0, PROTOBUF_FIELD_OFFSET(TxnResponse, _impl_.succeeded_)}},
    // repeated .etcdserverpb.ResponseOp responses = 3;
    {::_pbi::TcParser::FastMtR1,
     {26, 63, 1, PROTOBUF_FIELD_OFFSET(TxnResponse, _impl_.responses_)}},
  }}, {{
    65535, 65535
  }}, {{
    // .etcdserverpb.ResponseHeader header = 1;
    {PROTOBUF_FIELD_OFFSET(TxnResponse, _impl_.header_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
    // bool succeeded = 2;
    {PROTOBUF_FIELD_OFFSET(TxnResponse, _impl_.succeeded_), _Internal::kHasBitsOffset + 1, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kBool)},
    // repeated .etcdserverpb.ResponseOp responses = 3;
    {PROTOBUF_FIELD_OFFSET(TxnResponse, _impl_.responses_), -1, 1,
    (0 | ::_fl::kFcRepeated | ::_fl::kMessage | ::_fl::kTvTable)},
  }},
  {{
      {::_pbi::TcParser::GetTable<::etcdserverpb::ResponseHeader>()},
      {::_pbi::TcParser::GetTable<::etcdserverpb::ResponseOp>()},
  }},
  {{
  }},
};
PROTOBUF_NOINLINE void TxnResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:etcdserverpb.TxnResponse)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.responses_.Clear();
  cached_has_bits = _impl_._has_bits_[0];
  if ((cached_has_bits & 0x00000001u) != 0) {
    ABSL_DCHECK(_impl_.header_ != nullptr);
    _impl_.header_->Clear();
  }
  _impl_.succeeded_ = false;
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::uint8_t* PROTOBUF_NONNULL TxnResponse::_InternalSerialize(
    const ::google::protobuf::MessageLite& base, ::uint8_t* PROTOBUF_NONNULL target,
    ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) {
  const TxnResponse& this_ = static_cast<const TxnResponse&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::uint8_t* PROTOBUF_NONNULL TxnResponse::_InternalSerialize(
    ::uint8_t* PROTOBUF_NONNULL target,
    ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const {
  const TxnResponse& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
  // @@protoc_insertion_point(serialize_to_array_start:etcdserverpb.TxnResponse)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  cached_has_bits = this_._impl_._has_bits_[0];
  // .etcdserverpb.ResponseHeader header = 1;
  if ((cached_has_bits & 0x00000001u) != 0) {
    target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
        1, *this_._impl_.header_, this_._impl_.header_->GetCachedSize(), target,
        stream);
  }

  // bool succeeded = 2;
  if ((cached_has_bits & 0x00000002u) != 0) {
    if (this_._internal_succeeded() != 0) {
      target = stream->EnsureSpace(target);
      target = ::_pbi::WireFormatLite::WriteBoolToArray(
          2, this_._internal_succeeded(), target);
    }
  }

  // repeated .etcdserverpb.ResponseOp responses = 3;
  for (unsigned i = 0, n = static_cast<unsigned>(
                           this_._internal_responses_size());
       i < n; i++) {
    const auto& repfield = this_._internal_responses().Get(i);
    target =
        ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
            3, repfield, repfield.GetCachedSize(),
            target, stream);
  }

  if (ABSL_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:etcdserverpb.TxnResponse)
  return target;
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::size_t TxnResponse::ByteSizeLong(const MessageLite& base) {
  const TxnResponse& this_ = static_cast<const TxnResponse&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::size_t TxnResponse::ByteSizeLong() const {
  const TxnResponse& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
  // @@protoc_insertion_point(message_byte_size_start:etcdserverpb.TxnResponse)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void)cached_has_bits;

  ::_pbi::Prefetch5LinesFrom7Lines(&this_);
   {
    // repeated .etcdserverpb.ResponseOp responses = 3;
    {
      total_size += 1UL * this_._internal_responses_size();
      for (const auto& msg : this_._internal_responses()) {
        total_size += ::google::protobuf::internal::WireFormatLite::MessageSize(msg);
      }
    }
  }
  cached_has_bits = this_._impl_._has_bits_[0];
  if ((cached_has_bits & 0x00000003u) != 0) {
    // .etcdserverpb.ResponseHeader header = 1;
    if ((cached_has_bits & 0x00000001u) != 0) {
      total_size += 1 +
                    ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.header_);
    }
    // bool succeeded = 2;
    if ((cached_has_bits & 0x00000002u) != 0) {
      if (this_._internal_succeeded() != 0) {
        total_size += 2;
      }
    }
  }
  return this_.MaybeComputeUnknownFieldsSize(total_size,
                                             &this_._impl_._cached_size_);
}

void TxnResponse::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<TxnResponse*>(&to_msg);
  auto& from = static_cast<const TxnResponse&>(from_msg);
  ::google::protobuf::Arena* arena = _this->GetArena();
  // @@protoc_insertion_point(class_specific_merge_from_start:etcdserverpb.TxnResponse)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_internal_mutable_responses()->MergeFrom(
      from._internal_responses());
  cached_has_bits = from._impl_._has_bits_[0];
  if ((cached_has_bits & 0x00000003u) != 0) {
    if ((cached_has_bits & 0x00000001u) != 0) {
      ABSL_DCHECK(from._impl_.header_ != nullptr);
      if (_this->_impl_.header_ == nullptr) {
        _this->_impl_.header_ = ::google::protobuf::Message::CopyConstruct(arena, *from._impl_.header_);
      } else {
        _this->_impl_.header_->MergeFrom(*from._impl_.header_);
      }
    }
    if ((cached_has_bits & 0x00000002u) != 0) {
      if (from._internal_succeeded() != 0) {
        _this->_impl_.succeeded_ = from._impl_.succeeded_;
      }
    }
  }
  _this->_impl_._has_bits_[0] |= cached_has_bits;
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void TxnResponse::CopyFrom(const TxnResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:etcdserverpb.TxnResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void TxnResponse::InternalSwap(TxnResponse* PROTOBUF_RESTRICT PROTOBUF_NONNULL other) {
  using ::std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  _impl_.responses_.InternalSwap(&other->_impl_.responses_);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(TxnResponse, _impl_.succeeded_)
      + sizeof(TxnResponse::_impl_.succeeded_)
      - PROTOBUF_FIELD_OFFSET(TxnResponse, _impl_.header_)>(
          reinterpret_cast<char*>(&_impl_.header_),
          reinterpret_cast<char*>(&other->_impl_.header_));
}

::google::protobuf::Metadata TxnResponse::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class CompactionRequest::_Internal {
 public:
  using HasBits =
      decltype(::std::declval<CompactionRequest>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
      8 * PROTOBUF_FIELD_OFFSET(CompactionRequest, _impl_._has_bits_);
};

CompactionRequest::CompactionRequest(::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, CompactionRequest_class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:etcdserverpb.CompactionRequest)
}
CompactionRequest::CompactionRequest(
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const CompactionRequest& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, CompactionRequest_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(from._impl_) {
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
}
PROTOBUF_NDEBUG_INLINE CompactionRequest::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
      : _cached_size_{0} {}

inline void CompactionRequest::SharedCtor(::_pb::Arena* PROTOBUF_NULLABLE arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, revision_),
           0,
           offsetof(Impl_, physical_) -
               offsetof(Impl_, revision_) +
               sizeof(Impl_::physical_));
}
CompactionRequest::~CompactionRequest() {
  // @@protoc_insertion_point(destructor:etcdserverpb.CompactionRequest)
  SharedDtor(*this);
}
inline void CompactionRequest::SharedDtor(MessageLite& self) {
  CompactionRequest& this_ = static_cast<CompactionRequest&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  this_._impl_.~Impl_();
}

inline void* PROTOBUF_NONNULL CompactionRequest::PlacementNew_(
    const void* PROTOBUF_NONNULL, void* PROTOBUF_NONNULL mem,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena) {
  return ::new (mem) CompactionRequest(arena);
}
constexpr auto CompactionRequest::InternalNewImpl_() {
  return ::google::protobuf::internal::MessageCreator::ZeroInit(sizeof(CompactionRequest),
                                            alignof(CompactionRequest));
}
constexpr auto CompactionRequest::InternalGenerateClassData_() {
  return ::google::protobuf::internal::ClassDataFull{
      ::google::protobuf::internal::ClassData{
          &_CompactionRequest_default_instance_._instance,
          &_table_.header,
          nullptr,  // OnDemandRegisterArenaDtor
          nullptr,  // IsInitialized
          &CompactionRequest::MergeImpl,
          ::google::protobuf::Message::GetNewImpl<CompactionRequest>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
          &CompactionRequest::SharedDtor,
          ::google::protobuf::Message::GetClearImpl<CompactionRequest>(), &CompactionRequest::ByteSizeLong,
              &CompactionRequest::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
          PROTOBUF_FIELD_OFFSET(CompactionRequest, _impl_._cached_size_),
          false,
      },
      &CompactionRequest::kDescriptorMethods,
      &descriptor_table_proto_2fetcd_2fetcd_2eproto,
      nullptr,  // tracker
  };
}

PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 const
    ::google::protobuf::internal::ClassDataFull CompactionRequest_class_data_ =
        CompactionRequest::InternalGenerateClassData_();

PROTOBUF_ATTRIBUTE_WEAK const ::google::protobuf::internal::ClassData* PROTOBUF_NONNULL
CompactionRequest::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&CompactionRequest_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(CompactionRequest_class_data_.tc_table);
  return CompactionRequest_class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<1, 2, 0, 0, 2>
CompactionRequest::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(CompactionRequest, _impl_._has_bits_),
    0, // no _extensions_
    2, 8,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967292,  // skipmap
    offsetof(decltype(_table_), field_entries),
    2,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    CompactionRequest_class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::etcdserverpb::CompactionRequest>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // bool physical = 2;
    {::_pbi::TcParser::SingularVarintNoZag1<bool, offsetof(CompactionRequest, _impl_.physical_), 1>(),
     {16, 1, 0, PROTOBUF_FIELD_OFFSET(CompactionRequest, _impl_.physical_)}},
    // int64 revision = 1;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint64_t, offsetof(CompactionRequest, _impl_.revision_), 0>(),
     {8, 0, 0, PROTOBUF_FIELD_OFFSET(CompactionRequest, _impl_.revision_)}},
  }}, {{
    65535, 65535
  }}, {{
    // int64 revision = 1;
    {PROTOBUF_FIELD_OFFSET(CompactionRequest, _impl_.revision_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kInt64)},
    // bool physical = 2;
    {PROTOBUF_FIELD_OFFSET(CompactionRequest, _impl_.physical_), _Internal::kHasBitsOffset + 1, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kBool)},
  }},
  // no aux_entries
  {{
  }},
};
PROTOBUF_NOINLINE void CompactionRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:etcdserverpb.CompactionRequest)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if ((cached_has_bits & 0x00000003u) != 0) {
    ::memset(&_impl_.revision_, 0, static_cast<::size_t>(
        reinterpret_cast<char*>(&_impl_.physical_) -
        reinterpret_cast<char*>(&_impl_.revision_)) + sizeof(_impl_.physical_));
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::uint8_t* PROTOBUF_NONNULL CompactionRequest::_InternalSerialize(
    const ::google::protobuf::MessageLite& base, ::uint8_t* PROTOBUF_NONNULL target,
    ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) {
  const CompactionRequest& this_ = static_cast<const CompactionRequest&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::uint8_t* PROTOBUF_NONNULL CompactionRequest::_InternalSerialize(
    ::uint8_t* PROTOBUF_NONNULL target,
    ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const {
  const CompactionRequest& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
  // @@protoc_insertion_point(serialize_to_array_start:etcdserverpb.CompactionRequest)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  // int64 revision = 1;
  if ((this_._impl_._has_bits_[0] & 0x00000001u) != 0) {
    if (this_._internal_revision() != 0) {
      target =
          ::google::protobuf::internal::WireFormatLite::WriteInt64ToArrayWithField<1>(
              stream, this_._internal_revision(), target);
    }
  }

  // bool physical = 2;
  if ((this_._impl_._has_bits_[0] & 0x00000002u) != 0) {
    if (this_._internal_physical() != 0) {
      target = stream->EnsureSpace(target);
      target = ::_pbi::WireFormatLite::WriteBoolToArray(
          2, this_._internal_physical(), target);
    }
  }

  if (ABSL_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:etcdserverpb.CompactionRequest)
  return target;
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::size_t CompactionRequest::ByteSizeLong(const MessageLite& base) {
  const CompactionRequest& this_ = static_cast<const CompactionRequest&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::size_t CompactionRequest::ByteSizeLong() const {
  const CompactionRequest& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
  // @@protoc_insertion_point(message_byte_size_start:etcdserverpb.CompactionRequest)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void)cached_has_bits;

  ::_pbi::Prefetch5LinesFrom7Lines(&this_);
  cached_has_bits = this_._impl_._has_bits_[0];
  if ((cached_has_bits & 0x00000003u) != 0) {
    // int64 revision = 1;
    if ((cached_has_bits & 0x00000001u) != 0) {
      if (this_._internal_revision() != 0) {
        total_size += ::_pbi::WireFormatLite::Int64SizePlusOne(
            this_._internal_revision());
      }
    }
    // bool physical = 2;
    if ((cached_has_bits & 0x00000002u) != 0) {
      if (this_._internal_physical() != 0) {
        total_size += 2;
      }
    }
  }
  return this_.MaybeComputeUnknownFieldsSize(total_size,
                                             &this_._impl_._cached_size_);
}

void CompactionRequest::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<CompactionRequest*>(&to_msg);
  auto& from = static_cast<const CompactionRequest&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:etcdserverpb.CompactionRequest)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._impl_._has_bits_[0];
  if ((cached_has_bits & 0x00000003u) != 0) {
    if ((cached_has_bits & 0x00000001u) != 0) {
      if (from._internal_revision() != 0) {
        _this->_impl_.revision_ = from._impl_.revision_;
      }
    }
    if ((cached_has_bits & 0x00000002u) != 0) {
      if (from._internal_physical() != 0) {
        _this->_impl_.physical_ = from._impl_.physical_;
      }
    }
  }
  _this->_impl_._has_bits_[0] |= cached_has_bits;
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void CompactionRequest::CopyFrom(const CompactionRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:etcdserverpb.CompactionRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void CompactionRequest::InternalSwap(CompactionRequest* PROTOBUF_RESTRICT PROTOBUF_NONNULL other) {
  using ::std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(CompactionRequest, _impl_.physical_)
      + sizeof(CompactionRequest::_impl_.physical_)
      - PROTOBUF_FIELD_OFFSET(CompactionRequest, _impl_.revision_)>(
          reinterpret_cast<char*>(&_impl_.revision_),
          reinterpret_cast<char*>(&other->_impl_.revision_));
}

::google::protobuf::Metadata CompactionRequest::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class CompactionResponse::_Internal {
 public:
  using HasBits =
      decltype(::std::declval<CompactionResponse>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
      8 * PROTOBUF_FIELD_OFFSET(CompactionResponse, _impl_._has_bits_);
};

CompactionResponse::CompactionResponse(::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, CompactionResponse_class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:etcdserverpb.CompactionResponse)
}
PROTOBUF_NDEBUG_INLINE CompactionResponse::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const Impl_& from,
    const ::etcdserverpb::CompactionResponse& from_msg)
      : _has_bits_{from._has_bits_},
        _cached_size_{0} {}

CompactionResponse::CompactionResponse(
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena,
    const CompactionResponse& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, CompactionResponse_class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  CompactionResponse* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);
  ::uint32_t cached_has_bits = _impl_._has_bits_[0];
  _impl_.header_ = ((cached_has_bits & 0x00000001u) != 0)
                ? ::google::protobuf::Message::CopyConstruct(arena, *from._impl_.header_)
                : nullptr;

  // @@protoc_insertion_point(copy_constructor:etcdserverpb.CompactionResponse)
}
PROTOBUF_NDEBUG_INLINE CompactionResponse::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
      : _cached_size_{0} {}

inline void CompactionResponse::SharedCtor(::_pb::Arena* PROTOBUF_NULLABLE arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  _impl_.header_ = {};
}
CompactionResponse::~CompactionResponse() {
  // @@protoc_insertion_point(destructor:etcdserverpb.CompactionResponse)
  SharedDtor(*this);
}
inline void CompactionResponse::SharedDtor(MessageLite& self) {
  CompactionResponse& this_ = static_cast<CompactionResponse&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  delete this_._impl_.header_;
  this_._impl_.~Impl_();
}

inline void* PROTOBUF_NONNULL CompactionResponse::PlacementNew_(
    const void* PROTOBUF_NONNULL, void* PROTOBUF_NONNULL mem,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena) {
  return ::new (mem) CompactionResponse(arena);
}
constexpr auto CompactionResponse::InternalNewImpl_() {
  return ::google::protobuf::internal::MessageCreator::ZeroInit(sizeof(CompactionResponse),
                                            alignof(CompactionResponse));
}
constexpr auto CompactionResponse::InternalGenerateClassData_() {
  return ::google::protobuf::internal::ClassDataFull{
      ::google::protobuf::internal::ClassData{
          &_CompactionResponse_default_instance_._instance,
          &_table_.header,
          nullptr,  // OnDemandRegisterArenaDtor
          nullptr,  // IsInitialized
          &CompactionResponse::MergeImpl,
          ::google::protobuf::Message::GetNewImpl<CompactionResponse>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
          &CompactionResponse::SharedDtor,
          ::google::protobuf::Message::GetClearImpl<CompactionResponse>(), &CompactionResponse::ByteSizeLong,
              &CompactionResponse::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
          PROTOBUF_FIELD_OFFSET(CompactionResponse, _impl_._cached_size_),
          false,
      },
      &CompactionResponse::kDescriptorMethods,
      &descriptor_table_proto_2fetcd_2fetcd_2eproto,
      nullptr,  // tracker
  };
}

PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 const
    ::google::protobuf::internal::ClassDataFull CompactionResponse_class_data_ =
        CompactionResponse::InternalGenerateClassData_();

PROTOBUF_ATTRIBUTE_WEAK const ::google::protobuf::internal::ClassData* PROTOBUF_NONNULL
CompactionResponse::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&CompactionResponse_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(CompactionResponse_class_data_.tc_table);
  return CompactionResponse_class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<0, 1, 1, 0, 2>
CompactionResponse::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(CompactionResponse, _impl_._has_bits_),
    0, // no _extensions_
    1, 0,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967294,  // skipmap
    offsetof(decltype(_table_), field_entries),
    1,  // num_field_entries
    1,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    CompactionResponse_class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::etcdserverpb::CompactionResponse>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // .etcdserverpb.ResponseHeader header = 1;
    {::_pbi::TcParser::FastMtS1,
     {10, 0, 0, PROTOBUF_FIELD_OFFSET(CompactionResponse, _impl_.header_)}},
  }}, {{
    65535, 65535
  }}, {{
    // .etcdserverpb.ResponseHeader header = 1;
    {PROTOBUF_FIELD_OFFSET(CompactionResponse, _impl_.header_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
  }},
  {{
      {::_pbi::TcParser::GetTable<::etcdserverpb::ResponseHeader>()},
  }},
  {{
  }},
};
PROTOBUF_NOINLINE void CompactionResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:etcdserverpb.CompactionResponse)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if ((cached_has_bits & 0x00000001u) != 0) {
    ABSL_DCHECK(_impl_.header_ != nullptr);
    _impl_.header_->Clear();
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::uint8_t* PROTOBUF_NONNULL CompactionResponse::_InternalSerialize(
    const ::google::protobuf::MessageLite& base, ::uint8_t* PROTOBUF_NONNULL target,
    ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) {
  const CompactionResponse& this_ = static_cast<const CompactionResponse&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::uint8_t* PROTOBUF_NONNULL CompactionResponse::_InternalSerialize(
    ::uint8_t* PROTOBUF_NONNULL target,
    ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const {
  const CompactionResponse& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
  // @@protoc_insertion_point(serialize_to_array_start:etcdserverpb.CompactionResponse)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  cached_has_bits = this_._impl_._has_bits_[0];
  // .etcdserverpb.ResponseHeader header = 1;
  if ((cached_has_bits & 0x00000001u) != 0) {
    target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
        1, *this_._impl_.header_, this_._impl_.header_->GetCachedSize(), target,
        stream);
  }

  if (ABSL_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:etcdserverpb.CompactionResponse)
  return target;
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::size_t CompactionResponse::ByteSizeLong(const MessageLite& base) {
  const CompactionResponse& this_ = static_cast<const CompactionResponse&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::size_t CompactionResponse::ByteSizeLong() const {
  const CompactionResponse& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
  // @@protoc_insertion_point(message_byte_size_start:etcdserverpb.CompactionResponse)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void)cached_has_bits;

   {
    // .etcdserverpb.ResponseHeader header = 1;
    cached_has_bits = this_._impl_._has_bits_[0];
    if ((cached_has_bits & 0x00000001u) != 0) {
      total_size += 1 +
                    ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.header_);
    }
  }
  return this_.MaybeComputeUnknownFieldsSize(total_size,
                                             &this_._impl_._cached_size_);
}

void CompactionResponse::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<CompactionResponse*>(&to_msg);
  auto& from = static_cast<const CompactionResponse&>(from_msg);
  ::google::protobuf::Arena* arena = _this->GetArena();
  // @@protoc_insertion_point(class_specific_merge_from_start:etcdserverpb.CompactionResponse)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._impl_._has_bits_[0];
  if ((cached_has_bits & 0x00000001u) != 0) {
    ABSL_DCHECK(from._impl_.header_ != nullptr);
    if (_this->_impl_.header_ == nullptr) {
      _this->_impl_.header_ = ::google::protobuf::Message::CopyConstruct(arena, *from._impl_.header_);
    } else {
      _this->_impl_.header_->MergeFrom(*from._impl_.header_);
    }
  }
  _this->_impl_._has_bits_[0] |= cached_has_bits;
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void CompactionResponse::CopyFrom(const CompactionResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:etcdserverpb.CompactionResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void CompactionResponse::InternalSwap(CompactionResponse* PROTOBUF_RESTRICT PROTOBUF_NONNULL other) {
  using ::std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  swap(_impl_.header_, other->_impl_.header_);
}

::google::protobuf::Metadata CompactionResponse::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class WatchRequest::_Internal {
 public:
  static constexpr ::int32_t kOneofCaseOffset =
      PROTOBUF_FIELD_OFFSET(::etcdserverpb::WatchRequest, _impl_._oneof_case_);
};

void WatchRequest::set_allocated_create_request(::etcdserverpb::WatchCreateRequest* PROTOBUF_NULLABLE create_request) {
  ::google::protobuf::Arena* message_arena = GetArena();
  clear_request_union();
  if (create_request) {
    ::google::protobuf::Arena* submessage_arena = create_request->GetArena();
    if (message_arena != submessage_arena) {
      create_request = ::google::protobuf::internal::GetOwnedMessage(message_arena, create_request, submessage_arena);
    }
    set_has_create_request();
    _impl_.request_union_.create_request_ = create_request;
  }
  // @@protoc_insertion_point(field_set_allocated:etcdserverpb.WatchRequest.create_request)
}
void WatchRequest::set_allocated_cancel_request(::etcdserverpb::WatchCancelRequest* PROTOBUF_NULLABLE cancel_request) {
  ::google::protobuf::Arena* message_arena = GetArena();
  clear_request_union();
  if (cancel_request) {
    ::google::protobuf::Arena* submessage_arena = cancel_request->GetArena();
    if (message_arena != submessage_arena) {
      cancel_request = ::google::protobuf::internal::GetOwnedMessage(message_arena, cancel_request, submessage_arena);
    }
    set_has_cancel_request();
    _impl_.request_union_.cancel_request_ = cancel_request;
  }
  // @@protoc_insertion_point(field_set_allocated:etcdserverpb.WatchRequest.cancel_request)
}
void WatchRequest::set_allocated_progress_request(::etcdserverpb::WatchProgressRequest* PROTOBUF_NULLABLE progress_request) {
  ::google::protobuf::Arena* message_arena = GetArena();
  clear_request_union();
  if (progress_request) {
    ::google::protobuf::Arena* submessage_arena = progress_request->GetArena();
    if (message_arena != submessage_arena) {
      progress_request = ::google::protobuf::internal::GetOwnedMessage(message_arena, progress_request, submessage_arena);
    }
    set_has_progress_request();
    _impl_.request_union_.progress_request_ = progress_request;
  }
  // @@protoc_insertion_point(field_set_allocated:etcdserverpb.WatchRequest.progress_request)
}
WatchRequest::WatchRequest(::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, WatchRequest_class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:etcdserverpb.WatchRequest)
}
PROTOBUF_NDEBUG_INLINE WatchRequest::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const Impl_& from,
    const ::etcdserverpb::WatchRequest& from_msg)
      : request_union_{},
        _cached_size_{0},
        _oneof_case_{from._oneof_case_[0]} {}

WatchRequest::WatchRequest(
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena,
    const WatchRequest& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, WatchRequest_class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  WatchRequest* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);
  switch (request_union_case()) {
    case REQUEST_UNION_NOT_SET:
      break;
      case kCreateRequest:
        _impl_.request_union_.create_request_ = ::google::protobuf::Message::CopyConstruct(arena, *from._impl_.request_union_.create_request_);
        break;
      case kCancelRequest:
        _impl_.request_union_.cancel_request_ = ::google::protobuf::Message::CopyConstruct(arena, *from._impl_.request_union_.cancel_request_);
        break;
      case kProgressRequest:
        _impl_.request_union_.progress_request_ = ::google::protobuf::Message::CopyConstruct(arena, *from._impl_.request_union_.progress_request_);
        break;
  }

  // @@protoc_insertion_point(copy_constructor:etcdserverpb.WatchRequest)
}
PROTOBUF_NDEBUG_INLINE WatchRequest::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
      : request_union_{},
        _cached_size_{0},
        _oneof_case_{} {}

inline void WatchRequest::SharedCtor(::_pb::Arena* PROTOBUF_NULLABLE arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
}
WatchRequest::~WatchRequest() {
  // @@protoc_insertion_point(destructor:etcdserverpb.WatchRequest)
  SharedDtor(*this);
}
inline void WatchRequest::SharedDtor(MessageLite& self) {
  WatchRequest& this_ = static_cast<WatchRequest&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  if (this_.has_request_union()) {
    this_.clear_request_union();
  }
  this_._impl_.~Impl_();
}

void WatchRequest::clear_request_union() {
// @@protoc_insertion_point(one_of_clear_start:etcdserverpb.WatchRequest)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  switch (request_union_case()) {
    case kCreateRequest: {
      if (GetArena() == nullptr) {
        delete _impl_.request_union_.create_request_;
      } else if (::google::protobuf::internal::DebugHardenClearOneofMessageOnArena()) {
        ::google::protobuf::internal::MaybePoisonAfterClear(_impl_.request_union_.create_request_);
      }
      break;
    }
    case kCancelRequest: {
      if (GetArena() == nullptr) {
        delete _impl_.request_union_.cancel_request_;
      } else if (::google::protobuf::internal::DebugHardenClearOneofMessageOnArena()) {
        ::google::protobuf::internal::MaybePoisonAfterClear(_impl_.request_union_.cancel_request_);
      }
      break;
    }
    case kProgressRequest: {
      if (GetArena() == nullptr) {
        delete _impl_.request_union_.progress_request_;
      } else if (::google::protobuf::internal::DebugHardenClearOneofMessageOnArena()) {
        ::google::protobuf::internal::MaybePoisonAfterClear(_impl_.request_union_.progress_request_);
      }
      break;
    }
    case REQUEST_UNION_NOT_SET: {
      break;
    }
  }
  _impl_._oneof_case_[0] = REQUEST_UNION_NOT_SET;
}


inline void* PROTOBUF_NONNULL WatchRequest::PlacementNew_(
    const void* PROTOBUF_NONNULL, void* PROTOBUF_NONNULL mem,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena) {
  return ::new (mem) WatchRequest(arena);
}
constexpr auto WatchRequest::InternalNewImpl_() {
  return ::google::protobuf::internal::MessageCreator::ZeroInit(sizeof(WatchRequest),
                                            alignof(WatchRequest));
}
constexpr auto WatchRequest::InternalGenerateClassData_() {
  return ::google::protobuf::internal::ClassDataFull{
      ::google::protobuf::internal::ClassData{
          &_WatchRequest_default_instance_._instance,
          &_table_.header,
          nullptr,  // OnDemandRegisterArenaDtor
          nullptr,  // IsInitialized
          &WatchRequest::MergeImpl,
          ::google::protobuf::Message::GetNewImpl<WatchRequest>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
          &WatchRequest::SharedDtor,
          ::google::protobuf::Message::GetClearImpl<WatchRequest>(), &WatchRequest::ByteSizeLong,
              &WatchRequest::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
          PROTOBUF_FIELD_OFFSET(WatchRequest, _impl_._cached_size_),
          false,
      },
      &WatchRequest::kDescriptorMethods,
      &descriptor_table_proto_2fetcd_2fetcd_2eproto,
      nullptr,  // tracker
  };
}

PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 const
    ::google::protobuf::internal::ClassDataFull WatchRequest_class_data_ =
        WatchRequest::InternalGenerateClassData_();

PROTOBUF_ATTRIBUTE_WEAK const ::google::protobuf::internal::ClassData* PROTOBUF_NONNULL
WatchRequest::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&WatchRequest_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(WatchRequest_class_data_.tc_table);
  return WatchRequest_class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<0, 3, 3, 0, 2>
WatchRequest::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    3, 0,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967288,  // skipmap
    offsetof(decltype(_table_), field_entries),
    3,  // num_field_entries
    3,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    WatchRequest_class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::etcdserverpb::WatchRequest>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
  }}, {{
    65535, 65535
  }}, {{
    // .etcdserverpb.WatchCreateRequest create_request = 1;
    {PROTOBUF_FIELD_OFFSET(WatchRequest, _impl_.request_union_.create_request_), _Internal::kOneofCaseOffset + 0, 0,
    (0 | ::_fl::kFcOneof | ::_fl::kMessage | ::_fl::kTvTable)},
    // .etcdserverpb.WatchCancelRequest cancel_request = 2;
    {PROTOBUF_FIELD_OFFSET(WatchRequest, _impl_.request_union_.cancel_request_), _Internal::kOneofCaseOffset + 0, 1,
    (0 | ::_fl::kFcOneof | ::_fl::kMessage | ::_fl::kTvTable)},
    // .etcdserverpb.WatchProgressRequest progress_request = 3 [(.versionpb.etcd_version_field) = "3.4"];
    {PROTOBUF_FIELD_OFFSET(WatchRequest, _impl_.request_union_.progress_request_), _Internal::kOneofCaseOffset + 0, 2,
    (0 | ::_fl::kFcOneof | ::_fl::kMessage | ::_fl::kTvTable)},
  }},
  {{
      {::_pbi::TcParser::GetTable<::etcdserverpb::WatchCreateRequest>()},
      {::_pbi::TcParser::GetTable<::etcdserverpb::WatchCancelRequest>()},
      {::_pbi::TcParser::GetTable<::etcdserverpb::WatchProgressRequest>()},
  }},
  {{
  }},
};
PROTOBUF_NOINLINE void WatchRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:etcdserverpb.WatchRequest)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  clear_request_union();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::uint8_t* PROTOBUF_NONNULL WatchRequest::_InternalSerialize(
    const ::google::protobuf::MessageLite& base, ::uint8_t* PROTOBUF_NONNULL target,
    ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) {
  const WatchRequest& this_ = static_cast<const WatchRequest&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::uint8_t* PROTOBUF_NONNULL WatchRequest::_InternalSerialize(
    ::uint8_t* PROTOBUF_NONNULL target,
    ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const {
  const WatchRequest& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
  // @@protoc_insertion_point(serialize_to_array_start:etcdserverpb.WatchRequest)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  switch (this_.request_union_case()) {
    case kCreateRequest: {
      target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
          1, *this_._impl_.request_union_.create_request_, this_._impl_.request_union_.create_request_->GetCachedSize(), target,
          stream);
      break;
    }
    case kCancelRequest: {
      target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
          2, *this_._impl_.request_union_.cancel_request_, this_._impl_.request_union_.cancel_request_->GetCachedSize(), target,
          stream);
      break;
    }
    case kProgressRequest: {
      target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
          3, *this_._impl_.request_union_.progress_request_, this_._impl_.request_union_.progress_request_->GetCachedSize(), target,
          stream);
      break;
    }
    default:
      break;
  }
  if (ABSL_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:etcdserverpb.WatchRequest)
  return target;
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::size_t WatchRequest::ByteSizeLong(const MessageLite& base) {
  const WatchRequest& this_ = static_cast<const WatchRequest&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::size_t WatchRequest::ByteSizeLong() const {
  const WatchRequest& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
  // @@protoc_insertion_point(message_byte_size_start:etcdserverpb.WatchRequest)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void)cached_has_bits;

  switch (this_.request_union_case()) {
    // .etcdserverpb.WatchCreateRequest create_request = 1;
    case kCreateRequest: {
      total_size += 1 +
                    ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.request_union_.create_request_);
      break;
    }
    // .etcdserverpb.WatchCancelRequest cancel_request = 2;
    case kCancelRequest: {
      total_size += 1 +
                    ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.request_union_.cancel_request_);
      break;
    }
    // .etcdserverpb.WatchProgressRequest progress_request = 3 [(.versionpb.etcd_version_field) = "3.4"];
    case kProgressRequest: {
      total_size += 1 +
                    ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.request_union_.progress_request_);
      break;
    }
    case REQUEST_UNION_NOT_SET: {
      break;
    }
  }
  return this_.MaybeComputeUnknownFieldsSize(total_size,
                                             &this_._impl_._cached_size_);
}

void WatchRequest::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<WatchRequest*>(&to_msg);
  auto& from = static_cast<const WatchRequest&>(from_msg);
  ::google::protobuf::Arena* arena = _this->GetArena();
  // @@protoc_insertion_point(class_specific_merge_from_start:etcdserverpb.WatchRequest)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (const uint32_t oneof_from_case = from._impl_._oneof_case_[0]) {
    const uint32_t oneof_to_case = _this->_impl_._oneof_case_[0];
    const bool oneof_needs_init = oneof_to_case != oneof_from_case;
    if (oneof_needs_init) {
      if (oneof_to_case != 0) {
        _this->clear_request_union();
      }
      _this->_impl_._oneof_case_[0] = oneof_from_case;
    }

    switch (oneof_from_case) {
      case kCreateRequest: {
        if (oneof_needs_init) {
          _this->_impl_.request_union_.create_request_ = ::google::protobuf::Message::CopyConstruct(arena, *from._impl_.request_union_.create_request_);
        } else {
          _this->_impl_.request_union_.create_request_->MergeFrom(*from._impl_.request_union_.create_request_);
        }
        break;
      }
      case kCancelRequest: {
        if (oneof_needs_init) {
          _this->_impl_.request_union_.cancel_request_ = ::google::protobuf::Message::CopyConstruct(arena, *from._impl_.request_union_.cancel_request_);
        } else {
          _this->_impl_.request_union_.cancel_request_->MergeFrom(*from._impl_.request_union_.cancel_request_);
        }
        break;
      }
      case kProgressRequest: {
        if (oneof_needs_init) {
          _this->_impl_.request_union_.progress_request_ = ::google::protobuf::Message::CopyConstruct(arena, *from._impl_.request_union_.progress_request_);
        } else {
          _this->_impl_.request_union_.progress_request_->MergeFrom(*from._impl_.request_union_.progress_request_);
        }
        break;
      }
      case REQUEST_UNION_NOT_SET:
        break;
    }
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void WatchRequest::CopyFrom(const WatchRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:etcdserverpb.WatchRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void WatchRequest::InternalSwap(WatchRequest* PROTOBUF_RESTRICT PROTOBUF_NONNULL other) {
  using ::std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_.request_union_, other->_impl_.request_union_);
  swap(_impl_._oneof_case_[0], other->_impl_._oneof_case_[0]);
}

::google::protobuf::Metadata WatchRequest::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class WatchCreateRequest::_Internal {
 public:
  using HasBits =
      decltype(::std::declval<WatchCreateRequest>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
      8 * PROTOBUF_FIELD_OFFSET(WatchCreateRequest, _impl_._has_bits_);
};

WatchCreateRequest::WatchCreateRequest(::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, WatchCreateRequest_class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:etcdserverpb.WatchCreateRequest)
}
PROTOBUF_NDEBUG_INLINE WatchCreateRequest::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const Impl_& from,
    const ::etcdserverpb::WatchCreateRequest& from_msg)
      : _has_bits_{from._has_bits_},
        _cached_size_{0},
        filters_{visibility, arena, from.filters_},
        _filters_cached_byte_size_{0},
        key_(arena, from.key_),
        range_end_(arena, from.range_end_) {}

WatchCreateRequest::WatchCreateRequest(
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena,
    const WatchCreateRequest& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, WatchCreateRequest_class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  WatchCreateRequest* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);
  ::memcpy(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, start_revision_),
           reinterpret_cast<const char *>(&from._impl_) +
               offsetof(Impl_, start_revision_),
           offsetof(Impl_, fragment_) -
               offsetof(Impl_, start_revision_) +
               sizeof(Impl_::fragment_));

  // @@protoc_insertion_point(copy_constructor:etcdserverpb.WatchCreateRequest)
}
PROTOBUF_NDEBUG_INLINE WatchCreateRequest::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
      : _cached_size_{0},
        filters_{visibility, arena},
        _filters_cached_byte_size_{0},
        key_(arena),
        range_end_(arena) {}

inline void WatchCreateRequest::SharedCtor(::_pb::Arena* PROTOBUF_NULLABLE arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, start_revision_),
           0,
           offsetof(Impl_, fragment_) -
               offsetof(Impl_, start_revision_) +
               sizeof(Impl_::fragment_));
}
WatchCreateRequest::~WatchCreateRequest() {
  // @@protoc_insertion_point(destructor:etcdserverpb.WatchCreateRequest)
  SharedDtor(*this);
}
inline void WatchCreateRequest::SharedDtor(MessageLite& self) {
  WatchCreateRequest& this_ = static_cast<WatchCreateRequest&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  this_._impl_.key_.Destroy();
  this_._impl_.range_end_.Destroy();
  this_._impl_.~Impl_();
}

inline void* PROTOBUF_NONNULL WatchCreateRequest::PlacementNew_(
    const void* PROTOBUF_NONNULL, void* PROTOBUF_NONNULL mem,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena) {
  return ::new (mem) WatchCreateRequest(arena);
}
constexpr auto WatchCreateRequest::InternalNewImpl_() {
  constexpr auto arena_bits = ::google::protobuf::internal::EncodePlacementArenaOffsets({
      PROTOBUF_FIELD_OFFSET(WatchCreateRequest, _impl_.filters_) +
          decltype(WatchCreateRequest::_impl_.filters_)::
              InternalGetArenaOffset(
                  ::google::protobuf::Message::internal_visibility()),
  });
  if (arena_bits.has_value()) {
    return ::google::protobuf::internal::MessageCreator::CopyInit(
        sizeof(WatchCreateRequest), alignof(WatchCreateRequest), *arena_bits);
  } else {
    return ::google::protobuf::internal::MessageCreator(&WatchCreateRequest::PlacementNew_,
                                 sizeof(WatchCreateRequest),
                                 alignof(WatchCreateRequest));
  }
}
constexpr auto WatchCreateRequest::InternalGenerateClassData_() {
  return ::google::protobuf::internal::ClassDataFull{
      ::google::protobuf::internal::ClassData{
          &_WatchCreateRequest_default_instance_._instance,
          &_table_.header,
          nullptr,  // OnDemandRegisterArenaDtor
          nullptr,  // IsInitialized
          &WatchCreateRequest::MergeImpl,
          ::google::protobuf::Message::GetNewImpl<WatchCreateRequest>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
          &WatchCreateRequest::SharedDtor,
          ::google::protobuf::Message::GetClearImpl<WatchCreateRequest>(), &WatchCreateRequest::ByteSizeLong,
              &WatchCreateRequest::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
          PROTOBUF_FIELD_OFFSET(WatchCreateRequest, _impl_._cached_size_),
          false,
      },
      &WatchCreateRequest::kDescriptorMethods,
      &descriptor_table_proto_2fetcd_2fetcd_2eproto,
      nullptr,  // tracker
  };
}

PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 const
    ::google::protobuf::internal::ClassDataFull WatchCreateRequest_class_data_ =
        WatchCreateRequest::InternalGenerateClassData_();

PROTOBUF_ATTRIBUTE_WEAK const ::google::protobuf::internal::ClassData* PROTOBUF_NONNULL
WatchCreateRequest::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&WatchCreateRequest_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(WatchCreateRequest_class_data_.tc_table);
  return WatchCreateRequest_class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<3, 8, 0, 0, 2>
WatchCreateRequest::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(WatchCreateRequest, _impl_._has_bits_),
    0, // no _extensions_
    8, 56,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967040,  // skipmap
    offsetof(decltype(_table_), field_entries),
    8,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    WatchCreateRequest_class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::etcdserverpb::WatchCreateRequest>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // bool fragment = 8 [(.versionpb.etcd_version_field) = "3.4"];
    {::_pbi::TcParser::SingularVarintNoZag1<bool, offsetof(WatchCreateRequest, _impl_.fragment_), 6>(),
     {64, 6, 0, PROTOBUF_FIELD_OFFSET(WatchCreateRequest, _impl_.fragment_)}},
    // bytes key = 1;
    {::_pbi::TcParser::FastBS1,
     {10, 0, 0, PROTOBUF_FIELD_OFFSET(WatchCreateRequest, _impl_.key_)}},
    // bytes range_end = 2;
    {::_pbi::TcParser::FastBS1,
     {18, 1, 0, PROTOBUF_FIELD_OFFSET(WatchCreateRequest, _impl_.range_end_)}},
    // int64 start_revision = 3;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint64_t, offsetof(WatchCreateRequest, _impl_.start_revision_), 2>(),
     {24, 2, 0, PROTOBUF_FIELD_OFFSET(WatchCreateRequest, _impl_.start_revision_)}},
    // bool progress_notify = 4;
    {::_pbi::TcParser::SingularVarintNoZag1<bool, offsetof(WatchCreateRequest, _impl_.progress_notify_), 4>(),
     {32, 4, 0, PROTOBUF_FIELD_OFFSET(WatchCreateRequest, _impl_.progress_notify_)}},
    // repeated .etcdserverpb.WatchCreateRequest.FilterType filters = 5 [(.versionpb.etcd_version_field) = "3.1"];
    {::_pbi::TcParser::FastV32P1,
     {42, 63, 0, PROTOBUF_FIELD_OFFSET(WatchCreateRequest, _impl_.filters_)}},
    // bool prev_kv = 6 [(.versionpb.etcd_version_field) = "3.1"];
    {::_pbi::TcParser::SingularVarintNoZag1<bool, offsetof(WatchCreateRequest, _impl_.prev_kv_), 5>(),
     {48, 5, 0, PROTOBUF_FIELD_OFFSET(WatchCreateRequest, _impl_.prev_kv_)}},
    // int64 watch_id = 7 [(.versionpb.etcd_version_field) = "3.4"];
    {::_pbi::TcParser::SingularVarintNoZag1<::uint64_t, offsetof(WatchCreateRequest, _impl_.watch_id_), 3>(),
     {56, 3, 0, PROTOBUF_FIELD_OFFSET(WatchCreateRequest, _impl_.watch_id_)}},
  }}, {{
    65535, 65535
  }}, {{
    // bytes key = 1;
    {PROTOBUF_FIELD_OFFSET(WatchCreateRequest, _impl_.key_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kBytes | ::_fl::kRepAString)},
    // bytes range_end = 2;
    {PROTOBUF_FIELD_OFFSET(WatchCreateRequest, _impl_.range_end_), _Internal::kHasBitsOffset + 1, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kBytes | ::_fl::kRepAString)},
    // int64 start_revision = 3;
    {PROTOBUF_FIELD_OFFSET(WatchCreateRequest, _impl_.start_revision_), _Internal::kHasBitsOffset + 2, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kInt64)},
    // bool progress_notify = 4;
    {PROTOBUF_FIELD_OFFSET(WatchCreateRequest, _impl_.progress_notify_), _Internal::kHasBitsOffset + 4, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kBool)},
    // repeated .etcdserverpb.WatchCreateRequest.FilterType filters = 5 [(.versionpb.etcd_version_field) = "3.1"];
    {PROTOBUF_FIELD_OFFSET(WatchCreateRequest, _impl_.filters_), -1, 0,
    (0 | ::_fl::kFcRepeated | ::_fl::kPackedOpenEnum)},
    // bool prev_kv = 6 [(.versionpb.etcd_version_field) = "3.1"];
    {PROTOBUF_FIELD_OFFSET(WatchCreateRequest, _impl_.prev_kv_), _Internal::kHasBitsOffset + 5, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kBool)},
    // int64 watch_id = 7 [(.versionpb.etcd_version_field) = "3.4"];
    {PROTOBUF_FIELD_OFFSET(WatchCreateRequest, _impl_.watch_id_), _Internal::kHasBitsOffset + 3, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kInt64)},
    // bool fragment = 8 [(.versionpb.etcd_version_field) = "3.4"];
    {PROTOBUF_FIELD_OFFSET(WatchCreateRequest, _impl_.fragment_), _Internal::kHasBitsOffset + 6, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kBool)},
  }},
  // no aux_entries
  {{
  }},
};
PROTOBUF_NOINLINE void WatchCreateRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:etcdserverpb.WatchCreateRequest)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.filters_.Clear();
  cached_has_bits = _impl_._has_bits_[0];
  if ((cached_has_bits & 0x00000003u) != 0) {
    if ((cached_has_bits & 0x00000001u) != 0) {
      _impl_.key_.ClearNonDefaultToEmpty();
    }
    if ((cached_has_bits & 0x00000002u) != 0) {
      _impl_.range_end_.ClearNonDefaultToEmpty();
    }
  }
  if ((cached_has_bits & 0x0000007cu) != 0) {
    ::memset(&_impl_.start_revision_, 0, static_cast<::size_t>(
        reinterpret_cast<char*>(&_impl_.fragment_) -
        reinterpret_cast<char*>(&_impl_.start_revision_)) + sizeof(_impl_.fragment_));
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::uint8_t* PROTOBUF_NONNULL WatchCreateRequest::_InternalSerialize(
    const ::google::protobuf::MessageLite& base, ::uint8_t* PROTOBUF_NONNULL target,
    ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) {
  const WatchCreateRequest& this_ = static_cast<const WatchCreateRequest&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::uint8_t* PROTOBUF_NONNULL WatchCreateRequest::_InternalSerialize(
    ::uint8_t* PROTOBUF_NONNULL target,
    ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const {
  const WatchCreateRequest& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
  // @@protoc_insertion_point(serialize_to_array_start:etcdserverpb.WatchCreateRequest)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  // bytes key = 1;
  if ((this_._impl_._has_bits_[0] & 0x00000001u) != 0) {
    if (!this_._internal_key().empty()) {
      const ::std::string& _s = this_._internal_key();
      target = stream->WriteBytesMaybeAliased(1, _s, target);
    }
  }

  // bytes range_end = 2;
  if ((this_._impl_._has_bits_[0] & 0x00000002u) != 0) {
    if (!this_._internal_range_end().empty()) {
      const ::std::string& _s = this_._internal_range_end();
      target = stream->WriteBytesMaybeAliased(2, _s, target);
    }
  }

  // int64 start_revision = 3;
  if ((this_._impl_._has_bits_[0] & 0x00000004u) != 0) {
    if (this_._internal_start_revision() != 0) {
      target =
          ::google::protobuf::internal::WireFormatLite::WriteInt64ToArrayWithField<3>(
              stream, this_._internal_start_revision(), target);
    }
  }

  // bool progress_notify = 4;
  if ((this_._impl_._has_bits_[0] & 0x00000010u) != 0) {
    if (this_._internal_progress_notify() != 0) {
      target = stream->EnsureSpace(target);
      target = ::_pbi::WireFormatLite::WriteBoolToArray(
          4, this_._internal_progress_notify(), target);
    }
  }

  // repeated .etcdserverpb.WatchCreateRequest.FilterType filters = 5 [(.versionpb.etcd_version_field) = "3.1"];
  {
    ::size_t byte_size = this_._impl_._filters_cached_byte_size_.Get();
    if (byte_size > 0) {
      target = stream->WriteEnumPacked(
          5, this_._internal_filters(), byte_size, target);
    }
  }

  // bool prev_kv = 6 [(.versionpb.etcd_version_field) = "3.1"];
  if ((this_._impl_._has_bits_[0] & 0x00000020u) != 0) {
    if (this_._internal_prev_kv() != 0) {
      target = stream->EnsureSpace(target);
      target = ::_pbi::WireFormatLite::WriteBoolToArray(
          6, this_._internal_prev_kv(), target);
    }
  }

  // int64 watch_id = 7 [(.versionpb.etcd_version_field) = "3.4"];
  if ((this_._impl_._has_bits_[0] & 0x00000008u) != 0) {
    if (this_._internal_watch_id() != 0) {
      target =
          ::google::protobuf::internal::WireFormatLite::WriteInt64ToArrayWithField<7>(
              stream, this_._internal_watch_id(), target);
    }
  }

  // bool fragment = 8 [(.versionpb.etcd_version_field) = "3.4"];
  if ((this_._impl_._has_bits_[0] & 0x00000040u) != 0) {
    if (this_._internal_fragment() != 0) {
      target = stream->EnsureSpace(target);
      target = ::_pbi::WireFormatLite::WriteBoolToArray(
          8, this_._internal_fragment(), target);
    }
  }

  if (ABSL_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:etcdserverpb.WatchCreateRequest)
  return target;
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::size_t WatchCreateRequest::ByteSizeLong(const MessageLite& base) {
  const WatchCreateRequest& this_ = static_cast<const WatchCreateRequest&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::size_t WatchCreateRequest::ByteSizeLong() const {
  const WatchCreateRequest& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
  // @@protoc_insertion_point(message_byte_size_start:etcdserverpb.WatchCreateRequest)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void)cached_has_bits;

  ::_pbi::Prefetch5LinesFrom7Lines(&this_);
   {
    // repeated .etcdserverpb.WatchCreateRequest.FilterType filters = 5 [(.versionpb.etcd_version_field) = "3.1"];
    {
      total_size += ::_pbi::WireFormatLite::EnumSizeWithPackedTagSize(
          this_._internal_filters(), 1, this_._impl_._filters_cached_byte_size_);
    }
  }
  cached_has_bits = this_._impl_._has_bits_[0];
  if ((cached_has_bits & 0x0000007fu) != 0) {
    // bytes key = 1;
    if ((cached_has_bits & 0x00000001u) != 0) {
      if (!this_._internal_key().empty()) {
        total_size += 1 + ::google::protobuf::internal::WireFormatLite::BytesSize(
                                        this_._internal_key());
      }
    }
    // bytes range_end = 2;
    if ((cached_has_bits & 0x00000002u) != 0) {
      if (!this_._internal_range_end().empty()) {
        total_size += 1 + ::google::protobuf::internal::WireFormatLite::BytesSize(
                                        this_._internal_range_end());
      }
    }
    // int64 start_revision = 3;
    if ((cached_has_bits & 0x00000004u) != 0) {
      if (this_._internal_start_revision() != 0) {
        total_size += ::_pbi::WireFormatLite::Int64SizePlusOne(
            this_._internal_start_revision());
      }
    }
    // int64 watch_id = 7 [(.versionpb.etcd_version_field) = "3.4"];
    if ((cached_has_bits & 0x00000008u) != 0) {
      if (this_._internal_watch_id() != 0) {
        total_size += ::_pbi::WireFormatLite::Int64SizePlusOne(
            this_._internal_watch_id());
      }
    }
    // bool progress_notify = 4;
    if ((cached_has_bits & 0x00000010u) != 0) {
      if (this_._internal_progress_notify() != 0) {
        total_size += 2;
      }
    }
    // bool prev_kv = 6 [(.versionpb.etcd_version_field) = "3.1"];
    if ((cached_has_bits & 0x00000020u) != 0) {
      if (this_._internal_prev_kv() != 0) {
        total_size += 2;
      }
    }
    // bool fragment = 8 [(.versionpb.etcd_version_field) = "3.4"];
    if ((cached_has_bits & 0x00000040u) != 0) {
      if (this_._internal_fragment() != 0) {
        total_size += 2;
      }
    }
  }
  return this_.MaybeComputeUnknownFieldsSize(total_size,
                                             &this_._impl_._cached_size_);
}

void WatchCreateRequest::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<WatchCreateRequest*>(&to_msg);
  auto& from = static_cast<const WatchCreateRequest&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:etcdserverpb.WatchCreateRequest)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_internal_mutable_filters()->MergeFrom(from._internal_filters());
  cached_has_bits = from._impl_._has_bits_[0];
  if ((cached_has_bits & 0x0000007fu) != 0) {
    if ((cached_has_bits & 0x00000001u) != 0) {
      if (!from._internal_key().empty()) {
        _this->_internal_set_key(from._internal_key());
      } else {
        if (_this->_impl_.key_.IsDefault()) {
          _this->_internal_set_key("");
        }
      }
    }
    if ((cached_has_bits & 0x00000002u) != 0) {
      if (!from._internal_range_end().empty()) {
        _this->_internal_set_range_end(from._internal_range_end());
      } else {
        if (_this->_impl_.range_end_.IsDefault()) {
          _this->_internal_set_range_end("");
        }
      }
    }
    if ((cached_has_bits & 0x00000004u) != 0) {
      if (from._internal_start_revision() != 0) {
        _this->_impl_.start_revision_ = from._impl_.start_revision_;
      }
    }
    if ((cached_has_bits & 0x00000008u) != 0) {
      if (from._internal_watch_id() != 0) {
        _this->_impl_.watch_id_ = from._impl_.watch_id_;
      }
    }
    if ((cached_has_bits & 0x00000010u) != 0) {
      if (from._internal_progress_notify() != 0) {
        _this->_impl_.progress_notify_ = from._impl_.progress_notify_;
      }
    }
    if ((cached_has_bits & 0x00000020u) != 0) {
      if (from._internal_prev_kv() != 0) {
        _this->_impl_.prev_kv_ = from._impl_.prev_kv_;
      }
    }
    if ((cached_has_bits & 0x00000040u) != 0) {
      if (from._internal_fragment() != 0) {
        _this->_impl_.fragment_ = from._impl_.fragment_;
      }
    }
  }
  _this->_impl_._has_bits_[0] |= cached_has_bits;
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void WatchCreateRequest::CopyFrom(const WatchCreateRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:etcdserverpb.WatchCreateRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void WatchCreateRequest::InternalSwap(WatchCreateRequest* PROTOBUF_RESTRICT PROTOBUF_NONNULL other) {
  using ::std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  _impl_.filters_.InternalSwap(&other->_impl_.filters_);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.key_, &other->_impl_.key_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.range_end_, &other->_impl_.range_end_, arena);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(WatchCreateRequest, _impl_.fragment_)
      + sizeof(WatchCreateRequest::_impl_.fragment_)
      - PROTOBUF_FIELD_OFFSET(WatchCreateRequest, _impl_.start_revision_)>(
          reinterpret_cast<char*>(&_impl_.start_revision_),
          reinterpret_cast<char*>(&other->_impl_.start_revision_));
}

::google::protobuf::Metadata WatchCreateRequest::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class WatchCancelRequest::_Internal {
 public:
  using HasBits =
      decltype(::std::declval<WatchCancelRequest>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
      8 * PROTOBUF_FIELD_OFFSET(WatchCancelRequest, _impl_._has_bits_);
};

WatchCancelRequest::WatchCancelRequest(::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, WatchCancelRequest_class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:etcdserverpb.WatchCancelRequest)
}
WatchCancelRequest::WatchCancelRequest(
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const WatchCancelRequest& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, WatchCancelRequest_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(from._impl_) {
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
}
PROTOBUF_NDEBUG_INLINE WatchCancelRequest::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
      : _cached_size_{0} {}

inline void WatchCancelRequest::SharedCtor(::_pb::Arena* PROTOBUF_NULLABLE arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  _impl_.watch_id_ = {};
}
WatchCancelRequest::~WatchCancelRequest() {
  // @@protoc_insertion_point(destructor:etcdserverpb.WatchCancelRequest)
  SharedDtor(*this);
}
inline void WatchCancelRequest::SharedDtor(MessageLite& self) {
  WatchCancelRequest& this_ = static_cast<WatchCancelRequest&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  this_._impl_.~Impl_();
}

inline void* PROTOBUF_NONNULL WatchCancelRequest::PlacementNew_(
    const void* PROTOBUF_NONNULL, void* PROTOBUF_NONNULL mem,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena) {
  return ::new (mem) WatchCancelRequest(arena);
}
constexpr auto WatchCancelRequest::InternalNewImpl_() {
  return ::google::protobuf::internal::MessageCreator::ZeroInit(sizeof(WatchCancelRequest),
                                            alignof(WatchCancelRequest));
}
constexpr auto WatchCancelRequest::InternalGenerateClassData_() {
  return ::google::protobuf::internal::ClassDataFull{
      ::google::protobuf::internal::ClassData{
          &_WatchCancelRequest_default_instance_._instance,
          &_table_.header,
          nullptr,  // OnDemandRegisterArenaDtor
          nullptr,  // IsInitialized
          &WatchCancelRequest::MergeImpl,
          ::google::protobuf::Message::GetNewImpl<WatchCancelRequest>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
          &WatchCancelRequest::SharedDtor,
          ::google::protobuf::Message::GetClearImpl<WatchCancelRequest>(), &WatchCancelRequest::ByteSizeLong,
              &WatchCancelRequest::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
          PROTOBUF_FIELD_OFFSET(WatchCancelRequest, _impl_._cached_size_),
          false,
      },
      &WatchCancelRequest::kDescriptorMethods,
      &descriptor_table_proto_2fetcd_2fetcd_2eproto,
      nullptr,  // tracker
  };
}

PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 const
    ::google::protobuf::internal::ClassDataFull WatchCancelRequest_class_data_ =
        WatchCancelRequest::InternalGenerateClassData_();

PROTOBUF_ATTRIBUTE_WEAK const ::google::protobuf::internal::ClassData* PROTOBUF_NONNULL
WatchCancelRequest::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&WatchCancelRequest_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(WatchCancelRequest_class_data_.tc_table);
  return WatchCancelRequest_class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<0, 1, 0, 0, 2>
WatchCancelRequest::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(WatchCancelRequest, _impl_._has_bits_),
    0, // no _extensions_
    1, 0,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967294,  // skipmap
    offsetof(decltype(_table_), field_entries),
    1,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    WatchCancelRequest_class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::etcdserverpb::WatchCancelRequest>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // int64 watch_id = 1 [(.versionpb.etcd_version_field) = "3.1"];
    {::_pbi::TcParser::SingularVarintNoZag1<::uint64_t, offsetof(WatchCancelRequest, _impl_.watch_id_), 0>(),
     {8, 0, 0, PROTOBUF_FIELD_OFFSET(WatchCancelRequest, _impl_.watch_id_)}},
  }}, {{
    65535, 65535
  }}, {{
    // int64 watch_id = 1 [(.versionpb.etcd_version_field) = "3.1"];
    {PROTOBUF_FIELD_OFFSET(WatchCancelRequest, _impl_.watch_id_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kInt64)},
  }},
  // no aux_entries
  {{
  }},
};
PROTOBUF_NOINLINE void WatchCancelRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:etcdserverpb.WatchCancelRequest)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.watch_id_ = ::int64_t{0};
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::uint8_t* PROTOBUF_NONNULL WatchCancelRequest::_InternalSerialize(
    const ::google::protobuf::MessageLite& base, ::uint8_t* PROTOBUF_NONNULL target,
    ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) {
  const WatchCancelRequest& this_ = static_cast<const WatchCancelRequest&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::uint8_t* PROTOBUF_NONNULL WatchCancelRequest::_InternalSerialize(
    ::uint8_t* PROTOBUF_NONNULL target,
    ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const {
  const WatchCancelRequest& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
  // @@protoc_insertion_point(serialize_to_array_start:etcdserverpb.WatchCancelRequest)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  // int64 watch_id = 1 [(.versionpb.etcd_version_field) = "3.1"];
  if ((this_._impl_._has_bits_[0] & 0x00000001u) != 0) {
    if (this_._internal_watch_id() != 0) {
      target =
          ::google::protobuf::internal::WireFormatLite::WriteInt64ToArrayWithField<1>(
              stream, this_._internal_watch_id(), target);
    }
  }

  if (ABSL_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:etcdserverpb.WatchCancelRequest)
  return target;
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::size_t WatchCancelRequest::ByteSizeLong(const MessageLite& base) {
  const WatchCancelRequest& this_ = static_cast<const WatchCancelRequest&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::size_t WatchCancelRequest::ByteSizeLong() const {
  const WatchCancelRequest& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
  // @@protoc_insertion_point(message_byte_size_start:etcdserverpb.WatchCancelRequest)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void)cached_has_bits;

   {
    // int64 watch_id = 1 [(.versionpb.etcd_version_field) = "3.1"];
    cached_has_bits = this_._impl_._has_bits_[0];
    if ((cached_has_bits & 0x00000001u) != 0) {
      if (this_._internal_watch_id() != 0) {
        total_size += ::_pbi::WireFormatLite::Int64SizePlusOne(
            this_._internal_watch_id());
      }
    }
  }
  return this_.MaybeComputeUnknownFieldsSize(total_size,
                                             &this_._impl_._cached_size_);
}

void WatchCancelRequest::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<WatchCancelRequest*>(&to_msg);
  auto& from = static_cast<const WatchCancelRequest&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:etcdserverpb.WatchCancelRequest)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._impl_._has_bits_[0];
  if ((cached_has_bits & 0x00000001u) != 0) {
    if (from._internal_watch_id() != 0) {
      _this->_impl_.watch_id_ = from._impl_.watch_id_;
    }
  }
  _this->_impl_._has_bits_[0] |= cached_has_bits;
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void WatchCancelRequest::CopyFrom(const WatchCancelRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:etcdserverpb.WatchCancelRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void WatchCancelRequest::InternalSwap(WatchCancelRequest* PROTOBUF_RESTRICT PROTOBUF_NONNULL other) {
  using ::std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  swap(_impl_.watch_id_, other->_impl_.watch_id_);
}

::google::protobuf::Metadata WatchCancelRequest::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class WatchProgressRequest::_Internal {
 public:
};

WatchProgressRequest::WatchProgressRequest(::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::internal::ZeroFieldsBase(arena, WatchProgressRequest_class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::internal::ZeroFieldsBase(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  // @@protoc_insertion_point(arena_constructor:etcdserverpb.WatchProgressRequest)
}
WatchProgressRequest::WatchProgressRequest(
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena,
    const WatchProgressRequest& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::internal::ZeroFieldsBase(arena, WatchProgressRequest_class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::internal::ZeroFieldsBase(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  WatchProgressRequest* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);

  // @@protoc_insertion_point(copy_constructor:etcdserverpb.WatchProgressRequest)
}

inline void* PROTOBUF_NONNULL WatchProgressRequest::PlacementNew_(
    const void* PROTOBUF_NONNULL, void* PROTOBUF_NONNULL mem,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena) {
  return ::new (mem) WatchProgressRequest(arena);
}
constexpr auto WatchProgressRequest::InternalNewImpl_() {
  return ::google::protobuf::internal::MessageCreator::ZeroInit(sizeof(WatchProgressRequest),
                                            alignof(WatchProgressRequest));
}
constexpr auto WatchProgressRequest::InternalGenerateClassData_() {
  return ::google::protobuf::internal::ClassDataFull{
      ::google::protobuf::internal::ClassData{
          &_WatchProgressRequest_default_instance_._instance,
          &_table_.header,
          nullptr,  // OnDemandRegisterArenaDtor
          nullptr,  // IsInitialized
          &WatchProgressRequest::MergeImpl,
          ::google::protobuf::internal::ZeroFieldsBase::GetNewImpl<WatchProgressRequest>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
          &WatchProgressRequest::SharedDtor,
          ::google::protobuf::internal::ZeroFieldsBase::GetClearImpl<WatchProgressRequest>(), &WatchProgressRequest::ByteSizeLong,
              &WatchProgressRequest::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
          PROTOBUF_FIELD_OFFSET(WatchProgressRequest, _impl_._cached_size_),
          false,
      },
      &WatchProgressRequest::kDescriptorMethods,
      &descriptor_table_proto_2fetcd_2fetcd_2eproto,
      nullptr,  // tracker
  };
}

PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 const
    ::google::protobuf::internal::ClassDataFull WatchProgressRequest_class_data_ =
        WatchProgressRequest::InternalGenerateClassData_();

PROTOBUF_ATTRIBUTE_WEAK const ::google::protobuf::internal::ClassData* PROTOBUF_NONNULL
WatchProgressRequest::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&WatchProgressRequest_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(WatchProgressRequest_class_data_.tc_table);
  return WatchProgressRequest_class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<0, 0, 0, 0, 2>
WatchProgressRequest::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    0, 0,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967295,  // skipmap
    offsetof(decltype(_table_), field_names),  // no field_entries
    0,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    WatchProgressRequest_class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::etcdserverpb::WatchProgressRequest>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
  }}, {{
    65535, 65535
  }}, // no field_entries, or aux_entries
  {{
  }},
};







::google::protobuf::Metadata WatchProgressRequest::GetMetadata() const {
  return ::google::protobuf::internal::ZeroFieldsBase::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class WatchResponse::_Internal {
 public:
  using HasBits =
      decltype(::std::declval<WatchResponse>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
      8 * PROTOBUF_FIELD_OFFSET(WatchResponse, _impl_._has_bits_);
};

void WatchResponse::clear_events() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.events_.Clear();
}
WatchResponse::WatchResponse(::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, WatchResponse_class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:etcdserverpb.WatchResponse)
}
PROTOBUF_NDEBUG_INLINE WatchResponse::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const Impl_& from,
    const ::etcdserverpb::WatchResponse& from_msg)
      : _has_bits_{from._has_bits_},
        _cached_size_{0},
        events_{visibility, arena, from.events_},
        cancel_reason_(arena, from.cancel_reason_) {}

WatchResponse::WatchResponse(
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena,
    const WatchResponse& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, WatchResponse_class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  WatchResponse* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);
  ::uint32_t cached_has_bits = _impl_._has_bits_[0];
  _impl_.header_ = ((cached_has_bits & 0x00000002u) != 0)
                ? ::google::protobuf::Message::CopyConstruct(arena, *from._impl_.header_)
                : nullptr;
  ::memcpy(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, watch_id_),
           reinterpret_cast<const char *>(&from._impl_) +
               offsetof(Impl_, watch_id_),
           offsetof(Impl_, fragment_) -
               offsetof(Impl_, watch_id_) +
               sizeof(Impl_::fragment_));

  // @@protoc_insertion_point(copy_constructor:etcdserverpb.WatchResponse)
}
PROTOBUF_NDEBUG_INLINE WatchResponse::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
      : _cached_size_{0},
        events_{visibility, arena},
        cancel_reason_(arena) {}

inline void WatchResponse::SharedCtor(::_pb::Arena* PROTOBUF_NULLABLE arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, header_),
           0,
           offsetof(Impl_, fragment_) -
               offsetof(Impl_, header_) +
               sizeof(Impl_::fragment_));
}
WatchResponse::~WatchResponse() {
  // @@protoc_insertion_point(destructor:etcdserverpb.WatchResponse)
  SharedDtor(*this);
}
inline void WatchResponse::SharedDtor(MessageLite& self) {
  WatchResponse& this_ = static_cast<WatchResponse&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  this_._impl_.cancel_reason_.Destroy();
  delete this_._impl_.header_;
  this_._impl_.~Impl_();
}

inline void* PROTOBUF_NONNULL WatchResponse::PlacementNew_(
    const void* PROTOBUF_NONNULL, void* PROTOBUF_NONNULL mem,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena) {
  return ::new (mem) WatchResponse(arena);
}
constexpr auto WatchResponse::InternalNewImpl_() {
  constexpr auto arena_bits = ::google::protobuf::internal::EncodePlacementArenaOffsets({
      PROTOBUF_FIELD_OFFSET(WatchResponse, _impl_.events_) +
          decltype(WatchResponse::_impl_.events_)::
              InternalGetArenaOffset(
                  ::google::protobuf::Message::internal_visibility()),
  });
  if (arena_bits.has_value()) {
    return ::google::protobuf::internal::MessageCreator::CopyInit(
        sizeof(WatchResponse), alignof(WatchResponse), *arena_bits);
  } else {
    return ::google::protobuf::internal::MessageCreator(&WatchResponse::PlacementNew_,
                                 sizeof(WatchResponse),
                                 alignof(WatchResponse));
  }
}
constexpr auto WatchResponse::InternalGenerateClassData_() {
  return ::google::protobuf::internal::ClassDataFull{
      ::google::protobuf::internal::ClassData{
          &_WatchResponse_default_instance_._instance,
          &_table_.header,
          nullptr,  // OnDemandRegisterArenaDtor
          nullptr,  // IsInitialized
          &WatchResponse::MergeImpl,
          ::google::protobuf::Message::GetNewImpl<WatchResponse>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
          &WatchResponse::SharedDtor,
          ::google::protobuf::Message::GetClearImpl<WatchResponse>(), &WatchResponse::ByteSizeLong,
              &WatchResponse::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
          PROTOBUF_FIELD_OFFSET(WatchResponse, _impl_._cached_size_),
          false,
      },
      &WatchResponse::kDescriptorMethods,
      &descriptor_table_proto_2fetcd_2fetcd_2eproto,
      nullptr,  // tracker
  };
}

PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 const
    ::google::protobuf::internal::ClassDataFull WatchResponse_class_data_ =
        WatchResponse::InternalGenerateClassData_();

PROTOBUF_ATTRIBUTE_WEAK const ::google::protobuf::internal::ClassData* PROTOBUF_NONNULL
WatchResponse::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&WatchResponse_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(WatchResponse_class_data_.tc_table);
  return WatchResponse_class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<4, 8, 2, 56, 2>
WatchResponse::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(WatchResponse, _impl_._has_bits_),
    0, // no _extensions_
    11, 120,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294966144,  // skipmap
    offsetof(decltype(_table_), field_entries),
    8,  // num_field_entries
    2,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    WatchResponse_class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::etcdserverpb::WatchResponse>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
    // .etcdserverpb.ResponseHeader header = 1;
    {::_pbi::TcParser::FastMtS1,
     {10, 1, 0, PROTOBUF_FIELD_OFFSET(WatchResponse, _impl_.header_)}},
    // int64 watch_id = 2;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint64_t, offsetof(WatchResponse, _impl_.watch_id_), 2>(),
     {16, 2, 0, PROTOBUF_FIELD_OFFSET(WatchResponse, _impl_.watch_id_)}},
    // bool created = 3;
    {::_pbi::TcParser::SingularVarintNoZag1<bool, offsetof(WatchResponse, _impl_.created_), 4>(),
     {24, 4, 0, PROTOBUF_FIELD_OFFSET(WatchResponse, _impl_.created_)}},
    // bool canceled = 4;
    {::_pbi::TcParser::SingularVarintNoZag1<bool, offsetof(WatchResponse, _impl_.canceled_), 5>(),
     {32, 5, 0, PROTOBUF_FIELD_OFFSET(WatchResponse, _impl_.canceled_)}},
    // int64 compact_revision = 5;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint64_t, offsetof(WatchResponse, _impl_.compact_revision_), 3>(),
     {40, 3, 0, PROTOBUF_FIELD_OFFSET(WatchResponse, _impl_.compact_revision_)}},
    // string cancel_reason = 6 [(.versionpb.etcd_version_field) = "3.4"];
    {::_pbi::TcParser::FastUS1,
     {50, 0, 0, PROTOBUF_FIELD_OFFSET(WatchResponse, _impl_.cancel_reason_)}},
    // bool fragment = 7 [(.versionpb.etcd_version_field) = "3.4"];
    {::_pbi::TcParser::SingularVarintNoZag1<bool, offsetof(WatchResponse, _impl_.fragment_), 6>(),
     {56, 6, 0, PROTOBUF_FIELD_OFFSET(WatchResponse, _impl_.fragment_)}},
    {::_pbi::TcParser::MiniParse, {}},
    {::_pbi::TcParser::MiniParse, {}},
    {::_pbi::TcParser::MiniParse, {}},
    // repeated .mvccpb.Event events = 11;
    {::_pbi::TcParser::FastMtR1,
     {90, 63, 1, PROTOBUF_FIELD_OFFSET(WatchResponse, _impl_.events_)}},
    {::_pbi::TcParser::MiniParse, {}},
    {::_pbi::TcParser::MiniParse, {}},
    {::_pbi::TcParser::MiniParse, {}},
    {::_pbi::TcParser::MiniParse, {}},
  }}, {{
    65535, 65535
  }}, {{
    // .etcdserverpb.ResponseHeader header = 1;
    {PROTOBUF_FIELD_OFFSET(WatchResponse, _impl_.header_), _Internal::kHasBitsOffset + 1, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
    // int64 watch_id = 2;
    {PROTOBUF_FIELD_OFFSET(WatchResponse, _impl_.watch_id_), _Internal::kHasBitsOffset + 2, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kInt64)},
    // bool created = 3;
    {PROTOBUF_FIELD_OFFSET(WatchResponse, _impl_.created_), _Internal::kHasBitsOffset + 4, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kBool)},
    // bool canceled = 4;
    {PROTOBUF_FIELD_OFFSET(WatchResponse, _impl_.canceled_), _Internal::kHasBitsOffset + 5, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kBool)},
    // int64 compact_revision = 5;
    {PROTOBUF_FIELD_OFFSET(WatchResponse, _impl_.compact_revision_), _Internal::kHasBitsOffset + 3, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kInt64)},
    // string cancel_reason = 6 [(.versionpb.etcd_version_field) = "3.4"];
    {PROTOBUF_FIELD_OFFSET(WatchResponse, _impl_.cancel_reason_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // bool fragment = 7 [(.versionpb.etcd_version_field) = "3.4"];
    {PROTOBUF_FIELD_OFFSET(WatchResponse, _impl_.fragment_), _Internal::kHasBitsOffset + 6, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kBool)},
    // repeated .mvccpb.Event events = 11;
    {PROTOBUF_FIELD_OFFSET(WatchResponse, _impl_.events_), -1, 1,
    (0 | ::_fl::kFcRepeated | ::_fl::kMessage | ::_fl::kTvTable)},
  }},
  {{
      {::_pbi::TcParser::GetTable<::etcdserverpb::ResponseHeader>()},
      {::_pbi::TcParser::GetTable<::mvccpb::Event>()},
  }},
  {{
    "\32\0\0\0\0\0\15\0\0\0\0\0\0\0\0\0"
    "etcdserverpb.WatchResponse"
    "cancel_reason"
  }},
};
PROTOBUF_NOINLINE void WatchResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:etcdserverpb.WatchResponse)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.events_.Clear();
  cached_has_bits = _impl_._has_bits_[0];
  if ((cached_has_bits & 0x00000003u) != 0) {
    if ((cached_has_bits & 0x00000001u) != 0) {
      _impl_.cancel_reason_.ClearNonDefaultToEmpty();
    }
    if ((cached_has_bits & 0x00000002u) != 0) {
      ABSL_DCHECK(_impl_.header_ != nullptr);
      _impl_.header_->Clear();
    }
  }
  if ((cached_has_bits & 0x0000007cu) != 0) {
    ::memset(&_impl_.watch_id_, 0, static_cast<::size_t>(
        reinterpret_cast<char*>(&_impl_.fragment_) -
        reinterpret_cast<char*>(&_impl_.watch_id_)) + sizeof(_impl_.fragment_));
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::uint8_t* PROTOBUF_NONNULL WatchResponse::_InternalSerialize(
    const ::google::protobuf::MessageLite& base, ::uint8_t* PROTOBUF_NONNULL target,
    ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) {
  const WatchResponse& this_ = static_cast<const WatchResponse&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::uint8_t* PROTOBUF_NONNULL WatchResponse::_InternalSerialize(
    ::uint8_t* PROTOBUF_NONNULL target,
    ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const {
  const WatchResponse& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
  // @@protoc_insertion_point(serialize_to_array_start:etcdserverpb.WatchResponse)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  cached_has_bits = this_._impl_._has_bits_[0];
  // .etcdserverpb.ResponseHeader header = 1;
  if ((cached_has_bits & 0x00000002u) != 0) {
    target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
        1, *this_._impl_.header_, this_._impl_.header_->GetCachedSize(), target,
        stream);
  }

  // int64 watch_id = 2;
  if ((cached_has_bits & 0x00000004u) != 0) {
    if (this_._internal_watch_id() != 0) {
      target =
          ::google::protobuf::internal::WireFormatLite::WriteInt64ToArrayWithField<2>(
              stream, this_._internal_watch_id(), target);
    }
  }

  // bool created = 3;
  if ((cached_has_bits & 0x00000010u) != 0) {
    if (this_._internal_created() != 0) {
      target = stream->EnsureSpace(target);
      target = ::_pbi::WireFormatLite::WriteBoolToArray(
          3, this_._internal_created(), target);
    }
  }

  // bool canceled = 4;
  if ((cached_has_bits & 0x00000020u) != 0) {
    if (this_._internal_canceled() != 0) {
      target = stream->EnsureSpace(target);
      target = ::_pbi::WireFormatLite::WriteBoolToArray(
          4, this_._internal_canceled(), target);
    }
  }

  // int64 compact_revision = 5;
  if ((cached_has_bits & 0x00000008u) != 0) {
    if (this_._internal_compact_revision() != 0) {
      target =
          ::google::protobuf::internal::WireFormatLite::WriteInt64ToArrayWithField<5>(
              stream, this_._internal_compact_revision(), target);
    }
  }

  // string cancel_reason = 6 [(.versionpb.etcd_version_field) = "3.4"];
  if ((cached_has_bits & 0x00000001u) != 0) {
    if (!this_._internal_cancel_reason().empty()) {
      const ::std::string& _s = this_._internal_cancel_reason();
      ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
          _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "etcdserverpb.WatchResponse.cancel_reason");
      target = stream->WriteStringMaybeAliased(6, _s, target);
    }
  }

  // bool fragment = 7 [(.versionpb.etcd_version_field) = "3.4"];
  if ((cached_has_bits & 0x00000040u) != 0) {
    if (this_._internal_fragment() != 0) {
      target = stream->EnsureSpace(target);
      target = ::_pbi::WireFormatLite::WriteBoolToArray(
          7, this_._internal_fragment(), target);
    }
  }

  // repeated .mvccpb.Event events = 11;
  for (unsigned i = 0, n = static_cast<unsigned>(
                           this_._internal_events_size());
       i < n; i++) {
    const auto& repfield = this_._internal_events().Get(i);
    target =
        ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
            11, repfield, repfield.GetCachedSize(),
            target, stream);
  }

  if (ABSL_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:etcdserverpb.WatchResponse)
  return target;
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::size_t WatchResponse::ByteSizeLong(const MessageLite& base) {
  const WatchResponse& this_ = static_cast<const WatchResponse&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::size_t WatchResponse::ByteSizeLong() const {
  const WatchResponse& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
  // @@protoc_insertion_point(message_byte_size_start:etcdserverpb.WatchResponse)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void)cached_has_bits;

  ::_pbi::Prefetch5LinesFrom7Lines(&this_);
   {
    // repeated .mvccpb.Event events = 11;
    {
      total_size += 1UL * this_._internal_events_size();
      for (const auto& msg : this_._internal_events()) {
        total_size += ::google::protobuf::internal::WireFormatLite::MessageSize(msg);
      }
    }
  }
  cached_has_bits = this_._impl_._has_bits_[0];
  if ((cached_has_bits & 0x0000007fu) != 0) {
    // string cancel_reason = 6 [(.versionpb.etcd_version_field) = "3.4"];
    if ((cached_has_bits & 0x00000001u) != 0) {
      if (!this_._internal_cancel_reason().empty()) {
        total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                        this_._internal_cancel_reason());
      }
    }
    // .etcdserverpb.ResponseHeader header = 1;
    if ((cached_has_bits & 0x00000002u) != 0) {
      total_size += 1 +
                    ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.header_);
    }
    // int64 watch_id = 2;
    if ((cached_has_bits & 0x00000004u) != 0) {
      if (this_._internal_watch_id() != 0) {
        total_size += ::_pbi::WireFormatLite::Int64SizePlusOne(
            this_._internal_watch_id());
      }
    }
    // int64 compact_revision = 5;
    if ((cached_has_bits & 0x00000008u) != 0) {
      if (this_._internal_compact_revision() != 0) {
        total_size += ::_pbi::WireFormatLite::Int64SizePlusOne(
            this_._internal_compact_revision());
      }
    }
    // bool created = 3;
    if ((cached_has_bits & 0x00000010u) != 0) {
      if (this_._internal_created() != 0) {
        total_size += 2;
      }
    }
    // bool canceled = 4;
    if ((cached_has_bits & 0x00000020u) != 0) {
      if (this_._internal_canceled() != 0) {
        total_size += 2;
      }
    }
    // bool fragment = 7 [(.versionpb.etcd_version_field) = "3.4"];
    if ((cached_has_bits & 0x00000040u) != 0) {
      if (this_._internal_fragment() != 0) {
        total_size += 2;
      }
    }
  }
  return this_.MaybeComputeUnknownFieldsSize(total_size,
                                             &this_._impl_._cached_size_);
}

void WatchResponse::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<WatchResponse*>(&to_msg);
  auto& from = static_cast<const WatchResponse&>(from_msg);
  ::google::protobuf::Arena* arena = _this->GetArena();
  // @@protoc_insertion_point(class_specific_merge_from_start:etcdserverpb.WatchResponse)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_internal_mutable_events()->MergeFrom(
      from._internal_events());
  cached_has_bits = from._impl_._has_bits_[0];
  if ((cached_has_bits & 0x0000007fu) != 0) {
    if ((cached_has_bits & 0x00000001u) != 0) {
      if (!from._internal_cancel_reason().empty()) {
        _this->_internal_set_cancel_reason(from._internal_cancel_reason());
      } else {
        if (_this->_impl_.cancel_reason_.IsDefault()) {
          _this->_internal_set_cancel_reason("");
        }
      }
    }
    if ((cached_has_bits & 0x00000002u) != 0) {
      ABSL_DCHECK(from._impl_.header_ != nullptr);
      if (_this->_impl_.header_ == nullptr) {
        _this->_impl_.header_ = ::google::protobuf::Message::CopyConstruct(arena, *from._impl_.header_);
      } else {
        _this->_impl_.header_->MergeFrom(*from._impl_.header_);
      }
    }
    if ((cached_has_bits & 0x00000004u) != 0) {
      if (from._internal_watch_id() != 0) {
        _this->_impl_.watch_id_ = from._impl_.watch_id_;
      }
    }
    if ((cached_has_bits & 0x00000008u) != 0) {
      if (from._internal_compact_revision() != 0) {
        _this->_impl_.compact_revision_ = from._impl_.compact_revision_;
      }
    }
    if ((cached_has_bits & 0x00000010u) != 0) {
      if (from._internal_created() != 0) {
        _this->_impl_.created_ = from._impl_.created_;
      }
    }
    if ((cached_has_bits & 0x00000020u) != 0) {
      if (from._internal_canceled() != 0) {
        _this->_impl_.canceled_ = from._impl_.canceled_;
      }
    }
    if ((cached_has_bits & 0x00000040u) != 0) {
      if (from._internal_fragment() != 0) {
        _this->_impl_.fragment_ = from._impl_.fragment_;
      }
    }
  }
  _this->_impl_._has_bits_[0] |= cached_has_bits;
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void WatchResponse::CopyFrom(const WatchResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:etcdserverpb.WatchResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void WatchResponse::InternalSwap(WatchResponse* PROTOBUF_RESTRICT PROTOBUF_NONNULL other) {
  using ::std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  _impl_.events_.InternalSwap(&other->_impl_.events_);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.cancel_reason_, &other->_impl_.cancel_reason_, arena);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(WatchResponse, _impl_.fragment_)
      + sizeof(WatchResponse::_impl_.fragment_)
      - PROTOBUF_FIELD_OFFSET(WatchResponse, _impl_.header_)>(
          reinterpret_cast<char*>(&_impl_.header_),
          reinterpret_cast<char*>(&other->_impl_.header_));
}

::google::protobuf::Metadata WatchResponse::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class LeaseGrantRequest::_Internal {
 public:
  using HasBits =
      decltype(::std::declval<LeaseGrantRequest>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
      8 * PROTOBUF_FIELD_OFFSET(LeaseGrantRequest, _impl_._has_bits_);
};

LeaseGrantRequest::LeaseGrantRequest(::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, LeaseGrantRequest_class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:etcdserverpb.LeaseGrantRequest)
}
LeaseGrantRequest::LeaseGrantRequest(
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const LeaseGrantRequest& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, LeaseGrantRequest_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(from._impl_) {
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
}
PROTOBUF_NDEBUG_INLINE LeaseGrantRequest::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
      : _cached_size_{0} {}

inline void LeaseGrantRequest::SharedCtor(::_pb::Arena* PROTOBUF_NULLABLE arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, ttl_),
           0,
           offsetof(Impl_, id_) -
               offsetof(Impl_, ttl_) +
               sizeof(Impl_::id_));
}
LeaseGrantRequest::~LeaseGrantRequest() {
  // @@protoc_insertion_point(destructor:etcdserverpb.LeaseGrantRequest)
  SharedDtor(*this);
}
inline void LeaseGrantRequest::SharedDtor(MessageLite& self) {
  LeaseGrantRequest& this_ = static_cast<LeaseGrantRequest&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  this_._impl_.~Impl_();
}

inline void* PROTOBUF_NONNULL LeaseGrantRequest::PlacementNew_(
    const void* PROTOBUF_NONNULL, void* PROTOBUF_NONNULL mem,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena) {
  return ::new (mem) LeaseGrantRequest(arena);
}
constexpr auto LeaseGrantRequest::InternalNewImpl_() {
  return ::google::protobuf::internal::MessageCreator::ZeroInit(sizeof(LeaseGrantRequest),
                                            alignof(LeaseGrantRequest));
}
constexpr auto LeaseGrantRequest::InternalGenerateClassData_() {
  return ::google::protobuf::internal::ClassDataFull{
      ::google::protobuf::internal::ClassData{
          &_LeaseGrantRequest_default_instance_._instance,
          &_table_.header,
          nullptr,  // OnDemandRegisterArenaDtor
          nullptr,  // IsInitialized
          &LeaseGrantRequest::MergeImpl,
          ::google::protobuf::Message::GetNewImpl<LeaseGrantRequest>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
          &LeaseGrantRequest::SharedDtor,
          ::google::protobuf::Message::GetClearImpl<LeaseGrantRequest>(), &LeaseGrantRequest::ByteSizeLong,
              &LeaseGrantRequest::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
          PROTOBUF_FIELD_OFFSET(LeaseGrantRequest, _impl_._cached_size_),
          false,
      },
      &LeaseGrantRequest::kDescriptorMethods,
      &descriptor_table_proto_2fetcd_2fetcd_2eproto,
      nullptr,  // tracker
  };
}

PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 const
    ::google::protobuf::internal::ClassDataFull LeaseGrantRequest_class_data_ =
        LeaseGrantRequest::InternalGenerateClassData_();

PROTOBUF_ATTRIBUTE_WEAK const ::google::protobuf::internal::ClassData* PROTOBUF_NONNULL
LeaseGrantRequest::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&LeaseGrantRequest_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(LeaseGrantRequest_class_data_.tc_table);
  return LeaseGrantRequest_class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<1, 2, 0, 0, 2>
LeaseGrantRequest::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(LeaseGrantRequest, _impl_._has_bits_),
    0, // no _extensions_
    2, 8,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967292,  // skipmap
    offsetof(decltype(_table_), field_entries),
    2,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    LeaseGrantRequest_class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::etcdserverpb::LeaseGrantRequest>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // int64 ID = 2;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint64_t, offsetof(LeaseGrantRequest, _impl_.id_), 1>(),
     {16, 1, 0, PROTOBUF_FIELD_OFFSET(LeaseGrantRequest, _impl_.id_)}},
    // int64 TTL = 1;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint64_t, offsetof(LeaseGrantRequest, _impl_.ttl_), 0>(),
     {8, 0, 0, PROTOBUF_FIELD_OFFSET(LeaseGrantRequest, _impl_.ttl_)}},
  }}, {{
    65535, 65535
  }}, {{
    // int64 TTL = 1;
    {PROTOBUF_FIELD_OFFSET(LeaseGrantRequest, _impl_.ttl_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kInt64)},
    // int64 ID = 2;
    {PROTOBUF_FIELD_OFFSET(LeaseGrantRequest, _impl_.id_), _Internal::kHasBitsOffset + 1, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kInt64)},
  }},
  // no aux_entries
  {{
  }},
};
PROTOBUF_NOINLINE void LeaseGrantRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:etcdserverpb.LeaseGrantRequest)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if ((cached_has_bits & 0x00000003u) != 0) {
    ::memset(&_impl_.ttl_, 0, static_cast<::size_t>(
        reinterpret_cast<char*>(&_impl_.id_) -
        reinterpret_cast<char*>(&_impl_.ttl_)) + sizeof(_impl_.id_));
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::uint8_t* PROTOBUF_NONNULL LeaseGrantRequest::_InternalSerialize(
    const ::google::protobuf::MessageLite& base, ::uint8_t* PROTOBUF_NONNULL target,
    ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) {
  const LeaseGrantRequest& this_ = static_cast<const LeaseGrantRequest&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::uint8_t* PROTOBUF_NONNULL LeaseGrantRequest::_InternalSerialize(
    ::uint8_t* PROTOBUF_NONNULL target,
    ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const {
  const LeaseGrantRequest& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
  // @@protoc_insertion_point(serialize_to_array_start:etcdserverpb.LeaseGrantRequest)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  // int64 TTL = 1;
  if ((this_._impl_._has_bits_[0] & 0x00000001u) != 0) {
    if (this_._internal_ttl() != 0) {
      target =
          ::google::protobuf::internal::WireFormatLite::WriteInt64ToArrayWithField<1>(
              stream, this_._internal_ttl(), target);
    }
  }

  // int64 ID = 2;
  if ((this_._impl_._has_bits_[0] & 0x00000002u) != 0) {
    if (this_._internal_id() != 0) {
      target =
          ::google::protobuf::internal::WireFormatLite::WriteInt64ToArrayWithField<2>(
              stream, this_._internal_id(), target);
    }
  }

  if (ABSL_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:etcdserverpb.LeaseGrantRequest)
  return target;
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::size_t LeaseGrantRequest::ByteSizeLong(const MessageLite& base) {
  const LeaseGrantRequest& this_ = static_cast<const LeaseGrantRequest&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::size_t LeaseGrantRequest::ByteSizeLong() const {
  const LeaseGrantRequest& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
  // @@protoc_insertion_point(message_byte_size_start:etcdserverpb.LeaseGrantRequest)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void)cached_has_bits;

  ::_pbi::Prefetch5LinesFrom7Lines(&this_);
  cached_has_bits = this_._impl_._has_bits_[0];
  if ((cached_has_bits & 0x00000003u) != 0) {
    // int64 TTL = 1;
    if ((cached_has_bits & 0x00000001u) != 0) {
      if (this_._internal_ttl() != 0) {
        total_size += ::_pbi::WireFormatLite::Int64SizePlusOne(
            this_._internal_ttl());
      }
    }
    // int64 ID = 2;
    if ((cached_has_bits & 0x00000002u) != 0) {
      if (this_._internal_id() != 0) {
        total_size += ::_pbi::WireFormatLite::Int64SizePlusOne(
            this_._internal_id());
      }
    }
  }
  return this_.MaybeComputeUnknownFieldsSize(total_size,
                                             &this_._impl_._cached_size_);
}

void LeaseGrantRequest::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<LeaseGrantRequest*>(&to_msg);
  auto& from = static_cast<const LeaseGrantRequest&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:etcdserverpb.LeaseGrantRequest)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._impl_._has_bits_[0];
  if ((cached_has_bits & 0x00000003u) != 0) {
    if ((cached_has_bits & 0x00000001u) != 0) {
      if (from._internal_ttl() != 0) {
        _this->_impl_.ttl_ = from._impl_.ttl_;
      }
    }
    if ((cached_has_bits & 0x00000002u) != 0) {
      if (from._internal_id() != 0) {
        _this->_impl_.id_ = from._impl_.id_;
      }
    }
  }
  _this->_impl_._has_bits_[0] |= cached_has_bits;
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void LeaseGrantRequest::CopyFrom(const LeaseGrantRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:etcdserverpb.LeaseGrantRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void LeaseGrantRequest::InternalSwap(LeaseGrantRequest* PROTOBUF_RESTRICT PROTOBUF_NONNULL other) {
  using ::std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(LeaseGrantRequest, _impl_.id_)
      + sizeof(LeaseGrantRequest::_impl_.id_)
      - PROTOBUF_FIELD_OFFSET(LeaseGrantRequest, _impl_.ttl_)>(
          reinterpret_cast<char*>(&_impl_.ttl_),
          reinterpret_cast<char*>(&other->_impl_.ttl_));
}

::google::protobuf::Metadata LeaseGrantRequest::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class LeaseGrantResponse::_Internal {
 public:
  using HasBits =
      decltype(::std::declval<LeaseGrantResponse>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
      8 * PROTOBUF_FIELD_OFFSET(LeaseGrantResponse, _impl_._has_bits_);
};

LeaseGrantResponse::LeaseGrantResponse(::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, LeaseGrantResponse_class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:etcdserverpb.LeaseGrantResponse)
}
PROTOBUF_NDEBUG_INLINE LeaseGrantResponse::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const Impl_& from,
    const ::etcdserverpb::LeaseGrantResponse& from_msg)
      : _has_bits_{from._has_bits_},
        _cached_size_{0},
        error_(arena, from.error_) {}

LeaseGrantResponse::LeaseGrantResponse(
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena,
    const LeaseGrantResponse& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, LeaseGrantResponse_class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  LeaseGrantResponse* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);
  ::uint32_t cached_has_bits = _impl_._has_bits_[0];
  _impl_.header_ = ((cached_has_bits & 0x00000002u) != 0)
                ? ::google::protobuf::Message::CopyConstruct(arena, *from._impl_.header_)
                : nullptr;
  ::memcpy(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, id_),
           reinterpret_cast<const char *>(&from._impl_) +
               offsetof(Impl_, id_),
           offsetof(Impl_, ttl_) -
               offsetof(Impl_, id_) +
               sizeof(Impl_::ttl_));

  // @@protoc_insertion_point(copy_constructor:etcdserverpb.LeaseGrantResponse)
}
PROTOBUF_NDEBUG_INLINE LeaseGrantResponse::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
      : _cached_size_{0},
        error_(arena) {}

inline void LeaseGrantResponse::SharedCtor(::_pb::Arena* PROTOBUF_NULLABLE arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, header_),
           0,
           offsetof(Impl_, ttl_) -
               offsetof(Impl_, header_) +
               sizeof(Impl_::ttl_));
}
LeaseGrantResponse::~LeaseGrantResponse() {
  // @@protoc_insertion_point(destructor:etcdserverpb.LeaseGrantResponse)
  SharedDtor(*this);
}
inline void LeaseGrantResponse::SharedDtor(MessageLite& self) {
  LeaseGrantResponse& this_ = static_cast<LeaseGrantResponse&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  this_._impl_.error_.Destroy();
  delete this_._impl_.header_;
  this_._impl_.~Impl_();
}

inline void* PROTOBUF_NONNULL LeaseGrantResponse::PlacementNew_(
    const void* PROTOBUF_NONNULL, void* PROTOBUF_NONNULL mem,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena) {
  return ::new (mem) LeaseGrantResponse(arena);
}
constexpr auto LeaseGrantResponse::InternalNewImpl_() {
  return ::google::protobuf::internal::MessageCreator::CopyInit(sizeof(LeaseGrantResponse),
                                            alignof(LeaseGrantResponse));
}
constexpr auto LeaseGrantResponse::InternalGenerateClassData_() {
  return ::google::protobuf::internal::ClassDataFull{
      ::google::protobuf::internal::ClassData{
          &_LeaseGrantResponse_default_instance_._instance,
          &_table_.header,
          nullptr,  // OnDemandRegisterArenaDtor
          nullptr,  // IsInitialized
          &LeaseGrantResponse::MergeImpl,
          ::google::protobuf::Message::GetNewImpl<LeaseGrantResponse>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
          &LeaseGrantResponse::SharedDtor,
          ::google::protobuf::Message::GetClearImpl<LeaseGrantResponse>(), &LeaseGrantResponse::ByteSizeLong,
              &LeaseGrantResponse::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
          PROTOBUF_FIELD_OFFSET(LeaseGrantResponse, _impl_._cached_size_),
          false,
      },
      &LeaseGrantResponse::kDescriptorMethods,
      &descriptor_table_proto_2fetcd_2fetcd_2eproto,
      nullptr,  // tracker
  };
}

PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 const
    ::google::protobuf::internal::ClassDataFull LeaseGrantResponse_class_data_ =
        LeaseGrantResponse::InternalGenerateClassData_();

PROTOBUF_ATTRIBUTE_WEAK const ::google::protobuf::internal::ClassData* PROTOBUF_NONNULL
LeaseGrantResponse::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&LeaseGrantResponse_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(LeaseGrantResponse_class_data_.tc_table);
  return LeaseGrantResponse_class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<2, 4, 1, 45, 2>
LeaseGrantResponse::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(LeaseGrantResponse, _impl_._has_bits_),
    0, // no _extensions_
    4, 24,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967280,  // skipmap
    offsetof(decltype(_table_), field_entries),
    4,  // num_field_entries
    1,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    LeaseGrantResponse_class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::etcdserverpb::LeaseGrantResponse>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // string error = 4;
    {::_pbi::TcParser::FastUS1,
     {34, 0, 0, PROTOBUF_FIELD_OFFSET(LeaseGrantResponse, _impl_.error_)}},
    // .etcdserverpb.ResponseHeader header = 1;
    {::_pbi::TcParser::FastMtS1,
     {10, 1, 0, PROTOBUF_FIELD_OFFSET(LeaseGrantResponse, _impl_.header_)}},
    // int64 ID = 2;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint64_t, offsetof(LeaseGrantResponse, _impl_.id_), 2>(),
     {16, 2, 0, PROTOBUF_FIELD_OFFSET(LeaseGrantResponse, _impl_.id_)}},
    // int64 TTL = 3;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint64_t, offsetof(LeaseGrantResponse, _impl_.ttl_), 3>(),
     {24, 3, 0, PROTOBUF_FIELD_OFFSET(LeaseGrantResponse, _impl_.ttl_)}},
  }}, {{
    65535, 65535
  }}, {{
    // .etcdserverpb.ResponseHeader header = 1;
    {PROTOBUF_FIELD_OFFSET(LeaseGrantResponse, _impl_.header_), _Internal::kHasBitsOffset + 1, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
    // int64 ID = 2;
    {PROTOBUF_FIELD_OFFSET(LeaseGrantResponse, _impl_.id_), _Internal::kHasBitsOffset + 2, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kInt64)},
    // int64 TTL = 3;
    {PROTOBUF_FIELD_OFFSET(LeaseGrantResponse, _impl_.ttl_), _Internal::kHasBitsOffset + 3, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kInt64)},
    // string error = 4;
    {PROTOBUF_FIELD_OFFSET(LeaseGrantResponse, _impl_.error_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kUtf8String | ::_fl::kRepAString)},
  }},
  {{
      {::_pbi::TcParser::GetTable<::etcdserverpb::ResponseHeader>()},
  }},
  {{
    "\37\0\0\0\5\0\0\0"
    "etcdserverpb.LeaseGrantResponse"
    "error"
  }},
};
PROTOBUF_NOINLINE void LeaseGrantResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:etcdserverpb.LeaseGrantResponse)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if ((cached_has_bits & 0x00000003u) != 0) {
    if ((cached_has_bits & 0x00000001u) != 0) {
      _impl_.error_.ClearNonDefaultToEmpty();
    }
    if ((cached_has_bits & 0x00000002u) != 0) {
      ABSL_DCHECK(_impl_.header_ != nullptr);
      _impl_.header_->Clear();
    }
  }
  if ((cached_has_bits & 0x0000000cu) != 0) {
    ::memset(&_impl_.id_, 0, static_cast<::size_t>(
        reinterpret_cast<char*>(&_impl_.ttl_) -
        reinterpret_cast<char*>(&_impl_.id_)) + sizeof(_impl_.ttl_));
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::uint8_t* PROTOBUF_NONNULL LeaseGrantResponse::_InternalSerialize(
    const ::google::protobuf::MessageLite& base, ::uint8_t* PROTOBUF_NONNULL target,
    ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) {
  const LeaseGrantResponse& this_ = static_cast<const LeaseGrantResponse&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::uint8_t* PROTOBUF_NONNULL LeaseGrantResponse::_InternalSerialize(
    ::uint8_t* PROTOBUF_NONNULL target,
    ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const {
  const LeaseGrantResponse& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
  // @@protoc_insertion_point(serialize_to_array_start:etcdserverpb.LeaseGrantResponse)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  cached_has_bits = this_._impl_._has_bits_[0];
  // .etcdserverpb.ResponseHeader header = 1;
  if ((cached_has_bits & 0x00000002u) != 0) {
    target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
        1, *this_._impl_.header_, this_._impl_.header_->GetCachedSize(), target,
        stream);
  }

  // int64 ID = 2;
  if ((cached_has_bits & 0x00000004u) != 0) {
    if (this_._internal_id() != 0) {
      target =
          ::google::protobuf::internal::WireFormatLite::WriteInt64ToArrayWithField<2>(
              stream, this_._internal_id(), target);
    }
  }

  // int64 TTL = 3;
  if ((cached_has_bits & 0x00000008u) != 0) {
    if (this_._internal_ttl() != 0) {
      target =
          ::google::protobuf::internal::WireFormatLite::WriteInt64ToArrayWithField<3>(
              stream, this_._internal_ttl(), target);
    }
  }

  // string error = 4;
  if ((cached_has_bits & 0x00000001u) != 0) {
    if (!this_._internal_error().empty()) {
      const ::std::string& _s = this_._internal_error();
      ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
          _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "etcdserverpb.LeaseGrantResponse.error");
      target = stream->WriteStringMaybeAliased(4, _s, target);
    }
  }

  if (ABSL_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:etcdserverpb.LeaseGrantResponse)
  return target;
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::size_t LeaseGrantResponse::ByteSizeLong(const MessageLite& base) {
  const LeaseGrantResponse& this_ = static_cast<const LeaseGrantResponse&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::size_t LeaseGrantResponse::ByteSizeLong() const {
  const LeaseGrantResponse& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
  // @@protoc_insertion_point(message_byte_size_start:etcdserverpb.LeaseGrantResponse)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void)cached_has_bits;

  ::_pbi::Prefetch5LinesFrom7Lines(&this_);
  cached_has_bits = this_._impl_._has_bits_[0];
  if ((cached_has_bits & 0x0000000fu) != 0) {
    // string error = 4;
    if ((cached_has_bits & 0x00000001u) != 0) {
      if (!this_._internal_error().empty()) {
        total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                        this_._internal_error());
      }
    }
    // .etcdserverpb.ResponseHeader header = 1;
    if ((cached_has_bits & 0x00000002u) != 0) {
      total_size += 1 +
                    ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.header_);
    }
    // int64 ID = 2;
    if ((cached_has_bits & 0x00000004u) != 0) {
      if (this_._internal_id() != 0) {
        total_size += ::_pbi::WireFormatLite::Int64SizePlusOne(
            this_._internal_id());
      }
    }
    // int64 TTL = 3;
    if ((cached_has_bits & 0x00000008u) != 0) {
      if (this_._internal_ttl() != 0) {
        total_size += ::_pbi::WireFormatLite::Int64SizePlusOne(
            this_._internal_ttl());
      }
    }
  }
  return this_.MaybeComputeUnknownFieldsSize(total_size,
                                             &this_._impl_._cached_size_);
}

void LeaseGrantResponse::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<LeaseGrantResponse*>(&to_msg);
  auto& from = static_cast<const LeaseGrantResponse&>(from_msg);
  ::google::protobuf::Arena* arena = _this->GetArena();
  // @@protoc_insertion_point(class_specific_merge_from_start:etcdserverpb.LeaseGrantResponse)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._impl_._has_bits_[0];
  if ((cached_has_bits & 0x0000000fu) != 0) {
    if ((cached_has_bits & 0x00000001u) != 0) {
      if (!from._internal_error().empty()) {
        _this->_internal_set_error(from._internal_error());
      } else {
        if (_this->_impl_.error_.IsDefault()) {
          _this->_internal_set_error("");
        }
      }
    }
    if ((cached_has_bits & 0x00000002u) != 0) {
      ABSL_DCHECK(from._impl_.header_ != nullptr);
      if (_this->_impl_.header_ == nullptr) {
        _this->_impl_.header_ = ::google::protobuf::Message::CopyConstruct(arena, *from._impl_.header_);
      } else {
        _this->_impl_.header_->MergeFrom(*from._impl_.header_);
      }
    }
    if ((cached_has_bits & 0x00000004u) != 0) {
      if (from._internal_id() != 0) {
        _this->_impl_.id_ = from._impl_.id_;
      }
    }
    if ((cached_has_bits & 0x00000008u) != 0) {
      if (from._internal_ttl() != 0) {
        _this->_impl_.ttl_ = from._impl_.ttl_;
      }
    }
  }
  _this->_impl_._has_bits_[0] |= cached_has_bits;
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void LeaseGrantResponse::CopyFrom(const LeaseGrantResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:etcdserverpb.LeaseGrantResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void LeaseGrantResponse::InternalSwap(LeaseGrantResponse* PROTOBUF_RESTRICT PROTOBUF_NONNULL other) {
  using ::std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.error_, &other->_impl_.error_, arena);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(LeaseGrantResponse, _impl_.ttl_)
      + sizeof(LeaseGrantResponse::_impl_.ttl_)
      - PROTOBUF_FIELD_OFFSET(LeaseGrantResponse, _impl_.header_)>(
          reinterpret_cast<char*>(&_impl_.header_),
          reinterpret_cast<char*>(&other->_impl_.header_));
}

::google::protobuf::Metadata LeaseGrantResponse::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class LeaseRevokeRequest::_Internal {
 public:
  using HasBits =
      decltype(::std::declval<LeaseRevokeRequest>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
      8 * PROTOBUF_FIELD_OFFSET(LeaseRevokeRequest, _impl_._has_bits_);
};

LeaseRevokeRequest::LeaseRevokeRequest(::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, LeaseRevokeRequest_class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:etcdserverpb.LeaseRevokeRequest)
}
LeaseRevokeRequest::LeaseRevokeRequest(
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const LeaseRevokeRequest& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, LeaseRevokeRequest_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(from._impl_) {
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
}
PROTOBUF_NDEBUG_INLINE LeaseRevokeRequest::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
      : _cached_size_{0} {}

inline void LeaseRevokeRequest::SharedCtor(::_pb::Arena* PROTOBUF_NULLABLE arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  _impl_.id_ = {};
}
LeaseRevokeRequest::~LeaseRevokeRequest() {
  // @@protoc_insertion_point(destructor:etcdserverpb.LeaseRevokeRequest)
  SharedDtor(*this);
}
inline void LeaseRevokeRequest::SharedDtor(MessageLite& self) {
  LeaseRevokeRequest& this_ = static_cast<LeaseRevokeRequest&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  this_._impl_.~Impl_();
}

inline void* PROTOBUF_NONNULL LeaseRevokeRequest::PlacementNew_(
    const void* PROTOBUF_NONNULL, void* PROTOBUF_NONNULL mem,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena) {
  return ::new (mem) LeaseRevokeRequest(arena);
}
constexpr auto LeaseRevokeRequest::InternalNewImpl_() {
  return ::google::protobuf::internal::MessageCreator::ZeroInit(sizeof(LeaseRevokeRequest),
                                            alignof(LeaseRevokeRequest));
}
constexpr auto LeaseRevokeRequest::InternalGenerateClassData_() {
  return ::google::protobuf::internal::ClassDataFull{
      ::google::protobuf::internal::ClassData{
          &_LeaseRevokeRequest_default_instance_._instance,
          &_table_.header,
          nullptr,  // OnDemandRegisterArenaDtor
          nullptr,  // IsInitialized
          &LeaseRevokeRequest::MergeImpl,
          ::google::protobuf::Message::GetNewImpl<LeaseRevokeRequest>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
          &LeaseRevokeRequest::SharedDtor,
          ::google::protobuf::Message::GetClearImpl<LeaseRevokeRequest>(), &LeaseRevokeRequest::ByteSizeLong,
              &LeaseRevokeRequest::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
          PROTOBUF_FIELD_OFFSET(LeaseRevokeRequest, _impl_._cached_size_),
          false,
      },
      &LeaseRevokeRequest::kDescriptorMethods,
      &descriptor_table_proto_2fetcd_2fetcd_2eproto,
      nullptr,  // tracker
  };
}

PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 const
    ::google::protobuf::internal::ClassDataFull LeaseRevokeRequest_class_data_ =
        LeaseRevokeRequest::InternalGenerateClassData_();

PROTOBUF_ATTRIBUTE_WEAK const ::google::protobuf::internal::ClassData* PROTOBUF_NONNULL
LeaseRevokeRequest::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&LeaseRevokeRequest_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(LeaseRevokeRequest_class_data_.tc_table);
  return LeaseRevokeRequest_class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<0, 1, 0, 0, 2>
LeaseRevokeRequest::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(LeaseRevokeRequest, _impl_._has_bits_),
    0, // no _extensions_
    1, 0,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967294,  // skipmap
    offsetof(decltype(_table_), field_entries),
    1,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    LeaseRevokeRequest_class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::etcdserverpb::LeaseRevokeRequest>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // int64 ID = 1;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint64_t, offsetof(LeaseRevokeRequest, _impl_.id_), 0>(),
     {8, 0, 0, PROTOBUF_FIELD_OFFSET(LeaseRevokeRequest, _impl_.id_)}},
  }}, {{
    65535, 65535
  }}, {{
    // int64 ID = 1;
    {PROTOBUF_FIELD_OFFSET(LeaseRevokeRequest, _impl_.id_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kInt64)},
  }},
  // no aux_entries
  {{
  }},
};
PROTOBUF_NOINLINE void LeaseRevokeRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:etcdserverpb.LeaseRevokeRequest)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.id_ = ::int64_t{0};
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::uint8_t* PROTOBUF_NONNULL LeaseRevokeRequest::_InternalSerialize(
    const ::google::protobuf::MessageLite& base, ::uint8_t* PROTOBUF_NONNULL target,
    ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) {
  const LeaseRevokeRequest& this_ = static_cast<const LeaseRevokeRequest&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::uint8_t* PROTOBUF_NONNULL LeaseRevokeRequest::_InternalSerialize(
    ::uint8_t* PROTOBUF_NONNULL target,
    ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const {
  const LeaseRevokeRequest& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
  // @@protoc_insertion_point(serialize_to_array_start:etcdserverpb.LeaseRevokeRequest)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  // int64 ID = 1;
  if ((this_._impl_._has_bits_[0] & 0x00000001u) != 0) {
    if (this_._internal_id() != 0) {
      target =
          ::google::protobuf::internal::WireFormatLite::WriteInt64ToArrayWithField<1>(
              stream, this_._internal_id(), target);
    }
  }

  if (ABSL_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:etcdserverpb.LeaseRevokeRequest)
  return target;
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::size_t LeaseRevokeRequest::ByteSizeLong(const MessageLite& base) {
  const LeaseRevokeRequest& this_ = static_cast<const LeaseRevokeRequest&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::size_t LeaseRevokeRequest::ByteSizeLong() const {
  const LeaseRevokeRequest& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
  // @@protoc_insertion_point(message_byte_size_start:etcdserverpb.LeaseRevokeRequest)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void)cached_has_bits;

   {
    // int64 ID = 1;
    cached_has_bits = this_._impl_._has_bits_[0];
    if ((cached_has_bits & 0x00000001u) != 0) {
      if (this_._internal_id() != 0) {
        total_size += ::_pbi::WireFormatLite::Int64SizePlusOne(
            this_._internal_id());
      }
    }
  }
  return this_.MaybeComputeUnknownFieldsSize(total_size,
                                             &this_._impl_._cached_size_);
}

void LeaseRevokeRequest::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<LeaseRevokeRequest*>(&to_msg);
  auto& from = static_cast<const LeaseRevokeRequest&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:etcdserverpb.LeaseRevokeRequest)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._impl_._has_bits_[0];
  if ((cached_has_bits & 0x00000001u) != 0) {
    if (from._internal_id() != 0) {
      _this->_impl_.id_ = from._impl_.id_;
    }
  }
  _this->_impl_._has_bits_[0] |= cached_has_bits;
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void LeaseRevokeRequest::CopyFrom(const LeaseRevokeRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:etcdserverpb.LeaseRevokeRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void LeaseRevokeRequest::InternalSwap(LeaseRevokeRequest* PROTOBUF_RESTRICT PROTOBUF_NONNULL other) {
  using ::std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  swap(_impl_.id_, other->_impl_.id_);
}

::google::protobuf::Metadata LeaseRevokeRequest::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class LeaseRevokeResponse::_Internal {
 public:
  using HasBits =
      decltype(::std::declval<LeaseRevokeResponse>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
      8 * PROTOBUF_FIELD_OFFSET(LeaseRevokeResponse, _impl_._has_bits_);
};

LeaseRevokeResponse::LeaseRevokeResponse(::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, LeaseRevokeResponse_class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:etcdserverpb.LeaseRevokeResponse)
}
PROTOBUF_NDEBUG_INLINE LeaseRevokeResponse::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const Impl_& from,
    const ::etcdserverpb::LeaseRevokeResponse& from_msg)
      : _has_bits_{from._has_bits_},
        _cached_size_{0} {}

LeaseRevokeResponse::LeaseRevokeResponse(
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena,
    const LeaseRevokeResponse& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, LeaseRevokeResponse_class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  LeaseRevokeResponse* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);
  ::uint32_t cached_has_bits = _impl_._has_bits_[0];
  _impl_.header_ = ((cached_has_bits & 0x00000001u) != 0)
                ? ::google::protobuf::Message::CopyConstruct(arena, *from._impl_.header_)
                : nullptr;

  // @@protoc_insertion_point(copy_constructor:etcdserverpb.LeaseRevokeResponse)
}
PROTOBUF_NDEBUG_INLINE LeaseRevokeResponse::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
      : _cached_size_{0} {}

inline void LeaseRevokeResponse::SharedCtor(::_pb::Arena* PROTOBUF_NULLABLE arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  _impl_.header_ = {};
}
LeaseRevokeResponse::~LeaseRevokeResponse() {
  // @@protoc_insertion_point(destructor:etcdserverpb.LeaseRevokeResponse)
  SharedDtor(*this);
}
inline void LeaseRevokeResponse::SharedDtor(MessageLite& self) {
  LeaseRevokeResponse& this_ = static_cast<LeaseRevokeResponse&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  delete this_._impl_.header_;
  this_._impl_.~Impl_();
}

inline void* PROTOBUF_NONNULL LeaseRevokeResponse::PlacementNew_(
    const void* PROTOBUF_NONNULL, void* PROTOBUF_NONNULL mem,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena) {
  return ::new (mem) LeaseRevokeResponse(arena);
}
constexpr auto LeaseRevokeResponse::InternalNewImpl_() {
  return ::google::protobuf::internal::MessageCreator::ZeroInit(sizeof(LeaseRevokeResponse),
                                            alignof(LeaseRevokeResponse));
}
constexpr auto LeaseRevokeResponse::InternalGenerateClassData_() {
  return ::google::protobuf::internal::ClassDataFull{
      ::google::protobuf::internal::ClassData{
          &_LeaseRevokeResponse_default_instance_._instance,
          &_table_.header,
          nullptr,  // OnDemandRegisterArenaDtor
          nullptr,  // IsInitialized
          &LeaseRevokeResponse::MergeImpl,
          ::google::protobuf::Message::GetNewImpl<LeaseRevokeResponse>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
          &LeaseRevokeResponse::SharedDtor,
          ::google::protobuf::Message::GetClearImpl<LeaseRevokeResponse>(), &LeaseRevokeResponse::ByteSizeLong,
              &LeaseRevokeResponse::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
          PROTOBUF_FIELD_OFFSET(LeaseRevokeResponse, _impl_._cached_size_),
          false,
      },
      &LeaseRevokeResponse::kDescriptorMethods,
      &descriptor_table_proto_2fetcd_2fetcd_2eproto,
      nullptr,  // tracker
  };
}

PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 const
    ::google::protobuf::internal::ClassDataFull LeaseRevokeResponse_class_data_ =
        LeaseRevokeResponse::InternalGenerateClassData_();

PROTOBUF_ATTRIBUTE_WEAK const ::google::protobuf::internal::ClassData* PROTOBUF_NONNULL
LeaseRevokeResponse::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&LeaseRevokeResponse_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(LeaseRevokeResponse_class_data_.tc_table);
  return LeaseRevokeResponse_class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<0, 1, 1, 0, 2>
LeaseRevokeResponse::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(LeaseRevokeResponse, _impl_._has_bits_),
    0, // no _extensions_
    1, 0,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967294,  // skipmap
    offsetof(decltype(_table_), field_entries),
    1,  // num_field_entries
    1,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    LeaseRevokeResponse_class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::etcdserverpb::LeaseRevokeResponse>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // .etcdserverpb.ResponseHeader header = 1;
    {::_pbi::TcParser::FastMtS1,
     {10, 0, 0, PROTOBUF_FIELD_OFFSET(LeaseRevokeResponse, _impl_.header_)}},
  }}, {{
    65535, 65535
  }}, {{
    // .etcdserverpb.ResponseHeader header = 1;
    {PROTOBUF_FIELD_OFFSET(LeaseRevokeResponse, _impl_.header_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
  }},
  {{
      {::_pbi::TcParser::GetTable<::etcdserverpb::ResponseHeader>()},
  }},
  {{
  }},
};
PROTOBUF_NOINLINE void LeaseRevokeResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:etcdserverpb.LeaseRevokeResponse)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if ((cached_has_bits & 0x00000001u) != 0) {
    ABSL_DCHECK(_impl_.header_ != nullptr);
    _impl_.header_->Clear();
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::uint8_t* PROTOBUF_NONNULL LeaseRevokeResponse::_InternalSerialize(
    const ::google::protobuf::MessageLite& base, ::uint8_t* PROTOBUF_NONNULL target,
    ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) {
  const LeaseRevokeResponse& this_ = static_cast<const LeaseRevokeResponse&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::uint8_t* PROTOBUF_NONNULL LeaseRevokeResponse::_InternalSerialize(
    ::uint8_t* PROTOBUF_NONNULL target,
    ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const {
  const LeaseRevokeResponse& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
  // @@protoc_insertion_point(serialize_to_array_start:etcdserverpb.LeaseRevokeResponse)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  cached_has_bits = this_._impl_._has_bits_[0];
  // .etcdserverpb.ResponseHeader header = 1;
  if ((cached_has_bits & 0x00000001u) != 0) {
    target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
        1, *this_._impl_.header_, this_._impl_.header_->GetCachedSize(), target,
        stream);
  }

  if (ABSL_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:etcdserverpb.LeaseRevokeResponse)
  return target;
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::size_t LeaseRevokeResponse::ByteSizeLong(const MessageLite& base) {
  const LeaseRevokeResponse& this_ = static_cast<const LeaseRevokeResponse&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::size_t LeaseRevokeResponse::ByteSizeLong() const {
  const LeaseRevokeResponse& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
  // @@protoc_insertion_point(message_byte_size_start:etcdserverpb.LeaseRevokeResponse)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void)cached_has_bits;

   {
    // .etcdserverpb.ResponseHeader header = 1;
    cached_has_bits = this_._impl_._has_bits_[0];
    if ((cached_has_bits & 0x00000001u) != 0) {
      total_size += 1 +
                    ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.header_);
    }
  }
  return this_.MaybeComputeUnknownFieldsSize(total_size,
                                             &this_._impl_._cached_size_);
}

void LeaseRevokeResponse::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<LeaseRevokeResponse*>(&to_msg);
  auto& from = static_cast<const LeaseRevokeResponse&>(from_msg);
  ::google::protobuf::Arena* arena = _this->GetArena();
  // @@protoc_insertion_point(class_specific_merge_from_start:etcdserverpb.LeaseRevokeResponse)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._impl_._has_bits_[0];
  if ((cached_has_bits & 0x00000001u) != 0) {
    ABSL_DCHECK(from._impl_.header_ != nullptr);
    if (_this->_impl_.header_ == nullptr) {
      _this->_impl_.header_ = ::google::protobuf::Message::CopyConstruct(arena, *from._impl_.header_);
    } else {
      _this->_impl_.header_->MergeFrom(*from._impl_.header_);
    }
  }
  _this->_impl_._has_bits_[0] |= cached_has_bits;
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void LeaseRevokeResponse::CopyFrom(const LeaseRevokeResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:etcdserverpb.LeaseRevokeResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void LeaseRevokeResponse::InternalSwap(LeaseRevokeResponse* PROTOBUF_RESTRICT PROTOBUF_NONNULL other) {
  using ::std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  swap(_impl_.header_, other->_impl_.header_);
}

::google::protobuf::Metadata LeaseRevokeResponse::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class LeaseCheckpoint::_Internal {
 public:
  using HasBits =
      decltype(::std::declval<LeaseCheckpoint>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
      8 * PROTOBUF_FIELD_OFFSET(LeaseCheckpoint, _impl_._has_bits_);
};

LeaseCheckpoint::LeaseCheckpoint(::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, LeaseCheckpoint_class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:etcdserverpb.LeaseCheckpoint)
}
LeaseCheckpoint::LeaseCheckpoint(
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const LeaseCheckpoint& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, LeaseCheckpoint_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(from._impl_) {
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
}
PROTOBUF_NDEBUG_INLINE LeaseCheckpoint::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
      : _cached_size_{0} {}

inline void LeaseCheckpoint::SharedCtor(::_pb::Arena* PROTOBUF_NULLABLE arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, id_),
           0,
           offsetof(Impl_, remaining_ttl_) -
               offsetof(Impl_, id_) +
               sizeof(Impl_::remaining_ttl_));
}
LeaseCheckpoint::~LeaseCheckpoint() {
  // @@protoc_insertion_point(destructor:etcdserverpb.LeaseCheckpoint)
  SharedDtor(*this);
}
inline void LeaseCheckpoint::SharedDtor(MessageLite& self) {
  LeaseCheckpoint& this_ = static_cast<LeaseCheckpoint&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  this_._impl_.~Impl_();
}

inline void* PROTOBUF_NONNULL LeaseCheckpoint::PlacementNew_(
    const void* PROTOBUF_NONNULL, void* PROTOBUF_NONNULL mem,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena) {
  return ::new (mem) LeaseCheckpoint(arena);
}
constexpr auto LeaseCheckpoint::InternalNewImpl_() {
  return ::google::protobuf::internal::MessageCreator::ZeroInit(sizeof(LeaseCheckpoint),
                                            alignof(LeaseCheckpoint));
}
constexpr auto LeaseCheckpoint::InternalGenerateClassData_() {
  return ::google::protobuf::internal::ClassDataFull{
      ::google::protobuf::internal::ClassData{
          &_LeaseCheckpoint_default_instance_._instance,
          &_table_.header,
          nullptr,  // OnDemandRegisterArenaDtor
          nullptr,  // IsInitialized
          &LeaseCheckpoint::MergeImpl,
          ::google::protobuf::Message::GetNewImpl<LeaseCheckpoint>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
          &LeaseCheckpoint::SharedDtor,
          ::google::protobuf::Message::GetClearImpl<LeaseCheckpoint>(), &LeaseCheckpoint::ByteSizeLong,
              &LeaseCheckpoint::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
          PROTOBUF_FIELD_OFFSET(LeaseCheckpoint, _impl_._cached_size_),
          false,
      },
      &LeaseCheckpoint::kDescriptorMethods,
      &descriptor_table_proto_2fetcd_2fetcd_2eproto,
      nullptr,  // tracker
  };
}

PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 const
    ::google::protobuf::internal::ClassDataFull LeaseCheckpoint_class_data_ =
        LeaseCheckpoint::InternalGenerateClassData_();

PROTOBUF_ATTRIBUTE_WEAK const ::google::protobuf::internal::ClassData* PROTOBUF_NONNULL
LeaseCheckpoint::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&LeaseCheckpoint_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(LeaseCheckpoint_class_data_.tc_table);
  return LeaseCheckpoint_class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<1, 2, 0, 0, 2>
LeaseCheckpoint::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(LeaseCheckpoint, _impl_._has_bits_),
    0, // no _extensions_
    2, 8,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967292,  // skipmap
    offsetof(decltype(_table_), field_entries),
    2,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    LeaseCheckpoint_class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::etcdserverpb::LeaseCheckpoint>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // int64 remaining_TTL = 2;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint64_t, offsetof(LeaseCheckpoint, _impl_.remaining_ttl_), 1>(),
     {16, 1, 0, PROTOBUF_FIELD_OFFSET(LeaseCheckpoint, _impl_.remaining_ttl_)}},
    // int64 ID = 1;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint64_t, offsetof(LeaseCheckpoint, _impl_.id_), 0>(),
     {8, 0, 0, PROTOBUF_FIELD_OFFSET(LeaseCheckpoint, _impl_.id_)}},
  }}, {{
    65535, 65535
  }}, {{
    // int64 ID = 1;
    {PROTOBUF_FIELD_OFFSET(LeaseCheckpoint, _impl_.id_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kInt64)},
    // int64 remaining_TTL = 2;
    {PROTOBUF_FIELD_OFFSET(LeaseCheckpoint, _impl_.remaining_ttl_), _Internal::kHasBitsOffset + 1, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kInt64)},
  }},
  // no aux_entries
  {{
  }},
};
PROTOBUF_NOINLINE void LeaseCheckpoint::Clear() {
// @@protoc_insertion_point(message_clear_start:etcdserverpb.LeaseCheckpoint)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if ((cached_has_bits & 0x00000003u) != 0) {
    ::memset(&_impl_.id_, 0, static_cast<::size_t>(
        reinterpret_cast<char*>(&_impl_.remaining_ttl_) -
        reinterpret_cast<char*>(&_impl_.id_)) + sizeof(_impl_.remaining_ttl_));
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::uint8_t* PROTOBUF_NONNULL LeaseCheckpoint::_InternalSerialize(
    const ::google::protobuf::MessageLite& base, ::uint8_t* PROTOBUF_NONNULL target,
    ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) {
  const LeaseCheckpoint& this_ = static_cast<const LeaseCheckpoint&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::uint8_t* PROTOBUF_NONNULL LeaseCheckpoint::_InternalSerialize(
    ::uint8_t* PROTOBUF_NONNULL target,
    ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const {
  const LeaseCheckpoint& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
  // @@protoc_insertion_point(serialize_to_array_start:etcdserverpb.LeaseCheckpoint)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  // int64 ID = 1;
  if ((this_._impl_._has_bits_[0] & 0x00000001u) != 0) {
    if (this_._internal_id() != 0) {
      target =
          ::google::protobuf::internal::WireFormatLite::WriteInt64ToArrayWithField<1>(
              stream, this_._internal_id(), target);
    }
  }

  // int64 remaining_TTL = 2;
  if ((this_._impl_._has_bits_[0] & 0x00000002u) != 0) {
    if (this_._internal_remaining_ttl() != 0) {
      target =
          ::google::protobuf::internal::WireFormatLite::WriteInt64ToArrayWithField<2>(
              stream, this_._internal_remaining_ttl(), target);
    }
  }

  if (ABSL_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:etcdserverpb.LeaseCheckpoint)
  return target;
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::size_t LeaseCheckpoint::ByteSizeLong(const MessageLite& base) {
  const LeaseCheckpoint& this_ = static_cast<const LeaseCheckpoint&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::size_t LeaseCheckpoint::ByteSizeLong() const {
  const LeaseCheckpoint& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
  // @@protoc_insertion_point(message_byte_size_start:etcdserverpb.LeaseCheckpoint)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void)cached_has_bits;

  ::_pbi::Prefetch5LinesFrom7Lines(&this_);
  cached_has_bits = this_._impl_._has_bits_[0];
  if ((cached_has_bits & 0x00000003u) != 0) {
    // int64 ID = 1;
    if ((cached_has_bits & 0x00000001u) != 0) {
      if (this_._internal_id() != 0) {
        total_size += ::_pbi::WireFormatLite::Int64SizePlusOne(
            this_._internal_id());
      }
    }
    // int64 remaining_TTL = 2;
    if ((cached_has_bits & 0x00000002u) != 0) {
      if (this_._internal_remaining_ttl() != 0) {
        total_size += ::_pbi::WireFormatLite::Int64SizePlusOne(
            this_._internal_remaining_ttl());
      }
    }
  }
  return this_.MaybeComputeUnknownFieldsSize(total_size,
                                             &this_._impl_._cached_size_);
}

void LeaseCheckpoint::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<LeaseCheckpoint*>(&to_msg);
  auto& from = static_cast<const LeaseCheckpoint&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:etcdserverpb.LeaseCheckpoint)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._impl_._has_bits_[0];
  if ((cached_has_bits & 0x00000003u) != 0) {
    if ((cached_has_bits & 0x00000001u) != 0) {
      if (from._internal_id() != 0) {
        _this->_impl_.id_ = from._impl_.id_;
      }
    }
    if ((cached_has_bits & 0x00000002u) != 0) {
      if (from._internal_remaining_ttl() != 0) {
        _this->_impl_.remaining_ttl_ = from._impl_.remaining_ttl_;
      }
    }
  }
  _this->_impl_._has_bits_[0] |= cached_has_bits;
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void LeaseCheckpoint::CopyFrom(const LeaseCheckpoint& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:etcdserverpb.LeaseCheckpoint)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void LeaseCheckpoint::InternalSwap(LeaseCheckpoint* PROTOBUF_RESTRICT PROTOBUF_NONNULL other) {
  using ::std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(LeaseCheckpoint, _impl_.remaining_ttl_)
      + sizeof(LeaseCheckpoint::_impl_.remaining_ttl_)
      - PROTOBUF_FIELD_OFFSET(LeaseCheckpoint, _impl_.id_)>(
          reinterpret_cast<char*>(&_impl_.id_),
          reinterpret_cast<char*>(&other->_impl_.id_));
}

::google::protobuf::Metadata LeaseCheckpoint::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class LeaseCheckpointRequest::_Internal {
 public:
};

LeaseCheckpointRequest::LeaseCheckpointRequest(::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, LeaseCheckpointRequest_class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:etcdserverpb.LeaseCheckpointRequest)
}
PROTOBUF_NDEBUG_INLINE LeaseCheckpointRequest::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const Impl_& from,
    const ::etcdserverpb::LeaseCheckpointRequest& from_msg)
      : checkpoints_{visibility, arena, from.checkpoints_},
        _cached_size_{0} {}

LeaseCheckpointRequest::LeaseCheckpointRequest(
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena,
    const LeaseCheckpointRequest& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, LeaseCheckpointRequest_class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  LeaseCheckpointRequest* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);

  // @@protoc_insertion_point(copy_constructor:etcdserverpb.LeaseCheckpointRequest)
}
PROTOBUF_NDEBUG_INLINE LeaseCheckpointRequest::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
      : checkpoints_{visibility, arena},
        _cached_size_{0} {}

inline void LeaseCheckpointRequest::SharedCtor(::_pb::Arena* PROTOBUF_NULLABLE arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
}
LeaseCheckpointRequest::~LeaseCheckpointRequest() {
  // @@protoc_insertion_point(destructor:etcdserverpb.LeaseCheckpointRequest)
  SharedDtor(*this);
}
inline void LeaseCheckpointRequest::SharedDtor(MessageLite& self) {
  LeaseCheckpointRequest& this_ = static_cast<LeaseCheckpointRequest&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  this_._impl_.~Impl_();
}

inline void* PROTOBUF_NONNULL LeaseCheckpointRequest::PlacementNew_(
    const void* PROTOBUF_NONNULL, void* PROTOBUF_NONNULL mem,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena) {
  return ::new (mem) LeaseCheckpointRequest(arena);
}
constexpr auto LeaseCheckpointRequest::InternalNewImpl_() {
  constexpr auto arena_bits = ::google::protobuf::internal::EncodePlacementArenaOffsets({
      PROTOBUF_FIELD_OFFSET(LeaseCheckpointRequest, _impl_.checkpoints_) +
          decltype(LeaseCheckpointRequest::_impl_.checkpoints_)::
              InternalGetArenaOffset(
                  ::google::protobuf::Message::internal_visibility()),
  });
  if (arena_bits.has_value()) {
    return ::google::protobuf::internal::MessageCreator::ZeroInit(
        sizeof(LeaseCheckpointRequest), alignof(LeaseCheckpointRequest), *arena_bits);
  } else {
    return ::google::protobuf::internal::MessageCreator(&LeaseCheckpointRequest::PlacementNew_,
                                 sizeof(LeaseCheckpointRequest),
                                 alignof(LeaseCheckpointRequest));
  }
}
constexpr auto LeaseCheckpointRequest::InternalGenerateClassData_() {
  return ::google::protobuf::internal::ClassDataFull{
      ::google::protobuf::internal::ClassData{
          &_LeaseCheckpointRequest_default_instance_._instance,
          &_table_.header,
          nullptr,  // OnDemandRegisterArenaDtor
          nullptr,  // IsInitialized
          &LeaseCheckpointRequest::MergeImpl,
          ::google::protobuf::Message::GetNewImpl<LeaseCheckpointRequest>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
          &LeaseCheckpointRequest::SharedDtor,
          ::google::protobuf::Message::GetClearImpl<LeaseCheckpointRequest>(), &LeaseCheckpointRequest::ByteSizeLong,
              &LeaseCheckpointRequest::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
          PROTOBUF_FIELD_OFFSET(LeaseCheckpointRequest, _impl_._cached_size_),
          false,
      },
      &LeaseCheckpointRequest::kDescriptorMethods,
      &descriptor_table_proto_2fetcd_2fetcd_2eproto,
      nullptr,  // tracker
  };
}

PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 const
    ::google::protobuf::internal::ClassDataFull LeaseCheckpointRequest_class_data_ =
        LeaseCheckpointRequest::InternalGenerateClassData_();

PROTOBUF_ATTRIBUTE_WEAK const ::google::protobuf::internal::ClassData* PROTOBUF_NONNULL
LeaseCheckpointRequest::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&LeaseCheckpointRequest_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(LeaseCheckpointRequest_class_data_.tc_table);
  return LeaseCheckpointRequest_class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<0, 1, 1, 0, 2>
LeaseCheckpointRequest::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    1, 0,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967294,  // skipmap
    offsetof(decltype(_table_), field_entries),
    1,  // num_field_entries
    1,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    LeaseCheckpointRequest_class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::etcdserverpb::LeaseCheckpointRequest>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // repeated .etcdserverpb.LeaseCheckpoint checkpoints = 1;
    {::_pbi::TcParser::FastMtR1,
     {10, 63, 0, PROTOBUF_FIELD_OFFSET(LeaseCheckpointRequest, _impl_.checkpoints_)}},
  }}, {{
    65535, 65535
  }}, {{
    // repeated .etcdserverpb.LeaseCheckpoint checkpoints = 1;
    {PROTOBUF_FIELD_OFFSET(LeaseCheckpointRequest, _impl_.checkpoints_), 0, 0,
    (0 | ::_fl::kFcRepeated | ::_fl::kMessage | ::_fl::kTvTable)},
  }},
  {{
      {::_pbi::TcParser::GetTable<::etcdserverpb::LeaseCheckpoint>()},
  }},
  {{
  }},
};
PROTOBUF_NOINLINE void LeaseCheckpointRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:etcdserverpb.LeaseCheckpointRequest)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.checkpoints_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::uint8_t* PROTOBUF_NONNULL LeaseCheckpointRequest::_InternalSerialize(
    const ::google::protobuf::MessageLite& base, ::uint8_t* PROTOBUF_NONNULL target,
    ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) {
  const LeaseCheckpointRequest& this_ = static_cast<const LeaseCheckpointRequest&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::uint8_t* PROTOBUF_NONNULL LeaseCheckpointRequest::_InternalSerialize(
    ::uint8_t* PROTOBUF_NONNULL target,
    ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const {
  const LeaseCheckpointRequest& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
  // @@protoc_insertion_point(serialize_to_array_start:etcdserverpb.LeaseCheckpointRequest)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  // repeated .etcdserverpb.LeaseCheckpoint checkpoints = 1;
  for (unsigned i = 0, n = static_cast<unsigned>(
                           this_._internal_checkpoints_size());
       i < n; i++) {
    const auto& repfield = this_._internal_checkpoints().Get(i);
    target =
        ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
            1, repfield, repfield.GetCachedSize(),
            target, stream);
  }

  if (ABSL_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:etcdserverpb.LeaseCheckpointRequest)
  return target;
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::size_t LeaseCheckpointRequest::ByteSizeLong(const MessageLite& base) {
  const LeaseCheckpointRequest& this_ = static_cast<const LeaseCheckpointRequest&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::size_t LeaseCheckpointRequest::ByteSizeLong() const {
  const LeaseCheckpointRequest& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
  // @@protoc_insertion_point(message_byte_size_start:etcdserverpb.LeaseCheckpointRequest)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void)cached_has_bits;

  ::_pbi::Prefetch5LinesFrom7Lines(&this_);
   {
    // repeated .etcdserverpb.LeaseCheckpoint checkpoints = 1;
    {
      total_size += 1UL * this_._internal_checkpoints_size();
      for (const auto& msg : this_._internal_checkpoints()) {
        total_size += ::google::protobuf::internal::WireFormatLite::MessageSize(msg);
      }
    }
  }
  return this_.MaybeComputeUnknownFieldsSize(total_size,
                                             &this_._impl_._cached_size_);
}

void LeaseCheckpointRequest::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<LeaseCheckpointRequest*>(&to_msg);
  auto& from = static_cast<const LeaseCheckpointRequest&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:etcdserverpb.LeaseCheckpointRequest)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_internal_mutable_checkpoints()->MergeFrom(
      from._internal_checkpoints());
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void LeaseCheckpointRequest::CopyFrom(const LeaseCheckpointRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:etcdserverpb.LeaseCheckpointRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void LeaseCheckpointRequest::InternalSwap(LeaseCheckpointRequest* PROTOBUF_RESTRICT PROTOBUF_NONNULL other) {
  using ::std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  _impl_.checkpoints_.InternalSwap(&other->_impl_.checkpoints_);
}

::google::protobuf::Metadata LeaseCheckpointRequest::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class LeaseCheckpointResponse::_Internal {
 public:
  using HasBits =
      decltype(::std::declval<LeaseCheckpointResponse>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
      8 * PROTOBUF_FIELD_OFFSET(LeaseCheckpointResponse, _impl_._has_bits_);
};

LeaseCheckpointResponse::LeaseCheckpointResponse(::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, LeaseCheckpointResponse_class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:etcdserverpb.LeaseCheckpointResponse)
}
PROTOBUF_NDEBUG_INLINE LeaseCheckpointResponse::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const Impl_& from,
    const ::etcdserverpb::LeaseCheckpointResponse& from_msg)
      : _has_bits_{from._has_bits_},
        _cached_size_{0} {}

LeaseCheckpointResponse::LeaseCheckpointResponse(
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena,
    const LeaseCheckpointResponse& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, LeaseCheckpointResponse_class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  LeaseCheckpointResponse* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);
  ::uint32_t cached_has_bits = _impl_._has_bits_[0];
  _impl_.header_ = ((cached_has_bits & 0x00000001u) != 0)
                ? ::google::protobuf::Message::CopyConstruct(arena, *from._impl_.header_)
                : nullptr;

  // @@protoc_insertion_point(copy_constructor:etcdserverpb.LeaseCheckpointResponse)
}
PROTOBUF_NDEBUG_INLINE LeaseCheckpointResponse::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
      : _cached_size_{0} {}

inline void LeaseCheckpointResponse::SharedCtor(::_pb::Arena* PROTOBUF_NULLABLE arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  _impl_.header_ = {};
}
LeaseCheckpointResponse::~LeaseCheckpointResponse() {
  // @@protoc_insertion_point(destructor:etcdserverpb.LeaseCheckpointResponse)
  SharedDtor(*this);
}
inline void LeaseCheckpointResponse::SharedDtor(MessageLite& self) {
  LeaseCheckpointResponse& this_ = static_cast<LeaseCheckpointResponse&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  delete this_._impl_.header_;
  this_._impl_.~Impl_();
}

inline void* PROTOBUF_NONNULL LeaseCheckpointResponse::PlacementNew_(
    const void* PROTOBUF_NONNULL, void* PROTOBUF_NONNULL mem,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena) {
  return ::new (mem) LeaseCheckpointResponse(arena);
}
constexpr auto LeaseCheckpointResponse::InternalNewImpl_() {
  return ::google::protobuf::internal::MessageCreator::ZeroInit(sizeof(LeaseCheckpointResponse),
                                            alignof(LeaseCheckpointResponse));
}
constexpr auto LeaseCheckpointResponse::InternalGenerateClassData_() {
  return ::google::protobuf::internal::ClassDataFull{
      ::google::protobuf::internal::ClassData{
          &_LeaseCheckpointResponse_default_instance_._instance,
          &_table_.header,
          nullptr,  // OnDemandRegisterArenaDtor
          nullptr,  // IsInitialized
          &LeaseCheckpointResponse::MergeImpl,
          ::google::protobuf::Message::GetNewImpl<LeaseCheckpointResponse>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
          &LeaseCheckpointResponse::SharedDtor,
          ::google::protobuf::Message::GetClearImpl<LeaseCheckpointResponse>(), &LeaseCheckpointResponse::ByteSizeLong,
              &LeaseCheckpointResponse::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
          PROTOBUF_FIELD_OFFSET(LeaseCheckpointResponse, _impl_._cached_size_),
          false,
      },
      &LeaseCheckpointResponse::kDescriptorMethods,
      &descriptor_table_proto_2fetcd_2fetcd_2eproto,
      nullptr,  // tracker
  };
}

PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 const
    ::google::protobuf::internal::ClassDataFull LeaseCheckpointResponse_class_data_ =
        LeaseCheckpointResponse::InternalGenerateClassData_();

PROTOBUF_ATTRIBUTE_WEAK const ::google::protobuf::internal::ClassData* PROTOBUF_NONNULL
LeaseCheckpointResponse::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&LeaseCheckpointResponse_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(LeaseCheckpointResponse_class_data_.tc_table);
  return LeaseCheckpointResponse_class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<0, 1, 1, 0, 2>
LeaseCheckpointResponse::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(LeaseCheckpointResponse, _impl_._has_bits_),
    0, // no _extensions_
    1, 0,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967294,  // skipmap
    offsetof(decltype(_table_), field_entries),
    1,  // num_field_entries
    1,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    LeaseCheckpointResponse_class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::etcdserverpb::LeaseCheckpointResponse>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // .etcdserverpb.ResponseHeader header = 1;
    {::_pbi::TcParser::FastMtS1,
     {10, 0, 0, PROTOBUF_FIELD_OFFSET(LeaseCheckpointResponse, _impl_.header_)}},
  }}, {{
    65535, 65535
  }}, {{
    // .etcdserverpb.ResponseHeader header = 1;
    {PROTOBUF_FIELD_OFFSET(LeaseCheckpointResponse, _impl_.header_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
  }},
  {{
      {::_pbi::TcParser::GetTable<::etcdserverpb::ResponseHeader>()},
  }},
  {{
  }},
};
PROTOBUF_NOINLINE void LeaseCheckpointResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:etcdserverpb.LeaseCheckpointResponse)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if ((cached_has_bits & 0x00000001u) != 0) {
    ABSL_DCHECK(_impl_.header_ != nullptr);
    _impl_.header_->Clear();
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::uint8_t* PROTOBUF_NONNULL LeaseCheckpointResponse::_InternalSerialize(
    const ::google::protobuf::MessageLite& base, ::uint8_t* PROTOBUF_NONNULL target,
    ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) {
  const LeaseCheckpointResponse& this_ = static_cast<const LeaseCheckpointResponse&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::uint8_t* PROTOBUF_NONNULL LeaseCheckpointResponse::_InternalSerialize(
    ::uint8_t* PROTOBUF_NONNULL target,
    ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const {
  const LeaseCheckpointResponse& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
  // @@protoc_insertion_point(serialize_to_array_start:etcdserverpb.LeaseCheckpointResponse)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  cached_has_bits = this_._impl_._has_bits_[0];
  // .etcdserverpb.ResponseHeader header = 1;
  if ((cached_has_bits & 0x00000001u) != 0) {
    target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
        1, *this_._impl_.header_, this_._impl_.header_->GetCachedSize(), target,
        stream);
  }

  if (ABSL_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:etcdserverpb.LeaseCheckpointResponse)
  return target;
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::size_t LeaseCheckpointResponse::ByteSizeLong(const MessageLite& base) {
  const LeaseCheckpointResponse& this_ = static_cast<const LeaseCheckpointResponse&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::size_t LeaseCheckpointResponse::ByteSizeLong() const {
  const LeaseCheckpointResponse& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
  // @@protoc_insertion_point(message_byte_size_start:etcdserverpb.LeaseCheckpointResponse)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void)cached_has_bits;

   {
    // .etcdserverpb.ResponseHeader header = 1;
    cached_has_bits = this_._impl_._has_bits_[0];
    if ((cached_has_bits & 0x00000001u) != 0) {
      total_size += 1 +
                    ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.header_);
    }
  }
  return this_.MaybeComputeUnknownFieldsSize(total_size,
                                             &this_._impl_._cached_size_);
}

void LeaseCheckpointResponse::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<LeaseCheckpointResponse*>(&to_msg);
  auto& from = static_cast<const LeaseCheckpointResponse&>(from_msg);
  ::google::protobuf::Arena* arena = _this->GetArena();
  // @@protoc_insertion_point(class_specific_merge_from_start:etcdserverpb.LeaseCheckpointResponse)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._impl_._has_bits_[0];
  if ((cached_has_bits & 0x00000001u) != 0) {
    ABSL_DCHECK(from._impl_.header_ != nullptr);
    if (_this->_impl_.header_ == nullptr) {
      _this->_impl_.header_ = ::google::protobuf::Message::CopyConstruct(arena, *from._impl_.header_);
    } else {
      _this->_impl_.header_->MergeFrom(*from._impl_.header_);
    }
  }
  _this->_impl_._has_bits_[0] |= cached_has_bits;
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void LeaseCheckpointResponse::CopyFrom(const LeaseCheckpointResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:etcdserverpb.LeaseCheckpointResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void LeaseCheckpointResponse::InternalSwap(LeaseCheckpointResponse* PROTOBUF_RESTRICT PROTOBUF_NONNULL other) {
  using ::std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  swap(_impl_.header_, other->_impl_.header_);
}

::google::protobuf::Metadata LeaseCheckpointResponse::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class LeaseKeepAliveRequest::_Internal {
 public:
  using HasBits =
      decltype(::std::declval<LeaseKeepAliveRequest>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
      8 * PROTOBUF_FIELD_OFFSET(LeaseKeepAliveRequest, _impl_._has_bits_);
};

LeaseKeepAliveRequest::LeaseKeepAliveRequest(::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, LeaseKeepAliveRequest_class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:etcdserverpb.LeaseKeepAliveRequest)
}
LeaseKeepAliveRequest::LeaseKeepAliveRequest(
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const LeaseKeepAliveRequest& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, LeaseKeepAliveRequest_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(from._impl_) {
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
}
PROTOBUF_NDEBUG_INLINE LeaseKeepAliveRequest::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
      : _cached_size_{0} {}

inline void LeaseKeepAliveRequest::SharedCtor(::_pb::Arena* PROTOBUF_NULLABLE arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  _impl_.id_ = {};
}
LeaseKeepAliveRequest::~LeaseKeepAliveRequest() {
  // @@protoc_insertion_point(destructor:etcdserverpb.LeaseKeepAliveRequest)
  SharedDtor(*this);
}
inline void LeaseKeepAliveRequest::SharedDtor(MessageLite& self) {
  LeaseKeepAliveRequest& this_ = static_cast<LeaseKeepAliveRequest&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  this_._impl_.~Impl_();
}

inline void* PROTOBUF_NONNULL LeaseKeepAliveRequest::PlacementNew_(
    const void* PROTOBUF_NONNULL, void* PROTOBUF_NONNULL mem,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena) {
  return ::new (mem) LeaseKeepAliveRequest(arena);
}
constexpr auto LeaseKeepAliveRequest::InternalNewImpl_() {
  return ::google::protobuf::internal::MessageCreator::ZeroInit(sizeof(LeaseKeepAliveRequest),
                                            alignof(LeaseKeepAliveRequest));
}
constexpr auto LeaseKeepAliveRequest::InternalGenerateClassData_() {
  return ::google::protobuf::internal::ClassDataFull{
      ::google::protobuf::internal::ClassData{
          &_LeaseKeepAliveRequest_default_instance_._instance,
          &_table_.header,
          nullptr,  // OnDemandRegisterArenaDtor
          nullptr,  // IsInitialized
          &LeaseKeepAliveRequest::MergeImpl,
          ::google::protobuf::Message::GetNewImpl<LeaseKeepAliveRequest>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
          &LeaseKeepAliveRequest::SharedDtor,
          ::google::protobuf::Message::GetClearImpl<LeaseKeepAliveRequest>(), &LeaseKeepAliveRequest::ByteSizeLong,
              &LeaseKeepAliveRequest::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
          PROTOBUF_FIELD_OFFSET(LeaseKeepAliveRequest, _impl_._cached_size_),
          false,
      },
      &LeaseKeepAliveRequest::kDescriptorMethods,
      &descriptor_table_proto_2fetcd_2fetcd_2eproto,
      nullptr,  // tracker
  };
}

PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 const
    ::google::protobuf::internal::ClassDataFull LeaseKeepAliveRequest_class_data_ =
        LeaseKeepAliveRequest::InternalGenerateClassData_();

PROTOBUF_ATTRIBUTE_WEAK const ::google::protobuf::internal::ClassData* PROTOBUF_NONNULL
LeaseKeepAliveRequest::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&LeaseKeepAliveRequest_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(LeaseKeepAliveRequest_class_data_.tc_table);
  return LeaseKeepAliveRequest_class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<0, 1, 0, 0, 2>
LeaseKeepAliveRequest::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(LeaseKeepAliveRequest, _impl_._has_bits_),
    0, // no _extensions_
    1, 0,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967294,  // skipmap
    offsetof(decltype(_table_), field_entries),
    1,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    LeaseKeepAliveRequest_class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::etcdserverpb::LeaseKeepAliveRequest>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // int64 ID = 1;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint64_t, offsetof(LeaseKeepAliveRequest, _impl_.id_), 0>(),
     {8, 0, 0, PROTOBUF_FIELD_OFFSET(LeaseKeepAliveRequest, _impl_.id_)}},
  }}, {{
    65535, 65535
  }}, {{
    // int64 ID = 1;
    {PROTOBUF_FIELD_OFFSET(LeaseKeepAliveRequest, _impl_.id_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kInt64)},
  }},
  // no aux_entries
  {{
  }},
};
PROTOBUF_NOINLINE void LeaseKeepAliveRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:etcdserverpb.LeaseKeepAliveRequest)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.id_ = ::int64_t{0};
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::uint8_t* PROTOBUF_NONNULL LeaseKeepAliveRequest::_InternalSerialize(
    const ::google::protobuf::MessageLite& base, ::uint8_t* PROTOBUF_NONNULL target,
    ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) {
  const LeaseKeepAliveRequest& this_ = static_cast<const LeaseKeepAliveRequest&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::uint8_t* PROTOBUF_NONNULL LeaseKeepAliveRequest::_InternalSerialize(
    ::uint8_t* PROTOBUF_NONNULL target,
    ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const {
  const LeaseKeepAliveRequest& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
  // @@protoc_insertion_point(serialize_to_array_start:etcdserverpb.LeaseKeepAliveRequest)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  // int64 ID = 1;
  if ((this_._impl_._has_bits_[0] & 0x00000001u) != 0) {
    if (this_._internal_id() != 0) {
      target =
          ::google::protobuf::internal::WireFormatLite::WriteInt64ToArrayWithField<1>(
              stream, this_._internal_id(), target);
    }
  }

  if (ABSL_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:etcdserverpb.LeaseKeepAliveRequest)
  return target;
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::size_t LeaseKeepAliveRequest::ByteSizeLong(const MessageLite& base) {
  const LeaseKeepAliveRequest& this_ = static_cast<const LeaseKeepAliveRequest&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::size_t LeaseKeepAliveRequest::ByteSizeLong() const {
  const LeaseKeepAliveRequest& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
  // @@protoc_insertion_point(message_byte_size_start:etcdserverpb.LeaseKeepAliveRequest)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void)cached_has_bits;

   {
    // int64 ID = 1;
    cached_has_bits = this_._impl_._has_bits_[0];
    if ((cached_has_bits & 0x00000001u) != 0) {
      if (this_._internal_id() != 0) {
        total_size += ::_pbi::WireFormatLite::Int64SizePlusOne(
            this_._internal_id());
      }
    }
  }
  return this_.MaybeComputeUnknownFieldsSize(total_size,
                                             &this_._impl_._cached_size_);
}

void LeaseKeepAliveRequest::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<LeaseKeepAliveRequest*>(&to_msg);
  auto& from = static_cast<const LeaseKeepAliveRequest&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:etcdserverpb.LeaseKeepAliveRequest)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._impl_._has_bits_[0];
  if ((cached_has_bits & 0x00000001u) != 0) {
    if (from._internal_id() != 0) {
      _this->_impl_.id_ = from._impl_.id_;
    }
  }
  _this->_impl_._has_bits_[0] |= cached_has_bits;
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void LeaseKeepAliveRequest::CopyFrom(const LeaseKeepAliveRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:etcdserverpb.LeaseKeepAliveRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void LeaseKeepAliveRequest::InternalSwap(LeaseKeepAliveRequest* PROTOBUF_RESTRICT PROTOBUF_NONNULL other) {
  using ::std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  swap(_impl_.id_, other->_impl_.id_);
}

::google::protobuf::Metadata LeaseKeepAliveRequest::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class LeaseKeepAliveResponse::_Internal {
 public:
  using HasBits =
      decltype(::std::declval<LeaseKeepAliveResponse>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
      8 * PROTOBUF_FIELD_OFFSET(LeaseKeepAliveResponse, _impl_._has_bits_);
};

LeaseKeepAliveResponse::LeaseKeepAliveResponse(::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, LeaseKeepAliveResponse_class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:etcdserverpb.LeaseKeepAliveResponse)
}
PROTOBUF_NDEBUG_INLINE LeaseKeepAliveResponse::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const Impl_& from,
    const ::etcdserverpb::LeaseKeepAliveResponse& from_msg)
      : _has_bits_{from._has_bits_},
        _cached_size_{0} {}

LeaseKeepAliveResponse::LeaseKeepAliveResponse(
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena,
    const LeaseKeepAliveResponse& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, LeaseKeepAliveResponse_class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  LeaseKeepAliveResponse* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);
  ::uint32_t cached_has_bits = _impl_._has_bits_[0];
  _impl_.header_ = ((cached_has_bits & 0x00000001u) != 0)
                ? ::google::protobuf::Message::CopyConstruct(arena, *from._impl_.header_)
                : nullptr;
  ::memcpy(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, id_),
           reinterpret_cast<const char *>(&from._impl_) +
               offsetof(Impl_, id_),
           offsetof(Impl_, ttl_) -
               offsetof(Impl_, id_) +
               sizeof(Impl_::ttl_));

  // @@protoc_insertion_point(copy_constructor:etcdserverpb.LeaseKeepAliveResponse)
}
PROTOBUF_NDEBUG_INLINE LeaseKeepAliveResponse::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
      : _cached_size_{0} {}

inline void LeaseKeepAliveResponse::SharedCtor(::_pb::Arena* PROTOBUF_NULLABLE arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, header_),
           0,
           offsetof(Impl_, ttl_) -
               offsetof(Impl_, header_) +
               sizeof(Impl_::ttl_));
}
LeaseKeepAliveResponse::~LeaseKeepAliveResponse() {
  // @@protoc_insertion_point(destructor:etcdserverpb.LeaseKeepAliveResponse)
  SharedDtor(*this);
}
inline void LeaseKeepAliveResponse::SharedDtor(MessageLite& self) {
  LeaseKeepAliveResponse& this_ = static_cast<LeaseKeepAliveResponse&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  delete this_._impl_.header_;
  this_._impl_.~Impl_();
}

inline void* PROTOBUF_NONNULL LeaseKeepAliveResponse::PlacementNew_(
    const void* PROTOBUF_NONNULL, void* PROTOBUF_NONNULL mem,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena) {
  return ::new (mem) LeaseKeepAliveResponse(arena);
}
constexpr auto LeaseKeepAliveResponse::InternalNewImpl_() {
  return ::google::protobuf::internal::MessageCreator::ZeroInit(sizeof(LeaseKeepAliveResponse),
                                            alignof(LeaseKeepAliveResponse));
}
constexpr auto LeaseKeepAliveResponse::InternalGenerateClassData_() {
  return ::google::protobuf::internal::ClassDataFull{
      ::google::protobuf::internal::ClassData{
          &_LeaseKeepAliveResponse_default_instance_._instance,
          &_table_.header,
          nullptr,  // OnDemandRegisterArenaDtor
          nullptr,  // IsInitialized
          &LeaseKeepAliveResponse::MergeImpl,
          ::google::protobuf::Message::GetNewImpl<LeaseKeepAliveResponse>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
          &LeaseKeepAliveResponse::SharedDtor,
          ::google::protobuf::Message::GetClearImpl<LeaseKeepAliveResponse>(), &LeaseKeepAliveResponse::ByteSizeLong,
              &LeaseKeepAliveResponse::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
          PROTOBUF_FIELD_OFFSET(LeaseKeepAliveResponse, _impl_._cached_size_),
          false,
      },
      &LeaseKeepAliveResponse::kDescriptorMethods,
      &descriptor_table_proto_2fetcd_2fetcd_2eproto,
      nullptr,  // tracker
  };
}

PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 const
    ::google::protobuf::internal::ClassDataFull LeaseKeepAliveResponse_class_data_ =
        LeaseKeepAliveResponse::InternalGenerateClassData_();

PROTOBUF_ATTRIBUTE_WEAK const ::google::protobuf::internal::ClassData* PROTOBUF_NONNULL
LeaseKeepAliveResponse::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&LeaseKeepAliveResponse_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(LeaseKeepAliveResponse_class_data_.tc_table);
  return LeaseKeepAliveResponse_class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<2, 3, 1, 0, 2>
LeaseKeepAliveResponse::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(LeaseKeepAliveResponse, _impl_._has_bits_),
    0, // no _extensions_
    3, 24,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967288,  // skipmap
    offsetof(decltype(_table_), field_entries),
    3,  // num_field_entries
    1,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    LeaseKeepAliveResponse_class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::etcdserverpb::LeaseKeepAliveResponse>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
    // .etcdserverpb.ResponseHeader header = 1;
    {::_pbi::TcParser::FastMtS1,
     {10, 0, 0, PROTOBUF_FIELD_OFFSET(LeaseKeepAliveResponse, _impl_.header_)}},
    // int64 ID = 2;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint64_t, offsetof(LeaseKeepAliveResponse, _impl_.id_), 1>(),
     {16, 1, 0, PROTOBUF_FIELD_OFFSET(LeaseKeepAliveResponse, _impl_.id_)}},
    // int64 TTL = 3;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint64_t, offsetof(LeaseKeepAliveResponse, _impl_.ttl_), 2>(),
     {24, 2, 0, PROTOBUF_FIELD_OFFSET(LeaseKeepAliveResponse, _impl_.ttl_)}},
  }}, {{
    65535, 65535
  }}, {{
    // .etcdserverpb.ResponseHeader header = 1;
    {PROTOBUF_FIELD_OFFSET(LeaseKeepAliveResponse, _impl_.header_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
    // int64 ID = 2;
    {PROTOBUF_FIELD_OFFSET(LeaseKeepAliveResponse, _impl_.id_), _Internal::kHasBitsOffset + 1, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kInt64)},
    // int64 TTL = 3;
    {PROTOBUF_FIELD_OFFSET(LeaseKeepAliveResponse, _impl_.ttl_), _Internal::kHasBitsOffset + 2, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kInt64)},
  }},
  {{
      {::_pbi::TcParser::GetTable<::etcdserverpb::ResponseHeader>()},
  }},
  {{
  }},
};
PROTOBUF_NOINLINE void LeaseKeepAliveResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:etcdserverpb.LeaseKeepAliveResponse)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if ((cached_has_bits & 0x00000001u) != 0) {
    ABSL_DCHECK(_impl_.header_ != nullptr);
    _impl_.header_->Clear();
  }
  if ((cached_has_bits & 0x00000006u) != 0) {
    ::memset(&_impl_.id_, 0, static_cast<::size_t>(
        reinterpret_cast<char*>(&_impl_.ttl_) -
        reinterpret_cast<char*>(&_impl_.id_)) + sizeof(_impl_.ttl_));
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::uint8_t* PROTOBUF_NONNULL LeaseKeepAliveResponse::_InternalSerialize(
    const ::google::protobuf::MessageLite& base, ::uint8_t* PROTOBUF_NONNULL target,
    ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) {
  const LeaseKeepAliveResponse& this_ = static_cast<const LeaseKeepAliveResponse&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::uint8_t* PROTOBUF_NONNULL LeaseKeepAliveResponse::_InternalSerialize(
    ::uint8_t* PROTOBUF_NONNULL target,
    ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const {
  const LeaseKeepAliveResponse& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
  // @@protoc_insertion_point(serialize_to_array_start:etcdserverpb.LeaseKeepAliveResponse)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  cached_has_bits = this_._impl_._has_bits_[0];
  // .etcdserverpb.ResponseHeader header = 1;
  if ((cached_has_bits & 0x00000001u) != 0) {
    target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
        1, *this_._impl_.header_, this_._impl_.header_->GetCachedSize(), target,
        stream);
  }

  // int64 ID = 2;
  if ((cached_has_bits & 0x00000002u) != 0) {
    if (this_._internal_id() != 0) {
      target =
          ::google::protobuf::internal::WireFormatLite::WriteInt64ToArrayWithField<2>(
              stream, this_._internal_id(), target);
    }
  }

  // int64 TTL = 3;
  if ((cached_has_bits & 0x00000004u) != 0) {
    if (this_._internal_ttl() != 0) {
      target =
          ::google::protobuf::internal::WireFormatLite::WriteInt64ToArrayWithField<3>(
              stream, this_._internal_ttl(), target);
    }
  }

  if (ABSL_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:etcdserverpb.LeaseKeepAliveResponse)
  return target;
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::size_t LeaseKeepAliveResponse::ByteSizeLong(const MessageLite& base) {
  const LeaseKeepAliveResponse& this_ = static_cast<const LeaseKeepAliveResponse&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::size_t LeaseKeepAliveResponse::ByteSizeLong() const {
  const LeaseKeepAliveResponse& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
  // @@protoc_insertion_point(message_byte_size_start:etcdserverpb.LeaseKeepAliveResponse)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void)cached_has_bits;

  ::_pbi::Prefetch5LinesFrom7Lines(&this_);
  cached_has_bits = this_._impl_._has_bits_[0];
  if ((cached_has_bits & 0x00000007u) != 0) {
    // .etcdserverpb.ResponseHeader header = 1;
    if ((cached_has_bits & 0x00000001u) != 0) {
      total_size += 1 +
                    ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.header_);
    }
    // int64 ID = 2;
    if ((cached_has_bits & 0x00000002u) != 0) {
      if (this_._internal_id() != 0) {
        total_size += ::_pbi::WireFormatLite::Int64SizePlusOne(
            this_._internal_id());
      }
    }
    // int64 TTL = 3;
    if ((cached_has_bits & 0x00000004u) != 0) {
      if (this_._internal_ttl() != 0) {
        total_size += ::_pbi::WireFormatLite::Int64SizePlusOne(
            this_._internal_ttl());
      }
    }
  }
  return this_.MaybeComputeUnknownFieldsSize(total_size,
                                             &this_._impl_._cached_size_);
}

void LeaseKeepAliveResponse::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<LeaseKeepAliveResponse*>(&to_msg);
  auto& from = static_cast<const LeaseKeepAliveResponse&>(from_msg);
  ::google::protobuf::Arena* arena = _this->GetArena();
  // @@protoc_insertion_point(class_specific_merge_from_start:etcdserverpb.LeaseKeepAliveResponse)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._impl_._has_bits_[0];
  if ((cached_has_bits & 0x00000007u) != 0) {
    if ((cached_has_bits & 0x00000001u) != 0) {
      ABSL_DCHECK(from._impl_.header_ != nullptr);
      if (_this->_impl_.header_ == nullptr) {
        _this->_impl_.header_ = ::google::protobuf::Message::CopyConstruct(arena, *from._impl_.header_);
      } else {
        _this->_impl_.header_->MergeFrom(*from._impl_.header_);
      }
    }
    if ((cached_has_bits & 0x00000002u) != 0) {
      if (from._internal_id() != 0) {
        _this->_impl_.id_ = from._impl_.id_;
      }
    }
    if ((cached_has_bits & 0x00000004u) != 0) {
      if (from._internal_ttl() != 0) {
        _this->_impl_.ttl_ = from._impl_.ttl_;
      }
    }
  }
  _this->_impl_._has_bits_[0] |= cached_has_bits;
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void LeaseKeepAliveResponse::CopyFrom(const LeaseKeepAliveResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:etcdserverpb.LeaseKeepAliveResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void LeaseKeepAliveResponse::InternalSwap(LeaseKeepAliveResponse* PROTOBUF_RESTRICT PROTOBUF_NONNULL other) {
  using ::std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(LeaseKeepAliveResponse, _impl_.ttl_)
      + sizeof(LeaseKeepAliveResponse::_impl_.ttl_)
      - PROTOBUF_FIELD_OFFSET(LeaseKeepAliveResponse, _impl_.header_)>(
          reinterpret_cast<char*>(&_impl_.header_),
          reinterpret_cast<char*>(&other->_impl_.header_));
}

::google::protobuf::Metadata LeaseKeepAliveResponse::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class LeaseTimeToLiveRequest::_Internal {
 public:
  using HasBits =
      decltype(::std::declval<LeaseTimeToLiveRequest>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
      8 * PROTOBUF_FIELD_OFFSET(LeaseTimeToLiveRequest, _impl_._has_bits_);
};

LeaseTimeToLiveRequest::LeaseTimeToLiveRequest(::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, LeaseTimeToLiveRequest_class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:etcdserverpb.LeaseTimeToLiveRequest)
}
LeaseTimeToLiveRequest::LeaseTimeToLiveRequest(
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const LeaseTimeToLiveRequest& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, LeaseTimeToLiveRequest_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(from._impl_) {
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
}
PROTOBUF_NDEBUG_INLINE LeaseTimeToLiveRequest::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
      : _cached_size_{0} {}

inline void LeaseTimeToLiveRequest::SharedCtor(::_pb::Arena* PROTOBUF_NULLABLE arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, id_),
           0,
           offsetof(Impl_, keys_) -
               offsetof(Impl_, id_) +
               sizeof(Impl_::keys_));
}
LeaseTimeToLiveRequest::~LeaseTimeToLiveRequest() {
  // @@protoc_insertion_point(destructor:etcdserverpb.LeaseTimeToLiveRequest)
  SharedDtor(*this);
}
inline void LeaseTimeToLiveRequest::SharedDtor(MessageLite& self) {
  LeaseTimeToLiveRequest& this_ = static_cast<LeaseTimeToLiveRequest&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  this_._impl_.~Impl_();
}

inline void* PROTOBUF_NONNULL LeaseTimeToLiveRequest::PlacementNew_(
    const void* PROTOBUF_NONNULL, void* PROTOBUF_NONNULL mem,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena) {
  return ::new (mem) LeaseTimeToLiveRequest(arena);
}
constexpr auto LeaseTimeToLiveRequest::InternalNewImpl_() {
  return ::google::protobuf::internal::MessageCreator::ZeroInit(sizeof(LeaseTimeToLiveRequest),
                                            alignof(LeaseTimeToLiveRequest));
}
constexpr auto LeaseTimeToLiveRequest::InternalGenerateClassData_() {
  return ::google::protobuf::internal::ClassDataFull{
      ::google::protobuf::internal::ClassData{
          &_LeaseTimeToLiveRequest_default_instance_._instance,
          &_table_.header,
          nullptr,  // OnDemandRegisterArenaDtor
          nullptr,  // IsInitialized
          &LeaseTimeToLiveRequest::MergeImpl,
          ::google::protobuf::Message::GetNewImpl<LeaseTimeToLiveRequest>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
          &LeaseTimeToLiveRequest::SharedDtor,
          ::google::protobuf::Message::GetClearImpl<LeaseTimeToLiveRequest>(), &LeaseTimeToLiveRequest::ByteSizeLong,
              &LeaseTimeToLiveRequest::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
          PROTOBUF_FIELD_OFFSET(LeaseTimeToLiveRequest, _impl_._cached_size_),
          false,
      },
      &LeaseTimeToLiveRequest::kDescriptorMethods,
      &descriptor_table_proto_2fetcd_2fetcd_2eproto,
      nullptr,  // tracker
  };
}

PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 const
    ::google::protobuf::internal::ClassDataFull LeaseTimeToLiveRequest_class_data_ =
        LeaseTimeToLiveRequest::InternalGenerateClassData_();

PROTOBUF_ATTRIBUTE_WEAK const ::google::protobuf::internal::ClassData* PROTOBUF_NONNULL
LeaseTimeToLiveRequest::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&LeaseTimeToLiveRequest_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(LeaseTimeToLiveRequest_class_data_.tc_table);
  return LeaseTimeToLiveRequest_class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<1, 2, 0, 0, 2>
LeaseTimeToLiveRequest::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(LeaseTimeToLiveRequest, _impl_._has_bits_),
    0, // no _extensions_
    2, 8,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967292,  // skipmap
    offsetof(decltype(_table_), field_entries),
    2,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    LeaseTimeToLiveRequest_class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::etcdserverpb::LeaseTimeToLiveRequest>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // bool keys = 2;
    {::_pbi::TcParser::SingularVarintNoZag1<bool, offsetof(LeaseTimeToLiveRequest, _impl_.keys_), 1>(),
     {16, 1, 0, PROTOBUF_FIELD_OFFSET(LeaseTimeToLiveRequest, _impl_.keys_)}},
    // int64 ID = 1;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint64_t, offsetof(LeaseTimeToLiveRequest, _impl_.id_), 0>(),
     {8, 0, 0, PROTOBUF_FIELD_OFFSET(LeaseTimeToLiveRequest, _impl_.id_)}},
  }}, {{
    65535, 65535
  }}, {{
    // int64 ID = 1;
    {PROTOBUF_FIELD_OFFSET(LeaseTimeToLiveRequest, _impl_.id_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kInt64)},
    // bool keys = 2;
    {PROTOBUF_FIELD_OFFSET(LeaseTimeToLiveRequest, _impl_.keys_), _Internal::kHasBitsOffset + 1, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kBool)},
  }},
  // no aux_entries
  {{
  }},
};
PROTOBUF_NOINLINE void LeaseTimeToLiveRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:etcdserverpb.LeaseTimeToLiveRequest)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if ((cached_has_bits & 0x00000003u) != 0) {
    ::memset(&_impl_.id_, 0, static_cast<::size_t>(
        reinterpret_cast<char*>(&_impl_.keys_) -
        reinterpret_cast<char*>(&_impl_.id_)) + sizeof(_impl_.keys_));
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::uint8_t* PROTOBUF_NONNULL LeaseTimeToLiveRequest::_InternalSerialize(
    const ::google::protobuf::MessageLite& base, ::uint8_t* PROTOBUF_NONNULL target,
    ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) {
  const LeaseTimeToLiveRequest& this_ = static_cast<const LeaseTimeToLiveRequest&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::uint8_t* PROTOBUF_NONNULL LeaseTimeToLiveRequest::_InternalSerialize(
    ::uint8_t* PROTOBUF_NONNULL target,
    ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const {
  const LeaseTimeToLiveRequest& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
  // @@protoc_insertion_point(serialize_to_array_start:etcdserverpb.LeaseTimeToLiveRequest)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  // int64 ID = 1;
  if ((this_._impl_._has_bits_[0] & 0x00000001u) != 0) {
    if (this_._internal_id() != 0) {
      target =
          ::google::protobuf::internal::WireFormatLite::WriteInt64ToArrayWithField<1>(
              stream, this_._internal_id(), target);
    }
  }

  // bool keys = 2;
  if ((this_._impl_._has_bits_[0] & 0x00000002u) != 0) {
    if (this_._internal_keys() != 0) {
      target = stream->EnsureSpace(target);
      target = ::_pbi::WireFormatLite::WriteBoolToArray(
          2, this_._internal_keys(), target);
    }
  }

  if (ABSL_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:etcdserverpb.LeaseTimeToLiveRequest)
  return target;
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::size_t LeaseTimeToLiveRequest::ByteSizeLong(const MessageLite& base) {
  const LeaseTimeToLiveRequest& this_ = static_cast<const LeaseTimeToLiveRequest&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::size_t LeaseTimeToLiveRequest::ByteSizeLong() const {
  const LeaseTimeToLiveRequest& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
  // @@protoc_insertion_point(message_byte_size_start:etcdserverpb.LeaseTimeToLiveRequest)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void)cached_has_bits;

  ::_pbi::Prefetch5LinesFrom7Lines(&this_);
  cached_has_bits = this_._impl_._has_bits_[0];
  if ((cached_has_bits & 0x00000003u) != 0) {
    // int64 ID = 1;
    if ((cached_has_bits & 0x00000001u) != 0) {
      if (this_._internal_id() != 0) {
        total_size += ::_pbi::WireFormatLite::Int64SizePlusOne(
            this_._internal_id());
      }
    }
    // bool keys = 2;
    if ((cached_has_bits & 0x00000002u) != 0) {
      if (this_._internal_keys() != 0) {
        total_size += 2;
      }
    }
  }
  return this_.MaybeComputeUnknownFieldsSize(total_size,
                                             &this_._impl_._cached_size_);
}

void LeaseTimeToLiveRequest::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<LeaseTimeToLiveRequest*>(&to_msg);
  auto& from = static_cast<const LeaseTimeToLiveRequest&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:etcdserverpb.LeaseTimeToLiveRequest)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._impl_._has_bits_[0];
  if ((cached_has_bits & 0x00000003u) != 0) {
    if ((cached_has_bits & 0x00000001u) != 0) {
      if (from._internal_id() != 0) {
        _this->_impl_.id_ = from._impl_.id_;
      }
    }
    if ((cached_has_bits & 0x00000002u) != 0) {
      if (from._internal_keys() != 0) {
        _this->_impl_.keys_ = from._impl_.keys_;
      }
    }
  }
  _this->_impl_._has_bits_[0] |= cached_has_bits;
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void LeaseTimeToLiveRequest::CopyFrom(const LeaseTimeToLiveRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:etcdserverpb.LeaseTimeToLiveRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void LeaseTimeToLiveRequest::InternalSwap(LeaseTimeToLiveRequest* PROTOBUF_RESTRICT PROTOBUF_NONNULL other) {
  using ::std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(LeaseTimeToLiveRequest, _impl_.keys_)
      + sizeof(LeaseTimeToLiveRequest::_impl_.keys_)
      - PROTOBUF_FIELD_OFFSET(LeaseTimeToLiveRequest, _impl_.id_)>(
          reinterpret_cast<char*>(&_impl_.id_),
          reinterpret_cast<char*>(&other->_impl_.id_));
}

::google::protobuf::Metadata LeaseTimeToLiveRequest::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class LeaseTimeToLiveResponse::_Internal {
 public:
  using HasBits =
      decltype(::std::declval<LeaseTimeToLiveResponse>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
      8 * PROTOBUF_FIELD_OFFSET(LeaseTimeToLiveResponse, _impl_._has_bits_);
};

LeaseTimeToLiveResponse::LeaseTimeToLiveResponse(::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, LeaseTimeToLiveResponse_class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:etcdserverpb.LeaseTimeToLiveResponse)
}
PROTOBUF_NDEBUG_INLINE LeaseTimeToLiveResponse::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const Impl_& from,
    const ::etcdserverpb::LeaseTimeToLiveResponse& from_msg)
      : _has_bits_{from._has_bits_},
        _cached_size_{0},
        keys_{visibility, arena, from.keys_} {}

LeaseTimeToLiveResponse::LeaseTimeToLiveResponse(
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena,
    const LeaseTimeToLiveResponse& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, LeaseTimeToLiveResponse_class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  LeaseTimeToLiveResponse* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);
  ::uint32_t cached_has_bits = _impl_._has_bits_[0];
  _impl_.header_ = ((cached_has_bits & 0x00000001u) != 0)
                ? ::google::protobuf::Message::CopyConstruct(arena, *from._impl_.header_)
                : nullptr;
  ::memcpy(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, id_),
           reinterpret_cast<const char *>(&from._impl_) +
               offsetof(Impl_, id_),
           offsetof(Impl_, grantedttl_) -
               offsetof(Impl_, id_) +
               sizeof(Impl_::grantedttl_));

  // @@protoc_insertion_point(copy_constructor:etcdserverpb.LeaseTimeToLiveResponse)
}
PROTOBUF_NDEBUG_INLINE LeaseTimeToLiveResponse::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
      : _cached_size_{0},
        keys_{visibility, arena} {}

inline void LeaseTimeToLiveResponse::SharedCtor(::_pb::Arena* PROTOBUF_NULLABLE arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, header_),
           0,
           offsetof(Impl_, grantedttl_) -
               offsetof(Impl_, header_) +
               sizeof(Impl_::grantedttl_));
}
LeaseTimeToLiveResponse::~LeaseTimeToLiveResponse() {
  // @@protoc_insertion_point(destructor:etcdserverpb.LeaseTimeToLiveResponse)
  SharedDtor(*this);
}
inline void LeaseTimeToLiveResponse::SharedDtor(MessageLite& self) {
  LeaseTimeToLiveResponse& this_ = static_cast<LeaseTimeToLiveResponse&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  delete this_._impl_.header_;
  this_._impl_.~Impl_();
}

inline void* PROTOBUF_NONNULL LeaseTimeToLiveResponse::PlacementNew_(
    const void* PROTOBUF_NONNULL, void* PROTOBUF_NONNULL mem,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena) {
  return ::new (mem) LeaseTimeToLiveResponse(arena);
}
constexpr auto LeaseTimeToLiveResponse::InternalNewImpl_() {
  constexpr auto arena_bits = ::google::protobuf::internal::EncodePlacementArenaOffsets({
      PROTOBUF_FIELD_OFFSET(LeaseTimeToLiveResponse, _impl_.keys_) +
          decltype(LeaseTimeToLiveResponse::_impl_.keys_)::
              InternalGetArenaOffset(
                  ::google::protobuf::Message::internal_visibility()),
  });
  if (arena_bits.has_value()) {
    return ::google::protobuf::internal::MessageCreator::ZeroInit(
        sizeof(LeaseTimeToLiveResponse), alignof(LeaseTimeToLiveResponse), *arena_bits);
  } else {
    return ::google::protobuf::internal::MessageCreator(&LeaseTimeToLiveResponse::PlacementNew_,
                                 sizeof(LeaseTimeToLiveResponse),
                                 alignof(LeaseTimeToLiveResponse));
  }
}
constexpr auto LeaseTimeToLiveResponse::InternalGenerateClassData_() {
  return ::google::protobuf::internal::ClassDataFull{
      ::google::protobuf::internal::ClassData{
          &_LeaseTimeToLiveResponse_default_instance_._instance,
          &_table_.header,
          nullptr,  // OnDemandRegisterArenaDtor
          nullptr,  // IsInitialized
          &LeaseTimeToLiveResponse::MergeImpl,
          ::google::protobuf::Message::GetNewImpl<LeaseTimeToLiveResponse>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
          &LeaseTimeToLiveResponse::SharedDtor,
          ::google::protobuf::Message::GetClearImpl<LeaseTimeToLiveResponse>(), &LeaseTimeToLiveResponse::ByteSizeLong,
              &LeaseTimeToLiveResponse::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
          PROTOBUF_FIELD_OFFSET(LeaseTimeToLiveResponse, _impl_._cached_size_),
          false,
      },
      &LeaseTimeToLiveResponse::kDescriptorMethods,
      &descriptor_table_proto_2fetcd_2fetcd_2eproto,
      nullptr,  // tracker
  };
}

PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 const
    ::google::protobuf::internal::ClassDataFull LeaseTimeToLiveResponse_class_data_ =
        LeaseTimeToLiveResponse::InternalGenerateClassData_();

PROTOBUF_ATTRIBUTE_WEAK const ::google::protobuf::internal::ClassData* PROTOBUF_NONNULL
LeaseTimeToLiveResponse::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&LeaseTimeToLiveResponse_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(LeaseTimeToLiveResponse_class_data_.tc_table);
  return LeaseTimeToLiveResponse_class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<3, 5, 1, 0, 2>
LeaseTimeToLiveResponse::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(LeaseTimeToLiveResponse, _impl_._has_bits_),
    0, // no _extensions_
    5, 56,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967264,  // skipmap
    offsetof(decltype(_table_), field_entries),
    5,  // num_field_entries
    1,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    LeaseTimeToLiveResponse_class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::etcdserverpb::LeaseTimeToLiveResponse>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
    // .etcdserverpb.ResponseHeader header = 1;
    {::_pbi::TcParser::FastMtS1,
     {10, 0, 0, PROTOBUF_FIELD_OFFSET(LeaseTimeToLiveResponse, _impl_.header_)}},
    // int64 ID = 2;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint64_t, offsetof(LeaseTimeToLiveResponse, _impl_.id_), 1>(),
     {16, 1, 0, PROTOBUF_FIELD_OFFSET(LeaseTimeToLiveResponse, _impl_.id_)}},
    // int64 TTL = 3;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint64_t, offsetof(LeaseTimeToLiveResponse, _impl_.ttl_), 2>(),
     {24, 2, 0, PROTOBUF_FIELD_OFFSET(LeaseTimeToLiveResponse, _impl_.ttl_)}},
    // int64 grantedTTL = 4;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint64_t, offsetof(LeaseTimeToLiveResponse, _impl_.grantedttl_), 3>(),
     {32, 3, 0, PROTOBUF_FIELD_OFFSET(LeaseTimeToLiveResponse, _impl_.grantedttl_)}},
    // repeated bytes keys = 5;
    {::_pbi::TcParser::FastBR1,
     {42, 63, 0, PROTOBUF_FIELD_OFFSET(LeaseTimeToLiveResponse, _impl_.keys_)}},
    {::_pbi::TcParser::MiniParse, {}},
    {::_pbi::TcParser::MiniParse, {}},
  }}, {{
    65535, 65535
  }}, {{
    // .etcdserverpb.ResponseHeader header = 1;
    {PROTOBUF_FIELD_OFFSET(LeaseTimeToLiveResponse, _impl_.header_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
    // int64 ID = 2;
    {PROTOBUF_FIELD_OFFSET(LeaseTimeToLiveResponse, _impl_.id_), _Internal::kHasBitsOffset + 1, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kInt64)},
    // int64 TTL = 3;
    {PROTOBUF_FIELD_OFFSET(LeaseTimeToLiveResponse, _impl_.ttl_), _Internal::kHasBitsOffset + 2, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kInt64)},
    // int64 grantedTTL = 4;
    {PROTOBUF_FIELD_OFFSET(LeaseTimeToLiveResponse, _impl_.grantedttl_), _Internal::kHasBitsOffset + 3, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kInt64)},
    // repeated bytes keys = 5;
    {PROTOBUF_FIELD_OFFSET(LeaseTimeToLiveResponse, _impl_.keys_), -1, 0,
    (0 | ::_fl::kFcRepeated | ::_fl::kBytes | ::_fl::kRepSString)},
  }},
  {{
      {::_pbi::TcParser::GetTable<::etcdserverpb::ResponseHeader>()},
  }},
  {{
  }},
};
PROTOBUF_NOINLINE void LeaseTimeToLiveResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:etcdserverpb.LeaseTimeToLiveResponse)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.keys_.Clear();
  cached_has_bits = _impl_._has_bits_[0];
  if ((cached_has_bits & 0x00000001u) != 0) {
    ABSL_DCHECK(_impl_.header_ != nullptr);
    _impl_.header_->Clear();
  }
  if ((cached_has_bits & 0x0000000eu) != 0) {
    ::memset(&_impl_.id_, 0, static_cast<::size_t>(
        reinterpret_cast<char*>(&_impl_.grantedttl_) -
        reinterpret_cast<char*>(&_impl_.id_)) + sizeof(_impl_.grantedttl_));
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::uint8_t* PROTOBUF_NONNULL LeaseTimeToLiveResponse::_InternalSerialize(
    const ::google::protobuf::MessageLite& base, ::uint8_t* PROTOBUF_NONNULL target,
    ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) {
  const LeaseTimeToLiveResponse& this_ = static_cast<const LeaseTimeToLiveResponse&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::uint8_t* PROTOBUF_NONNULL LeaseTimeToLiveResponse::_InternalSerialize(
    ::uint8_t* PROTOBUF_NONNULL target,
    ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const {
  const LeaseTimeToLiveResponse& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
  // @@protoc_insertion_point(serialize_to_array_start:etcdserverpb.LeaseTimeToLiveResponse)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  cached_has_bits = this_._impl_._has_bits_[0];
  // .etcdserverpb.ResponseHeader header = 1;
  if ((cached_has_bits & 0x00000001u) != 0) {
    target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
        1, *this_._impl_.header_, this_._impl_.header_->GetCachedSize(), target,
        stream);
  }

  // int64 ID = 2;
  if ((cached_has_bits & 0x00000002u) != 0) {
    if (this_._internal_id() != 0) {
      target =
          ::google::protobuf::internal::WireFormatLite::WriteInt64ToArrayWithField<2>(
              stream, this_._internal_id(), target);
    }
  }

  // int64 TTL = 3;
  if ((cached_has_bits & 0x00000004u) != 0) {
    if (this_._internal_ttl() != 0) {
      target =
          ::google::protobuf::internal::WireFormatLite::WriteInt64ToArrayWithField<3>(
              stream, this_._internal_ttl(), target);
    }
  }

  // int64 grantedTTL = 4;
  if ((cached_has_bits & 0x00000008u) != 0) {
    if (this_._internal_grantedttl() != 0) {
      target =
          ::google::protobuf::internal::WireFormatLite::WriteInt64ToArrayWithField<4>(
              stream, this_._internal_grantedttl(), target);
    }
  }

  // repeated bytes keys = 5;
  for (int i = 0, n = this_._internal_keys_size(); i < n; ++i) {
    const auto& s = this_._internal_keys().Get(i);
    target = stream->WriteBytes(5, s, target);
  }

  if (ABSL_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:etcdserverpb.LeaseTimeToLiveResponse)
  return target;
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::size_t LeaseTimeToLiveResponse::ByteSizeLong(const MessageLite& base) {
  const LeaseTimeToLiveResponse& this_ = static_cast<const LeaseTimeToLiveResponse&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::size_t LeaseTimeToLiveResponse::ByteSizeLong() const {
  const LeaseTimeToLiveResponse& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
  // @@protoc_insertion_point(message_byte_size_start:etcdserverpb.LeaseTimeToLiveResponse)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void)cached_has_bits;

  ::_pbi::Prefetch5LinesFrom7Lines(&this_);
   {
    // repeated bytes keys = 5;
    {
      total_size +=
          1 * ::google::protobuf::internal::FromIntSize(this_._internal_keys().size());
      for (int i = 0, n = this_._internal_keys().size(); i < n; ++i) {
        total_size += ::google::protobuf::internal::WireFormatLite::BytesSize(
            this_._internal_keys().Get(i));
      }
    }
  }
  cached_has_bits = this_._impl_._has_bits_[0];
  if ((cached_has_bits & 0x0000000fu) != 0) {
    // .etcdserverpb.ResponseHeader header = 1;
    if ((cached_has_bits & 0x00000001u) != 0) {
      total_size += 1 +
                    ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.header_);
    }
    // int64 ID = 2;
    if ((cached_has_bits & 0x00000002u) != 0) {
      if (this_._internal_id() != 0) {
        total_size += ::_pbi::WireFormatLite::Int64SizePlusOne(
            this_._internal_id());
      }
    }
    // int64 TTL = 3;
    if ((cached_has_bits & 0x00000004u) != 0) {
      if (this_._internal_ttl() != 0) {
        total_size += ::_pbi::WireFormatLite::Int64SizePlusOne(
            this_._internal_ttl());
      }
    }
    // int64 grantedTTL = 4;
    if ((cached_has_bits & 0x00000008u) != 0) {
      if (this_._internal_grantedttl() != 0) {
        total_size += ::_pbi::WireFormatLite::Int64SizePlusOne(
            this_._internal_grantedttl());
      }
    }
  }
  return this_.MaybeComputeUnknownFieldsSize(total_size,
                                             &this_._impl_._cached_size_);
}

void LeaseTimeToLiveResponse::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<LeaseTimeToLiveResponse*>(&to_msg);
  auto& from = static_cast<const LeaseTimeToLiveResponse&>(from_msg);
  ::google::protobuf::Arena* arena = _this->GetArena();
  // @@protoc_insertion_point(class_specific_merge_from_start:etcdserverpb.LeaseTimeToLiveResponse)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_internal_mutable_keys()->MergeFrom(from._internal_keys());
  cached_has_bits = from._impl_._has_bits_[0];
  if ((cached_has_bits & 0x0000000fu) != 0) {
    if ((cached_has_bits & 0x00000001u) != 0) {
      ABSL_DCHECK(from._impl_.header_ != nullptr);
      if (_this->_impl_.header_ == nullptr) {
        _this->_impl_.header_ = ::google::protobuf::Message::CopyConstruct(arena, *from._impl_.header_);
      } else {
        _this->_impl_.header_->MergeFrom(*from._impl_.header_);
      }
    }
    if ((cached_has_bits & 0x00000002u) != 0) {
      if (from._internal_id() != 0) {
        _this->_impl_.id_ = from._impl_.id_;
      }
    }
    if ((cached_has_bits & 0x00000004u) != 0) {
      if (from._internal_ttl() != 0) {
        _this->_impl_.ttl_ = from._impl_.ttl_;
      }
    }
    if ((cached_has_bits & 0x00000008u) != 0) {
      if (from._internal_grantedttl() != 0) {
        _this->_impl_.grantedttl_ = from._impl_.grantedttl_;
      }
    }
  }
  _this->_impl_._has_bits_[0] |= cached_has_bits;
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void LeaseTimeToLiveResponse::CopyFrom(const LeaseTimeToLiveResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:etcdserverpb.LeaseTimeToLiveResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void LeaseTimeToLiveResponse::InternalSwap(LeaseTimeToLiveResponse* PROTOBUF_RESTRICT PROTOBUF_NONNULL other) {
  using ::std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  _impl_.keys_.InternalSwap(&other->_impl_.keys_);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(LeaseTimeToLiveResponse, _impl_.grantedttl_)
      + sizeof(LeaseTimeToLiveResponse::_impl_.grantedttl_)
      - PROTOBUF_FIELD_OFFSET(LeaseTimeToLiveResponse, _impl_.header_)>(
          reinterpret_cast<char*>(&_impl_.header_),
          reinterpret_cast<char*>(&other->_impl_.header_));
}

::google::protobuf::Metadata LeaseTimeToLiveResponse::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class LeaseLeasesRequest::_Internal {
 public:
};

LeaseLeasesRequest::LeaseLeasesRequest(::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::internal::ZeroFieldsBase(arena, LeaseLeasesRequest_class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::internal::ZeroFieldsBase(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  // @@protoc_insertion_point(arena_constructor:etcdserverpb.LeaseLeasesRequest)
}
LeaseLeasesRequest::LeaseLeasesRequest(
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena,
    const LeaseLeasesRequest& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::internal::ZeroFieldsBase(arena, LeaseLeasesRequest_class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::internal::ZeroFieldsBase(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  LeaseLeasesRequest* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);

  // @@protoc_insertion_point(copy_constructor:etcdserverpb.LeaseLeasesRequest)
}

inline void* PROTOBUF_NONNULL LeaseLeasesRequest::PlacementNew_(
    const void* PROTOBUF_NONNULL, void* PROTOBUF_NONNULL mem,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena) {
  return ::new (mem) LeaseLeasesRequest(arena);
}
constexpr auto LeaseLeasesRequest::InternalNewImpl_() {
  return ::google::protobuf::internal::MessageCreator::ZeroInit(sizeof(LeaseLeasesRequest),
                                            alignof(LeaseLeasesRequest));
}
constexpr auto LeaseLeasesRequest::InternalGenerateClassData_() {
  return ::google::protobuf::internal::ClassDataFull{
      ::google::protobuf::internal::ClassData{
          &_LeaseLeasesRequest_default_instance_._instance,
          &_table_.header,
          nullptr,  // OnDemandRegisterArenaDtor
          nullptr,  // IsInitialized
          &LeaseLeasesRequest::MergeImpl,
          ::google::protobuf::internal::ZeroFieldsBase::GetNewImpl<LeaseLeasesRequest>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
          &LeaseLeasesRequest::SharedDtor,
          ::google::protobuf::internal::ZeroFieldsBase::GetClearImpl<LeaseLeasesRequest>(), &LeaseLeasesRequest::ByteSizeLong,
              &LeaseLeasesRequest::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
          PROTOBUF_FIELD_OFFSET(LeaseLeasesRequest, _impl_._cached_size_),
          false,
      },
      &LeaseLeasesRequest::kDescriptorMethods,
      &descriptor_table_proto_2fetcd_2fetcd_2eproto,
      nullptr,  // tracker
  };
}

PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 const
    ::google::protobuf::internal::ClassDataFull LeaseLeasesRequest_class_data_ =
        LeaseLeasesRequest::InternalGenerateClassData_();

PROTOBUF_ATTRIBUTE_WEAK const ::google::protobuf::internal::ClassData* PROTOBUF_NONNULL
LeaseLeasesRequest::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&LeaseLeasesRequest_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(LeaseLeasesRequest_class_data_.tc_table);
  return LeaseLeasesRequest_class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<0, 0, 0, 0, 2>
LeaseLeasesRequest::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    0, 0,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967295,  // skipmap
    offsetof(decltype(_table_), field_names),  // no field_entries
    0,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    LeaseLeasesRequest_class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::etcdserverpb::LeaseLeasesRequest>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
  }}, {{
    65535, 65535
  }}, // no field_entries, or aux_entries
  {{
  }},
};







::google::protobuf::Metadata LeaseLeasesRequest::GetMetadata() const {
  return ::google::protobuf::internal::ZeroFieldsBase::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class LeaseStatus::_Internal {
 public:
  using HasBits =
      decltype(::std::declval<LeaseStatus>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
      8 * PROTOBUF_FIELD_OFFSET(LeaseStatus, _impl_._has_bits_);
};

LeaseStatus::LeaseStatus(::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, LeaseStatus_class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:etcdserverpb.LeaseStatus)
}
LeaseStatus::LeaseStatus(
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const LeaseStatus& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, LeaseStatus_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(from._impl_) {
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
}
PROTOBUF_NDEBUG_INLINE LeaseStatus::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
      : _cached_size_{0} {}

inline void LeaseStatus::SharedCtor(::_pb::Arena* PROTOBUF_NULLABLE arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  _impl_.id_ = {};
}
LeaseStatus::~LeaseStatus() {
  // @@protoc_insertion_point(destructor:etcdserverpb.LeaseStatus)
  SharedDtor(*this);
}
inline void LeaseStatus::SharedDtor(MessageLite& self) {
  LeaseStatus& this_ = static_cast<LeaseStatus&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  this_._impl_.~Impl_();
}

inline void* PROTOBUF_NONNULL LeaseStatus::PlacementNew_(
    const void* PROTOBUF_NONNULL, void* PROTOBUF_NONNULL mem,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena) {
  return ::new (mem) LeaseStatus(arena);
}
constexpr auto LeaseStatus::InternalNewImpl_() {
  return ::google::protobuf::internal::MessageCreator::ZeroInit(sizeof(LeaseStatus),
                                            alignof(LeaseStatus));
}
constexpr auto LeaseStatus::InternalGenerateClassData_() {
  return ::google::protobuf::internal::ClassDataFull{
      ::google::protobuf::internal::ClassData{
          &_LeaseStatus_default_instance_._instance,
          &_table_.header,
          nullptr,  // OnDemandRegisterArenaDtor
          nullptr,  // IsInitialized
          &LeaseStatus::MergeImpl,
          ::google::protobuf::Message::GetNewImpl<LeaseStatus>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
          &LeaseStatus::SharedDtor,
          ::google::protobuf::Message::GetClearImpl<LeaseStatus>(), &LeaseStatus::ByteSizeLong,
              &LeaseStatus::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
          PROTOBUF_FIELD_OFFSET(LeaseStatus, _impl_._cached_size_),
          false,
      },
      &LeaseStatus::kDescriptorMethods,
      &descriptor_table_proto_2fetcd_2fetcd_2eproto,
      nullptr,  // tracker
  };
}

PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 const
    ::google::protobuf::internal::ClassDataFull LeaseStatus_class_data_ =
        LeaseStatus::InternalGenerateClassData_();

PROTOBUF_ATTRIBUTE_WEAK const ::google::protobuf::internal::ClassData* PROTOBUF_NONNULL
LeaseStatus::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&LeaseStatus_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(LeaseStatus_class_data_.tc_table);
  return LeaseStatus_class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<0, 1, 0, 0, 2>
LeaseStatus::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(LeaseStatus, _impl_._has_bits_),
    0, // no _extensions_
    1, 0,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967294,  // skipmap
    offsetof(decltype(_table_), field_entries),
    1,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    LeaseStatus_class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::etcdserverpb::LeaseStatus>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // int64 ID = 1;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint64_t, offsetof(LeaseStatus, _impl_.id_), 0>(),
     {8, 0, 0, PROTOBUF_FIELD_OFFSET(LeaseStatus, _impl_.id_)}},
  }}, {{
    65535, 65535
  }}, {{
    // int64 ID = 1;
    {PROTOBUF_FIELD_OFFSET(LeaseStatus, _impl_.id_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kInt64)},
  }},
  // no aux_entries
  {{
  }},
};
PROTOBUF_NOINLINE void LeaseStatus::Clear() {
// @@protoc_insertion_point(message_clear_start:etcdserverpb.LeaseStatus)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.id_ = ::int64_t{0};
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::uint8_t* PROTOBUF_NONNULL LeaseStatus::_InternalSerialize(
    const ::google::protobuf::MessageLite& base, ::uint8_t* PROTOBUF_NONNULL target,
    ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) {
  const LeaseStatus& this_ = static_cast<const LeaseStatus&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::uint8_t* PROTOBUF_NONNULL LeaseStatus::_InternalSerialize(
    ::uint8_t* PROTOBUF_NONNULL target,
    ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const {
  const LeaseStatus& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
  // @@protoc_insertion_point(serialize_to_array_start:etcdserverpb.LeaseStatus)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  // int64 ID = 1;
  if ((this_._impl_._has_bits_[0] & 0x00000001u) != 0) {
    if (this_._internal_id() != 0) {
      target =
          ::google::protobuf::internal::WireFormatLite::WriteInt64ToArrayWithField<1>(
              stream, this_._internal_id(), target);
    }
  }

  if (ABSL_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:etcdserverpb.LeaseStatus)
  return target;
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::size_t LeaseStatus::ByteSizeLong(const MessageLite& base) {
  const LeaseStatus& this_ = static_cast<const LeaseStatus&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::size_t LeaseStatus::ByteSizeLong() const {
  const LeaseStatus& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
  // @@protoc_insertion_point(message_byte_size_start:etcdserverpb.LeaseStatus)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void)cached_has_bits;

   {
    // int64 ID = 1;
    cached_has_bits = this_._impl_._has_bits_[0];
    if ((cached_has_bits & 0x00000001u) != 0) {
      if (this_._internal_id() != 0) {
        total_size += ::_pbi::WireFormatLite::Int64SizePlusOne(
            this_._internal_id());
      }
    }
  }
  return this_.MaybeComputeUnknownFieldsSize(total_size,
                                             &this_._impl_._cached_size_);
}

void LeaseStatus::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<LeaseStatus*>(&to_msg);
  auto& from = static_cast<const LeaseStatus&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:etcdserverpb.LeaseStatus)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._impl_._has_bits_[0];
  if ((cached_has_bits & 0x00000001u) != 0) {
    if (from._internal_id() != 0) {
      _this->_impl_.id_ = from._impl_.id_;
    }
  }
  _this->_impl_._has_bits_[0] |= cached_has_bits;
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void LeaseStatus::CopyFrom(const LeaseStatus& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:etcdserverpb.LeaseStatus)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void LeaseStatus::InternalSwap(LeaseStatus* PROTOBUF_RESTRICT PROTOBUF_NONNULL other) {
  using ::std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  swap(_impl_.id_, other->_impl_.id_);
}

::google::protobuf::Metadata LeaseStatus::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class LeaseLeasesResponse::_Internal {
 public:
  using HasBits =
      decltype(::std::declval<LeaseLeasesResponse>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
      8 * PROTOBUF_FIELD_OFFSET(LeaseLeasesResponse, _impl_._has_bits_);
};

LeaseLeasesResponse::LeaseLeasesResponse(::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, LeaseLeasesResponse_class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:etcdserverpb.LeaseLeasesResponse)
}
PROTOBUF_NDEBUG_INLINE LeaseLeasesResponse::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const Impl_& from,
    const ::etcdserverpb::LeaseLeasesResponse& from_msg)
      : _has_bits_{from._has_bits_},
        _cached_size_{0},
        leases_{visibility, arena, from.leases_} {}

LeaseLeasesResponse::LeaseLeasesResponse(
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena,
    const LeaseLeasesResponse& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, LeaseLeasesResponse_class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  LeaseLeasesResponse* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);
  ::uint32_t cached_has_bits = _impl_._has_bits_[0];
  _impl_.header_ = ((cached_has_bits & 0x00000001u) != 0)
                ? ::google::protobuf::Message::CopyConstruct(arena, *from._impl_.header_)
                : nullptr;

  // @@protoc_insertion_point(copy_constructor:etcdserverpb.LeaseLeasesResponse)
}
PROTOBUF_NDEBUG_INLINE LeaseLeasesResponse::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
      : _cached_size_{0},
        leases_{visibility, arena} {}

inline void LeaseLeasesResponse::SharedCtor(::_pb::Arena* PROTOBUF_NULLABLE arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  _impl_.header_ = {};
}
LeaseLeasesResponse::~LeaseLeasesResponse() {
  // @@protoc_insertion_point(destructor:etcdserverpb.LeaseLeasesResponse)
  SharedDtor(*this);
}
inline void LeaseLeasesResponse::SharedDtor(MessageLite& self) {
  LeaseLeasesResponse& this_ = static_cast<LeaseLeasesResponse&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  delete this_._impl_.header_;
  this_._impl_.~Impl_();
}

inline void* PROTOBUF_NONNULL LeaseLeasesResponse::PlacementNew_(
    const void* PROTOBUF_NONNULL, void* PROTOBUF_NONNULL mem,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena) {
  return ::new (mem) LeaseLeasesResponse(arena);
}
constexpr auto LeaseLeasesResponse::InternalNewImpl_() {
  constexpr auto arena_bits = ::google::protobuf::internal::EncodePlacementArenaOffsets({
      PROTOBUF_FIELD_OFFSET(LeaseLeasesResponse, _impl_.leases_) +
          decltype(LeaseLeasesResponse::_impl_.leases_)::
              InternalGetArenaOffset(
                  ::google::protobuf::Message::internal_visibility()),
  });
  if (arena_bits.has_value()) {
    return ::google::protobuf::internal::MessageCreator::ZeroInit(
        sizeof(LeaseLeasesResponse), alignof(LeaseLeasesResponse), *arena_bits);
  } else {
    return ::google::protobuf::internal::MessageCreator(&LeaseLeasesResponse::PlacementNew_,
                                 sizeof(LeaseLeasesResponse),
                                 alignof(LeaseLeasesResponse));
  }
}
constexpr auto LeaseLeasesResponse::InternalGenerateClassData_() {
  return ::google::protobuf::internal::ClassDataFull{
      ::google::protobuf::internal::ClassData{
          &_LeaseLeasesResponse_default_instance_._instance,
          &_table_.header,
          nullptr,  // OnDemandRegisterArenaDtor
          nullptr,  // IsInitialized
          &LeaseLeasesResponse::MergeImpl,
          ::google::protobuf::Message::GetNewImpl<LeaseLeasesResponse>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
          &LeaseLeasesResponse::SharedDtor,
          ::google::protobuf::Message::GetClearImpl<LeaseLeasesResponse>(), &LeaseLeasesResponse::ByteSizeLong,
              &LeaseLeasesResponse::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
          PROTOBUF_FIELD_OFFSET(LeaseLeasesResponse, _impl_._cached_size_),
          false,
      },
      &LeaseLeasesResponse::kDescriptorMethods,
      &descriptor_table_proto_2fetcd_2fetcd_2eproto,
      nullptr,  // tracker
  };
}

PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 const
    ::google::protobuf::internal::ClassDataFull LeaseLeasesResponse_class_data_ =
        LeaseLeasesResponse::InternalGenerateClassData_();

PROTOBUF_ATTRIBUTE_WEAK const ::google::protobuf::internal::ClassData* PROTOBUF_NONNULL
LeaseLeasesResponse::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&LeaseLeasesResponse_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(LeaseLeasesResponse_class_data_.tc_table);
  return LeaseLeasesResponse_class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<1, 2, 2, 0, 2>
LeaseLeasesResponse::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(LeaseLeasesResponse, _impl_._has_bits_),
    0, // no _extensions_
    2, 8,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967292,  // skipmap
    offsetof(decltype(_table_), field_entries),
    2,  // num_field_entries
    2,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    LeaseLeasesResponse_class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::etcdserverpb::LeaseLeasesResponse>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // repeated .etcdserverpb.LeaseStatus leases = 2;
    {::_pbi::TcParser::FastMtR1,
     {18, 63, 1, PROTOBUF_FIELD_OFFSET(LeaseLeasesResponse, _impl_.leases_)}},
    // .etcdserverpb.ResponseHeader header = 1;
    {::_pbi::TcParser::FastMtS1,
     {10, 0, 0, PROTOBUF_FIELD_OFFSET(LeaseLeasesResponse, _impl_.header_)}},
  }}, {{
    65535, 65535
  }}, {{
    // .etcdserverpb.ResponseHeader header = 1;
    {PROTOBUF_FIELD_OFFSET(LeaseLeasesResponse, _impl_.header_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
    // repeated .etcdserverpb.LeaseStatus leases = 2;
    {PROTOBUF_FIELD_OFFSET(LeaseLeasesResponse, _impl_.leases_), -1, 1,
    (0 | ::_fl::kFcRepeated | ::_fl::kMessage | ::_fl::kTvTable)},
  }},
  {{
      {::_pbi::TcParser::GetTable<::etcdserverpb::ResponseHeader>()},
      {::_pbi::TcParser::GetTable<::etcdserverpb::LeaseStatus>()},
  }},
  {{
  }},
};
PROTOBUF_NOINLINE void LeaseLeasesResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:etcdserverpb.LeaseLeasesResponse)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.leases_.Clear();
  cached_has_bits = _impl_._has_bits_[0];
  if ((cached_has_bits & 0x00000001u) != 0) {
    ABSL_DCHECK(_impl_.header_ != nullptr);
    _impl_.header_->Clear();
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::uint8_t* PROTOBUF_NONNULL LeaseLeasesResponse::_InternalSerialize(
    const ::google::protobuf::MessageLite& base, ::uint8_t* PROTOBUF_NONNULL target,
    ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) {
  const LeaseLeasesResponse& this_ = static_cast<const LeaseLeasesResponse&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::uint8_t* PROTOBUF_NONNULL LeaseLeasesResponse::_InternalSerialize(
    ::uint8_t* PROTOBUF_NONNULL target,
    ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const {
  const LeaseLeasesResponse& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
  // @@protoc_insertion_point(serialize_to_array_start:etcdserverpb.LeaseLeasesResponse)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  cached_has_bits = this_._impl_._has_bits_[0];
  // .etcdserverpb.ResponseHeader header = 1;
  if ((cached_has_bits & 0x00000001u) != 0) {
    target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
        1, *this_._impl_.header_, this_._impl_.header_->GetCachedSize(), target,
        stream);
  }

  // repeated .etcdserverpb.LeaseStatus leases = 2;
  for (unsigned i = 0, n = static_cast<unsigned>(
                           this_._internal_leases_size());
       i < n; i++) {
    const auto& repfield = this_._internal_leases().Get(i);
    target =
        ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
            2, repfield, repfield.GetCachedSize(),
            target, stream);
  }

  if (ABSL_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:etcdserverpb.LeaseLeasesResponse)
  return target;
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::size_t LeaseLeasesResponse::ByteSizeLong(const MessageLite& base) {
  const LeaseLeasesResponse& this_ = static_cast<const LeaseLeasesResponse&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::size_t LeaseLeasesResponse::ByteSizeLong() const {
  const LeaseLeasesResponse& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
  // @@protoc_insertion_point(message_byte_size_start:etcdserverpb.LeaseLeasesResponse)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void)cached_has_bits;

  ::_pbi::Prefetch5LinesFrom7Lines(&this_);
   {
    // repeated .etcdserverpb.LeaseStatus leases = 2;
    {
      total_size += 1UL * this_._internal_leases_size();
      for (const auto& msg : this_._internal_leases()) {
        total_size += ::google::protobuf::internal::WireFormatLite::MessageSize(msg);
      }
    }
  }
   {
    // .etcdserverpb.ResponseHeader header = 1;
    cached_has_bits = this_._impl_._has_bits_[0];
    if ((cached_has_bits & 0x00000001u) != 0) {
      total_size += 1 +
                    ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.header_);
    }
  }
  return this_.MaybeComputeUnknownFieldsSize(total_size,
                                             &this_._impl_._cached_size_);
}

void LeaseLeasesResponse::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<LeaseLeasesResponse*>(&to_msg);
  auto& from = static_cast<const LeaseLeasesResponse&>(from_msg);
  ::google::protobuf::Arena* arena = _this->GetArena();
  // @@protoc_insertion_point(class_specific_merge_from_start:etcdserverpb.LeaseLeasesResponse)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_internal_mutable_leases()->MergeFrom(
      from._internal_leases());
  cached_has_bits = from._impl_._has_bits_[0];
  if ((cached_has_bits & 0x00000001u) != 0) {
    ABSL_DCHECK(from._impl_.header_ != nullptr);
    if (_this->_impl_.header_ == nullptr) {
      _this->_impl_.header_ = ::google::protobuf::Message::CopyConstruct(arena, *from._impl_.header_);
    } else {
      _this->_impl_.header_->MergeFrom(*from._impl_.header_);
    }
  }
  _this->_impl_._has_bits_[0] |= cached_has_bits;
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void LeaseLeasesResponse::CopyFrom(const LeaseLeasesResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:etcdserverpb.LeaseLeasesResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void LeaseLeasesResponse::InternalSwap(LeaseLeasesResponse* PROTOBUF_RESTRICT PROTOBUF_NONNULL other) {
  using ::std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  _impl_.leases_.InternalSwap(&other->_impl_.leases_);
  swap(_impl_.header_, other->_impl_.header_);
}

::google::protobuf::Metadata LeaseLeasesResponse::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// @@protoc_insertion_point(namespace_scope)
}  // namespace etcdserverpb
namespace google {
namespace protobuf {
}  // namespace protobuf
}  // namespace google
// @@protoc_insertion_point(global_scope)
PROTOBUF_ATTRIBUTE_INIT_PRIORITY2 static ::std::false_type
    _static_init2_ [[maybe_unused]] =
        (::_pbi::AddDescriptors(&descriptor_table_proto_2fetcd_2fetcd_2eproto),
         ::std::false_type{});
#include "google/protobuf/port_undef.inc"
