// Generated by the protocol buffer compiler.  DO NOT EDIT!
// NO CHECKED-IN PROTOBUF GENCODE
// source: proto/gate/gate_service.proto
// Protobuf C++ Version: 6.31.1

#include "proto/gate/gate_service.pb.h"

#include <algorithm>
#include <type_traits>
#include "google/protobuf/io/coded_stream.h"
#include "google/protobuf/generated_message_tctable_impl.h"
#include "google/protobuf/extension_set.h"
#include "google/protobuf/generated_message_util.h"
#include "google/protobuf/wire_format_lite.h"
#include "google/protobuf/descriptor.h"
#include "google/protobuf/generated_message_reflection.h"
#include "google/protobuf/reflection_ops.h"
#include "google/protobuf/wire_format.h"
// @@protoc_insertion_point(includes)

// Must be included last.
#include "google/protobuf/port_def.inc"
PROTOBUF_PRAGMA_INIT_SEG
namespace _pb = ::google::protobuf;
namespace _pbi = ::google::protobuf::internal;
namespace _fl = ::google::protobuf::internal::field_layout;

inline constexpr KickSessionRequest::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        session_id_{::uint64_t{0u}} {}

template <typename>
PROTOBUF_CONSTEXPR KickSessionRequest::KickSessionRequest(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(KickSessionRequest_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct KickSessionRequestDefaultTypeInternal {
  PROTOBUF_CONSTEXPR KickSessionRequestDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~KickSessionRequestDefaultTypeInternal() {}
  union {
    KickSessionRequest _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 KickSessionRequestDefaultTypeInternal _KickSessionRequest_default_instance_;

inline constexpr BroadcastToPlayersRequest::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        session_list_{},
        _session_list_cached_byte_size_{0},
        message_content_{nullptr} {}

template <typename>
PROTOBUF_CONSTEXPR BroadcastToPlayersRequest::BroadcastToPlayersRequest(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(BroadcastToPlayersRequest_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct BroadcastToPlayersRequestDefaultTypeInternal {
  PROTOBUF_CONSTEXPR BroadcastToPlayersRequestDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~BroadcastToPlayersRequestDefaultTypeInternal() {}
  union {
    BroadcastToPlayersRequest _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 BroadcastToPlayersRequestDefaultTypeInternal _BroadcastToPlayersRequest_default_instance_;
static constexpr const ::_pb::EnumDescriptor *PROTOBUF_NONNULL *PROTOBUF_NULLABLE
    file_level_enum_descriptors_proto_2fgate_2fgate_5fservice_2eproto = nullptr;
static const ::_pb::ServiceDescriptor* PROTOBUF_NONNULL
    file_level_service_descriptors_proto_2fgate_2fgate_5fservice_2eproto[1];
const ::uint32_t
    TableStruct_proto_2fgate_2fgate_5fservice_2eproto::offsets[] ABSL_ATTRIBUTE_SECTION_VARIABLE(
        protodesc_cold) = {
        0x081, // bitmap
        PROTOBUF_FIELD_OFFSET(::KickSessionRequest, _impl_._has_bits_),
        4, // hasbit index offset
        PROTOBUF_FIELD_OFFSET(::KickSessionRequest, _impl_.session_id_),
        0,
        0x081, // bitmap
        PROTOBUF_FIELD_OFFSET(::BroadcastToPlayersRequest, _impl_._has_bits_),
        5, // hasbit index offset
        PROTOBUF_FIELD_OFFSET(::BroadcastToPlayersRequest, _impl_.session_list_),
        PROTOBUF_FIELD_OFFSET(::BroadcastToPlayersRequest, _impl_.message_content_),
        ~0u,
        0,
};

static const ::_pbi::MigrationSchema
    schemas[] ABSL_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
        {0, sizeof(::KickSessionRequest)},
        {5, sizeof(::BroadcastToPlayersRequest)},
};
static const ::_pb::Message* PROTOBUF_NONNULL const file_default_instances[] = {
    &::_KickSessionRequest_default_instance_._instance,
    &::_BroadcastToPlayersRequest_default_instance_._instance,
};
const char descriptor_table_protodef_proto_2fgate_2fgate_5fservice_2eproto[] ABSL_ATTRIBUTE_SECTION_VARIABLE(
    protodesc_cold) = {
    "\n\035proto/gate/gate_service.proto\032\030proto/c"
    "ommon/empty.proto\032\031proto/common/common.p"
    "roto\032\032proto/common/message.proto\"(\n\022Kick"
    "SessionRequest\022\022\n\nsession_id\030\001 \001(\004\"[\n\031Br"
    "oadcastToPlayersRequest\022\024\n\014session_list\030"
    "\001 \003(\004\022(\n\017message_content\030\002 \001(\0132\017.Message"
    "Content2\327\003\n\004Gate\022X\n\023PlayerEnterGameNode\022"
    "\037.RegisterGameNodeSessionRequest\032 .Regis"
    "terGameNodeSessionResponse\0227\n\023SendMessag"
    "eToPlayer\022\030.NodeRouteMessageRequest\032\006.Em"
    "pty\0222\n\023KickSessionByCentre\022\023.KickSession"
    "Request\032\006.Empty\022\?\n\020RouteNodeMessage\022\024.Ro"
    "uteMessageRequest\032\025.RouteMessageResponse"
    "\022M\n\022RoutePlayerMessage\022\032.RoutePlayerMess"
    "ageRequest\032\033.RoutePlayerMessageResponse\022"
    "8\n\022BroadcastToPlayers\022\032.BroadcastToPlaye"
    "rsRequest\032\006.Empty\022>\n\rNodeHandshake\022\025.Nod"
    "eHandshakeRequest\032\026.NodeHandshakeRespons"
    "eB\033Z\026game/generated/pb/game\200\001\001b\006proto3"
};
static const ::_pbi::DescriptorTable* PROTOBUF_NONNULL const
    descriptor_table_proto_2fgate_2fgate_5fservice_2eproto_deps[3] = {
        &::descriptor_table_proto_2fcommon_2fcommon_2eproto,
        &::descriptor_table_proto_2fcommon_2fempty_2eproto,
        &::descriptor_table_proto_2fcommon_2fmessage_2eproto,
};
static ::absl::once_flag descriptor_table_proto_2fgate_2fgate_5fservice_2eproto_once;
PROTOBUF_CONSTINIT const ::_pbi::DescriptorTable descriptor_table_proto_2fgate_2fgate_5fservice_2eproto = {
    false,
    false,
    758,
    descriptor_table_protodef_proto_2fgate_2fgate_5fservice_2eproto,
    "proto/gate/gate_service.proto",
    &descriptor_table_proto_2fgate_2fgate_5fservice_2eproto_once,
    descriptor_table_proto_2fgate_2fgate_5fservice_2eproto_deps,
    3,
    2,
    schemas,
    file_default_instances,
    TableStruct_proto_2fgate_2fgate_5fservice_2eproto::offsets,
    file_level_enum_descriptors_proto_2fgate_2fgate_5fservice_2eproto,
    file_level_service_descriptors_proto_2fgate_2fgate_5fservice_2eproto,
};
// ===================================================================

class KickSessionRequest::_Internal {
 public:
  using HasBits =
      decltype(::std::declval<KickSessionRequest>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
      8 * PROTOBUF_FIELD_OFFSET(KickSessionRequest, _impl_._has_bits_);
};

KickSessionRequest::KickSessionRequest(::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, KickSessionRequest_class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:KickSessionRequest)
}
KickSessionRequest::KickSessionRequest(
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const KickSessionRequest& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, KickSessionRequest_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(from._impl_) {
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
}
PROTOBUF_NDEBUG_INLINE KickSessionRequest::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
      : _cached_size_{0} {}

inline void KickSessionRequest::SharedCtor(::_pb::Arena* PROTOBUF_NULLABLE arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  _impl_.session_id_ = {};
}
KickSessionRequest::~KickSessionRequest() {
  // @@protoc_insertion_point(destructor:KickSessionRequest)
  SharedDtor(*this);
}
inline void KickSessionRequest::SharedDtor(MessageLite& self) {
  KickSessionRequest& this_ = static_cast<KickSessionRequest&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  this_._impl_.~Impl_();
}

inline void* PROTOBUF_NONNULL KickSessionRequest::PlacementNew_(
    const void* PROTOBUF_NONNULL, void* PROTOBUF_NONNULL mem,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena) {
  return ::new (mem) KickSessionRequest(arena);
}
constexpr auto KickSessionRequest::InternalNewImpl_() {
  return ::google::protobuf::internal::MessageCreator::ZeroInit(sizeof(KickSessionRequest),
                                            alignof(KickSessionRequest));
}
constexpr auto KickSessionRequest::InternalGenerateClassData_() {
  return ::google::protobuf::internal::ClassDataFull{
      ::google::protobuf::internal::ClassData{
          &_KickSessionRequest_default_instance_._instance,
          &_table_.header,
          nullptr,  // OnDemandRegisterArenaDtor
          nullptr,  // IsInitialized
          &KickSessionRequest::MergeImpl,
          ::google::protobuf::Message::GetNewImpl<KickSessionRequest>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
          &KickSessionRequest::SharedDtor,
          ::google::protobuf::Message::GetClearImpl<KickSessionRequest>(), &KickSessionRequest::ByteSizeLong,
              &KickSessionRequest::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
          PROTOBUF_FIELD_OFFSET(KickSessionRequest, _impl_._cached_size_),
          false,
      },
      &KickSessionRequest::kDescriptorMethods,
      &descriptor_table_proto_2fgate_2fgate_5fservice_2eproto,
      nullptr,  // tracker
  };
}

PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 const
    ::google::protobuf::internal::ClassDataFull KickSessionRequest_class_data_ =
        KickSessionRequest::InternalGenerateClassData_();

PROTOBUF_ATTRIBUTE_WEAK const ::google::protobuf::internal::ClassData* PROTOBUF_NONNULL
KickSessionRequest::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&KickSessionRequest_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(KickSessionRequest_class_data_.tc_table);
  return KickSessionRequest_class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<0, 1, 0, 0, 2>
KickSessionRequest::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(KickSessionRequest, _impl_._has_bits_),
    0, // no _extensions_
    1, 0,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967294,  // skipmap
    offsetof(decltype(_table_), field_entries),
    1,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    KickSessionRequest_class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::KickSessionRequest>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // uint64 session_id = 1;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint64_t, offsetof(KickSessionRequest, _impl_.session_id_), 0>(),
     {8, 0, 0, PROTOBUF_FIELD_OFFSET(KickSessionRequest, _impl_.session_id_)}},
  }}, {{
    65535, 65535
  }}, {{
    // uint64 session_id = 1;
    {PROTOBUF_FIELD_OFFSET(KickSessionRequest, _impl_.session_id_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kUInt64)},
  }},
  // no aux_entries
  {{
  }},
};
PROTOBUF_NOINLINE void KickSessionRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:KickSessionRequest)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.session_id_ = ::uint64_t{0u};
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::uint8_t* PROTOBUF_NONNULL KickSessionRequest::_InternalSerialize(
    const ::google::protobuf::MessageLite& base, ::uint8_t* PROTOBUF_NONNULL target,
    ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) {
  const KickSessionRequest& this_ = static_cast<const KickSessionRequest&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::uint8_t* PROTOBUF_NONNULL KickSessionRequest::_InternalSerialize(
    ::uint8_t* PROTOBUF_NONNULL target,
    ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const {
  const KickSessionRequest& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
  // @@protoc_insertion_point(serialize_to_array_start:KickSessionRequest)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  // uint64 session_id = 1;
  if ((this_._impl_._has_bits_[0] & 0x00000001u) != 0) {
    if (this_._internal_session_id() != 0) {
      target = stream->EnsureSpace(target);
      target = ::_pbi::WireFormatLite::WriteUInt64ToArray(
          1, this_._internal_session_id(), target);
    }
  }

  if (ABSL_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:KickSessionRequest)
  return target;
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::size_t KickSessionRequest::ByteSizeLong(const MessageLite& base) {
  const KickSessionRequest& this_ = static_cast<const KickSessionRequest&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::size_t KickSessionRequest::ByteSizeLong() const {
  const KickSessionRequest& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
  // @@protoc_insertion_point(message_byte_size_start:KickSessionRequest)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void)cached_has_bits;

   {
    // uint64 session_id = 1;
    cached_has_bits = this_._impl_._has_bits_[0];
    if ((cached_has_bits & 0x00000001u) != 0) {
      if (this_._internal_session_id() != 0) {
        total_size += ::_pbi::WireFormatLite::UInt64SizePlusOne(
            this_._internal_session_id());
      }
    }
  }
  return this_.MaybeComputeUnknownFieldsSize(total_size,
                                             &this_._impl_._cached_size_);
}

void KickSessionRequest::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<KickSessionRequest*>(&to_msg);
  auto& from = static_cast<const KickSessionRequest&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:KickSessionRequest)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._impl_._has_bits_[0];
  if ((cached_has_bits & 0x00000001u) != 0) {
    if (from._internal_session_id() != 0) {
      _this->_impl_.session_id_ = from._impl_.session_id_;
    }
  }
  _this->_impl_._has_bits_[0] |= cached_has_bits;
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void KickSessionRequest::CopyFrom(const KickSessionRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:KickSessionRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void KickSessionRequest::InternalSwap(KickSessionRequest* PROTOBUF_RESTRICT PROTOBUF_NONNULL other) {
  using ::std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  swap(_impl_.session_id_, other->_impl_.session_id_);
}

::google::protobuf::Metadata KickSessionRequest::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class BroadcastToPlayersRequest::_Internal {
 public:
  using HasBits =
      decltype(::std::declval<BroadcastToPlayersRequest>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
      8 * PROTOBUF_FIELD_OFFSET(BroadcastToPlayersRequest, _impl_._has_bits_);
};

void BroadcastToPlayersRequest::clear_message_content() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.message_content_ != nullptr) _impl_.message_content_->Clear();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
BroadcastToPlayersRequest::BroadcastToPlayersRequest(::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, BroadcastToPlayersRequest_class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:BroadcastToPlayersRequest)
}
PROTOBUF_NDEBUG_INLINE BroadcastToPlayersRequest::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const Impl_& from,
    const ::BroadcastToPlayersRequest& from_msg)
      : _has_bits_{from._has_bits_},
        _cached_size_{0},
        session_list_{visibility, arena, from.session_list_},
        _session_list_cached_byte_size_{0} {}

BroadcastToPlayersRequest::BroadcastToPlayersRequest(
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena,
    const BroadcastToPlayersRequest& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, BroadcastToPlayersRequest_class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  BroadcastToPlayersRequest* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);
  ::uint32_t cached_has_bits = _impl_._has_bits_[0];
  _impl_.message_content_ = ((cached_has_bits & 0x00000001u) != 0)
                ? ::google::protobuf::Message::CopyConstruct(arena, *from._impl_.message_content_)
                : nullptr;

  // @@protoc_insertion_point(copy_constructor:BroadcastToPlayersRequest)
}
PROTOBUF_NDEBUG_INLINE BroadcastToPlayersRequest::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
      : _cached_size_{0},
        session_list_{visibility, arena},
        _session_list_cached_byte_size_{0} {}

inline void BroadcastToPlayersRequest::SharedCtor(::_pb::Arena* PROTOBUF_NULLABLE arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  _impl_.message_content_ = {};
}
BroadcastToPlayersRequest::~BroadcastToPlayersRequest() {
  // @@protoc_insertion_point(destructor:BroadcastToPlayersRequest)
  SharedDtor(*this);
}
inline void BroadcastToPlayersRequest::SharedDtor(MessageLite& self) {
  BroadcastToPlayersRequest& this_ = static_cast<BroadcastToPlayersRequest&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  delete this_._impl_.message_content_;
  this_._impl_.~Impl_();
}

inline void* PROTOBUF_NONNULL BroadcastToPlayersRequest::PlacementNew_(
    const void* PROTOBUF_NONNULL, void* PROTOBUF_NONNULL mem,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena) {
  return ::new (mem) BroadcastToPlayersRequest(arena);
}
constexpr auto BroadcastToPlayersRequest::InternalNewImpl_() {
  constexpr auto arena_bits = ::google::protobuf::internal::EncodePlacementArenaOffsets({
      PROTOBUF_FIELD_OFFSET(BroadcastToPlayersRequest, _impl_.session_list_) +
          decltype(BroadcastToPlayersRequest::_impl_.session_list_)::
              InternalGetArenaOffset(
                  ::google::protobuf::Message::internal_visibility()),
  });
  if (arena_bits.has_value()) {
    return ::google::protobuf::internal::MessageCreator::ZeroInit(
        sizeof(BroadcastToPlayersRequest), alignof(BroadcastToPlayersRequest), *arena_bits);
  } else {
    return ::google::protobuf::internal::MessageCreator(&BroadcastToPlayersRequest::PlacementNew_,
                                 sizeof(BroadcastToPlayersRequest),
                                 alignof(BroadcastToPlayersRequest));
  }
}
constexpr auto BroadcastToPlayersRequest::InternalGenerateClassData_() {
  return ::google::protobuf::internal::ClassDataFull{
      ::google::protobuf::internal::ClassData{
          &_BroadcastToPlayersRequest_default_instance_._instance,
          &_table_.header,
          nullptr,  // OnDemandRegisterArenaDtor
          nullptr,  // IsInitialized
          &BroadcastToPlayersRequest::MergeImpl,
          ::google::protobuf::Message::GetNewImpl<BroadcastToPlayersRequest>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
          &BroadcastToPlayersRequest::SharedDtor,
          ::google::protobuf::Message::GetClearImpl<BroadcastToPlayersRequest>(), &BroadcastToPlayersRequest::ByteSizeLong,
              &BroadcastToPlayersRequest::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
          PROTOBUF_FIELD_OFFSET(BroadcastToPlayersRequest, _impl_._cached_size_),
          false,
      },
      &BroadcastToPlayersRequest::kDescriptorMethods,
      &descriptor_table_proto_2fgate_2fgate_5fservice_2eproto,
      nullptr,  // tracker
  };
}

PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 const
    ::google::protobuf::internal::ClassDataFull BroadcastToPlayersRequest_class_data_ =
        BroadcastToPlayersRequest::InternalGenerateClassData_();

PROTOBUF_ATTRIBUTE_WEAK const ::google::protobuf::internal::ClassData* PROTOBUF_NONNULL
BroadcastToPlayersRequest::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&BroadcastToPlayersRequest_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(BroadcastToPlayersRequest_class_data_.tc_table);
  return BroadcastToPlayersRequest_class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<1, 2, 1, 0, 2>
BroadcastToPlayersRequest::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(BroadcastToPlayersRequest, _impl_._has_bits_),
    0, // no _extensions_
    2, 8,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967292,  // skipmap
    offsetof(decltype(_table_), field_entries),
    2,  // num_field_entries
    1,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    BroadcastToPlayersRequest_class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::BroadcastToPlayersRequest>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // .MessageContent message_content = 2;
    {::_pbi::TcParser::FastMtS1,
     {18, 0, 0, PROTOBUF_FIELD_OFFSET(BroadcastToPlayersRequest, _impl_.message_content_)}},
    // repeated uint64 session_list = 1;
    {::_pbi::TcParser::FastV64P1,
     {10, 63, 0, PROTOBUF_FIELD_OFFSET(BroadcastToPlayersRequest, _impl_.session_list_)}},
  }}, {{
    65535, 65535
  }}, {{
    // repeated uint64 session_list = 1;
    {PROTOBUF_FIELD_OFFSET(BroadcastToPlayersRequest, _impl_.session_list_), -1, 0,
    (0 | ::_fl::kFcRepeated | ::_fl::kPackedUInt64)},
    // .MessageContent message_content = 2;
    {PROTOBUF_FIELD_OFFSET(BroadcastToPlayersRequest, _impl_.message_content_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
  }},
  {{
      {::_pbi::TcParser::GetTable<::MessageContent>()},
  }},
  {{
  }},
};
PROTOBUF_NOINLINE void BroadcastToPlayersRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:BroadcastToPlayersRequest)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.session_list_.Clear();
  cached_has_bits = _impl_._has_bits_[0];
  if ((cached_has_bits & 0x00000001u) != 0) {
    ABSL_DCHECK(_impl_.message_content_ != nullptr);
    _impl_.message_content_->Clear();
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::uint8_t* PROTOBUF_NONNULL BroadcastToPlayersRequest::_InternalSerialize(
    const ::google::protobuf::MessageLite& base, ::uint8_t* PROTOBUF_NONNULL target,
    ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) {
  const BroadcastToPlayersRequest& this_ = static_cast<const BroadcastToPlayersRequest&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::uint8_t* PROTOBUF_NONNULL BroadcastToPlayersRequest::_InternalSerialize(
    ::uint8_t* PROTOBUF_NONNULL target,
    ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const {
  const BroadcastToPlayersRequest& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
  // @@protoc_insertion_point(serialize_to_array_start:BroadcastToPlayersRequest)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  // repeated uint64 session_list = 1;
  {
    int byte_size = this_._impl_._session_list_cached_byte_size_.Get();
    if (byte_size > 0) {
      target = stream->WriteUInt64Packed(
          1, this_._internal_session_list(), byte_size, target);
    }
  }

  cached_has_bits = this_._impl_._has_bits_[0];
  // .MessageContent message_content = 2;
  if ((cached_has_bits & 0x00000001u) != 0) {
    target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
        2, *this_._impl_.message_content_, this_._impl_.message_content_->GetCachedSize(), target,
        stream);
  }

  if (ABSL_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:BroadcastToPlayersRequest)
  return target;
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::size_t BroadcastToPlayersRequest::ByteSizeLong(const MessageLite& base) {
  const BroadcastToPlayersRequest& this_ = static_cast<const BroadcastToPlayersRequest&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::size_t BroadcastToPlayersRequest::ByteSizeLong() const {
  const BroadcastToPlayersRequest& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
  // @@protoc_insertion_point(message_byte_size_start:BroadcastToPlayersRequest)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void)cached_has_bits;

  ::_pbi::Prefetch5LinesFrom7Lines(&this_);
   {
    // repeated uint64 session_list = 1;
    {
      total_size +=
          ::_pbi::WireFormatLite::UInt64SizeWithPackedTagSize(
              this_._internal_session_list(), 1,
              this_._impl_._session_list_cached_byte_size_);
    }
  }
   {
    // .MessageContent message_content = 2;
    cached_has_bits = this_._impl_._has_bits_[0];
    if ((cached_has_bits & 0x00000001u) != 0) {
      total_size += 1 +
                    ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.message_content_);
    }
  }
  return this_.MaybeComputeUnknownFieldsSize(total_size,
                                             &this_._impl_._cached_size_);
}

void BroadcastToPlayersRequest::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<BroadcastToPlayersRequest*>(&to_msg);
  auto& from = static_cast<const BroadcastToPlayersRequest&>(from_msg);
  ::google::protobuf::Arena* arena = _this->GetArena();
  // @@protoc_insertion_point(class_specific_merge_from_start:BroadcastToPlayersRequest)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_internal_mutable_session_list()->MergeFrom(from._internal_session_list());
  cached_has_bits = from._impl_._has_bits_[0];
  if ((cached_has_bits & 0x00000001u) != 0) {
    ABSL_DCHECK(from._impl_.message_content_ != nullptr);
    if (_this->_impl_.message_content_ == nullptr) {
      _this->_impl_.message_content_ = ::google::protobuf::Message::CopyConstruct(arena, *from._impl_.message_content_);
    } else {
      _this->_impl_.message_content_->MergeFrom(*from._impl_.message_content_);
    }
  }
  _this->_impl_._has_bits_[0] |= cached_has_bits;
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void BroadcastToPlayersRequest::CopyFrom(const BroadcastToPlayersRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:BroadcastToPlayersRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void BroadcastToPlayersRequest::InternalSwap(BroadcastToPlayersRequest* PROTOBUF_RESTRICT PROTOBUF_NONNULL other) {
  using ::std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  _impl_.session_list_.InternalSwap(&other->_impl_.session_list_);
  swap(_impl_.message_content_, other->_impl_.message_content_);
}

::google::protobuf::Metadata BroadcastToPlayersRequest::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

const ::google::protobuf::ServiceDescriptor* PROTOBUF_NONNULL Gate::descriptor() {
  ::google::protobuf::internal::AssignDescriptors(&descriptor_table_proto_2fgate_2fgate_5fservice_2eproto);
  return file_level_service_descriptors_proto_2fgate_2fgate_5fservice_2eproto[0];
}

const ::google::protobuf::ServiceDescriptor* PROTOBUF_NONNULL Gate::GetDescriptor() {
  return descriptor();
}

void Gate::PlayerEnterGameNode(::google::protobuf::RpcController* PROTOBUF_NULLABLE controller,
                         const ::RegisterGameNodeSessionRequest* PROTOBUF_NONNULL,
                         ::RegisterGameNodeSessionResponse* PROTOBUF_NONNULL,
                         ::google::protobuf::Closure* PROTOBUF_NULLABLE done) {
  controller->SetFailed("Method PlayerEnterGameNode() not implemented.");
  done->Run();
}
void Gate::SendMessageToPlayer(::google::protobuf::RpcController* PROTOBUF_NULLABLE controller,
                         const ::NodeRouteMessageRequest* PROTOBUF_NONNULL,
                         ::Empty* PROTOBUF_NONNULL,
                         ::google::protobuf::Closure* PROTOBUF_NULLABLE done) {
  controller->SetFailed("Method SendMessageToPlayer() not implemented.");
  done->Run();
}
void Gate::KickSessionByCentre(::google::protobuf::RpcController* PROTOBUF_NULLABLE controller,
                         const ::KickSessionRequest* PROTOBUF_NONNULL,
                         ::Empty* PROTOBUF_NONNULL,
                         ::google::protobuf::Closure* PROTOBUF_NULLABLE done) {
  controller->SetFailed("Method KickSessionByCentre() not implemented.");
  done->Run();
}
void Gate::RouteNodeMessage(::google::protobuf::RpcController* PROTOBUF_NULLABLE controller,
                         const ::RouteMessageRequest* PROTOBUF_NONNULL,
                         ::RouteMessageResponse* PROTOBUF_NONNULL,
                         ::google::protobuf::Closure* PROTOBUF_NULLABLE done) {
  controller->SetFailed("Method RouteNodeMessage() not implemented.");
  done->Run();
}
void Gate::RoutePlayerMessage(::google::protobuf::RpcController* PROTOBUF_NULLABLE controller,
                         const ::RoutePlayerMessageRequest* PROTOBUF_NONNULL,
                         ::RoutePlayerMessageResponse* PROTOBUF_NONNULL,
                         ::google::protobuf::Closure* PROTOBUF_NULLABLE done) {
  controller->SetFailed("Method RoutePlayerMessage() not implemented.");
  done->Run();
}
void Gate::BroadcastToPlayers(::google::protobuf::RpcController* PROTOBUF_NULLABLE controller,
                         const ::BroadcastToPlayersRequest* PROTOBUF_NONNULL,
                         ::Empty* PROTOBUF_NONNULL,
                         ::google::protobuf::Closure* PROTOBUF_NULLABLE done) {
  controller->SetFailed("Method BroadcastToPlayers() not implemented.");
  done->Run();
}
void Gate::NodeHandshake(::google::protobuf::RpcController* PROTOBUF_NULLABLE controller,
                         const ::NodeHandshakeRequest* PROTOBUF_NONNULL,
                         ::NodeHandshakeResponse* PROTOBUF_NONNULL,
                         ::google::protobuf::Closure* PROTOBUF_NULLABLE done) {
  controller->SetFailed("Method NodeHandshake() not implemented.");
  done->Run();
}

void Gate::CallMethod(
    const ::google::protobuf::MethodDescriptor* PROTOBUF_NONNULL method,
    ::google::protobuf::RpcController* PROTOBUF_NULLABLE controller,
    const ::google::protobuf::Message* PROTOBUF_NONNULL request,
    ::google::protobuf::Message* PROTOBUF_NONNULL response, ::google::protobuf::Closure* PROTOBUF_NULLABLE done) {
  ABSL_DCHECK_EQ(method->service(), file_level_service_descriptors_proto_2fgate_2fgate_5fservice_2eproto[0]);
  switch (method->index()) {
    case 0:
      this->PlayerEnterGameNode(controller, ::google::protobuf::DownCastMessage<::RegisterGameNodeSessionRequest>(request),
                   ::google::protobuf::DownCastMessage<::RegisterGameNodeSessionResponse>(response), done);
      break;
    case 1:
      this->SendMessageToPlayer(controller, ::google::protobuf::DownCastMessage<::NodeRouteMessageRequest>(request),
                   ::google::protobuf::DownCastMessage<::Empty>(response), done);
      break;
    case 2:
      this->KickSessionByCentre(controller, ::google::protobuf::DownCastMessage<::KickSessionRequest>(request),
                   ::google::protobuf::DownCastMessage<::Empty>(response), done);
      break;
    case 3:
      this->RouteNodeMessage(controller, ::google::protobuf::DownCastMessage<::RouteMessageRequest>(request),
                   ::google::protobuf::DownCastMessage<::RouteMessageResponse>(response), done);
      break;
    case 4:
      this->RoutePlayerMessage(controller, ::google::protobuf::DownCastMessage<::RoutePlayerMessageRequest>(request),
                   ::google::protobuf::DownCastMessage<::RoutePlayerMessageResponse>(response), done);
      break;
    case 5:
      this->BroadcastToPlayers(controller, ::google::protobuf::DownCastMessage<::BroadcastToPlayersRequest>(request),
                   ::google::protobuf::DownCastMessage<::Empty>(response), done);
      break;
    case 6:
      this->NodeHandshake(controller, ::google::protobuf::DownCastMessage<::NodeHandshakeRequest>(request),
                   ::google::protobuf::DownCastMessage<::NodeHandshakeResponse>(response), done);
      break;

    default:
      ABSL_LOG(FATAL) << "Bad method index; this should never happen.";
      break;
  }
}

const ::google::protobuf::Message& Gate::GetRequestPrototype(
    const ::google::protobuf::MethodDescriptor* PROTOBUF_NONNULL method) const {
  ABSL_DCHECK_EQ(method->service(), descriptor());
  switch (method->index()) {
    case 0:
      return ::RegisterGameNodeSessionRequest::default_instance();
    case 1:
      return ::NodeRouteMessageRequest::default_instance();
    case 2:
      return ::KickSessionRequest::default_instance();
    case 3:
      return ::RouteMessageRequest::default_instance();
    case 4:
      return ::RoutePlayerMessageRequest::default_instance();
    case 5:
      return ::BroadcastToPlayersRequest::default_instance();
    case 6:
      return ::NodeHandshakeRequest::default_instance();

    default:
      ABSL_LOG(FATAL) << "Bad method index; this should never happen.";
      return *::google::protobuf::MessageFactory::generated_factory()->GetPrototype(
          method->input_type());
  }
}

const ::google::protobuf::Message& Gate::GetResponsePrototype(
    const ::google::protobuf::MethodDescriptor* PROTOBUF_NONNULL method) const {
  ABSL_DCHECK_EQ(method->service(), descriptor());
  switch (method->index()) {
    case 0:
      return ::RegisterGameNodeSessionResponse::default_instance();
    case 1:
      return ::Empty::default_instance();
    case 2:
      return ::Empty::default_instance();
    case 3:
      return ::RouteMessageResponse::default_instance();
    case 4:
      return ::RoutePlayerMessageResponse::default_instance();
    case 5:
      return ::Empty::default_instance();
    case 6:
      return ::NodeHandshakeResponse::default_instance();

    default:
      ABSL_LOG(FATAL) << "Bad method index; this should never happen.";
      return *::google::protobuf::MessageFactory::generated_factory()->GetPrototype(
          method->output_type());
  }
}

Gate_Stub::Gate_Stub(::google::protobuf::RpcChannel* PROTOBUF_NULLABLE channel)
    : channel_(channel), owns_channel_(false) {}

Gate_Stub::Gate_Stub(
    ::google::protobuf::RpcChannel* PROTOBUF_NULLABLE channel,
    ::google::protobuf::Service::ChannelOwnership ownership)
    : channel_(channel),
      owns_channel_(ownership == ::google::protobuf::Service::STUB_OWNS_CHANNEL) {}

Gate_Stub::~Gate_Stub() {
  if (owns_channel_) delete channel_;
}

void Gate_Stub::PlayerEnterGameNode(
    ::google::protobuf::RpcController* PROTOBUF_NULLABLE controller,
    const ::RegisterGameNodeSessionRequest* PROTOBUF_NONNULL request, ::RegisterGameNodeSessionResponse* PROTOBUF_NONNULL response,
    ::google::protobuf::Closure* PROTOBUF_NULLABLE done) {
  channel_->CallMethod(descriptor()->method(0), controller,
                       request, response, done);
}
void Gate_Stub::SendMessageToPlayer(
    ::google::protobuf::RpcController* PROTOBUF_NULLABLE controller,
    const ::NodeRouteMessageRequest* PROTOBUF_NONNULL request, ::Empty* PROTOBUF_NONNULL response,
    ::google::protobuf::Closure* PROTOBUF_NULLABLE done) {
  channel_->CallMethod(descriptor()->method(1), controller,
                       request, response, done);
}
void Gate_Stub::KickSessionByCentre(
    ::google::protobuf::RpcController* PROTOBUF_NULLABLE controller,
    const ::KickSessionRequest* PROTOBUF_NONNULL request, ::Empty* PROTOBUF_NONNULL response,
    ::google::protobuf::Closure* PROTOBUF_NULLABLE done) {
  channel_->CallMethod(descriptor()->method(2), controller,
                       request, response, done);
}
void Gate_Stub::RouteNodeMessage(
    ::google::protobuf::RpcController* PROTOBUF_NULLABLE controller,
    const ::RouteMessageRequest* PROTOBUF_NONNULL request, ::RouteMessageResponse* PROTOBUF_NONNULL response,
    ::google::protobuf::Closure* PROTOBUF_NULLABLE done) {
  channel_->CallMethod(descriptor()->method(3), controller,
                       request, response, done);
}
void Gate_Stub::RoutePlayerMessage(
    ::google::protobuf::RpcController* PROTOBUF_NULLABLE controller,
    const ::RoutePlayerMessageRequest* PROTOBUF_NONNULL request, ::RoutePlayerMessageResponse* PROTOBUF_NONNULL response,
    ::google::protobuf::Closure* PROTOBUF_NULLABLE done) {
  channel_->CallMethod(descriptor()->method(4), controller,
                       request, response, done);
}
void Gate_Stub::BroadcastToPlayers(
    ::google::protobuf::RpcController* PROTOBUF_NULLABLE controller,
    const ::BroadcastToPlayersRequest* PROTOBUF_NONNULL request, ::Empty* PROTOBUF_NONNULL response,
    ::google::protobuf::Closure* PROTOBUF_NULLABLE done) {
  channel_->CallMethod(descriptor()->method(5), controller,
                       request, response, done);
}
void Gate_Stub::NodeHandshake(
    ::google::protobuf::RpcController* PROTOBUF_NULLABLE controller,
    const ::NodeHandshakeRequest* PROTOBUF_NONNULL request, ::NodeHandshakeResponse* PROTOBUF_NONNULL response,
    ::google::protobuf::Closure* PROTOBUF_NULLABLE done) {
  channel_->CallMethod(descriptor()->method(6), controller,
                       request, response, done);
}
// @@protoc_insertion_point(namespace_scope)
namespace google {
namespace protobuf {
}  // namespace protobuf
}  // namespace google
// @@protoc_insertion_point(global_scope)
PROTOBUF_ATTRIBUTE_INIT_PRIORITY2 static ::std::false_type
    _static_init2_ [[maybe_unused]] =
        (::_pbi::AddDescriptors(&descriptor_table_proto_2fgate_2fgate_5fservice_2eproto),
         ::std::false_type{});
#include "google/protobuf/port_undef.inc"
