// Generated by the protocol buffer compiler.  DO NOT EDIT!
// NO CHECKED-IN PROTOBUF GENCODE
// source: globalvariable_table.proto
// Protobuf C++ Version: 6.31.1

#ifndef globalvariable_5ftable_2eproto_2epb_2eh
#define globalvariable_5ftable_2eproto_2epb_2eh

#include <limits>
#include <string>
#include <type_traits>
#include <utility>

#include "google/protobuf/runtime_version.h"
#if PROTOBUF_VERSION != 6031001
#error "Protobuf C++ gencode is built with an incompatible version of"
#error "Protobuf C++ headers/runtime. See"
#error "https://protobuf.dev/support/cross-version-runtime-guarantee/#cpp"
#endif
#include "google/protobuf/io/coded_stream.h"
#include "google/protobuf/arena.h"
#include "google/protobuf/arenastring.h"
#include "google/protobuf/generated_message_tctable_decl.h"
#include "google/protobuf/generated_message_util.h"
#include "google/protobuf/metadata_lite.h"
#include "google/protobuf/generated_message_reflection.h"
#include "google/protobuf/message.h"
#include "google/protobuf/message_lite.h"
#include "google/protobuf/repeated_field.h"  // IWYU pragma: export
#include "google/protobuf/extension_set.h"  // IWYU pragma: export
#include "google/protobuf/unknown_field_set.h"
// @@protoc_insertion_point(includes)

// Must be included last.
#include "google/protobuf/port_def.inc"

#define PROTOBUF_INTERNAL_EXPORT_globalvariable_5ftable_2eproto

namespace google {
namespace protobuf {
namespace internal {
template <typename T>
::absl::string_view GetAnyMessageName();
}  // namespace internal
}  // namespace protobuf
}  // namespace google

// Internal implementation detail -- do not use these members.
struct TableStruct_globalvariable_5ftable_2eproto {
  static const ::uint32_t offsets[];
};
extern "C" {
extern const ::google::protobuf::internal::DescriptorTable descriptor_table_globalvariable_5ftable_2eproto;
}  // extern "C"
class GlobalVariableTable;
struct GlobalVariableTableDefaultTypeInternal;
extern GlobalVariableTableDefaultTypeInternal _GlobalVariableTable_default_instance_;
extern const ::google::protobuf::internal::ClassDataFull GlobalVariableTable_class_data_;
class GlobalVariableTableData;
struct GlobalVariableTableDataDefaultTypeInternal;
extern GlobalVariableTableDataDefaultTypeInternal _GlobalVariableTableData_default_instance_;
extern const ::google::protobuf::internal::ClassDataFull GlobalVariableTableData_class_data_;
namespace google {
namespace protobuf {
}  // namespace protobuf
}  // namespace google


// ===================================================================


// -------------------------------------------------------------------

class GlobalVariableTable final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:GlobalVariableTable) */ {
 public:
  inline GlobalVariableTable() : GlobalVariableTable(nullptr) {}
  ~GlobalVariableTable() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(GlobalVariableTable* PROTOBUF_NONNULL msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(GlobalVariableTable));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR GlobalVariableTable(::google::protobuf::internal::ConstantInitialized);

  inline GlobalVariableTable(const GlobalVariableTable& from) : GlobalVariableTable(nullptr, from) {}
  inline GlobalVariableTable(GlobalVariableTable&& from) noexcept
      : GlobalVariableTable(nullptr, ::std::move(from)) {}
  inline GlobalVariableTable& operator=(const GlobalVariableTable& from) {
    CopyFrom(from);
    return *this;
  }
  inline GlobalVariableTable& operator=(GlobalVariableTable&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* PROTOBUF_NONNULL mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* PROTOBUF_NONNULL descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* PROTOBUF_NONNULL GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* PROTOBUF_NONNULL GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const GlobalVariableTable& default_instance() {
    return *reinterpret_cast<const GlobalVariableTable*>(
        &_GlobalVariableTable_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 0;
  friend void swap(GlobalVariableTable& a, GlobalVariableTable& b) { a.Swap(&b); }
  inline void Swap(GlobalVariableTable* PROTOBUF_NONNULL other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(GlobalVariableTable* PROTOBUF_NONNULL other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  GlobalVariableTable* PROTOBUF_NONNULL New(::google::protobuf::Arena* PROTOBUF_NULLABLE arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<GlobalVariableTable>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const GlobalVariableTable& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const GlobalVariableTable& from) { GlobalVariableTable::MergeImpl(*this, from); }

  private:
  static void MergeImpl(::google::protobuf::MessageLite& to_msg,
                        const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* PROTOBUF_NONNULL _InternalSerialize(
      const ::google::protobuf::MessageLite& msg, ::uint8_t* PROTOBUF_NONNULL target,
      ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* PROTOBUF_NONNULL _InternalSerialize(
      ::uint8_t* PROTOBUF_NONNULL target,
      ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* PROTOBUF_NONNULL _InternalSerialize(
      ::uint8_t* PROTOBUF_NONNULL target,
      ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(GlobalVariableTable* PROTOBUF_NONNULL other);
 private:
  template <typename T>
  friend ::absl::string_view(::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "GlobalVariableTable"; }

 protected:
  explicit GlobalVariableTable(::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  GlobalVariableTable(::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const GlobalVariableTable& from);
  GlobalVariableTable(
      ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, GlobalVariableTable&& from) noexcept
      : GlobalVariableTable(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* PROTOBUF_NONNULL GetClassData() const PROTOBUF_FINAL;
  static void* PROTOBUF_NONNULL PlacementNew_(
      const void* PROTOBUF_NONNULL, void* PROTOBUF_NONNULL mem,
      ::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  static constexpr auto InternalNewImpl_();

 public:
  static constexpr auto InternalGenerateClassData_();

  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kTostringFieldNumber = 4,
    kIdFieldNumber = 1,
    kTouint32FieldNumber = 2,
    kToint32FieldNumber = 3,
    kTofloatFieldNumber = 5,
    kTodoubleFieldNumber = 6,
  };
  // string tostring = 4;
  void clear_tostring() ;
  const ::std::string& tostring() const;
  template <typename Arg_ = const ::std::string&, typename... Args_>
  void set_tostring(Arg_&& arg, Args_... args);
  ::std::string* PROTOBUF_NONNULL mutable_tostring();
  [[nodiscard]] ::std::string* PROTOBUF_NULLABLE release_tostring();
  void set_allocated_tostring(::std::string* PROTOBUF_NULLABLE value);

  private:
  const ::std::string& _internal_tostring() const;
  PROTOBUF_ALWAYS_INLINE void _internal_set_tostring(const ::std::string& value);
  ::std::string* PROTOBUF_NONNULL _internal_mutable_tostring();

  public:
  // uint32 id = 1;
  void clear_id() ;
  ::uint32_t id() const;
  void set_id(::uint32_t value);

  private:
  ::uint32_t _internal_id() const;
  void _internal_set_id(::uint32_t value);

  public:
  // uint32 touint32 = 2;
  void clear_touint32() ;
  ::uint32_t touint32() const;
  void set_touint32(::uint32_t value);

  private:
  ::uint32_t _internal_touint32() const;
  void _internal_set_touint32(::uint32_t value);

  public:
  // int32 toint32 = 3;
  void clear_toint32() ;
  ::int32_t toint32() const;
  void set_toint32(::int32_t value);

  private:
  ::int32_t _internal_toint32() const;
  void _internal_set_toint32(::int32_t value);

  public:
  // float tofloat = 5;
  void clear_tofloat() ;
  float tofloat() const;
  void set_tofloat(float value);

  private:
  float _internal_tofloat() const;
  void _internal_set_tofloat(float value);

  public:
  // double todouble = 6;
  void clear_todouble() ;
  double todouble() const;
  void set_todouble(double value);

  private:
  double _internal_todouble() const;
  void _internal_set_todouble(double value);

  public:
  // @@protoc_insertion_point(class_scope:GlobalVariableTable)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<3, 6,
                                   0, 36,
                                   2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(
        ::google::protobuf::internal::InternalVisibility visibility,
        ::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
    inline explicit Impl_(
        ::google::protobuf::internal::InternalVisibility visibility,
        ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const Impl_& from,
        const GlobalVariableTable& from_msg);
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    ::google::protobuf::internal::ArenaStringPtr tostring_;
    ::uint32_t id_;
    ::uint32_t touint32_;
    ::int32_t toint32_;
    float tofloat_;
    double todouble_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_globalvariable_5ftable_2eproto;
};

extern const ::google::protobuf::internal::ClassDataFull GlobalVariableTable_class_data_;
// -------------------------------------------------------------------

class GlobalVariableTableData final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:GlobalVariableTableData) */ {
 public:
  inline GlobalVariableTableData() : GlobalVariableTableData(nullptr) {}
  ~GlobalVariableTableData() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(GlobalVariableTableData* PROTOBUF_NONNULL msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(GlobalVariableTableData));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR GlobalVariableTableData(::google::protobuf::internal::ConstantInitialized);

  inline GlobalVariableTableData(const GlobalVariableTableData& from) : GlobalVariableTableData(nullptr, from) {}
  inline GlobalVariableTableData(GlobalVariableTableData&& from) noexcept
      : GlobalVariableTableData(nullptr, ::std::move(from)) {}
  inline GlobalVariableTableData& operator=(const GlobalVariableTableData& from) {
    CopyFrom(from);
    return *this;
  }
  inline GlobalVariableTableData& operator=(GlobalVariableTableData&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* PROTOBUF_NONNULL mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* PROTOBUF_NONNULL descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* PROTOBUF_NONNULL GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* PROTOBUF_NONNULL GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const GlobalVariableTableData& default_instance() {
    return *reinterpret_cast<const GlobalVariableTableData*>(
        &_GlobalVariableTableData_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 1;
  friend void swap(GlobalVariableTableData& a, GlobalVariableTableData& b) { a.Swap(&b); }
  inline void Swap(GlobalVariableTableData* PROTOBUF_NONNULL other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(GlobalVariableTableData* PROTOBUF_NONNULL other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  GlobalVariableTableData* PROTOBUF_NONNULL New(::google::protobuf::Arena* PROTOBUF_NULLABLE arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<GlobalVariableTableData>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const GlobalVariableTableData& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const GlobalVariableTableData& from) { GlobalVariableTableData::MergeImpl(*this, from); }

  private:
  static void MergeImpl(::google::protobuf::MessageLite& to_msg,
                        const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* PROTOBUF_NONNULL _InternalSerialize(
      const ::google::protobuf::MessageLite& msg, ::uint8_t* PROTOBUF_NONNULL target,
      ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* PROTOBUF_NONNULL _InternalSerialize(
      ::uint8_t* PROTOBUF_NONNULL target,
      ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* PROTOBUF_NONNULL _InternalSerialize(
      ::uint8_t* PROTOBUF_NONNULL target,
      ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(GlobalVariableTableData* PROTOBUF_NONNULL other);
 private:
  template <typename T>
  friend ::absl::string_view(::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "GlobalVariableTableData"; }

 protected:
  explicit GlobalVariableTableData(::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  GlobalVariableTableData(::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const GlobalVariableTableData& from);
  GlobalVariableTableData(
      ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, GlobalVariableTableData&& from) noexcept
      : GlobalVariableTableData(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* PROTOBUF_NONNULL GetClassData() const PROTOBUF_FINAL;
  static void* PROTOBUF_NONNULL PlacementNew_(
      const void* PROTOBUF_NONNULL, void* PROTOBUF_NONNULL mem,
      ::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  static constexpr auto InternalNewImpl_();

 public:
  static constexpr auto InternalGenerateClassData_();

  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kDataFieldNumber = 1,
  };
  // repeated .GlobalVariableTable data = 1;
  int data_size() const;
  private:
  int _internal_data_size() const;

  public:
  void clear_data() ;
  ::GlobalVariableTable* PROTOBUF_NONNULL mutable_data(int index);
  ::google::protobuf::RepeatedPtrField<::GlobalVariableTable>* PROTOBUF_NONNULL mutable_data();

  private:
  const ::google::protobuf::RepeatedPtrField<::GlobalVariableTable>& _internal_data() const;
  ::google::protobuf::RepeatedPtrField<::GlobalVariableTable>* PROTOBUF_NONNULL _internal_mutable_data();
  public:
  const ::GlobalVariableTable& data(int index) const;
  ::GlobalVariableTable* PROTOBUF_NONNULL add_data();
  const ::google::protobuf::RepeatedPtrField<::GlobalVariableTable>& data() const;
  // @@protoc_insertion_point(class_scope:GlobalVariableTableData)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<0, 1,
                                   1, 0,
                                   2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(
        ::google::protobuf::internal::InternalVisibility visibility,
        ::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
    inline explicit Impl_(
        ::google::protobuf::internal::InternalVisibility visibility,
        ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const Impl_& from,
        const GlobalVariableTableData& from_msg);
    ::google::protobuf::RepeatedPtrField< ::GlobalVariableTable > data_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_globalvariable_5ftable_2eproto;
};

extern const ::google::protobuf::internal::ClassDataFull GlobalVariableTableData_class_data_;

// ===================================================================




// ===================================================================


#ifdef __GNUC__
#pragma GCC diagnostic push
#pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif  // __GNUC__
// -------------------------------------------------------------------

// GlobalVariableTable

// uint32 id = 1;
inline void GlobalVariableTable::clear_id() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.id_ = 0u;
  _impl_._has_bits_[0] &= ~0x00000002u;
}
inline ::uint32_t GlobalVariableTable::id() const {
  // @@protoc_insertion_point(field_get:GlobalVariableTable.id)
  return _internal_id();
}
inline void GlobalVariableTable::set_id(::uint32_t value) {
  _internal_set_id(value);
  _impl_._has_bits_[0] |= 0x00000002u;
  // @@protoc_insertion_point(field_set:GlobalVariableTable.id)
}
inline ::uint32_t GlobalVariableTable::_internal_id() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.id_;
}
inline void GlobalVariableTable::_internal_set_id(::uint32_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.id_ = value;
}

// uint32 touint32 = 2;
inline void GlobalVariableTable::clear_touint32() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.touint32_ = 0u;
  _impl_._has_bits_[0] &= ~0x00000004u;
}
inline ::uint32_t GlobalVariableTable::touint32() const {
  // @@protoc_insertion_point(field_get:GlobalVariableTable.touint32)
  return _internal_touint32();
}
inline void GlobalVariableTable::set_touint32(::uint32_t value) {
  _internal_set_touint32(value);
  _impl_._has_bits_[0] |= 0x00000004u;
  // @@protoc_insertion_point(field_set:GlobalVariableTable.touint32)
}
inline ::uint32_t GlobalVariableTable::_internal_touint32() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.touint32_;
}
inline void GlobalVariableTable::_internal_set_touint32(::uint32_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.touint32_ = value;
}

// int32 toint32 = 3;
inline void GlobalVariableTable::clear_toint32() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.toint32_ = 0;
  _impl_._has_bits_[0] &= ~0x00000008u;
}
inline ::int32_t GlobalVariableTable::toint32() const {
  // @@protoc_insertion_point(field_get:GlobalVariableTable.toint32)
  return _internal_toint32();
}
inline void GlobalVariableTable::set_toint32(::int32_t value) {
  _internal_set_toint32(value);
  _impl_._has_bits_[0] |= 0x00000008u;
  // @@protoc_insertion_point(field_set:GlobalVariableTable.toint32)
}
inline ::int32_t GlobalVariableTable::_internal_toint32() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.toint32_;
}
inline void GlobalVariableTable::_internal_set_toint32(::int32_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.toint32_ = value;
}

// string tostring = 4;
inline void GlobalVariableTable::clear_tostring() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.tostring_.ClearToEmpty();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
inline const ::std::string& GlobalVariableTable::tostring() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:GlobalVariableTable.tostring)
  return _internal_tostring();
}
template <typename Arg_, typename... Args_>
PROTOBUF_ALWAYS_INLINE void GlobalVariableTable::set_tostring(Arg_&& arg, Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000001u;
  _impl_.tostring_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:GlobalVariableTable.tostring)
}
inline ::std::string* PROTOBUF_NONNULL GlobalVariableTable::mutable_tostring()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::std::string* _s = _internal_mutable_tostring();
  // @@protoc_insertion_point(field_mutable:GlobalVariableTable.tostring)
  return _s;
}
inline const ::std::string& GlobalVariableTable::_internal_tostring() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.tostring_.Get();
}
inline void GlobalVariableTable::_internal_set_tostring(const ::std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000001u;
  _impl_.tostring_.Set(value, GetArena());
}
inline ::std::string* PROTOBUF_NONNULL GlobalVariableTable::_internal_mutable_tostring() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000001u;
  return _impl_.tostring_.Mutable( GetArena());
}
inline ::std::string* PROTOBUF_NULLABLE GlobalVariableTable::release_tostring() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:GlobalVariableTable.tostring)
  if ((_impl_._has_bits_[0] & 0x00000001u) == 0) {
    return nullptr;
  }
  _impl_._has_bits_[0] &= ~0x00000001u;
  auto* released = _impl_.tostring_.Release();
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString()) {
    _impl_.tostring_.Set("", GetArena());
  }
  return released;
}
inline void GlobalVariableTable::set_allocated_tostring(::std::string* PROTOBUF_NULLABLE value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  _impl_.tostring_.SetAllocated(value, GetArena());
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString() && _impl_.tostring_.IsDefault()) {
    _impl_.tostring_.Set("", GetArena());
  }
  // @@protoc_insertion_point(field_set_allocated:GlobalVariableTable.tostring)
}

// float tofloat = 5;
inline void GlobalVariableTable::clear_tofloat() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.tofloat_ = 0;
  _impl_._has_bits_[0] &= ~0x00000010u;
}
inline float GlobalVariableTable::tofloat() const {
  // @@protoc_insertion_point(field_get:GlobalVariableTable.tofloat)
  return _internal_tofloat();
}
inline void GlobalVariableTable::set_tofloat(float value) {
  _internal_set_tofloat(value);
  _impl_._has_bits_[0] |= 0x00000010u;
  // @@protoc_insertion_point(field_set:GlobalVariableTable.tofloat)
}
inline float GlobalVariableTable::_internal_tofloat() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.tofloat_;
}
inline void GlobalVariableTable::_internal_set_tofloat(float value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.tofloat_ = value;
}

// double todouble = 6;
inline void GlobalVariableTable::clear_todouble() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.todouble_ = 0;
  _impl_._has_bits_[0] &= ~0x00000020u;
}
inline double GlobalVariableTable::todouble() const {
  // @@protoc_insertion_point(field_get:GlobalVariableTable.todouble)
  return _internal_todouble();
}
inline void GlobalVariableTable::set_todouble(double value) {
  _internal_set_todouble(value);
  _impl_._has_bits_[0] |= 0x00000020u;
  // @@protoc_insertion_point(field_set:GlobalVariableTable.todouble)
}
inline double GlobalVariableTable::_internal_todouble() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.todouble_;
}
inline void GlobalVariableTable::_internal_set_todouble(double value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.todouble_ = value;
}

// -------------------------------------------------------------------

// GlobalVariableTableData

// repeated .GlobalVariableTable data = 1;
inline int GlobalVariableTableData::_internal_data_size() const {
  return _internal_data().size();
}
inline int GlobalVariableTableData::data_size() const {
  return _internal_data_size();
}
inline void GlobalVariableTableData::clear_data() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.data_.Clear();
}
inline ::GlobalVariableTable* PROTOBUF_NONNULL GlobalVariableTableData::mutable_data(int index)
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable:GlobalVariableTableData.data)
  return _internal_mutable_data()->Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField<::GlobalVariableTable>* PROTOBUF_NONNULL GlobalVariableTableData::mutable_data()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable_list:GlobalVariableTableData.data)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _internal_mutable_data();
}
inline const ::GlobalVariableTable& GlobalVariableTableData::data(int index) const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:GlobalVariableTableData.data)
  return _internal_data().Get(index);
}
inline ::GlobalVariableTable* PROTOBUF_NONNULL GlobalVariableTableData::add_data()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::GlobalVariableTable* _add = _internal_mutable_data()->Add();
  // @@protoc_insertion_point(field_add:GlobalVariableTableData.data)
  return _add;
}
inline const ::google::protobuf::RepeatedPtrField<::GlobalVariableTable>& GlobalVariableTableData::data() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_list:GlobalVariableTableData.data)
  return _internal_data();
}
inline const ::google::protobuf::RepeatedPtrField<::GlobalVariableTable>&
GlobalVariableTableData::_internal_data() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.data_;
}
inline ::google::protobuf::RepeatedPtrField<::GlobalVariableTable>* PROTOBUF_NONNULL
GlobalVariableTableData::_internal_mutable_data() {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return &_impl_.data_;
}

#ifdef __GNUC__
#pragma GCC diagnostic pop
#endif  // __GNUC__

// @@protoc_insertion_point(namespace_scope)


// @@protoc_insertion_point(global_scope)

#include "google/protobuf/port_undef.inc"

#endif  // globalvariable_5ftable_2eproto_2epb_2eh
