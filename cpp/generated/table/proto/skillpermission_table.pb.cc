// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: skillpermission_table.proto
// Protobuf C++ Version: 5.26.1

#include "skillpermission_table.pb.h"

#include <algorithm>
#include "google/protobuf/io/coded_stream.h"
#include "google/protobuf/extension_set.h"
#include "google/protobuf/wire_format_lite.h"
#include "google/protobuf/descriptor.h"
#include "google/protobuf/generated_message_reflection.h"
#include "google/protobuf/reflection_ops.h"
#include "google/protobuf/wire_format.h"
#include "google/protobuf/generated_message_tctable_impl.h"
// @@protoc_insertion_point(includes)

// Must be included last.
#include "google/protobuf/port_def.inc"
PROTOBUF_PRAGMA_INIT_SEG
namespace _pb = ::google::protobuf;
namespace _pbi = ::google::protobuf::internal;
namespace _fl = ::google::protobuf::internal::field_layout;

inline constexpr SkillPermissionTable::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : skilltype_{},
        _skilltype_cached_byte_size_{0},
        id_{0u},
        _cached_size_{0} {}

template <typename>
PROTOBUF_CONSTEXPR SkillPermissionTable::SkillPermissionTable(::_pbi::ConstantInitialized)
    : _impl_(::_pbi::ConstantInitialized()) {}
struct SkillPermissionTableDefaultTypeInternal {
  PROTOBUF_CONSTEXPR SkillPermissionTableDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~SkillPermissionTableDefaultTypeInternal() {}
  union {
    SkillPermissionTable _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 SkillPermissionTableDefaultTypeInternal _SkillPermissionTable_default_instance_;

inline constexpr SkillPermissionTabledData::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : data_{},
        _cached_size_{0} {}

template <typename>
PROTOBUF_CONSTEXPR SkillPermissionTabledData::SkillPermissionTabledData(::_pbi::ConstantInitialized)
    : _impl_(::_pbi::ConstantInitialized()) {}
struct SkillPermissionTabledDataDefaultTypeInternal {
  PROTOBUF_CONSTEXPR SkillPermissionTabledDataDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~SkillPermissionTabledDataDefaultTypeInternal() {}
  union {
    SkillPermissionTabledData _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 SkillPermissionTabledDataDefaultTypeInternal _SkillPermissionTabledData_default_instance_;
static ::_pb::Metadata file_level_metadata_skillpermission_5ftable_2eproto[2];
static constexpr const ::_pb::EnumDescriptor**
    file_level_enum_descriptors_skillpermission_5ftable_2eproto = nullptr;
static constexpr const ::_pb::ServiceDescriptor**
    file_level_service_descriptors_skillpermission_5ftable_2eproto = nullptr;
const ::uint32_t
    TableStruct_skillpermission_5ftable_2eproto::offsets[] ABSL_ATTRIBUTE_SECTION_VARIABLE(
        protodesc_cold) = {
        ~0u,  // no _has_bits_
        PROTOBUF_FIELD_OFFSET(::SkillPermissionTable, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::SkillPermissionTable, _impl_.id_),
        PROTOBUF_FIELD_OFFSET(::SkillPermissionTable, _impl_.skilltype_),
        ~0u,  // no _has_bits_
        PROTOBUF_FIELD_OFFSET(::SkillPermissionTabledData, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::SkillPermissionTabledData, _impl_.data_),
};

static const ::_pbi::MigrationSchema
    schemas[] ABSL_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
        {0, -1, -1, sizeof(::SkillPermissionTable)},
        {10, -1, -1, sizeof(::SkillPermissionTabledData)},
};
static const ::_pb::Message* const file_default_instances[] = {
    &::_SkillPermissionTable_default_instance_._instance,
    &::_SkillPermissionTabledData_default_instance_._instance,
};
const char descriptor_table_protodef_skillpermission_5ftable_2eproto[] ABSL_ATTRIBUTE_SECTION_VARIABLE(
    protodesc_cold) = {
    "\n\033skillpermission_table.proto\"5\n\024SkillPe"
    "rmissionTable\022\n\n\002id\030\001 \001(\r\022\021\n\tskilltype\030\002"
    " \003(\r\"@\n\031SkillPermissionTabledData\022#\n\004dat"
    "a\030\001 \003(\0132\025.SkillPermissionTableB\tZ\007pb/gam"
    "eb\006proto3"
};
static ::absl::once_flag descriptor_table_skillpermission_5ftable_2eproto_once;
const ::_pbi::DescriptorTable descriptor_table_skillpermission_5ftable_2eproto = {
    false,
    false,
    169,
    descriptor_table_protodef_skillpermission_5ftable_2eproto,
    "skillpermission_table.proto",
    &descriptor_table_skillpermission_5ftable_2eproto_once,
    nullptr,
    0,
    2,
    schemas,
    file_default_instances,
    TableStruct_skillpermission_5ftable_2eproto::offsets,
    file_level_metadata_skillpermission_5ftable_2eproto,
    file_level_enum_descriptors_skillpermission_5ftable_2eproto,
    file_level_service_descriptors_skillpermission_5ftable_2eproto,
};

// This function exists to be marked as weak.
// It can significantly speed up compilation by breaking up LLVM's SCC
// in the .pb.cc translation units. Large translation units see a
// reduction of more than 35% of walltime for optimized builds. Without
// the weak attribute all the messages in the file, including all the
// vtables and everything they use become part of the same SCC through
// a cycle like:
// GetMetadata -> descriptor table -> default instances ->
//   vtables -> GetMetadata
// By adding a weak function here we break the connection from the
// individual vtables back into the descriptor table.
PROTOBUF_ATTRIBUTE_WEAK const ::_pbi::DescriptorTable* descriptor_table_skillpermission_5ftable_2eproto_getter() {
  return &descriptor_table_skillpermission_5ftable_2eproto;
}
// ===================================================================

class SkillPermissionTable::_Internal {
 public:
};

SkillPermissionTable::SkillPermissionTable(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:SkillPermissionTable)
}
inline PROTOBUF_NDEBUG_INLINE SkillPermissionTable::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from)
      : skilltype_{visibility, arena, from.skilltype_},
        _skilltype_cached_byte_size_{0},
        _cached_size_{0} {}

SkillPermissionTable::SkillPermissionTable(
    ::google::protobuf::Arena* arena,
    const SkillPermissionTable& from)
    : ::google::protobuf::Message(arena) {
  SkillPermissionTable* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_);
  _impl_.id_ = from._impl_.id_;

  // @@protoc_insertion_point(copy_constructor:SkillPermissionTable)
}
inline PROTOBUF_NDEBUG_INLINE SkillPermissionTable::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : skilltype_{visibility, arena},
        _skilltype_cached_byte_size_{0},
        _cached_size_{0} {}

inline void SkillPermissionTable::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  _impl_.id_ = {};
}
SkillPermissionTable::~SkillPermissionTable() {
  // @@protoc_insertion_point(destructor:SkillPermissionTable)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void SkillPermissionTable::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  _impl_.~Impl_();
}

const ::google::protobuf::MessageLite::ClassData*
SkillPermissionTable::GetClassData() const {
  PROTOBUF_CONSTINIT static const ::google::protobuf::MessageLite::
      ClassDataFull _data_ = {
          {
              nullptr,  // OnDemandRegisterArenaDtor
              PROTOBUF_FIELD_OFFSET(SkillPermissionTable, _impl_._cached_size_),
              false,
          },
          &SkillPermissionTable::MergeImpl,
          &SkillPermissionTable::kDescriptorMethods,
      };
  return &_data_;
}
PROTOBUF_NOINLINE void SkillPermissionTable::Clear() {
// @@protoc_insertion_point(message_clear_start:SkillPermissionTable)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.skilltype_.Clear();
  _impl_.id_ = 0u;
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* SkillPermissionTable::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<1, 2, 0, 0, 2> SkillPermissionTable::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    2, 8,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967292,  // skipmap
    offsetof(decltype(_table_), field_entries),
    2,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    &_SkillPermissionTable_default_instance_._instance,
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::SkillPermissionTable>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // repeated uint32 skilltype = 2;
    {::_pbi::TcParser::FastV32P1,
     {18, 63, 0, PROTOBUF_FIELD_OFFSET(SkillPermissionTable, _impl_.skilltype_)}},
    // uint32 id = 1;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(SkillPermissionTable, _impl_.id_), 63>(),
     {8, 63, 0, PROTOBUF_FIELD_OFFSET(SkillPermissionTable, _impl_.id_)}},
  }}, {{
    65535, 65535
  }}, {{
    // uint32 id = 1;
    {PROTOBUF_FIELD_OFFSET(SkillPermissionTable, _impl_.id_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUInt32)},
    // repeated uint32 skilltype = 2;
    {PROTOBUF_FIELD_OFFSET(SkillPermissionTable, _impl_.skilltype_), 0, 0,
    (0 | ::_fl::kFcRepeated | ::_fl::kPackedUInt32)},
  }},
  // no aux_entries
  {{
  }},
};

::uint8_t* SkillPermissionTable::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:SkillPermissionTable)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  // uint32 id = 1;
  if (this->_internal_id() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt32ToArray(
        1, this->_internal_id(), target);
  }

  // repeated uint32 skilltype = 2;
  {
    int byte_size = _impl_._skilltype_cached_byte_size_.Get();
    if (byte_size > 0) {
      target = stream->WriteUInt32Packed(
          2, _internal_skilltype(), byte_size, target);
    }
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:SkillPermissionTable)
  return target;
}

::size_t SkillPermissionTable::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:SkillPermissionTable)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated uint32 skilltype = 2;
  {
    std::size_t data_size = ::_pbi::WireFormatLite::UInt32Size(
        this->_internal_skilltype())
    ;
    _impl_._skilltype_cached_byte_size_.Set(::_pbi::ToCachedSize(data_size));
    std::size_t tag_size = data_size == 0
        ? 0
        : 1 + ::_pbi::WireFormatLite::Int32Size(
                            static_cast<int32_t>(data_size))
    ;
    total_size += tag_size + data_size;
  }
  // uint32 id = 1;
  if (this->_internal_id() != 0) {
    total_size += ::_pbi::WireFormatLite::UInt32SizePlusOne(
        this->_internal_id());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}


void SkillPermissionTable::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<SkillPermissionTable*>(&to_msg);
  auto& from = static_cast<const SkillPermissionTable&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:SkillPermissionTable)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_internal_mutable_skilltype()->MergeFrom(from._internal_skilltype());
  if (from._internal_id() != 0) {
    _this->_impl_.id_ = from._impl_.id_;
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void SkillPermissionTable::CopyFrom(const SkillPermissionTable& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:SkillPermissionTable)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool SkillPermissionTable::IsInitialized() const {
  return true;
}

void SkillPermissionTable::InternalSwap(SkillPermissionTable* PROTOBUF_RESTRICT other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  _impl_.skilltype_.InternalSwap(&other->_impl_.skilltype_);
        swap(_impl_.id_, other->_impl_.id_);
}

::google::protobuf::Metadata SkillPermissionTable::GetMetadata() const {
  return ::_pbi::AssignDescriptors(&descriptor_table_skillpermission_5ftable_2eproto_getter,
                                   &descriptor_table_skillpermission_5ftable_2eproto_once,
                                   file_level_metadata_skillpermission_5ftable_2eproto[0]);
}
// ===================================================================

class SkillPermissionTabledData::_Internal {
 public:
};

SkillPermissionTabledData::SkillPermissionTabledData(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:SkillPermissionTabledData)
}
inline PROTOBUF_NDEBUG_INLINE SkillPermissionTabledData::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from)
      : data_{visibility, arena, from.data_},
        _cached_size_{0} {}

SkillPermissionTabledData::SkillPermissionTabledData(
    ::google::protobuf::Arena* arena,
    const SkillPermissionTabledData& from)
    : ::google::protobuf::Message(arena) {
  SkillPermissionTabledData* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_);

  // @@protoc_insertion_point(copy_constructor:SkillPermissionTabledData)
}
inline PROTOBUF_NDEBUG_INLINE SkillPermissionTabledData::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : data_{visibility, arena},
        _cached_size_{0} {}

inline void SkillPermissionTabledData::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
}
SkillPermissionTabledData::~SkillPermissionTabledData() {
  // @@protoc_insertion_point(destructor:SkillPermissionTabledData)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void SkillPermissionTabledData::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  _impl_.~Impl_();
}

const ::google::protobuf::MessageLite::ClassData*
SkillPermissionTabledData::GetClassData() const {
  PROTOBUF_CONSTINIT static const ::google::protobuf::MessageLite::
      ClassDataFull _data_ = {
          {
              nullptr,  // OnDemandRegisterArenaDtor
              PROTOBUF_FIELD_OFFSET(SkillPermissionTabledData, _impl_._cached_size_),
              false,
          },
          &SkillPermissionTabledData::MergeImpl,
          &SkillPermissionTabledData::kDescriptorMethods,
      };
  return &_data_;
}
PROTOBUF_NOINLINE void SkillPermissionTabledData::Clear() {
// @@protoc_insertion_point(message_clear_start:SkillPermissionTabledData)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.data_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* SkillPermissionTabledData::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<0, 1, 1, 0, 2> SkillPermissionTabledData::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    1, 0,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967294,  // skipmap
    offsetof(decltype(_table_), field_entries),
    1,  // num_field_entries
    1,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    &_SkillPermissionTabledData_default_instance_._instance,
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::SkillPermissionTabledData>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // repeated .SkillPermissionTable data = 1;
    {::_pbi::TcParser::FastMtR1,
     {10, 63, 0, PROTOBUF_FIELD_OFFSET(SkillPermissionTabledData, _impl_.data_)}},
  }}, {{
    65535, 65535
  }}, {{
    // repeated .SkillPermissionTable data = 1;
    {PROTOBUF_FIELD_OFFSET(SkillPermissionTabledData, _impl_.data_), 0, 0,
    (0 | ::_fl::kFcRepeated | ::_fl::kMessage | ::_fl::kTvTable)},
  }}, {{
    {::_pbi::TcParser::GetTable<::SkillPermissionTable>()},
  }}, {{
  }},
};

::uint8_t* SkillPermissionTabledData::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:SkillPermissionTabledData)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  // repeated .SkillPermissionTable data = 1;
  for (unsigned i = 0, n = static_cast<unsigned>(
                           this->_internal_data_size());
       i < n; i++) {
    const auto& repfield = this->_internal_data().Get(i);
    target =
        ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
            1, repfield, repfield.GetCachedSize(),
            target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:SkillPermissionTabledData)
  return target;
}

::size_t SkillPermissionTabledData::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:SkillPermissionTabledData)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated .SkillPermissionTable data = 1;
  total_size += 1UL * this->_internal_data_size();
  for (const auto& msg : this->_internal_data()) {
    total_size += ::google::protobuf::internal::WireFormatLite::MessageSize(msg);
  }
  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}


void SkillPermissionTabledData::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<SkillPermissionTabledData*>(&to_msg);
  auto& from = static_cast<const SkillPermissionTabledData&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:SkillPermissionTabledData)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_internal_mutable_data()->MergeFrom(
      from._internal_data());
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void SkillPermissionTabledData::CopyFrom(const SkillPermissionTabledData& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:SkillPermissionTabledData)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool SkillPermissionTabledData::IsInitialized() const {
  return true;
}

void SkillPermissionTabledData::InternalSwap(SkillPermissionTabledData* PROTOBUF_RESTRICT other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  _impl_.data_.InternalSwap(&other->_impl_.data_);
}

::google::protobuf::Metadata SkillPermissionTabledData::GetMetadata() const {
  return ::_pbi::AssignDescriptors(&descriptor_table_skillpermission_5ftable_2eproto_getter,
                                   &descriptor_table_skillpermission_5ftable_2eproto_once,
                                   file_level_metadata_skillpermission_5ftable_2eproto[1]);
}
// @@protoc_insertion_point(namespace_scope)
namespace google {
namespace protobuf {
}  // namespace protobuf
}  // namespace google
// @@protoc_insertion_point(global_scope)
PROTOBUF_ATTRIBUTE_INIT_PRIORITY2
static ::std::false_type _static_init_ PROTOBUF_UNUSED =
    (::_pbi::AddDescriptors(&descriptor_table_skillpermission_5ftable_2eproto),
     ::std::false_type{});
#include "google/protobuf/port_undef.inc"
