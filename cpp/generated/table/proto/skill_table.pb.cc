// Generated by the protocol buffer compiler.  DO NOT EDIT!
// NO CHECKED-IN PROTOBUF GENCODE
// source: skill_table.proto
// Protobuf C++ Version: 6.31.1

#include "skill_table.pb.h"

#include <algorithm>
#include <type_traits>
#include "google/protobuf/io/coded_stream.h"
#include "google/protobuf/generated_message_tctable_impl.h"
#include "google/protobuf/extension_set.h"
#include "google/protobuf/generated_message_util.h"
#include "google/protobuf/wire_format_lite.h"
#include "google/protobuf/descriptor.h"
#include "google/protobuf/generated_message_reflection.h"
#include "google/protobuf/reflection_ops.h"
#include "google/protobuf/wire_format.h"
// @@protoc_insertion_point(includes)

// Must be included last.
#include "google/protobuf/port_def.inc"
PROTOBUF_PRAGMA_INIT_SEG
namespace _pb = ::google::protobuf;
namespace _pbi = ::google::protobuf::internal;
namespace _fl = ::google::protobuf::internal::field_layout;

inline constexpr Skillrequiredresource::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        requiredresource_type_{0u},
        requiredresource_value_{0u} {}

template <typename>
PROTOBUF_CONSTEXPR Skillrequiredresource::Skillrequiredresource(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(Skillrequiredresource_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct SkillrequiredresourceDefaultTypeInternal {
  PROTOBUF_CONSTEXPR SkillrequiredresourceDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~SkillrequiredresourceDefaultTypeInternal() {}
  union {
    Skillrequiredresource _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 SkillrequiredresourceDefaultTypeInternal _Skillrequiredresource_default_instance_;

inline constexpr Skillrequireditem::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        requireditem_value_{::uint64_t{0u}},
        requireditem_type_{0u} {}

template <typename>
PROTOBUF_CONSTEXPR Skillrequireditem::Skillrequireditem(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(Skillrequireditem_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct SkillrequireditemDefaultTypeInternal {
  PROTOBUF_CONSTEXPR SkillrequireditemDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~SkillrequireditemDefaultTypeInternal() {}
  union {
    Skillrequireditem _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 SkillrequireditemDefaultTypeInternal _Skillrequireditem_default_instance_;

inline constexpr Skillrequestresource::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        requestresource_id_{0u},
        requestresource_cost_{0u} {}

template <typename>
PROTOBUF_CONSTEXPR Skillrequestresource::Skillrequestresource(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(Skillrequestresource_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct SkillrequestresourceDefaultTypeInternal {
  PROTOBUF_CONSTEXPR SkillrequestresourceDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~SkillrequestresourceDefaultTypeInternal() {}
  union {
    Skillrequestresource _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 SkillrequestresourceDefaultTypeInternal _Skillrequestresource_default_instance_;

inline constexpr SkillTable::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        skill_type_{},
        _skill_type_cached_byte_size_{0},
        targeting_mode_{},
        _targeting_mode_cached_byte_size_{0},
        requireditem_{},
        requiredresource_{},
        effect_{},
        _effect_cached_byte_size_{0},
        requestresource_{},
        damage_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        id_{0u},
        rquest_target_{0u},
        castpoint_{0},
        target_status_{0u},
        immediately_{0u},
        recoverytime_{0},
        channelthink_{0u},
        channelfinish_{0u},
        thinkinterval_{0u},
        channeltime_{0u},
        range_{0},
        max_range_{0},
        min_range_{0},
        self_status_{0u},
        required_status_{0u},
        cooldown_id_{0u} {}

template <typename>
PROTOBUF_CONSTEXPR SkillTable::SkillTable(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(SkillTable_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct SkillTableDefaultTypeInternal {
  PROTOBUF_CONSTEXPR SkillTableDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~SkillTableDefaultTypeInternal() {}
  union {
    SkillTable _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 SkillTableDefaultTypeInternal _SkillTable_default_instance_;

inline constexpr SkillTabledData::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : data_{},
        _cached_size_{0} {}

template <typename>
PROTOBUF_CONSTEXPR SkillTabledData::SkillTabledData(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(SkillTabledData_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct SkillTabledDataDefaultTypeInternal {
  PROTOBUF_CONSTEXPR SkillTabledDataDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~SkillTabledDataDefaultTypeInternal() {}
  union {
    SkillTabledData _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 SkillTabledDataDefaultTypeInternal _SkillTabledData_default_instance_;
static constexpr const ::_pb::EnumDescriptor *PROTOBUF_NONNULL *PROTOBUF_NULLABLE
    file_level_enum_descriptors_skill_5ftable_2eproto = nullptr;
static constexpr const ::_pb::ServiceDescriptor *PROTOBUF_NONNULL *PROTOBUF_NULLABLE
    file_level_service_descriptors_skill_5ftable_2eproto = nullptr;
const ::uint32_t
    TableStruct_skill_5ftable_2eproto::offsets[] ABSL_ATTRIBUTE_SECTION_VARIABLE(
        protodesc_cold) = {
        0x081, // bitmap
        PROTOBUF_FIELD_OFFSET(::Skillrequireditem, _impl_._has_bits_),
        5, // hasbit index offset
        PROTOBUF_FIELD_OFFSET(::Skillrequireditem, _impl_.requireditem_type_),
        PROTOBUF_FIELD_OFFSET(::Skillrequireditem, _impl_.requireditem_value_),
        1,
        0,
        0x081, // bitmap
        PROTOBUF_FIELD_OFFSET(::Skillrequiredresource, _impl_._has_bits_),
        5, // hasbit index offset
        PROTOBUF_FIELD_OFFSET(::Skillrequiredresource, _impl_.requiredresource_type_),
        PROTOBUF_FIELD_OFFSET(::Skillrequiredresource, _impl_.requiredresource_value_),
        0,
        1,
        0x081, // bitmap
        PROTOBUF_FIELD_OFFSET(::Skillrequestresource, _impl_._has_bits_),
        5, // hasbit index offset
        PROTOBUF_FIELD_OFFSET(::Skillrequestresource, _impl_.requestresource_id_),
        PROTOBUF_FIELD_OFFSET(::Skillrequestresource, _impl_.requestresource_cost_),
        0,
        1,
        0x081, // bitmap
        PROTOBUF_FIELD_OFFSET(::SkillTable, _impl_._has_bits_),
        26, // hasbit index offset
        PROTOBUF_FIELD_OFFSET(::SkillTable, _impl_.id_),
        PROTOBUF_FIELD_OFFSET(::SkillTable, _impl_.skill_type_),
        PROTOBUF_FIELD_OFFSET(::SkillTable, _impl_.targeting_mode_),
        PROTOBUF_FIELD_OFFSET(::SkillTable, _impl_.rquest_target_),
        PROTOBUF_FIELD_OFFSET(::SkillTable, _impl_.target_status_),
        PROTOBUF_FIELD_OFFSET(::SkillTable, _impl_.castpoint_),
        PROTOBUF_FIELD_OFFSET(::SkillTable, _impl_.recoverytime_),
        PROTOBUF_FIELD_OFFSET(::SkillTable, _impl_.immediately_),
        PROTOBUF_FIELD_OFFSET(::SkillTable, _impl_.requireditem_),
        PROTOBUF_FIELD_OFFSET(::SkillTable, _impl_.requiredresource_),
        PROTOBUF_FIELD_OFFSET(::SkillTable, _impl_.effect_),
        PROTOBUF_FIELD_OFFSET(::SkillTable, _impl_.channelthink_),
        PROTOBUF_FIELD_OFFSET(::SkillTable, _impl_.channelfinish_),
        PROTOBUF_FIELD_OFFSET(::SkillTable, _impl_.thinkinterval_),
        PROTOBUF_FIELD_OFFSET(::SkillTable, _impl_.channeltime_),
        PROTOBUF_FIELD_OFFSET(::SkillTable, _impl_.requestresource_),
        PROTOBUF_FIELD_OFFSET(::SkillTable, _impl_.range_),
        PROTOBUF_FIELD_OFFSET(::SkillTable, _impl_.max_range_),
        PROTOBUF_FIELD_OFFSET(::SkillTable, _impl_.min_range_),
        PROTOBUF_FIELD_OFFSET(::SkillTable, _impl_.self_status_),
        PROTOBUF_FIELD_OFFSET(::SkillTable, _impl_.required_status_),
        PROTOBUF_FIELD_OFFSET(::SkillTable, _impl_.cooldown_id_),
        PROTOBUF_FIELD_OFFSET(::SkillTable, _impl_.damage_),
        1,
        ~0u,
        ~0u,
        2,
        4,
        3,
        6,
        5,
        ~0u,
        ~0u,
        ~0u,
        7,
        8,
        9,
        10,
        ~0u,
        11,
        12,
        13,
        14,
        15,
        16,
        0,
        0x000, // bitmap
        PROTOBUF_FIELD_OFFSET(::SkillTabledData, _impl_.data_),
};

static const ::_pbi::MigrationSchema
    schemas[] ABSL_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
        {0, sizeof(::Skillrequireditem)},
        {7, sizeof(::Skillrequiredresource)},
        {14, sizeof(::Skillrequestresource)},
        {21, sizeof(::SkillTable)},
        {70, sizeof(::SkillTabledData)},
};
static const ::_pb::Message* PROTOBUF_NONNULL const file_default_instances[] = {
    &::_Skillrequireditem_default_instance_._instance,
    &::_Skillrequiredresource_default_instance_._instance,
    &::_Skillrequestresource_default_instance_._instance,
    &::_SkillTable_default_instance_._instance,
    &::_SkillTabledData_default_instance_._instance,
};
const char descriptor_table_protodef_skill_5ftable_2eproto[] ABSL_ATTRIBUTE_SECTION_VARIABLE(
    protodesc_cold) = {
    "\n\021skill_table.proto\"J\n\021Skillrequireditem"
    "\022\031\n\021requireditem_type\030\001 \001(\r\022\032\n\022requiredi"
    "tem_value\030\002 \001(\004\"V\n\025Skillrequiredresource"
    "\022\035\n\025requiredresource_type\030\001 \001(\r\022\036\n\026requi"
    "redresource_value\030\002 \001(\r\"P\n\024Skillrequestr"
    "esource\022\032\n\022requestresource_id\030\001 \001(\r\022\034\n\024r"
    "equestresource_cost\030\002 \001(\r\"\255\004\n\nSkillTable"
    "\022\n\n\002id\030\001 \001(\r\022\022\n\nskill_type\030\002 \003(\r\022\026\n\016targ"
    "eting_mode\030\003 \003(\r\022\025\n\rrquest_target\030\004 \001(\r\022"
    "\025\n\rtarget_status\030\005 \001(\r\022\021\n\tcastpoint\030\006 \001("
    "\001\022\024\n\014recoverytime\030\007 \001(\001\022\023\n\013immediately\030\010"
    " \001(\r\022(\n\014requireditem\030\t \003(\0132\022.Skillrequir"
    "editem\0220\n\020requiredresource\030\n \003(\0132\026.Skill"
    "requiredresource\022\016\n\006effect\030\013 \003(\r\022\024\n\014chan"
    "nelthink\030\014 \001(\r\022\025\n\rchannelfinish\030\r \001(\r\022\025\n"
    "\rthinkinterval\030\016 \001(\r\022\023\n\013channeltime\030\017 \001("
    "\r\022.\n\017requestresource\030\020 \003(\0132\025.Skillreques"
    "tresource\022\r\n\005range\030\021 \001(\001\022\021\n\tmax_range\030\022 "
    "\001(\001\022\021\n\tmin_range\030\023 \001(\001\022\023\n\013self_status\030\024 "
    "\001(\r\022\027\n\017required_status\030\025 \001(\r\022\023\n\013cooldown"
    "_id\030\026 \001(\r\022\016\n\006damage\030\027 \001(\t\",\n\017SkillTabled"
    "Data\022\031\n\004data\030\001 \003(\0132\013.SkillTableB\tZ\007pb/ga"
    "meb\006proto3"
};
static ::absl::once_flag descriptor_table_skill_5ftable_2eproto_once;
PROTOBUF_CONSTINIT const ::_pbi::DescriptorTable descriptor_table_skill_5ftable_2eproto = {
    false,
    false,
    890,
    descriptor_table_protodef_skill_5ftable_2eproto,
    "skill_table.proto",
    &descriptor_table_skill_5ftable_2eproto_once,
    nullptr,
    0,
    5,
    schemas,
    file_default_instances,
    TableStruct_skill_5ftable_2eproto::offsets,
    file_level_enum_descriptors_skill_5ftable_2eproto,
    file_level_service_descriptors_skill_5ftable_2eproto,
};
// ===================================================================

class Skillrequireditem::_Internal {
 public:
  using HasBits =
      decltype(::std::declval<Skillrequireditem>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
      8 * PROTOBUF_FIELD_OFFSET(Skillrequireditem, _impl_._has_bits_);
};

Skillrequireditem::Skillrequireditem(::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, Skillrequireditem_class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:Skillrequireditem)
}
Skillrequireditem::Skillrequireditem(
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const Skillrequireditem& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, Skillrequireditem_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(from._impl_) {
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
}
PROTOBUF_NDEBUG_INLINE Skillrequireditem::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
      : _cached_size_{0} {}

inline void Skillrequireditem::SharedCtor(::_pb::Arena* PROTOBUF_NULLABLE arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, requireditem_value_),
           0,
           offsetof(Impl_, requireditem_type_) -
               offsetof(Impl_, requireditem_value_) +
               sizeof(Impl_::requireditem_type_));
}
Skillrequireditem::~Skillrequireditem() {
  // @@protoc_insertion_point(destructor:Skillrequireditem)
  SharedDtor(*this);
}
inline void Skillrequireditem::SharedDtor(MessageLite& self) {
  Skillrequireditem& this_ = static_cast<Skillrequireditem&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  this_._impl_.~Impl_();
}

inline void* PROTOBUF_NONNULL Skillrequireditem::PlacementNew_(
    const void* PROTOBUF_NONNULL, void* PROTOBUF_NONNULL mem,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena) {
  return ::new (mem) Skillrequireditem(arena);
}
constexpr auto Skillrequireditem::InternalNewImpl_() {
  return ::google::protobuf::internal::MessageCreator::ZeroInit(sizeof(Skillrequireditem),
                                            alignof(Skillrequireditem));
}
constexpr auto Skillrequireditem::InternalGenerateClassData_() {
  return ::google::protobuf::internal::ClassDataFull{
      ::google::protobuf::internal::ClassData{
          &_Skillrequireditem_default_instance_._instance,
          &_table_.header,
          nullptr,  // OnDemandRegisterArenaDtor
          nullptr,  // IsInitialized
          &Skillrequireditem::MergeImpl,
          ::google::protobuf::Message::GetNewImpl<Skillrequireditem>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
          &Skillrequireditem::SharedDtor,
          ::google::protobuf::Message::GetClearImpl<Skillrequireditem>(), &Skillrequireditem::ByteSizeLong,
              &Skillrequireditem::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
          PROTOBUF_FIELD_OFFSET(Skillrequireditem, _impl_._cached_size_),
          false,
      },
      &Skillrequireditem::kDescriptorMethods,
      &descriptor_table_skill_5ftable_2eproto,
      nullptr,  // tracker
  };
}

PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 const
    ::google::protobuf::internal::ClassDataFull Skillrequireditem_class_data_ =
        Skillrequireditem::InternalGenerateClassData_();

PROTOBUF_ATTRIBUTE_WEAK const ::google::protobuf::internal::ClassData* PROTOBUF_NONNULL
Skillrequireditem::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&Skillrequireditem_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(Skillrequireditem_class_data_.tc_table);
  return Skillrequireditem_class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<1, 2, 0, 0, 2>
Skillrequireditem::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(Skillrequireditem, _impl_._has_bits_),
    0, // no _extensions_
    2, 8,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967292,  // skipmap
    offsetof(decltype(_table_), field_entries),
    2,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    Skillrequireditem_class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::Skillrequireditem>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // uint64 requireditem_value = 2;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint64_t, offsetof(Skillrequireditem, _impl_.requireditem_value_), 0>(),
     {16, 0, 0, PROTOBUF_FIELD_OFFSET(Skillrequireditem, _impl_.requireditem_value_)}},
    // uint32 requireditem_type = 1;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(Skillrequireditem, _impl_.requireditem_type_), 1>(),
     {8, 1, 0, PROTOBUF_FIELD_OFFSET(Skillrequireditem, _impl_.requireditem_type_)}},
  }}, {{
    65535, 65535
  }}, {{
    // uint32 requireditem_type = 1;
    {PROTOBUF_FIELD_OFFSET(Skillrequireditem, _impl_.requireditem_type_), _Internal::kHasBitsOffset + 1, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kUInt32)},
    // uint64 requireditem_value = 2;
    {PROTOBUF_FIELD_OFFSET(Skillrequireditem, _impl_.requireditem_value_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kUInt64)},
  }},
  // no aux_entries
  {{
  }},
};
PROTOBUF_NOINLINE void Skillrequireditem::Clear() {
// @@protoc_insertion_point(message_clear_start:Skillrequireditem)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if ((cached_has_bits & 0x00000003u) != 0) {
    ::memset(&_impl_.requireditem_value_, 0, static_cast<::size_t>(
        reinterpret_cast<char*>(&_impl_.requireditem_type_) -
        reinterpret_cast<char*>(&_impl_.requireditem_value_)) + sizeof(_impl_.requireditem_type_));
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::uint8_t* PROTOBUF_NONNULL Skillrequireditem::_InternalSerialize(
    const ::google::protobuf::MessageLite& base, ::uint8_t* PROTOBUF_NONNULL target,
    ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) {
  const Skillrequireditem& this_ = static_cast<const Skillrequireditem&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::uint8_t* PROTOBUF_NONNULL Skillrequireditem::_InternalSerialize(
    ::uint8_t* PROTOBUF_NONNULL target,
    ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const {
  const Skillrequireditem& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
  // @@protoc_insertion_point(serialize_to_array_start:Skillrequireditem)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  // uint32 requireditem_type = 1;
  if ((this_._impl_._has_bits_[0] & 0x00000002u) != 0) {
    if (this_._internal_requireditem_type() != 0) {
      target = stream->EnsureSpace(target);
      target = ::_pbi::WireFormatLite::WriteUInt32ToArray(
          1, this_._internal_requireditem_type(), target);
    }
  }

  // uint64 requireditem_value = 2;
  if ((this_._impl_._has_bits_[0] & 0x00000001u) != 0) {
    if (this_._internal_requireditem_value() != 0) {
      target = stream->EnsureSpace(target);
      target = ::_pbi::WireFormatLite::WriteUInt64ToArray(
          2, this_._internal_requireditem_value(), target);
    }
  }

  if (ABSL_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:Skillrequireditem)
  return target;
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::size_t Skillrequireditem::ByteSizeLong(const MessageLite& base) {
  const Skillrequireditem& this_ = static_cast<const Skillrequireditem&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::size_t Skillrequireditem::ByteSizeLong() const {
  const Skillrequireditem& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
  // @@protoc_insertion_point(message_byte_size_start:Skillrequireditem)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void)cached_has_bits;

  ::_pbi::Prefetch5LinesFrom7Lines(&this_);
  cached_has_bits = this_._impl_._has_bits_[0];
  if ((cached_has_bits & 0x00000003u) != 0) {
    // uint64 requireditem_value = 2;
    if ((cached_has_bits & 0x00000001u) != 0) {
      if (this_._internal_requireditem_value() != 0) {
        total_size += ::_pbi::WireFormatLite::UInt64SizePlusOne(
            this_._internal_requireditem_value());
      }
    }
    // uint32 requireditem_type = 1;
    if ((cached_has_bits & 0x00000002u) != 0) {
      if (this_._internal_requireditem_type() != 0) {
        total_size += ::_pbi::WireFormatLite::UInt32SizePlusOne(
            this_._internal_requireditem_type());
      }
    }
  }
  return this_.MaybeComputeUnknownFieldsSize(total_size,
                                             &this_._impl_._cached_size_);
}

void Skillrequireditem::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<Skillrequireditem*>(&to_msg);
  auto& from = static_cast<const Skillrequireditem&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:Skillrequireditem)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._impl_._has_bits_[0];
  if ((cached_has_bits & 0x00000003u) != 0) {
    if ((cached_has_bits & 0x00000001u) != 0) {
      if (from._internal_requireditem_value() != 0) {
        _this->_impl_.requireditem_value_ = from._impl_.requireditem_value_;
      }
    }
    if ((cached_has_bits & 0x00000002u) != 0) {
      if (from._internal_requireditem_type() != 0) {
        _this->_impl_.requireditem_type_ = from._impl_.requireditem_type_;
      }
    }
  }
  _this->_impl_._has_bits_[0] |= cached_has_bits;
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void Skillrequireditem::CopyFrom(const Skillrequireditem& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:Skillrequireditem)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void Skillrequireditem::InternalSwap(Skillrequireditem* PROTOBUF_RESTRICT PROTOBUF_NONNULL other) {
  using ::std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(Skillrequireditem, _impl_.requireditem_type_)
      + sizeof(Skillrequireditem::_impl_.requireditem_type_)
      - PROTOBUF_FIELD_OFFSET(Skillrequireditem, _impl_.requireditem_value_)>(
          reinterpret_cast<char*>(&_impl_.requireditem_value_),
          reinterpret_cast<char*>(&other->_impl_.requireditem_value_));
}

::google::protobuf::Metadata Skillrequireditem::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class Skillrequiredresource::_Internal {
 public:
  using HasBits =
      decltype(::std::declval<Skillrequiredresource>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
      8 * PROTOBUF_FIELD_OFFSET(Skillrequiredresource, _impl_._has_bits_);
};

Skillrequiredresource::Skillrequiredresource(::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, Skillrequiredresource_class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:Skillrequiredresource)
}
Skillrequiredresource::Skillrequiredresource(
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const Skillrequiredresource& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, Skillrequiredresource_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(from._impl_) {
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
}
PROTOBUF_NDEBUG_INLINE Skillrequiredresource::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
      : _cached_size_{0} {}

inline void Skillrequiredresource::SharedCtor(::_pb::Arena* PROTOBUF_NULLABLE arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, requiredresource_type_),
           0,
           offsetof(Impl_, requiredresource_value_) -
               offsetof(Impl_, requiredresource_type_) +
               sizeof(Impl_::requiredresource_value_));
}
Skillrequiredresource::~Skillrequiredresource() {
  // @@protoc_insertion_point(destructor:Skillrequiredresource)
  SharedDtor(*this);
}
inline void Skillrequiredresource::SharedDtor(MessageLite& self) {
  Skillrequiredresource& this_ = static_cast<Skillrequiredresource&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  this_._impl_.~Impl_();
}

inline void* PROTOBUF_NONNULL Skillrequiredresource::PlacementNew_(
    const void* PROTOBUF_NONNULL, void* PROTOBUF_NONNULL mem,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena) {
  return ::new (mem) Skillrequiredresource(arena);
}
constexpr auto Skillrequiredresource::InternalNewImpl_() {
  return ::google::protobuf::internal::MessageCreator::ZeroInit(sizeof(Skillrequiredresource),
                                            alignof(Skillrequiredresource));
}
constexpr auto Skillrequiredresource::InternalGenerateClassData_() {
  return ::google::protobuf::internal::ClassDataFull{
      ::google::protobuf::internal::ClassData{
          &_Skillrequiredresource_default_instance_._instance,
          &_table_.header,
          nullptr,  // OnDemandRegisterArenaDtor
          nullptr,  // IsInitialized
          &Skillrequiredresource::MergeImpl,
          ::google::protobuf::Message::GetNewImpl<Skillrequiredresource>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
          &Skillrequiredresource::SharedDtor,
          ::google::protobuf::Message::GetClearImpl<Skillrequiredresource>(), &Skillrequiredresource::ByteSizeLong,
              &Skillrequiredresource::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
          PROTOBUF_FIELD_OFFSET(Skillrequiredresource, _impl_._cached_size_),
          false,
      },
      &Skillrequiredresource::kDescriptorMethods,
      &descriptor_table_skill_5ftable_2eproto,
      nullptr,  // tracker
  };
}

PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 const
    ::google::protobuf::internal::ClassDataFull Skillrequiredresource_class_data_ =
        Skillrequiredresource::InternalGenerateClassData_();

PROTOBUF_ATTRIBUTE_WEAK const ::google::protobuf::internal::ClassData* PROTOBUF_NONNULL
Skillrequiredresource::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&Skillrequiredresource_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(Skillrequiredresource_class_data_.tc_table);
  return Skillrequiredresource_class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<1, 2, 0, 0, 2>
Skillrequiredresource::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(Skillrequiredresource, _impl_._has_bits_),
    0, // no _extensions_
    2, 8,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967292,  // skipmap
    offsetof(decltype(_table_), field_entries),
    2,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    Skillrequiredresource_class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::Skillrequiredresource>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // uint32 requiredresource_value = 2;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(Skillrequiredresource, _impl_.requiredresource_value_), 1>(),
     {16, 1, 0, PROTOBUF_FIELD_OFFSET(Skillrequiredresource, _impl_.requiredresource_value_)}},
    // uint32 requiredresource_type = 1;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(Skillrequiredresource, _impl_.requiredresource_type_), 0>(),
     {8, 0, 0, PROTOBUF_FIELD_OFFSET(Skillrequiredresource, _impl_.requiredresource_type_)}},
  }}, {{
    65535, 65535
  }}, {{
    // uint32 requiredresource_type = 1;
    {PROTOBUF_FIELD_OFFSET(Skillrequiredresource, _impl_.requiredresource_type_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kUInt32)},
    // uint32 requiredresource_value = 2;
    {PROTOBUF_FIELD_OFFSET(Skillrequiredresource, _impl_.requiredresource_value_), _Internal::kHasBitsOffset + 1, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kUInt32)},
  }},
  // no aux_entries
  {{
  }},
};
PROTOBUF_NOINLINE void Skillrequiredresource::Clear() {
// @@protoc_insertion_point(message_clear_start:Skillrequiredresource)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if ((cached_has_bits & 0x00000003u) != 0) {
    ::memset(&_impl_.requiredresource_type_, 0, static_cast<::size_t>(
        reinterpret_cast<char*>(&_impl_.requiredresource_value_) -
        reinterpret_cast<char*>(&_impl_.requiredresource_type_)) + sizeof(_impl_.requiredresource_value_));
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::uint8_t* PROTOBUF_NONNULL Skillrequiredresource::_InternalSerialize(
    const ::google::protobuf::MessageLite& base, ::uint8_t* PROTOBUF_NONNULL target,
    ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) {
  const Skillrequiredresource& this_ = static_cast<const Skillrequiredresource&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::uint8_t* PROTOBUF_NONNULL Skillrequiredresource::_InternalSerialize(
    ::uint8_t* PROTOBUF_NONNULL target,
    ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const {
  const Skillrequiredresource& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
  // @@protoc_insertion_point(serialize_to_array_start:Skillrequiredresource)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  // uint32 requiredresource_type = 1;
  if ((this_._impl_._has_bits_[0] & 0x00000001u) != 0) {
    if (this_._internal_requiredresource_type() != 0) {
      target = stream->EnsureSpace(target);
      target = ::_pbi::WireFormatLite::WriteUInt32ToArray(
          1, this_._internal_requiredresource_type(), target);
    }
  }

  // uint32 requiredresource_value = 2;
  if ((this_._impl_._has_bits_[0] & 0x00000002u) != 0) {
    if (this_._internal_requiredresource_value() != 0) {
      target = stream->EnsureSpace(target);
      target = ::_pbi::WireFormatLite::WriteUInt32ToArray(
          2, this_._internal_requiredresource_value(), target);
    }
  }

  if (ABSL_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:Skillrequiredresource)
  return target;
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::size_t Skillrequiredresource::ByteSizeLong(const MessageLite& base) {
  const Skillrequiredresource& this_ = static_cast<const Skillrequiredresource&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::size_t Skillrequiredresource::ByteSizeLong() const {
  const Skillrequiredresource& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
  // @@protoc_insertion_point(message_byte_size_start:Skillrequiredresource)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void)cached_has_bits;

  ::_pbi::Prefetch5LinesFrom7Lines(&this_);
  cached_has_bits = this_._impl_._has_bits_[0];
  if ((cached_has_bits & 0x00000003u) != 0) {
    // uint32 requiredresource_type = 1;
    if ((cached_has_bits & 0x00000001u) != 0) {
      if (this_._internal_requiredresource_type() != 0) {
        total_size += ::_pbi::WireFormatLite::UInt32SizePlusOne(
            this_._internal_requiredresource_type());
      }
    }
    // uint32 requiredresource_value = 2;
    if ((cached_has_bits & 0x00000002u) != 0) {
      if (this_._internal_requiredresource_value() != 0) {
        total_size += ::_pbi::WireFormatLite::UInt32SizePlusOne(
            this_._internal_requiredresource_value());
      }
    }
  }
  return this_.MaybeComputeUnknownFieldsSize(total_size,
                                             &this_._impl_._cached_size_);
}

void Skillrequiredresource::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<Skillrequiredresource*>(&to_msg);
  auto& from = static_cast<const Skillrequiredresource&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:Skillrequiredresource)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._impl_._has_bits_[0];
  if ((cached_has_bits & 0x00000003u) != 0) {
    if ((cached_has_bits & 0x00000001u) != 0) {
      if (from._internal_requiredresource_type() != 0) {
        _this->_impl_.requiredresource_type_ = from._impl_.requiredresource_type_;
      }
    }
    if ((cached_has_bits & 0x00000002u) != 0) {
      if (from._internal_requiredresource_value() != 0) {
        _this->_impl_.requiredresource_value_ = from._impl_.requiredresource_value_;
      }
    }
  }
  _this->_impl_._has_bits_[0] |= cached_has_bits;
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void Skillrequiredresource::CopyFrom(const Skillrequiredresource& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:Skillrequiredresource)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void Skillrequiredresource::InternalSwap(Skillrequiredresource* PROTOBUF_RESTRICT PROTOBUF_NONNULL other) {
  using ::std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(Skillrequiredresource, _impl_.requiredresource_value_)
      + sizeof(Skillrequiredresource::_impl_.requiredresource_value_)
      - PROTOBUF_FIELD_OFFSET(Skillrequiredresource, _impl_.requiredresource_type_)>(
          reinterpret_cast<char*>(&_impl_.requiredresource_type_),
          reinterpret_cast<char*>(&other->_impl_.requiredresource_type_));
}

::google::protobuf::Metadata Skillrequiredresource::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class Skillrequestresource::_Internal {
 public:
  using HasBits =
      decltype(::std::declval<Skillrequestresource>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
      8 * PROTOBUF_FIELD_OFFSET(Skillrequestresource, _impl_._has_bits_);
};

Skillrequestresource::Skillrequestresource(::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, Skillrequestresource_class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:Skillrequestresource)
}
Skillrequestresource::Skillrequestresource(
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const Skillrequestresource& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, Skillrequestresource_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(from._impl_) {
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
}
PROTOBUF_NDEBUG_INLINE Skillrequestresource::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
      : _cached_size_{0} {}

inline void Skillrequestresource::SharedCtor(::_pb::Arena* PROTOBUF_NULLABLE arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, requestresource_id_),
           0,
           offsetof(Impl_, requestresource_cost_) -
               offsetof(Impl_, requestresource_id_) +
               sizeof(Impl_::requestresource_cost_));
}
Skillrequestresource::~Skillrequestresource() {
  // @@protoc_insertion_point(destructor:Skillrequestresource)
  SharedDtor(*this);
}
inline void Skillrequestresource::SharedDtor(MessageLite& self) {
  Skillrequestresource& this_ = static_cast<Skillrequestresource&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  this_._impl_.~Impl_();
}

inline void* PROTOBUF_NONNULL Skillrequestresource::PlacementNew_(
    const void* PROTOBUF_NONNULL, void* PROTOBUF_NONNULL mem,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena) {
  return ::new (mem) Skillrequestresource(arena);
}
constexpr auto Skillrequestresource::InternalNewImpl_() {
  return ::google::protobuf::internal::MessageCreator::ZeroInit(sizeof(Skillrequestresource),
                                            alignof(Skillrequestresource));
}
constexpr auto Skillrequestresource::InternalGenerateClassData_() {
  return ::google::protobuf::internal::ClassDataFull{
      ::google::protobuf::internal::ClassData{
          &_Skillrequestresource_default_instance_._instance,
          &_table_.header,
          nullptr,  // OnDemandRegisterArenaDtor
          nullptr,  // IsInitialized
          &Skillrequestresource::MergeImpl,
          ::google::protobuf::Message::GetNewImpl<Skillrequestresource>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
          &Skillrequestresource::SharedDtor,
          ::google::protobuf::Message::GetClearImpl<Skillrequestresource>(), &Skillrequestresource::ByteSizeLong,
              &Skillrequestresource::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
          PROTOBUF_FIELD_OFFSET(Skillrequestresource, _impl_._cached_size_),
          false,
      },
      &Skillrequestresource::kDescriptorMethods,
      &descriptor_table_skill_5ftable_2eproto,
      nullptr,  // tracker
  };
}

PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 const
    ::google::protobuf::internal::ClassDataFull Skillrequestresource_class_data_ =
        Skillrequestresource::InternalGenerateClassData_();

PROTOBUF_ATTRIBUTE_WEAK const ::google::protobuf::internal::ClassData* PROTOBUF_NONNULL
Skillrequestresource::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&Skillrequestresource_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(Skillrequestresource_class_data_.tc_table);
  return Skillrequestresource_class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<1, 2, 0, 0, 2>
Skillrequestresource::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(Skillrequestresource, _impl_._has_bits_),
    0, // no _extensions_
    2, 8,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967292,  // skipmap
    offsetof(decltype(_table_), field_entries),
    2,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    Skillrequestresource_class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::Skillrequestresource>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // uint32 requestresource_cost = 2;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(Skillrequestresource, _impl_.requestresource_cost_), 1>(),
     {16, 1, 0, PROTOBUF_FIELD_OFFSET(Skillrequestresource, _impl_.requestresource_cost_)}},
    // uint32 requestresource_id = 1;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(Skillrequestresource, _impl_.requestresource_id_), 0>(),
     {8, 0, 0, PROTOBUF_FIELD_OFFSET(Skillrequestresource, _impl_.requestresource_id_)}},
  }}, {{
    65535, 65535
  }}, {{
    // uint32 requestresource_id = 1;
    {PROTOBUF_FIELD_OFFSET(Skillrequestresource, _impl_.requestresource_id_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kUInt32)},
    // uint32 requestresource_cost = 2;
    {PROTOBUF_FIELD_OFFSET(Skillrequestresource, _impl_.requestresource_cost_), _Internal::kHasBitsOffset + 1, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kUInt32)},
  }},
  // no aux_entries
  {{
  }},
};
PROTOBUF_NOINLINE void Skillrequestresource::Clear() {
// @@protoc_insertion_point(message_clear_start:Skillrequestresource)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if ((cached_has_bits & 0x00000003u) != 0) {
    ::memset(&_impl_.requestresource_id_, 0, static_cast<::size_t>(
        reinterpret_cast<char*>(&_impl_.requestresource_cost_) -
        reinterpret_cast<char*>(&_impl_.requestresource_id_)) + sizeof(_impl_.requestresource_cost_));
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::uint8_t* PROTOBUF_NONNULL Skillrequestresource::_InternalSerialize(
    const ::google::protobuf::MessageLite& base, ::uint8_t* PROTOBUF_NONNULL target,
    ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) {
  const Skillrequestresource& this_ = static_cast<const Skillrequestresource&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::uint8_t* PROTOBUF_NONNULL Skillrequestresource::_InternalSerialize(
    ::uint8_t* PROTOBUF_NONNULL target,
    ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const {
  const Skillrequestresource& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
  // @@protoc_insertion_point(serialize_to_array_start:Skillrequestresource)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  // uint32 requestresource_id = 1;
  if ((this_._impl_._has_bits_[0] & 0x00000001u) != 0) {
    if (this_._internal_requestresource_id() != 0) {
      target = stream->EnsureSpace(target);
      target = ::_pbi::WireFormatLite::WriteUInt32ToArray(
          1, this_._internal_requestresource_id(), target);
    }
  }

  // uint32 requestresource_cost = 2;
  if ((this_._impl_._has_bits_[0] & 0x00000002u) != 0) {
    if (this_._internal_requestresource_cost() != 0) {
      target = stream->EnsureSpace(target);
      target = ::_pbi::WireFormatLite::WriteUInt32ToArray(
          2, this_._internal_requestresource_cost(), target);
    }
  }

  if (ABSL_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:Skillrequestresource)
  return target;
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::size_t Skillrequestresource::ByteSizeLong(const MessageLite& base) {
  const Skillrequestresource& this_ = static_cast<const Skillrequestresource&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::size_t Skillrequestresource::ByteSizeLong() const {
  const Skillrequestresource& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
  // @@protoc_insertion_point(message_byte_size_start:Skillrequestresource)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void)cached_has_bits;

  ::_pbi::Prefetch5LinesFrom7Lines(&this_);
  cached_has_bits = this_._impl_._has_bits_[0];
  if ((cached_has_bits & 0x00000003u) != 0) {
    // uint32 requestresource_id = 1;
    if ((cached_has_bits & 0x00000001u) != 0) {
      if (this_._internal_requestresource_id() != 0) {
        total_size += ::_pbi::WireFormatLite::UInt32SizePlusOne(
            this_._internal_requestresource_id());
      }
    }
    // uint32 requestresource_cost = 2;
    if ((cached_has_bits & 0x00000002u) != 0) {
      if (this_._internal_requestresource_cost() != 0) {
        total_size += ::_pbi::WireFormatLite::UInt32SizePlusOne(
            this_._internal_requestresource_cost());
      }
    }
  }
  return this_.MaybeComputeUnknownFieldsSize(total_size,
                                             &this_._impl_._cached_size_);
}

void Skillrequestresource::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<Skillrequestresource*>(&to_msg);
  auto& from = static_cast<const Skillrequestresource&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:Skillrequestresource)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._impl_._has_bits_[0];
  if ((cached_has_bits & 0x00000003u) != 0) {
    if ((cached_has_bits & 0x00000001u) != 0) {
      if (from._internal_requestresource_id() != 0) {
        _this->_impl_.requestresource_id_ = from._impl_.requestresource_id_;
      }
    }
    if ((cached_has_bits & 0x00000002u) != 0) {
      if (from._internal_requestresource_cost() != 0) {
        _this->_impl_.requestresource_cost_ = from._impl_.requestresource_cost_;
      }
    }
  }
  _this->_impl_._has_bits_[0] |= cached_has_bits;
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void Skillrequestresource::CopyFrom(const Skillrequestresource& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:Skillrequestresource)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void Skillrequestresource::InternalSwap(Skillrequestresource* PROTOBUF_RESTRICT PROTOBUF_NONNULL other) {
  using ::std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(Skillrequestresource, _impl_.requestresource_cost_)
      + sizeof(Skillrequestresource::_impl_.requestresource_cost_)
      - PROTOBUF_FIELD_OFFSET(Skillrequestresource, _impl_.requestresource_id_)>(
          reinterpret_cast<char*>(&_impl_.requestresource_id_),
          reinterpret_cast<char*>(&other->_impl_.requestresource_id_));
}

::google::protobuf::Metadata Skillrequestresource::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class SkillTable::_Internal {
 public:
  using HasBits =
      decltype(::std::declval<SkillTable>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
      8 * PROTOBUF_FIELD_OFFSET(SkillTable, _impl_._has_bits_);
};

SkillTable::SkillTable(::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, SkillTable_class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:SkillTable)
}
PROTOBUF_NDEBUG_INLINE SkillTable::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const Impl_& from,
    const ::SkillTable& from_msg)
      : _has_bits_{from._has_bits_},
        _cached_size_{0},
        skill_type_{visibility, arena, from.skill_type_},
        _skill_type_cached_byte_size_{0},
        targeting_mode_{visibility, arena, from.targeting_mode_},
        _targeting_mode_cached_byte_size_{0},
        requireditem_{visibility, arena, from.requireditem_},
        requiredresource_{visibility, arena, from.requiredresource_},
        effect_{visibility, arena, from.effect_},
        _effect_cached_byte_size_{0},
        requestresource_{visibility, arena, from.requestresource_},
        damage_(arena, from.damage_) {}

SkillTable::SkillTable(
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena,
    const SkillTable& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, SkillTable_class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SkillTable* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);
  ::memcpy(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, id_),
           reinterpret_cast<const char *>(&from._impl_) +
               offsetof(Impl_, id_),
           offsetof(Impl_, cooldown_id_) -
               offsetof(Impl_, id_) +
               sizeof(Impl_::cooldown_id_));

  // @@protoc_insertion_point(copy_constructor:SkillTable)
}
PROTOBUF_NDEBUG_INLINE SkillTable::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
      : _cached_size_{0},
        skill_type_{visibility, arena},
        _skill_type_cached_byte_size_{0},
        targeting_mode_{visibility, arena},
        _targeting_mode_cached_byte_size_{0},
        requireditem_{visibility, arena},
        requiredresource_{visibility, arena},
        effect_{visibility, arena},
        _effect_cached_byte_size_{0},
        requestresource_{visibility, arena},
        damage_(arena) {}

inline void SkillTable::SharedCtor(::_pb::Arena* PROTOBUF_NULLABLE arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, id_),
           0,
           offsetof(Impl_, cooldown_id_) -
               offsetof(Impl_, id_) +
               sizeof(Impl_::cooldown_id_));
}
SkillTable::~SkillTable() {
  // @@protoc_insertion_point(destructor:SkillTable)
  SharedDtor(*this);
}
inline void SkillTable::SharedDtor(MessageLite& self) {
  SkillTable& this_ = static_cast<SkillTable&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  this_._impl_.damage_.Destroy();
  this_._impl_.~Impl_();
}

inline void* PROTOBUF_NONNULL SkillTable::PlacementNew_(
    const void* PROTOBUF_NONNULL, void* PROTOBUF_NONNULL mem,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena) {
  return ::new (mem) SkillTable(arena);
}
constexpr auto SkillTable::InternalNewImpl_() {
  constexpr auto arena_bits = ::google::protobuf::internal::EncodePlacementArenaOffsets({
      PROTOBUF_FIELD_OFFSET(SkillTable, _impl_.skill_type_) +
          decltype(SkillTable::_impl_.skill_type_)::
              InternalGetArenaOffset(
                  ::google::protobuf::Message::internal_visibility()),
      PROTOBUF_FIELD_OFFSET(SkillTable, _impl_.targeting_mode_) +
          decltype(SkillTable::_impl_.targeting_mode_)::
              InternalGetArenaOffset(
                  ::google::protobuf::Message::internal_visibility()),
      PROTOBUF_FIELD_OFFSET(SkillTable, _impl_.requireditem_) +
          decltype(SkillTable::_impl_.requireditem_)::
              InternalGetArenaOffset(
                  ::google::protobuf::Message::internal_visibility()),
      PROTOBUF_FIELD_OFFSET(SkillTable, _impl_.requiredresource_) +
          decltype(SkillTable::_impl_.requiredresource_)::
              InternalGetArenaOffset(
                  ::google::protobuf::Message::internal_visibility()),
      PROTOBUF_FIELD_OFFSET(SkillTable, _impl_.effect_) +
          decltype(SkillTable::_impl_.effect_)::
              InternalGetArenaOffset(
                  ::google::protobuf::Message::internal_visibility()),
      PROTOBUF_FIELD_OFFSET(SkillTable, _impl_.requestresource_) +
          decltype(SkillTable::_impl_.requestresource_)::
              InternalGetArenaOffset(
                  ::google::protobuf::Message::internal_visibility()),
  });
  if (arena_bits.has_value()) {
    return ::google::protobuf::internal::MessageCreator::CopyInit(
        sizeof(SkillTable), alignof(SkillTable), *arena_bits);
  } else {
    return ::google::protobuf::internal::MessageCreator(&SkillTable::PlacementNew_,
                                 sizeof(SkillTable),
                                 alignof(SkillTable));
  }
}
constexpr auto SkillTable::InternalGenerateClassData_() {
  return ::google::protobuf::internal::ClassDataFull{
      ::google::protobuf::internal::ClassData{
          &_SkillTable_default_instance_._instance,
          &_table_.header,
          nullptr,  // OnDemandRegisterArenaDtor
          nullptr,  // IsInitialized
          &SkillTable::MergeImpl,
          ::google::protobuf::Message::GetNewImpl<SkillTable>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
          &SkillTable::SharedDtor,
          ::google::protobuf::Message::GetClearImpl<SkillTable>(), &SkillTable::ByteSizeLong,
              &SkillTable::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
          PROTOBUF_FIELD_OFFSET(SkillTable, _impl_._cached_size_),
          false,
      },
      &SkillTable::kDescriptorMethods,
      &descriptor_table_skill_5ftable_2eproto,
      nullptr,  // tracker
  };
}

PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 const
    ::google::protobuf::internal::ClassDataFull SkillTable_class_data_ =
        SkillTable::InternalGenerateClassData_();

PROTOBUF_ATTRIBUTE_WEAK const ::google::protobuf::internal::ClassData* PROTOBUF_NONNULL
SkillTable::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&SkillTable_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(SkillTable_class_data_.tc_table);
  return SkillTable_class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<5, 23, 3, 41, 2>
SkillTable::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(SkillTable, _impl_._has_bits_),
    0, // no _extensions_
    23, 248,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4286578688,  // skipmap
    offsetof(decltype(_table_), field_entries),
    23,  // num_field_entries
    3,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    SkillTable_class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::SkillTable>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
    // uint32 id = 1;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(SkillTable, _impl_.id_), 1>(),
     {8, 1, 0, PROTOBUF_FIELD_OFFSET(SkillTable, _impl_.id_)}},
    // repeated uint32 skill_type = 2;
    {::_pbi::TcParser::FastV32P1,
     {18, 63, 0, PROTOBUF_FIELD_OFFSET(SkillTable, _impl_.skill_type_)}},
    // repeated uint32 targeting_mode = 3;
    {::_pbi::TcParser::FastV32P1,
     {26, 63, 0, PROTOBUF_FIELD_OFFSET(SkillTable, _impl_.targeting_mode_)}},
    // uint32 rquest_target = 4;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(SkillTable, _impl_.rquest_target_), 2>(),
     {32, 2, 0, PROTOBUF_FIELD_OFFSET(SkillTable, _impl_.rquest_target_)}},
    // uint32 target_status = 5;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(SkillTable, _impl_.target_status_), 4>(),
     {40, 4, 0, PROTOBUF_FIELD_OFFSET(SkillTable, _impl_.target_status_)}},
    // double castpoint = 6;
    {::_pbi::TcParser::FastF64S1,
     {49, 3, 0, PROTOBUF_FIELD_OFFSET(SkillTable, _impl_.castpoint_)}},
    // double recoverytime = 7;
    {::_pbi::TcParser::FastF64S1,
     {57, 6, 0, PROTOBUF_FIELD_OFFSET(SkillTable, _impl_.recoverytime_)}},
    // uint32 immediately = 8;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(SkillTable, _impl_.immediately_), 5>(),
     {64, 5, 0, PROTOBUF_FIELD_OFFSET(SkillTable, _impl_.immediately_)}},
    // repeated .Skillrequireditem requireditem = 9;
    {::_pbi::TcParser::FastMtR1,
     {74, 63, 0, PROTOBUF_FIELD_OFFSET(SkillTable, _impl_.requireditem_)}},
    // repeated .Skillrequiredresource requiredresource = 10;
    {::_pbi::TcParser::FastMtR1,
     {82, 63, 1, PROTOBUF_FIELD_OFFSET(SkillTable, _impl_.requiredresource_)}},
    // repeated uint32 effect = 11;
    {::_pbi::TcParser::FastV32P1,
     {90, 63, 0, PROTOBUF_FIELD_OFFSET(SkillTable, _impl_.effect_)}},
    // uint32 channelthink = 12;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(SkillTable, _impl_.channelthink_), 7>(),
     {96, 7, 0, PROTOBUF_FIELD_OFFSET(SkillTable, _impl_.channelthink_)}},
    // uint32 channelfinish = 13;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(SkillTable, _impl_.channelfinish_), 8>(),
     {104, 8, 0, PROTOBUF_FIELD_OFFSET(SkillTable, _impl_.channelfinish_)}},
    // uint32 thinkinterval = 14;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(SkillTable, _impl_.thinkinterval_), 9>(),
     {112, 9, 0, PROTOBUF_FIELD_OFFSET(SkillTable, _impl_.thinkinterval_)}},
    // uint32 channeltime = 15;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(SkillTable, _impl_.channeltime_), 10>(),
     {120, 10, 0, PROTOBUF_FIELD_OFFSET(SkillTable, _impl_.channeltime_)}},
    // repeated .Skillrequestresource requestresource = 16;
    {::_pbi::TcParser::FastMtR2,
     {386, 63, 2, PROTOBUF_FIELD_OFFSET(SkillTable, _impl_.requestresource_)}},
    // double range = 17;
    {::_pbi::TcParser::FastF64S2,
     {393, 11, 0, PROTOBUF_FIELD_OFFSET(SkillTable, _impl_.range_)}},
    // double max_range = 18;
    {::_pbi::TcParser::FastF64S2,
     {401, 12, 0, PROTOBUF_FIELD_OFFSET(SkillTable, _impl_.max_range_)}},
    // double min_range = 19;
    {::_pbi::TcParser::FastF64S2,
     {409, 13, 0, PROTOBUF_FIELD_OFFSET(SkillTable, _impl_.min_range_)}},
    // uint32 self_status = 20;
    {::_pbi::TcParser::FastV32S2,
     {416, 14, 0, PROTOBUF_FIELD_OFFSET(SkillTable, _impl_.self_status_)}},
    // uint32 required_status = 21;
    {::_pbi::TcParser::FastV32S2,
     {424, 15, 0, PROTOBUF_FIELD_OFFSET(SkillTable, _impl_.required_status_)}},
    // uint32 cooldown_id = 22;
    {::_pbi::TcParser::FastV32S2,
     {432, 16, 0, PROTOBUF_FIELD_OFFSET(SkillTable, _impl_.cooldown_id_)}},
    // string damage = 23;
    {::_pbi::TcParser::FastUS2,
     {442, 0, 0, PROTOBUF_FIELD_OFFSET(SkillTable, _impl_.damage_)}},
    {::_pbi::TcParser::MiniParse, {}},
    {::_pbi::TcParser::MiniParse, {}},
    {::_pbi::TcParser::MiniParse, {}},
    {::_pbi::TcParser::MiniParse, {}},
    {::_pbi::TcParser::MiniParse, {}},
    {::_pbi::TcParser::MiniParse, {}},
    {::_pbi::TcParser::MiniParse, {}},
    {::_pbi::TcParser::MiniParse, {}},
  }}, {{
    65535, 65535
  }}, {{
    // uint32 id = 1;
    {PROTOBUF_FIELD_OFFSET(SkillTable, _impl_.id_), _Internal::kHasBitsOffset + 1, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kUInt32)},
    // repeated uint32 skill_type = 2;
    {PROTOBUF_FIELD_OFFSET(SkillTable, _impl_.skill_type_), -1, 0,
    (0 | ::_fl::kFcRepeated | ::_fl::kPackedUInt32)},
    // repeated uint32 targeting_mode = 3;
    {PROTOBUF_FIELD_OFFSET(SkillTable, _impl_.targeting_mode_), -1, 0,
    (0 | ::_fl::kFcRepeated | ::_fl::kPackedUInt32)},
    // uint32 rquest_target = 4;
    {PROTOBUF_FIELD_OFFSET(SkillTable, _impl_.rquest_target_), _Internal::kHasBitsOffset + 2, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kUInt32)},
    // uint32 target_status = 5;
    {PROTOBUF_FIELD_OFFSET(SkillTable, _impl_.target_status_), _Internal::kHasBitsOffset + 4, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kUInt32)},
    // double castpoint = 6;
    {PROTOBUF_FIELD_OFFSET(SkillTable, _impl_.castpoint_), _Internal::kHasBitsOffset + 3, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kDouble)},
    // double recoverytime = 7;
    {PROTOBUF_FIELD_OFFSET(SkillTable, _impl_.recoverytime_), _Internal::kHasBitsOffset + 6, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kDouble)},
    // uint32 immediately = 8;
    {PROTOBUF_FIELD_OFFSET(SkillTable, _impl_.immediately_), _Internal::kHasBitsOffset + 5, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kUInt32)},
    // repeated .Skillrequireditem requireditem = 9;
    {PROTOBUF_FIELD_OFFSET(SkillTable, _impl_.requireditem_), -1, 0,
    (0 | ::_fl::kFcRepeated | ::_fl::kMessage | ::_fl::kTvTable)},
    // repeated .Skillrequiredresource requiredresource = 10;
    {PROTOBUF_FIELD_OFFSET(SkillTable, _impl_.requiredresource_), -1, 1,
    (0 | ::_fl::kFcRepeated | ::_fl::kMessage | ::_fl::kTvTable)},
    // repeated uint32 effect = 11;
    {PROTOBUF_FIELD_OFFSET(SkillTable, _impl_.effect_), -1, 0,
    (0 | ::_fl::kFcRepeated | ::_fl::kPackedUInt32)},
    // uint32 channelthink = 12;
    {PROTOBUF_FIELD_OFFSET(SkillTable, _impl_.channelthink_), _Internal::kHasBitsOffset + 7, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kUInt32)},
    // uint32 channelfinish = 13;
    {PROTOBUF_FIELD_OFFSET(SkillTable, _impl_.channelfinish_), _Internal::kHasBitsOffset + 8, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kUInt32)},
    // uint32 thinkinterval = 14;
    {PROTOBUF_FIELD_OFFSET(SkillTable, _impl_.thinkinterval_), _Internal::kHasBitsOffset + 9, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kUInt32)},
    // uint32 channeltime = 15;
    {PROTOBUF_FIELD_OFFSET(SkillTable, _impl_.channeltime_), _Internal::kHasBitsOffset + 10, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kUInt32)},
    // repeated .Skillrequestresource requestresource = 16;
    {PROTOBUF_FIELD_OFFSET(SkillTable, _impl_.requestresource_), -1, 2,
    (0 | ::_fl::kFcRepeated | ::_fl::kMessage | ::_fl::kTvTable)},
    // double range = 17;
    {PROTOBUF_FIELD_OFFSET(SkillTable, _impl_.range_), _Internal::kHasBitsOffset + 11, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kDouble)},
    // double max_range = 18;
    {PROTOBUF_FIELD_OFFSET(SkillTable, _impl_.max_range_), _Internal::kHasBitsOffset + 12, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kDouble)},
    // double min_range = 19;
    {PROTOBUF_FIELD_OFFSET(SkillTable, _impl_.min_range_), _Internal::kHasBitsOffset + 13, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kDouble)},
    // uint32 self_status = 20;
    {PROTOBUF_FIELD_OFFSET(SkillTable, _impl_.self_status_), _Internal::kHasBitsOffset + 14, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kUInt32)},
    // uint32 required_status = 21;
    {PROTOBUF_FIELD_OFFSET(SkillTable, _impl_.required_status_), _Internal::kHasBitsOffset + 15, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kUInt32)},
    // uint32 cooldown_id = 22;
    {PROTOBUF_FIELD_OFFSET(SkillTable, _impl_.cooldown_id_), _Internal::kHasBitsOffset + 16, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kUInt32)},
    // string damage = 23;
    {PROTOBUF_FIELD_OFFSET(SkillTable, _impl_.damage_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kUtf8String | ::_fl::kRepAString)},
  }},
  {{
      {::_pbi::TcParser::GetTable<::Skillrequireditem>()},
      {::_pbi::TcParser::GetTable<::Skillrequiredresource>()},
      {::_pbi::TcParser::GetTable<::Skillrequestresource>()},
  }},
  {{
    "\12\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\6"
    "SkillTable"
    "damage"
  }},
};
PROTOBUF_NOINLINE void SkillTable::Clear() {
// @@protoc_insertion_point(message_clear_start:SkillTable)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.skill_type_.Clear();
  _impl_.targeting_mode_.Clear();
  _impl_.requireditem_.Clear();
  _impl_.requiredresource_.Clear();
  _impl_.effect_.Clear();
  _impl_.requestresource_.Clear();
  cached_has_bits = _impl_._has_bits_[0];
  if ((cached_has_bits & 0x00000001u) != 0) {
    _impl_.damage_.ClearNonDefaultToEmpty();
  }
  if ((cached_has_bits & 0x000000feu) != 0) {
    ::memset(&_impl_.id_, 0, static_cast<::size_t>(
        reinterpret_cast<char*>(&_impl_.channelthink_) -
        reinterpret_cast<char*>(&_impl_.id_)) + sizeof(_impl_.channelthink_));
  }
  if ((cached_has_bits & 0x0000ff00u) != 0) {
    ::memset(&_impl_.channelfinish_, 0, static_cast<::size_t>(
        reinterpret_cast<char*>(&_impl_.required_status_) -
        reinterpret_cast<char*>(&_impl_.channelfinish_)) + sizeof(_impl_.required_status_));
  }
  _impl_.cooldown_id_ = 0u;
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::uint8_t* PROTOBUF_NONNULL SkillTable::_InternalSerialize(
    const ::google::protobuf::MessageLite& base, ::uint8_t* PROTOBUF_NONNULL target,
    ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) {
  const SkillTable& this_ = static_cast<const SkillTable&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::uint8_t* PROTOBUF_NONNULL SkillTable::_InternalSerialize(
    ::uint8_t* PROTOBUF_NONNULL target,
    ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const {
  const SkillTable& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
  // @@protoc_insertion_point(serialize_to_array_start:SkillTable)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  // uint32 id = 1;
  if ((this_._impl_._has_bits_[0] & 0x00000002u) != 0) {
    if (this_._internal_id() != 0) {
      target = stream->EnsureSpace(target);
      target = ::_pbi::WireFormatLite::WriteUInt32ToArray(
          1, this_._internal_id(), target);
    }
  }

  // repeated uint32 skill_type = 2;
  {
    int byte_size = this_._impl_._skill_type_cached_byte_size_.Get();
    if (byte_size > 0) {
      target = stream->WriteUInt32Packed(
          2, this_._internal_skill_type(), byte_size, target);
    }
  }

  // repeated uint32 targeting_mode = 3;
  {
    int byte_size = this_._impl_._targeting_mode_cached_byte_size_.Get();
    if (byte_size > 0) {
      target = stream->WriteUInt32Packed(
          3, this_._internal_targeting_mode(), byte_size, target);
    }
  }

  // uint32 rquest_target = 4;
  if ((this_._impl_._has_bits_[0] & 0x00000004u) != 0) {
    if (this_._internal_rquest_target() != 0) {
      target = stream->EnsureSpace(target);
      target = ::_pbi::WireFormatLite::WriteUInt32ToArray(
          4, this_._internal_rquest_target(), target);
    }
  }

  // uint32 target_status = 5;
  if ((this_._impl_._has_bits_[0] & 0x00000010u) != 0) {
    if (this_._internal_target_status() != 0) {
      target = stream->EnsureSpace(target);
      target = ::_pbi::WireFormatLite::WriteUInt32ToArray(
          5, this_._internal_target_status(), target);
    }
  }

  // double castpoint = 6;
  if ((this_._impl_._has_bits_[0] & 0x00000008u) != 0) {
    if (::absl::bit_cast<::uint64_t>(this_._internal_castpoint()) != 0) {
      target = stream->EnsureSpace(target);
      target = ::_pbi::WireFormatLite::WriteDoubleToArray(
          6, this_._internal_castpoint(), target);
    }
  }

  // double recoverytime = 7;
  if ((this_._impl_._has_bits_[0] & 0x00000040u) != 0) {
    if (::absl::bit_cast<::uint64_t>(this_._internal_recoverytime()) != 0) {
      target = stream->EnsureSpace(target);
      target = ::_pbi::WireFormatLite::WriteDoubleToArray(
          7, this_._internal_recoverytime(), target);
    }
  }

  // uint32 immediately = 8;
  if ((this_._impl_._has_bits_[0] & 0x00000020u) != 0) {
    if (this_._internal_immediately() != 0) {
      target = stream->EnsureSpace(target);
      target = ::_pbi::WireFormatLite::WriteUInt32ToArray(
          8, this_._internal_immediately(), target);
    }
  }

  // repeated .Skillrequireditem requireditem = 9;
  for (unsigned i = 0, n = static_cast<unsigned>(
                           this_._internal_requireditem_size());
       i < n; i++) {
    const auto& repfield = this_._internal_requireditem().Get(i);
    target =
        ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
            9, repfield, repfield.GetCachedSize(),
            target, stream);
  }

  // repeated .Skillrequiredresource requiredresource = 10;
  for (unsigned i = 0, n = static_cast<unsigned>(
                           this_._internal_requiredresource_size());
       i < n; i++) {
    const auto& repfield = this_._internal_requiredresource().Get(i);
    target =
        ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
            10, repfield, repfield.GetCachedSize(),
            target, stream);
  }

  // repeated uint32 effect = 11;
  {
    int byte_size = this_._impl_._effect_cached_byte_size_.Get();
    if (byte_size > 0) {
      target = stream->WriteUInt32Packed(
          11, this_._internal_effect(), byte_size, target);
    }
  }

  // uint32 channelthink = 12;
  if ((this_._impl_._has_bits_[0] & 0x00000080u) != 0) {
    if (this_._internal_channelthink() != 0) {
      target = stream->EnsureSpace(target);
      target = ::_pbi::WireFormatLite::WriteUInt32ToArray(
          12, this_._internal_channelthink(), target);
    }
  }

  // uint32 channelfinish = 13;
  if ((this_._impl_._has_bits_[0] & 0x00000100u) != 0) {
    if (this_._internal_channelfinish() != 0) {
      target = stream->EnsureSpace(target);
      target = ::_pbi::WireFormatLite::WriteUInt32ToArray(
          13, this_._internal_channelfinish(), target);
    }
  }

  // uint32 thinkinterval = 14;
  if ((this_._impl_._has_bits_[0] & 0x00000200u) != 0) {
    if (this_._internal_thinkinterval() != 0) {
      target = stream->EnsureSpace(target);
      target = ::_pbi::WireFormatLite::WriteUInt32ToArray(
          14, this_._internal_thinkinterval(), target);
    }
  }

  // uint32 channeltime = 15;
  if ((this_._impl_._has_bits_[0] & 0x00000400u) != 0) {
    if (this_._internal_channeltime() != 0) {
      target = stream->EnsureSpace(target);
      target = ::_pbi::WireFormatLite::WriteUInt32ToArray(
          15, this_._internal_channeltime(), target);
    }
  }

  // repeated .Skillrequestresource requestresource = 16;
  for (unsigned i = 0, n = static_cast<unsigned>(
                           this_._internal_requestresource_size());
       i < n; i++) {
    const auto& repfield = this_._internal_requestresource().Get(i);
    target =
        ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
            16, repfield, repfield.GetCachedSize(),
            target, stream);
  }

  // double range = 17;
  if ((this_._impl_._has_bits_[0] & 0x00000800u) != 0) {
    if (::absl::bit_cast<::uint64_t>(this_._internal_range()) != 0) {
      target = stream->EnsureSpace(target);
      target = ::_pbi::WireFormatLite::WriteDoubleToArray(
          17, this_._internal_range(), target);
    }
  }

  // double max_range = 18;
  if ((this_._impl_._has_bits_[0] & 0x00001000u) != 0) {
    if (::absl::bit_cast<::uint64_t>(this_._internal_max_range()) != 0) {
      target = stream->EnsureSpace(target);
      target = ::_pbi::WireFormatLite::WriteDoubleToArray(
          18, this_._internal_max_range(), target);
    }
  }

  // double min_range = 19;
  if ((this_._impl_._has_bits_[0] & 0x00002000u) != 0) {
    if (::absl::bit_cast<::uint64_t>(this_._internal_min_range()) != 0) {
      target = stream->EnsureSpace(target);
      target = ::_pbi::WireFormatLite::WriteDoubleToArray(
          19, this_._internal_min_range(), target);
    }
  }

  // uint32 self_status = 20;
  if ((this_._impl_._has_bits_[0] & 0x00004000u) != 0) {
    if (this_._internal_self_status() != 0) {
      target = stream->EnsureSpace(target);
      target = ::_pbi::WireFormatLite::WriteUInt32ToArray(
          20, this_._internal_self_status(), target);
    }
  }

  // uint32 required_status = 21;
  if ((this_._impl_._has_bits_[0] & 0x00008000u) != 0) {
    if (this_._internal_required_status() != 0) {
      target = stream->EnsureSpace(target);
      target = ::_pbi::WireFormatLite::WriteUInt32ToArray(
          21, this_._internal_required_status(), target);
    }
  }

  // uint32 cooldown_id = 22;
  if ((this_._impl_._has_bits_[0] & 0x00010000u) != 0) {
    if (this_._internal_cooldown_id() != 0) {
      target = stream->EnsureSpace(target);
      target = ::_pbi::WireFormatLite::WriteUInt32ToArray(
          22, this_._internal_cooldown_id(), target);
    }
  }

  // string damage = 23;
  if ((this_._impl_._has_bits_[0] & 0x00000001u) != 0) {
    if (!this_._internal_damage().empty()) {
      const ::std::string& _s = this_._internal_damage();
      ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
          _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "SkillTable.damage");
      target = stream->WriteStringMaybeAliased(23, _s, target);
    }
  }

  if (ABSL_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:SkillTable)
  return target;
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::size_t SkillTable::ByteSizeLong(const MessageLite& base) {
  const SkillTable& this_ = static_cast<const SkillTable&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::size_t SkillTable::ByteSizeLong() const {
  const SkillTable& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
  // @@protoc_insertion_point(message_byte_size_start:SkillTable)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void)cached_has_bits;

  ::_pbi::Prefetch5LinesFrom7Lines(&this_);
   {
    // repeated uint32 skill_type = 2;
    {
      total_size +=
          ::_pbi::WireFormatLite::UInt32SizeWithPackedTagSize(
              this_._internal_skill_type(), 1,
              this_._impl_._skill_type_cached_byte_size_);
    }
    // repeated uint32 targeting_mode = 3;
    {
      total_size +=
          ::_pbi::WireFormatLite::UInt32SizeWithPackedTagSize(
              this_._internal_targeting_mode(), 1,
              this_._impl_._targeting_mode_cached_byte_size_);
    }
    // repeated .Skillrequireditem requireditem = 9;
    {
      total_size += 1UL * this_._internal_requireditem_size();
      for (const auto& msg : this_._internal_requireditem()) {
        total_size += ::google::protobuf::internal::WireFormatLite::MessageSize(msg);
      }
    }
    // repeated .Skillrequiredresource requiredresource = 10;
    {
      total_size += 1UL * this_._internal_requiredresource_size();
      for (const auto& msg : this_._internal_requiredresource()) {
        total_size += ::google::protobuf::internal::WireFormatLite::MessageSize(msg);
      }
    }
    // repeated uint32 effect = 11;
    {
      total_size +=
          ::_pbi::WireFormatLite::UInt32SizeWithPackedTagSize(
              this_._internal_effect(), 1,
              this_._impl_._effect_cached_byte_size_);
    }
    // repeated .Skillrequestresource requestresource = 16;
    {
      total_size += 2UL * this_._internal_requestresource_size();
      for (const auto& msg : this_._internal_requestresource()) {
        total_size += ::google::protobuf::internal::WireFormatLite::MessageSize(msg);
      }
    }
  }
  cached_has_bits = this_._impl_._has_bits_[0];
  if ((cached_has_bits & 0x000000ffu) != 0) {
    // string damage = 23;
    if ((cached_has_bits & 0x00000001u) != 0) {
      if (!this_._internal_damage().empty()) {
        total_size += 2 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                        this_._internal_damage());
      }
    }
    // uint32 id = 1;
    if ((cached_has_bits & 0x00000002u) != 0) {
      if (this_._internal_id() != 0) {
        total_size += ::_pbi::WireFormatLite::UInt32SizePlusOne(
            this_._internal_id());
      }
    }
    // uint32 rquest_target = 4;
    if ((cached_has_bits & 0x00000004u) != 0) {
      if (this_._internal_rquest_target() != 0) {
        total_size += ::_pbi::WireFormatLite::UInt32SizePlusOne(
            this_._internal_rquest_target());
      }
    }
    // double castpoint = 6;
    if ((cached_has_bits & 0x00000008u) != 0) {
      if (::absl::bit_cast<::uint64_t>(this_._internal_castpoint()) != 0) {
        total_size += 9;
      }
    }
    // uint32 target_status = 5;
    if ((cached_has_bits & 0x00000010u) != 0) {
      if (this_._internal_target_status() != 0) {
        total_size += ::_pbi::WireFormatLite::UInt32SizePlusOne(
            this_._internal_target_status());
      }
    }
    // uint32 immediately = 8;
    if ((cached_has_bits & 0x00000020u) != 0) {
      if (this_._internal_immediately() != 0) {
        total_size += ::_pbi::WireFormatLite::UInt32SizePlusOne(
            this_._internal_immediately());
      }
    }
    // double recoverytime = 7;
    if ((cached_has_bits & 0x00000040u) != 0) {
      if (::absl::bit_cast<::uint64_t>(this_._internal_recoverytime()) != 0) {
        total_size += 9;
      }
    }
    // uint32 channelthink = 12;
    if ((cached_has_bits & 0x00000080u) != 0) {
      if (this_._internal_channelthink() != 0) {
        total_size += ::_pbi::WireFormatLite::UInt32SizePlusOne(
            this_._internal_channelthink());
      }
    }
  }
  if ((cached_has_bits & 0x0000ff00u) != 0) {
    // uint32 channelfinish = 13;
    if ((cached_has_bits & 0x00000100u) != 0) {
      if (this_._internal_channelfinish() != 0) {
        total_size += ::_pbi::WireFormatLite::UInt32SizePlusOne(
            this_._internal_channelfinish());
      }
    }
    // uint32 thinkinterval = 14;
    if ((cached_has_bits & 0x00000200u) != 0) {
      if (this_._internal_thinkinterval() != 0) {
        total_size += ::_pbi::WireFormatLite::UInt32SizePlusOne(
            this_._internal_thinkinterval());
      }
    }
    // uint32 channeltime = 15;
    if ((cached_has_bits & 0x00000400u) != 0) {
      if (this_._internal_channeltime() != 0) {
        total_size += ::_pbi::WireFormatLite::UInt32SizePlusOne(
            this_._internal_channeltime());
      }
    }
    // double range = 17;
    if ((cached_has_bits & 0x00000800u) != 0) {
      if (::absl::bit_cast<::uint64_t>(this_._internal_range()) != 0) {
        total_size += 10;
      }
    }
    // double max_range = 18;
    if ((cached_has_bits & 0x00001000u) != 0) {
      if (::absl::bit_cast<::uint64_t>(this_._internal_max_range()) != 0) {
        total_size += 10;
      }
    }
    // double min_range = 19;
    if ((cached_has_bits & 0x00002000u) != 0) {
      if (::absl::bit_cast<::uint64_t>(this_._internal_min_range()) != 0) {
        total_size += 10;
      }
    }
    // uint32 self_status = 20;
    if ((cached_has_bits & 0x00004000u) != 0) {
      if (this_._internal_self_status() != 0) {
        total_size += 2 + ::_pbi::WireFormatLite::UInt32Size(
                                        this_._internal_self_status());
      }
    }
    // uint32 required_status = 21;
    if ((cached_has_bits & 0x00008000u) != 0) {
      if (this_._internal_required_status() != 0) {
        total_size += 2 + ::_pbi::WireFormatLite::UInt32Size(
                                        this_._internal_required_status());
      }
    }
  }
   {
    // uint32 cooldown_id = 22;
    if ((cached_has_bits & 0x00010000u) != 0) {
      if (this_._internal_cooldown_id() != 0) {
        total_size += 2 + ::_pbi::WireFormatLite::UInt32Size(
                                        this_._internal_cooldown_id());
      }
    }
  }
  return this_.MaybeComputeUnknownFieldsSize(total_size,
                                             &this_._impl_._cached_size_);
}

void SkillTable::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<SkillTable*>(&to_msg);
  auto& from = static_cast<const SkillTable&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:SkillTable)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_internal_mutable_skill_type()->MergeFrom(from._internal_skill_type());
  _this->_internal_mutable_targeting_mode()->MergeFrom(from._internal_targeting_mode());
  _this->_internal_mutable_requireditem()->MergeFrom(
      from._internal_requireditem());
  _this->_internal_mutable_requiredresource()->MergeFrom(
      from._internal_requiredresource());
  _this->_internal_mutable_effect()->MergeFrom(from._internal_effect());
  _this->_internal_mutable_requestresource()->MergeFrom(
      from._internal_requestresource());
  cached_has_bits = from._impl_._has_bits_[0];
  if ((cached_has_bits & 0x000000ffu) != 0) {
    if ((cached_has_bits & 0x00000001u) != 0) {
      if (!from._internal_damage().empty()) {
        _this->_internal_set_damage(from._internal_damage());
      } else {
        if (_this->_impl_.damage_.IsDefault()) {
          _this->_internal_set_damage("");
        }
      }
    }
    if ((cached_has_bits & 0x00000002u) != 0) {
      if (from._internal_id() != 0) {
        _this->_impl_.id_ = from._impl_.id_;
      }
    }
    if ((cached_has_bits & 0x00000004u) != 0) {
      if (from._internal_rquest_target() != 0) {
        _this->_impl_.rquest_target_ = from._impl_.rquest_target_;
      }
    }
    if ((cached_has_bits & 0x00000008u) != 0) {
      if (::absl::bit_cast<::uint64_t>(from._internal_castpoint()) != 0) {
        _this->_impl_.castpoint_ = from._impl_.castpoint_;
      }
    }
    if ((cached_has_bits & 0x00000010u) != 0) {
      if (from._internal_target_status() != 0) {
        _this->_impl_.target_status_ = from._impl_.target_status_;
      }
    }
    if ((cached_has_bits & 0x00000020u) != 0) {
      if (from._internal_immediately() != 0) {
        _this->_impl_.immediately_ = from._impl_.immediately_;
      }
    }
    if ((cached_has_bits & 0x00000040u) != 0) {
      if (::absl::bit_cast<::uint64_t>(from._internal_recoverytime()) != 0) {
        _this->_impl_.recoverytime_ = from._impl_.recoverytime_;
      }
    }
    if ((cached_has_bits & 0x00000080u) != 0) {
      if (from._internal_channelthink() != 0) {
        _this->_impl_.channelthink_ = from._impl_.channelthink_;
      }
    }
  }
  if ((cached_has_bits & 0x0000ff00u) != 0) {
    if ((cached_has_bits & 0x00000100u) != 0) {
      if (from._internal_channelfinish() != 0) {
        _this->_impl_.channelfinish_ = from._impl_.channelfinish_;
      }
    }
    if ((cached_has_bits & 0x00000200u) != 0) {
      if (from._internal_thinkinterval() != 0) {
        _this->_impl_.thinkinterval_ = from._impl_.thinkinterval_;
      }
    }
    if ((cached_has_bits & 0x00000400u) != 0) {
      if (from._internal_channeltime() != 0) {
        _this->_impl_.channeltime_ = from._impl_.channeltime_;
      }
    }
    if ((cached_has_bits & 0x00000800u) != 0) {
      if (::absl::bit_cast<::uint64_t>(from._internal_range()) != 0) {
        _this->_impl_.range_ = from._impl_.range_;
      }
    }
    if ((cached_has_bits & 0x00001000u) != 0) {
      if (::absl::bit_cast<::uint64_t>(from._internal_max_range()) != 0) {
        _this->_impl_.max_range_ = from._impl_.max_range_;
      }
    }
    if ((cached_has_bits & 0x00002000u) != 0) {
      if (::absl::bit_cast<::uint64_t>(from._internal_min_range()) != 0) {
        _this->_impl_.min_range_ = from._impl_.min_range_;
      }
    }
    if ((cached_has_bits & 0x00004000u) != 0) {
      if (from._internal_self_status() != 0) {
        _this->_impl_.self_status_ = from._impl_.self_status_;
      }
    }
    if ((cached_has_bits & 0x00008000u) != 0) {
      if (from._internal_required_status() != 0) {
        _this->_impl_.required_status_ = from._impl_.required_status_;
      }
    }
  }
  if ((cached_has_bits & 0x00010000u) != 0) {
    if (from._internal_cooldown_id() != 0) {
      _this->_impl_.cooldown_id_ = from._impl_.cooldown_id_;
    }
  }
  _this->_impl_._has_bits_[0] |= cached_has_bits;
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void SkillTable::CopyFrom(const SkillTable& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:SkillTable)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void SkillTable::InternalSwap(SkillTable* PROTOBUF_RESTRICT PROTOBUF_NONNULL other) {
  using ::std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  _impl_.skill_type_.InternalSwap(&other->_impl_.skill_type_);
  _impl_.targeting_mode_.InternalSwap(&other->_impl_.targeting_mode_);
  _impl_.requireditem_.InternalSwap(&other->_impl_.requireditem_);
  _impl_.requiredresource_.InternalSwap(&other->_impl_.requiredresource_);
  _impl_.effect_.InternalSwap(&other->_impl_.effect_);
  _impl_.requestresource_.InternalSwap(&other->_impl_.requestresource_);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.damage_, &other->_impl_.damage_, arena);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(SkillTable, _impl_.cooldown_id_)
      + sizeof(SkillTable::_impl_.cooldown_id_)
      - PROTOBUF_FIELD_OFFSET(SkillTable, _impl_.id_)>(
          reinterpret_cast<char*>(&_impl_.id_),
          reinterpret_cast<char*>(&other->_impl_.id_));
}

::google::protobuf::Metadata SkillTable::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class SkillTabledData::_Internal {
 public:
};

SkillTabledData::SkillTabledData(::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, SkillTabledData_class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:SkillTabledData)
}
PROTOBUF_NDEBUG_INLINE SkillTabledData::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const Impl_& from,
    const ::SkillTabledData& from_msg)
      : data_{visibility, arena, from.data_},
        _cached_size_{0} {}

SkillTabledData::SkillTabledData(
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena,
    const SkillTabledData& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, SkillTabledData_class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SkillTabledData* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);

  // @@protoc_insertion_point(copy_constructor:SkillTabledData)
}
PROTOBUF_NDEBUG_INLINE SkillTabledData::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
      : data_{visibility, arena},
        _cached_size_{0} {}

inline void SkillTabledData::SharedCtor(::_pb::Arena* PROTOBUF_NULLABLE arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
}
SkillTabledData::~SkillTabledData() {
  // @@protoc_insertion_point(destructor:SkillTabledData)
  SharedDtor(*this);
}
inline void SkillTabledData::SharedDtor(MessageLite& self) {
  SkillTabledData& this_ = static_cast<SkillTabledData&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  this_._impl_.~Impl_();
}

inline void* PROTOBUF_NONNULL SkillTabledData::PlacementNew_(
    const void* PROTOBUF_NONNULL, void* PROTOBUF_NONNULL mem,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena) {
  return ::new (mem) SkillTabledData(arena);
}
constexpr auto SkillTabledData::InternalNewImpl_() {
  constexpr auto arena_bits = ::google::protobuf::internal::EncodePlacementArenaOffsets({
      PROTOBUF_FIELD_OFFSET(SkillTabledData, _impl_.data_) +
          decltype(SkillTabledData::_impl_.data_)::
              InternalGetArenaOffset(
                  ::google::protobuf::Message::internal_visibility()),
  });
  if (arena_bits.has_value()) {
    return ::google::protobuf::internal::MessageCreator::ZeroInit(
        sizeof(SkillTabledData), alignof(SkillTabledData), *arena_bits);
  } else {
    return ::google::protobuf::internal::MessageCreator(&SkillTabledData::PlacementNew_,
                                 sizeof(SkillTabledData),
                                 alignof(SkillTabledData));
  }
}
constexpr auto SkillTabledData::InternalGenerateClassData_() {
  return ::google::protobuf::internal::ClassDataFull{
      ::google::protobuf::internal::ClassData{
          &_SkillTabledData_default_instance_._instance,
          &_table_.header,
          nullptr,  // OnDemandRegisterArenaDtor
          nullptr,  // IsInitialized
          &SkillTabledData::MergeImpl,
          ::google::protobuf::Message::GetNewImpl<SkillTabledData>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
          &SkillTabledData::SharedDtor,
          ::google::protobuf::Message::GetClearImpl<SkillTabledData>(), &SkillTabledData::ByteSizeLong,
              &SkillTabledData::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
          PROTOBUF_FIELD_OFFSET(SkillTabledData, _impl_._cached_size_),
          false,
      },
      &SkillTabledData::kDescriptorMethods,
      &descriptor_table_skill_5ftable_2eproto,
      nullptr,  // tracker
  };
}

PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 const
    ::google::protobuf::internal::ClassDataFull SkillTabledData_class_data_ =
        SkillTabledData::InternalGenerateClassData_();

PROTOBUF_ATTRIBUTE_WEAK const ::google::protobuf::internal::ClassData* PROTOBUF_NONNULL
SkillTabledData::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&SkillTabledData_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(SkillTabledData_class_data_.tc_table);
  return SkillTabledData_class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<0, 1, 1, 0, 2>
SkillTabledData::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    1, 0,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967294,  // skipmap
    offsetof(decltype(_table_), field_entries),
    1,  // num_field_entries
    1,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    SkillTabledData_class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::SkillTabledData>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // repeated .SkillTable data = 1;
    {::_pbi::TcParser::FastMtR1,
     {10, 63, 0, PROTOBUF_FIELD_OFFSET(SkillTabledData, _impl_.data_)}},
  }}, {{
    65535, 65535
  }}, {{
    // repeated .SkillTable data = 1;
    {PROTOBUF_FIELD_OFFSET(SkillTabledData, _impl_.data_), 0, 0,
    (0 | ::_fl::kFcRepeated | ::_fl::kMessage | ::_fl::kTvTable)},
  }},
  {{
      {::_pbi::TcParser::GetTable<::SkillTable>()},
  }},
  {{
  }},
};
PROTOBUF_NOINLINE void SkillTabledData::Clear() {
// @@protoc_insertion_point(message_clear_start:SkillTabledData)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.data_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::uint8_t* PROTOBUF_NONNULL SkillTabledData::_InternalSerialize(
    const ::google::protobuf::MessageLite& base, ::uint8_t* PROTOBUF_NONNULL target,
    ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) {
  const SkillTabledData& this_ = static_cast<const SkillTabledData&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::uint8_t* PROTOBUF_NONNULL SkillTabledData::_InternalSerialize(
    ::uint8_t* PROTOBUF_NONNULL target,
    ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const {
  const SkillTabledData& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
  // @@protoc_insertion_point(serialize_to_array_start:SkillTabledData)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  // repeated .SkillTable data = 1;
  for (unsigned i = 0, n = static_cast<unsigned>(
                           this_._internal_data_size());
       i < n; i++) {
    const auto& repfield = this_._internal_data().Get(i);
    target =
        ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
            1, repfield, repfield.GetCachedSize(),
            target, stream);
  }

  if (ABSL_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:SkillTabledData)
  return target;
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::size_t SkillTabledData::ByteSizeLong(const MessageLite& base) {
  const SkillTabledData& this_ = static_cast<const SkillTabledData&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::size_t SkillTabledData::ByteSizeLong() const {
  const SkillTabledData& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
  // @@protoc_insertion_point(message_byte_size_start:SkillTabledData)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void)cached_has_bits;

  ::_pbi::Prefetch5LinesFrom7Lines(&this_);
   {
    // repeated .SkillTable data = 1;
    {
      total_size += 1UL * this_._internal_data_size();
      for (const auto& msg : this_._internal_data()) {
        total_size += ::google::protobuf::internal::WireFormatLite::MessageSize(msg);
      }
    }
  }
  return this_.MaybeComputeUnknownFieldsSize(total_size,
                                             &this_._impl_._cached_size_);
}

void SkillTabledData::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<SkillTabledData*>(&to_msg);
  auto& from = static_cast<const SkillTabledData&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:SkillTabledData)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_internal_mutable_data()->MergeFrom(
      from._internal_data());
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void SkillTabledData::CopyFrom(const SkillTabledData& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:SkillTabledData)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void SkillTabledData::InternalSwap(SkillTabledData* PROTOBUF_RESTRICT PROTOBUF_NONNULL other) {
  using ::std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  _impl_.data_.InternalSwap(&other->_impl_.data_);
}

::google::protobuf::Metadata SkillTabledData::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// @@protoc_insertion_point(namespace_scope)
namespace google {
namespace protobuf {
}  // namespace protobuf
}  // namespace google
// @@protoc_insertion_point(global_scope)
PROTOBUF_ATTRIBUTE_INIT_PRIORITY2 static ::std::false_type
    _static_init2_ [[maybe_unused]] =
        (::_pbi::AddDescriptors(&descriptor_table_skill_5ftable_2eproto),
         ::std::false_type{});
#include "google/protobuf/port_undef.inc"
