// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: mission_table.proto
// Protobuf C++ Version: 5.26.1

#ifndef GOOGLE_PROTOBUF_INCLUDED_mission_5ftable_2eproto_2epb_2eh
#define GOOGLE_PROTOBUF_INCLUDED_mission_5ftable_2eproto_2epb_2eh

#include <limits>
#include <string>
#include <type_traits>
#include <utility>

#include "google/protobuf/port_def.inc"
#if PROTOBUF_VERSION != 5026001
#error "Protobuf C++ gencode is built with an incompatible version of"
#error "Protobuf C++ headers/runtime. See"
#error "https://protobuf.dev/support/cross-version-runtime-guarantee/#cpp"
#endif
#include "google/protobuf/port_undef.inc"
#include "google/protobuf/io/coded_stream.h"
#include "google/protobuf/arena.h"
#include "google/protobuf/arenastring.h"
#include "google/protobuf/generated_message_tctable_decl.h"
#include "google/protobuf/generated_message_util.h"
#include "google/protobuf/metadata_lite.h"
#include "google/protobuf/generated_message_reflection.h"
#include "google/protobuf/message.h"
#include "google/protobuf/repeated_field.h"  // IWYU pragma: export
#include "google/protobuf/extension_set.h"  // IWYU pragma: export
#include "google/protobuf/unknown_field_set.h"
// @@protoc_insertion_point(includes)

// Must be included last.
#include "google/protobuf/port_def.inc"

#define PROTOBUF_INTERNAL_EXPORT_mission_5ftable_2eproto

namespace google {
namespace protobuf {
namespace internal {
class AnyMetadata;
}  // namespace internal
}  // namespace protobuf
}  // namespace google

// Internal implementation detail -- do not use these members.
struct TableStruct_mission_5ftable_2eproto {
  static const ::uint32_t offsets[];
};
extern const ::google::protobuf::internal::DescriptorTable
    descriptor_table_mission_5ftable_2eproto;
class MissionTable;
struct MissionTableDefaultTypeInternal;
extern MissionTableDefaultTypeInternal _MissionTable_default_instance_;
class MissionTabledData;
struct MissionTabledDataDefaultTypeInternal;
extern MissionTabledDataDefaultTypeInternal _MissionTabledData_default_instance_;
namespace google {
namespace protobuf {
}  // namespace protobuf
}  // namespace google


// ===================================================================


// -------------------------------------------------------------------

class MissionTable final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:MissionTable) */ {
 public:
  inline MissionTable() : MissionTable(nullptr) {}
  ~MissionTable() override;
  template <typename = void>
  explicit PROTOBUF_CONSTEXPR MissionTable(
      ::google::protobuf::internal::ConstantInitialized);

  inline MissionTable(const MissionTable& from) : MissionTable(nullptr, from) {}
  inline MissionTable(MissionTable&& from) noexcept
      : MissionTable(nullptr, std::move(from)) {}
  inline MissionTable& operator=(const MissionTable& from) {
    CopyFrom(from);
    return *this;
  }
  inline MissionTable& operator=(MissionTable&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
#ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
#endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const MissionTable& default_instance() {
    return *internal_default_instance();
  }
  static inline const MissionTable* internal_default_instance() {
    return reinterpret_cast<const MissionTable*>(
        &_MissionTable_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 0;
  friend void swap(MissionTable& a, MissionTable& b) { a.Swap(&b); }
  inline void Swap(MissionTable* other) {
    if (other == this) return;
#ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr && GetArena() == other->GetArena()) {
#else   // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
#endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(MissionTable* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  MissionTable* New(::google::protobuf::Arena* arena = nullptr) const final {
    return ::google::protobuf::Message::DefaultConstruct<MissionTable>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const MissionTable& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const MissionTable& from) { MissionTable::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  ::size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::google::protobuf::internal::ParseContext* ctx) final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(MissionTable* other);
 private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() { return "MissionTable"; }

 protected:
  explicit MissionTable(::google::protobuf::Arena* arena);
  MissionTable(::google::protobuf::Arena* arena, const MissionTable& from);
  MissionTable(::google::protobuf::Arena* arena, MissionTable&& from) noexcept
      : MissionTable(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::MessageLite::ClassData* GetClassData()
      const final;

 public:
  ::google::protobuf::Metadata GetMetadata() const final;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kConditionIdFieldNumber = 2,
    kNextMissionIdFieldNumber = 8,
    kIdFieldNumber = 1,
    kMissionTypeFieldNumber = 3,
    kMissionSubTypeFieldNumber = 4,
    kConditionOrderFieldNumber = 5,
    kAutoRewardFieldNumber = 6,
    kRewardIdFieldNumber = 7,
  };
  // repeated uint32 condition_id = 2;
  int condition_id_size() const;
  private:
  int _internal_condition_id_size() const;

  public:
  void clear_condition_id() ;
  ::uint32_t condition_id(int index) const;
  void set_condition_id(int index, ::uint32_t value);
  void add_condition_id(::uint32_t value);
  const ::google::protobuf::RepeatedField<::uint32_t>& condition_id() const;
  ::google::protobuf::RepeatedField<::uint32_t>* mutable_condition_id();

  private:
  const ::google::protobuf::RepeatedField<::uint32_t>& _internal_condition_id() const;
  ::google::protobuf::RepeatedField<::uint32_t>* _internal_mutable_condition_id();

  public:
  // repeated uint32 next_mission_id = 8;
  int next_mission_id_size() const;
  private:
  int _internal_next_mission_id_size() const;

  public:
  void clear_next_mission_id() ;
  ::uint32_t next_mission_id(int index) const;
  void set_next_mission_id(int index, ::uint32_t value);
  void add_next_mission_id(::uint32_t value);
  const ::google::protobuf::RepeatedField<::uint32_t>& next_mission_id() const;
  ::google::protobuf::RepeatedField<::uint32_t>* mutable_next_mission_id();

  private:
  const ::google::protobuf::RepeatedField<::uint32_t>& _internal_next_mission_id() const;
  ::google::protobuf::RepeatedField<::uint32_t>* _internal_mutable_next_mission_id();

  public:
  // uint32 id = 1;
  void clear_id() ;
  ::uint32_t id() const;
  void set_id(::uint32_t value);

  private:
  ::uint32_t _internal_id() const;
  void _internal_set_id(::uint32_t value);

  public:
  // uint32 mission_type = 3;
  void clear_mission_type() ;
  ::uint32_t mission_type() const;
  void set_mission_type(::uint32_t value);

  private:
  ::uint32_t _internal_mission_type() const;
  void _internal_set_mission_type(::uint32_t value);

  public:
  // uint32 mission_sub_type = 4;
  void clear_mission_sub_type() ;
  ::uint32_t mission_sub_type() const;
  void set_mission_sub_type(::uint32_t value);

  private:
  ::uint32_t _internal_mission_sub_type() const;
  void _internal_set_mission_sub_type(::uint32_t value);

  public:
  // uint32 condition_order = 5;
  void clear_condition_order() ;
  ::uint32_t condition_order() const;
  void set_condition_order(::uint32_t value);

  private:
  ::uint32_t _internal_condition_order() const;
  void _internal_set_condition_order(::uint32_t value);

  public:
  // uint32 auto_reward = 6;
  void clear_auto_reward() ;
  ::uint32_t auto_reward() const;
  void set_auto_reward(::uint32_t value);

  private:
  ::uint32_t _internal_auto_reward() const;
  void _internal_set_auto_reward(::uint32_t value);

  public:
  // uint32 reward_id = 7;
  void clear_reward_id() ;
  ::uint32_t reward_id() const;
  void set_reward_id(::uint32_t value);

  private:
  ::uint32_t _internal_reward_id() const;
  void _internal_set_reward_id(::uint32_t value);

  public:
  // @@protoc_insertion_point(class_scope:MissionTable)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      3, 8, 0,
      0, 2>
      _table_;
  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from);
    ::google::protobuf::RepeatedField<::uint32_t> condition_id_;
    mutable ::google::protobuf::internal::CachedSize _condition_id_cached_byte_size_;
    ::google::protobuf::RepeatedField<::uint32_t> next_mission_id_;
    mutable ::google::protobuf::internal::CachedSize _next_mission_id_cached_byte_size_;
    ::uint32_t id_;
    ::uint32_t mission_type_;
    ::uint32_t mission_sub_type_;
    ::uint32_t condition_order_;
    ::uint32_t auto_reward_;
    ::uint32_t reward_id_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_mission_5ftable_2eproto;
};
// -------------------------------------------------------------------

class MissionTabledData final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:MissionTabledData) */ {
 public:
  inline MissionTabledData() : MissionTabledData(nullptr) {}
  ~MissionTabledData() override;
  template <typename = void>
  explicit PROTOBUF_CONSTEXPR MissionTabledData(
      ::google::protobuf::internal::ConstantInitialized);

  inline MissionTabledData(const MissionTabledData& from) : MissionTabledData(nullptr, from) {}
  inline MissionTabledData(MissionTabledData&& from) noexcept
      : MissionTabledData(nullptr, std::move(from)) {}
  inline MissionTabledData& operator=(const MissionTabledData& from) {
    CopyFrom(from);
    return *this;
  }
  inline MissionTabledData& operator=(MissionTabledData&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
#ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
#endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const MissionTabledData& default_instance() {
    return *internal_default_instance();
  }
  static inline const MissionTabledData* internal_default_instance() {
    return reinterpret_cast<const MissionTabledData*>(
        &_MissionTabledData_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 1;
  friend void swap(MissionTabledData& a, MissionTabledData& b) { a.Swap(&b); }
  inline void Swap(MissionTabledData* other) {
    if (other == this) return;
#ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr && GetArena() == other->GetArena()) {
#else   // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
#endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(MissionTabledData* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  MissionTabledData* New(::google::protobuf::Arena* arena = nullptr) const final {
    return ::google::protobuf::Message::DefaultConstruct<MissionTabledData>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const MissionTabledData& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const MissionTabledData& from) { MissionTabledData::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  ::size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::google::protobuf::internal::ParseContext* ctx) final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(MissionTabledData* other);
 private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() { return "MissionTabledData"; }

 protected:
  explicit MissionTabledData(::google::protobuf::Arena* arena);
  MissionTabledData(::google::protobuf::Arena* arena, const MissionTabledData& from);
  MissionTabledData(::google::protobuf::Arena* arena, MissionTabledData&& from) noexcept
      : MissionTabledData(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::MessageLite::ClassData* GetClassData()
      const final;

 public:
  ::google::protobuf::Metadata GetMetadata() const final;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kDataFieldNumber = 1,
  };
  // repeated .MissionTable data = 1;
  int data_size() const;
  private:
  int _internal_data_size() const;

  public:
  void clear_data() ;
  ::MissionTable* mutable_data(int index);
  ::google::protobuf::RepeatedPtrField<::MissionTable>* mutable_data();

  private:
  const ::google::protobuf::RepeatedPtrField<::MissionTable>& _internal_data() const;
  ::google::protobuf::RepeatedPtrField<::MissionTable>* _internal_mutable_data();
  public:
  const ::MissionTable& data(int index) const;
  ::MissionTable* add_data();
  const ::google::protobuf::RepeatedPtrField<::MissionTable>& data() const;
  // @@protoc_insertion_point(class_scope:MissionTabledData)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      0, 1, 1,
      0, 2>
      _table_;
  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from);
    ::google::protobuf::RepeatedPtrField< ::MissionTable > data_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_mission_5ftable_2eproto;
};

// ===================================================================




// ===================================================================


#ifdef __GNUC__
#pragma GCC diagnostic push
#pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif  // __GNUC__
// -------------------------------------------------------------------

// MissionTable

// uint32 id = 1;
inline void MissionTable::clear_id() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.id_ = 0u;
}
inline ::uint32_t MissionTable::id() const {
  // @@protoc_insertion_point(field_get:MissionTable.id)
  return _internal_id();
}
inline void MissionTable::set_id(::uint32_t value) {
  _internal_set_id(value);
  // @@protoc_insertion_point(field_set:MissionTable.id)
}
inline ::uint32_t MissionTable::_internal_id() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.id_;
}
inline void MissionTable::_internal_set_id(::uint32_t value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.id_ = value;
}

// repeated uint32 condition_id = 2;
inline int MissionTable::_internal_condition_id_size() const {
  return _internal_condition_id().size();
}
inline int MissionTable::condition_id_size() const {
  return _internal_condition_id_size();
}
inline void MissionTable::clear_condition_id() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.condition_id_.Clear();
}
inline ::uint32_t MissionTable::condition_id(int index) const {
  // @@protoc_insertion_point(field_get:MissionTable.condition_id)
  return _internal_condition_id().Get(index);
}
inline void MissionTable::set_condition_id(int index, ::uint32_t value) {
  _internal_mutable_condition_id()->Set(index, value);
  // @@protoc_insertion_point(field_set:MissionTable.condition_id)
}
inline void MissionTable::add_condition_id(::uint32_t value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _internal_mutable_condition_id()->Add(value);
  // @@protoc_insertion_point(field_add:MissionTable.condition_id)
}
inline const ::google::protobuf::RepeatedField<::uint32_t>& MissionTable::condition_id() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_list:MissionTable.condition_id)
  return _internal_condition_id();
}
inline ::google::protobuf::RepeatedField<::uint32_t>* MissionTable::mutable_condition_id()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable_list:MissionTable.condition_id)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  return _internal_mutable_condition_id();
}
inline const ::google::protobuf::RepeatedField<::uint32_t>&
MissionTable::_internal_condition_id() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.condition_id_;
}
inline ::google::protobuf::RepeatedField<::uint32_t>* MissionTable::_internal_mutable_condition_id() {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return &_impl_.condition_id_;
}

// uint32 mission_type = 3;
inline void MissionTable::clear_mission_type() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.mission_type_ = 0u;
}
inline ::uint32_t MissionTable::mission_type() const {
  // @@protoc_insertion_point(field_get:MissionTable.mission_type)
  return _internal_mission_type();
}
inline void MissionTable::set_mission_type(::uint32_t value) {
  _internal_set_mission_type(value);
  // @@protoc_insertion_point(field_set:MissionTable.mission_type)
}
inline ::uint32_t MissionTable::_internal_mission_type() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.mission_type_;
}
inline void MissionTable::_internal_set_mission_type(::uint32_t value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.mission_type_ = value;
}

// uint32 mission_sub_type = 4;
inline void MissionTable::clear_mission_sub_type() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.mission_sub_type_ = 0u;
}
inline ::uint32_t MissionTable::mission_sub_type() const {
  // @@protoc_insertion_point(field_get:MissionTable.mission_sub_type)
  return _internal_mission_sub_type();
}
inline void MissionTable::set_mission_sub_type(::uint32_t value) {
  _internal_set_mission_sub_type(value);
  // @@protoc_insertion_point(field_set:MissionTable.mission_sub_type)
}
inline ::uint32_t MissionTable::_internal_mission_sub_type() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.mission_sub_type_;
}
inline void MissionTable::_internal_set_mission_sub_type(::uint32_t value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.mission_sub_type_ = value;
}

// uint32 condition_order = 5;
inline void MissionTable::clear_condition_order() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.condition_order_ = 0u;
}
inline ::uint32_t MissionTable::condition_order() const {
  // @@protoc_insertion_point(field_get:MissionTable.condition_order)
  return _internal_condition_order();
}
inline void MissionTable::set_condition_order(::uint32_t value) {
  _internal_set_condition_order(value);
  // @@protoc_insertion_point(field_set:MissionTable.condition_order)
}
inline ::uint32_t MissionTable::_internal_condition_order() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.condition_order_;
}
inline void MissionTable::_internal_set_condition_order(::uint32_t value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.condition_order_ = value;
}

// uint32 auto_reward = 6;
inline void MissionTable::clear_auto_reward() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.auto_reward_ = 0u;
}
inline ::uint32_t MissionTable::auto_reward() const {
  // @@protoc_insertion_point(field_get:MissionTable.auto_reward)
  return _internal_auto_reward();
}
inline void MissionTable::set_auto_reward(::uint32_t value) {
  _internal_set_auto_reward(value);
  // @@protoc_insertion_point(field_set:MissionTable.auto_reward)
}
inline ::uint32_t MissionTable::_internal_auto_reward() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.auto_reward_;
}
inline void MissionTable::_internal_set_auto_reward(::uint32_t value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.auto_reward_ = value;
}

// uint32 reward_id = 7;
inline void MissionTable::clear_reward_id() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.reward_id_ = 0u;
}
inline ::uint32_t MissionTable::reward_id() const {
  // @@protoc_insertion_point(field_get:MissionTable.reward_id)
  return _internal_reward_id();
}
inline void MissionTable::set_reward_id(::uint32_t value) {
  _internal_set_reward_id(value);
  // @@protoc_insertion_point(field_set:MissionTable.reward_id)
}
inline ::uint32_t MissionTable::_internal_reward_id() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.reward_id_;
}
inline void MissionTable::_internal_set_reward_id(::uint32_t value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.reward_id_ = value;
}

// repeated uint32 next_mission_id = 8;
inline int MissionTable::_internal_next_mission_id_size() const {
  return _internal_next_mission_id().size();
}
inline int MissionTable::next_mission_id_size() const {
  return _internal_next_mission_id_size();
}
inline void MissionTable::clear_next_mission_id() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.next_mission_id_.Clear();
}
inline ::uint32_t MissionTable::next_mission_id(int index) const {
  // @@protoc_insertion_point(field_get:MissionTable.next_mission_id)
  return _internal_next_mission_id().Get(index);
}
inline void MissionTable::set_next_mission_id(int index, ::uint32_t value) {
  _internal_mutable_next_mission_id()->Set(index, value);
  // @@protoc_insertion_point(field_set:MissionTable.next_mission_id)
}
inline void MissionTable::add_next_mission_id(::uint32_t value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _internal_mutable_next_mission_id()->Add(value);
  // @@protoc_insertion_point(field_add:MissionTable.next_mission_id)
}
inline const ::google::protobuf::RepeatedField<::uint32_t>& MissionTable::next_mission_id() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_list:MissionTable.next_mission_id)
  return _internal_next_mission_id();
}
inline ::google::protobuf::RepeatedField<::uint32_t>* MissionTable::mutable_next_mission_id()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable_list:MissionTable.next_mission_id)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  return _internal_mutable_next_mission_id();
}
inline const ::google::protobuf::RepeatedField<::uint32_t>&
MissionTable::_internal_next_mission_id() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.next_mission_id_;
}
inline ::google::protobuf::RepeatedField<::uint32_t>* MissionTable::_internal_mutable_next_mission_id() {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return &_impl_.next_mission_id_;
}

// -------------------------------------------------------------------

// MissionTabledData

// repeated .MissionTable data = 1;
inline int MissionTabledData::_internal_data_size() const {
  return _internal_data().size();
}
inline int MissionTabledData::data_size() const {
  return _internal_data_size();
}
inline void MissionTabledData::clear_data() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.data_.Clear();
}
inline ::MissionTable* MissionTabledData::mutable_data(int index)
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable:MissionTabledData.data)
  return _internal_mutable_data()->Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField<::MissionTable>* MissionTabledData::mutable_data()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable_list:MissionTabledData.data)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  return _internal_mutable_data();
}
inline const ::MissionTable& MissionTabledData::data(int index) const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:MissionTabledData.data)
  return _internal_data().Get(index);
}
inline ::MissionTable* MissionTabledData::add_data() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ::MissionTable* _add = _internal_mutable_data()->Add();
  // @@protoc_insertion_point(field_add:MissionTabledData.data)
  return _add;
}
inline const ::google::protobuf::RepeatedPtrField<::MissionTable>& MissionTabledData::data() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_list:MissionTabledData.data)
  return _internal_data();
}
inline const ::google::protobuf::RepeatedPtrField<::MissionTable>&
MissionTabledData::_internal_data() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.data_;
}
inline ::google::protobuf::RepeatedPtrField<::MissionTable>*
MissionTabledData::_internal_mutable_data() {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return &_impl_.data_;
}

#ifdef __GNUC__
#pragma GCC diagnostic pop
#endif  // __GNUC__

// @@protoc_insertion_point(namespace_scope)


// @@protoc_insertion_point(global_scope)

#include "google/protobuf/port_undef.inc"

#endif  // GOOGLE_PROTOBUF_INCLUDED_mission_5ftable_2eproto_2epb_2eh
