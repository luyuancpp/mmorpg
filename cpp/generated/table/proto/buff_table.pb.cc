// Generated by the protocol buffer compiler.  DO NOT EDIT!
// NO CHECKED-IN PROTOBUF GENCODE
// source: buff_table.proto
// Protobuf C++ Version: 6.31.1

#include "buff_table.pb.h"

#include <algorithm>
#include <type_traits>
#include "google/protobuf/io/coded_stream.h"
#include "google/protobuf/generated_message_tctable_impl.h"
#include "google/protobuf/extension_set.h"
#include "google/protobuf/generated_message_util.h"
#include "google/protobuf/wire_format_lite.h"
#include "google/protobuf/descriptor.h"
#include "google/protobuf/generated_message_reflection.h"
#include "google/protobuf/reflection_ops.h"
#include "google/protobuf/wire_format.h"
// @@protoc_insertion_point(includes)

// Must be included last.
#include "google/protobuf/port_def.inc"
PROTOBUF_PRAGMA_INIT_SEG
namespace _pb = ::google::protobuf;
namespace _pbi = ::google::protobuf::internal;
namespace _fl = ::google::protobuf::internal::field_layout;
template <typename>
PROTOBUF_CONSTEXPR BuffTable_TagEntry_DoNotUse::BuffTable_TagEntry_DoNotUse(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : BuffTable_TagEntry_DoNotUse::MapEntry(BuffTable_TagEntry_DoNotUse_class_data_.base()){}
#else   // PROTOBUF_CUSTOM_VTABLE
    : BuffTable_TagEntry_DoNotUse::MapEntry() {
}
#endif  // PROTOBUF_CUSTOM_VTABLE
struct BuffTable_TagEntry_DoNotUseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR BuffTable_TagEntry_DoNotUseDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~BuffTable_TagEntry_DoNotUseDefaultTypeInternal() {}
  union {
    BuffTable_TagEntry_DoNotUse _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 BuffTable_TagEntry_DoNotUseDefaultTypeInternal _BuffTable_TagEntry_DoNotUse_default_instance_;
template <typename>
PROTOBUF_CONSTEXPR BuffTable_ImmunetagEntry_DoNotUse::BuffTable_ImmunetagEntry_DoNotUse(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : BuffTable_ImmunetagEntry_DoNotUse::MapEntry(BuffTable_ImmunetagEntry_DoNotUse_class_data_.base()){}
#else   // PROTOBUF_CUSTOM_VTABLE
    : BuffTable_ImmunetagEntry_DoNotUse::MapEntry() {
}
#endif  // PROTOBUF_CUSTOM_VTABLE
struct BuffTable_ImmunetagEntry_DoNotUseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR BuffTable_ImmunetagEntry_DoNotUseDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~BuffTable_ImmunetagEntry_DoNotUseDefaultTypeInternal() {}
  union {
    BuffTable_ImmunetagEntry_DoNotUse _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 BuffTable_ImmunetagEntry_DoNotUseDefaultTypeInternal _BuffTable_ImmunetagEntry_DoNotUse_default_instance_;
template <typename>
PROTOBUF_CONSTEXPR BuffTable_DispeltagEntry_DoNotUse::BuffTable_DispeltagEntry_DoNotUse(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : BuffTable_DispeltagEntry_DoNotUse::MapEntry(BuffTable_DispeltagEntry_DoNotUse_class_data_.base()){}
#else   // PROTOBUF_CUSTOM_VTABLE
    : BuffTable_DispeltagEntry_DoNotUse::MapEntry() {
}
#endif  // PROTOBUF_CUSTOM_VTABLE
struct BuffTable_DispeltagEntry_DoNotUseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR BuffTable_DispeltagEntry_DoNotUseDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~BuffTable_DispeltagEntry_DoNotUseDefaultTypeInternal() {}
  union {
    BuffTable_DispeltagEntry_DoNotUse _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 BuffTable_DispeltagEntry_DoNotUseDefaultTypeInternal _BuffTable_DispeltagEntry_DoNotUse_default_instance_;

inline constexpr BuffTable::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        tag_{},
        immunetag_{},
        dispeltag_{},
        intervaleffect_{},
        subbuff_{},
        _subbuff_cached_byte_size_{0},
        targetsubbuff_{},
        _targetsubbuff_cached_byte_size_{0},
        healthregeneration_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        bonusdamage_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        id_{0u},
        nocaster_{0u},
        bufftype_{0u},
        level_{0u},
        maxlayer_{0u},
        infiniteduration_{0u},
        duration_{0},
        interval_{0},
        forceinterrupt_{0u},
        intervalcount_{0u},
        movement_speed_boost_{0},
        movement_speed_reduction_{0},
        nodamageorskillhitinlastseconds_{0},
        time_{0u} {}

template <typename>
PROTOBUF_CONSTEXPR BuffTable::BuffTable(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(BuffTable_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct BuffTableDefaultTypeInternal {
  PROTOBUF_CONSTEXPR BuffTableDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~BuffTableDefaultTypeInternal() {}
  union {
    BuffTable _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 BuffTableDefaultTypeInternal _BuffTable_default_instance_;

inline constexpr BuffTableData::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : data_{},
        _cached_size_{0} {}

template <typename>
PROTOBUF_CONSTEXPR BuffTableData::BuffTableData(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(BuffTableData_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct BuffTableDataDefaultTypeInternal {
  PROTOBUF_CONSTEXPR BuffTableDataDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~BuffTableDataDefaultTypeInternal() {}
  union {
    BuffTableData _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 BuffTableDataDefaultTypeInternal _BuffTableData_default_instance_;
static constexpr const ::_pb::EnumDescriptor *PROTOBUF_NONNULL *PROTOBUF_NULLABLE
    file_level_enum_descriptors_buff_5ftable_2eproto = nullptr;
static constexpr const ::_pb::ServiceDescriptor *PROTOBUF_NONNULL *PROTOBUF_NULLABLE
    file_level_service_descriptors_buff_5ftable_2eproto = nullptr;
const ::uint32_t
    TableStruct_buff_5ftable_2eproto::offsets[] ABSL_ATTRIBUTE_SECTION_VARIABLE(
        protodesc_cold) = {
        0x081, // bitmap
        PROTOBUF_FIELD_OFFSET(::BuffTable_TagEntry_DoNotUse, _impl_._has_bits_),
        5, // hasbit index offset
        PROTOBUF_FIELD_OFFSET(::BuffTable_TagEntry_DoNotUse, _impl_.key_),
        PROTOBUF_FIELD_OFFSET(::BuffTable_TagEntry_DoNotUse, _impl_.value_),
        0,
        1,
        0x081, // bitmap
        PROTOBUF_FIELD_OFFSET(::BuffTable_ImmunetagEntry_DoNotUse, _impl_._has_bits_),
        5, // hasbit index offset
        PROTOBUF_FIELD_OFFSET(::BuffTable_ImmunetagEntry_DoNotUse, _impl_.key_),
        PROTOBUF_FIELD_OFFSET(::BuffTable_ImmunetagEntry_DoNotUse, _impl_.value_),
        0,
        1,
        0x081, // bitmap
        PROTOBUF_FIELD_OFFSET(::BuffTable_DispeltagEntry_DoNotUse, _impl_._has_bits_),
        5, // hasbit index offset
        PROTOBUF_FIELD_OFFSET(::BuffTable_DispeltagEntry_DoNotUse, _impl_.key_),
        PROTOBUF_FIELD_OFFSET(::BuffTable_DispeltagEntry_DoNotUse, _impl_.value_),
        0,
        1,
        0x081, // bitmap
        PROTOBUF_FIELD_OFFSET(::BuffTable, _impl_._has_bits_),
        25, // hasbit index offset
        PROTOBUF_FIELD_OFFSET(::BuffTable, _impl_.id_),
        PROTOBUF_FIELD_OFFSET(::BuffTable, _impl_.nocaster_),
        PROTOBUF_FIELD_OFFSET(::BuffTable, _impl_.bufftype_),
        PROTOBUF_FIELD_OFFSET(::BuffTable, _impl_.tag_),
        PROTOBUF_FIELD_OFFSET(::BuffTable, _impl_.immunetag_),
        PROTOBUF_FIELD_OFFSET(::BuffTable, _impl_.dispeltag_),
        PROTOBUF_FIELD_OFFSET(::BuffTable, _impl_.level_),
        PROTOBUF_FIELD_OFFSET(::BuffTable, _impl_.maxlayer_),
        PROTOBUF_FIELD_OFFSET(::BuffTable, _impl_.infiniteduration_),
        PROTOBUF_FIELD_OFFSET(::BuffTable, _impl_.duration_),
        PROTOBUF_FIELD_OFFSET(::BuffTable, _impl_.forceinterrupt_),
        PROTOBUF_FIELD_OFFSET(::BuffTable, _impl_.interval_),
        PROTOBUF_FIELD_OFFSET(::BuffTable, _impl_.intervalcount_),
        PROTOBUF_FIELD_OFFSET(::BuffTable, _impl_.intervaleffect_),
        PROTOBUF_FIELD_OFFSET(::BuffTable, _impl_.movement_speed_boost_),
        PROTOBUF_FIELD_OFFSET(::BuffTable, _impl_.movement_speed_reduction_),
        PROTOBUF_FIELD_OFFSET(::BuffTable, _impl_.healthregeneration_),
        PROTOBUF_FIELD_OFFSET(::BuffTable, _impl_.subbuff_),
        PROTOBUF_FIELD_OFFSET(::BuffTable, _impl_.targetsubbuff_),
        PROTOBUF_FIELD_OFFSET(::BuffTable, _impl_.nodamageorskillhitinlastseconds_),
        PROTOBUF_FIELD_OFFSET(::BuffTable, _impl_.time_),
        PROTOBUF_FIELD_OFFSET(::BuffTable, _impl_.bonusdamage_),
        2,
        3,
        4,
        ~0u,
        ~0u,
        ~0u,
        5,
        6,
        7,
        8,
        10,
        9,
        11,
        ~0u,
        12,
        13,
        0,
        ~0u,
        ~0u,
        14,
        15,
        1,
        0x000, // bitmap
        PROTOBUF_FIELD_OFFSET(::BuffTableData, _impl_.data_),
};

static const ::_pbi::MigrationSchema
    schemas[] ABSL_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
        {0, sizeof(::BuffTable_TagEntry_DoNotUse)},
        {7, sizeof(::BuffTable_ImmunetagEntry_DoNotUse)},
        {14, sizeof(::BuffTable_DispeltagEntry_DoNotUse)},
        {21, sizeof(::BuffTable)},
        {68, sizeof(::BuffTableData)},
};
static const ::_pb::Message* PROTOBUF_NONNULL const file_default_instances[] = {
    &::_BuffTable_TagEntry_DoNotUse_default_instance_._instance,
    &::_BuffTable_ImmunetagEntry_DoNotUse_default_instance_._instance,
    &::_BuffTable_DispeltagEntry_DoNotUse_default_instance_._instance,
    &::_BuffTable_default_instance_._instance,
    &::_BuffTableData_default_instance_._instance,
};
const char descriptor_table_protodef_buff_5ftable_2eproto[] ABSL_ATTRIBUTE_SECTION_VARIABLE(
    protodesc_cold) = {
    "\n\020buff_table.proto\"\277\005\n\tBuffTable\022\n\n\002id\030\001"
    " \001(\r\022\020\n\010nocaster\030\002 \001(\r\022\020\n\010bufftype\030\003 \001(\r"
    "\022 \n\003tag\030\004 \003(\0132\023.BuffTable.TagEntry\022,\n\tim"
    "munetag\030\005 \003(\0132\031.BuffTable.ImmunetagEntry"
    "\022,\n\tdispeltag\030\006 \003(\0132\031.BuffTable.Dispelta"
    "gEntry\022\r\n\005level\030\007 \001(\r\022\020\n\010maxlayer\030\010 \001(\r\022"
    "\030\n\020infiniteduration\030\t \001(\r\022\020\n\010duration\030\n "
    "\001(\001\022\026\n\016forceinterrupt\030\013 \001(\r\022\020\n\010interval\030"
    "\014 \001(\001\022\025\n\rintervalcount\030\r \001(\r\022\026\n\016interval"
    "effect\030\016 \003(\001\022\034\n\024movement_speed_boost\030\017 \001"
    "(\001\022 \n\030movement_speed_reduction\030\020 \001(\001\022\032\n\022"
    "healthregeneration\030\021 \001(\t\022\017\n\007subbuff\030\022 \003("
    "\r\022\025\n\rtargetsubbuff\030\023 \003(\r\022\'\n\037nodamageorsk"
    "illhitinlastseconds\030\024 \001(\001\022\014\n\004time\030\025 \001(\r\022"
    "\023\n\013bonusdamage\030\026 \001(\t\032*\n\010TagEntry\022\013\n\003key\030"
    "\001 \001(\t\022\r\n\005value\030\002 \001(\010:\0028\001\0320\n\016ImmunetagEnt"
    "ry\022\013\n\003key\030\001 \001(\t\022\r\n\005value\030\002 \001(\010:\0028\001\0320\n\016Di"
    "speltagEntry\022\013\n\003key\030\001 \001(\t\022\r\n\005value\030\002 \001(\010"
    ":\0028\001\")\n\rBuffTableData\022\030\n\004data\030\001 \003(\0132\n.Bu"
    "ffTableB\024Z\022generated/pb/tableb\006proto3"
};
static ::absl::once_flag descriptor_table_buff_5ftable_2eproto_once;
PROTOBUF_CONSTINIT const ::_pbi::DescriptorTable descriptor_table_buff_5ftable_2eproto = {
    false,
    false,
    797,
    descriptor_table_protodef_buff_5ftable_2eproto,
    "buff_table.proto",
    &descriptor_table_buff_5ftable_2eproto_once,
    nullptr,
    0,
    5,
    schemas,
    file_default_instances,
    TableStruct_buff_5ftable_2eproto::offsets,
    file_level_enum_descriptors_buff_5ftable_2eproto,
    file_level_service_descriptors_buff_5ftable_2eproto,
};
// ===================================================================

#if defined(PROTOBUF_CUSTOM_VTABLE)
BuffTable_TagEntry_DoNotUse::BuffTable_TagEntry_DoNotUse()
    : SuperType(BuffTable_TagEntry_DoNotUse_class_data_.base()) {}
BuffTable_TagEntry_DoNotUse::BuffTable_TagEntry_DoNotUse(::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
    : SuperType(arena, BuffTable_TagEntry_DoNotUse_class_data_.base()) {}
#else   // PROTOBUF_CUSTOM_VTABLE
BuffTable_TagEntry_DoNotUse::BuffTable_TagEntry_DoNotUse() : SuperType() {}
BuffTable_TagEntry_DoNotUse::BuffTable_TagEntry_DoNotUse(::google::protobuf::Arena* PROTOBUF_NULLABLE arena) : SuperType(arena) {}
#endif  // PROTOBUF_CUSTOM_VTABLE
inline void* PROTOBUF_NONNULL BuffTable_TagEntry_DoNotUse::PlacementNew_(
    const void* PROTOBUF_NONNULL, void* PROTOBUF_NONNULL mem,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena) {
  return ::new (mem) BuffTable_TagEntry_DoNotUse(arena);
}
constexpr auto BuffTable_TagEntry_DoNotUse::InternalNewImpl_() {
  return ::google::protobuf::internal::MessageCreator::CopyInit(sizeof(BuffTable_TagEntry_DoNotUse),
                                            alignof(BuffTable_TagEntry_DoNotUse));
}
constexpr auto BuffTable_TagEntry_DoNotUse::InternalGenerateClassData_() {
  return ::google::protobuf::internal::ClassDataFull{
      ::google::protobuf::internal::ClassData{
          &_BuffTable_TagEntry_DoNotUse_default_instance_._instance,
          &_table_.header,
          nullptr,  // OnDemandRegisterArenaDtor
          nullptr,  // IsInitialized
          &BuffTable_TagEntry_DoNotUse::MergeImpl,
          ::google::protobuf::Message::GetNewImpl<BuffTable_TagEntry_DoNotUse>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
          &BuffTable_TagEntry_DoNotUse::SharedDtor,
          static_cast<void (::google::protobuf::MessageLite::*)()>(&BuffTable_TagEntry_DoNotUse::ClearImpl),
              ::google::protobuf::Message::ByteSizeLongImpl, ::google::protobuf::Message::_InternalSerializeImpl
              ,
#endif  // PROTOBUF_CUSTOM_VTABLE
          PROTOBUF_FIELD_OFFSET(BuffTable_TagEntry_DoNotUse, _impl_._cached_size_),
          false,
      },
      &BuffTable_TagEntry_DoNotUse::kDescriptorMethods,
      &descriptor_table_buff_5ftable_2eproto,
      nullptr,  // tracker
  };
}

PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 const
    ::google::protobuf::internal::ClassDataFull BuffTable_TagEntry_DoNotUse_class_data_ =
        BuffTable_TagEntry_DoNotUse::InternalGenerateClassData_();

PROTOBUF_ATTRIBUTE_WEAK const ::google::protobuf::internal::ClassData* PROTOBUF_NONNULL
BuffTable_TagEntry_DoNotUse::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&BuffTable_TagEntry_DoNotUse_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(BuffTable_TagEntry_DoNotUse_class_data_.tc_table);
  return BuffTable_TagEntry_DoNotUse_class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<1, 2, 0, 30, 2>
BuffTable_TagEntry_DoNotUse::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(BuffTable_TagEntry_DoNotUse, _impl_._has_bits_),
    0, // no _extensions_
    2, 8,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967292,  // skipmap
    offsetof(decltype(_table_), field_entries),
    2,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    BuffTable_TagEntry_DoNotUse_class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::DiscardEverythingFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::BuffTable_TagEntry_DoNotUse>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // bool value = 2;
    {::_pbi::TcParser::SingularVarintNoZag1<bool, offsetof(BuffTable_TagEntry_DoNotUse, _impl_.value_), 1>(),
     {16, 1, 0, PROTOBUF_FIELD_OFFSET(BuffTable_TagEntry_DoNotUse, _impl_.value_)}},
    // string key = 1;
    {::_pbi::TcParser::FastUS1,
     {10, 0, 0, PROTOBUF_FIELD_OFFSET(BuffTable_TagEntry_DoNotUse, _impl_.key_)}},
  }}, {{
    65535, 65535
  }}, {{
    // string key = 1;
    {PROTOBUF_FIELD_OFFSET(BuffTable_TagEntry_DoNotUse, _impl_.key_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // bool value = 2;
    {PROTOBUF_FIELD_OFFSET(BuffTable_TagEntry_DoNotUse, _impl_.value_), _Internal::kHasBitsOffset + 1, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kBool)},
  }},
  // no aux_entries
  {{
    "\22\3\0\0\0\0\0\0"
    "BuffTable.TagEntry"
    "key"
  }},
};
// ===================================================================

#if defined(PROTOBUF_CUSTOM_VTABLE)
BuffTable_ImmunetagEntry_DoNotUse::BuffTable_ImmunetagEntry_DoNotUse()
    : SuperType(BuffTable_ImmunetagEntry_DoNotUse_class_data_.base()) {}
BuffTable_ImmunetagEntry_DoNotUse::BuffTable_ImmunetagEntry_DoNotUse(::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
    : SuperType(arena, BuffTable_ImmunetagEntry_DoNotUse_class_data_.base()) {}
#else   // PROTOBUF_CUSTOM_VTABLE
BuffTable_ImmunetagEntry_DoNotUse::BuffTable_ImmunetagEntry_DoNotUse() : SuperType() {}
BuffTable_ImmunetagEntry_DoNotUse::BuffTable_ImmunetagEntry_DoNotUse(::google::protobuf::Arena* PROTOBUF_NULLABLE arena) : SuperType(arena) {}
#endif  // PROTOBUF_CUSTOM_VTABLE
inline void* PROTOBUF_NONNULL BuffTable_ImmunetagEntry_DoNotUse::PlacementNew_(
    const void* PROTOBUF_NONNULL, void* PROTOBUF_NONNULL mem,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena) {
  return ::new (mem) BuffTable_ImmunetagEntry_DoNotUse(arena);
}
constexpr auto BuffTable_ImmunetagEntry_DoNotUse::InternalNewImpl_() {
  return ::google::protobuf::internal::MessageCreator::CopyInit(sizeof(BuffTable_ImmunetagEntry_DoNotUse),
                                            alignof(BuffTable_ImmunetagEntry_DoNotUse));
}
constexpr auto BuffTable_ImmunetagEntry_DoNotUse::InternalGenerateClassData_() {
  return ::google::protobuf::internal::ClassDataFull{
      ::google::protobuf::internal::ClassData{
          &_BuffTable_ImmunetagEntry_DoNotUse_default_instance_._instance,
          &_table_.header,
          nullptr,  // OnDemandRegisterArenaDtor
          nullptr,  // IsInitialized
          &BuffTable_ImmunetagEntry_DoNotUse::MergeImpl,
          ::google::protobuf::Message::GetNewImpl<BuffTable_ImmunetagEntry_DoNotUse>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
          &BuffTable_ImmunetagEntry_DoNotUse::SharedDtor,
          static_cast<void (::google::protobuf::MessageLite::*)()>(&BuffTable_ImmunetagEntry_DoNotUse::ClearImpl),
              ::google::protobuf::Message::ByteSizeLongImpl, ::google::protobuf::Message::_InternalSerializeImpl
              ,
#endif  // PROTOBUF_CUSTOM_VTABLE
          PROTOBUF_FIELD_OFFSET(BuffTable_ImmunetagEntry_DoNotUse, _impl_._cached_size_),
          false,
      },
      &BuffTable_ImmunetagEntry_DoNotUse::kDescriptorMethods,
      &descriptor_table_buff_5ftable_2eproto,
      nullptr,  // tracker
  };
}

PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 const
    ::google::protobuf::internal::ClassDataFull BuffTable_ImmunetagEntry_DoNotUse_class_data_ =
        BuffTable_ImmunetagEntry_DoNotUse::InternalGenerateClassData_();

PROTOBUF_ATTRIBUTE_WEAK const ::google::protobuf::internal::ClassData* PROTOBUF_NONNULL
BuffTable_ImmunetagEntry_DoNotUse::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&BuffTable_ImmunetagEntry_DoNotUse_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(BuffTable_ImmunetagEntry_DoNotUse_class_data_.tc_table);
  return BuffTable_ImmunetagEntry_DoNotUse_class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<1, 2, 0, 36, 2>
BuffTable_ImmunetagEntry_DoNotUse::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(BuffTable_ImmunetagEntry_DoNotUse, _impl_._has_bits_),
    0, // no _extensions_
    2, 8,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967292,  // skipmap
    offsetof(decltype(_table_), field_entries),
    2,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    BuffTable_ImmunetagEntry_DoNotUse_class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::DiscardEverythingFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::BuffTable_ImmunetagEntry_DoNotUse>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // bool value = 2;
    {::_pbi::TcParser::SingularVarintNoZag1<bool, offsetof(BuffTable_ImmunetagEntry_DoNotUse, _impl_.value_), 1>(),
     {16, 1, 0, PROTOBUF_FIELD_OFFSET(BuffTable_ImmunetagEntry_DoNotUse, _impl_.value_)}},
    // string key = 1;
    {::_pbi::TcParser::FastUS1,
     {10, 0, 0, PROTOBUF_FIELD_OFFSET(BuffTable_ImmunetagEntry_DoNotUse, _impl_.key_)}},
  }}, {{
    65535, 65535
  }}, {{
    // string key = 1;
    {PROTOBUF_FIELD_OFFSET(BuffTable_ImmunetagEntry_DoNotUse, _impl_.key_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // bool value = 2;
    {PROTOBUF_FIELD_OFFSET(BuffTable_ImmunetagEntry_DoNotUse, _impl_.value_), _Internal::kHasBitsOffset + 1, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kBool)},
  }},
  // no aux_entries
  {{
    "\30\3\0\0\0\0\0\0"
    "BuffTable.ImmunetagEntry"
    "key"
  }},
};
// ===================================================================

#if defined(PROTOBUF_CUSTOM_VTABLE)
BuffTable_DispeltagEntry_DoNotUse::BuffTable_DispeltagEntry_DoNotUse()
    : SuperType(BuffTable_DispeltagEntry_DoNotUse_class_data_.base()) {}
BuffTable_DispeltagEntry_DoNotUse::BuffTable_DispeltagEntry_DoNotUse(::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
    : SuperType(arena, BuffTable_DispeltagEntry_DoNotUse_class_data_.base()) {}
#else   // PROTOBUF_CUSTOM_VTABLE
BuffTable_DispeltagEntry_DoNotUse::BuffTable_DispeltagEntry_DoNotUse() : SuperType() {}
BuffTable_DispeltagEntry_DoNotUse::BuffTable_DispeltagEntry_DoNotUse(::google::protobuf::Arena* PROTOBUF_NULLABLE arena) : SuperType(arena) {}
#endif  // PROTOBUF_CUSTOM_VTABLE
inline void* PROTOBUF_NONNULL BuffTable_DispeltagEntry_DoNotUse::PlacementNew_(
    const void* PROTOBUF_NONNULL, void* PROTOBUF_NONNULL mem,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena) {
  return ::new (mem) BuffTable_DispeltagEntry_DoNotUse(arena);
}
constexpr auto BuffTable_DispeltagEntry_DoNotUse::InternalNewImpl_() {
  return ::google::protobuf::internal::MessageCreator::CopyInit(sizeof(BuffTable_DispeltagEntry_DoNotUse),
                                            alignof(BuffTable_DispeltagEntry_DoNotUse));
}
constexpr auto BuffTable_DispeltagEntry_DoNotUse::InternalGenerateClassData_() {
  return ::google::protobuf::internal::ClassDataFull{
      ::google::protobuf::internal::ClassData{
          &_BuffTable_DispeltagEntry_DoNotUse_default_instance_._instance,
          &_table_.header,
          nullptr,  // OnDemandRegisterArenaDtor
          nullptr,  // IsInitialized
          &BuffTable_DispeltagEntry_DoNotUse::MergeImpl,
          ::google::protobuf::Message::GetNewImpl<BuffTable_DispeltagEntry_DoNotUse>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
          &BuffTable_DispeltagEntry_DoNotUse::SharedDtor,
          static_cast<void (::google::protobuf::MessageLite::*)()>(&BuffTable_DispeltagEntry_DoNotUse::ClearImpl),
              ::google::protobuf::Message::ByteSizeLongImpl, ::google::protobuf::Message::_InternalSerializeImpl
              ,
#endif  // PROTOBUF_CUSTOM_VTABLE
          PROTOBUF_FIELD_OFFSET(BuffTable_DispeltagEntry_DoNotUse, _impl_._cached_size_),
          false,
      },
      &BuffTable_DispeltagEntry_DoNotUse::kDescriptorMethods,
      &descriptor_table_buff_5ftable_2eproto,
      nullptr,  // tracker
  };
}

PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 const
    ::google::protobuf::internal::ClassDataFull BuffTable_DispeltagEntry_DoNotUse_class_data_ =
        BuffTable_DispeltagEntry_DoNotUse::InternalGenerateClassData_();

PROTOBUF_ATTRIBUTE_WEAK const ::google::protobuf::internal::ClassData* PROTOBUF_NONNULL
BuffTable_DispeltagEntry_DoNotUse::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&BuffTable_DispeltagEntry_DoNotUse_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(BuffTable_DispeltagEntry_DoNotUse_class_data_.tc_table);
  return BuffTable_DispeltagEntry_DoNotUse_class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<1, 2, 0, 36, 2>
BuffTable_DispeltagEntry_DoNotUse::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(BuffTable_DispeltagEntry_DoNotUse, _impl_._has_bits_),
    0, // no _extensions_
    2, 8,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967292,  // skipmap
    offsetof(decltype(_table_), field_entries),
    2,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    BuffTable_DispeltagEntry_DoNotUse_class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::DiscardEverythingFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::BuffTable_DispeltagEntry_DoNotUse>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // bool value = 2;
    {::_pbi::TcParser::SingularVarintNoZag1<bool, offsetof(BuffTable_DispeltagEntry_DoNotUse, _impl_.value_), 1>(),
     {16, 1, 0, PROTOBUF_FIELD_OFFSET(BuffTable_DispeltagEntry_DoNotUse, _impl_.value_)}},
    // string key = 1;
    {::_pbi::TcParser::FastUS1,
     {10, 0, 0, PROTOBUF_FIELD_OFFSET(BuffTable_DispeltagEntry_DoNotUse, _impl_.key_)}},
  }}, {{
    65535, 65535
  }}, {{
    // string key = 1;
    {PROTOBUF_FIELD_OFFSET(BuffTable_DispeltagEntry_DoNotUse, _impl_.key_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // bool value = 2;
    {PROTOBUF_FIELD_OFFSET(BuffTable_DispeltagEntry_DoNotUse, _impl_.value_), _Internal::kHasBitsOffset + 1, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kBool)},
  }},
  // no aux_entries
  {{
    "\30\3\0\0\0\0\0\0"
    "BuffTable.DispeltagEntry"
    "key"
  }},
};
// ===================================================================

class BuffTable::_Internal {
 public:
  using HasBits =
      decltype(::std::declval<BuffTable>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
      8 * PROTOBUF_FIELD_OFFSET(BuffTable, _impl_._has_bits_);
};

BuffTable::BuffTable(::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, BuffTable_class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:BuffTable)
}
PROTOBUF_NDEBUG_INLINE BuffTable::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const Impl_& from,
    const ::BuffTable& from_msg)
      : _has_bits_{from._has_bits_},
        _cached_size_{0},
        tag_{visibility, arena, from.tag_},
        immunetag_{visibility, arena, from.immunetag_},
        dispeltag_{visibility, arena, from.dispeltag_},
        intervaleffect_{visibility, arena, from.intervaleffect_},
        subbuff_{visibility, arena, from.subbuff_},
        _subbuff_cached_byte_size_{0},
        targetsubbuff_{visibility, arena, from.targetsubbuff_},
        _targetsubbuff_cached_byte_size_{0},
        healthregeneration_(arena, from.healthregeneration_),
        bonusdamage_(arena, from.bonusdamage_) {}

BuffTable::BuffTable(
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena,
    const BuffTable& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, BuffTable_class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  BuffTable* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);
  ::memcpy(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, id_),
           reinterpret_cast<const char *>(&from._impl_) +
               offsetof(Impl_, id_),
           offsetof(Impl_, time_) -
               offsetof(Impl_, id_) +
               sizeof(Impl_::time_));

  // @@protoc_insertion_point(copy_constructor:BuffTable)
}
PROTOBUF_NDEBUG_INLINE BuffTable::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
      : _cached_size_{0},
        tag_{visibility, arena},
        immunetag_{visibility, arena},
        dispeltag_{visibility, arena},
        intervaleffect_{visibility, arena},
        subbuff_{visibility, arena},
        _subbuff_cached_byte_size_{0},
        targetsubbuff_{visibility, arena},
        _targetsubbuff_cached_byte_size_{0},
        healthregeneration_(arena),
        bonusdamage_(arena) {}

inline void BuffTable::SharedCtor(::_pb::Arena* PROTOBUF_NULLABLE arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, id_),
           0,
           offsetof(Impl_, time_) -
               offsetof(Impl_, id_) +
               sizeof(Impl_::time_));
}
BuffTable::~BuffTable() {
  // @@protoc_insertion_point(destructor:BuffTable)
  SharedDtor(*this);
}
inline void BuffTable::SharedDtor(MessageLite& self) {
  BuffTable& this_ = static_cast<BuffTable&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  this_._impl_.healthregeneration_.Destroy();
  this_._impl_.bonusdamage_.Destroy();
  this_._impl_.~Impl_();
}

inline void* PROTOBUF_NONNULL BuffTable::PlacementNew_(
    const void* PROTOBUF_NONNULL, void* PROTOBUF_NONNULL mem,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena) {
  return ::new (mem) BuffTable(arena);
}
constexpr auto BuffTable::InternalNewImpl_() {
  constexpr auto arena_bits = ::google::protobuf::internal::EncodePlacementArenaOffsets({
      PROTOBUF_FIELD_OFFSET(BuffTable, _impl_.tag_) +
          decltype(BuffTable::_impl_.tag_)::
              InternalGetArenaOffset(
                  ::google::protobuf::Message::internal_visibility()),
      PROTOBUF_FIELD_OFFSET(BuffTable, _impl_.tag_) +
          decltype(BuffTable::_impl_.tag_)::
              InternalGetArenaOffsetAlt(
                  ::google::protobuf::Message::internal_visibility()),
      PROTOBUF_FIELD_OFFSET(BuffTable, _impl_.immunetag_) +
          decltype(BuffTable::_impl_.immunetag_)::
              InternalGetArenaOffset(
                  ::google::protobuf::Message::internal_visibility()),
      PROTOBUF_FIELD_OFFSET(BuffTable, _impl_.immunetag_) +
          decltype(BuffTable::_impl_.immunetag_)::
              InternalGetArenaOffsetAlt(
                  ::google::protobuf::Message::internal_visibility()),
      PROTOBUF_FIELD_OFFSET(BuffTable, _impl_.dispeltag_) +
          decltype(BuffTable::_impl_.dispeltag_)::
              InternalGetArenaOffset(
                  ::google::protobuf::Message::internal_visibility()),
      PROTOBUF_FIELD_OFFSET(BuffTable, _impl_.dispeltag_) +
          decltype(BuffTable::_impl_.dispeltag_)::
              InternalGetArenaOffsetAlt(
                  ::google::protobuf::Message::internal_visibility()),
      PROTOBUF_FIELD_OFFSET(BuffTable, _impl_.intervaleffect_) +
          decltype(BuffTable::_impl_.intervaleffect_)::
              InternalGetArenaOffset(
                  ::google::protobuf::Message::internal_visibility()),
      PROTOBUF_FIELD_OFFSET(BuffTable, _impl_.subbuff_) +
          decltype(BuffTable::_impl_.subbuff_)::
              InternalGetArenaOffset(
                  ::google::protobuf::Message::internal_visibility()),
      PROTOBUF_FIELD_OFFSET(BuffTable, _impl_.targetsubbuff_) +
          decltype(BuffTable::_impl_.targetsubbuff_)::
              InternalGetArenaOffset(
                  ::google::protobuf::Message::internal_visibility()),
  });
  if (arena_bits.has_value()) {
    return ::google::protobuf::internal::MessageCreator::CopyInit(
        sizeof(BuffTable), alignof(BuffTable), *arena_bits);
  } else {
    return ::google::protobuf::internal::MessageCreator(&BuffTable::PlacementNew_,
                                 sizeof(BuffTable),
                                 alignof(BuffTable));
  }
}
constexpr auto BuffTable::InternalGenerateClassData_() {
  return ::google::protobuf::internal::ClassDataFull{
      ::google::protobuf::internal::ClassData{
          &_BuffTable_default_instance_._instance,
          &_table_.header,
          nullptr,  // OnDemandRegisterArenaDtor
          nullptr,  // IsInitialized
          &BuffTable::MergeImpl,
          ::google::protobuf::Message::GetNewImpl<BuffTable>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
          &BuffTable::SharedDtor,
          ::google::protobuf::Message::GetClearImpl<BuffTable>(), &BuffTable::ByteSizeLong,
              &BuffTable::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
          PROTOBUF_FIELD_OFFSET(BuffTable, _impl_._cached_size_),
          false,
      },
      &BuffTable::kDescriptorMethods,
      &descriptor_table_buff_5ftable_2eproto,
      nullptr,  // tracker
  };
}

PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 const
    ::google::protobuf::internal::ClassDataFull BuffTable_class_data_ =
        BuffTable::InternalGenerateClassData_();

PROTOBUF_ATTRIBUTE_WEAK const ::google::protobuf::internal::ClassData* PROTOBUF_NONNULL
BuffTable::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&BuffTable_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(BuffTable_class_data_.tc_table);
  return BuffTable_class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<5, 22, 3, 84, 2>
BuffTable::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(BuffTable, _impl_._has_bits_),
    0, // no _extensions_
    22, 248,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4290772992,  // skipmap
    offsetof(decltype(_table_), field_entries),
    22,  // num_field_entries
    3,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    BuffTable_class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::BuffTable>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
    // uint32 id = 1;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(BuffTable, _impl_.id_), 2>(),
     {8, 2, 0, PROTOBUF_FIELD_OFFSET(BuffTable, _impl_.id_)}},
    // uint32 nocaster = 2;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(BuffTable, _impl_.nocaster_), 3>(),
     {16, 3, 0, PROTOBUF_FIELD_OFFSET(BuffTable, _impl_.nocaster_)}},
    // uint32 bufftype = 3;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(BuffTable, _impl_.bufftype_), 4>(),
     {24, 4, 0, PROTOBUF_FIELD_OFFSET(BuffTable, _impl_.bufftype_)}},
    {::_pbi::TcParser::MiniParse, {}},
    {::_pbi::TcParser::MiniParse, {}},
    {::_pbi::TcParser::MiniParse, {}},
    // uint32 level = 7;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(BuffTable, _impl_.level_), 5>(),
     {56, 5, 0, PROTOBUF_FIELD_OFFSET(BuffTable, _impl_.level_)}},
    // uint32 maxlayer = 8;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(BuffTable, _impl_.maxlayer_), 6>(),
     {64, 6, 0, PROTOBUF_FIELD_OFFSET(BuffTable, _impl_.maxlayer_)}},
    // uint32 infiniteduration = 9;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(BuffTable, _impl_.infiniteduration_), 7>(),
     {72, 7, 0, PROTOBUF_FIELD_OFFSET(BuffTable, _impl_.infiniteduration_)}},
    // double duration = 10;
    {::_pbi::TcParser::FastF64S1,
     {81, 8, 0, PROTOBUF_FIELD_OFFSET(BuffTable, _impl_.duration_)}},
    // uint32 forceinterrupt = 11;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(BuffTable, _impl_.forceinterrupt_), 10>(),
     {88, 10, 0, PROTOBUF_FIELD_OFFSET(BuffTable, _impl_.forceinterrupt_)}},
    // double interval = 12;
    {::_pbi::TcParser::FastF64S1,
     {97, 9, 0, PROTOBUF_FIELD_OFFSET(BuffTable, _impl_.interval_)}},
    // uint32 intervalcount = 13;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(BuffTable, _impl_.intervalcount_), 11>(),
     {104, 11, 0, PROTOBUF_FIELD_OFFSET(BuffTable, _impl_.intervalcount_)}},
    // repeated double intervaleffect = 14;
    {::_pbi::TcParser::FastF64P1,
     {114, 63, 0, PROTOBUF_FIELD_OFFSET(BuffTable, _impl_.intervaleffect_)}},
    // double movement_speed_boost = 15;
    {::_pbi::TcParser::FastF64S1,
     {121, 12, 0, PROTOBUF_FIELD_OFFSET(BuffTable, _impl_.movement_speed_boost_)}},
    // double movement_speed_reduction = 16;
    {::_pbi::TcParser::FastF64S2,
     {385, 13, 0, PROTOBUF_FIELD_OFFSET(BuffTable, _impl_.movement_speed_reduction_)}},
    // string healthregeneration = 17;
    {::_pbi::TcParser::FastUS2,
     {394, 0, 0, PROTOBUF_FIELD_OFFSET(BuffTable, _impl_.healthregeneration_)}},
    // repeated uint32 subbuff = 18;
    {::_pbi::TcParser::FastV32P2,
     {402, 63, 0, PROTOBUF_FIELD_OFFSET(BuffTable, _impl_.subbuff_)}},
    // repeated uint32 targetsubbuff = 19;
    {::_pbi::TcParser::FastV32P2,
     {410, 63, 0, PROTOBUF_FIELD_OFFSET(BuffTable, _impl_.targetsubbuff_)}},
    // double nodamageorskillhitinlastseconds = 20;
    {::_pbi::TcParser::FastF64S2,
     {417, 14, 0, PROTOBUF_FIELD_OFFSET(BuffTable, _impl_.nodamageorskillhitinlastseconds_)}},
    // uint32 time = 21;
    {::_pbi::TcParser::FastV32S2,
     {424, 15, 0, PROTOBUF_FIELD_OFFSET(BuffTable, _impl_.time_)}},
    // string bonusdamage = 22;
    {::_pbi::TcParser::FastUS2,
     {434, 1, 0, PROTOBUF_FIELD_OFFSET(BuffTable, _impl_.bonusdamage_)}},
    {::_pbi::TcParser::MiniParse, {}},
    {::_pbi::TcParser::MiniParse, {}},
    {::_pbi::TcParser::MiniParse, {}},
    {::_pbi::TcParser::MiniParse, {}},
    {::_pbi::TcParser::MiniParse, {}},
    {::_pbi::TcParser::MiniParse, {}},
    {::_pbi::TcParser::MiniParse, {}},
    {::_pbi::TcParser::MiniParse, {}},
    {::_pbi::TcParser::MiniParse, {}},
  }}, {{
    65535, 65535
  }}, {{
    // uint32 id = 1;
    {PROTOBUF_FIELD_OFFSET(BuffTable, _impl_.id_), _Internal::kHasBitsOffset + 2, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kUInt32)},
    // uint32 nocaster = 2;
    {PROTOBUF_FIELD_OFFSET(BuffTable, _impl_.nocaster_), _Internal::kHasBitsOffset + 3, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kUInt32)},
    // uint32 bufftype = 3;
    {PROTOBUF_FIELD_OFFSET(BuffTable, _impl_.bufftype_), _Internal::kHasBitsOffset + 4, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kUInt32)},
    // map<string, bool> tag = 4;
    {PROTOBUF_FIELD_OFFSET(BuffTable, _impl_.tag_), -1, 0,
    (0 | ::_fl::kFcRepeated | ::_fl::kMap)},
    // map<string, bool> immunetag = 5;
    {PROTOBUF_FIELD_OFFSET(BuffTable, _impl_.immunetag_), -1, 1,
    (0 | ::_fl::kFcRepeated | ::_fl::kMap)},
    // map<string, bool> dispeltag = 6;
    {PROTOBUF_FIELD_OFFSET(BuffTable, _impl_.dispeltag_), -1, 2,
    (0 | ::_fl::kFcRepeated | ::_fl::kMap)},
    // uint32 level = 7;
    {PROTOBUF_FIELD_OFFSET(BuffTable, _impl_.level_), _Internal::kHasBitsOffset + 5, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kUInt32)},
    // uint32 maxlayer = 8;
    {PROTOBUF_FIELD_OFFSET(BuffTable, _impl_.maxlayer_), _Internal::kHasBitsOffset + 6, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kUInt32)},
    // uint32 infiniteduration = 9;
    {PROTOBUF_FIELD_OFFSET(BuffTable, _impl_.infiniteduration_), _Internal::kHasBitsOffset + 7, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kUInt32)},
    // double duration = 10;
    {PROTOBUF_FIELD_OFFSET(BuffTable, _impl_.duration_), _Internal::kHasBitsOffset + 8, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kDouble)},
    // uint32 forceinterrupt = 11;
    {PROTOBUF_FIELD_OFFSET(BuffTable, _impl_.forceinterrupt_), _Internal::kHasBitsOffset + 10, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kUInt32)},
    // double interval = 12;
    {PROTOBUF_FIELD_OFFSET(BuffTable, _impl_.interval_), _Internal::kHasBitsOffset + 9, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kDouble)},
    // uint32 intervalcount = 13;
    {PROTOBUF_FIELD_OFFSET(BuffTable, _impl_.intervalcount_), _Internal::kHasBitsOffset + 11, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kUInt32)},
    // repeated double intervaleffect = 14;
    {PROTOBUF_FIELD_OFFSET(BuffTable, _impl_.intervaleffect_), -1, 0,
    (0 | ::_fl::kFcRepeated | ::_fl::kPackedDouble)},
    // double movement_speed_boost = 15;
    {PROTOBUF_FIELD_OFFSET(BuffTable, _impl_.movement_speed_boost_), _Internal::kHasBitsOffset + 12, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kDouble)},
    // double movement_speed_reduction = 16;
    {PROTOBUF_FIELD_OFFSET(BuffTable, _impl_.movement_speed_reduction_), _Internal::kHasBitsOffset + 13, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kDouble)},
    // string healthregeneration = 17;
    {PROTOBUF_FIELD_OFFSET(BuffTable, _impl_.healthregeneration_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // repeated uint32 subbuff = 18;
    {PROTOBUF_FIELD_OFFSET(BuffTable, _impl_.subbuff_), -1, 0,
    (0 | ::_fl::kFcRepeated | ::_fl::kPackedUInt32)},
    // repeated uint32 targetsubbuff = 19;
    {PROTOBUF_FIELD_OFFSET(BuffTable, _impl_.targetsubbuff_), -1, 0,
    (0 | ::_fl::kFcRepeated | ::_fl::kPackedUInt32)},
    // double nodamageorskillhitinlastseconds = 20;
    {PROTOBUF_FIELD_OFFSET(BuffTable, _impl_.nodamageorskillhitinlastseconds_), _Internal::kHasBitsOffset + 14, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kDouble)},
    // uint32 time = 21;
    {PROTOBUF_FIELD_OFFSET(BuffTable, _impl_.time_), _Internal::kHasBitsOffset + 15, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kUInt32)},
    // string bonusdamage = 22;
    {PROTOBUF_FIELD_OFFSET(BuffTable, _impl_.bonusdamage_), _Internal::kHasBitsOffset + 1, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kUtf8String | ::_fl::kRepAString)},
  }},
  {{
      {::_pbi::TcParser::GetMapAuxInfo(1, 0, 0,
                                       9, 8,
                                       0)},
      {::_pbi::TcParser::GetMapAuxInfo(1, 0, 0,
                                       9, 8,
                                       0)},
      {::_pbi::TcParser::GetMapAuxInfo(1, 0, 0,
                                       9, 8,
                                       0)},
  }},
  {{
    "\11\0\0\0\3\11\11\0\0\0\0\0\0\0\0\0\0\22\0\0\0\0\13\0"
    "BuffTable"
    "tag"
    "immunetag"
    "dispeltag"
    "healthregeneration"
    "bonusdamage"
  }},
};
PROTOBUF_NOINLINE void BuffTable::Clear() {
// @@protoc_insertion_point(message_clear_start:BuffTable)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.tag_.Clear();
  _impl_.immunetag_.Clear();
  _impl_.dispeltag_.Clear();
  _impl_.intervaleffect_.Clear();
  _impl_.subbuff_.Clear();
  _impl_.targetsubbuff_.Clear();
  cached_has_bits = _impl_._has_bits_[0];
  if ((cached_has_bits & 0x00000003u) != 0) {
    if ((cached_has_bits & 0x00000001u) != 0) {
      _impl_.healthregeneration_.ClearNonDefaultToEmpty();
    }
    if ((cached_has_bits & 0x00000002u) != 0) {
      _impl_.bonusdamage_.ClearNonDefaultToEmpty();
    }
  }
  if ((cached_has_bits & 0x000000fcu) != 0) {
    ::memset(&_impl_.id_, 0, static_cast<::size_t>(
        reinterpret_cast<char*>(&_impl_.infiniteduration_) -
        reinterpret_cast<char*>(&_impl_.id_)) + sizeof(_impl_.infiniteduration_));
  }
  if ((cached_has_bits & 0x0000ff00u) != 0) {
    ::memset(&_impl_.duration_, 0, static_cast<::size_t>(
        reinterpret_cast<char*>(&_impl_.time_) -
        reinterpret_cast<char*>(&_impl_.duration_)) + sizeof(_impl_.time_));
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::uint8_t* PROTOBUF_NONNULL BuffTable::_InternalSerialize(
    const ::google::protobuf::MessageLite& base, ::uint8_t* PROTOBUF_NONNULL target,
    ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) {
  const BuffTable& this_ = static_cast<const BuffTable&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::uint8_t* PROTOBUF_NONNULL BuffTable::_InternalSerialize(
    ::uint8_t* PROTOBUF_NONNULL target,
    ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const {
  const BuffTable& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
  // @@protoc_insertion_point(serialize_to_array_start:BuffTable)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  // uint32 id = 1;
  if ((this_._impl_._has_bits_[0] & 0x00000004u) != 0) {
    if (this_._internal_id() != 0) {
      target = stream->EnsureSpace(target);
      target = ::_pbi::WireFormatLite::WriteUInt32ToArray(
          1, this_._internal_id(), target);
    }
  }

  // uint32 nocaster = 2;
  if ((this_._impl_._has_bits_[0] & 0x00000008u) != 0) {
    if (this_._internal_nocaster() != 0) {
      target = stream->EnsureSpace(target);
      target = ::_pbi::WireFormatLite::WriteUInt32ToArray(
          2, this_._internal_nocaster(), target);
    }
  }

  // uint32 bufftype = 3;
  if ((this_._impl_._has_bits_[0] & 0x00000010u) != 0) {
    if (this_._internal_bufftype() != 0) {
      target = stream->EnsureSpace(target);
      target = ::_pbi::WireFormatLite::WriteUInt32ToArray(
          3, this_._internal_bufftype(), target);
    }
  }

  // map<string, bool> tag = 4;
  if (!this_._internal_tag().empty()) {
    using MapType = ::google::protobuf::Map<std::string, bool>;
    using WireHelper = _pbi::MapEntryFuncs<std::string, bool,
                                   _pbi::WireFormatLite::TYPE_STRING,
                                   _pbi::WireFormatLite::TYPE_BOOL>;
    const auto& field = this_._internal_tag();

    if (stream->IsSerializationDeterministic() && field.size() > 1) {
      for (const auto& entry : ::google::protobuf::internal::MapSorterPtr<MapType>(field)) {
        target = WireHelper::InternalSerialize(
            4, entry.first, entry.second, target, stream);
        ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            entry.first.data(), static_cast<int>(entry.first.length()),
 ::google::protobuf::internal::WireFormatLite::SERIALIZE, "BuffTable.tag");
      }
    } else {
      for (const auto& entry : field) {
        target = WireHelper::InternalSerialize(
            4, entry.first, entry.second, target, stream);
        ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            entry.first.data(), static_cast<int>(entry.first.length()),
 ::google::protobuf::internal::WireFormatLite::SERIALIZE, "BuffTable.tag");
      }
    }
  }

  // map<string, bool> immunetag = 5;
  if (!this_._internal_immunetag().empty()) {
    using MapType = ::google::protobuf::Map<std::string, bool>;
    using WireHelper = _pbi::MapEntryFuncs<std::string, bool,
                                   _pbi::WireFormatLite::TYPE_STRING,
                                   _pbi::WireFormatLite::TYPE_BOOL>;
    const auto& field = this_._internal_immunetag();

    if (stream->IsSerializationDeterministic() && field.size() > 1) {
      for (const auto& entry : ::google::protobuf::internal::MapSorterPtr<MapType>(field)) {
        target = WireHelper::InternalSerialize(
            5, entry.first, entry.second, target, stream);
        ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            entry.first.data(), static_cast<int>(entry.first.length()),
 ::google::protobuf::internal::WireFormatLite::SERIALIZE, "BuffTable.immunetag");
      }
    } else {
      for (const auto& entry : field) {
        target = WireHelper::InternalSerialize(
            5, entry.first, entry.second, target, stream);
        ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            entry.first.data(), static_cast<int>(entry.first.length()),
 ::google::protobuf::internal::WireFormatLite::SERIALIZE, "BuffTable.immunetag");
      }
    }
  }

  // map<string, bool> dispeltag = 6;
  if (!this_._internal_dispeltag().empty()) {
    using MapType = ::google::protobuf::Map<std::string, bool>;
    using WireHelper = _pbi::MapEntryFuncs<std::string, bool,
                                   _pbi::WireFormatLite::TYPE_STRING,
                                   _pbi::WireFormatLite::TYPE_BOOL>;
    const auto& field = this_._internal_dispeltag();

    if (stream->IsSerializationDeterministic() && field.size() > 1) {
      for (const auto& entry : ::google::protobuf::internal::MapSorterPtr<MapType>(field)) {
        target = WireHelper::InternalSerialize(
            6, entry.first, entry.second, target, stream);
        ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            entry.first.data(), static_cast<int>(entry.first.length()),
 ::google::protobuf::internal::WireFormatLite::SERIALIZE, "BuffTable.dispeltag");
      }
    } else {
      for (const auto& entry : field) {
        target = WireHelper::InternalSerialize(
            6, entry.first, entry.second, target, stream);
        ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            entry.first.data(), static_cast<int>(entry.first.length()),
 ::google::protobuf::internal::WireFormatLite::SERIALIZE, "BuffTable.dispeltag");
      }
    }
  }

  // uint32 level = 7;
  if ((this_._impl_._has_bits_[0] & 0x00000020u) != 0) {
    if (this_._internal_level() != 0) {
      target = stream->EnsureSpace(target);
      target = ::_pbi::WireFormatLite::WriteUInt32ToArray(
          7, this_._internal_level(), target);
    }
  }

  // uint32 maxlayer = 8;
  if ((this_._impl_._has_bits_[0] & 0x00000040u) != 0) {
    if (this_._internal_maxlayer() != 0) {
      target = stream->EnsureSpace(target);
      target = ::_pbi::WireFormatLite::WriteUInt32ToArray(
          8, this_._internal_maxlayer(), target);
    }
  }

  // uint32 infiniteduration = 9;
  if ((this_._impl_._has_bits_[0] & 0x00000080u) != 0) {
    if (this_._internal_infiniteduration() != 0) {
      target = stream->EnsureSpace(target);
      target = ::_pbi::WireFormatLite::WriteUInt32ToArray(
          9, this_._internal_infiniteduration(), target);
    }
  }

  // double duration = 10;
  if ((this_._impl_._has_bits_[0] & 0x00000100u) != 0) {
    if (::absl::bit_cast<::uint64_t>(this_._internal_duration()) != 0) {
      target = stream->EnsureSpace(target);
      target = ::_pbi::WireFormatLite::WriteDoubleToArray(
          10, this_._internal_duration(), target);
    }
  }

  // uint32 forceinterrupt = 11;
  if ((this_._impl_._has_bits_[0] & 0x00000400u) != 0) {
    if (this_._internal_forceinterrupt() != 0) {
      target = stream->EnsureSpace(target);
      target = ::_pbi::WireFormatLite::WriteUInt32ToArray(
          11, this_._internal_forceinterrupt(), target);
    }
  }

  // double interval = 12;
  if ((this_._impl_._has_bits_[0] & 0x00000200u) != 0) {
    if (::absl::bit_cast<::uint64_t>(this_._internal_interval()) != 0) {
      target = stream->EnsureSpace(target);
      target = ::_pbi::WireFormatLite::WriteDoubleToArray(
          12, this_._internal_interval(), target);
    }
  }

  // uint32 intervalcount = 13;
  if ((this_._impl_._has_bits_[0] & 0x00000800u) != 0) {
    if (this_._internal_intervalcount() != 0) {
      target = stream->EnsureSpace(target);
      target = ::_pbi::WireFormatLite::WriteUInt32ToArray(
          13, this_._internal_intervalcount(), target);
    }
  }

  // repeated double intervaleffect = 14;
  if (this_._internal_intervaleffect_size() > 0) {
    target = stream->WriteFixedPacked(14, this_._internal_intervaleffect(), target);
  }

  // double movement_speed_boost = 15;
  if ((this_._impl_._has_bits_[0] & 0x00001000u) != 0) {
    if (::absl::bit_cast<::uint64_t>(this_._internal_movement_speed_boost()) != 0) {
      target = stream->EnsureSpace(target);
      target = ::_pbi::WireFormatLite::WriteDoubleToArray(
          15, this_._internal_movement_speed_boost(), target);
    }
  }

  // double movement_speed_reduction = 16;
  if ((this_._impl_._has_bits_[0] & 0x00002000u) != 0) {
    if (::absl::bit_cast<::uint64_t>(this_._internal_movement_speed_reduction()) != 0) {
      target = stream->EnsureSpace(target);
      target = ::_pbi::WireFormatLite::WriteDoubleToArray(
          16, this_._internal_movement_speed_reduction(), target);
    }
  }

  // string healthregeneration = 17;
  if ((this_._impl_._has_bits_[0] & 0x00000001u) != 0) {
    if (!this_._internal_healthregeneration().empty()) {
      const ::std::string& _s = this_._internal_healthregeneration();
      ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
          _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "BuffTable.healthregeneration");
      target = stream->WriteStringMaybeAliased(17, _s, target);
    }
  }

  // repeated uint32 subbuff = 18;
  {
    int byte_size = this_._impl_._subbuff_cached_byte_size_.Get();
    if (byte_size > 0) {
      target = stream->WriteUInt32Packed(
          18, this_._internal_subbuff(), byte_size, target);
    }
  }

  // repeated uint32 targetsubbuff = 19;
  {
    int byte_size = this_._impl_._targetsubbuff_cached_byte_size_.Get();
    if (byte_size > 0) {
      target = stream->WriteUInt32Packed(
          19, this_._internal_targetsubbuff(), byte_size, target);
    }
  }

  // double nodamageorskillhitinlastseconds = 20;
  if ((this_._impl_._has_bits_[0] & 0x00004000u) != 0) {
    if (::absl::bit_cast<::uint64_t>(this_._internal_nodamageorskillhitinlastseconds()) != 0) {
      target = stream->EnsureSpace(target);
      target = ::_pbi::WireFormatLite::WriteDoubleToArray(
          20, this_._internal_nodamageorskillhitinlastseconds(), target);
    }
  }

  // uint32 time = 21;
  if ((this_._impl_._has_bits_[0] & 0x00008000u) != 0) {
    if (this_._internal_time() != 0) {
      target = stream->EnsureSpace(target);
      target = ::_pbi::WireFormatLite::WriteUInt32ToArray(
          21, this_._internal_time(), target);
    }
  }

  // string bonusdamage = 22;
  if ((this_._impl_._has_bits_[0] & 0x00000002u) != 0) {
    if (!this_._internal_bonusdamage().empty()) {
      const ::std::string& _s = this_._internal_bonusdamage();
      ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
          _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "BuffTable.bonusdamage");
      target = stream->WriteStringMaybeAliased(22, _s, target);
    }
  }

  if (ABSL_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:BuffTable)
  return target;
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::size_t BuffTable::ByteSizeLong(const MessageLite& base) {
  const BuffTable& this_ = static_cast<const BuffTable&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::size_t BuffTable::ByteSizeLong() const {
  const BuffTable& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
  // @@protoc_insertion_point(message_byte_size_start:BuffTable)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void)cached_has_bits;

  ::_pbi::Prefetch5LinesFrom7Lines(&this_);
   {
    // map<string, bool> tag = 4;
    {
      total_size +=
          1 * ::google::protobuf::internal::FromIntSize(this_._internal_tag_size());
      for (const auto& entry : this_._internal_tag()) {
        total_size += _pbi::MapEntryFuncs<std::string, bool,
                                       _pbi::WireFormatLite::TYPE_STRING,
                                       _pbi::WireFormatLite::TYPE_BOOL>::ByteSizeLong(entry.first, entry.second);
      }
    }
    // map<string, bool> immunetag = 5;
    {
      total_size +=
          1 * ::google::protobuf::internal::FromIntSize(this_._internal_immunetag_size());
      for (const auto& entry : this_._internal_immunetag()) {
        total_size += _pbi::MapEntryFuncs<std::string, bool,
                                       _pbi::WireFormatLite::TYPE_STRING,
                                       _pbi::WireFormatLite::TYPE_BOOL>::ByteSizeLong(entry.first, entry.second);
      }
    }
    // map<string, bool> dispeltag = 6;
    {
      total_size +=
          1 * ::google::protobuf::internal::FromIntSize(this_._internal_dispeltag_size());
      for (const auto& entry : this_._internal_dispeltag()) {
        total_size += _pbi::MapEntryFuncs<std::string, bool,
                                       _pbi::WireFormatLite::TYPE_STRING,
                                       _pbi::WireFormatLite::TYPE_BOOL>::ByteSizeLong(entry.first, entry.second);
      }
    }
    // repeated double intervaleffect = 14;
    {
      ::size_t data_size = ::size_t{8} *
          ::_pbi::FromIntSize(this_._internal_intervaleffect_size());
      ::size_t tag_size = data_size == 0
          ? 0
          : 1 + ::_pbi::WireFormatLite::Int32Size(
                              static_cast<::int32_t>(data_size));
      total_size += tag_size + data_size;
    }
    // repeated uint32 subbuff = 18;
    {
      total_size +=
          ::_pbi::WireFormatLite::UInt32SizeWithPackedTagSize(
              this_._internal_subbuff(), 2,
              this_._impl_._subbuff_cached_byte_size_);
    }
    // repeated uint32 targetsubbuff = 19;
    {
      total_size +=
          ::_pbi::WireFormatLite::UInt32SizeWithPackedTagSize(
              this_._internal_targetsubbuff(), 2,
              this_._impl_._targetsubbuff_cached_byte_size_);
    }
  }
  cached_has_bits = this_._impl_._has_bits_[0];
  if ((cached_has_bits & 0x000000ffu) != 0) {
    // string healthregeneration = 17;
    if ((cached_has_bits & 0x00000001u) != 0) {
      if (!this_._internal_healthregeneration().empty()) {
        total_size += 2 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                        this_._internal_healthregeneration());
      }
    }
    // string bonusdamage = 22;
    if ((cached_has_bits & 0x00000002u) != 0) {
      if (!this_._internal_bonusdamage().empty()) {
        total_size += 2 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                        this_._internal_bonusdamage());
      }
    }
    // uint32 id = 1;
    if ((cached_has_bits & 0x00000004u) != 0) {
      if (this_._internal_id() != 0) {
        total_size += ::_pbi::WireFormatLite::UInt32SizePlusOne(
            this_._internal_id());
      }
    }
    // uint32 nocaster = 2;
    if ((cached_has_bits & 0x00000008u) != 0) {
      if (this_._internal_nocaster() != 0) {
        total_size += ::_pbi::WireFormatLite::UInt32SizePlusOne(
            this_._internal_nocaster());
      }
    }
    // uint32 bufftype = 3;
    if ((cached_has_bits & 0x00000010u) != 0) {
      if (this_._internal_bufftype() != 0) {
        total_size += ::_pbi::WireFormatLite::UInt32SizePlusOne(
            this_._internal_bufftype());
      }
    }
    // uint32 level = 7;
    if ((cached_has_bits & 0x00000020u) != 0) {
      if (this_._internal_level() != 0) {
        total_size += ::_pbi::WireFormatLite::UInt32SizePlusOne(
            this_._internal_level());
      }
    }
    // uint32 maxlayer = 8;
    if ((cached_has_bits & 0x00000040u) != 0) {
      if (this_._internal_maxlayer() != 0) {
        total_size += ::_pbi::WireFormatLite::UInt32SizePlusOne(
            this_._internal_maxlayer());
      }
    }
    // uint32 infiniteduration = 9;
    if ((cached_has_bits & 0x00000080u) != 0) {
      if (this_._internal_infiniteduration() != 0) {
        total_size += ::_pbi::WireFormatLite::UInt32SizePlusOne(
            this_._internal_infiniteduration());
      }
    }
  }
  if ((cached_has_bits & 0x0000ff00u) != 0) {
    // double duration = 10;
    if ((cached_has_bits & 0x00000100u) != 0) {
      if (::absl::bit_cast<::uint64_t>(this_._internal_duration()) != 0) {
        total_size += 9;
      }
    }
    // double interval = 12;
    if ((cached_has_bits & 0x00000200u) != 0) {
      if (::absl::bit_cast<::uint64_t>(this_._internal_interval()) != 0) {
        total_size += 9;
      }
    }
    // uint32 forceinterrupt = 11;
    if ((cached_has_bits & 0x00000400u) != 0) {
      if (this_._internal_forceinterrupt() != 0) {
        total_size += ::_pbi::WireFormatLite::UInt32SizePlusOne(
            this_._internal_forceinterrupt());
      }
    }
    // uint32 intervalcount = 13;
    if ((cached_has_bits & 0x00000800u) != 0) {
      if (this_._internal_intervalcount() != 0) {
        total_size += ::_pbi::WireFormatLite::UInt32SizePlusOne(
            this_._internal_intervalcount());
      }
    }
    // double movement_speed_boost = 15;
    if ((cached_has_bits & 0x00001000u) != 0) {
      if (::absl::bit_cast<::uint64_t>(this_._internal_movement_speed_boost()) != 0) {
        total_size += 9;
      }
    }
    // double movement_speed_reduction = 16;
    if ((cached_has_bits & 0x00002000u) != 0) {
      if (::absl::bit_cast<::uint64_t>(this_._internal_movement_speed_reduction()) != 0) {
        total_size += 10;
      }
    }
    // double nodamageorskillhitinlastseconds = 20;
    if ((cached_has_bits & 0x00004000u) != 0) {
      if (::absl::bit_cast<::uint64_t>(this_._internal_nodamageorskillhitinlastseconds()) != 0) {
        total_size += 10;
      }
    }
    // uint32 time = 21;
    if ((cached_has_bits & 0x00008000u) != 0) {
      if (this_._internal_time() != 0) {
        total_size += 2 + ::_pbi::WireFormatLite::UInt32Size(
                                        this_._internal_time());
      }
    }
  }
  return this_.MaybeComputeUnknownFieldsSize(total_size,
                                             &this_._impl_._cached_size_);
}

void BuffTable::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<BuffTable*>(&to_msg);
  auto& from = static_cast<const BuffTable&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:BuffTable)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_impl_.tag_.MergeFrom(from._impl_.tag_);
  _this->_impl_.immunetag_.MergeFrom(from._impl_.immunetag_);
  _this->_impl_.dispeltag_.MergeFrom(from._impl_.dispeltag_);
  _this->_internal_mutable_intervaleffect()->MergeFrom(from._internal_intervaleffect());
  _this->_internal_mutable_subbuff()->MergeFrom(from._internal_subbuff());
  _this->_internal_mutable_targetsubbuff()->MergeFrom(from._internal_targetsubbuff());
  cached_has_bits = from._impl_._has_bits_[0];
  if ((cached_has_bits & 0x000000ffu) != 0) {
    if ((cached_has_bits & 0x00000001u) != 0) {
      if (!from._internal_healthregeneration().empty()) {
        _this->_internal_set_healthregeneration(from._internal_healthregeneration());
      } else {
        if (_this->_impl_.healthregeneration_.IsDefault()) {
          _this->_internal_set_healthregeneration("");
        }
      }
    }
    if ((cached_has_bits & 0x00000002u) != 0) {
      if (!from._internal_bonusdamage().empty()) {
        _this->_internal_set_bonusdamage(from._internal_bonusdamage());
      } else {
        if (_this->_impl_.bonusdamage_.IsDefault()) {
          _this->_internal_set_bonusdamage("");
        }
      }
    }
    if ((cached_has_bits & 0x00000004u) != 0) {
      if (from._internal_id() != 0) {
        _this->_impl_.id_ = from._impl_.id_;
      }
    }
    if ((cached_has_bits & 0x00000008u) != 0) {
      if (from._internal_nocaster() != 0) {
        _this->_impl_.nocaster_ = from._impl_.nocaster_;
      }
    }
    if ((cached_has_bits & 0x00000010u) != 0) {
      if (from._internal_bufftype() != 0) {
        _this->_impl_.bufftype_ = from._impl_.bufftype_;
      }
    }
    if ((cached_has_bits & 0x00000020u) != 0) {
      if (from._internal_level() != 0) {
        _this->_impl_.level_ = from._impl_.level_;
      }
    }
    if ((cached_has_bits & 0x00000040u) != 0) {
      if (from._internal_maxlayer() != 0) {
        _this->_impl_.maxlayer_ = from._impl_.maxlayer_;
      }
    }
    if ((cached_has_bits & 0x00000080u) != 0) {
      if (from._internal_infiniteduration() != 0) {
        _this->_impl_.infiniteduration_ = from._impl_.infiniteduration_;
      }
    }
  }
  if ((cached_has_bits & 0x0000ff00u) != 0) {
    if ((cached_has_bits & 0x00000100u) != 0) {
      if (::absl::bit_cast<::uint64_t>(from._internal_duration()) != 0) {
        _this->_impl_.duration_ = from._impl_.duration_;
      }
    }
    if ((cached_has_bits & 0x00000200u) != 0) {
      if (::absl::bit_cast<::uint64_t>(from._internal_interval()) != 0) {
        _this->_impl_.interval_ = from._impl_.interval_;
      }
    }
    if ((cached_has_bits & 0x00000400u) != 0) {
      if (from._internal_forceinterrupt() != 0) {
        _this->_impl_.forceinterrupt_ = from._impl_.forceinterrupt_;
      }
    }
    if ((cached_has_bits & 0x00000800u) != 0) {
      if (from._internal_intervalcount() != 0) {
        _this->_impl_.intervalcount_ = from._impl_.intervalcount_;
      }
    }
    if ((cached_has_bits & 0x00001000u) != 0) {
      if (::absl::bit_cast<::uint64_t>(from._internal_movement_speed_boost()) != 0) {
        _this->_impl_.movement_speed_boost_ = from._impl_.movement_speed_boost_;
      }
    }
    if ((cached_has_bits & 0x00002000u) != 0) {
      if (::absl::bit_cast<::uint64_t>(from._internal_movement_speed_reduction()) != 0) {
        _this->_impl_.movement_speed_reduction_ = from._impl_.movement_speed_reduction_;
      }
    }
    if ((cached_has_bits & 0x00004000u) != 0) {
      if (::absl::bit_cast<::uint64_t>(from._internal_nodamageorskillhitinlastseconds()) != 0) {
        _this->_impl_.nodamageorskillhitinlastseconds_ = from._impl_.nodamageorskillhitinlastseconds_;
      }
    }
    if ((cached_has_bits & 0x00008000u) != 0) {
      if (from._internal_time() != 0) {
        _this->_impl_.time_ = from._impl_.time_;
      }
    }
  }
  _this->_impl_._has_bits_[0] |= cached_has_bits;
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void BuffTable::CopyFrom(const BuffTable& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:BuffTable)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void BuffTable::InternalSwap(BuffTable* PROTOBUF_RESTRICT PROTOBUF_NONNULL other) {
  using ::std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  _impl_.tag_.InternalSwap(&other->_impl_.tag_);
  _impl_.immunetag_.InternalSwap(&other->_impl_.immunetag_);
  _impl_.dispeltag_.InternalSwap(&other->_impl_.dispeltag_);
  _impl_.intervaleffect_.InternalSwap(&other->_impl_.intervaleffect_);
  _impl_.subbuff_.InternalSwap(&other->_impl_.subbuff_);
  _impl_.targetsubbuff_.InternalSwap(&other->_impl_.targetsubbuff_);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.healthregeneration_, &other->_impl_.healthregeneration_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.bonusdamage_, &other->_impl_.bonusdamage_, arena);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(BuffTable, _impl_.time_)
      + sizeof(BuffTable::_impl_.time_)
      - PROTOBUF_FIELD_OFFSET(BuffTable, _impl_.id_)>(
          reinterpret_cast<char*>(&_impl_.id_),
          reinterpret_cast<char*>(&other->_impl_.id_));
}

::google::protobuf::Metadata BuffTable::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class BuffTableData::_Internal {
 public:
};

BuffTableData::BuffTableData(::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, BuffTableData_class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:BuffTableData)
}
PROTOBUF_NDEBUG_INLINE BuffTableData::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const Impl_& from,
    const ::BuffTableData& from_msg)
      : data_{visibility, arena, from.data_},
        _cached_size_{0} {}

BuffTableData::BuffTableData(
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena,
    const BuffTableData& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, BuffTableData_class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  BuffTableData* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);

  // @@protoc_insertion_point(copy_constructor:BuffTableData)
}
PROTOBUF_NDEBUG_INLINE BuffTableData::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
      : data_{visibility, arena},
        _cached_size_{0} {}

inline void BuffTableData::SharedCtor(::_pb::Arena* PROTOBUF_NULLABLE arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
}
BuffTableData::~BuffTableData() {
  // @@protoc_insertion_point(destructor:BuffTableData)
  SharedDtor(*this);
}
inline void BuffTableData::SharedDtor(MessageLite& self) {
  BuffTableData& this_ = static_cast<BuffTableData&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  this_._impl_.~Impl_();
}

inline void* PROTOBUF_NONNULL BuffTableData::PlacementNew_(
    const void* PROTOBUF_NONNULL, void* PROTOBUF_NONNULL mem,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena) {
  return ::new (mem) BuffTableData(arena);
}
constexpr auto BuffTableData::InternalNewImpl_() {
  constexpr auto arena_bits = ::google::protobuf::internal::EncodePlacementArenaOffsets({
      PROTOBUF_FIELD_OFFSET(BuffTableData, _impl_.data_) +
          decltype(BuffTableData::_impl_.data_)::
              InternalGetArenaOffset(
                  ::google::protobuf::Message::internal_visibility()),
  });
  if (arena_bits.has_value()) {
    return ::google::protobuf::internal::MessageCreator::ZeroInit(
        sizeof(BuffTableData), alignof(BuffTableData), *arena_bits);
  } else {
    return ::google::protobuf::internal::MessageCreator(&BuffTableData::PlacementNew_,
                                 sizeof(BuffTableData),
                                 alignof(BuffTableData));
  }
}
constexpr auto BuffTableData::InternalGenerateClassData_() {
  return ::google::protobuf::internal::ClassDataFull{
      ::google::protobuf::internal::ClassData{
          &_BuffTableData_default_instance_._instance,
          &_table_.header,
          nullptr,  // OnDemandRegisterArenaDtor
          nullptr,  // IsInitialized
          &BuffTableData::MergeImpl,
          ::google::protobuf::Message::GetNewImpl<BuffTableData>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
          &BuffTableData::SharedDtor,
          ::google::protobuf::Message::GetClearImpl<BuffTableData>(), &BuffTableData::ByteSizeLong,
              &BuffTableData::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
          PROTOBUF_FIELD_OFFSET(BuffTableData, _impl_._cached_size_),
          false,
      },
      &BuffTableData::kDescriptorMethods,
      &descriptor_table_buff_5ftable_2eproto,
      nullptr,  // tracker
  };
}

PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 const
    ::google::protobuf::internal::ClassDataFull BuffTableData_class_data_ =
        BuffTableData::InternalGenerateClassData_();

PROTOBUF_ATTRIBUTE_WEAK const ::google::protobuf::internal::ClassData* PROTOBUF_NONNULL
BuffTableData::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&BuffTableData_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(BuffTableData_class_data_.tc_table);
  return BuffTableData_class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<0, 1, 1, 0, 2>
BuffTableData::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    1, 0,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967294,  // skipmap
    offsetof(decltype(_table_), field_entries),
    1,  // num_field_entries
    1,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    BuffTableData_class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::BuffTableData>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // repeated .BuffTable data = 1;
    {::_pbi::TcParser::FastMtR1,
     {10, 63, 0, PROTOBUF_FIELD_OFFSET(BuffTableData, _impl_.data_)}},
  }}, {{
    65535, 65535
  }}, {{
    // repeated .BuffTable data = 1;
    {PROTOBUF_FIELD_OFFSET(BuffTableData, _impl_.data_), 0, 0,
    (0 | ::_fl::kFcRepeated | ::_fl::kMessage | ::_fl::kTvTable)},
  }},
  {{
      {::_pbi::TcParser::GetTable<::BuffTable>()},
  }},
  {{
  }},
};
PROTOBUF_NOINLINE void BuffTableData::Clear() {
// @@protoc_insertion_point(message_clear_start:BuffTableData)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.data_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::uint8_t* PROTOBUF_NONNULL BuffTableData::_InternalSerialize(
    const ::google::protobuf::MessageLite& base, ::uint8_t* PROTOBUF_NONNULL target,
    ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) {
  const BuffTableData& this_ = static_cast<const BuffTableData&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::uint8_t* PROTOBUF_NONNULL BuffTableData::_InternalSerialize(
    ::uint8_t* PROTOBUF_NONNULL target,
    ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const {
  const BuffTableData& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
  // @@protoc_insertion_point(serialize_to_array_start:BuffTableData)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  // repeated .BuffTable data = 1;
  for (unsigned i = 0, n = static_cast<unsigned>(
                           this_._internal_data_size());
       i < n; i++) {
    const auto& repfield = this_._internal_data().Get(i);
    target =
        ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
            1, repfield, repfield.GetCachedSize(),
            target, stream);
  }

  if (ABSL_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:BuffTableData)
  return target;
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::size_t BuffTableData::ByteSizeLong(const MessageLite& base) {
  const BuffTableData& this_ = static_cast<const BuffTableData&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::size_t BuffTableData::ByteSizeLong() const {
  const BuffTableData& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
  // @@protoc_insertion_point(message_byte_size_start:BuffTableData)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void)cached_has_bits;

  ::_pbi::Prefetch5LinesFrom7Lines(&this_);
   {
    // repeated .BuffTable data = 1;
    {
      total_size += 1UL * this_._internal_data_size();
      for (const auto& msg : this_._internal_data()) {
        total_size += ::google::protobuf::internal::WireFormatLite::MessageSize(msg);
      }
    }
  }
  return this_.MaybeComputeUnknownFieldsSize(total_size,
                                             &this_._impl_._cached_size_);
}

void BuffTableData::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<BuffTableData*>(&to_msg);
  auto& from = static_cast<const BuffTableData&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:BuffTableData)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_internal_mutable_data()->MergeFrom(
      from._internal_data());
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void BuffTableData::CopyFrom(const BuffTableData& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:BuffTableData)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void BuffTableData::InternalSwap(BuffTableData* PROTOBUF_RESTRICT PROTOBUF_NONNULL other) {
  using ::std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  _impl_.data_.InternalSwap(&other->_impl_.data_);
}

::google::protobuf::Metadata BuffTableData::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// @@protoc_insertion_point(namespace_scope)
namespace google {
namespace protobuf {
}  // namespace protobuf
}  // namespace google
// @@protoc_insertion_point(global_scope)
PROTOBUF_ATTRIBUTE_INIT_PRIORITY2 static ::std::false_type
    _static_init2_ [[maybe_unused]] =
        (::_pbi::AddDescriptors(&descriptor_table_buff_5ftable_2eproto),
         ::std::false_type{});
#include "google/protobuf/port_undef.inc"
