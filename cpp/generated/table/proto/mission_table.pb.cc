// Generated by the protocol buffer compiler.  DO NOT EDIT!
// NO CHECKED-IN PROTOBUF GENCODE
// source: mission_table.proto
// Protobuf C++ Version: 5.29.0

#include "mission_table.pb.h"

#include <algorithm>
#include <type_traits>
#include "google/protobuf/io/coded_stream.h"
#include "google/protobuf/generated_message_tctable_impl.h"
#include "google/protobuf/extension_set.h"
#include "google/protobuf/generated_message_util.h"
#include "google/protobuf/wire_format_lite.h"
#include "google/protobuf/descriptor.h"
#include "google/protobuf/generated_message_reflection.h"
#include "google/protobuf/reflection_ops.h"
#include "google/protobuf/wire_format.h"
// @@protoc_insertion_point(includes)

// Must be included last.
#include "google/protobuf/port_def.inc"
PROTOBUF_PRAGMA_INIT_SEG
namespace _pb = ::google::protobuf;
namespace _pbi = ::google::protobuf::internal;
namespace _fl = ::google::protobuf::internal::field_layout;

inline constexpr MissionTable::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : condition_id_{},
        _condition_id_cached_byte_size_{0},
        next_mission_id_{},
        _next_mission_id_cached_byte_size_{0},
        id_{0u},
        mission_type_{0u},
        mission_sub_type_{0u},
        condition_order_{0u},
        auto_reward_{0u},
        reward_id_{0u},
        _cached_size_{0} {}

template <typename>
PROTOBUF_CONSTEXPR MissionTable::MissionTable(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct MissionTableDefaultTypeInternal {
  PROTOBUF_CONSTEXPR MissionTableDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~MissionTableDefaultTypeInternal() {}
  union {
    MissionTable _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 MissionTableDefaultTypeInternal _MissionTable_default_instance_;

inline constexpr MissionTabledData::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : data_{},
        _cached_size_{0} {}

template <typename>
PROTOBUF_CONSTEXPR MissionTabledData::MissionTabledData(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct MissionTabledDataDefaultTypeInternal {
  PROTOBUF_CONSTEXPR MissionTabledDataDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~MissionTabledDataDefaultTypeInternal() {}
  union {
    MissionTabledData _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 MissionTabledDataDefaultTypeInternal _MissionTabledData_default_instance_;
static constexpr const ::_pb::EnumDescriptor**
    file_level_enum_descriptors_mission_5ftable_2eproto = nullptr;
static constexpr const ::_pb::ServiceDescriptor**
    file_level_service_descriptors_mission_5ftable_2eproto = nullptr;
const ::uint32_t
    TableStruct_mission_5ftable_2eproto::offsets[] ABSL_ATTRIBUTE_SECTION_VARIABLE(
        protodesc_cold) = {
        ~0u,  // no _has_bits_
        PROTOBUF_FIELD_OFFSET(::MissionTable, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::MissionTable, _impl_.id_),
        PROTOBUF_FIELD_OFFSET(::MissionTable, _impl_.condition_id_),
        PROTOBUF_FIELD_OFFSET(::MissionTable, _impl_.mission_type_),
        PROTOBUF_FIELD_OFFSET(::MissionTable, _impl_.mission_sub_type_),
        PROTOBUF_FIELD_OFFSET(::MissionTable, _impl_.condition_order_),
        PROTOBUF_FIELD_OFFSET(::MissionTable, _impl_.auto_reward_),
        PROTOBUF_FIELD_OFFSET(::MissionTable, _impl_.reward_id_),
        PROTOBUF_FIELD_OFFSET(::MissionTable, _impl_.next_mission_id_),
        ~0u,  // no _has_bits_
        PROTOBUF_FIELD_OFFSET(::MissionTabledData, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::MissionTabledData, _impl_.data_),
};

static const ::_pbi::MigrationSchema
    schemas[] ABSL_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
        {0, -1, -1, sizeof(::MissionTable)},
        {16, -1, -1, sizeof(::MissionTabledData)},
};
static const ::_pb::Message* const file_default_instances[] = {
    &::_MissionTable_default_instance_._instance,
    &::_MissionTabledData_default_instance_._instance,
};
const char descriptor_table_protodef_mission_5ftable_2eproto[] ABSL_ATTRIBUTE_SECTION_VARIABLE(
    protodesc_cold) = {
    "\n\023mission_table.proto\"\272\001\n\014MissionTable\022\n"
    "\n\002id\030\001 \001(\r\022\024\n\014condition_id\030\002 \003(\r\022\024\n\014miss"
    "ion_type\030\003 \001(\r\022\030\n\020mission_sub_type\030\004 \001(\r"
    "\022\027\n\017condition_order\030\005 \001(\r\022\023\n\013auto_reward"
    "\030\006 \001(\r\022\021\n\treward_id\030\007 \001(\r\022\027\n\017next_missio"
    "n_id\030\010 \003(\r\"0\n\021MissionTabledData\022\033\n\004data\030"
    "\001 \003(\0132\r.MissionTableB\tZ\007pb/gameb\006proto3"
};
static ::absl::once_flag descriptor_table_mission_5ftable_2eproto_once;
PROTOBUF_CONSTINIT const ::_pbi::DescriptorTable descriptor_table_mission_5ftable_2eproto = {
    false,
    false,
    279,
    descriptor_table_protodef_mission_5ftable_2eproto,
    "mission_table.proto",
    &descriptor_table_mission_5ftable_2eproto_once,
    nullptr,
    0,
    2,
    schemas,
    file_default_instances,
    TableStruct_mission_5ftable_2eproto::offsets,
    file_level_enum_descriptors_mission_5ftable_2eproto,
    file_level_service_descriptors_mission_5ftable_2eproto,
};
// ===================================================================

class MissionTable::_Internal {
 public:
};

MissionTable::MissionTable(::google::protobuf::Arena* arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:MissionTable)
}
inline PROTOBUF_NDEBUG_INLINE MissionTable::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from, const ::MissionTable& from_msg)
      : condition_id_{visibility, arena, from.condition_id_},
        _condition_id_cached_byte_size_{0},
        next_mission_id_{visibility, arena, from.next_mission_id_},
        _next_mission_id_cached_byte_size_{0},
        _cached_size_{0} {}

MissionTable::MissionTable(
    ::google::protobuf::Arena* arena,
    const MissionTable& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  MissionTable* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);
  ::memcpy(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, id_),
           reinterpret_cast<const char *>(&from._impl_) +
               offsetof(Impl_, id_),
           offsetof(Impl_, reward_id_) -
               offsetof(Impl_, id_) +
               sizeof(Impl_::reward_id_));

  // @@protoc_insertion_point(copy_constructor:MissionTable)
}
inline PROTOBUF_NDEBUG_INLINE MissionTable::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : condition_id_{visibility, arena},
        _condition_id_cached_byte_size_{0},
        next_mission_id_{visibility, arena},
        _next_mission_id_cached_byte_size_{0},
        _cached_size_{0} {}

inline void MissionTable::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, id_),
           0,
           offsetof(Impl_, reward_id_) -
               offsetof(Impl_, id_) +
               sizeof(Impl_::reward_id_));
}
MissionTable::~MissionTable() {
  // @@protoc_insertion_point(destructor:MissionTable)
  SharedDtor(*this);
}
inline void MissionTable::SharedDtor(MessageLite& self) {
  MissionTable& this_ = static_cast<MissionTable&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  this_._impl_.~Impl_();
}

inline void* MissionTable::PlacementNew_(const void*, void* mem,
                                        ::google::protobuf::Arena* arena) {
  return ::new (mem) MissionTable(arena);
}
constexpr auto MissionTable::InternalNewImpl_() {
  constexpr auto arena_bits = ::google::protobuf::internal::EncodePlacementArenaOffsets({
      PROTOBUF_FIELD_OFFSET(MissionTable, _impl_.condition_id_) +
          decltype(MissionTable::_impl_.condition_id_)::
              InternalGetArenaOffset(
                  ::google::protobuf::Message::internal_visibility()),
      PROTOBUF_FIELD_OFFSET(MissionTable, _impl_.next_mission_id_) +
          decltype(MissionTable::_impl_.next_mission_id_)::
              InternalGetArenaOffset(
                  ::google::protobuf::Message::internal_visibility()),
  });
  if (arena_bits.has_value()) {
    return ::google::protobuf::internal::MessageCreator::ZeroInit(
        sizeof(MissionTable), alignof(MissionTable), *arena_bits);
  } else {
    return ::google::protobuf::internal::MessageCreator(&MissionTable::PlacementNew_,
                                 sizeof(MissionTable),
                                 alignof(MissionTable));
  }
}
PROTOBUF_CONSTINIT
PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::google::protobuf::internal::ClassDataFull MissionTable::_class_data_ = {
    ::google::protobuf::internal::ClassData{
        &_MissionTable_default_instance_._instance,
        &_table_.header,
        nullptr,  // OnDemandRegisterArenaDtor
        nullptr,  // IsInitialized
        &MissionTable::MergeImpl,
        ::google::protobuf::Message::GetNewImpl<MissionTable>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
        &MissionTable::SharedDtor,
        ::google::protobuf::Message::GetClearImpl<MissionTable>(), &MissionTable::ByteSizeLong,
            &MissionTable::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
        PROTOBUF_FIELD_OFFSET(MissionTable, _impl_._cached_size_),
        false,
    },
    &MissionTable::kDescriptorMethods,
    &descriptor_table_mission_5ftable_2eproto,
    nullptr,  // tracker
};
const ::google::protobuf::internal::ClassData* MissionTable::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_class_data_.tc_table);
  return _class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<3, 8, 0, 0, 2> MissionTable::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    8, 56,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967040,  // skipmap
    offsetof(decltype(_table_), field_entries),
    8,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    _class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::MissionTable>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // repeated uint32 next_mission_id = 8;
    {::_pbi::TcParser::FastV32P1,
     {66, 63, 0, PROTOBUF_FIELD_OFFSET(MissionTable, _impl_.next_mission_id_)}},
    // uint32 id = 1;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(MissionTable, _impl_.id_), 63>(),
     {8, 63, 0, PROTOBUF_FIELD_OFFSET(MissionTable, _impl_.id_)}},
    // repeated uint32 condition_id = 2;
    {::_pbi::TcParser::FastV32P1,
     {18, 63, 0, PROTOBUF_FIELD_OFFSET(MissionTable, _impl_.condition_id_)}},
    // uint32 mission_type = 3;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(MissionTable, _impl_.mission_type_), 63>(),
     {24, 63, 0, PROTOBUF_FIELD_OFFSET(MissionTable, _impl_.mission_type_)}},
    // uint32 mission_sub_type = 4;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(MissionTable, _impl_.mission_sub_type_), 63>(),
     {32, 63, 0, PROTOBUF_FIELD_OFFSET(MissionTable, _impl_.mission_sub_type_)}},
    // uint32 condition_order = 5;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(MissionTable, _impl_.condition_order_), 63>(),
     {40, 63, 0, PROTOBUF_FIELD_OFFSET(MissionTable, _impl_.condition_order_)}},
    // uint32 auto_reward = 6;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(MissionTable, _impl_.auto_reward_), 63>(),
     {48, 63, 0, PROTOBUF_FIELD_OFFSET(MissionTable, _impl_.auto_reward_)}},
    // uint32 reward_id = 7;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(MissionTable, _impl_.reward_id_), 63>(),
     {56, 63, 0, PROTOBUF_FIELD_OFFSET(MissionTable, _impl_.reward_id_)}},
  }}, {{
    65535, 65535
  }}, {{
    // uint32 id = 1;
    {PROTOBUF_FIELD_OFFSET(MissionTable, _impl_.id_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUInt32)},
    // repeated uint32 condition_id = 2;
    {PROTOBUF_FIELD_OFFSET(MissionTable, _impl_.condition_id_), 0, 0,
    (0 | ::_fl::kFcRepeated | ::_fl::kPackedUInt32)},
    // uint32 mission_type = 3;
    {PROTOBUF_FIELD_OFFSET(MissionTable, _impl_.mission_type_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUInt32)},
    // uint32 mission_sub_type = 4;
    {PROTOBUF_FIELD_OFFSET(MissionTable, _impl_.mission_sub_type_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUInt32)},
    // uint32 condition_order = 5;
    {PROTOBUF_FIELD_OFFSET(MissionTable, _impl_.condition_order_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUInt32)},
    // uint32 auto_reward = 6;
    {PROTOBUF_FIELD_OFFSET(MissionTable, _impl_.auto_reward_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUInt32)},
    // uint32 reward_id = 7;
    {PROTOBUF_FIELD_OFFSET(MissionTable, _impl_.reward_id_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUInt32)},
    // repeated uint32 next_mission_id = 8;
    {PROTOBUF_FIELD_OFFSET(MissionTable, _impl_.next_mission_id_), 0, 0,
    (0 | ::_fl::kFcRepeated | ::_fl::kPackedUInt32)},
  }},
  // no aux_entries
  {{
  }},
};

PROTOBUF_NOINLINE void MissionTable::Clear() {
// @@protoc_insertion_point(message_clear_start:MissionTable)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.condition_id_.Clear();
  _impl_.next_mission_id_.Clear();
  ::memset(&_impl_.id_, 0, static_cast<::size_t>(
      reinterpret_cast<char*>(&_impl_.reward_id_) -
      reinterpret_cast<char*>(&_impl_.id_)) + sizeof(_impl_.reward_id_));
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::uint8_t* MissionTable::_InternalSerialize(
            const MessageLite& base, ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) {
          const MissionTable& this_ = static_cast<const MissionTable&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::uint8_t* MissionTable::_InternalSerialize(
            ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) const {
          const MissionTable& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(serialize_to_array_start:MissionTable)
          ::uint32_t cached_has_bits = 0;
          (void)cached_has_bits;

          // uint32 id = 1;
          if (this_._internal_id() != 0) {
            target = stream->EnsureSpace(target);
            target = ::_pbi::WireFormatLite::WriteUInt32ToArray(
                1, this_._internal_id(), target);
          }

          // repeated uint32 condition_id = 2;
          {
            int byte_size = this_._impl_._condition_id_cached_byte_size_.Get();
            if (byte_size > 0) {
              target = stream->WriteUInt32Packed(
                  2, this_._internal_condition_id(), byte_size, target);
            }
          }

          // uint32 mission_type = 3;
          if (this_._internal_mission_type() != 0) {
            target = stream->EnsureSpace(target);
            target = ::_pbi::WireFormatLite::WriteUInt32ToArray(
                3, this_._internal_mission_type(), target);
          }

          // uint32 mission_sub_type = 4;
          if (this_._internal_mission_sub_type() != 0) {
            target = stream->EnsureSpace(target);
            target = ::_pbi::WireFormatLite::WriteUInt32ToArray(
                4, this_._internal_mission_sub_type(), target);
          }

          // uint32 condition_order = 5;
          if (this_._internal_condition_order() != 0) {
            target = stream->EnsureSpace(target);
            target = ::_pbi::WireFormatLite::WriteUInt32ToArray(
                5, this_._internal_condition_order(), target);
          }

          // uint32 auto_reward = 6;
          if (this_._internal_auto_reward() != 0) {
            target = stream->EnsureSpace(target);
            target = ::_pbi::WireFormatLite::WriteUInt32ToArray(
                6, this_._internal_auto_reward(), target);
          }

          // uint32 reward_id = 7;
          if (this_._internal_reward_id() != 0) {
            target = stream->EnsureSpace(target);
            target = ::_pbi::WireFormatLite::WriteUInt32ToArray(
                7, this_._internal_reward_id(), target);
          }

          // repeated uint32 next_mission_id = 8;
          {
            int byte_size = this_._impl_._next_mission_id_cached_byte_size_.Get();
            if (byte_size > 0) {
              target = stream->WriteUInt32Packed(
                  8, this_._internal_next_mission_id(), byte_size, target);
            }
          }

          if (PROTOBUF_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
            target =
                ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
                    this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
          }
          // @@protoc_insertion_point(serialize_to_array_end:MissionTable)
          return target;
        }

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::size_t MissionTable::ByteSizeLong(const MessageLite& base) {
          const MissionTable& this_ = static_cast<const MissionTable&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::size_t MissionTable::ByteSizeLong() const {
          const MissionTable& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(message_byte_size_start:MissionTable)
          ::size_t total_size = 0;

          ::uint32_t cached_has_bits = 0;
          // Prevent compiler warnings about cached_has_bits being unused
          (void)cached_has_bits;

          ::_pbi::Prefetch5LinesFrom7Lines(&this_);
           {
            // repeated uint32 condition_id = 2;
            {
              total_size +=
                  ::_pbi::WireFormatLite::UInt32SizeWithPackedTagSize(
                      this_._internal_condition_id(), 1,
                      this_._impl_._condition_id_cached_byte_size_);
            }
            // repeated uint32 next_mission_id = 8;
            {
              total_size +=
                  ::_pbi::WireFormatLite::UInt32SizeWithPackedTagSize(
                      this_._internal_next_mission_id(), 1,
                      this_._impl_._next_mission_id_cached_byte_size_);
            }
          }
           {
            // uint32 id = 1;
            if (this_._internal_id() != 0) {
              total_size += ::_pbi::WireFormatLite::UInt32SizePlusOne(
                  this_._internal_id());
            }
            // uint32 mission_type = 3;
            if (this_._internal_mission_type() != 0) {
              total_size += ::_pbi::WireFormatLite::UInt32SizePlusOne(
                  this_._internal_mission_type());
            }
            // uint32 mission_sub_type = 4;
            if (this_._internal_mission_sub_type() != 0) {
              total_size += ::_pbi::WireFormatLite::UInt32SizePlusOne(
                  this_._internal_mission_sub_type());
            }
            // uint32 condition_order = 5;
            if (this_._internal_condition_order() != 0) {
              total_size += ::_pbi::WireFormatLite::UInt32SizePlusOne(
                  this_._internal_condition_order());
            }
            // uint32 auto_reward = 6;
            if (this_._internal_auto_reward() != 0) {
              total_size += ::_pbi::WireFormatLite::UInt32SizePlusOne(
                  this_._internal_auto_reward());
            }
            // uint32 reward_id = 7;
            if (this_._internal_reward_id() != 0) {
              total_size += ::_pbi::WireFormatLite::UInt32SizePlusOne(
                  this_._internal_reward_id());
            }
          }
          return this_.MaybeComputeUnknownFieldsSize(total_size,
                                                     &this_._impl_._cached_size_);
        }

void MissionTable::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<MissionTable*>(&to_msg);
  auto& from = static_cast<const MissionTable&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:MissionTable)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_internal_mutable_condition_id()->MergeFrom(from._internal_condition_id());
  _this->_internal_mutable_next_mission_id()->MergeFrom(from._internal_next_mission_id());
  if (from._internal_id() != 0) {
    _this->_impl_.id_ = from._impl_.id_;
  }
  if (from._internal_mission_type() != 0) {
    _this->_impl_.mission_type_ = from._impl_.mission_type_;
  }
  if (from._internal_mission_sub_type() != 0) {
    _this->_impl_.mission_sub_type_ = from._impl_.mission_sub_type_;
  }
  if (from._internal_condition_order() != 0) {
    _this->_impl_.condition_order_ = from._impl_.condition_order_;
  }
  if (from._internal_auto_reward() != 0) {
    _this->_impl_.auto_reward_ = from._impl_.auto_reward_;
  }
  if (from._internal_reward_id() != 0) {
    _this->_impl_.reward_id_ = from._impl_.reward_id_;
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void MissionTable::CopyFrom(const MissionTable& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:MissionTable)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void MissionTable::InternalSwap(MissionTable* PROTOBUF_RESTRICT other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  _impl_.condition_id_.InternalSwap(&other->_impl_.condition_id_);
  _impl_.next_mission_id_.InternalSwap(&other->_impl_.next_mission_id_);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(MissionTable, _impl_.reward_id_)
      + sizeof(MissionTable::_impl_.reward_id_)
      - PROTOBUF_FIELD_OFFSET(MissionTable, _impl_.id_)>(
          reinterpret_cast<char*>(&_impl_.id_),
          reinterpret_cast<char*>(&other->_impl_.id_));
}

::google::protobuf::Metadata MissionTable::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class MissionTabledData::_Internal {
 public:
};

MissionTabledData::MissionTabledData(::google::protobuf::Arena* arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:MissionTabledData)
}
inline PROTOBUF_NDEBUG_INLINE MissionTabledData::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from, const ::MissionTabledData& from_msg)
      : data_{visibility, arena, from.data_},
        _cached_size_{0} {}

MissionTabledData::MissionTabledData(
    ::google::protobuf::Arena* arena,
    const MissionTabledData& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  MissionTabledData* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);

  // @@protoc_insertion_point(copy_constructor:MissionTabledData)
}
inline PROTOBUF_NDEBUG_INLINE MissionTabledData::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : data_{visibility, arena},
        _cached_size_{0} {}

inline void MissionTabledData::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
}
MissionTabledData::~MissionTabledData() {
  // @@protoc_insertion_point(destructor:MissionTabledData)
  SharedDtor(*this);
}
inline void MissionTabledData::SharedDtor(MessageLite& self) {
  MissionTabledData& this_ = static_cast<MissionTabledData&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  this_._impl_.~Impl_();
}

inline void* MissionTabledData::PlacementNew_(const void*, void* mem,
                                        ::google::protobuf::Arena* arena) {
  return ::new (mem) MissionTabledData(arena);
}
constexpr auto MissionTabledData::InternalNewImpl_() {
  constexpr auto arena_bits = ::google::protobuf::internal::EncodePlacementArenaOffsets({
      PROTOBUF_FIELD_OFFSET(MissionTabledData, _impl_.data_) +
          decltype(MissionTabledData::_impl_.data_)::
              InternalGetArenaOffset(
                  ::google::protobuf::Message::internal_visibility()),
  });
  if (arena_bits.has_value()) {
    return ::google::protobuf::internal::MessageCreator::ZeroInit(
        sizeof(MissionTabledData), alignof(MissionTabledData), *arena_bits);
  } else {
    return ::google::protobuf::internal::MessageCreator(&MissionTabledData::PlacementNew_,
                                 sizeof(MissionTabledData),
                                 alignof(MissionTabledData));
  }
}
PROTOBUF_CONSTINIT
PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::google::protobuf::internal::ClassDataFull MissionTabledData::_class_data_ = {
    ::google::protobuf::internal::ClassData{
        &_MissionTabledData_default_instance_._instance,
        &_table_.header,
        nullptr,  // OnDemandRegisterArenaDtor
        nullptr,  // IsInitialized
        &MissionTabledData::MergeImpl,
        ::google::protobuf::Message::GetNewImpl<MissionTabledData>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
        &MissionTabledData::SharedDtor,
        ::google::protobuf::Message::GetClearImpl<MissionTabledData>(), &MissionTabledData::ByteSizeLong,
            &MissionTabledData::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
        PROTOBUF_FIELD_OFFSET(MissionTabledData, _impl_._cached_size_),
        false,
    },
    &MissionTabledData::kDescriptorMethods,
    &descriptor_table_mission_5ftable_2eproto,
    nullptr,  // tracker
};
const ::google::protobuf::internal::ClassData* MissionTabledData::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_class_data_.tc_table);
  return _class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<0, 1, 1, 0, 2> MissionTabledData::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    1, 0,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967294,  // skipmap
    offsetof(decltype(_table_), field_entries),
    1,  // num_field_entries
    1,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    _class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::MissionTabledData>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // repeated .MissionTable data = 1;
    {::_pbi::TcParser::FastMtR1,
     {10, 63, 0, PROTOBUF_FIELD_OFFSET(MissionTabledData, _impl_.data_)}},
  }}, {{
    65535, 65535
  }}, {{
    // repeated .MissionTable data = 1;
    {PROTOBUF_FIELD_OFFSET(MissionTabledData, _impl_.data_), 0, 0,
    (0 | ::_fl::kFcRepeated | ::_fl::kMessage | ::_fl::kTvTable)},
  }}, {{
    {::_pbi::TcParser::GetTable<::MissionTable>()},
  }}, {{
  }},
};

PROTOBUF_NOINLINE void MissionTabledData::Clear() {
// @@protoc_insertion_point(message_clear_start:MissionTabledData)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.data_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::uint8_t* MissionTabledData::_InternalSerialize(
            const MessageLite& base, ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) {
          const MissionTabledData& this_ = static_cast<const MissionTabledData&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::uint8_t* MissionTabledData::_InternalSerialize(
            ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) const {
          const MissionTabledData& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(serialize_to_array_start:MissionTabledData)
          ::uint32_t cached_has_bits = 0;
          (void)cached_has_bits;

          // repeated .MissionTable data = 1;
          for (unsigned i = 0, n = static_cast<unsigned>(
                                   this_._internal_data_size());
               i < n; i++) {
            const auto& repfield = this_._internal_data().Get(i);
            target =
                ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
                    1, repfield, repfield.GetCachedSize(),
                    target, stream);
          }

          if (PROTOBUF_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
            target =
                ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
                    this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
          }
          // @@protoc_insertion_point(serialize_to_array_end:MissionTabledData)
          return target;
        }

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::size_t MissionTabledData::ByteSizeLong(const MessageLite& base) {
          const MissionTabledData& this_ = static_cast<const MissionTabledData&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::size_t MissionTabledData::ByteSizeLong() const {
          const MissionTabledData& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(message_byte_size_start:MissionTabledData)
          ::size_t total_size = 0;

          ::uint32_t cached_has_bits = 0;
          // Prevent compiler warnings about cached_has_bits being unused
          (void)cached_has_bits;

          ::_pbi::Prefetch5LinesFrom7Lines(&this_);
           {
            // repeated .MissionTable data = 1;
            {
              total_size += 1UL * this_._internal_data_size();
              for (const auto& msg : this_._internal_data()) {
                total_size += ::google::protobuf::internal::WireFormatLite::MessageSize(msg);
              }
            }
          }
          return this_.MaybeComputeUnknownFieldsSize(total_size,
                                                     &this_._impl_._cached_size_);
        }

void MissionTabledData::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<MissionTabledData*>(&to_msg);
  auto& from = static_cast<const MissionTabledData&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:MissionTabledData)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_internal_mutable_data()->MergeFrom(
      from._internal_data());
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void MissionTabledData::CopyFrom(const MissionTabledData& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:MissionTabledData)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void MissionTabledData::InternalSwap(MissionTabledData* PROTOBUF_RESTRICT other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  _impl_.data_.InternalSwap(&other->_impl_.data_);
}

::google::protobuf::Metadata MissionTabledData::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// @@protoc_insertion_point(namespace_scope)
namespace google {
namespace protobuf {
}  // namespace protobuf
}  // namespace google
// @@protoc_insertion_point(global_scope)
PROTOBUF_ATTRIBUTE_INIT_PRIORITY2 static ::std::false_type
    _static_init2_ PROTOBUF_UNUSED =
        (::_pbi::AddDescriptors(&descriptor_table_mission_5ftable_2eproto),
         ::std::false_type{});
#include "google/protobuf/port_undef.inc"
