// Generated by the protocol buffer compiler.  DO NOT EDIT!
// NO CHECKED-IN PROTOBUF GENCODE
// source: test_table.proto
// Protobuf C++ Version: 6.31.1

#include "test_table.pb.h"

#include <algorithm>
#include <type_traits>
#include "google/protobuf/io/coded_stream.h"
#include "google/protobuf/generated_message_tctable_impl.h"
#include "google/protobuf/extension_set.h"
#include "google/protobuf/generated_message_util.h"
#include "google/protobuf/wire_format_lite.h"
#include "google/protobuf/descriptor.h"
#include "google/protobuf/generated_message_reflection.h"
#include "google/protobuf/reflection_ops.h"
#include "google/protobuf/wire_format.h"
// @@protoc_insertion_point(includes)

// Must be included last.
#include "google/protobuf/port_def.inc"
PROTOBUF_PRAGMA_INIT_SEG
namespace _pb = ::google::protobuf;
namespace _pbi = ::google::protobuf::internal;
namespace _fl = ::google::protobuf::internal::field_layout;

inline constexpr Testtestobj::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        testobj_key_{0u},
        testobj_value_{0u} {}

template <typename>
PROTOBUF_CONSTEXPR Testtestobj::Testtestobj(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(Testtestobj_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct TesttestobjDefaultTypeInternal {
  PROTOBUF_CONSTEXPR TesttestobjDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~TesttestobjDefaultTypeInternal() {}
  union {
    Testtestobj _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 TesttestobjDefaultTypeInternal _Testtestobj_default_instance_;

inline constexpr Testtag::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        tag_key_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        tag_value_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()) {}

template <typename>
PROTOBUF_CONSTEXPR Testtag::Testtag(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(Testtag_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct TesttagDefaultTypeInternal {
  PROTOBUF_CONSTEXPR TesttagDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~TesttagDefaultTypeInternal() {}
  union {
    Testtag _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 TesttagDefaultTypeInternal _Testtag_default_instance_;

inline constexpr Testimmunetag::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        immunetag_key_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        immunetag_value_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()) {}

template <typename>
PROTOBUF_CONSTEXPR Testimmunetag::Testimmunetag(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(Testimmunetag_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct TestimmunetagDefaultTypeInternal {
  PROTOBUF_CONSTEXPR TestimmunetagDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~TestimmunetagDefaultTypeInternal() {}
  union {
    Testimmunetag _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 TestimmunetagDefaultTypeInternal _Testimmunetag_default_instance_;
template <typename>
PROTOBUF_CONSTEXPR TestTable_TagEntry_DoNotUse::TestTable_TagEntry_DoNotUse(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : TestTable_TagEntry_DoNotUse::MapEntry(TestTable_TagEntry_DoNotUse_class_data_.base()){}
#else   // PROTOBUF_CUSTOM_VTABLE
    : TestTable_TagEntry_DoNotUse::MapEntry() {
}
#endif  // PROTOBUF_CUSTOM_VTABLE
struct TestTable_TagEntry_DoNotUseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR TestTable_TagEntry_DoNotUseDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~TestTable_TagEntry_DoNotUseDefaultTypeInternal() {}
  union {
    TestTable_TagEntry_DoNotUse _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 TestTable_TagEntry_DoNotUseDefaultTypeInternal _TestTable_TagEntry_DoNotUse_default_instance_;
template <typename>
PROTOBUF_CONSTEXPR TestTable_ImmunetagEntry_DoNotUse::TestTable_ImmunetagEntry_DoNotUse(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : TestTable_ImmunetagEntry_DoNotUse::MapEntry(TestTable_ImmunetagEntry_DoNotUse_class_data_.base()){}
#else   // PROTOBUF_CUSTOM_VTABLE
    : TestTable_ImmunetagEntry_DoNotUse::MapEntry() {
}
#endif  // PROTOBUF_CUSTOM_VTABLE
struct TestTable_ImmunetagEntry_DoNotUseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR TestTable_ImmunetagEntry_DoNotUseDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~TestTable_ImmunetagEntry_DoNotUseDefaultTypeInternal() {}
  union {
    TestTable_ImmunetagEntry_DoNotUse _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 TestTable_ImmunetagEntry_DoNotUseDefaultTypeInternal _TestTable_ImmunetagEntry_DoNotUse_default_instance_;

inline constexpr TestTable::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        tag_{},
        immunetag_{},
        testobj_{},
        effect_{},
        _effect_cached_byte_size_{0},
        id_{0u},
        level_{0u} {}

template <typename>
PROTOBUF_CONSTEXPR TestTable::TestTable(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(TestTable_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct TestTableDefaultTypeInternal {
  PROTOBUF_CONSTEXPR TestTableDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~TestTableDefaultTypeInternal() {}
  union {
    TestTable _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 TestTableDefaultTypeInternal _TestTable_default_instance_;

inline constexpr TestTabledData::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : data_{},
        _cached_size_{0} {}

template <typename>
PROTOBUF_CONSTEXPR TestTabledData::TestTabledData(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(TestTabledData_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct TestTabledDataDefaultTypeInternal {
  PROTOBUF_CONSTEXPR TestTabledDataDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~TestTabledDataDefaultTypeInternal() {}
  union {
    TestTabledData _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 TestTabledDataDefaultTypeInternal _TestTabledData_default_instance_;
static constexpr const ::_pb::EnumDescriptor *PROTOBUF_NONNULL *PROTOBUF_NULLABLE
    file_level_enum_descriptors_test_5ftable_2eproto = nullptr;
static constexpr const ::_pb::ServiceDescriptor *PROTOBUF_NONNULL *PROTOBUF_NULLABLE
    file_level_service_descriptors_test_5ftable_2eproto = nullptr;
const ::uint32_t
    TableStruct_test_5ftable_2eproto::offsets[] ABSL_ATTRIBUTE_SECTION_VARIABLE(
        protodesc_cold) = {
        0x081, // bitmap
        PROTOBUF_FIELD_OFFSET(::Testtag, _impl_._has_bits_),
        5, // hasbit index offset
        PROTOBUF_FIELD_OFFSET(::Testtag, _impl_.tag_key_),
        PROTOBUF_FIELD_OFFSET(::Testtag, _impl_.tag_value_),
        0,
        1,
        0x081, // bitmap
        PROTOBUF_FIELD_OFFSET(::Testimmunetag, _impl_._has_bits_),
        5, // hasbit index offset
        PROTOBUF_FIELD_OFFSET(::Testimmunetag, _impl_.immunetag_key_),
        PROTOBUF_FIELD_OFFSET(::Testimmunetag, _impl_.immunetag_value_),
        0,
        1,
        0x081, // bitmap
        PROTOBUF_FIELD_OFFSET(::Testtestobj, _impl_._has_bits_),
        5, // hasbit index offset
        PROTOBUF_FIELD_OFFSET(::Testtestobj, _impl_.testobj_key_),
        PROTOBUF_FIELD_OFFSET(::Testtestobj, _impl_.testobj_value_),
        0,
        1,
        0x081, // bitmap
        PROTOBUF_FIELD_OFFSET(::TestTable_TagEntry_DoNotUse, _impl_._has_bits_),
        5, // hasbit index offset
        PROTOBUF_FIELD_OFFSET(::TestTable_TagEntry_DoNotUse, _impl_.key_),
        PROTOBUF_FIELD_OFFSET(::TestTable_TagEntry_DoNotUse, _impl_.value_),
        0,
        1,
        0x081, // bitmap
        PROTOBUF_FIELD_OFFSET(::TestTable_ImmunetagEntry_DoNotUse, _impl_._has_bits_),
        5, // hasbit index offset
        PROTOBUF_FIELD_OFFSET(::TestTable_ImmunetagEntry_DoNotUse, _impl_.key_),
        PROTOBUF_FIELD_OFFSET(::TestTable_ImmunetagEntry_DoNotUse, _impl_.value_),
        0,
        1,
        0x081, // bitmap
        PROTOBUF_FIELD_OFFSET(::TestTable, _impl_._has_bits_),
        9, // hasbit index offset
        PROTOBUF_FIELD_OFFSET(::TestTable, _impl_.id_),
        PROTOBUF_FIELD_OFFSET(::TestTable, _impl_.tag_),
        PROTOBUF_FIELD_OFFSET(::TestTable, _impl_.immunetag_),
        PROTOBUF_FIELD_OFFSET(::TestTable, _impl_.level_),
        PROTOBUF_FIELD_OFFSET(::TestTable, _impl_.testobj_),
        PROTOBUF_FIELD_OFFSET(::TestTable, _impl_.effect_),
        0,
        ~0u,
        ~0u,
        1,
        ~0u,
        ~0u,
        0x000, // bitmap
        PROTOBUF_FIELD_OFFSET(::TestTabledData, _impl_.data_),
};

static const ::_pbi::MigrationSchema
    schemas[] ABSL_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
        {0, sizeof(::Testtag)},
        {7, sizeof(::Testimmunetag)},
        {14, sizeof(::Testtestobj)},
        {21, sizeof(::TestTable_TagEntry_DoNotUse)},
        {28, sizeof(::TestTable_ImmunetagEntry_DoNotUse)},
        {35, sizeof(::TestTable)},
        {50, sizeof(::TestTabledData)},
};
static const ::_pb::Message* PROTOBUF_NONNULL const file_default_instances[] = {
    &::_Testtag_default_instance_._instance,
    &::_Testimmunetag_default_instance_._instance,
    &::_Testtestobj_default_instance_._instance,
    &::_TestTable_TagEntry_DoNotUse_default_instance_._instance,
    &::_TestTable_ImmunetagEntry_DoNotUse_default_instance_._instance,
    &::_TestTable_default_instance_._instance,
    &::_TestTabledData_default_instance_._instance,
};
const char descriptor_table_protodef_test_5ftable_2eproto[] ABSL_ATTRIBUTE_SECTION_VARIABLE(
    protodesc_cold) = {
    "\n\020test_table.proto\"-\n\007Testtag\022\017\n\007tag_key"
    "\030\001 \001(\t\022\021\n\ttag_value\030\002 \001(\t\"\?\n\rTestimmunet"
    "ag\022\025\n\rimmunetag_key\030\001 \001(\t\022\027\n\017immunetag_v"
    "alue\030\002 \001(\t\"9\n\013Testtestobj\022\023\n\013testobj_key"
    "\030\001 \001(\r\022\025\n\rtestobj_value\030\002 \001(\r\"\203\002\n\tTestTa"
    "ble\022\n\n\002id\030\001 \001(\r\022 \n\003tag\030\002 \003(\0132\023.TestTable"
    ".TagEntry\022,\n\timmunetag\030\003 \003(\0132\031.TestTable"
    ".ImmunetagEntry\022\r\n\005level\030\004 \001(\r\022\035\n\007testob"
    "j\030\005 \003(\0132\014.Testtestobj\022\016\n\006effect\030\006 \003(\r\032*\n"
    "\010TagEntry\022\013\n\003key\030\001 \001(\t\022\r\n\005value\030\002 \001(\t:\0028"
    "\001\0320\n\016ImmunetagEntry\022\013\n\003key\030\001 \001(\t\022\r\n\005valu"
    "e\030\002 \001(\t:\0028\001\"*\n\016TestTabledData\022\030\n\004data\030\001 "
    "\003(\0132\n.TestTableB\tZ\007pb/gameb\006proto3"
};
static ::absl::once_flag descriptor_table_test_5ftable_2eproto_once;
PROTOBUF_CONSTINIT const ::_pbi::DescriptorTable descriptor_table_test_5ftable_2eproto = {
    false,
    false,
    514,
    descriptor_table_protodef_test_5ftable_2eproto,
    "test_table.proto",
    &descriptor_table_test_5ftable_2eproto_once,
    nullptr,
    0,
    7,
    schemas,
    file_default_instances,
    TableStruct_test_5ftable_2eproto::offsets,
    file_level_enum_descriptors_test_5ftable_2eproto,
    file_level_service_descriptors_test_5ftable_2eproto,
};
// ===================================================================

class Testtag::_Internal {
 public:
  using HasBits =
      decltype(::std::declval<Testtag>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
      8 * PROTOBUF_FIELD_OFFSET(Testtag, _impl_._has_bits_);
};

Testtag::Testtag(::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, Testtag_class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:Testtag)
}
PROTOBUF_NDEBUG_INLINE Testtag::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const Impl_& from,
    const ::Testtag& from_msg)
      : _has_bits_{from._has_bits_},
        _cached_size_{0},
        tag_key_(arena, from.tag_key_),
        tag_value_(arena, from.tag_value_) {}

Testtag::Testtag(
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena,
    const Testtag& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, Testtag_class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  Testtag* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);

  // @@protoc_insertion_point(copy_constructor:Testtag)
}
PROTOBUF_NDEBUG_INLINE Testtag::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
      : _cached_size_{0},
        tag_key_(arena),
        tag_value_(arena) {}

inline void Testtag::SharedCtor(::_pb::Arena* PROTOBUF_NULLABLE arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
}
Testtag::~Testtag() {
  // @@protoc_insertion_point(destructor:Testtag)
  SharedDtor(*this);
}
inline void Testtag::SharedDtor(MessageLite& self) {
  Testtag& this_ = static_cast<Testtag&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  this_._impl_.tag_key_.Destroy();
  this_._impl_.tag_value_.Destroy();
  this_._impl_.~Impl_();
}

inline void* PROTOBUF_NONNULL Testtag::PlacementNew_(
    const void* PROTOBUF_NONNULL, void* PROTOBUF_NONNULL mem,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena) {
  return ::new (mem) Testtag(arena);
}
constexpr auto Testtag::InternalNewImpl_() {
  return ::google::protobuf::internal::MessageCreator::CopyInit(sizeof(Testtag),
                                            alignof(Testtag));
}
constexpr auto Testtag::InternalGenerateClassData_() {
  return ::google::protobuf::internal::ClassDataFull{
      ::google::protobuf::internal::ClassData{
          &_Testtag_default_instance_._instance,
          &_table_.header,
          nullptr,  // OnDemandRegisterArenaDtor
          nullptr,  // IsInitialized
          &Testtag::MergeImpl,
          ::google::protobuf::Message::GetNewImpl<Testtag>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
          &Testtag::SharedDtor,
          ::google::protobuf::Message::GetClearImpl<Testtag>(), &Testtag::ByteSizeLong,
              &Testtag::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
          PROTOBUF_FIELD_OFFSET(Testtag, _impl_._cached_size_),
          false,
      },
      &Testtag::kDescriptorMethods,
      &descriptor_table_test_5ftable_2eproto,
      nullptr,  // tracker
  };
}

PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 const
    ::google::protobuf::internal::ClassDataFull Testtag_class_data_ =
        Testtag::InternalGenerateClassData_();

PROTOBUF_ATTRIBUTE_WEAK const ::google::protobuf::internal::ClassData* PROTOBUF_NONNULL
Testtag::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&Testtag_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(Testtag_class_data_.tc_table);
  return Testtag_class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<1, 2, 0, 32, 2>
Testtag::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(Testtag, _impl_._has_bits_),
    0, // no _extensions_
    2, 8,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967292,  // skipmap
    offsetof(decltype(_table_), field_entries),
    2,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    Testtag_class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::Testtag>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // string tag_value = 2;
    {::_pbi::TcParser::FastUS1,
     {18, 1, 0, PROTOBUF_FIELD_OFFSET(Testtag, _impl_.tag_value_)}},
    // string tag_key = 1;
    {::_pbi::TcParser::FastUS1,
     {10, 0, 0, PROTOBUF_FIELD_OFFSET(Testtag, _impl_.tag_key_)}},
  }}, {{
    65535, 65535
  }}, {{
    // string tag_key = 1;
    {PROTOBUF_FIELD_OFFSET(Testtag, _impl_.tag_key_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // string tag_value = 2;
    {PROTOBUF_FIELD_OFFSET(Testtag, _impl_.tag_value_), _Internal::kHasBitsOffset + 1, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kUtf8String | ::_fl::kRepAString)},
  }},
  // no aux_entries
  {{
    "\7\7\11\0\0\0\0\0"
    "Testtag"
    "tag_key"
    "tag_value"
  }},
};
PROTOBUF_NOINLINE void Testtag::Clear() {
// @@protoc_insertion_point(message_clear_start:Testtag)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if ((cached_has_bits & 0x00000003u) != 0) {
    if ((cached_has_bits & 0x00000001u) != 0) {
      _impl_.tag_key_.ClearNonDefaultToEmpty();
    }
    if ((cached_has_bits & 0x00000002u) != 0) {
      _impl_.tag_value_.ClearNonDefaultToEmpty();
    }
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::uint8_t* PROTOBUF_NONNULL Testtag::_InternalSerialize(
    const ::google::protobuf::MessageLite& base, ::uint8_t* PROTOBUF_NONNULL target,
    ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) {
  const Testtag& this_ = static_cast<const Testtag&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::uint8_t* PROTOBUF_NONNULL Testtag::_InternalSerialize(
    ::uint8_t* PROTOBUF_NONNULL target,
    ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const {
  const Testtag& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
  // @@protoc_insertion_point(serialize_to_array_start:Testtag)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  // string tag_key = 1;
  if ((this_._impl_._has_bits_[0] & 0x00000001u) != 0) {
    if (!this_._internal_tag_key().empty()) {
      const ::std::string& _s = this_._internal_tag_key();
      ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
          _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "Testtag.tag_key");
      target = stream->WriteStringMaybeAliased(1, _s, target);
    }
  }

  // string tag_value = 2;
  if ((this_._impl_._has_bits_[0] & 0x00000002u) != 0) {
    if (!this_._internal_tag_value().empty()) {
      const ::std::string& _s = this_._internal_tag_value();
      ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
          _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "Testtag.tag_value");
      target = stream->WriteStringMaybeAliased(2, _s, target);
    }
  }

  if (ABSL_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:Testtag)
  return target;
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::size_t Testtag::ByteSizeLong(const MessageLite& base) {
  const Testtag& this_ = static_cast<const Testtag&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::size_t Testtag::ByteSizeLong() const {
  const Testtag& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
  // @@protoc_insertion_point(message_byte_size_start:Testtag)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void)cached_has_bits;

  ::_pbi::Prefetch5LinesFrom7Lines(&this_);
  cached_has_bits = this_._impl_._has_bits_[0];
  if ((cached_has_bits & 0x00000003u) != 0) {
    // string tag_key = 1;
    if ((cached_has_bits & 0x00000001u) != 0) {
      if (!this_._internal_tag_key().empty()) {
        total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                        this_._internal_tag_key());
      }
    }
    // string tag_value = 2;
    if ((cached_has_bits & 0x00000002u) != 0) {
      if (!this_._internal_tag_value().empty()) {
        total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                        this_._internal_tag_value());
      }
    }
  }
  return this_.MaybeComputeUnknownFieldsSize(total_size,
                                             &this_._impl_._cached_size_);
}

void Testtag::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<Testtag*>(&to_msg);
  auto& from = static_cast<const Testtag&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:Testtag)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._impl_._has_bits_[0];
  if ((cached_has_bits & 0x00000003u) != 0) {
    if ((cached_has_bits & 0x00000001u) != 0) {
      if (!from._internal_tag_key().empty()) {
        _this->_internal_set_tag_key(from._internal_tag_key());
      } else {
        if (_this->_impl_.tag_key_.IsDefault()) {
          _this->_internal_set_tag_key("");
        }
      }
    }
    if ((cached_has_bits & 0x00000002u) != 0) {
      if (!from._internal_tag_value().empty()) {
        _this->_internal_set_tag_value(from._internal_tag_value());
      } else {
        if (_this->_impl_.tag_value_.IsDefault()) {
          _this->_internal_set_tag_value("");
        }
      }
    }
  }
  _this->_impl_._has_bits_[0] |= cached_has_bits;
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void Testtag::CopyFrom(const Testtag& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:Testtag)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void Testtag::InternalSwap(Testtag* PROTOBUF_RESTRICT PROTOBUF_NONNULL other) {
  using ::std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.tag_key_, &other->_impl_.tag_key_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.tag_value_, &other->_impl_.tag_value_, arena);
}

::google::protobuf::Metadata Testtag::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class Testimmunetag::_Internal {
 public:
  using HasBits =
      decltype(::std::declval<Testimmunetag>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
      8 * PROTOBUF_FIELD_OFFSET(Testimmunetag, _impl_._has_bits_);
};

Testimmunetag::Testimmunetag(::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, Testimmunetag_class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:Testimmunetag)
}
PROTOBUF_NDEBUG_INLINE Testimmunetag::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const Impl_& from,
    const ::Testimmunetag& from_msg)
      : _has_bits_{from._has_bits_},
        _cached_size_{0},
        immunetag_key_(arena, from.immunetag_key_),
        immunetag_value_(arena, from.immunetag_value_) {}

Testimmunetag::Testimmunetag(
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena,
    const Testimmunetag& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, Testimmunetag_class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  Testimmunetag* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);

  // @@protoc_insertion_point(copy_constructor:Testimmunetag)
}
PROTOBUF_NDEBUG_INLINE Testimmunetag::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
      : _cached_size_{0},
        immunetag_key_(arena),
        immunetag_value_(arena) {}

inline void Testimmunetag::SharedCtor(::_pb::Arena* PROTOBUF_NULLABLE arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
}
Testimmunetag::~Testimmunetag() {
  // @@protoc_insertion_point(destructor:Testimmunetag)
  SharedDtor(*this);
}
inline void Testimmunetag::SharedDtor(MessageLite& self) {
  Testimmunetag& this_ = static_cast<Testimmunetag&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  this_._impl_.immunetag_key_.Destroy();
  this_._impl_.immunetag_value_.Destroy();
  this_._impl_.~Impl_();
}

inline void* PROTOBUF_NONNULL Testimmunetag::PlacementNew_(
    const void* PROTOBUF_NONNULL, void* PROTOBUF_NONNULL mem,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena) {
  return ::new (mem) Testimmunetag(arena);
}
constexpr auto Testimmunetag::InternalNewImpl_() {
  return ::google::protobuf::internal::MessageCreator::CopyInit(sizeof(Testimmunetag),
                                            alignof(Testimmunetag));
}
constexpr auto Testimmunetag::InternalGenerateClassData_() {
  return ::google::protobuf::internal::ClassDataFull{
      ::google::protobuf::internal::ClassData{
          &_Testimmunetag_default_instance_._instance,
          &_table_.header,
          nullptr,  // OnDemandRegisterArenaDtor
          nullptr,  // IsInitialized
          &Testimmunetag::MergeImpl,
          ::google::protobuf::Message::GetNewImpl<Testimmunetag>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
          &Testimmunetag::SharedDtor,
          ::google::protobuf::Message::GetClearImpl<Testimmunetag>(), &Testimmunetag::ByteSizeLong,
              &Testimmunetag::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
          PROTOBUF_FIELD_OFFSET(Testimmunetag, _impl_._cached_size_),
          false,
      },
      &Testimmunetag::kDescriptorMethods,
      &descriptor_table_test_5ftable_2eproto,
      nullptr,  // tracker
  };
}

PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 const
    ::google::protobuf::internal::ClassDataFull Testimmunetag_class_data_ =
        Testimmunetag::InternalGenerateClassData_();

PROTOBUF_ATTRIBUTE_WEAK const ::google::protobuf::internal::ClassData* PROTOBUF_NONNULL
Testimmunetag::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&Testimmunetag_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(Testimmunetag_class_data_.tc_table);
  return Testimmunetag_class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<1, 2, 0, 50, 2>
Testimmunetag::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(Testimmunetag, _impl_._has_bits_),
    0, // no _extensions_
    2, 8,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967292,  // skipmap
    offsetof(decltype(_table_), field_entries),
    2,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    Testimmunetag_class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::Testimmunetag>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // string immunetag_value = 2;
    {::_pbi::TcParser::FastUS1,
     {18, 1, 0, PROTOBUF_FIELD_OFFSET(Testimmunetag, _impl_.immunetag_value_)}},
    // string immunetag_key = 1;
    {::_pbi::TcParser::FastUS1,
     {10, 0, 0, PROTOBUF_FIELD_OFFSET(Testimmunetag, _impl_.immunetag_key_)}},
  }}, {{
    65535, 65535
  }}, {{
    // string immunetag_key = 1;
    {PROTOBUF_FIELD_OFFSET(Testimmunetag, _impl_.immunetag_key_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // string immunetag_value = 2;
    {PROTOBUF_FIELD_OFFSET(Testimmunetag, _impl_.immunetag_value_), _Internal::kHasBitsOffset + 1, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kUtf8String | ::_fl::kRepAString)},
  }},
  // no aux_entries
  {{
    "\15\15\17\0\0\0\0\0"
    "Testimmunetag"
    "immunetag_key"
    "immunetag_value"
  }},
};
PROTOBUF_NOINLINE void Testimmunetag::Clear() {
// @@protoc_insertion_point(message_clear_start:Testimmunetag)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if ((cached_has_bits & 0x00000003u) != 0) {
    if ((cached_has_bits & 0x00000001u) != 0) {
      _impl_.immunetag_key_.ClearNonDefaultToEmpty();
    }
    if ((cached_has_bits & 0x00000002u) != 0) {
      _impl_.immunetag_value_.ClearNonDefaultToEmpty();
    }
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::uint8_t* PROTOBUF_NONNULL Testimmunetag::_InternalSerialize(
    const ::google::protobuf::MessageLite& base, ::uint8_t* PROTOBUF_NONNULL target,
    ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) {
  const Testimmunetag& this_ = static_cast<const Testimmunetag&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::uint8_t* PROTOBUF_NONNULL Testimmunetag::_InternalSerialize(
    ::uint8_t* PROTOBUF_NONNULL target,
    ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const {
  const Testimmunetag& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
  // @@protoc_insertion_point(serialize_to_array_start:Testimmunetag)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  // string immunetag_key = 1;
  if ((this_._impl_._has_bits_[0] & 0x00000001u) != 0) {
    if (!this_._internal_immunetag_key().empty()) {
      const ::std::string& _s = this_._internal_immunetag_key();
      ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
          _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "Testimmunetag.immunetag_key");
      target = stream->WriteStringMaybeAliased(1, _s, target);
    }
  }

  // string immunetag_value = 2;
  if ((this_._impl_._has_bits_[0] & 0x00000002u) != 0) {
    if (!this_._internal_immunetag_value().empty()) {
      const ::std::string& _s = this_._internal_immunetag_value();
      ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
          _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "Testimmunetag.immunetag_value");
      target = stream->WriteStringMaybeAliased(2, _s, target);
    }
  }

  if (ABSL_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:Testimmunetag)
  return target;
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::size_t Testimmunetag::ByteSizeLong(const MessageLite& base) {
  const Testimmunetag& this_ = static_cast<const Testimmunetag&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::size_t Testimmunetag::ByteSizeLong() const {
  const Testimmunetag& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
  // @@protoc_insertion_point(message_byte_size_start:Testimmunetag)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void)cached_has_bits;

  ::_pbi::Prefetch5LinesFrom7Lines(&this_);
  cached_has_bits = this_._impl_._has_bits_[0];
  if ((cached_has_bits & 0x00000003u) != 0) {
    // string immunetag_key = 1;
    if ((cached_has_bits & 0x00000001u) != 0) {
      if (!this_._internal_immunetag_key().empty()) {
        total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                        this_._internal_immunetag_key());
      }
    }
    // string immunetag_value = 2;
    if ((cached_has_bits & 0x00000002u) != 0) {
      if (!this_._internal_immunetag_value().empty()) {
        total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                        this_._internal_immunetag_value());
      }
    }
  }
  return this_.MaybeComputeUnknownFieldsSize(total_size,
                                             &this_._impl_._cached_size_);
}

void Testimmunetag::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<Testimmunetag*>(&to_msg);
  auto& from = static_cast<const Testimmunetag&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:Testimmunetag)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._impl_._has_bits_[0];
  if ((cached_has_bits & 0x00000003u) != 0) {
    if ((cached_has_bits & 0x00000001u) != 0) {
      if (!from._internal_immunetag_key().empty()) {
        _this->_internal_set_immunetag_key(from._internal_immunetag_key());
      } else {
        if (_this->_impl_.immunetag_key_.IsDefault()) {
          _this->_internal_set_immunetag_key("");
        }
      }
    }
    if ((cached_has_bits & 0x00000002u) != 0) {
      if (!from._internal_immunetag_value().empty()) {
        _this->_internal_set_immunetag_value(from._internal_immunetag_value());
      } else {
        if (_this->_impl_.immunetag_value_.IsDefault()) {
          _this->_internal_set_immunetag_value("");
        }
      }
    }
  }
  _this->_impl_._has_bits_[0] |= cached_has_bits;
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void Testimmunetag::CopyFrom(const Testimmunetag& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:Testimmunetag)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void Testimmunetag::InternalSwap(Testimmunetag* PROTOBUF_RESTRICT PROTOBUF_NONNULL other) {
  using ::std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.immunetag_key_, &other->_impl_.immunetag_key_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.immunetag_value_, &other->_impl_.immunetag_value_, arena);
}

::google::protobuf::Metadata Testimmunetag::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class Testtestobj::_Internal {
 public:
  using HasBits =
      decltype(::std::declval<Testtestobj>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
      8 * PROTOBUF_FIELD_OFFSET(Testtestobj, _impl_._has_bits_);
};

Testtestobj::Testtestobj(::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, Testtestobj_class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:Testtestobj)
}
Testtestobj::Testtestobj(
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const Testtestobj& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, Testtestobj_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(from._impl_) {
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
}
PROTOBUF_NDEBUG_INLINE Testtestobj::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
      : _cached_size_{0} {}

inline void Testtestobj::SharedCtor(::_pb::Arena* PROTOBUF_NULLABLE arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, testobj_key_),
           0,
           offsetof(Impl_, testobj_value_) -
               offsetof(Impl_, testobj_key_) +
               sizeof(Impl_::testobj_value_));
}
Testtestobj::~Testtestobj() {
  // @@protoc_insertion_point(destructor:Testtestobj)
  SharedDtor(*this);
}
inline void Testtestobj::SharedDtor(MessageLite& self) {
  Testtestobj& this_ = static_cast<Testtestobj&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  this_._impl_.~Impl_();
}

inline void* PROTOBUF_NONNULL Testtestobj::PlacementNew_(
    const void* PROTOBUF_NONNULL, void* PROTOBUF_NONNULL mem,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena) {
  return ::new (mem) Testtestobj(arena);
}
constexpr auto Testtestobj::InternalNewImpl_() {
  return ::google::protobuf::internal::MessageCreator::ZeroInit(sizeof(Testtestobj),
                                            alignof(Testtestobj));
}
constexpr auto Testtestobj::InternalGenerateClassData_() {
  return ::google::protobuf::internal::ClassDataFull{
      ::google::protobuf::internal::ClassData{
          &_Testtestobj_default_instance_._instance,
          &_table_.header,
          nullptr,  // OnDemandRegisterArenaDtor
          nullptr,  // IsInitialized
          &Testtestobj::MergeImpl,
          ::google::protobuf::Message::GetNewImpl<Testtestobj>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
          &Testtestobj::SharedDtor,
          ::google::protobuf::Message::GetClearImpl<Testtestobj>(), &Testtestobj::ByteSizeLong,
              &Testtestobj::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
          PROTOBUF_FIELD_OFFSET(Testtestobj, _impl_._cached_size_),
          false,
      },
      &Testtestobj::kDescriptorMethods,
      &descriptor_table_test_5ftable_2eproto,
      nullptr,  // tracker
  };
}

PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 const
    ::google::protobuf::internal::ClassDataFull Testtestobj_class_data_ =
        Testtestobj::InternalGenerateClassData_();

PROTOBUF_ATTRIBUTE_WEAK const ::google::protobuf::internal::ClassData* PROTOBUF_NONNULL
Testtestobj::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&Testtestobj_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(Testtestobj_class_data_.tc_table);
  return Testtestobj_class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<1, 2, 0, 0, 2>
Testtestobj::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(Testtestobj, _impl_._has_bits_),
    0, // no _extensions_
    2, 8,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967292,  // skipmap
    offsetof(decltype(_table_), field_entries),
    2,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    Testtestobj_class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::Testtestobj>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // uint32 testobj_value = 2;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(Testtestobj, _impl_.testobj_value_), 1>(),
     {16, 1, 0, PROTOBUF_FIELD_OFFSET(Testtestobj, _impl_.testobj_value_)}},
    // uint32 testobj_key = 1;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(Testtestobj, _impl_.testobj_key_), 0>(),
     {8, 0, 0, PROTOBUF_FIELD_OFFSET(Testtestobj, _impl_.testobj_key_)}},
  }}, {{
    65535, 65535
  }}, {{
    // uint32 testobj_key = 1;
    {PROTOBUF_FIELD_OFFSET(Testtestobj, _impl_.testobj_key_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kUInt32)},
    // uint32 testobj_value = 2;
    {PROTOBUF_FIELD_OFFSET(Testtestobj, _impl_.testobj_value_), _Internal::kHasBitsOffset + 1, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kUInt32)},
  }},
  // no aux_entries
  {{
  }},
};
PROTOBUF_NOINLINE void Testtestobj::Clear() {
// @@protoc_insertion_point(message_clear_start:Testtestobj)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if ((cached_has_bits & 0x00000003u) != 0) {
    ::memset(&_impl_.testobj_key_, 0, static_cast<::size_t>(
        reinterpret_cast<char*>(&_impl_.testobj_value_) -
        reinterpret_cast<char*>(&_impl_.testobj_key_)) + sizeof(_impl_.testobj_value_));
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::uint8_t* PROTOBUF_NONNULL Testtestobj::_InternalSerialize(
    const ::google::protobuf::MessageLite& base, ::uint8_t* PROTOBUF_NONNULL target,
    ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) {
  const Testtestobj& this_ = static_cast<const Testtestobj&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::uint8_t* PROTOBUF_NONNULL Testtestobj::_InternalSerialize(
    ::uint8_t* PROTOBUF_NONNULL target,
    ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const {
  const Testtestobj& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
  // @@protoc_insertion_point(serialize_to_array_start:Testtestobj)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  // uint32 testobj_key = 1;
  if ((this_._impl_._has_bits_[0] & 0x00000001u) != 0) {
    if (this_._internal_testobj_key() != 0) {
      target = stream->EnsureSpace(target);
      target = ::_pbi::WireFormatLite::WriteUInt32ToArray(
          1, this_._internal_testobj_key(), target);
    }
  }

  // uint32 testobj_value = 2;
  if ((this_._impl_._has_bits_[0] & 0x00000002u) != 0) {
    if (this_._internal_testobj_value() != 0) {
      target = stream->EnsureSpace(target);
      target = ::_pbi::WireFormatLite::WriteUInt32ToArray(
          2, this_._internal_testobj_value(), target);
    }
  }

  if (ABSL_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:Testtestobj)
  return target;
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::size_t Testtestobj::ByteSizeLong(const MessageLite& base) {
  const Testtestobj& this_ = static_cast<const Testtestobj&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::size_t Testtestobj::ByteSizeLong() const {
  const Testtestobj& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
  // @@protoc_insertion_point(message_byte_size_start:Testtestobj)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void)cached_has_bits;

  ::_pbi::Prefetch5LinesFrom7Lines(&this_);
  cached_has_bits = this_._impl_._has_bits_[0];
  if ((cached_has_bits & 0x00000003u) != 0) {
    // uint32 testobj_key = 1;
    if ((cached_has_bits & 0x00000001u) != 0) {
      if (this_._internal_testobj_key() != 0) {
        total_size += ::_pbi::WireFormatLite::UInt32SizePlusOne(
            this_._internal_testobj_key());
      }
    }
    // uint32 testobj_value = 2;
    if ((cached_has_bits & 0x00000002u) != 0) {
      if (this_._internal_testobj_value() != 0) {
        total_size += ::_pbi::WireFormatLite::UInt32SizePlusOne(
            this_._internal_testobj_value());
      }
    }
  }
  return this_.MaybeComputeUnknownFieldsSize(total_size,
                                             &this_._impl_._cached_size_);
}

void Testtestobj::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<Testtestobj*>(&to_msg);
  auto& from = static_cast<const Testtestobj&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:Testtestobj)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._impl_._has_bits_[0];
  if ((cached_has_bits & 0x00000003u) != 0) {
    if ((cached_has_bits & 0x00000001u) != 0) {
      if (from._internal_testobj_key() != 0) {
        _this->_impl_.testobj_key_ = from._impl_.testobj_key_;
      }
    }
    if ((cached_has_bits & 0x00000002u) != 0) {
      if (from._internal_testobj_value() != 0) {
        _this->_impl_.testobj_value_ = from._impl_.testobj_value_;
      }
    }
  }
  _this->_impl_._has_bits_[0] |= cached_has_bits;
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void Testtestobj::CopyFrom(const Testtestobj& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:Testtestobj)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void Testtestobj::InternalSwap(Testtestobj* PROTOBUF_RESTRICT PROTOBUF_NONNULL other) {
  using ::std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(Testtestobj, _impl_.testobj_value_)
      + sizeof(Testtestobj::_impl_.testobj_value_)
      - PROTOBUF_FIELD_OFFSET(Testtestobj, _impl_.testobj_key_)>(
          reinterpret_cast<char*>(&_impl_.testobj_key_),
          reinterpret_cast<char*>(&other->_impl_.testobj_key_));
}

::google::protobuf::Metadata Testtestobj::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

#if defined(PROTOBUF_CUSTOM_VTABLE)
TestTable_TagEntry_DoNotUse::TestTable_TagEntry_DoNotUse()
    : SuperType(TestTable_TagEntry_DoNotUse_class_data_.base()) {}
TestTable_TagEntry_DoNotUse::TestTable_TagEntry_DoNotUse(::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
    : SuperType(arena, TestTable_TagEntry_DoNotUse_class_data_.base()) {}
#else   // PROTOBUF_CUSTOM_VTABLE
TestTable_TagEntry_DoNotUse::TestTable_TagEntry_DoNotUse() : SuperType() {}
TestTable_TagEntry_DoNotUse::TestTable_TagEntry_DoNotUse(::google::protobuf::Arena* PROTOBUF_NULLABLE arena) : SuperType(arena) {}
#endif  // PROTOBUF_CUSTOM_VTABLE
inline void* PROTOBUF_NONNULL TestTable_TagEntry_DoNotUse::PlacementNew_(
    const void* PROTOBUF_NONNULL, void* PROTOBUF_NONNULL mem,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena) {
  return ::new (mem) TestTable_TagEntry_DoNotUse(arena);
}
constexpr auto TestTable_TagEntry_DoNotUse::InternalNewImpl_() {
  return ::google::protobuf::internal::MessageCreator::CopyInit(sizeof(TestTable_TagEntry_DoNotUse),
                                            alignof(TestTable_TagEntry_DoNotUse));
}
constexpr auto TestTable_TagEntry_DoNotUse::InternalGenerateClassData_() {
  return ::google::protobuf::internal::ClassDataFull{
      ::google::protobuf::internal::ClassData{
          &_TestTable_TagEntry_DoNotUse_default_instance_._instance,
          &_table_.header,
          nullptr,  // OnDemandRegisterArenaDtor
          nullptr,  // IsInitialized
          &TestTable_TagEntry_DoNotUse::MergeImpl,
          ::google::protobuf::Message::GetNewImpl<TestTable_TagEntry_DoNotUse>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
          &TestTable_TagEntry_DoNotUse::SharedDtor,
          static_cast<void (::google::protobuf::MessageLite::*)()>(&TestTable_TagEntry_DoNotUse::ClearImpl),
              ::google::protobuf::Message::ByteSizeLongImpl, ::google::protobuf::Message::_InternalSerializeImpl
              ,
#endif  // PROTOBUF_CUSTOM_VTABLE
          PROTOBUF_FIELD_OFFSET(TestTable_TagEntry_DoNotUse, _impl_._cached_size_),
          false,
      },
      &TestTable_TagEntry_DoNotUse::kDescriptorMethods,
      &descriptor_table_test_5ftable_2eproto,
      nullptr,  // tracker
  };
}

PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 const
    ::google::protobuf::internal::ClassDataFull TestTable_TagEntry_DoNotUse_class_data_ =
        TestTable_TagEntry_DoNotUse::InternalGenerateClassData_();

PROTOBUF_ATTRIBUTE_WEAK const ::google::protobuf::internal::ClassData* PROTOBUF_NONNULL
TestTable_TagEntry_DoNotUse::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&TestTable_TagEntry_DoNotUse_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(TestTable_TagEntry_DoNotUse_class_data_.tc_table);
  return TestTable_TagEntry_DoNotUse_class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<1, 2, 0, 35, 2>
TestTable_TagEntry_DoNotUse::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(TestTable_TagEntry_DoNotUse, _impl_._has_bits_),
    0, // no _extensions_
    2, 8,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967292,  // skipmap
    offsetof(decltype(_table_), field_entries),
    2,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    TestTable_TagEntry_DoNotUse_class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::DiscardEverythingFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::TestTable_TagEntry_DoNotUse>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // string value = 2;
    {::_pbi::TcParser::FastUS1,
     {18, 1, 0, PROTOBUF_FIELD_OFFSET(TestTable_TagEntry_DoNotUse, _impl_.value_)}},
    // string key = 1;
    {::_pbi::TcParser::FastUS1,
     {10, 0, 0, PROTOBUF_FIELD_OFFSET(TestTable_TagEntry_DoNotUse, _impl_.key_)}},
  }}, {{
    65535, 65535
  }}, {{
    // string key = 1;
    {PROTOBUF_FIELD_OFFSET(TestTable_TagEntry_DoNotUse, _impl_.key_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // string value = 2;
    {PROTOBUF_FIELD_OFFSET(TestTable_TagEntry_DoNotUse, _impl_.value_), _Internal::kHasBitsOffset + 1, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kUtf8String | ::_fl::kRepAString)},
  }},
  // no aux_entries
  {{
    "\22\3\5\0\0\0\0\0"
    "TestTable.TagEntry"
    "key"
    "value"
  }},
};
// ===================================================================

#if defined(PROTOBUF_CUSTOM_VTABLE)
TestTable_ImmunetagEntry_DoNotUse::TestTable_ImmunetagEntry_DoNotUse()
    : SuperType(TestTable_ImmunetagEntry_DoNotUse_class_data_.base()) {}
TestTable_ImmunetagEntry_DoNotUse::TestTable_ImmunetagEntry_DoNotUse(::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
    : SuperType(arena, TestTable_ImmunetagEntry_DoNotUse_class_data_.base()) {}
#else   // PROTOBUF_CUSTOM_VTABLE
TestTable_ImmunetagEntry_DoNotUse::TestTable_ImmunetagEntry_DoNotUse() : SuperType() {}
TestTable_ImmunetagEntry_DoNotUse::TestTable_ImmunetagEntry_DoNotUse(::google::protobuf::Arena* PROTOBUF_NULLABLE arena) : SuperType(arena) {}
#endif  // PROTOBUF_CUSTOM_VTABLE
inline void* PROTOBUF_NONNULL TestTable_ImmunetagEntry_DoNotUse::PlacementNew_(
    const void* PROTOBUF_NONNULL, void* PROTOBUF_NONNULL mem,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena) {
  return ::new (mem) TestTable_ImmunetagEntry_DoNotUse(arena);
}
constexpr auto TestTable_ImmunetagEntry_DoNotUse::InternalNewImpl_() {
  return ::google::protobuf::internal::MessageCreator::CopyInit(sizeof(TestTable_ImmunetagEntry_DoNotUse),
                                            alignof(TestTable_ImmunetagEntry_DoNotUse));
}
constexpr auto TestTable_ImmunetagEntry_DoNotUse::InternalGenerateClassData_() {
  return ::google::protobuf::internal::ClassDataFull{
      ::google::protobuf::internal::ClassData{
          &_TestTable_ImmunetagEntry_DoNotUse_default_instance_._instance,
          &_table_.header,
          nullptr,  // OnDemandRegisterArenaDtor
          nullptr,  // IsInitialized
          &TestTable_ImmunetagEntry_DoNotUse::MergeImpl,
          ::google::protobuf::Message::GetNewImpl<TestTable_ImmunetagEntry_DoNotUse>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
          &TestTable_ImmunetagEntry_DoNotUse::SharedDtor,
          static_cast<void (::google::protobuf::MessageLite::*)()>(&TestTable_ImmunetagEntry_DoNotUse::ClearImpl),
              ::google::protobuf::Message::ByteSizeLongImpl, ::google::protobuf::Message::_InternalSerializeImpl
              ,
#endif  // PROTOBUF_CUSTOM_VTABLE
          PROTOBUF_FIELD_OFFSET(TestTable_ImmunetagEntry_DoNotUse, _impl_._cached_size_),
          false,
      },
      &TestTable_ImmunetagEntry_DoNotUse::kDescriptorMethods,
      &descriptor_table_test_5ftable_2eproto,
      nullptr,  // tracker
  };
}

PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 const
    ::google::protobuf::internal::ClassDataFull TestTable_ImmunetagEntry_DoNotUse_class_data_ =
        TestTable_ImmunetagEntry_DoNotUse::InternalGenerateClassData_();

PROTOBUF_ATTRIBUTE_WEAK const ::google::protobuf::internal::ClassData* PROTOBUF_NONNULL
TestTable_ImmunetagEntry_DoNotUse::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&TestTable_ImmunetagEntry_DoNotUse_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(TestTable_ImmunetagEntry_DoNotUse_class_data_.tc_table);
  return TestTable_ImmunetagEntry_DoNotUse_class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<1, 2, 0, 41, 2>
TestTable_ImmunetagEntry_DoNotUse::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(TestTable_ImmunetagEntry_DoNotUse, _impl_._has_bits_),
    0, // no _extensions_
    2, 8,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967292,  // skipmap
    offsetof(decltype(_table_), field_entries),
    2,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    TestTable_ImmunetagEntry_DoNotUse_class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::DiscardEverythingFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::TestTable_ImmunetagEntry_DoNotUse>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // string value = 2;
    {::_pbi::TcParser::FastUS1,
     {18, 1, 0, PROTOBUF_FIELD_OFFSET(TestTable_ImmunetagEntry_DoNotUse, _impl_.value_)}},
    // string key = 1;
    {::_pbi::TcParser::FastUS1,
     {10, 0, 0, PROTOBUF_FIELD_OFFSET(TestTable_ImmunetagEntry_DoNotUse, _impl_.key_)}},
  }}, {{
    65535, 65535
  }}, {{
    // string key = 1;
    {PROTOBUF_FIELD_OFFSET(TestTable_ImmunetagEntry_DoNotUse, _impl_.key_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // string value = 2;
    {PROTOBUF_FIELD_OFFSET(TestTable_ImmunetagEntry_DoNotUse, _impl_.value_), _Internal::kHasBitsOffset + 1, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kUtf8String | ::_fl::kRepAString)},
  }},
  // no aux_entries
  {{
    "\30\3\5\0\0\0\0\0"
    "TestTable.ImmunetagEntry"
    "key"
    "value"
  }},
};
// ===================================================================

class TestTable::_Internal {
 public:
  using HasBits =
      decltype(::std::declval<TestTable>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
      8 * PROTOBUF_FIELD_OFFSET(TestTable, _impl_._has_bits_);
};

TestTable::TestTable(::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, TestTable_class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:TestTable)
}
PROTOBUF_NDEBUG_INLINE TestTable::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const Impl_& from,
    const ::TestTable& from_msg)
      : _has_bits_{from._has_bits_},
        _cached_size_{0},
        tag_{visibility, arena, from.tag_},
        immunetag_{visibility, arena, from.immunetag_},
        testobj_{visibility, arena, from.testobj_},
        effect_{visibility, arena, from.effect_},
        _effect_cached_byte_size_{0} {}

TestTable::TestTable(
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena,
    const TestTable& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, TestTable_class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  TestTable* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);
  ::memcpy(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, id_),
           reinterpret_cast<const char *>(&from._impl_) +
               offsetof(Impl_, id_),
           offsetof(Impl_, level_) -
               offsetof(Impl_, id_) +
               sizeof(Impl_::level_));

  // @@protoc_insertion_point(copy_constructor:TestTable)
}
PROTOBUF_NDEBUG_INLINE TestTable::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
      : _cached_size_{0},
        tag_{visibility, arena},
        immunetag_{visibility, arena},
        testobj_{visibility, arena},
        effect_{visibility, arena},
        _effect_cached_byte_size_{0} {}

inline void TestTable::SharedCtor(::_pb::Arena* PROTOBUF_NULLABLE arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, id_),
           0,
           offsetof(Impl_, level_) -
               offsetof(Impl_, id_) +
               sizeof(Impl_::level_));
}
TestTable::~TestTable() {
  // @@protoc_insertion_point(destructor:TestTable)
  SharedDtor(*this);
}
inline void TestTable::SharedDtor(MessageLite& self) {
  TestTable& this_ = static_cast<TestTable&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  this_._impl_.~Impl_();
}

inline void* PROTOBUF_NONNULL TestTable::PlacementNew_(
    const void* PROTOBUF_NONNULL, void* PROTOBUF_NONNULL mem,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena) {
  return ::new (mem) TestTable(arena);
}
constexpr auto TestTable::InternalNewImpl_() {
  constexpr auto arena_bits = ::google::protobuf::internal::EncodePlacementArenaOffsets({
      PROTOBUF_FIELD_OFFSET(TestTable, _impl_.tag_) +
          decltype(TestTable::_impl_.tag_)::
              InternalGetArenaOffset(
                  ::google::protobuf::Message::internal_visibility()),
      PROTOBUF_FIELD_OFFSET(TestTable, _impl_.tag_) +
          decltype(TestTable::_impl_.tag_)::
              InternalGetArenaOffsetAlt(
                  ::google::protobuf::Message::internal_visibility()),
      PROTOBUF_FIELD_OFFSET(TestTable, _impl_.immunetag_) +
          decltype(TestTable::_impl_.immunetag_)::
              InternalGetArenaOffset(
                  ::google::protobuf::Message::internal_visibility()),
      PROTOBUF_FIELD_OFFSET(TestTable, _impl_.immunetag_) +
          decltype(TestTable::_impl_.immunetag_)::
              InternalGetArenaOffsetAlt(
                  ::google::protobuf::Message::internal_visibility()),
      PROTOBUF_FIELD_OFFSET(TestTable, _impl_.testobj_) +
          decltype(TestTable::_impl_.testobj_)::
              InternalGetArenaOffset(
                  ::google::protobuf::Message::internal_visibility()),
      PROTOBUF_FIELD_OFFSET(TestTable, _impl_.effect_) +
          decltype(TestTable::_impl_.effect_)::
              InternalGetArenaOffset(
                  ::google::protobuf::Message::internal_visibility()),
  });
  if (arena_bits.has_value()) {
    return ::google::protobuf::internal::MessageCreator::CopyInit(
        sizeof(TestTable), alignof(TestTable), *arena_bits);
  } else {
    return ::google::protobuf::internal::MessageCreator(&TestTable::PlacementNew_,
                                 sizeof(TestTable),
                                 alignof(TestTable));
  }
}
constexpr auto TestTable::InternalGenerateClassData_() {
  return ::google::protobuf::internal::ClassDataFull{
      ::google::protobuf::internal::ClassData{
          &_TestTable_default_instance_._instance,
          &_table_.header,
          nullptr,  // OnDemandRegisterArenaDtor
          nullptr,  // IsInitialized
          &TestTable::MergeImpl,
          ::google::protobuf::Message::GetNewImpl<TestTable>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
          &TestTable::SharedDtor,
          ::google::protobuf::Message::GetClearImpl<TestTable>(), &TestTable::ByteSizeLong,
              &TestTable::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
          PROTOBUF_FIELD_OFFSET(TestTable, _impl_._cached_size_),
          false,
      },
      &TestTable::kDescriptorMethods,
      &descriptor_table_test_5ftable_2eproto,
      nullptr,  // tracker
  };
}

PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 const
    ::google::protobuf::internal::ClassDataFull TestTable_class_data_ =
        TestTable::InternalGenerateClassData_();

PROTOBUF_ATTRIBUTE_WEAK const ::google::protobuf::internal::ClassData* PROTOBUF_NONNULL
TestTable::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&TestTable_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(TestTable_class_data_.tc_table);
  return TestTable_class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<3, 6, 3, 30, 2>
TestTable::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(TestTable, _impl_._has_bits_),
    0, // no _extensions_
    6, 56,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967232,  // skipmap
    offsetof(decltype(_table_), field_entries),
    6,  // num_field_entries
    3,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    TestTable_class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::TestTable>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
    // uint32 id = 1;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(TestTable, _impl_.id_), 0>(),
     {8, 0, 0, PROTOBUF_FIELD_OFFSET(TestTable, _impl_.id_)}},
    {::_pbi::TcParser::MiniParse, {}},
    {::_pbi::TcParser::MiniParse, {}},
    // uint32 level = 4;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(TestTable, _impl_.level_), 1>(),
     {32, 1, 0, PROTOBUF_FIELD_OFFSET(TestTable, _impl_.level_)}},
    // repeated .Testtestobj testobj = 5;
    {::_pbi::TcParser::FastMtR1,
     {42, 63, 0, PROTOBUF_FIELD_OFFSET(TestTable, _impl_.testobj_)}},
    // repeated uint32 effect = 6;
    {::_pbi::TcParser::FastV32P1,
     {50, 63, 0, PROTOBUF_FIELD_OFFSET(TestTable, _impl_.effect_)}},
    {::_pbi::TcParser::MiniParse, {}},
  }}, {{
    65535, 65535
  }}, {{
    // uint32 id = 1;
    {PROTOBUF_FIELD_OFFSET(TestTable, _impl_.id_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kUInt32)},
    // map<string, string> tag = 2;
    {PROTOBUF_FIELD_OFFSET(TestTable, _impl_.tag_), -1, 1,
    (0 | ::_fl::kFcRepeated | ::_fl::kMap)},
    // map<string, string> immunetag = 3;
    {PROTOBUF_FIELD_OFFSET(TestTable, _impl_.immunetag_), -1, 2,
    (0 | ::_fl::kFcRepeated | ::_fl::kMap)},
    // uint32 level = 4;
    {PROTOBUF_FIELD_OFFSET(TestTable, _impl_.level_), _Internal::kHasBitsOffset + 1, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kUInt32)},
    // repeated .Testtestobj testobj = 5;
    {PROTOBUF_FIELD_OFFSET(TestTable, _impl_.testobj_), -1, 0,
    (0 | ::_fl::kFcRepeated | ::_fl::kMessage | ::_fl::kTvTable)},
    // repeated uint32 effect = 6;
    {PROTOBUF_FIELD_OFFSET(TestTable, _impl_.effect_), -1, 0,
    (0 | ::_fl::kFcRepeated | ::_fl::kPackedUInt32)},
  }},
  {{
      {::_pbi::TcParser::GetTable<::Testtestobj>()},
      {::_pbi::TcParser::GetMapAuxInfo(1, 0, 0,
                                       9, 9,
                                       0)},
      {::_pbi::TcParser::GetMapAuxInfo(1, 0, 0,
                                       9, 9,
                                       0)},
  }},
  {{
    "\11\0\3\11\0\0\0\0"
    "TestTable"
    "tag"
    "immunetag"
  }},
};
PROTOBUF_NOINLINE void TestTable::Clear() {
// @@protoc_insertion_point(message_clear_start:TestTable)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.tag_.Clear();
  _impl_.immunetag_.Clear();
  _impl_.testobj_.Clear();
  _impl_.effect_.Clear();
  cached_has_bits = _impl_._has_bits_[0];
  if ((cached_has_bits & 0x00000003u) != 0) {
    ::memset(&_impl_.id_, 0, static_cast<::size_t>(
        reinterpret_cast<char*>(&_impl_.level_) -
        reinterpret_cast<char*>(&_impl_.id_)) + sizeof(_impl_.level_));
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::uint8_t* PROTOBUF_NONNULL TestTable::_InternalSerialize(
    const ::google::protobuf::MessageLite& base, ::uint8_t* PROTOBUF_NONNULL target,
    ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) {
  const TestTable& this_ = static_cast<const TestTable&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::uint8_t* PROTOBUF_NONNULL TestTable::_InternalSerialize(
    ::uint8_t* PROTOBUF_NONNULL target,
    ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const {
  const TestTable& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
  // @@protoc_insertion_point(serialize_to_array_start:TestTable)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  // uint32 id = 1;
  if ((this_._impl_._has_bits_[0] & 0x00000001u) != 0) {
    if (this_._internal_id() != 0) {
      target = stream->EnsureSpace(target);
      target = ::_pbi::WireFormatLite::WriteUInt32ToArray(
          1, this_._internal_id(), target);
    }
  }

  // map<string, string> tag = 2;
  if (!this_._internal_tag().empty()) {
    using MapType = ::google::protobuf::Map<std::string, std::string>;
    using WireHelper = _pbi::MapEntryFuncs<std::string, std::string,
                                   _pbi::WireFormatLite::TYPE_STRING,
                                   _pbi::WireFormatLite::TYPE_STRING>;
    const auto& field = this_._internal_tag();

    if (stream->IsSerializationDeterministic() && field.size() > 1) {
      for (const auto& entry : ::google::protobuf::internal::MapSorterPtr<MapType>(field)) {
        target = WireHelper::InternalSerialize(
            2, entry.first, entry.second, target, stream);
        ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            entry.first.data(), static_cast<int>(entry.first.length()),
 ::google::protobuf::internal::WireFormatLite::SERIALIZE, "TestTable.tag");
        ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            entry.second.data(), static_cast<int>(entry.second.length()),
 ::google::protobuf::internal::WireFormatLite::SERIALIZE, "TestTable.tag");
      }
    } else {
      for (const auto& entry : field) {
        target = WireHelper::InternalSerialize(
            2, entry.first, entry.second, target, stream);
        ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            entry.first.data(), static_cast<int>(entry.first.length()),
 ::google::protobuf::internal::WireFormatLite::SERIALIZE, "TestTable.tag");
        ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            entry.second.data(), static_cast<int>(entry.second.length()),
 ::google::protobuf::internal::WireFormatLite::SERIALIZE, "TestTable.tag");
      }
    }
  }

  // map<string, string> immunetag = 3;
  if (!this_._internal_immunetag().empty()) {
    using MapType = ::google::protobuf::Map<std::string, std::string>;
    using WireHelper = _pbi::MapEntryFuncs<std::string, std::string,
                                   _pbi::WireFormatLite::TYPE_STRING,
                                   _pbi::WireFormatLite::TYPE_STRING>;
    const auto& field = this_._internal_immunetag();

    if (stream->IsSerializationDeterministic() && field.size() > 1) {
      for (const auto& entry : ::google::protobuf::internal::MapSorterPtr<MapType>(field)) {
        target = WireHelper::InternalSerialize(
            3, entry.first, entry.second, target, stream);
        ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            entry.first.data(), static_cast<int>(entry.first.length()),
 ::google::protobuf::internal::WireFormatLite::SERIALIZE, "TestTable.immunetag");
        ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            entry.second.data(), static_cast<int>(entry.second.length()),
 ::google::protobuf::internal::WireFormatLite::SERIALIZE, "TestTable.immunetag");
      }
    } else {
      for (const auto& entry : field) {
        target = WireHelper::InternalSerialize(
            3, entry.first, entry.second, target, stream);
        ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            entry.first.data(), static_cast<int>(entry.first.length()),
 ::google::protobuf::internal::WireFormatLite::SERIALIZE, "TestTable.immunetag");
        ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            entry.second.data(), static_cast<int>(entry.second.length()),
 ::google::protobuf::internal::WireFormatLite::SERIALIZE, "TestTable.immunetag");
      }
    }
  }

  // uint32 level = 4;
  if ((this_._impl_._has_bits_[0] & 0x00000002u) != 0) {
    if (this_._internal_level() != 0) {
      target = stream->EnsureSpace(target);
      target = ::_pbi::WireFormatLite::WriteUInt32ToArray(
          4, this_._internal_level(), target);
    }
  }

  // repeated .Testtestobj testobj = 5;
  for (unsigned i = 0, n = static_cast<unsigned>(
                           this_._internal_testobj_size());
       i < n; i++) {
    const auto& repfield = this_._internal_testobj().Get(i);
    target =
        ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
            5, repfield, repfield.GetCachedSize(),
            target, stream);
  }

  // repeated uint32 effect = 6;
  {
    int byte_size = this_._impl_._effect_cached_byte_size_.Get();
    if (byte_size > 0) {
      target = stream->WriteUInt32Packed(
          6, this_._internal_effect(), byte_size, target);
    }
  }

  if (ABSL_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:TestTable)
  return target;
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::size_t TestTable::ByteSizeLong(const MessageLite& base) {
  const TestTable& this_ = static_cast<const TestTable&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::size_t TestTable::ByteSizeLong() const {
  const TestTable& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
  // @@protoc_insertion_point(message_byte_size_start:TestTable)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void)cached_has_bits;

  ::_pbi::Prefetch5LinesFrom7Lines(&this_);
   {
    // map<string, string> tag = 2;
    {
      total_size +=
          1 * ::google::protobuf::internal::FromIntSize(this_._internal_tag_size());
      for (const auto& entry : this_._internal_tag()) {
        total_size += _pbi::MapEntryFuncs<std::string, std::string,
                                       _pbi::WireFormatLite::TYPE_STRING,
                                       _pbi::WireFormatLite::TYPE_STRING>::ByteSizeLong(entry.first, entry.second);
      }
    }
    // map<string, string> immunetag = 3;
    {
      total_size +=
          1 * ::google::protobuf::internal::FromIntSize(this_._internal_immunetag_size());
      for (const auto& entry : this_._internal_immunetag()) {
        total_size += _pbi::MapEntryFuncs<std::string, std::string,
                                       _pbi::WireFormatLite::TYPE_STRING,
                                       _pbi::WireFormatLite::TYPE_STRING>::ByteSizeLong(entry.first, entry.second);
      }
    }
    // repeated .Testtestobj testobj = 5;
    {
      total_size += 1UL * this_._internal_testobj_size();
      for (const auto& msg : this_._internal_testobj()) {
        total_size += ::google::protobuf::internal::WireFormatLite::MessageSize(msg);
      }
    }
    // repeated uint32 effect = 6;
    {
      total_size +=
          ::_pbi::WireFormatLite::UInt32SizeWithPackedTagSize(
              this_._internal_effect(), 1,
              this_._impl_._effect_cached_byte_size_);
    }
  }
  cached_has_bits = this_._impl_._has_bits_[0];
  if ((cached_has_bits & 0x00000003u) != 0) {
    // uint32 id = 1;
    if ((cached_has_bits & 0x00000001u) != 0) {
      if (this_._internal_id() != 0) {
        total_size += ::_pbi::WireFormatLite::UInt32SizePlusOne(
            this_._internal_id());
      }
    }
    // uint32 level = 4;
    if ((cached_has_bits & 0x00000002u) != 0) {
      if (this_._internal_level() != 0) {
        total_size += ::_pbi::WireFormatLite::UInt32SizePlusOne(
            this_._internal_level());
      }
    }
  }
  return this_.MaybeComputeUnknownFieldsSize(total_size,
                                             &this_._impl_._cached_size_);
}

void TestTable::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<TestTable*>(&to_msg);
  auto& from = static_cast<const TestTable&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:TestTable)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_impl_.tag_.MergeFrom(from._impl_.tag_);
  _this->_impl_.immunetag_.MergeFrom(from._impl_.immunetag_);
  _this->_internal_mutable_testobj()->MergeFrom(
      from._internal_testobj());
  _this->_internal_mutable_effect()->MergeFrom(from._internal_effect());
  cached_has_bits = from._impl_._has_bits_[0];
  if ((cached_has_bits & 0x00000003u) != 0) {
    if ((cached_has_bits & 0x00000001u) != 0) {
      if (from._internal_id() != 0) {
        _this->_impl_.id_ = from._impl_.id_;
      }
    }
    if ((cached_has_bits & 0x00000002u) != 0) {
      if (from._internal_level() != 0) {
        _this->_impl_.level_ = from._impl_.level_;
      }
    }
  }
  _this->_impl_._has_bits_[0] |= cached_has_bits;
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void TestTable::CopyFrom(const TestTable& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:TestTable)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void TestTable::InternalSwap(TestTable* PROTOBUF_RESTRICT PROTOBUF_NONNULL other) {
  using ::std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  _impl_.tag_.InternalSwap(&other->_impl_.tag_);
  _impl_.immunetag_.InternalSwap(&other->_impl_.immunetag_);
  _impl_.testobj_.InternalSwap(&other->_impl_.testobj_);
  _impl_.effect_.InternalSwap(&other->_impl_.effect_);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(TestTable, _impl_.level_)
      + sizeof(TestTable::_impl_.level_)
      - PROTOBUF_FIELD_OFFSET(TestTable, _impl_.id_)>(
          reinterpret_cast<char*>(&_impl_.id_),
          reinterpret_cast<char*>(&other->_impl_.id_));
}

::google::protobuf::Metadata TestTable::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class TestTabledData::_Internal {
 public:
};

TestTabledData::TestTabledData(::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, TestTabledData_class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:TestTabledData)
}
PROTOBUF_NDEBUG_INLINE TestTabledData::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const Impl_& from,
    const ::TestTabledData& from_msg)
      : data_{visibility, arena, from.data_},
        _cached_size_{0} {}

TestTabledData::TestTabledData(
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena,
    const TestTabledData& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, TestTabledData_class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  TestTabledData* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);

  // @@protoc_insertion_point(copy_constructor:TestTabledData)
}
PROTOBUF_NDEBUG_INLINE TestTabledData::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
      : data_{visibility, arena},
        _cached_size_{0} {}

inline void TestTabledData::SharedCtor(::_pb::Arena* PROTOBUF_NULLABLE arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
}
TestTabledData::~TestTabledData() {
  // @@protoc_insertion_point(destructor:TestTabledData)
  SharedDtor(*this);
}
inline void TestTabledData::SharedDtor(MessageLite& self) {
  TestTabledData& this_ = static_cast<TestTabledData&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  this_._impl_.~Impl_();
}

inline void* PROTOBUF_NONNULL TestTabledData::PlacementNew_(
    const void* PROTOBUF_NONNULL, void* PROTOBUF_NONNULL mem,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena) {
  return ::new (mem) TestTabledData(arena);
}
constexpr auto TestTabledData::InternalNewImpl_() {
  constexpr auto arena_bits = ::google::protobuf::internal::EncodePlacementArenaOffsets({
      PROTOBUF_FIELD_OFFSET(TestTabledData, _impl_.data_) +
          decltype(TestTabledData::_impl_.data_)::
              InternalGetArenaOffset(
                  ::google::protobuf::Message::internal_visibility()),
  });
  if (arena_bits.has_value()) {
    return ::google::protobuf::internal::MessageCreator::ZeroInit(
        sizeof(TestTabledData), alignof(TestTabledData), *arena_bits);
  } else {
    return ::google::protobuf::internal::MessageCreator(&TestTabledData::PlacementNew_,
                                 sizeof(TestTabledData),
                                 alignof(TestTabledData));
  }
}
constexpr auto TestTabledData::InternalGenerateClassData_() {
  return ::google::protobuf::internal::ClassDataFull{
      ::google::protobuf::internal::ClassData{
          &_TestTabledData_default_instance_._instance,
          &_table_.header,
          nullptr,  // OnDemandRegisterArenaDtor
          nullptr,  // IsInitialized
          &TestTabledData::MergeImpl,
          ::google::protobuf::Message::GetNewImpl<TestTabledData>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
          &TestTabledData::SharedDtor,
          ::google::protobuf::Message::GetClearImpl<TestTabledData>(), &TestTabledData::ByteSizeLong,
              &TestTabledData::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
          PROTOBUF_FIELD_OFFSET(TestTabledData, _impl_._cached_size_),
          false,
      },
      &TestTabledData::kDescriptorMethods,
      &descriptor_table_test_5ftable_2eproto,
      nullptr,  // tracker
  };
}

PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 const
    ::google::protobuf::internal::ClassDataFull TestTabledData_class_data_ =
        TestTabledData::InternalGenerateClassData_();

PROTOBUF_ATTRIBUTE_WEAK const ::google::protobuf::internal::ClassData* PROTOBUF_NONNULL
TestTabledData::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&TestTabledData_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(TestTabledData_class_data_.tc_table);
  return TestTabledData_class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<0, 1, 1, 0, 2>
TestTabledData::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    1, 0,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967294,  // skipmap
    offsetof(decltype(_table_), field_entries),
    1,  // num_field_entries
    1,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    TestTabledData_class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::TestTabledData>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // repeated .TestTable data = 1;
    {::_pbi::TcParser::FastMtR1,
     {10, 63, 0, PROTOBUF_FIELD_OFFSET(TestTabledData, _impl_.data_)}},
  }}, {{
    65535, 65535
  }}, {{
    // repeated .TestTable data = 1;
    {PROTOBUF_FIELD_OFFSET(TestTabledData, _impl_.data_), 0, 0,
    (0 | ::_fl::kFcRepeated | ::_fl::kMessage | ::_fl::kTvTable)},
  }},
  {{
      {::_pbi::TcParser::GetTable<::TestTable>()},
  }},
  {{
  }},
};
PROTOBUF_NOINLINE void TestTabledData::Clear() {
// @@protoc_insertion_point(message_clear_start:TestTabledData)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.data_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::uint8_t* PROTOBUF_NONNULL TestTabledData::_InternalSerialize(
    const ::google::protobuf::MessageLite& base, ::uint8_t* PROTOBUF_NONNULL target,
    ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) {
  const TestTabledData& this_ = static_cast<const TestTabledData&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::uint8_t* PROTOBUF_NONNULL TestTabledData::_InternalSerialize(
    ::uint8_t* PROTOBUF_NONNULL target,
    ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const {
  const TestTabledData& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
  // @@protoc_insertion_point(serialize_to_array_start:TestTabledData)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  // repeated .TestTable data = 1;
  for (unsigned i = 0, n = static_cast<unsigned>(
                           this_._internal_data_size());
       i < n; i++) {
    const auto& repfield = this_._internal_data().Get(i);
    target =
        ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
            1, repfield, repfield.GetCachedSize(),
            target, stream);
  }

  if (ABSL_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:TestTabledData)
  return target;
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::size_t TestTabledData::ByteSizeLong(const MessageLite& base) {
  const TestTabledData& this_ = static_cast<const TestTabledData&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::size_t TestTabledData::ByteSizeLong() const {
  const TestTabledData& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
  // @@protoc_insertion_point(message_byte_size_start:TestTabledData)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void)cached_has_bits;

  ::_pbi::Prefetch5LinesFrom7Lines(&this_);
   {
    // repeated .TestTable data = 1;
    {
      total_size += 1UL * this_._internal_data_size();
      for (const auto& msg : this_._internal_data()) {
        total_size += ::google::protobuf::internal::WireFormatLite::MessageSize(msg);
      }
    }
  }
  return this_.MaybeComputeUnknownFieldsSize(total_size,
                                             &this_._impl_._cached_size_);
}

void TestTabledData::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<TestTabledData*>(&to_msg);
  auto& from = static_cast<const TestTabledData&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:TestTabledData)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_internal_mutable_data()->MergeFrom(
      from._internal_data());
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void TestTabledData::CopyFrom(const TestTabledData& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:TestTabledData)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void TestTabledData::InternalSwap(TestTabledData* PROTOBUF_RESTRICT PROTOBUF_NONNULL other) {
  using ::std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  _impl_.data_.InternalSwap(&other->_impl_.data_);
}

::google::protobuf::Metadata TestTabledData::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// @@protoc_insertion_point(namespace_scope)
namespace google {
namespace protobuf {
}  // namespace protobuf
}  // namespace google
// @@protoc_insertion_point(global_scope)
PROTOBUF_ATTRIBUTE_INIT_PRIORITY2 static ::std::false_type
    _static_init2_ [[maybe_unused]] =
        (::_pbi::AddDescriptors(&descriptor_table_test_5ftable_2eproto),
         ::std::false_type{});
#include "google/protobuf/port_undef.inc"
