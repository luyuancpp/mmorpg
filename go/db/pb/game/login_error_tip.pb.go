// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.34.2
// 	protoc        v5.29.0
// source: tip/login_error_tip.proto

package game

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type LoginError int32

const (
	LoginError_kLogin_errorOK                            LoginError = 0
	LoginError_kLoginAccountNotFound                     LoginError = 20
	LoginError_kLoginAccountPlayerFull                   LoginError = 21
	LoginError_kLoginCreatePlayerUnLoadAccount           LoginError = 22
	LoginError_kLoginCreatePlayerConnectionHasNotAccount LoginError = 23
	LoginError_kLoginUnLogin                             LoginError = 24
	LoginError_kLoginInProgress                          LoginError = 25
	LoginError_kLoginPlayerGuidError                     LoginError = 26
	LoginError_kLoginEnteringGame                        LoginError = 27
	LoginError_kLoginPlaying                             LoginError = 28
	LoginError_kLoginCreatingPlayer                      LoginError = 29
	LoginError_kLoginWaitingEnterGame                    LoginError = 30
	LoginError_kLoginEnterGameGuid                       LoginError = 31
	LoginError_kLoginAccountNameEmpty                    LoginError = 32
	LoginError_kLoginCreateConnectionAccountEmpty        LoginError = 33
	LoginError_kLoginEnterGameConnectionAccountEmpty     LoginError = 34
	LoginError_kLoginUnknownError                        LoginError = 35
	LoginError_kLoginSessionDisconnect                   LoginError = 36
	LoginError_kLoginBeKickByAnOtherAccount              LoginError = 37
	LoginError_kLoginSessionIdNotFound                   LoginError = 38
	LoginError_kLoginFsmFailed                           LoginError = 39
	LoginError_kLoginDataSerializeFailed                 LoginError = 40
	LoginError_kLoginRedisError                          LoginError = 41
	LoginError_kLoginDataParseFailed                     LoginError = 42
	LoginError_kLoginRedisSetFailed                      LoginError = 43
	LoginError_kTooManyDevices                           LoginError = 121
	LoginError_kLoginFSMLoadFailed                       LoginError = 122
	LoginError_kLoginFSMEventFailed                      LoginError = 123
	LoginError_kLoginAccountDataLoadFaile                LoginError = 124
	LoginError_kLoginSessionNotFound                     LoginError = 125
	LoginError_kLoginAccountDataLoadFailed               LoginError = 126
	LoginError_kLoginFsmInvalidEvent                     LoginError = 127
)

// Enum value maps for LoginError.
var (
	LoginError_name = map[int32]string{
		0:   "kLogin_errorOK",
		20:  "kLoginAccountNotFound",
		21:  "kLoginAccountPlayerFull",
		22:  "kLoginCreatePlayerUnLoadAccount",
		23:  "kLoginCreatePlayerConnectionHasNotAccount",
		24:  "kLoginUnLogin",
		25:  "kLoginInProgress",
		26:  "kLoginPlayerGuidError",
		27:  "kLoginEnteringGame",
		28:  "kLoginPlaying",
		29:  "kLoginCreatingPlayer",
		30:  "kLoginWaitingEnterGame",
		31:  "kLoginEnterGameGuid",
		32:  "kLoginAccountNameEmpty",
		33:  "kLoginCreateConnectionAccountEmpty",
		34:  "kLoginEnterGameConnectionAccountEmpty",
		35:  "kLoginUnknownError",
		36:  "kLoginSessionDisconnect",
		37:  "kLoginBeKickByAnOtherAccount",
		38:  "kLoginSessionIdNotFound",
		39:  "kLoginFsmFailed",
		40:  "kLoginDataSerializeFailed",
		41:  "kLoginRedisError",
		42:  "kLoginDataParseFailed",
		43:  "kLoginRedisSetFailed",
		121: "kTooManyDevices",
		122: "kLoginFSMLoadFailed",
		123: "kLoginFSMEventFailed",
		124: "kLoginAccountDataLoadFaile",
		125: "kLoginSessionNotFound",
		126: "kLoginAccountDataLoadFailed",
		127: "kLoginFsmInvalidEvent",
	}
	LoginError_value = map[string]int32{
		"kLogin_errorOK":                            0,
		"kLoginAccountNotFound":                     20,
		"kLoginAccountPlayerFull":                   21,
		"kLoginCreatePlayerUnLoadAccount":           22,
		"kLoginCreatePlayerConnectionHasNotAccount": 23,
		"kLoginUnLogin":                             24,
		"kLoginInProgress":                          25,
		"kLoginPlayerGuidError":                     26,
		"kLoginEnteringGame":                        27,
		"kLoginPlaying":                             28,
		"kLoginCreatingPlayer":                      29,
		"kLoginWaitingEnterGame":                    30,
		"kLoginEnterGameGuid":                       31,
		"kLoginAccountNameEmpty":                    32,
		"kLoginCreateConnectionAccountEmpty":        33,
		"kLoginEnterGameConnectionAccountEmpty":     34,
		"kLoginUnknownError":                        35,
		"kLoginSessionDisconnect":                   36,
		"kLoginBeKickByAnOtherAccount":              37,
		"kLoginSessionIdNotFound":                   38,
		"kLoginFsmFailed":                           39,
		"kLoginDataSerializeFailed":                 40,
		"kLoginRedisError":                          41,
		"kLoginDataParseFailed":                     42,
		"kLoginRedisSetFailed":                      43,
		"kTooManyDevices":                           121,
		"kLoginFSMLoadFailed":                       122,
		"kLoginFSMEventFailed":                      123,
		"kLoginAccountDataLoadFaile":                124,
		"kLoginSessionNotFound":                     125,
		"kLoginAccountDataLoadFailed":               126,
		"kLoginFsmInvalidEvent":                     127,
	}
)

func (x LoginError) Enum() *LoginError {
	p := new(LoginError)
	*p = x
	return p
}

func (x LoginError) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (LoginError) Descriptor() protoreflect.EnumDescriptor {
	return file_tip_login_error_tip_proto_enumTypes[0].Descriptor()
}

func (LoginError) Type() protoreflect.EnumType {
	return &file_tip_login_error_tip_proto_enumTypes[0]
}

func (x LoginError) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use LoginError.Descriptor instead.
func (LoginError) EnumDescriptor() ([]byte, []int) {
	return file_tip_login_error_tip_proto_rawDescGZIP(), []int{0}
}

var File_tip_login_error_tip_proto protoreflect.FileDescriptor

var file_tip_login_error_tip_proto_rawDesc = []byte{
	0x0a, 0x19, 0x74, 0x69, 0x70, 0x2f, 0x6c, 0x6f, 0x67, 0x69, 0x6e, 0x5f, 0x65, 0x72, 0x72, 0x6f,
	0x72, 0x5f, 0x74, 0x69, 0x70, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2a, 0x8c, 0x07, 0x0a, 0x0b,
	0x6c, 0x6f, 0x67, 0x69, 0x6e, 0x5f, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x12, 0x12, 0x0a, 0x0e, 0x6b,
	0x4c, 0x6f, 0x67, 0x69, 0x6e, 0x5f, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x4f, 0x4b, 0x10, 0x00, 0x12,
	0x19, 0x0a, 0x15, 0x6b, 0x4c, 0x6f, 0x67, 0x69, 0x6e, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74,
	0x4e, 0x6f, 0x74, 0x46, 0x6f, 0x75, 0x6e, 0x64, 0x10, 0x14, 0x12, 0x1b, 0x0a, 0x17, 0x6b, 0x4c,
	0x6f, 0x67, 0x69, 0x6e, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x50, 0x6c, 0x61, 0x79, 0x65,
	0x72, 0x46, 0x75, 0x6c, 0x6c, 0x10, 0x15, 0x12, 0x23, 0x0a, 0x1f, 0x6b, 0x4c, 0x6f, 0x67, 0x69,
	0x6e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x50, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x55, 0x6e, 0x4c,
	0x6f, 0x61, 0x64, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x10, 0x16, 0x12, 0x2d, 0x0a, 0x29,
	0x6b, 0x4c, 0x6f, 0x67, 0x69, 0x6e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x50, 0x6c, 0x61, 0x79,
	0x65, 0x72, 0x43, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x48, 0x61, 0x73, 0x4e,
	0x6f, 0x74, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x10, 0x17, 0x12, 0x11, 0x0a, 0x0d, 0x6b,
	0x4c, 0x6f, 0x67, 0x69, 0x6e, 0x55, 0x6e, 0x4c, 0x6f, 0x67, 0x69, 0x6e, 0x10, 0x18, 0x12, 0x14,
	0x0a, 0x10, 0x6b, 0x4c, 0x6f, 0x67, 0x69, 0x6e, 0x49, 0x6e, 0x50, 0x72, 0x6f, 0x67, 0x72, 0x65,
	0x73, 0x73, 0x10, 0x19, 0x12, 0x19, 0x0a, 0x15, 0x6b, 0x4c, 0x6f, 0x67, 0x69, 0x6e, 0x50, 0x6c,
	0x61, 0x79, 0x65, 0x72, 0x47, 0x75, 0x69, 0x64, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x10, 0x1a, 0x12,
	0x16, 0x0a, 0x12, 0x6b, 0x4c, 0x6f, 0x67, 0x69, 0x6e, 0x45, 0x6e, 0x74, 0x65, 0x72, 0x69, 0x6e,
	0x67, 0x47, 0x61, 0x6d, 0x65, 0x10, 0x1b, 0x12, 0x11, 0x0a, 0x0d, 0x6b, 0x4c, 0x6f, 0x67, 0x69,
	0x6e, 0x50, 0x6c, 0x61, 0x79, 0x69, 0x6e, 0x67, 0x10, 0x1c, 0x12, 0x18, 0x0a, 0x14, 0x6b, 0x4c,
	0x6f, 0x67, 0x69, 0x6e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x69, 0x6e, 0x67, 0x50, 0x6c, 0x61, 0x79,
	0x65, 0x72, 0x10, 0x1d, 0x12, 0x1a, 0x0a, 0x16, 0x6b, 0x4c, 0x6f, 0x67, 0x69, 0x6e, 0x57, 0x61,
	0x69, 0x74, 0x69, 0x6e, 0x67, 0x45, 0x6e, 0x74, 0x65, 0x72, 0x47, 0x61, 0x6d, 0x65, 0x10, 0x1e,
	0x12, 0x17, 0x0a, 0x13, 0x6b, 0x4c, 0x6f, 0x67, 0x69, 0x6e, 0x45, 0x6e, 0x74, 0x65, 0x72, 0x47,
	0x61, 0x6d, 0x65, 0x47, 0x75, 0x69, 0x64, 0x10, 0x1f, 0x12, 0x1a, 0x0a, 0x16, 0x6b, 0x4c, 0x6f,
	0x67, 0x69, 0x6e, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x4e, 0x61, 0x6d, 0x65, 0x45, 0x6d,
	0x70, 0x74, 0x79, 0x10, 0x20, 0x12, 0x26, 0x0a, 0x22, 0x6b, 0x4c, 0x6f, 0x67, 0x69, 0x6e, 0x43,
	0x72, 0x65, 0x61, 0x74, 0x65, 0x43, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x41,
	0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x10, 0x21, 0x12, 0x29, 0x0a,
	0x25, 0x6b, 0x4c, 0x6f, 0x67, 0x69, 0x6e, 0x45, 0x6e, 0x74, 0x65, 0x72, 0x47, 0x61, 0x6d, 0x65,
	0x43, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e,
	0x74, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x10, 0x22, 0x12, 0x16, 0x0a, 0x12, 0x6b, 0x4c, 0x6f, 0x67,
	0x69, 0x6e, 0x55, 0x6e, 0x6b, 0x6e, 0x6f, 0x77, 0x6e, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x10, 0x23,
	0x12, 0x1b, 0x0a, 0x17, 0x6b, 0x4c, 0x6f, 0x67, 0x69, 0x6e, 0x53, 0x65, 0x73, 0x73, 0x69, 0x6f,
	0x6e, 0x44, 0x69, 0x73, 0x63, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x10, 0x24, 0x12, 0x20, 0x0a,
	0x1c, 0x6b, 0x4c, 0x6f, 0x67, 0x69, 0x6e, 0x42, 0x65, 0x4b, 0x69, 0x63, 0x6b, 0x42, 0x79, 0x41,
	0x6e, 0x4f, 0x74, 0x68, 0x65, 0x72, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x10, 0x25, 0x12,
	0x1b, 0x0a, 0x17, 0x6b, 0x4c, 0x6f, 0x67, 0x69, 0x6e, 0x53, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e,
	0x49, 0x64, 0x4e, 0x6f, 0x74, 0x46, 0x6f, 0x75, 0x6e, 0x64, 0x10, 0x26, 0x12, 0x13, 0x0a, 0x0f,
	0x6b, 0x4c, 0x6f, 0x67, 0x69, 0x6e, 0x46, 0x73, 0x6d, 0x46, 0x61, 0x69, 0x6c, 0x65, 0x64, 0x10,
	0x27, 0x12, 0x1d, 0x0a, 0x19, 0x6b, 0x4c, 0x6f, 0x67, 0x69, 0x6e, 0x44, 0x61, 0x74, 0x61, 0x53,
	0x65, 0x72, 0x69, 0x61, 0x6c, 0x69, 0x7a, 0x65, 0x46, 0x61, 0x69, 0x6c, 0x65, 0x64, 0x10, 0x28,
	0x12, 0x14, 0x0a, 0x10, 0x6b, 0x4c, 0x6f, 0x67, 0x69, 0x6e, 0x52, 0x65, 0x64, 0x69, 0x73, 0x45,
	0x72, 0x72, 0x6f, 0x72, 0x10, 0x29, 0x12, 0x19, 0x0a, 0x15, 0x6b, 0x4c, 0x6f, 0x67, 0x69, 0x6e,
	0x44, 0x61, 0x74, 0x61, 0x50, 0x61, 0x72, 0x73, 0x65, 0x46, 0x61, 0x69, 0x6c, 0x65, 0x64, 0x10,
	0x2a, 0x12, 0x18, 0x0a, 0x14, 0x6b, 0x4c, 0x6f, 0x67, 0x69, 0x6e, 0x52, 0x65, 0x64, 0x69, 0x73,
	0x53, 0x65, 0x74, 0x46, 0x61, 0x69, 0x6c, 0x65, 0x64, 0x10, 0x2b, 0x12, 0x13, 0x0a, 0x0f, 0x6b,
	0x54, 0x6f, 0x6f, 0x4d, 0x61, 0x6e, 0x79, 0x44, 0x65, 0x76, 0x69, 0x63, 0x65, 0x73, 0x10, 0x79,
	0x12, 0x17, 0x0a, 0x13, 0x6b, 0x4c, 0x6f, 0x67, 0x69, 0x6e, 0x46, 0x53, 0x4d, 0x4c, 0x6f, 0x61,
	0x64, 0x46, 0x61, 0x69, 0x6c, 0x65, 0x64, 0x10, 0x7a, 0x12, 0x18, 0x0a, 0x14, 0x6b, 0x4c, 0x6f,
	0x67, 0x69, 0x6e, 0x46, 0x53, 0x4d, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x46, 0x61, 0x69, 0x6c, 0x65,
	0x64, 0x10, 0x7b, 0x12, 0x1e, 0x0a, 0x1a, 0x6b, 0x4c, 0x6f, 0x67, 0x69, 0x6e, 0x41, 0x63, 0x63,
	0x6f, 0x75, 0x6e, 0x74, 0x44, 0x61, 0x74, 0x61, 0x4c, 0x6f, 0x61, 0x64, 0x46, 0x61, 0x69, 0x6c,
	0x65, 0x10, 0x7c, 0x12, 0x19, 0x0a, 0x15, 0x6b, 0x4c, 0x6f, 0x67, 0x69, 0x6e, 0x53, 0x65, 0x73,
	0x73, 0x69, 0x6f, 0x6e, 0x4e, 0x6f, 0x74, 0x46, 0x6f, 0x75, 0x6e, 0x64, 0x10, 0x7d, 0x12, 0x1f,
	0x0a, 0x1b, 0x6b, 0x4c, 0x6f, 0x67, 0x69, 0x6e, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x44,
	0x61, 0x74, 0x61, 0x4c, 0x6f, 0x61, 0x64, 0x46, 0x61, 0x69, 0x6c, 0x65, 0x64, 0x10, 0x7e, 0x12,
	0x19, 0x0a, 0x15, 0x6b, 0x4c, 0x6f, 0x67, 0x69, 0x6e, 0x46, 0x73, 0x6d, 0x49, 0x6e, 0x76, 0x61,
	0x6c, 0x69, 0x64, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x10, 0x7f, 0x42, 0x09, 0x5a, 0x07, 0x70, 0x62,
	0x2f, 0x67, 0x61, 0x6d, 0x65, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_tip_login_error_tip_proto_rawDescOnce sync.Once
	file_tip_login_error_tip_proto_rawDescData = file_tip_login_error_tip_proto_rawDesc
)

func file_tip_login_error_tip_proto_rawDescGZIP() []byte {
	file_tip_login_error_tip_proto_rawDescOnce.Do(func() {
		file_tip_login_error_tip_proto_rawDescData = protoimpl.X.CompressGZIP(file_tip_login_error_tip_proto_rawDescData)
	})
	return file_tip_login_error_tip_proto_rawDescData
}

var file_tip_login_error_tip_proto_enumTypes = make([]protoimpl.EnumInfo, 1)
var file_tip_login_error_tip_proto_goTypes = []any{
	(LoginError)(0), // 0: login_error
}
var file_tip_login_error_tip_proto_depIdxs = []int32{
	0, // [0:0] is the sub-list for method output_type
	0, // [0:0] is the sub-list for method input_type
	0, // [0:0] is the sub-list for extension type_name
	0, // [0:0] is the sub-list for extension extendee
	0, // [0:0] is the sub-list for field type_name
}

func init() { file_tip_login_error_tip_proto_init() }
func file_tip_login_error_tip_proto_init() {
	if File_tip_login_error_tip_proto != nil {
		return
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_tip_login_error_tip_proto_rawDesc,
			NumEnums:      1,
			NumMessages:   0,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_tip_login_error_tip_proto_goTypes,
		DependencyIndexes: file_tip_login_error_tip_proto_depIdxs,
		EnumInfos:         file_tip_login_error_tip_proto_enumTypes,
	}.Build()
	File_tip_login_error_tip_proto = out.File
	file_tip_login_error_tip_proto_rawDesc = nil
	file_tip_login_error_tip_proto_goTypes = nil
	file_tip_login_error_tip_proto_depIdxs = nil
}
