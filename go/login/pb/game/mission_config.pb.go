// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.6
// 	protoc        v5.29.0
// source: mission_config.proto

package game

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type MissionTable struct {
	state          protoimpl.MessageState `protogen:"open.v1"`
	Id             uint32                 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	ConditionId    []uint32               `protobuf:"varint,2,rep,packed,name=condition_id,json=conditionId,proto3" json:"condition_id,omitempty"`
	MissionType    uint32                 `protobuf:"varint,3,opt,name=mission_type,json=missionType,proto3" json:"mission_type,omitempty"`
	MissionSubType uint32                 `protobuf:"varint,4,opt,name=mission_sub_type,json=missionSubType,proto3" json:"mission_sub_type,omitempty"`
	ConditionOrder uint32                 `protobuf:"varint,5,opt,name=condition_order,json=conditionOrder,proto3" json:"condition_order,omitempty"`
	AutoReward     uint32                 `protobuf:"varint,6,opt,name=auto_reward,json=autoReward,proto3" json:"auto_reward,omitempty"`
	RewardId       uint32                 `protobuf:"varint,7,opt,name=reward_id,json=rewardId,proto3" json:"reward_id,omitempty"`
	NextMissionId  []uint32               `protobuf:"varint,8,rep,packed,name=next_mission_id,json=nextMissionId,proto3" json:"next_mission_id,omitempty"`
	unknownFields  protoimpl.UnknownFields
	sizeCache      protoimpl.SizeCache
}

func (x *MissionTable) Reset() {
	*x = MissionTable{}
	mi := &file_mission_config_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *MissionTable) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MissionTable) ProtoMessage() {}

func (x *MissionTable) ProtoReflect() protoreflect.Message {
	mi := &file_mission_config_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MissionTable.ProtoReflect.Descriptor instead.
func (*MissionTable) Descriptor() ([]byte, []int) {
	return file_mission_config_proto_rawDescGZIP(), []int{0}
}

func (x *MissionTable) GetId() uint32 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *MissionTable) GetConditionId() []uint32 {
	if x != nil {
		return x.ConditionId
	}
	return nil
}

func (x *MissionTable) GetMissionType() uint32 {
	if x != nil {
		return x.MissionType
	}
	return 0
}

func (x *MissionTable) GetMissionSubType() uint32 {
	if x != nil {
		return x.MissionSubType
	}
	return 0
}

func (x *MissionTable) GetConditionOrder() uint32 {
	if x != nil {
		return x.ConditionOrder
	}
	return 0
}

func (x *MissionTable) GetAutoReward() uint32 {
	if x != nil {
		return x.AutoReward
	}
	return 0
}

func (x *MissionTable) GetRewardId() uint32 {
	if x != nil {
		return x.RewardId
	}
	return 0
}

func (x *MissionTable) GetNextMissionId() []uint32 {
	if x != nil {
		return x.NextMissionId
	}
	return nil
}

type MissionTabledData struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Data          []*MissionTable        `protobuf:"bytes,1,rep,name=data,proto3" json:"data,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *MissionTabledData) Reset() {
	*x = MissionTabledData{}
	mi := &file_mission_config_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *MissionTabledData) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MissionTabledData) ProtoMessage() {}

func (x *MissionTabledData) ProtoReflect() protoreflect.Message {
	mi := &file_mission_config_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MissionTabledData.ProtoReflect.Descriptor instead.
func (*MissionTabledData) Descriptor() ([]byte, []int) {
	return file_mission_config_proto_rawDescGZIP(), []int{1}
}

func (x *MissionTabledData) GetData() []*MissionTable {
	if x != nil {
		return x.Data
	}
	return nil
}

var File_mission_config_proto protoreflect.FileDescriptor

const file_mission_config_proto_rawDesc = "" +
	"\n" +
	"\x14mission_config.proto\"\x9d\x02\n" +
	"\fMissionTable\x12\x0e\n" +
	"\x02id\x18\x01 \x01(\rR\x02id\x12!\n" +
	"\fcondition_id\x18\x02 \x03(\rR\vconditionId\x12!\n" +
	"\fmission_type\x18\x03 \x01(\rR\vmissionType\x12(\n" +
	"\x10mission_sub_type\x18\x04 \x01(\rR\x0emissionSubType\x12'\n" +
	"\x0fcondition_order\x18\x05 \x01(\rR\x0econditionOrder\x12\x1f\n" +
	"\vauto_reward\x18\x06 \x01(\rR\n" +
	"autoReward\x12\x1b\n" +
	"\treward_id\x18\a \x01(\rR\brewardId\x12&\n" +
	"\x0fnext_mission_id\x18\b \x03(\rR\rnextMissionId\"6\n" +
	"\x11MissionTabledData\x12!\n" +
	"\x04data\x18\x01 \x03(\v2\r.MissionTableR\x04dataB\tZ\apb/gameb\x06proto3"

var (
	file_mission_config_proto_rawDescOnce sync.Once
	file_mission_config_proto_rawDescData []byte
)

func file_mission_config_proto_rawDescGZIP() []byte {
	file_mission_config_proto_rawDescOnce.Do(func() {
		file_mission_config_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_mission_config_proto_rawDesc), len(file_mission_config_proto_rawDesc)))
	})
	return file_mission_config_proto_rawDescData
}

var file_mission_config_proto_msgTypes = make([]protoimpl.MessageInfo, 2)
var file_mission_config_proto_goTypes = []any{
	(*MissionTable)(nil),      // 0: MissionTable
	(*MissionTabledData)(nil), // 1: MissionTabledData
}
var file_mission_config_proto_depIdxs = []int32{
	0, // 0: MissionTabledData.data:type_name -> MissionTable
	1, // [1:1] is the sub-list for method output_type
	1, // [1:1] is the sub-list for method input_type
	1, // [1:1] is the sub-list for extension type_name
	1, // [1:1] is the sub-list for extension extendee
	0, // [0:1] is the sub-list for field type_name
}

func init() { file_mission_config_proto_init() }
func file_mission_config_proto_init() {
	if File_mission_config_proto != nil {
		return
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_mission_config_proto_rawDesc), len(file_mission_config_proto_rawDesc)),
			NumEnums:      0,
			NumMessages:   2,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_mission_config_proto_goTypes,
		DependencyIndexes: file_mission_config_proto_depIdxs,
		MessageInfos:      file_mission_config_proto_msgTypes,
	}.Build()
	File_mission_config_proto = out.File
	file_mission_config_proto_goTypes = nil
	file_mission_config_proto_depIdxs = nil
}
