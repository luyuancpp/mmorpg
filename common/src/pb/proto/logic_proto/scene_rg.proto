syntax = "proto3";
//import "google/protobuf/empty.proto";
import "common.proto";
import "component_proto/scene_comp.proto";
package regionservcie;
option cc_generic_services = true;

message StartCrossMainGSRequest
{
  IpPort rpc_client = 1;
  IpPort rpc_server = 2;
  uint32 gs_node_id = 3;
}

message StartCrossMainGSResponse
{
  repeated SceneInfo scenes_info = 1;
}

message StartCrossRoomGSRequest
{
  IpPort rpc_client = 1;
  IpPort rpc_server = 2;
  uint32 gs_node_id = 3;
}

message StartCrossRoomGSResponse
{
  repeated SceneInfo scenes_info = 1;
}

service RgService 
{
  rpc StartCrossMainGS (StartCrossMainGSRequest) returns (StartCrossMainGSResponse);
  rpc StartCrossRoomGS (StartCrossRoomGSRequest) returns (StartCrossRoomGSResponse);
}
