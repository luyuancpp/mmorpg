syntax = "proto3";
import "google/protobuf/empty.proto";
import "common.proto";
import "component_proto/scene_comp.proto";
package gsservice;
option cc_generic_services = true;

message EnterGsRequest
{
  uint64 player_id = 1;
  SceneInfo scenes_info = 2;
  uint64 session_id = 3;
  uint64 ms_node_id = 4;
}

message EnterGsRespone
{
}

message MsPlayerMessageExtern
{
  uint64 player_id = 1;
}

message MsPlayerMessageRequest
{
  MessageBody msg = 1;
  MsPlayerMessageExtern ex = 2;
}

message MsSend2PlayerViaGsRequest
{
  MessageBody msg = 1;
  MsPlayerMessageExtern ex = 2;
}

message MsPlayerMessageRespone
{
  MessageBody msg = 1;
  MsPlayerMessageExtern ex = 2;
}

message RpcClientRequest
{
  bytes request = 1;
  uint64 session_id = 2;
  uint32 msg_id = 3;
}

message RpcClientResponse
{
  bytes response = 1;
}

message DisconnectRequest
{
  uint64 player_id = 1;
}

message ConnectRequest
{
  IpPort rpc_client = 1;
  uint32 gate_node_id = 2;
}

service GsService {
  rpc EnterGs (EnterGsRequest) returns (EnterGsRespone);
  rpc PlayerService (MsPlayerMessageRequest) returns (MsPlayerMessageRespone);
  rpc PlayerServiceNoRespone (MsPlayerMessageRequest) returns (google.protobuf.Empty);
  rpc GwPlayerService (RpcClientRequest) returns (RpcClientResponse);
  rpc Disconnect (DisconnectRequest) returns (google.protobuf.Empty); 
  rpc GwConnectGs (ConnectRequest) returns (google.protobuf.Empty); 
  rpc MsSend2PlayerViaGs (MsSend2PlayerViaGsRequest) returns (google.protobuf.Empty);
}