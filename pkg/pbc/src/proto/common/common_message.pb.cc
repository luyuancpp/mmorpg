// Generated by the protocol buffer compiler.  DO NOT EDIT!
// NO CHECKED-IN PROTOBUF GENCODE
// source: proto/common/common_message.proto
// Protobuf C++ Version: 5.29.0

#include "proto/common/common_message.pb.h"

#include <algorithm>
#include <type_traits>
#include "google/protobuf/io/coded_stream.h"
#include "google/protobuf/generated_message_tctable_impl.h"
#include "google/protobuf/extension_set.h"
#include "google/protobuf/generated_message_util.h"
#include "google/protobuf/wire_format_lite.h"
#include "google/protobuf/descriptor.h"
#include "google/protobuf/generated_message_reflection.h"
#include "google/protobuf/reflection_ops.h"
#include "google/protobuf/wire_format.h"
// @@protoc_insertion_point(includes)

// Must be included last.
#include "google/protobuf/port_def.inc"
PROTOBUF_PRAGMA_INIT_SEG
namespace _pb = ::google::protobuf;
namespace _pbi = ::google::protobuf::internal;
namespace _fl = ::google::protobuf::internal::field_layout;

inline constexpr UnregisterGameNodeRequest::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : scene_node_id_{0u},
        _cached_size_{0} {}

template <typename>
PROTOBUF_CONSTEXPR UnregisterGameNodeRequest::UnregisterGameNodeRequest(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct UnregisterGameNodeRequestDefaultTypeInternal {
  PROTOBUF_CONSTEXPR UnregisterGameNodeRequestDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~UnregisterGameNodeRequestDefaultTypeInternal() {}
  union {
    UnregisterGameNodeRequest _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 UnregisterGameNodeRequestDefaultTypeInternal _UnregisterGameNodeRequest_default_instance_;

inline constexpr ProtoFieldCheckerTestSubPB::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : items_{},
        _cached_size_{0} {}

template <typename>
PROTOBUF_CONSTEXPR ProtoFieldCheckerTestSubPB::ProtoFieldCheckerTestSubPB(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct ProtoFieldCheckerTestSubPBDefaultTypeInternal {
  PROTOBUF_CONSTEXPR ProtoFieldCheckerTestSubPBDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~ProtoFieldCheckerTestSubPBDefaultTypeInternal() {}
  union {
    ProtoFieldCheckerTestSubPB _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 ProtoFieldCheckerTestSubPBDefaultTypeInternal _ProtoFieldCheckerTestSubPB_default_instance_;

inline constexpr PlayerInfoExternal::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : player_id_{::uint64_t{0u}},
        _cached_size_{0} {}

template <typename>
PROTOBUF_CONSTEXPR PlayerInfoExternal::PlayerInfoExternal(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct PlayerInfoExternalDefaultTypeInternal {
  PROTOBUF_CONSTEXPR PlayerInfoExternalDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~PlayerInfoExternalDefaultTypeInternal() {}
  union {
    PlayerInfoExternal _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 PlayerInfoExternalDefaultTypeInternal _PlayerInfoExternal_default_instance_;

inline constexpr NodeMessageHeader::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : session_id_{::uint64_t{0u}},
        node_id_{0u},
        _cached_size_{0} {}

template <typename>
PROTOBUF_CONSTEXPR NodeMessageHeader::NodeMessageHeader(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct NodeMessageHeaderDefaultTypeInternal {
  PROTOBUF_CONSTEXPR NodeMessageHeaderDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~NodeMessageHeaderDefaultTypeInternal() {}
  union {
    NodeMessageHeader _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 NodeMessageHeaderDefaultTypeInternal _NodeMessageHeader_default_instance_;

inline constexpr MyNestedMessage::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : nested_int64_field_{::int64_t{0}},
        nested_int32_field_{0},
        _cached_size_{0} {}

template <typename>
PROTOBUF_CONSTEXPR MyNestedMessage::MyNestedMessage(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct MyNestedMessageDefaultTypeInternal {
  PROTOBUF_CONSTEXPR MyNestedMessageDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~MyNestedMessageDefaultTypeInternal() {}
  union {
    MyNestedMessage _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 MyNestedMessageDefaultTypeInternal _MyNestedMessage_default_instance_;

inline constexpr RegisterSessionCentreNodeResponse::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        session_info_{nullptr} {}

template <typename>
PROTOBUF_CONSTEXPR RegisterSessionCentreNodeResponse::RegisterSessionCentreNodeResponse(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct RegisterSessionCentreNodeResponseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR RegisterSessionCentreNodeResponseDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~RegisterSessionCentreNodeResponseDefaultTypeInternal() {}
  union {
    RegisterSessionCentreNodeResponse _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 RegisterSessionCentreNodeResponseDefaultTypeInternal _RegisterSessionCentreNodeResponse_default_instance_;

inline constexpr RegisterGateNodeSessionResponse::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        session_info_{nullptr} {}

template <typename>
PROTOBUF_CONSTEXPR RegisterGateNodeSessionResponse::RegisterGateNodeSessionResponse(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct RegisterGateNodeSessionResponseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR RegisterGateNodeSessionResponseDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~RegisterGateNodeSessionResponseDefaultTypeInternal() {}
  union {
    RegisterGateNodeSessionResponse _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 RegisterGateNodeSessionResponseDefaultTypeInternal _RegisterGateNodeSessionResponse_default_instance_;

inline constexpr RegisterGateNodeRequest::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        rpc_client_{nullptr},
        gate_node_id_{0u} {}

template <typename>
PROTOBUF_CONSTEXPR RegisterGateNodeRequest::RegisterGateNodeRequest(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct RegisterGateNodeRequestDefaultTypeInternal {
  PROTOBUF_CONSTEXPR RegisterGateNodeRequestDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~RegisterGateNodeRequestDefaultTypeInternal() {}
  union {
    RegisterGateNodeRequest _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 RegisterGateNodeRequestDefaultTypeInternal _RegisterGateNodeRequest_default_instance_;

inline constexpr RegisterGameNodeSessionResponse::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        session_info_{nullptr} {}

template <typename>
PROTOBUF_CONSTEXPR RegisterGameNodeSessionResponse::RegisterGameNodeSessionResponse(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct RegisterGameNodeSessionResponseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR RegisterGameNodeSessionResponseDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~RegisterGameNodeSessionResponseDefaultTypeInternal() {}
  union {
    RegisterGameNodeSessionResponse _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 RegisterGameNodeSessionResponseDefaultTypeInternal _RegisterGameNodeSessionResponse_default_instance_;

inline constexpr RegisterGameNodeSessionRequest::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        session_info_{nullptr},
        scene_node_id_{0u} {}

template <typename>
PROTOBUF_CONSTEXPR RegisterGameNodeSessionRequest::RegisterGameNodeSessionRequest(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct RegisterGameNodeSessionRequestDefaultTypeInternal {
  PROTOBUF_CONSTEXPR RegisterGameNodeSessionRequestDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~RegisterGameNodeSessionRequestDefaultTypeInternal() {}
  union {
    RegisterGameNodeSessionRequest _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 RegisterGameNodeSessionRequestDefaultTypeInternal _RegisterGameNodeSessionRequest_default_instance_;

inline constexpr RegisterGameNodeRequest::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        rpc_client_{nullptr},
        rpc_server_{nullptr},
        scene_node_id_{0u},
        server_type_{0u},
        scene_node_type_{0u} {}

template <typename>
PROTOBUF_CONSTEXPR RegisterGameNodeRequest::RegisterGameNodeRequest(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct RegisterGameNodeRequestDefaultTypeInternal {
  PROTOBUF_CONSTEXPR RegisterGameNodeRequestDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~RegisterGameNodeRequestDefaultTypeInternal() {}
  union {
    RegisterGameNodeRequest _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 RegisterGameNodeRequestDefaultTypeInternal _RegisterGameNodeRequest_default_instance_;

inline constexpr RegisterCentreSessionNodeRequest::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        session_info_{nullptr},
        centre_node_id_{0u} {}

template <typename>
PROTOBUF_CONSTEXPR RegisterCentreSessionNodeRequest::RegisterCentreSessionNodeRequest(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct RegisterCentreSessionNodeRequestDefaultTypeInternal {
  PROTOBUF_CONSTEXPR RegisterCentreSessionNodeRequestDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~RegisterCentreSessionNodeRequestDefaultTypeInternal() {}
  union {
    RegisterCentreSessionNodeRequest _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 RegisterCentreSessionNodeRequestDefaultTypeInternal _RegisterCentreSessionNodeRequest_default_instance_;

inline constexpr ProtoFieldCheckerTestPB::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        sub_message_{nullptr} {}

template <typename>
PROTOBUF_CONSTEXPR ProtoFieldCheckerTestPB::ProtoFieldCheckerTestPB(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct ProtoFieldCheckerTestPBDefaultTypeInternal {
  PROTOBUF_CONSTEXPR ProtoFieldCheckerTestPBDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~ProtoFieldCheckerTestPBDefaultTypeInternal() {}
  union {
    ProtoFieldCheckerTestPB _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 ProtoFieldCheckerTestPBDefaultTypeInternal _ProtoFieldCheckerTestPB_default_instance_;

inline constexpr MyProtoMessage::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        repeated_int32_field_{},
        _repeated_int32_field_cached_byte_size_{0},
        repeated_int64_field_{},
        _repeated_int64_field_cached_byte_size_{0},
        nested_message_{nullptr},
        single_int64_field_{::int64_t{0}},
        single_int32_field_{0} {}

template <typename>
PROTOBUF_CONSTEXPR MyProtoMessage::MyProtoMessage(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct MyProtoMessageDefaultTypeInternal {
  PROTOBUF_CONSTEXPR MyProtoMessageDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~MyProtoMessageDefaultTypeInternal() {}
  union {
    MyProtoMessage _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 MyProtoMessageDefaultTypeInternal _MyProtoMessage_default_instance_;

inline constexpr MessageContent::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        serialized_message_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        error_message_{nullptr},
        id_{::uint64_t{0u}},
        message_id_{0u} {}

template <typename>
PROTOBUF_CONSTEXPR MessageContent::MessageContent(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct MessageContentDefaultTypeInternal {
  PROTOBUF_CONSTEXPR MessageContentDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~MessageContentDefaultTypeInternal() {}
  union {
    MessageContent _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 MessageContentDefaultTypeInternal _MessageContent_default_instance_;

inline constexpr GateSessionDisconnectRequest::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        session_info_{nullptr} {}

template <typename>
PROTOBUF_CONSTEXPR GateSessionDisconnectRequest::GateSessionDisconnectRequest(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct GateSessionDisconnectRequestDefaultTypeInternal {
  PROTOBUF_CONSTEXPR GateSessionDisconnectRequestDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~GateSessionDisconnectRequestDefaultTypeInternal() {}
  union {
    GateSessionDisconnectRequest _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 GateSessionDisconnectRequestDefaultTypeInternal _GateSessionDisconnectRequest_default_instance_;

inline constexpr RoutingNodeInfo::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        node_info_{nullptr},
        message_id_{0u} {}

template <typename>
PROTOBUF_CONSTEXPR RoutingNodeInfo::RoutingNodeInfo(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct RoutingNodeInfoDefaultTypeInternal {
  PROTOBUF_CONSTEXPR RoutingNodeInfoDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~RoutingNodeInfoDefaultTypeInternal() {}
  union {
    RoutingNodeInfo _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 RoutingNodeInfoDefaultTypeInternal _RoutingNodeInfo_default_instance_;

inline constexpr RoutePlayerMessageResponse::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        node_list_{},
        body_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        player_info_{nullptr} {}

template <typename>
PROTOBUF_CONSTEXPR RoutePlayerMessageResponse::RoutePlayerMessageResponse(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct RoutePlayerMessageResponseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR RoutePlayerMessageResponseDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~RoutePlayerMessageResponseDefaultTypeInternal() {}
  union {
    RoutePlayerMessageResponse _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 RoutePlayerMessageResponseDefaultTypeInternal _RoutePlayerMessageResponse_default_instance_;

inline constexpr RoutePlayerMessageRequest::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        node_list_{},
        body_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        player_info_{nullptr} {}

template <typename>
PROTOBUF_CONSTEXPR RoutePlayerMessageRequest::RoutePlayerMessageRequest(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct RoutePlayerMessageRequestDefaultTypeInternal {
  PROTOBUF_CONSTEXPR RoutePlayerMessageRequestDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~RoutePlayerMessageRequestDefaultTypeInternal() {}
  union {
    RoutePlayerMessageRequest _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 RoutePlayerMessageRequestDefaultTypeInternal _RoutePlayerMessageRequest_default_instance_;

inline constexpr RegisterNodeSessionRequest::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        node_info_{nullptr},
        endpoint_{nullptr} {}

template <typename>
PROTOBUF_CONSTEXPR RegisterNodeSessionRequest::RegisterNodeSessionRequest(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct RegisterNodeSessionRequestDefaultTypeInternal {
  PROTOBUF_CONSTEXPR RegisterNodeSessionRequestDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~RegisterNodeSessionRequestDefaultTypeInternal() {}
  union {
    RegisterNodeSessionRequest _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 RegisterNodeSessionRequestDefaultTypeInternal _RegisterNodeSessionRequest_default_instance_;

inline constexpr PlayerNodeServiceRequest::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        message_content_{nullptr},
        header_{nullptr} {}

template <typename>
PROTOBUF_CONSTEXPR PlayerNodeServiceRequest::PlayerNodeServiceRequest(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct PlayerNodeServiceRequestDefaultTypeInternal {
  PROTOBUF_CONSTEXPR PlayerNodeServiceRequestDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~PlayerNodeServiceRequestDefaultTypeInternal() {}
  union {
    PlayerNodeServiceRequest _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 PlayerNodeServiceRequestDefaultTypeInternal _PlayerNodeServiceRequest_default_instance_;

inline constexpr PlayerMessageResponse::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        message_content_{nullptr},
        header_{nullptr} {}

template <typename>
PROTOBUF_CONSTEXPR PlayerMessageResponse::PlayerMessageResponse(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct PlayerMessageResponseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR PlayerMessageResponseDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~PlayerMessageResponseDefaultTypeInternal() {}
  union {
    PlayerMessageResponse _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 PlayerMessageResponseDefaultTypeInternal _PlayerMessageResponse_default_instance_;

inline constexpr NodeRoutingMessageBody::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        node_info_{nullptr} {}

template <typename>
PROTOBUF_CONSTEXPR NodeRoutingMessageBody::NodeRoutingMessageBody(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct NodeRoutingMessageBodyDefaultTypeInternal {
  PROTOBUF_CONSTEXPR NodeRoutingMessageBodyDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~NodeRoutingMessageBodyDefaultTypeInternal() {}
  union {
    NodeRoutingMessageBody _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 NodeRoutingMessageBodyDefaultTypeInternal _NodeRoutingMessageBody_default_instance_;

inline constexpr NodeRouteMessageResponse::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        message_content_{nullptr},
        header_{nullptr} {}

template <typename>
PROTOBUF_CONSTEXPR NodeRouteMessageResponse::NodeRouteMessageResponse(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct NodeRouteMessageResponseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR NodeRouteMessageResponseDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~NodeRouteMessageResponseDefaultTypeInternal() {}
  union {
    NodeRouteMessageResponse _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 NodeRouteMessageResponseDefaultTypeInternal _NodeRouteMessageResponse_default_instance_;

inline constexpr NodeRouteMessageRequest::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        message_content_{nullptr},
        header_{nullptr} {}

template <typename>
PROTOBUF_CONSTEXPR NodeRouteMessageRequest::NodeRouteMessageRequest(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct NodeRouteMessageRequestDefaultTypeInternal {
  PROTOBUF_CONSTEXPR NodeRouteMessageRequestDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~NodeRouteMessageRequestDefaultTypeInternal() {}
  union {
    NodeRouteMessageRequest _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 NodeRouteMessageRequestDefaultTypeInternal _NodeRouteMessageRequest_default_instance_;

inline constexpr RouteMessageResponse::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : route_nodes_{},
        body_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        session_id_{::uint64_t{0u}},
        id_{::uint64_t{0u}},
        is_client_{false},
        _cached_size_{0} {}

template <typename>
PROTOBUF_CONSTEXPR RouteMessageResponse::RouteMessageResponse(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct RouteMessageResponseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR RouteMessageResponseDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~RouteMessageResponseDefaultTypeInternal() {}
  union {
    RouteMessageResponse _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 RouteMessageResponseDefaultTypeInternal _RouteMessageResponse_default_instance_;

inline constexpr RouteMessageRequest::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : route_nodes_{},
        body_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        session_id_{::uint64_t{0u}},
        id_{::uint64_t{0u}},
        is_client_{false},
        _cached_size_{0} {}

template <typename>
PROTOBUF_CONSTEXPR RouteMessageRequest::RouteMessageRequest(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct RouteMessageRequestDefaultTypeInternal {
  PROTOBUF_CONSTEXPR RouteMessageRequestDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~RouteMessageRequestDefaultTypeInternal() {}
  union {
    RouteMessageRequest _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 RouteMessageRequestDefaultTypeInternal _RouteMessageRequest_default_instance_;
static constexpr const ::_pb::EnumDescriptor**
    file_level_enum_descriptors_proto_2fcommon_2fcommon_5fmessage_2eproto = nullptr;
static constexpr const ::_pb::ServiceDescriptor**
    file_level_service_descriptors_proto_2fcommon_2fcommon_5fmessage_2eproto = nullptr;
const ::uint32_t
    TableStruct_proto_2fcommon_2fcommon_5fmessage_2eproto::offsets[] ABSL_ATTRIBUTE_SECTION_VARIABLE(
        protodesc_cold) = {
        PROTOBUF_FIELD_OFFSET(::RoutingNodeInfo, _impl_._has_bits_),
        PROTOBUF_FIELD_OFFSET(::RoutingNodeInfo, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::RoutingNodeInfo, _impl_.node_info_),
        PROTOBUF_FIELD_OFFSET(::RoutingNodeInfo, _impl_.message_id_),
        0,
        ~0u,
        PROTOBUF_FIELD_OFFSET(::MessageContent, _impl_._has_bits_),
        PROTOBUF_FIELD_OFFSET(::MessageContent, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::MessageContent, _impl_.serialized_message_),
        PROTOBUF_FIELD_OFFSET(::MessageContent, _impl_.message_id_),
        PROTOBUF_FIELD_OFFSET(::MessageContent, _impl_.id_),
        PROTOBUF_FIELD_OFFSET(::MessageContent, _impl_.error_message_),
        ~0u,
        ~0u,
        ~0u,
        0,
        ~0u,  // no _has_bits_
        PROTOBUF_FIELD_OFFSET(::NodeMessageHeader, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::NodeMessageHeader, _impl_.node_id_),
        PROTOBUF_FIELD_OFFSET(::NodeMessageHeader, _impl_.session_id_),
        PROTOBUF_FIELD_OFFSET(::NodeRouteMessageRequest, _impl_._has_bits_),
        PROTOBUF_FIELD_OFFSET(::NodeRouteMessageRequest, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::NodeRouteMessageRequest, _impl_.message_content_),
        PROTOBUF_FIELD_OFFSET(::NodeRouteMessageRequest, _impl_.header_),
        0,
        1,
        PROTOBUF_FIELD_OFFSET(::NodeRouteMessageResponse, _impl_._has_bits_),
        PROTOBUF_FIELD_OFFSET(::NodeRouteMessageResponse, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::NodeRouteMessageResponse, _impl_.message_content_),
        PROTOBUF_FIELD_OFFSET(::NodeRouteMessageResponse, _impl_.header_),
        0,
        1,
        ~0u,  // no _has_bits_
        PROTOBUF_FIELD_OFFSET(::PlayerInfoExternal, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::PlayerInfoExternal, _impl_.player_id_),
        PROTOBUF_FIELD_OFFSET(::PlayerNodeServiceRequest, _impl_._has_bits_),
        PROTOBUF_FIELD_OFFSET(::PlayerNodeServiceRequest, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::PlayerNodeServiceRequest, _impl_.message_content_),
        PROTOBUF_FIELD_OFFSET(::PlayerNodeServiceRequest, _impl_.header_),
        0,
        1,
        PROTOBUF_FIELD_OFFSET(::PlayerMessageResponse, _impl_._has_bits_),
        PROTOBUF_FIELD_OFFSET(::PlayerMessageResponse, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::PlayerMessageResponse, _impl_.message_content_),
        PROTOBUF_FIELD_OFFSET(::PlayerMessageResponse, _impl_.header_),
        0,
        1,
        PROTOBUF_FIELD_OFFSET(::NodeRoutingMessageBody, _impl_._has_bits_),
        PROTOBUF_FIELD_OFFSET(::NodeRoutingMessageBody, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::NodeRoutingMessageBody, _impl_.node_info_),
        0,
        PROTOBUF_FIELD_OFFSET(::RegisterGameNodeSessionRequest, _impl_._has_bits_),
        PROTOBUF_FIELD_OFFSET(::RegisterGameNodeSessionRequest, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::RegisterGameNodeSessionRequest, _impl_.session_info_),
        PROTOBUF_FIELD_OFFSET(::RegisterGameNodeSessionRequest, _impl_.scene_node_id_),
        0,
        ~0u,
        PROTOBUF_FIELD_OFFSET(::RegisterGameNodeSessionResponse, _impl_._has_bits_),
        PROTOBUF_FIELD_OFFSET(::RegisterGameNodeSessionResponse, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::RegisterGameNodeSessionResponse, _impl_.session_info_),
        0,
        PROTOBUF_FIELD_OFFSET(::RegisterGateNodeSessionResponse, _impl_._has_bits_),
        PROTOBUF_FIELD_OFFSET(::RegisterGateNodeSessionResponse, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::RegisterGateNodeSessionResponse, _impl_.session_info_),
        0,
        PROTOBUF_FIELD_OFFSET(::RegisterCentreSessionNodeRequest, _impl_._has_bits_),
        PROTOBUF_FIELD_OFFSET(::RegisterCentreSessionNodeRequest, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::RegisterCentreSessionNodeRequest, _impl_.session_info_),
        PROTOBUF_FIELD_OFFSET(::RegisterCentreSessionNodeRequest, _impl_.centre_node_id_),
        0,
        ~0u,
        PROTOBUF_FIELD_OFFSET(::RegisterSessionCentreNodeResponse, _impl_._has_bits_),
        PROTOBUF_FIELD_OFFSET(::RegisterSessionCentreNodeResponse, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::RegisterSessionCentreNodeResponse, _impl_.session_info_),
        0,
        PROTOBUF_FIELD_OFFSET(::GateSessionDisconnectRequest, _impl_._has_bits_),
        PROTOBUF_FIELD_OFFSET(::GateSessionDisconnectRequest, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::GateSessionDisconnectRequest, _impl_.session_info_),
        0,
        ~0u,  // no _has_bits_
        PROTOBUF_FIELD_OFFSET(::RouteMessageRequest, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::RouteMessageRequest, _impl_.body_),
        PROTOBUF_FIELD_OFFSET(::RouteMessageRequest, _impl_.route_nodes_),
        PROTOBUF_FIELD_OFFSET(::RouteMessageRequest, _impl_.session_id_),
        PROTOBUF_FIELD_OFFSET(::RouteMessageRequest, _impl_.id_),
        PROTOBUF_FIELD_OFFSET(::RouteMessageRequest, _impl_.is_client_),
        ~0u,  // no _has_bits_
        PROTOBUF_FIELD_OFFSET(::RouteMessageResponse, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::RouteMessageResponse, _impl_.body_),
        PROTOBUF_FIELD_OFFSET(::RouteMessageResponse, _impl_.route_nodes_),
        PROTOBUF_FIELD_OFFSET(::RouteMessageResponse, _impl_.session_id_),
        PROTOBUF_FIELD_OFFSET(::RouteMessageResponse, _impl_.id_),
        PROTOBUF_FIELD_OFFSET(::RouteMessageResponse, _impl_.is_client_),
        PROTOBUF_FIELD_OFFSET(::RoutePlayerMessageRequest, _impl_._has_bits_),
        PROTOBUF_FIELD_OFFSET(::RoutePlayerMessageRequest, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::RoutePlayerMessageRequest, _impl_.body_),
        PROTOBUF_FIELD_OFFSET(::RoutePlayerMessageRequest, _impl_.node_list_),
        PROTOBUF_FIELD_OFFSET(::RoutePlayerMessageRequest, _impl_.player_info_),
        ~0u,
        ~0u,
        0,
        PROTOBUF_FIELD_OFFSET(::RoutePlayerMessageResponse, _impl_._has_bits_),
        PROTOBUF_FIELD_OFFSET(::RoutePlayerMessageResponse, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::RoutePlayerMessageResponse, _impl_.body_),
        PROTOBUF_FIELD_OFFSET(::RoutePlayerMessageResponse, _impl_.node_list_),
        PROTOBUF_FIELD_OFFSET(::RoutePlayerMessageResponse, _impl_.player_info_),
        ~0u,
        ~0u,
        0,
        PROTOBUF_FIELD_OFFSET(::RegisterGameNodeRequest, _impl_._has_bits_),
        PROTOBUF_FIELD_OFFSET(::RegisterGameNodeRequest, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::RegisterGameNodeRequest, _impl_.rpc_client_),
        PROTOBUF_FIELD_OFFSET(::RegisterGameNodeRequest, _impl_.rpc_server_),
        PROTOBUF_FIELD_OFFSET(::RegisterGameNodeRequest, _impl_.scene_node_id_),
        PROTOBUF_FIELD_OFFSET(::RegisterGameNodeRequest, _impl_.server_type_),
        PROTOBUF_FIELD_OFFSET(::RegisterGameNodeRequest, _impl_.scene_node_type_),
        0,
        1,
        ~0u,
        ~0u,
        ~0u,
        PROTOBUF_FIELD_OFFSET(::RegisterGateNodeRequest, _impl_._has_bits_),
        PROTOBUF_FIELD_OFFSET(::RegisterGateNodeRequest, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::RegisterGateNodeRequest, _impl_.rpc_client_),
        PROTOBUF_FIELD_OFFSET(::RegisterGateNodeRequest, _impl_.gate_node_id_),
        0,
        ~0u,
        ~0u,  // no _has_bits_
        PROTOBUF_FIELD_OFFSET(::UnregisterGameNodeRequest, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::UnregisterGameNodeRequest, _impl_.scene_node_id_),
        ~0u,  // no _has_bits_
        PROTOBUF_FIELD_OFFSET(::ProtoFieldCheckerTestSubPB, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::ProtoFieldCheckerTestSubPB, _impl_.items_),
        PROTOBUF_FIELD_OFFSET(::ProtoFieldCheckerTestPB, _impl_._has_bits_),
        PROTOBUF_FIELD_OFFSET(::ProtoFieldCheckerTestPB, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::ProtoFieldCheckerTestPB, _impl_.sub_message_),
        0,
        PROTOBUF_FIELD_OFFSET(::MyProtoMessage, _impl_._has_bits_),
        PROTOBUF_FIELD_OFFSET(::MyProtoMessage, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::MyProtoMessage, _impl_.single_int32_field_),
        PROTOBUF_FIELD_OFFSET(::MyProtoMessage, _impl_.single_int64_field_),
        PROTOBUF_FIELD_OFFSET(::MyProtoMessage, _impl_.repeated_int32_field_),
        PROTOBUF_FIELD_OFFSET(::MyProtoMessage, _impl_.repeated_int64_field_),
        PROTOBUF_FIELD_OFFSET(::MyProtoMessage, _impl_.nested_message_),
        ~0u,
        ~0u,
        ~0u,
        ~0u,
        0,
        ~0u,  // no _has_bits_
        PROTOBUF_FIELD_OFFSET(::MyNestedMessage, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::MyNestedMessage, _impl_.nested_int32_field_),
        PROTOBUF_FIELD_OFFSET(::MyNestedMessage, _impl_.nested_int64_field_),
        PROTOBUF_FIELD_OFFSET(::RegisterNodeSessionRequest, _impl_._has_bits_),
        PROTOBUF_FIELD_OFFSET(::RegisterNodeSessionRequest, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::RegisterNodeSessionRequest, _impl_.node_info_),
        PROTOBUF_FIELD_OFFSET(::RegisterNodeSessionRequest, _impl_.endpoint_),
        0,
        1,
};

static const ::_pbi::MigrationSchema
    schemas[] ABSL_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
        {0, 10, -1, sizeof(::RoutingNodeInfo)},
        {12, 24, -1, sizeof(::MessageContent)},
        {28, -1, -1, sizeof(::NodeMessageHeader)},
        {38, 48, -1, sizeof(::NodeRouteMessageRequest)},
        {50, 60, -1, sizeof(::NodeRouteMessageResponse)},
        {62, -1, -1, sizeof(::PlayerInfoExternal)},
        {71, 81, -1, sizeof(::PlayerNodeServiceRequest)},
        {83, 93, -1, sizeof(::PlayerMessageResponse)},
        {95, 104, -1, sizeof(::NodeRoutingMessageBody)},
        {105, 115, -1, sizeof(::RegisterGameNodeSessionRequest)},
        {117, 126, -1, sizeof(::RegisterGameNodeSessionResponse)},
        {127, 136, -1, sizeof(::RegisterGateNodeSessionResponse)},
        {137, 147, -1, sizeof(::RegisterCentreSessionNodeRequest)},
        {149, 158, -1, sizeof(::RegisterSessionCentreNodeResponse)},
        {159, 168, -1, sizeof(::GateSessionDisconnectRequest)},
        {169, -1, -1, sizeof(::RouteMessageRequest)},
        {182, -1, -1, sizeof(::RouteMessageResponse)},
        {195, 206, -1, sizeof(::RoutePlayerMessageRequest)},
        {209, 220, -1, sizeof(::RoutePlayerMessageResponse)},
        {223, 236, -1, sizeof(::RegisterGameNodeRequest)},
        {241, 251, -1, sizeof(::RegisterGateNodeRequest)},
        {253, -1, -1, sizeof(::UnregisterGameNodeRequest)},
        {262, -1, -1, sizeof(::ProtoFieldCheckerTestSubPB)},
        {271, 280, -1, sizeof(::ProtoFieldCheckerTestPB)},
        {281, 294, -1, sizeof(::MyProtoMessage)},
        {299, -1, -1, sizeof(::MyNestedMessage)},
        {309, 319, -1, sizeof(::RegisterNodeSessionRequest)},
};
static const ::_pb::Message* const file_default_instances[] = {
    &::_RoutingNodeInfo_default_instance_._instance,
    &::_MessageContent_default_instance_._instance,
    &::_NodeMessageHeader_default_instance_._instance,
    &::_NodeRouteMessageRequest_default_instance_._instance,
    &::_NodeRouteMessageResponse_default_instance_._instance,
    &::_PlayerInfoExternal_default_instance_._instance,
    &::_PlayerNodeServiceRequest_default_instance_._instance,
    &::_PlayerMessageResponse_default_instance_._instance,
    &::_NodeRoutingMessageBody_default_instance_._instance,
    &::_RegisterGameNodeSessionRequest_default_instance_._instance,
    &::_RegisterGameNodeSessionResponse_default_instance_._instance,
    &::_RegisterGateNodeSessionResponse_default_instance_._instance,
    &::_RegisterCentreSessionNodeRequest_default_instance_._instance,
    &::_RegisterSessionCentreNodeResponse_default_instance_._instance,
    &::_GateSessionDisconnectRequest_default_instance_._instance,
    &::_RouteMessageRequest_default_instance_._instance,
    &::_RouteMessageResponse_default_instance_._instance,
    &::_RoutePlayerMessageRequest_default_instance_._instance,
    &::_RoutePlayerMessageResponse_default_instance_._instance,
    &::_RegisterGameNodeRequest_default_instance_._instance,
    &::_RegisterGateNodeRequest_default_instance_._instance,
    &::_UnregisterGameNodeRequest_default_instance_._instance,
    &::_ProtoFieldCheckerTestSubPB_default_instance_._instance,
    &::_ProtoFieldCheckerTestPB_default_instance_._instance,
    &::_MyProtoMessage_default_instance_._instance,
    &::_MyNestedMessage_default_instance_._instance,
    &::_RegisterNodeSessionRequest_default_instance_._instance,
};
const char descriptor_table_protodef_proto_2fcommon_2fcommon_5fmessage_2eproto[] ABSL_ATTRIBUTE_SECTION_VARIABLE(
    protodesc_cold) = {
    "\n!proto/common/common_message.proto\032\031pro"
    "to/common/common.proto\032\032proto/common/ses"
    "sion.proto\032\026proto/common/tip.proto\"C\n\017Ro"
    "utingNodeInfo\022\034\n\tnode_info\030\001 \001(\0132\t.NodeI"
    "nfo\022\022\n\nmessage_id\030\002 \001(\r\"t\n\016MessageConten"
    "t\022\032\n\022serialized_message\030\001 \001(\014\022\022\n\nmessage"
    "_id\030\002 \001(\r\022\n\n\002id\030\003 \001(\004\022&\n\rerror_message\030\004"
    " \001(\0132\017.TipInfoMessage\"8\n\021NodeMessageHead"
    "er\022\017\n\007node_id\030\001 \001(\r\022\022\n\nsession_id\030\002 \001(\004\""
    "g\n\027NodeRouteMessageRequest\022(\n\017message_co"
    "ntent\030\001 \001(\0132\017.MessageContent\022\"\n\006header\030\002"
    " \001(\0132\022.NodeMessageHeader\"h\n\030NodeRouteMes"
    "sageResponse\022(\n\017message_content\030\001 \001(\0132\017."
    "MessageContent\022\"\n\006header\030\002 \001(\0132\022.NodeMes"
    "sageHeader\"\'\n\022PlayerInfoExternal\022\021\n\tplay"
    "er_id\030\001 \001(\004\"i\n\030PlayerNodeServiceRequest\022"
    "(\n\017message_content\030\001 \001(\0132\017.MessageConten"
    "t\022#\n\006header\030\002 \001(\0132\023.PlayerInfoExternal\"f"
    "\n\025PlayerMessageResponse\022(\n\017message_conte"
    "nt\030\001 \001(\0132\017.MessageContent\022#\n\006header\030\002 \001("
    "\0132\023.PlayerInfoExternal\"6\n\026NodeRoutingMes"
    "sageBody\022\034\n\tnode_info\030\002 \001(\0132\t.NodeInfo\"^"
    "\n\036RegisterGameNodeSessionRequest\022%\n\014sess"
    "ion_info\030\001 \001(\0132\017.SessionDetails\022\025\n\rscene"
    "_node_id\030\002 \001(\r\"H\n\037RegisterGameNodeSessio"
    "nResponse\022%\n\014session_info\030\001 \001(\0132\017.Sessio"
    "nDetails\"H\n\037RegisterGateNodeSessionRespo"
    "nse\022%\n\014session_info\030\001 \001(\0132\017.SessionDetai"
    "ls\"a\n RegisterCentreSessionNodeRequest\022%"
    "\n\014session_info\030\001 \001(\0132\017.SessionDetails\022\026\n"
    "\016centre_node_id\030\002 \001(\r\"J\n!RegisterSession"
    "CentreNodeResponse\022%\n\014session_info\030\001 \001(\013"
    "2\017.SessionDetails\"E\n\034GateSessionDisconne"
    "ctRequest\022%\n\014session_info\030\001 \001(\0132\017.Sessio"
    "nDetails\"}\n\023RouteMessageRequest\022\014\n\004body\030"
    "\001 \001(\014\022%\n\013route_nodes\030\002 \003(\0132\020.RoutingNode"
    "Info\022\022\n\nsession_id\030\003 \001(\004\022\n\n\002id\030\004 \001(\004\022\021\n\t"
    "is_client\030\005 \001(\010\"~\n\024RouteMessageResponse\022"
    "\014\n\004body\030\001 \001(\014\022%\n\013route_nodes\030\002 \003(\0132\020.Rou"
    "tingNodeInfo\022\022\n\nsession_id\030\003 \001(\004\022\n\n\002id\030\004"
    " \001(\004\022\021\n\tis_client\030\005 \001(\010\"q\n\031RoutePlayerMe"
    "ssageRequest\022\014\n\004body\030\001 \001(\014\022\034\n\tnode_list\030"
    "\002 \003(\0132\t.NodeInfo\022(\n\013player_info\030\003 \001(\0132\023."
    "PlayerInfoExternal\"r\n\032RoutePlayerMessage"
    "Response\022\014\n\004body\030\001 \001(\014\022\034\n\tnode_list\030\002 \003("
    "\0132\t.NodeInfo\022(\n\013player_info\030\003 \001(\0132\023.Play"
    "erInfoExternal\"\250\001\n\027RegisterGameNodeReque"
    "st\022#\n\nrpc_client\030\001 \001(\0132\017.NetworkAddress\022"
    "#\n\nrpc_server\030\002 \001(\0132\017.NetworkAddress\022\025\n\r"
    "scene_node_id\030\003 \001(\r\022\023\n\013server_type\030\004 \001(\r"
    "\022\027\n\017scene_node_type\030\005 \001(\r\"T\n\027RegisterGat"
    "eNodeRequest\022#\n\nrpc_client\030\001 \001(\0132\017.Netwo"
    "rkAddress\022\024\n\014gate_node_id\030\002 \001(\r\"2\n\031Unreg"
    "isterGameNodeRequest\022\025\n\rscene_node_id\030\001 "
    "\001(\r\"+\n\032ProtoFieldCheckerTestSubPB\022\r\n\005ite"
    "ms\030\001 \003(\t\"K\n\027ProtoFieldCheckerTestPB\0220\n\013s"
    "ub_message\030\001 \001(\0132\033.ProtoFieldCheckerTest"
    "SubPB\"\256\001\n\016MyProtoMessage\022\032\n\022single_int32"
    "_field\030\001 \001(\005\022\032\n\022single_int64_field\030\002 \001(\003"
    "\022\034\n\024repeated_int32_field\030\003 \003(\005\022\034\n\024repeat"
    "ed_int64_field\030\004 \003(\003\022(\n\016nested_message\030\005"
    " \001(\0132\020.MyNestedMessage\"I\n\017MyNestedMessag"
    "e\022\032\n\022nested_int32_field\030\001 \001(\005\022\032\n\022nested_"
    "int64_field\030\002 \001(\003\"b\n\032RegisterNodeSession"
    "Request\022\034\n\tnode_info\030\001 \001(\0132\t.NodeInfo\022&\n"
    "\010endpoint\030\002 \001(\0132\024.EndpointPBComponentB\tZ"
    "\007pb/gameb\006proto3"
};
static const ::_pbi::DescriptorTable* const descriptor_table_proto_2fcommon_2fcommon_5fmessage_2eproto_deps[3] =
    {
        &::descriptor_table_proto_2fcommon_2fcommon_2eproto,
        &::descriptor_table_proto_2fcommon_2fsession_2eproto,
        &::descriptor_table_proto_2fcommon_2ftip_2eproto,
};
static ::absl::once_flag descriptor_table_proto_2fcommon_2fcommon_5fmessage_2eproto_once;
PROTOBUF_CONSTINIT const ::_pbi::DescriptorTable descriptor_table_proto_2fcommon_2fcommon_5fmessage_2eproto = {
    false,
    false,
    2656,
    descriptor_table_protodef_proto_2fcommon_2fcommon_5fmessage_2eproto,
    "proto/common/common_message.proto",
    &descriptor_table_proto_2fcommon_2fcommon_5fmessage_2eproto_once,
    descriptor_table_proto_2fcommon_2fcommon_5fmessage_2eproto_deps,
    3,
    27,
    schemas,
    file_default_instances,
    TableStruct_proto_2fcommon_2fcommon_5fmessage_2eproto::offsets,
    file_level_enum_descriptors_proto_2fcommon_2fcommon_5fmessage_2eproto,
    file_level_service_descriptors_proto_2fcommon_2fcommon_5fmessage_2eproto,
};
// ===================================================================

class RoutingNodeInfo::_Internal {
 public:
  using HasBits =
      decltype(std::declval<RoutingNodeInfo>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
      8 * PROTOBUF_FIELD_OFFSET(RoutingNodeInfo, _impl_._has_bits_);
};

void RoutingNodeInfo::clear_node_info() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.node_info_ != nullptr) _impl_.node_info_->Clear();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
RoutingNodeInfo::RoutingNodeInfo(::google::protobuf::Arena* arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:RoutingNodeInfo)
}
inline PROTOBUF_NDEBUG_INLINE RoutingNodeInfo::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from, const ::RoutingNodeInfo& from_msg)
      : _has_bits_{from._has_bits_},
        _cached_size_{0} {}

RoutingNodeInfo::RoutingNodeInfo(
    ::google::protobuf::Arena* arena,
    const RoutingNodeInfo& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  RoutingNodeInfo* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);
  ::uint32_t cached_has_bits = _impl_._has_bits_[0];
  _impl_.node_info_ = (cached_has_bits & 0x00000001u) ? ::google::protobuf::Message::CopyConstruct<::NodeInfo>(
                              arena, *from._impl_.node_info_)
                        : nullptr;
  _impl_.message_id_ = from._impl_.message_id_;

  // @@protoc_insertion_point(copy_constructor:RoutingNodeInfo)
}
inline PROTOBUF_NDEBUG_INLINE RoutingNodeInfo::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0} {}

inline void RoutingNodeInfo::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, node_info_),
           0,
           offsetof(Impl_, message_id_) -
               offsetof(Impl_, node_info_) +
               sizeof(Impl_::message_id_));
}
RoutingNodeInfo::~RoutingNodeInfo() {
  // @@protoc_insertion_point(destructor:RoutingNodeInfo)
  SharedDtor(*this);
}
inline void RoutingNodeInfo::SharedDtor(MessageLite& self) {
  RoutingNodeInfo& this_ = static_cast<RoutingNodeInfo&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  delete this_._impl_.node_info_;
  this_._impl_.~Impl_();
}

inline void* RoutingNodeInfo::PlacementNew_(const void*, void* mem,
                                        ::google::protobuf::Arena* arena) {
  return ::new (mem) RoutingNodeInfo(arena);
}
constexpr auto RoutingNodeInfo::InternalNewImpl_() {
  return ::google::protobuf::internal::MessageCreator::ZeroInit(sizeof(RoutingNodeInfo),
                                            alignof(RoutingNodeInfo));
}
PROTOBUF_CONSTINIT
PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::google::protobuf::internal::ClassDataFull RoutingNodeInfo::_class_data_ = {
    ::google::protobuf::internal::ClassData{
        &_RoutingNodeInfo_default_instance_._instance,
        &_table_.header,
        nullptr,  // OnDemandRegisterArenaDtor
        nullptr,  // IsInitialized
        &RoutingNodeInfo::MergeImpl,
        ::google::protobuf::Message::GetNewImpl<RoutingNodeInfo>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
        &RoutingNodeInfo::SharedDtor,
        ::google::protobuf::Message::GetClearImpl<RoutingNodeInfo>(), &RoutingNodeInfo::ByteSizeLong,
            &RoutingNodeInfo::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
        PROTOBUF_FIELD_OFFSET(RoutingNodeInfo, _impl_._cached_size_),
        false,
    },
    &RoutingNodeInfo::kDescriptorMethods,
    &descriptor_table_proto_2fcommon_2fcommon_5fmessage_2eproto,
    nullptr,  // tracker
};
const ::google::protobuf::internal::ClassData* RoutingNodeInfo::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_class_data_.tc_table);
  return _class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<1, 2, 1, 0, 2> RoutingNodeInfo::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(RoutingNodeInfo, _impl_._has_bits_),
    0, // no _extensions_
    2, 8,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967292,  // skipmap
    offsetof(decltype(_table_), field_entries),
    2,  // num_field_entries
    1,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    _class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::RoutingNodeInfo>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // uint32 message_id = 2;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(RoutingNodeInfo, _impl_.message_id_), 63>(),
     {16, 63, 0, PROTOBUF_FIELD_OFFSET(RoutingNodeInfo, _impl_.message_id_)}},
    // .NodeInfo node_info = 1;
    {::_pbi::TcParser::FastMtS1,
     {10, 0, 0, PROTOBUF_FIELD_OFFSET(RoutingNodeInfo, _impl_.node_info_)}},
  }}, {{
    65535, 65535
  }}, {{
    // .NodeInfo node_info = 1;
    {PROTOBUF_FIELD_OFFSET(RoutingNodeInfo, _impl_.node_info_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
    // uint32 message_id = 2;
    {PROTOBUF_FIELD_OFFSET(RoutingNodeInfo, _impl_.message_id_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUInt32)},
  }}, {{
    {::_pbi::TcParser::GetTable<::NodeInfo>()},
  }}, {{
  }},
};

PROTOBUF_NOINLINE void RoutingNodeInfo::Clear() {
// @@protoc_insertion_point(message_clear_start:RoutingNodeInfo)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    ABSL_DCHECK(_impl_.node_info_ != nullptr);
    _impl_.node_info_->Clear();
  }
  _impl_.message_id_ = 0u;
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::uint8_t* RoutingNodeInfo::_InternalSerialize(
            const MessageLite& base, ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) {
          const RoutingNodeInfo& this_ = static_cast<const RoutingNodeInfo&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::uint8_t* RoutingNodeInfo::_InternalSerialize(
            ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) const {
          const RoutingNodeInfo& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(serialize_to_array_start:RoutingNodeInfo)
          ::uint32_t cached_has_bits = 0;
          (void)cached_has_bits;

          cached_has_bits = this_._impl_._has_bits_[0];
          // .NodeInfo node_info = 1;
          if (cached_has_bits & 0x00000001u) {
            target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
                1, *this_._impl_.node_info_, this_._impl_.node_info_->GetCachedSize(), target,
                stream);
          }

          // uint32 message_id = 2;
          if (this_._internal_message_id() != 0) {
            target = stream->EnsureSpace(target);
            target = ::_pbi::WireFormatLite::WriteUInt32ToArray(
                2, this_._internal_message_id(), target);
          }

          if (PROTOBUF_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
            target =
                ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
                    this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
          }
          // @@protoc_insertion_point(serialize_to_array_end:RoutingNodeInfo)
          return target;
        }

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::size_t RoutingNodeInfo::ByteSizeLong(const MessageLite& base) {
          const RoutingNodeInfo& this_ = static_cast<const RoutingNodeInfo&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::size_t RoutingNodeInfo::ByteSizeLong() const {
          const RoutingNodeInfo& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(message_byte_size_start:RoutingNodeInfo)
          ::size_t total_size = 0;

          ::uint32_t cached_has_bits = 0;
          // Prevent compiler warnings about cached_has_bits being unused
          (void)cached_has_bits;

          ::_pbi::Prefetch5LinesFrom7Lines(&this_);
           {
            // .NodeInfo node_info = 1;
            cached_has_bits = this_._impl_._has_bits_[0];
            if (cached_has_bits & 0x00000001u) {
              total_size += 1 +
                            ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.node_info_);
            }
          }
           {
            // uint32 message_id = 2;
            if (this_._internal_message_id() != 0) {
              total_size += ::_pbi::WireFormatLite::UInt32SizePlusOne(
                  this_._internal_message_id());
            }
          }
          return this_.MaybeComputeUnknownFieldsSize(total_size,
                                                     &this_._impl_._cached_size_);
        }

void RoutingNodeInfo::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<RoutingNodeInfo*>(&to_msg);
  auto& from = static_cast<const RoutingNodeInfo&>(from_msg);
  ::google::protobuf::Arena* arena = _this->GetArena();
  // @@protoc_insertion_point(class_specific_merge_from_start:RoutingNodeInfo)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    ABSL_DCHECK(from._impl_.node_info_ != nullptr);
    if (_this->_impl_.node_info_ == nullptr) {
      _this->_impl_.node_info_ =
          ::google::protobuf::Message::CopyConstruct<::NodeInfo>(arena, *from._impl_.node_info_);
    } else {
      _this->_impl_.node_info_->MergeFrom(*from._impl_.node_info_);
    }
  }
  if (from._internal_message_id() != 0) {
    _this->_impl_.message_id_ = from._impl_.message_id_;
  }
  _this->_impl_._has_bits_[0] |= cached_has_bits;
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void RoutingNodeInfo::CopyFrom(const RoutingNodeInfo& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:RoutingNodeInfo)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void RoutingNodeInfo::InternalSwap(RoutingNodeInfo* PROTOBUF_RESTRICT other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(RoutingNodeInfo, _impl_.message_id_)
      + sizeof(RoutingNodeInfo::_impl_.message_id_)
      - PROTOBUF_FIELD_OFFSET(RoutingNodeInfo, _impl_.node_info_)>(
          reinterpret_cast<char*>(&_impl_.node_info_),
          reinterpret_cast<char*>(&other->_impl_.node_info_));
}

::google::protobuf::Metadata RoutingNodeInfo::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class MessageContent::_Internal {
 public:
  using HasBits =
      decltype(std::declval<MessageContent>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
      8 * PROTOBUF_FIELD_OFFSET(MessageContent, _impl_._has_bits_);
};

void MessageContent::clear_error_message() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.error_message_ != nullptr) _impl_.error_message_->Clear();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
MessageContent::MessageContent(::google::protobuf::Arena* arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:MessageContent)
}
inline PROTOBUF_NDEBUG_INLINE MessageContent::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from, const ::MessageContent& from_msg)
      : _has_bits_{from._has_bits_},
        _cached_size_{0},
        serialized_message_(arena, from.serialized_message_) {}

MessageContent::MessageContent(
    ::google::protobuf::Arena* arena,
    const MessageContent& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  MessageContent* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);
  ::uint32_t cached_has_bits = _impl_._has_bits_[0];
  _impl_.error_message_ = (cached_has_bits & 0x00000001u) ? ::google::protobuf::Message::CopyConstruct<::TipInfoMessage>(
                              arena, *from._impl_.error_message_)
                        : nullptr;
  ::memcpy(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, id_),
           reinterpret_cast<const char *>(&from._impl_) +
               offsetof(Impl_, id_),
           offsetof(Impl_, message_id_) -
               offsetof(Impl_, id_) +
               sizeof(Impl_::message_id_));

  // @@protoc_insertion_point(copy_constructor:MessageContent)
}
inline PROTOBUF_NDEBUG_INLINE MessageContent::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0},
        serialized_message_(arena) {}

inline void MessageContent::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, error_message_),
           0,
           offsetof(Impl_, message_id_) -
               offsetof(Impl_, error_message_) +
               sizeof(Impl_::message_id_));
}
MessageContent::~MessageContent() {
  // @@protoc_insertion_point(destructor:MessageContent)
  SharedDtor(*this);
}
inline void MessageContent::SharedDtor(MessageLite& self) {
  MessageContent& this_ = static_cast<MessageContent&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  this_._impl_.serialized_message_.Destroy();
  delete this_._impl_.error_message_;
  this_._impl_.~Impl_();
}

inline void* MessageContent::PlacementNew_(const void*, void* mem,
                                        ::google::protobuf::Arena* arena) {
  return ::new (mem) MessageContent(arena);
}
constexpr auto MessageContent::InternalNewImpl_() {
  return ::google::protobuf::internal::MessageCreator::CopyInit(sizeof(MessageContent),
                                            alignof(MessageContent));
}
PROTOBUF_CONSTINIT
PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::google::protobuf::internal::ClassDataFull MessageContent::_class_data_ = {
    ::google::protobuf::internal::ClassData{
        &_MessageContent_default_instance_._instance,
        &_table_.header,
        nullptr,  // OnDemandRegisterArenaDtor
        nullptr,  // IsInitialized
        &MessageContent::MergeImpl,
        ::google::protobuf::Message::GetNewImpl<MessageContent>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
        &MessageContent::SharedDtor,
        ::google::protobuf::Message::GetClearImpl<MessageContent>(), &MessageContent::ByteSizeLong,
            &MessageContent::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
        PROTOBUF_FIELD_OFFSET(MessageContent, _impl_._cached_size_),
        false,
    },
    &MessageContent::kDescriptorMethods,
    &descriptor_table_proto_2fcommon_2fcommon_5fmessage_2eproto,
    nullptr,  // tracker
};
const ::google::protobuf::internal::ClassData* MessageContent::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_class_data_.tc_table);
  return _class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<2, 4, 1, 0, 2> MessageContent::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(MessageContent, _impl_._has_bits_),
    0, // no _extensions_
    4, 24,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967280,  // skipmap
    offsetof(decltype(_table_), field_entries),
    4,  // num_field_entries
    1,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    _class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::MessageContent>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // .TipInfoMessage error_message = 4;
    {::_pbi::TcParser::FastMtS1,
     {34, 0, 0, PROTOBUF_FIELD_OFFSET(MessageContent, _impl_.error_message_)}},
    // bytes serialized_message = 1;
    {::_pbi::TcParser::FastBS1,
     {10, 63, 0, PROTOBUF_FIELD_OFFSET(MessageContent, _impl_.serialized_message_)}},
    // uint32 message_id = 2;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(MessageContent, _impl_.message_id_), 63>(),
     {16, 63, 0, PROTOBUF_FIELD_OFFSET(MessageContent, _impl_.message_id_)}},
    // uint64 id = 3;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint64_t, offsetof(MessageContent, _impl_.id_), 63>(),
     {24, 63, 0, PROTOBUF_FIELD_OFFSET(MessageContent, _impl_.id_)}},
  }}, {{
    65535, 65535
  }}, {{
    // bytes serialized_message = 1;
    {PROTOBUF_FIELD_OFFSET(MessageContent, _impl_.serialized_message_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kBytes | ::_fl::kRepAString)},
    // uint32 message_id = 2;
    {PROTOBUF_FIELD_OFFSET(MessageContent, _impl_.message_id_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUInt32)},
    // uint64 id = 3;
    {PROTOBUF_FIELD_OFFSET(MessageContent, _impl_.id_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUInt64)},
    // .TipInfoMessage error_message = 4;
    {PROTOBUF_FIELD_OFFSET(MessageContent, _impl_.error_message_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
  }}, {{
    {::_pbi::TcParser::GetTable<::TipInfoMessage>()},
  }}, {{
  }},
};

PROTOBUF_NOINLINE void MessageContent::Clear() {
// @@protoc_insertion_point(message_clear_start:MessageContent)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.serialized_message_.ClearToEmpty();
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    ABSL_DCHECK(_impl_.error_message_ != nullptr);
    _impl_.error_message_->Clear();
  }
  ::memset(&_impl_.id_, 0, static_cast<::size_t>(
      reinterpret_cast<char*>(&_impl_.message_id_) -
      reinterpret_cast<char*>(&_impl_.id_)) + sizeof(_impl_.message_id_));
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::uint8_t* MessageContent::_InternalSerialize(
            const MessageLite& base, ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) {
          const MessageContent& this_ = static_cast<const MessageContent&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::uint8_t* MessageContent::_InternalSerialize(
            ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) const {
          const MessageContent& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(serialize_to_array_start:MessageContent)
          ::uint32_t cached_has_bits = 0;
          (void)cached_has_bits;

          // bytes serialized_message = 1;
          if (!this_._internal_serialized_message().empty()) {
            const std::string& _s = this_._internal_serialized_message();
            target = stream->WriteBytesMaybeAliased(1, _s, target);
          }

          // uint32 message_id = 2;
          if (this_._internal_message_id() != 0) {
            target = stream->EnsureSpace(target);
            target = ::_pbi::WireFormatLite::WriteUInt32ToArray(
                2, this_._internal_message_id(), target);
          }

          // uint64 id = 3;
          if (this_._internal_id() != 0) {
            target = stream->EnsureSpace(target);
            target = ::_pbi::WireFormatLite::WriteUInt64ToArray(
                3, this_._internal_id(), target);
          }

          cached_has_bits = this_._impl_._has_bits_[0];
          // .TipInfoMessage error_message = 4;
          if (cached_has_bits & 0x00000001u) {
            target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
                4, *this_._impl_.error_message_, this_._impl_.error_message_->GetCachedSize(), target,
                stream);
          }

          if (PROTOBUF_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
            target =
                ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
                    this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
          }
          // @@protoc_insertion_point(serialize_to_array_end:MessageContent)
          return target;
        }

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::size_t MessageContent::ByteSizeLong(const MessageLite& base) {
          const MessageContent& this_ = static_cast<const MessageContent&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::size_t MessageContent::ByteSizeLong() const {
          const MessageContent& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(message_byte_size_start:MessageContent)
          ::size_t total_size = 0;

          ::uint32_t cached_has_bits = 0;
          // Prevent compiler warnings about cached_has_bits being unused
          (void)cached_has_bits;

          ::_pbi::Prefetch5LinesFrom7Lines(&this_);
           {
            // bytes serialized_message = 1;
            if (!this_._internal_serialized_message().empty()) {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::BytesSize(
                                              this_._internal_serialized_message());
            }
          }
           {
            // .TipInfoMessage error_message = 4;
            cached_has_bits = this_._impl_._has_bits_[0];
            if (cached_has_bits & 0x00000001u) {
              total_size += 1 +
                            ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.error_message_);
            }
          }
           {
            // uint64 id = 3;
            if (this_._internal_id() != 0) {
              total_size += ::_pbi::WireFormatLite::UInt64SizePlusOne(
                  this_._internal_id());
            }
            // uint32 message_id = 2;
            if (this_._internal_message_id() != 0) {
              total_size += ::_pbi::WireFormatLite::UInt32SizePlusOne(
                  this_._internal_message_id());
            }
          }
          return this_.MaybeComputeUnknownFieldsSize(total_size,
                                                     &this_._impl_._cached_size_);
        }

void MessageContent::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<MessageContent*>(&to_msg);
  auto& from = static_cast<const MessageContent&>(from_msg);
  ::google::protobuf::Arena* arena = _this->GetArena();
  // @@protoc_insertion_point(class_specific_merge_from_start:MessageContent)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_serialized_message().empty()) {
    _this->_internal_set_serialized_message(from._internal_serialized_message());
  }
  cached_has_bits = from._impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    ABSL_DCHECK(from._impl_.error_message_ != nullptr);
    if (_this->_impl_.error_message_ == nullptr) {
      _this->_impl_.error_message_ =
          ::google::protobuf::Message::CopyConstruct<::TipInfoMessage>(arena, *from._impl_.error_message_);
    } else {
      _this->_impl_.error_message_->MergeFrom(*from._impl_.error_message_);
    }
  }
  if (from._internal_id() != 0) {
    _this->_impl_.id_ = from._impl_.id_;
  }
  if (from._internal_message_id() != 0) {
    _this->_impl_.message_id_ = from._impl_.message_id_;
  }
  _this->_impl_._has_bits_[0] |= cached_has_bits;
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void MessageContent::CopyFrom(const MessageContent& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:MessageContent)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void MessageContent::InternalSwap(MessageContent* PROTOBUF_RESTRICT other) {
  using std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.serialized_message_, &other->_impl_.serialized_message_, arena);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(MessageContent, _impl_.message_id_)
      + sizeof(MessageContent::_impl_.message_id_)
      - PROTOBUF_FIELD_OFFSET(MessageContent, _impl_.error_message_)>(
          reinterpret_cast<char*>(&_impl_.error_message_),
          reinterpret_cast<char*>(&other->_impl_.error_message_));
}

::google::protobuf::Metadata MessageContent::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class NodeMessageHeader::_Internal {
 public:
};

NodeMessageHeader::NodeMessageHeader(::google::protobuf::Arena* arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:NodeMessageHeader)
}
NodeMessageHeader::NodeMessageHeader(
    ::google::protobuf::Arena* arena, const NodeMessageHeader& from)
    : NodeMessageHeader(arena) {
  MergeFrom(from);
}
inline PROTOBUF_NDEBUG_INLINE NodeMessageHeader::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0} {}

inline void NodeMessageHeader::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, session_id_),
           0,
           offsetof(Impl_, node_id_) -
               offsetof(Impl_, session_id_) +
               sizeof(Impl_::node_id_));
}
NodeMessageHeader::~NodeMessageHeader() {
  // @@protoc_insertion_point(destructor:NodeMessageHeader)
  SharedDtor(*this);
}
inline void NodeMessageHeader::SharedDtor(MessageLite& self) {
  NodeMessageHeader& this_ = static_cast<NodeMessageHeader&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  this_._impl_.~Impl_();
}

inline void* NodeMessageHeader::PlacementNew_(const void*, void* mem,
                                        ::google::protobuf::Arena* arena) {
  return ::new (mem) NodeMessageHeader(arena);
}
constexpr auto NodeMessageHeader::InternalNewImpl_() {
  return ::google::protobuf::internal::MessageCreator::ZeroInit(sizeof(NodeMessageHeader),
                                            alignof(NodeMessageHeader));
}
PROTOBUF_CONSTINIT
PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::google::protobuf::internal::ClassDataFull NodeMessageHeader::_class_data_ = {
    ::google::protobuf::internal::ClassData{
        &_NodeMessageHeader_default_instance_._instance,
        &_table_.header,
        nullptr,  // OnDemandRegisterArenaDtor
        nullptr,  // IsInitialized
        &NodeMessageHeader::MergeImpl,
        ::google::protobuf::Message::GetNewImpl<NodeMessageHeader>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
        &NodeMessageHeader::SharedDtor,
        ::google::protobuf::Message::GetClearImpl<NodeMessageHeader>(), &NodeMessageHeader::ByteSizeLong,
            &NodeMessageHeader::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
        PROTOBUF_FIELD_OFFSET(NodeMessageHeader, _impl_._cached_size_),
        false,
    },
    &NodeMessageHeader::kDescriptorMethods,
    &descriptor_table_proto_2fcommon_2fcommon_5fmessage_2eproto,
    nullptr,  // tracker
};
const ::google::protobuf::internal::ClassData* NodeMessageHeader::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_class_data_.tc_table);
  return _class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<1, 2, 0, 0, 2> NodeMessageHeader::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    2, 8,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967292,  // skipmap
    offsetof(decltype(_table_), field_entries),
    2,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    _class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::NodeMessageHeader>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // uint64 session_id = 2;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint64_t, offsetof(NodeMessageHeader, _impl_.session_id_), 63>(),
     {16, 63, 0, PROTOBUF_FIELD_OFFSET(NodeMessageHeader, _impl_.session_id_)}},
    // uint32 node_id = 1;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(NodeMessageHeader, _impl_.node_id_), 63>(),
     {8, 63, 0, PROTOBUF_FIELD_OFFSET(NodeMessageHeader, _impl_.node_id_)}},
  }}, {{
    65535, 65535
  }}, {{
    // uint32 node_id = 1;
    {PROTOBUF_FIELD_OFFSET(NodeMessageHeader, _impl_.node_id_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUInt32)},
    // uint64 session_id = 2;
    {PROTOBUF_FIELD_OFFSET(NodeMessageHeader, _impl_.session_id_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUInt64)},
  }},
  // no aux_entries
  {{
  }},
};

PROTOBUF_NOINLINE void NodeMessageHeader::Clear() {
// @@protoc_insertion_point(message_clear_start:NodeMessageHeader)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&_impl_.session_id_, 0, static_cast<::size_t>(
      reinterpret_cast<char*>(&_impl_.node_id_) -
      reinterpret_cast<char*>(&_impl_.session_id_)) + sizeof(_impl_.node_id_));
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::uint8_t* NodeMessageHeader::_InternalSerialize(
            const MessageLite& base, ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) {
          const NodeMessageHeader& this_ = static_cast<const NodeMessageHeader&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::uint8_t* NodeMessageHeader::_InternalSerialize(
            ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) const {
          const NodeMessageHeader& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(serialize_to_array_start:NodeMessageHeader)
          ::uint32_t cached_has_bits = 0;
          (void)cached_has_bits;

          // uint32 node_id = 1;
          if (this_._internal_node_id() != 0) {
            target = stream->EnsureSpace(target);
            target = ::_pbi::WireFormatLite::WriteUInt32ToArray(
                1, this_._internal_node_id(), target);
          }

          // uint64 session_id = 2;
          if (this_._internal_session_id() != 0) {
            target = stream->EnsureSpace(target);
            target = ::_pbi::WireFormatLite::WriteUInt64ToArray(
                2, this_._internal_session_id(), target);
          }

          if (PROTOBUF_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
            target =
                ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
                    this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
          }
          // @@protoc_insertion_point(serialize_to_array_end:NodeMessageHeader)
          return target;
        }

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::size_t NodeMessageHeader::ByteSizeLong(const MessageLite& base) {
          const NodeMessageHeader& this_ = static_cast<const NodeMessageHeader&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::size_t NodeMessageHeader::ByteSizeLong() const {
          const NodeMessageHeader& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(message_byte_size_start:NodeMessageHeader)
          ::size_t total_size = 0;

          ::uint32_t cached_has_bits = 0;
          // Prevent compiler warnings about cached_has_bits being unused
          (void)cached_has_bits;

          ::_pbi::Prefetch5LinesFrom7Lines(&this_);
           {
            // uint64 session_id = 2;
            if (this_._internal_session_id() != 0) {
              total_size += ::_pbi::WireFormatLite::UInt64SizePlusOne(
                  this_._internal_session_id());
            }
            // uint32 node_id = 1;
            if (this_._internal_node_id() != 0) {
              total_size += ::_pbi::WireFormatLite::UInt32SizePlusOne(
                  this_._internal_node_id());
            }
          }
          return this_.MaybeComputeUnknownFieldsSize(total_size,
                                                     &this_._impl_._cached_size_);
        }

void NodeMessageHeader::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<NodeMessageHeader*>(&to_msg);
  auto& from = static_cast<const NodeMessageHeader&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:NodeMessageHeader)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_session_id() != 0) {
    _this->_impl_.session_id_ = from._impl_.session_id_;
  }
  if (from._internal_node_id() != 0) {
    _this->_impl_.node_id_ = from._impl_.node_id_;
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void NodeMessageHeader::CopyFrom(const NodeMessageHeader& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:NodeMessageHeader)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void NodeMessageHeader::InternalSwap(NodeMessageHeader* PROTOBUF_RESTRICT other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(NodeMessageHeader, _impl_.node_id_)
      + sizeof(NodeMessageHeader::_impl_.node_id_)
      - PROTOBUF_FIELD_OFFSET(NodeMessageHeader, _impl_.session_id_)>(
          reinterpret_cast<char*>(&_impl_.session_id_),
          reinterpret_cast<char*>(&other->_impl_.session_id_));
}

::google::protobuf::Metadata NodeMessageHeader::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class NodeRouteMessageRequest::_Internal {
 public:
  using HasBits =
      decltype(std::declval<NodeRouteMessageRequest>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
      8 * PROTOBUF_FIELD_OFFSET(NodeRouteMessageRequest, _impl_._has_bits_);
};

NodeRouteMessageRequest::NodeRouteMessageRequest(::google::protobuf::Arena* arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:NodeRouteMessageRequest)
}
inline PROTOBUF_NDEBUG_INLINE NodeRouteMessageRequest::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from, const ::NodeRouteMessageRequest& from_msg)
      : _has_bits_{from._has_bits_},
        _cached_size_{0} {}

NodeRouteMessageRequest::NodeRouteMessageRequest(
    ::google::protobuf::Arena* arena,
    const NodeRouteMessageRequest& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  NodeRouteMessageRequest* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);
  ::uint32_t cached_has_bits = _impl_._has_bits_[0];
  _impl_.message_content_ = (cached_has_bits & 0x00000001u) ? ::google::protobuf::Message::CopyConstruct<::MessageContent>(
                              arena, *from._impl_.message_content_)
                        : nullptr;
  _impl_.header_ = (cached_has_bits & 0x00000002u) ? ::google::protobuf::Message::CopyConstruct<::NodeMessageHeader>(
                              arena, *from._impl_.header_)
                        : nullptr;

  // @@protoc_insertion_point(copy_constructor:NodeRouteMessageRequest)
}
inline PROTOBUF_NDEBUG_INLINE NodeRouteMessageRequest::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0} {}

inline void NodeRouteMessageRequest::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, message_content_),
           0,
           offsetof(Impl_, header_) -
               offsetof(Impl_, message_content_) +
               sizeof(Impl_::header_));
}
NodeRouteMessageRequest::~NodeRouteMessageRequest() {
  // @@protoc_insertion_point(destructor:NodeRouteMessageRequest)
  SharedDtor(*this);
}
inline void NodeRouteMessageRequest::SharedDtor(MessageLite& self) {
  NodeRouteMessageRequest& this_ = static_cast<NodeRouteMessageRequest&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  delete this_._impl_.message_content_;
  delete this_._impl_.header_;
  this_._impl_.~Impl_();
}

inline void* NodeRouteMessageRequest::PlacementNew_(const void*, void* mem,
                                        ::google::protobuf::Arena* arena) {
  return ::new (mem) NodeRouteMessageRequest(arena);
}
constexpr auto NodeRouteMessageRequest::InternalNewImpl_() {
  return ::google::protobuf::internal::MessageCreator::ZeroInit(sizeof(NodeRouteMessageRequest),
                                            alignof(NodeRouteMessageRequest));
}
PROTOBUF_CONSTINIT
PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::google::protobuf::internal::ClassDataFull NodeRouteMessageRequest::_class_data_ = {
    ::google::protobuf::internal::ClassData{
        &_NodeRouteMessageRequest_default_instance_._instance,
        &_table_.header,
        nullptr,  // OnDemandRegisterArenaDtor
        nullptr,  // IsInitialized
        &NodeRouteMessageRequest::MergeImpl,
        ::google::protobuf::Message::GetNewImpl<NodeRouteMessageRequest>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
        &NodeRouteMessageRequest::SharedDtor,
        ::google::protobuf::Message::GetClearImpl<NodeRouteMessageRequest>(), &NodeRouteMessageRequest::ByteSizeLong,
            &NodeRouteMessageRequest::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
        PROTOBUF_FIELD_OFFSET(NodeRouteMessageRequest, _impl_._cached_size_),
        false,
    },
    &NodeRouteMessageRequest::kDescriptorMethods,
    &descriptor_table_proto_2fcommon_2fcommon_5fmessage_2eproto,
    nullptr,  // tracker
};
const ::google::protobuf::internal::ClassData* NodeRouteMessageRequest::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_class_data_.tc_table);
  return _class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<1, 2, 2, 0, 2> NodeRouteMessageRequest::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(NodeRouteMessageRequest, _impl_._has_bits_),
    0, // no _extensions_
    2, 8,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967292,  // skipmap
    offsetof(decltype(_table_), field_entries),
    2,  // num_field_entries
    2,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    _class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::NodeRouteMessageRequest>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // .NodeMessageHeader header = 2;
    {::_pbi::TcParser::FastMtS1,
     {18, 1, 1, PROTOBUF_FIELD_OFFSET(NodeRouteMessageRequest, _impl_.header_)}},
    // .MessageContent message_content = 1;
    {::_pbi::TcParser::FastMtS1,
     {10, 0, 0, PROTOBUF_FIELD_OFFSET(NodeRouteMessageRequest, _impl_.message_content_)}},
  }}, {{
    65535, 65535
  }}, {{
    // .MessageContent message_content = 1;
    {PROTOBUF_FIELD_OFFSET(NodeRouteMessageRequest, _impl_.message_content_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
    // .NodeMessageHeader header = 2;
    {PROTOBUF_FIELD_OFFSET(NodeRouteMessageRequest, _impl_.header_), _Internal::kHasBitsOffset + 1, 1,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
  }}, {{
    {::_pbi::TcParser::GetTable<::MessageContent>()},
    {::_pbi::TcParser::GetTable<::NodeMessageHeader>()},
  }}, {{
  }},
};

PROTOBUF_NOINLINE void NodeRouteMessageRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:NodeRouteMessageRequest)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    if (cached_has_bits & 0x00000001u) {
      ABSL_DCHECK(_impl_.message_content_ != nullptr);
      _impl_.message_content_->Clear();
    }
    if (cached_has_bits & 0x00000002u) {
      ABSL_DCHECK(_impl_.header_ != nullptr);
      _impl_.header_->Clear();
    }
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::uint8_t* NodeRouteMessageRequest::_InternalSerialize(
            const MessageLite& base, ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) {
          const NodeRouteMessageRequest& this_ = static_cast<const NodeRouteMessageRequest&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::uint8_t* NodeRouteMessageRequest::_InternalSerialize(
            ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) const {
          const NodeRouteMessageRequest& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(serialize_to_array_start:NodeRouteMessageRequest)
          ::uint32_t cached_has_bits = 0;
          (void)cached_has_bits;

          cached_has_bits = this_._impl_._has_bits_[0];
          // .MessageContent message_content = 1;
          if (cached_has_bits & 0x00000001u) {
            target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
                1, *this_._impl_.message_content_, this_._impl_.message_content_->GetCachedSize(), target,
                stream);
          }

          // .NodeMessageHeader header = 2;
          if (cached_has_bits & 0x00000002u) {
            target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
                2, *this_._impl_.header_, this_._impl_.header_->GetCachedSize(), target,
                stream);
          }

          if (PROTOBUF_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
            target =
                ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
                    this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
          }
          // @@protoc_insertion_point(serialize_to_array_end:NodeRouteMessageRequest)
          return target;
        }

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::size_t NodeRouteMessageRequest::ByteSizeLong(const MessageLite& base) {
          const NodeRouteMessageRequest& this_ = static_cast<const NodeRouteMessageRequest&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::size_t NodeRouteMessageRequest::ByteSizeLong() const {
          const NodeRouteMessageRequest& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(message_byte_size_start:NodeRouteMessageRequest)
          ::size_t total_size = 0;

          ::uint32_t cached_has_bits = 0;
          // Prevent compiler warnings about cached_has_bits being unused
          (void)cached_has_bits;

          ::_pbi::Prefetch5LinesFrom7Lines(&this_);
          cached_has_bits = this_._impl_._has_bits_[0];
          if (cached_has_bits & 0x00000003u) {
            // .MessageContent message_content = 1;
            if (cached_has_bits & 0x00000001u) {
              total_size += 1 +
                            ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.message_content_);
            }
            // .NodeMessageHeader header = 2;
            if (cached_has_bits & 0x00000002u) {
              total_size += 1 +
                            ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.header_);
            }
          }
          return this_.MaybeComputeUnknownFieldsSize(total_size,
                                                     &this_._impl_._cached_size_);
        }

void NodeRouteMessageRequest::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<NodeRouteMessageRequest*>(&to_msg);
  auto& from = static_cast<const NodeRouteMessageRequest&>(from_msg);
  ::google::protobuf::Arena* arena = _this->GetArena();
  // @@protoc_insertion_point(class_specific_merge_from_start:NodeRouteMessageRequest)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._impl_._has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    if (cached_has_bits & 0x00000001u) {
      ABSL_DCHECK(from._impl_.message_content_ != nullptr);
      if (_this->_impl_.message_content_ == nullptr) {
        _this->_impl_.message_content_ =
            ::google::protobuf::Message::CopyConstruct<::MessageContent>(arena, *from._impl_.message_content_);
      } else {
        _this->_impl_.message_content_->MergeFrom(*from._impl_.message_content_);
      }
    }
    if (cached_has_bits & 0x00000002u) {
      ABSL_DCHECK(from._impl_.header_ != nullptr);
      if (_this->_impl_.header_ == nullptr) {
        _this->_impl_.header_ =
            ::google::protobuf::Message::CopyConstruct<::NodeMessageHeader>(arena, *from._impl_.header_);
      } else {
        _this->_impl_.header_->MergeFrom(*from._impl_.header_);
      }
    }
  }
  _this->_impl_._has_bits_[0] |= cached_has_bits;
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void NodeRouteMessageRequest::CopyFrom(const NodeRouteMessageRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:NodeRouteMessageRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void NodeRouteMessageRequest::InternalSwap(NodeRouteMessageRequest* PROTOBUF_RESTRICT other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(NodeRouteMessageRequest, _impl_.header_)
      + sizeof(NodeRouteMessageRequest::_impl_.header_)
      - PROTOBUF_FIELD_OFFSET(NodeRouteMessageRequest, _impl_.message_content_)>(
          reinterpret_cast<char*>(&_impl_.message_content_),
          reinterpret_cast<char*>(&other->_impl_.message_content_));
}

::google::protobuf::Metadata NodeRouteMessageRequest::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class NodeRouteMessageResponse::_Internal {
 public:
  using HasBits =
      decltype(std::declval<NodeRouteMessageResponse>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
      8 * PROTOBUF_FIELD_OFFSET(NodeRouteMessageResponse, _impl_._has_bits_);
};

NodeRouteMessageResponse::NodeRouteMessageResponse(::google::protobuf::Arena* arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:NodeRouteMessageResponse)
}
inline PROTOBUF_NDEBUG_INLINE NodeRouteMessageResponse::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from, const ::NodeRouteMessageResponse& from_msg)
      : _has_bits_{from._has_bits_},
        _cached_size_{0} {}

NodeRouteMessageResponse::NodeRouteMessageResponse(
    ::google::protobuf::Arena* arena,
    const NodeRouteMessageResponse& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  NodeRouteMessageResponse* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);
  ::uint32_t cached_has_bits = _impl_._has_bits_[0];
  _impl_.message_content_ = (cached_has_bits & 0x00000001u) ? ::google::protobuf::Message::CopyConstruct<::MessageContent>(
                              arena, *from._impl_.message_content_)
                        : nullptr;
  _impl_.header_ = (cached_has_bits & 0x00000002u) ? ::google::protobuf::Message::CopyConstruct<::NodeMessageHeader>(
                              arena, *from._impl_.header_)
                        : nullptr;

  // @@protoc_insertion_point(copy_constructor:NodeRouteMessageResponse)
}
inline PROTOBUF_NDEBUG_INLINE NodeRouteMessageResponse::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0} {}

inline void NodeRouteMessageResponse::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, message_content_),
           0,
           offsetof(Impl_, header_) -
               offsetof(Impl_, message_content_) +
               sizeof(Impl_::header_));
}
NodeRouteMessageResponse::~NodeRouteMessageResponse() {
  // @@protoc_insertion_point(destructor:NodeRouteMessageResponse)
  SharedDtor(*this);
}
inline void NodeRouteMessageResponse::SharedDtor(MessageLite& self) {
  NodeRouteMessageResponse& this_ = static_cast<NodeRouteMessageResponse&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  delete this_._impl_.message_content_;
  delete this_._impl_.header_;
  this_._impl_.~Impl_();
}

inline void* NodeRouteMessageResponse::PlacementNew_(const void*, void* mem,
                                        ::google::protobuf::Arena* arena) {
  return ::new (mem) NodeRouteMessageResponse(arena);
}
constexpr auto NodeRouteMessageResponse::InternalNewImpl_() {
  return ::google::protobuf::internal::MessageCreator::ZeroInit(sizeof(NodeRouteMessageResponse),
                                            alignof(NodeRouteMessageResponse));
}
PROTOBUF_CONSTINIT
PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::google::protobuf::internal::ClassDataFull NodeRouteMessageResponse::_class_data_ = {
    ::google::protobuf::internal::ClassData{
        &_NodeRouteMessageResponse_default_instance_._instance,
        &_table_.header,
        nullptr,  // OnDemandRegisterArenaDtor
        nullptr,  // IsInitialized
        &NodeRouteMessageResponse::MergeImpl,
        ::google::protobuf::Message::GetNewImpl<NodeRouteMessageResponse>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
        &NodeRouteMessageResponse::SharedDtor,
        ::google::protobuf::Message::GetClearImpl<NodeRouteMessageResponse>(), &NodeRouteMessageResponse::ByteSizeLong,
            &NodeRouteMessageResponse::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
        PROTOBUF_FIELD_OFFSET(NodeRouteMessageResponse, _impl_._cached_size_),
        false,
    },
    &NodeRouteMessageResponse::kDescriptorMethods,
    &descriptor_table_proto_2fcommon_2fcommon_5fmessage_2eproto,
    nullptr,  // tracker
};
const ::google::protobuf::internal::ClassData* NodeRouteMessageResponse::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_class_data_.tc_table);
  return _class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<1, 2, 2, 0, 2> NodeRouteMessageResponse::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(NodeRouteMessageResponse, _impl_._has_bits_),
    0, // no _extensions_
    2, 8,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967292,  // skipmap
    offsetof(decltype(_table_), field_entries),
    2,  // num_field_entries
    2,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    _class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::NodeRouteMessageResponse>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // .NodeMessageHeader header = 2;
    {::_pbi::TcParser::FastMtS1,
     {18, 1, 1, PROTOBUF_FIELD_OFFSET(NodeRouteMessageResponse, _impl_.header_)}},
    // .MessageContent message_content = 1;
    {::_pbi::TcParser::FastMtS1,
     {10, 0, 0, PROTOBUF_FIELD_OFFSET(NodeRouteMessageResponse, _impl_.message_content_)}},
  }}, {{
    65535, 65535
  }}, {{
    // .MessageContent message_content = 1;
    {PROTOBUF_FIELD_OFFSET(NodeRouteMessageResponse, _impl_.message_content_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
    // .NodeMessageHeader header = 2;
    {PROTOBUF_FIELD_OFFSET(NodeRouteMessageResponse, _impl_.header_), _Internal::kHasBitsOffset + 1, 1,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
  }}, {{
    {::_pbi::TcParser::GetTable<::MessageContent>()},
    {::_pbi::TcParser::GetTable<::NodeMessageHeader>()},
  }}, {{
  }},
};

PROTOBUF_NOINLINE void NodeRouteMessageResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:NodeRouteMessageResponse)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    if (cached_has_bits & 0x00000001u) {
      ABSL_DCHECK(_impl_.message_content_ != nullptr);
      _impl_.message_content_->Clear();
    }
    if (cached_has_bits & 0x00000002u) {
      ABSL_DCHECK(_impl_.header_ != nullptr);
      _impl_.header_->Clear();
    }
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::uint8_t* NodeRouteMessageResponse::_InternalSerialize(
            const MessageLite& base, ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) {
          const NodeRouteMessageResponse& this_ = static_cast<const NodeRouteMessageResponse&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::uint8_t* NodeRouteMessageResponse::_InternalSerialize(
            ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) const {
          const NodeRouteMessageResponse& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(serialize_to_array_start:NodeRouteMessageResponse)
          ::uint32_t cached_has_bits = 0;
          (void)cached_has_bits;

          cached_has_bits = this_._impl_._has_bits_[0];
          // .MessageContent message_content = 1;
          if (cached_has_bits & 0x00000001u) {
            target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
                1, *this_._impl_.message_content_, this_._impl_.message_content_->GetCachedSize(), target,
                stream);
          }

          // .NodeMessageHeader header = 2;
          if (cached_has_bits & 0x00000002u) {
            target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
                2, *this_._impl_.header_, this_._impl_.header_->GetCachedSize(), target,
                stream);
          }

          if (PROTOBUF_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
            target =
                ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
                    this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
          }
          // @@protoc_insertion_point(serialize_to_array_end:NodeRouteMessageResponse)
          return target;
        }

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::size_t NodeRouteMessageResponse::ByteSizeLong(const MessageLite& base) {
          const NodeRouteMessageResponse& this_ = static_cast<const NodeRouteMessageResponse&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::size_t NodeRouteMessageResponse::ByteSizeLong() const {
          const NodeRouteMessageResponse& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(message_byte_size_start:NodeRouteMessageResponse)
          ::size_t total_size = 0;

          ::uint32_t cached_has_bits = 0;
          // Prevent compiler warnings about cached_has_bits being unused
          (void)cached_has_bits;

          ::_pbi::Prefetch5LinesFrom7Lines(&this_);
          cached_has_bits = this_._impl_._has_bits_[0];
          if (cached_has_bits & 0x00000003u) {
            // .MessageContent message_content = 1;
            if (cached_has_bits & 0x00000001u) {
              total_size += 1 +
                            ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.message_content_);
            }
            // .NodeMessageHeader header = 2;
            if (cached_has_bits & 0x00000002u) {
              total_size += 1 +
                            ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.header_);
            }
          }
          return this_.MaybeComputeUnknownFieldsSize(total_size,
                                                     &this_._impl_._cached_size_);
        }

void NodeRouteMessageResponse::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<NodeRouteMessageResponse*>(&to_msg);
  auto& from = static_cast<const NodeRouteMessageResponse&>(from_msg);
  ::google::protobuf::Arena* arena = _this->GetArena();
  // @@protoc_insertion_point(class_specific_merge_from_start:NodeRouteMessageResponse)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._impl_._has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    if (cached_has_bits & 0x00000001u) {
      ABSL_DCHECK(from._impl_.message_content_ != nullptr);
      if (_this->_impl_.message_content_ == nullptr) {
        _this->_impl_.message_content_ =
            ::google::protobuf::Message::CopyConstruct<::MessageContent>(arena, *from._impl_.message_content_);
      } else {
        _this->_impl_.message_content_->MergeFrom(*from._impl_.message_content_);
      }
    }
    if (cached_has_bits & 0x00000002u) {
      ABSL_DCHECK(from._impl_.header_ != nullptr);
      if (_this->_impl_.header_ == nullptr) {
        _this->_impl_.header_ =
            ::google::protobuf::Message::CopyConstruct<::NodeMessageHeader>(arena, *from._impl_.header_);
      } else {
        _this->_impl_.header_->MergeFrom(*from._impl_.header_);
      }
    }
  }
  _this->_impl_._has_bits_[0] |= cached_has_bits;
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void NodeRouteMessageResponse::CopyFrom(const NodeRouteMessageResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:NodeRouteMessageResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void NodeRouteMessageResponse::InternalSwap(NodeRouteMessageResponse* PROTOBUF_RESTRICT other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(NodeRouteMessageResponse, _impl_.header_)
      + sizeof(NodeRouteMessageResponse::_impl_.header_)
      - PROTOBUF_FIELD_OFFSET(NodeRouteMessageResponse, _impl_.message_content_)>(
          reinterpret_cast<char*>(&_impl_.message_content_),
          reinterpret_cast<char*>(&other->_impl_.message_content_));
}

::google::protobuf::Metadata NodeRouteMessageResponse::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class PlayerInfoExternal::_Internal {
 public:
};

PlayerInfoExternal::PlayerInfoExternal(::google::protobuf::Arena* arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:PlayerInfoExternal)
}
PlayerInfoExternal::PlayerInfoExternal(
    ::google::protobuf::Arena* arena, const PlayerInfoExternal& from)
    : PlayerInfoExternal(arena) {
  MergeFrom(from);
}
inline PROTOBUF_NDEBUG_INLINE PlayerInfoExternal::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0} {}

inline void PlayerInfoExternal::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  _impl_.player_id_ = {};
}
PlayerInfoExternal::~PlayerInfoExternal() {
  // @@protoc_insertion_point(destructor:PlayerInfoExternal)
  SharedDtor(*this);
}
inline void PlayerInfoExternal::SharedDtor(MessageLite& self) {
  PlayerInfoExternal& this_ = static_cast<PlayerInfoExternal&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  this_._impl_.~Impl_();
}

inline void* PlayerInfoExternal::PlacementNew_(const void*, void* mem,
                                        ::google::protobuf::Arena* arena) {
  return ::new (mem) PlayerInfoExternal(arena);
}
constexpr auto PlayerInfoExternal::InternalNewImpl_() {
  return ::google::protobuf::internal::MessageCreator::ZeroInit(sizeof(PlayerInfoExternal),
                                            alignof(PlayerInfoExternal));
}
PROTOBUF_CONSTINIT
PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::google::protobuf::internal::ClassDataFull PlayerInfoExternal::_class_data_ = {
    ::google::protobuf::internal::ClassData{
        &_PlayerInfoExternal_default_instance_._instance,
        &_table_.header,
        nullptr,  // OnDemandRegisterArenaDtor
        nullptr,  // IsInitialized
        &PlayerInfoExternal::MergeImpl,
        ::google::protobuf::Message::GetNewImpl<PlayerInfoExternal>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
        &PlayerInfoExternal::SharedDtor,
        ::google::protobuf::Message::GetClearImpl<PlayerInfoExternal>(), &PlayerInfoExternal::ByteSizeLong,
            &PlayerInfoExternal::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
        PROTOBUF_FIELD_OFFSET(PlayerInfoExternal, _impl_._cached_size_),
        false,
    },
    &PlayerInfoExternal::kDescriptorMethods,
    &descriptor_table_proto_2fcommon_2fcommon_5fmessage_2eproto,
    nullptr,  // tracker
};
const ::google::protobuf::internal::ClassData* PlayerInfoExternal::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_class_data_.tc_table);
  return _class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<0, 1, 0, 0, 2> PlayerInfoExternal::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    1, 0,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967294,  // skipmap
    offsetof(decltype(_table_), field_entries),
    1,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    _class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::PlayerInfoExternal>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // uint64 player_id = 1;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint64_t, offsetof(PlayerInfoExternal, _impl_.player_id_), 63>(),
     {8, 63, 0, PROTOBUF_FIELD_OFFSET(PlayerInfoExternal, _impl_.player_id_)}},
  }}, {{
    65535, 65535
  }}, {{
    // uint64 player_id = 1;
    {PROTOBUF_FIELD_OFFSET(PlayerInfoExternal, _impl_.player_id_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUInt64)},
  }},
  // no aux_entries
  {{
  }},
};

PROTOBUF_NOINLINE void PlayerInfoExternal::Clear() {
// @@protoc_insertion_point(message_clear_start:PlayerInfoExternal)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.player_id_ = ::uint64_t{0u};
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::uint8_t* PlayerInfoExternal::_InternalSerialize(
            const MessageLite& base, ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) {
          const PlayerInfoExternal& this_ = static_cast<const PlayerInfoExternal&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::uint8_t* PlayerInfoExternal::_InternalSerialize(
            ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) const {
          const PlayerInfoExternal& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(serialize_to_array_start:PlayerInfoExternal)
          ::uint32_t cached_has_bits = 0;
          (void)cached_has_bits;

          // uint64 player_id = 1;
          if (this_._internal_player_id() != 0) {
            target = stream->EnsureSpace(target);
            target = ::_pbi::WireFormatLite::WriteUInt64ToArray(
                1, this_._internal_player_id(), target);
          }

          if (PROTOBUF_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
            target =
                ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
                    this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
          }
          // @@protoc_insertion_point(serialize_to_array_end:PlayerInfoExternal)
          return target;
        }

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::size_t PlayerInfoExternal::ByteSizeLong(const MessageLite& base) {
          const PlayerInfoExternal& this_ = static_cast<const PlayerInfoExternal&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::size_t PlayerInfoExternal::ByteSizeLong() const {
          const PlayerInfoExternal& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(message_byte_size_start:PlayerInfoExternal)
          ::size_t total_size = 0;

          ::uint32_t cached_has_bits = 0;
          // Prevent compiler warnings about cached_has_bits being unused
          (void)cached_has_bits;

           {
            // uint64 player_id = 1;
            if (this_._internal_player_id() != 0) {
              total_size += ::_pbi::WireFormatLite::UInt64SizePlusOne(
                  this_._internal_player_id());
            }
          }
          return this_.MaybeComputeUnknownFieldsSize(total_size,
                                                     &this_._impl_._cached_size_);
        }

void PlayerInfoExternal::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<PlayerInfoExternal*>(&to_msg);
  auto& from = static_cast<const PlayerInfoExternal&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:PlayerInfoExternal)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_player_id() != 0) {
    _this->_impl_.player_id_ = from._impl_.player_id_;
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void PlayerInfoExternal::CopyFrom(const PlayerInfoExternal& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:PlayerInfoExternal)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void PlayerInfoExternal::InternalSwap(PlayerInfoExternal* PROTOBUF_RESTRICT other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
        swap(_impl_.player_id_, other->_impl_.player_id_);
}

::google::protobuf::Metadata PlayerInfoExternal::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class PlayerNodeServiceRequest::_Internal {
 public:
  using HasBits =
      decltype(std::declval<PlayerNodeServiceRequest>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
      8 * PROTOBUF_FIELD_OFFSET(PlayerNodeServiceRequest, _impl_._has_bits_);
};

PlayerNodeServiceRequest::PlayerNodeServiceRequest(::google::protobuf::Arena* arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:PlayerNodeServiceRequest)
}
inline PROTOBUF_NDEBUG_INLINE PlayerNodeServiceRequest::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from, const ::PlayerNodeServiceRequest& from_msg)
      : _has_bits_{from._has_bits_},
        _cached_size_{0} {}

PlayerNodeServiceRequest::PlayerNodeServiceRequest(
    ::google::protobuf::Arena* arena,
    const PlayerNodeServiceRequest& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  PlayerNodeServiceRequest* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);
  ::uint32_t cached_has_bits = _impl_._has_bits_[0];
  _impl_.message_content_ = (cached_has_bits & 0x00000001u) ? ::google::protobuf::Message::CopyConstruct<::MessageContent>(
                              arena, *from._impl_.message_content_)
                        : nullptr;
  _impl_.header_ = (cached_has_bits & 0x00000002u) ? ::google::protobuf::Message::CopyConstruct<::PlayerInfoExternal>(
                              arena, *from._impl_.header_)
                        : nullptr;

  // @@protoc_insertion_point(copy_constructor:PlayerNodeServiceRequest)
}
inline PROTOBUF_NDEBUG_INLINE PlayerNodeServiceRequest::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0} {}

inline void PlayerNodeServiceRequest::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, message_content_),
           0,
           offsetof(Impl_, header_) -
               offsetof(Impl_, message_content_) +
               sizeof(Impl_::header_));
}
PlayerNodeServiceRequest::~PlayerNodeServiceRequest() {
  // @@protoc_insertion_point(destructor:PlayerNodeServiceRequest)
  SharedDtor(*this);
}
inline void PlayerNodeServiceRequest::SharedDtor(MessageLite& self) {
  PlayerNodeServiceRequest& this_ = static_cast<PlayerNodeServiceRequest&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  delete this_._impl_.message_content_;
  delete this_._impl_.header_;
  this_._impl_.~Impl_();
}

inline void* PlayerNodeServiceRequest::PlacementNew_(const void*, void* mem,
                                        ::google::protobuf::Arena* arena) {
  return ::new (mem) PlayerNodeServiceRequest(arena);
}
constexpr auto PlayerNodeServiceRequest::InternalNewImpl_() {
  return ::google::protobuf::internal::MessageCreator::ZeroInit(sizeof(PlayerNodeServiceRequest),
                                            alignof(PlayerNodeServiceRequest));
}
PROTOBUF_CONSTINIT
PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::google::protobuf::internal::ClassDataFull PlayerNodeServiceRequest::_class_data_ = {
    ::google::protobuf::internal::ClassData{
        &_PlayerNodeServiceRequest_default_instance_._instance,
        &_table_.header,
        nullptr,  // OnDemandRegisterArenaDtor
        nullptr,  // IsInitialized
        &PlayerNodeServiceRequest::MergeImpl,
        ::google::protobuf::Message::GetNewImpl<PlayerNodeServiceRequest>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
        &PlayerNodeServiceRequest::SharedDtor,
        ::google::protobuf::Message::GetClearImpl<PlayerNodeServiceRequest>(), &PlayerNodeServiceRequest::ByteSizeLong,
            &PlayerNodeServiceRequest::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
        PROTOBUF_FIELD_OFFSET(PlayerNodeServiceRequest, _impl_._cached_size_),
        false,
    },
    &PlayerNodeServiceRequest::kDescriptorMethods,
    &descriptor_table_proto_2fcommon_2fcommon_5fmessage_2eproto,
    nullptr,  // tracker
};
const ::google::protobuf::internal::ClassData* PlayerNodeServiceRequest::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_class_data_.tc_table);
  return _class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<1, 2, 2, 0, 2> PlayerNodeServiceRequest::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(PlayerNodeServiceRequest, _impl_._has_bits_),
    0, // no _extensions_
    2, 8,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967292,  // skipmap
    offsetof(decltype(_table_), field_entries),
    2,  // num_field_entries
    2,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    _class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::PlayerNodeServiceRequest>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // .PlayerInfoExternal header = 2;
    {::_pbi::TcParser::FastMtS1,
     {18, 1, 1, PROTOBUF_FIELD_OFFSET(PlayerNodeServiceRequest, _impl_.header_)}},
    // .MessageContent message_content = 1;
    {::_pbi::TcParser::FastMtS1,
     {10, 0, 0, PROTOBUF_FIELD_OFFSET(PlayerNodeServiceRequest, _impl_.message_content_)}},
  }}, {{
    65535, 65535
  }}, {{
    // .MessageContent message_content = 1;
    {PROTOBUF_FIELD_OFFSET(PlayerNodeServiceRequest, _impl_.message_content_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
    // .PlayerInfoExternal header = 2;
    {PROTOBUF_FIELD_OFFSET(PlayerNodeServiceRequest, _impl_.header_), _Internal::kHasBitsOffset + 1, 1,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
  }}, {{
    {::_pbi::TcParser::GetTable<::MessageContent>()},
    {::_pbi::TcParser::GetTable<::PlayerInfoExternal>()},
  }}, {{
  }},
};

PROTOBUF_NOINLINE void PlayerNodeServiceRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:PlayerNodeServiceRequest)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    if (cached_has_bits & 0x00000001u) {
      ABSL_DCHECK(_impl_.message_content_ != nullptr);
      _impl_.message_content_->Clear();
    }
    if (cached_has_bits & 0x00000002u) {
      ABSL_DCHECK(_impl_.header_ != nullptr);
      _impl_.header_->Clear();
    }
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::uint8_t* PlayerNodeServiceRequest::_InternalSerialize(
            const MessageLite& base, ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) {
          const PlayerNodeServiceRequest& this_ = static_cast<const PlayerNodeServiceRequest&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::uint8_t* PlayerNodeServiceRequest::_InternalSerialize(
            ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) const {
          const PlayerNodeServiceRequest& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(serialize_to_array_start:PlayerNodeServiceRequest)
          ::uint32_t cached_has_bits = 0;
          (void)cached_has_bits;

          cached_has_bits = this_._impl_._has_bits_[0];
          // .MessageContent message_content = 1;
          if (cached_has_bits & 0x00000001u) {
            target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
                1, *this_._impl_.message_content_, this_._impl_.message_content_->GetCachedSize(), target,
                stream);
          }

          // .PlayerInfoExternal header = 2;
          if (cached_has_bits & 0x00000002u) {
            target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
                2, *this_._impl_.header_, this_._impl_.header_->GetCachedSize(), target,
                stream);
          }

          if (PROTOBUF_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
            target =
                ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
                    this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
          }
          // @@protoc_insertion_point(serialize_to_array_end:PlayerNodeServiceRequest)
          return target;
        }

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::size_t PlayerNodeServiceRequest::ByteSizeLong(const MessageLite& base) {
          const PlayerNodeServiceRequest& this_ = static_cast<const PlayerNodeServiceRequest&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::size_t PlayerNodeServiceRequest::ByteSizeLong() const {
          const PlayerNodeServiceRequest& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(message_byte_size_start:PlayerNodeServiceRequest)
          ::size_t total_size = 0;

          ::uint32_t cached_has_bits = 0;
          // Prevent compiler warnings about cached_has_bits being unused
          (void)cached_has_bits;

          ::_pbi::Prefetch5LinesFrom7Lines(&this_);
          cached_has_bits = this_._impl_._has_bits_[0];
          if (cached_has_bits & 0x00000003u) {
            // .MessageContent message_content = 1;
            if (cached_has_bits & 0x00000001u) {
              total_size += 1 +
                            ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.message_content_);
            }
            // .PlayerInfoExternal header = 2;
            if (cached_has_bits & 0x00000002u) {
              total_size += 1 +
                            ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.header_);
            }
          }
          return this_.MaybeComputeUnknownFieldsSize(total_size,
                                                     &this_._impl_._cached_size_);
        }

void PlayerNodeServiceRequest::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<PlayerNodeServiceRequest*>(&to_msg);
  auto& from = static_cast<const PlayerNodeServiceRequest&>(from_msg);
  ::google::protobuf::Arena* arena = _this->GetArena();
  // @@protoc_insertion_point(class_specific_merge_from_start:PlayerNodeServiceRequest)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._impl_._has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    if (cached_has_bits & 0x00000001u) {
      ABSL_DCHECK(from._impl_.message_content_ != nullptr);
      if (_this->_impl_.message_content_ == nullptr) {
        _this->_impl_.message_content_ =
            ::google::protobuf::Message::CopyConstruct<::MessageContent>(arena, *from._impl_.message_content_);
      } else {
        _this->_impl_.message_content_->MergeFrom(*from._impl_.message_content_);
      }
    }
    if (cached_has_bits & 0x00000002u) {
      ABSL_DCHECK(from._impl_.header_ != nullptr);
      if (_this->_impl_.header_ == nullptr) {
        _this->_impl_.header_ =
            ::google::protobuf::Message::CopyConstruct<::PlayerInfoExternal>(arena, *from._impl_.header_);
      } else {
        _this->_impl_.header_->MergeFrom(*from._impl_.header_);
      }
    }
  }
  _this->_impl_._has_bits_[0] |= cached_has_bits;
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void PlayerNodeServiceRequest::CopyFrom(const PlayerNodeServiceRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:PlayerNodeServiceRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void PlayerNodeServiceRequest::InternalSwap(PlayerNodeServiceRequest* PROTOBUF_RESTRICT other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(PlayerNodeServiceRequest, _impl_.header_)
      + sizeof(PlayerNodeServiceRequest::_impl_.header_)
      - PROTOBUF_FIELD_OFFSET(PlayerNodeServiceRequest, _impl_.message_content_)>(
          reinterpret_cast<char*>(&_impl_.message_content_),
          reinterpret_cast<char*>(&other->_impl_.message_content_));
}

::google::protobuf::Metadata PlayerNodeServiceRequest::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class PlayerMessageResponse::_Internal {
 public:
  using HasBits =
      decltype(std::declval<PlayerMessageResponse>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
      8 * PROTOBUF_FIELD_OFFSET(PlayerMessageResponse, _impl_._has_bits_);
};

PlayerMessageResponse::PlayerMessageResponse(::google::protobuf::Arena* arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:PlayerMessageResponse)
}
inline PROTOBUF_NDEBUG_INLINE PlayerMessageResponse::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from, const ::PlayerMessageResponse& from_msg)
      : _has_bits_{from._has_bits_},
        _cached_size_{0} {}

PlayerMessageResponse::PlayerMessageResponse(
    ::google::protobuf::Arena* arena,
    const PlayerMessageResponse& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  PlayerMessageResponse* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);
  ::uint32_t cached_has_bits = _impl_._has_bits_[0];
  _impl_.message_content_ = (cached_has_bits & 0x00000001u) ? ::google::protobuf::Message::CopyConstruct<::MessageContent>(
                              arena, *from._impl_.message_content_)
                        : nullptr;
  _impl_.header_ = (cached_has_bits & 0x00000002u) ? ::google::protobuf::Message::CopyConstruct<::PlayerInfoExternal>(
                              arena, *from._impl_.header_)
                        : nullptr;

  // @@protoc_insertion_point(copy_constructor:PlayerMessageResponse)
}
inline PROTOBUF_NDEBUG_INLINE PlayerMessageResponse::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0} {}

inline void PlayerMessageResponse::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, message_content_),
           0,
           offsetof(Impl_, header_) -
               offsetof(Impl_, message_content_) +
               sizeof(Impl_::header_));
}
PlayerMessageResponse::~PlayerMessageResponse() {
  // @@protoc_insertion_point(destructor:PlayerMessageResponse)
  SharedDtor(*this);
}
inline void PlayerMessageResponse::SharedDtor(MessageLite& self) {
  PlayerMessageResponse& this_ = static_cast<PlayerMessageResponse&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  delete this_._impl_.message_content_;
  delete this_._impl_.header_;
  this_._impl_.~Impl_();
}

inline void* PlayerMessageResponse::PlacementNew_(const void*, void* mem,
                                        ::google::protobuf::Arena* arena) {
  return ::new (mem) PlayerMessageResponse(arena);
}
constexpr auto PlayerMessageResponse::InternalNewImpl_() {
  return ::google::protobuf::internal::MessageCreator::ZeroInit(sizeof(PlayerMessageResponse),
                                            alignof(PlayerMessageResponse));
}
PROTOBUF_CONSTINIT
PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::google::protobuf::internal::ClassDataFull PlayerMessageResponse::_class_data_ = {
    ::google::protobuf::internal::ClassData{
        &_PlayerMessageResponse_default_instance_._instance,
        &_table_.header,
        nullptr,  // OnDemandRegisterArenaDtor
        nullptr,  // IsInitialized
        &PlayerMessageResponse::MergeImpl,
        ::google::protobuf::Message::GetNewImpl<PlayerMessageResponse>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
        &PlayerMessageResponse::SharedDtor,
        ::google::protobuf::Message::GetClearImpl<PlayerMessageResponse>(), &PlayerMessageResponse::ByteSizeLong,
            &PlayerMessageResponse::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
        PROTOBUF_FIELD_OFFSET(PlayerMessageResponse, _impl_._cached_size_),
        false,
    },
    &PlayerMessageResponse::kDescriptorMethods,
    &descriptor_table_proto_2fcommon_2fcommon_5fmessage_2eproto,
    nullptr,  // tracker
};
const ::google::protobuf::internal::ClassData* PlayerMessageResponse::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_class_data_.tc_table);
  return _class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<1, 2, 2, 0, 2> PlayerMessageResponse::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(PlayerMessageResponse, _impl_._has_bits_),
    0, // no _extensions_
    2, 8,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967292,  // skipmap
    offsetof(decltype(_table_), field_entries),
    2,  // num_field_entries
    2,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    _class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::PlayerMessageResponse>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // .PlayerInfoExternal header = 2;
    {::_pbi::TcParser::FastMtS1,
     {18, 1, 1, PROTOBUF_FIELD_OFFSET(PlayerMessageResponse, _impl_.header_)}},
    // .MessageContent message_content = 1;
    {::_pbi::TcParser::FastMtS1,
     {10, 0, 0, PROTOBUF_FIELD_OFFSET(PlayerMessageResponse, _impl_.message_content_)}},
  }}, {{
    65535, 65535
  }}, {{
    // .MessageContent message_content = 1;
    {PROTOBUF_FIELD_OFFSET(PlayerMessageResponse, _impl_.message_content_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
    // .PlayerInfoExternal header = 2;
    {PROTOBUF_FIELD_OFFSET(PlayerMessageResponse, _impl_.header_), _Internal::kHasBitsOffset + 1, 1,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
  }}, {{
    {::_pbi::TcParser::GetTable<::MessageContent>()},
    {::_pbi::TcParser::GetTable<::PlayerInfoExternal>()},
  }}, {{
  }},
};

PROTOBUF_NOINLINE void PlayerMessageResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:PlayerMessageResponse)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    if (cached_has_bits & 0x00000001u) {
      ABSL_DCHECK(_impl_.message_content_ != nullptr);
      _impl_.message_content_->Clear();
    }
    if (cached_has_bits & 0x00000002u) {
      ABSL_DCHECK(_impl_.header_ != nullptr);
      _impl_.header_->Clear();
    }
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::uint8_t* PlayerMessageResponse::_InternalSerialize(
            const MessageLite& base, ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) {
          const PlayerMessageResponse& this_ = static_cast<const PlayerMessageResponse&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::uint8_t* PlayerMessageResponse::_InternalSerialize(
            ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) const {
          const PlayerMessageResponse& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(serialize_to_array_start:PlayerMessageResponse)
          ::uint32_t cached_has_bits = 0;
          (void)cached_has_bits;

          cached_has_bits = this_._impl_._has_bits_[0];
          // .MessageContent message_content = 1;
          if (cached_has_bits & 0x00000001u) {
            target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
                1, *this_._impl_.message_content_, this_._impl_.message_content_->GetCachedSize(), target,
                stream);
          }

          // .PlayerInfoExternal header = 2;
          if (cached_has_bits & 0x00000002u) {
            target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
                2, *this_._impl_.header_, this_._impl_.header_->GetCachedSize(), target,
                stream);
          }

          if (PROTOBUF_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
            target =
                ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
                    this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
          }
          // @@protoc_insertion_point(serialize_to_array_end:PlayerMessageResponse)
          return target;
        }

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::size_t PlayerMessageResponse::ByteSizeLong(const MessageLite& base) {
          const PlayerMessageResponse& this_ = static_cast<const PlayerMessageResponse&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::size_t PlayerMessageResponse::ByteSizeLong() const {
          const PlayerMessageResponse& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(message_byte_size_start:PlayerMessageResponse)
          ::size_t total_size = 0;

          ::uint32_t cached_has_bits = 0;
          // Prevent compiler warnings about cached_has_bits being unused
          (void)cached_has_bits;

          ::_pbi::Prefetch5LinesFrom7Lines(&this_);
          cached_has_bits = this_._impl_._has_bits_[0];
          if (cached_has_bits & 0x00000003u) {
            // .MessageContent message_content = 1;
            if (cached_has_bits & 0x00000001u) {
              total_size += 1 +
                            ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.message_content_);
            }
            // .PlayerInfoExternal header = 2;
            if (cached_has_bits & 0x00000002u) {
              total_size += 1 +
                            ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.header_);
            }
          }
          return this_.MaybeComputeUnknownFieldsSize(total_size,
                                                     &this_._impl_._cached_size_);
        }

void PlayerMessageResponse::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<PlayerMessageResponse*>(&to_msg);
  auto& from = static_cast<const PlayerMessageResponse&>(from_msg);
  ::google::protobuf::Arena* arena = _this->GetArena();
  // @@protoc_insertion_point(class_specific_merge_from_start:PlayerMessageResponse)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._impl_._has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    if (cached_has_bits & 0x00000001u) {
      ABSL_DCHECK(from._impl_.message_content_ != nullptr);
      if (_this->_impl_.message_content_ == nullptr) {
        _this->_impl_.message_content_ =
            ::google::protobuf::Message::CopyConstruct<::MessageContent>(arena, *from._impl_.message_content_);
      } else {
        _this->_impl_.message_content_->MergeFrom(*from._impl_.message_content_);
      }
    }
    if (cached_has_bits & 0x00000002u) {
      ABSL_DCHECK(from._impl_.header_ != nullptr);
      if (_this->_impl_.header_ == nullptr) {
        _this->_impl_.header_ =
            ::google::protobuf::Message::CopyConstruct<::PlayerInfoExternal>(arena, *from._impl_.header_);
      } else {
        _this->_impl_.header_->MergeFrom(*from._impl_.header_);
      }
    }
  }
  _this->_impl_._has_bits_[0] |= cached_has_bits;
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void PlayerMessageResponse::CopyFrom(const PlayerMessageResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:PlayerMessageResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void PlayerMessageResponse::InternalSwap(PlayerMessageResponse* PROTOBUF_RESTRICT other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(PlayerMessageResponse, _impl_.header_)
      + sizeof(PlayerMessageResponse::_impl_.header_)
      - PROTOBUF_FIELD_OFFSET(PlayerMessageResponse, _impl_.message_content_)>(
          reinterpret_cast<char*>(&_impl_.message_content_),
          reinterpret_cast<char*>(&other->_impl_.message_content_));
}

::google::protobuf::Metadata PlayerMessageResponse::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class NodeRoutingMessageBody::_Internal {
 public:
  using HasBits =
      decltype(std::declval<NodeRoutingMessageBody>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
      8 * PROTOBUF_FIELD_OFFSET(NodeRoutingMessageBody, _impl_._has_bits_);
};

void NodeRoutingMessageBody::clear_node_info() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.node_info_ != nullptr) _impl_.node_info_->Clear();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
NodeRoutingMessageBody::NodeRoutingMessageBody(::google::protobuf::Arena* arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:NodeRoutingMessageBody)
}
inline PROTOBUF_NDEBUG_INLINE NodeRoutingMessageBody::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from, const ::NodeRoutingMessageBody& from_msg)
      : _has_bits_{from._has_bits_},
        _cached_size_{0} {}

NodeRoutingMessageBody::NodeRoutingMessageBody(
    ::google::protobuf::Arena* arena,
    const NodeRoutingMessageBody& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  NodeRoutingMessageBody* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);
  ::uint32_t cached_has_bits = _impl_._has_bits_[0];
  _impl_.node_info_ = (cached_has_bits & 0x00000001u) ? ::google::protobuf::Message::CopyConstruct<::NodeInfo>(
                              arena, *from._impl_.node_info_)
                        : nullptr;

  // @@protoc_insertion_point(copy_constructor:NodeRoutingMessageBody)
}
inline PROTOBUF_NDEBUG_INLINE NodeRoutingMessageBody::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0} {}

inline void NodeRoutingMessageBody::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  _impl_.node_info_ = {};
}
NodeRoutingMessageBody::~NodeRoutingMessageBody() {
  // @@protoc_insertion_point(destructor:NodeRoutingMessageBody)
  SharedDtor(*this);
}
inline void NodeRoutingMessageBody::SharedDtor(MessageLite& self) {
  NodeRoutingMessageBody& this_ = static_cast<NodeRoutingMessageBody&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  delete this_._impl_.node_info_;
  this_._impl_.~Impl_();
}

inline void* NodeRoutingMessageBody::PlacementNew_(const void*, void* mem,
                                        ::google::protobuf::Arena* arena) {
  return ::new (mem) NodeRoutingMessageBody(arena);
}
constexpr auto NodeRoutingMessageBody::InternalNewImpl_() {
  return ::google::protobuf::internal::MessageCreator::ZeroInit(sizeof(NodeRoutingMessageBody),
                                            alignof(NodeRoutingMessageBody));
}
PROTOBUF_CONSTINIT
PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::google::protobuf::internal::ClassDataFull NodeRoutingMessageBody::_class_data_ = {
    ::google::protobuf::internal::ClassData{
        &_NodeRoutingMessageBody_default_instance_._instance,
        &_table_.header,
        nullptr,  // OnDemandRegisterArenaDtor
        nullptr,  // IsInitialized
        &NodeRoutingMessageBody::MergeImpl,
        ::google::protobuf::Message::GetNewImpl<NodeRoutingMessageBody>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
        &NodeRoutingMessageBody::SharedDtor,
        ::google::protobuf::Message::GetClearImpl<NodeRoutingMessageBody>(), &NodeRoutingMessageBody::ByteSizeLong,
            &NodeRoutingMessageBody::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
        PROTOBUF_FIELD_OFFSET(NodeRoutingMessageBody, _impl_._cached_size_),
        false,
    },
    &NodeRoutingMessageBody::kDescriptorMethods,
    &descriptor_table_proto_2fcommon_2fcommon_5fmessage_2eproto,
    nullptr,  // tracker
};
const ::google::protobuf::internal::ClassData* NodeRoutingMessageBody::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_class_data_.tc_table);
  return _class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<0, 1, 1, 0, 2> NodeRoutingMessageBody::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(NodeRoutingMessageBody, _impl_._has_bits_),
    0, // no _extensions_
    2, 0,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967293,  // skipmap
    offsetof(decltype(_table_), field_entries),
    1,  // num_field_entries
    1,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    _class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::NodeRoutingMessageBody>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // .NodeInfo node_info = 2;
    {::_pbi::TcParser::FastMtS1,
     {18, 0, 0, PROTOBUF_FIELD_OFFSET(NodeRoutingMessageBody, _impl_.node_info_)}},
  }}, {{
    65535, 65535
  }}, {{
    // .NodeInfo node_info = 2;
    {PROTOBUF_FIELD_OFFSET(NodeRoutingMessageBody, _impl_.node_info_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
  }}, {{
    {::_pbi::TcParser::GetTable<::NodeInfo>()},
  }}, {{
  }},
};

PROTOBUF_NOINLINE void NodeRoutingMessageBody::Clear() {
// @@protoc_insertion_point(message_clear_start:NodeRoutingMessageBody)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    ABSL_DCHECK(_impl_.node_info_ != nullptr);
    _impl_.node_info_->Clear();
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::uint8_t* NodeRoutingMessageBody::_InternalSerialize(
            const MessageLite& base, ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) {
          const NodeRoutingMessageBody& this_ = static_cast<const NodeRoutingMessageBody&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::uint8_t* NodeRoutingMessageBody::_InternalSerialize(
            ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) const {
          const NodeRoutingMessageBody& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(serialize_to_array_start:NodeRoutingMessageBody)
          ::uint32_t cached_has_bits = 0;
          (void)cached_has_bits;

          cached_has_bits = this_._impl_._has_bits_[0];
          // .NodeInfo node_info = 2;
          if (cached_has_bits & 0x00000001u) {
            target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
                2, *this_._impl_.node_info_, this_._impl_.node_info_->GetCachedSize(), target,
                stream);
          }

          if (PROTOBUF_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
            target =
                ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
                    this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
          }
          // @@protoc_insertion_point(serialize_to_array_end:NodeRoutingMessageBody)
          return target;
        }

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::size_t NodeRoutingMessageBody::ByteSizeLong(const MessageLite& base) {
          const NodeRoutingMessageBody& this_ = static_cast<const NodeRoutingMessageBody&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::size_t NodeRoutingMessageBody::ByteSizeLong() const {
          const NodeRoutingMessageBody& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(message_byte_size_start:NodeRoutingMessageBody)
          ::size_t total_size = 0;

          ::uint32_t cached_has_bits = 0;
          // Prevent compiler warnings about cached_has_bits being unused
          (void)cached_has_bits;

           {
            // .NodeInfo node_info = 2;
            cached_has_bits = this_._impl_._has_bits_[0];
            if (cached_has_bits & 0x00000001u) {
              total_size += 1 +
                            ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.node_info_);
            }
          }
          return this_.MaybeComputeUnknownFieldsSize(total_size,
                                                     &this_._impl_._cached_size_);
        }

void NodeRoutingMessageBody::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<NodeRoutingMessageBody*>(&to_msg);
  auto& from = static_cast<const NodeRoutingMessageBody&>(from_msg);
  ::google::protobuf::Arena* arena = _this->GetArena();
  // @@protoc_insertion_point(class_specific_merge_from_start:NodeRoutingMessageBody)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    ABSL_DCHECK(from._impl_.node_info_ != nullptr);
    if (_this->_impl_.node_info_ == nullptr) {
      _this->_impl_.node_info_ =
          ::google::protobuf::Message::CopyConstruct<::NodeInfo>(arena, *from._impl_.node_info_);
    } else {
      _this->_impl_.node_info_->MergeFrom(*from._impl_.node_info_);
    }
  }
  _this->_impl_._has_bits_[0] |= cached_has_bits;
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void NodeRoutingMessageBody::CopyFrom(const NodeRoutingMessageBody& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:NodeRoutingMessageBody)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void NodeRoutingMessageBody::InternalSwap(NodeRoutingMessageBody* PROTOBUF_RESTRICT other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  swap(_impl_.node_info_, other->_impl_.node_info_);
}

::google::protobuf::Metadata NodeRoutingMessageBody::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class RegisterGameNodeSessionRequest::_Internal {
 public:
  using HasBits =
      decltype(std::declval<RegisterGameNodeSessionRequest>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
      8 * PROTOBUF_FIELD_OFFSET(RegisterGameNodeSessionRequest, _impl_._has_bits_);
};

void RegisterGameNodeSessionRequest::clear_session_info() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.session_info_ != nullptr) _impl_.session_info_->Clear();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
RegisterGameNodeSessionRequest::RegisterGameNodeSessionRequest(::google::protobuf::Arena* arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:RegisterGameNodeSessionRequest)
}
inline PROTOBUF_NDEBUG_INLINE RegisterGameNodeSessionRequest::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from, const ::RegisterGameNodeSessionRequest& from_msg)
      : _has_bits_{from._has_bits_},
        _cached_size_{0} {}

RegisterGameNodeSessionRequest::RegisterGameNodeSessionRequest(
    ::google::protobuf::Arena* arena,
    const RegisterGameNodeSessionRequest& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  RegisterGameNodeSessionRequest* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);
  ::uint32_t cached_has_bits = _impl_._has_bits_[0];
  _impl_.session_info_ = (cached_has_bits & 0x00000001u) ? ::google::protobuf::Message::CopyConstruct<::SessionDetails>(
                              arena, *from._impl_.session_info_)
                        : nullptr;
  _impl_.scene_node_id_ = from._impl_.scene_node_id_;

  // @@protoc_insertion_point(copy_constructor:RegisterGameNodeSessionRequest)
}
inline PROTOBUF_NDEBUG_INLINE RegisterGameNodeSessionRequest::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0} {}

inline void RegisterGameNodeSessionRequest::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, session_info_),
           0,
           offsetof(Impl_, scene_node_id_) -
               offsetof(Impl_, session_info_) +
               sizeof(Impl_::scene_node_id_));
}
RegisterGameNodeSessionRequest::~RegisterGameNodeSessionRequest() {
  // @@protoc_insertion_point(destructor:RegisterGameNodeSessionRequest)
  SharedDtor(*this);
}
inline void RegisterGameNodeSessionRequest::SharedDtor(MessageLite& self) {
  RegisterGameNodeSessionRequest& this_ = static_cast<RegisterGameNodeSessionRequest&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  delete this_._impl_.session_info_;
  this_._impl_.~Impl_();
}

inline void* RegisterGameNodeSessionRequest::PlacementNew_(const void*, void* mem,
                                        ::google::protobuf::Arena* arena) {
  return ::new (mem) RegisterGameNodeSessionRequest(arena);
}
constexpr auto RegisterGameNodeSessionRequest::InternalNewImpl_() {
  return ::google::protobuf::internal::MessageCreator::ZeroInit(sizeof(RegisterGameNodeSessionRequest),
                                            alignof(RegisterGameNodeSessionRequest));
}
PROTOBUF_CONSTINIT
PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::google::protobuf::internal::ClassDataFull RegisterGameNodeSessionRequest::_class_data_ = {
    ::google::protobuf::internal::ClassData{
        &_RegisterGameNodeSessionRequest_default_instance_._instance,
        &_table_.header,
        nullptr,  // OnDemandRegisterArenaDtor
        nullptr,  // IsInitialized
        &RegisterGameNodeSessionRequest::MergeImpl,
        ::google::protobuf::Message::GetNewImpl<RegisterGameNodeSessionRequest>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
        &RegisterGameNodeSessionRequest::SharedDtor,
        ::google::protobuf::Message::GetClearImpl<RegisterGameNodeSessionRequest>(), &RegisterGameNodeSessionRequest::ByteSizeLong,
            &RegisterGameNodeSessionRequest::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
        PROTOBUF_FIELD_OFFSET(RegisterGameNodeSessionRequest, _impl_._cached_size_),
        false,
    },
    &RegisterGameNodeSessionRequest::kDescriptorMethods,
    &descriptor_table_proto_2fcommon_2fcommon_5fmessage_2eproto,
    nullptr,  // tracker
};
const ::google::protobuf::internal::ClassData* RegisterGameNodeSessionRequest::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_class_data_.tc_table);
  return _class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<1, 2, 1, 0, 2> RegisterGameNodeSessionRequest::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(RegisterGameNodeSessionRequest, _impl_._has_bits_),
    0, // no _extensions_
    2, 8,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967292,  // skipmap
    offsetof(decltype(_table_), field_entries),
    2,  // num_field_entries
    1,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    _class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::RegisterGameNodeSessionRequest>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // uint32 scene_node_id = 2;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(RegisterGameNodeSessionRequest, _impl_.scene_node_id_), 63>(),
     {16, 63, 0, PROTOBUF_FIELD_OFFSET(RegisterGameNodeSessionRequest, _impl_.scene_node_id_)}},
    // .SessionDetails session_info = 1;
    {::_pbi::TcParser::FastMtS1,
     {10, 0, 0, PROTOBUF_FIELD_OFFSET(RegisterGameNodeSessionRequest, _impl_.session_info_)}},
  }}, {{
    65535, 65535
  }}, {{
    // .SessionDetails session_info = 1;
    {PROTOBUF_FIELD_OFFSET(RegisterGameNodeSessionRequest, _impl_.session_info_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
    // uint32 scene_node_id = 2;
    {PROTOBUF_FIELD_OFFSET(RegisterGameNodeSessionRequest, _impl_.scene_node_id_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUInt32)},
  }}, {{
    {::_pbi::TcParser::GetTable<::SessionDetails>()},
  }}, {{
  }},
};

PROTOBUF_NOINLINE void RegisterGameNodeSessionRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:RegisterGameNodeSessionRequest)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    ABSL_DCHECK(_impl_.session_info_ != nullptr);
    _impl_.session_info_->Clear();
  }
  _impl_.scene_node_id_ = 0u;
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::uint8_t* RegisterGameNodeSessionRequest::_InternalSerialize(
            const MessageLite& base, ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) {
          const RegisterGameNodeSessionRequest& this_ = static_cast<const RegisterGameNodeSessionRequest&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::uint8_t* RegisterGameNodeSessionRequest::_InternalSerialize(
            ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) const {
          const RegisterGameNodeSessionRequest& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(serialize_to_array_start:RegisterGameNodeSessionRequest)
          ::uint32_t cached_has_bits = 0;
          (void)cached_has_bits;

          cached_has_bits = this_._impl_._has_bits_[0];
          // .SessionDetails session_info = 1;
          if (cached_has_bits & 0x00000001u) {
            target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
                1, *this_._impl_.session_info_, this_._impl_.session_info_->GetCachedSize(), target,
                stream);
          }

          // uint32 scene_node_id = 2;
          if (this_._internal_scene_node_id() != 0) {
            target = stream->EnsureSpace(target);
            target = ::_pbi::WireFormatLite::WriteUInt32ToArray(
                2, this_._internal_scene_node_id(), target);
          }

          if (PROTOBUF_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
            target =
                ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
                    this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
          }
          // @@protoc_insertion_point(serialize_to_array_end:RegisterGameNodeSessionRequest)
          return target;
        }

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::size_t RegisterGameNodeSessionRequest::ByteSizeLong(const MessageLite& base) {
          const RegisterGameNodeSessionRequest& this_ = static_cast<const RegisterGameNodeSessionRequest&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::size_t RegisterGameNodeSessionRequest::ByteSizeLong() const {
          const RegisterGameNodeSessionRequest& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(message_byte_size_start:RegisterGameNodeSessionRequest)
          ::size_t total_size = 0;

          ::uint32_t cached_has_bits = 0;
          // Prevent compiler warnings about cached_has_bits being unused
          (void)cached_has_bits;

          ::_pbi::Prefetch5LinesFrom7Lines(&this_);
           {
            // .SessionDetails session_info = 1;
            cached_has_bits = this_._impl_._has_bits_[0];
            if (cached_has_bits & 0x00000001u) {
              total_size += 1 +
                            ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.session_info_);
            }
          }
           {
            // uint32 scene_node_id = 2;
            if (this_._internal_scene_node_id() != 0) {
              total_size += ::_pbi::WireFormatLite::UInt32SizePlusOne(
                  this_._internal_scene_node_id());
            }
          }
          return this_.MaybeComputeUnknownFieldsSize(total_size,
                                                     &this_._impl_._cached_size_);
        }

void RegisterGameNodeSessionRequest::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<RegisterGameNodeSessionRequest*>(&to_msg);
  auto& from = static_cast<const RegisterGameNodeSessionRequest&>(from_msg);
  ::google::protobuf::Arena* arena = _this->GetArena();
  // @@protoc_insertion_point(class_specific_merge_from_start:RegisterGameNodeSessionRequest)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    ABSL_DCHECK(from._impl_.session_info_ != nullptr);
    if (_this->_impl_.session_info_ == nullptr) {
      _this->_impl_.session_info_ =
          ::google::protobuf::Message::CopyConstruct<::SessionDetails>(arena, *from._impl_.session_info_);
    } else {
      _this->_impl_.session_info_->MergeFrom(*from._impl_.session_info_);
    }
  }
  if (from._internal_scene_node_id() != 0) {
    _this->_impl_.scene_node_id_ = from._impl_.scene_node_id_;
  }
  _this->_impl_._has_bits_[0] |= cached_has_bits;
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void RegisterGameNodeSessionRequest::CopyFrom(const RegisterGameNodeSessionRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:RegisterGameNodeSessionRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void RegisterGameNodeSessionRequest::InternalSwap(RegisterGameNodeSessionRequest* PROTOBUF_RESTRICT other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(RegisterGameNodeSessionRequest, _impl_.scene_node_id_)
      + sizeof(RegisterGameNodeSessionRequest::_impl_.scene_node_id_)
      - PROTOBUF_FIELD_OFFSET(RegisterGameNodeSessionRequest, _impl_.session_info_)>(
          reinterpret_cast<char*>(&_impl_.session_info_),
          reinterpret_cast<char*>(&other->_impl_.session_info_));
}

::google::protobuf::Metadata RegisterGameNodeSessionRequest::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class RegisterGameNodeSessionResponse::_Internal {
 public:
  using HasBits =
      decltype(std::declval<RegisterGameNodeSessionResponse>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
      8 * PROTOBUF_FIELD_OFFSET(RegisterGameNodeSessionResponse, _impl_._has_bits_);
};

void RegisterGameNodeSessionResponse::clear_session_info() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.session_info_ != nullptr) _impl_.session_info_->Clear();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
RegisterGameNodeSessionResponse::RegisterGameNodeSessionResponse(::google::protobuf::Arena* arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:RegisterGameNodeSessionResponse)
}
inline PROTOBUF_NDEBUG_INLINE RegisterGameNodeSessionResponse::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from, const ::RegisterGameNodeSessionResponse& from_msg)
      : _has_bits_{from._has_bits_},
        _cached_size_{0} {}

RegisterGameNodeSessionResponse::RegisterGameNodeSessionResponse(
    ::google::protobuf::Arena* arena,
    const RegisterGameNodeSessionResponse& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  RegisterGameNodeSessionResponse* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);
  ::uint32_t cached_has_bits = _impl_._has_bits_[0];
  _impl_.session_info_ = (cached_has_bits & 0x00000001u) ? ::google::protobuf::Message::CopyConstruct<::SessionDetails>(
                              arena, *from._impl_.session_info_)
                        : nullptr;

  // @@protoc_insertion_point(copy_constructor:RegisterGameNodeSessionResponse)
}
inline PROTOBUF_NDEBUG_INLINE RegisterGameNodeSessionResponse::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0} {}

inline void RegisterGameNodeSessionResponse::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  _impl_.session_info_ = {};
}
RegisterGameNodeSessionResponse::~RegisterGameNodeSessionResponse() {
  // @@protoc_insertion_point(destructor:RegisterGameNodeSessionResponse)
  SharedDtor(*this);
}
inline void RegisterGameNodeSessionResponse::SharedDtor(MessageLite& self) {
  RegisterGameNodeSessionResponse& this_ = static_cast<RegisterGameNodeSessionResponse&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  delete this_._impl_.session_info_;
  this_._impl_.~Impl_();
}

inline void* RegisterGameNodeSessionResponse::PlacementNew_(const void*, void* mem,
                                        ::google::protobuf::Arena* arena) {
  return ::new (mem) RegisterGameNodeSessionResponse(arena);
}
constexpr auto RegisterGameNodeSessionResponse::InternalNewImpl_() {
  return ::google::protobuf::internal::MessageCreator::ZeroInit(sizeof(RegisterGameNodeSessionResponse),
                                            alignof(RegisterGameNodeSessionResponse));
}
PROTOBUF_CONSTINIT
PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::google::protobuf::internal::ClassDataFull RegisterGameNodeSessionResponse::_class_data_ = {
    ::google::protobuf::internal::ClassData{
        &_RegisterGameNodeSessionResponse_default_instance_._instance,
        &_table_.header,
        nullptr,  // OnDemandRegisterArenaDtor
        nullptr,  // IsInitialized
        &RegisterGameNodeSessionResponse::MergeImpl,
        ::google::protobuf::Message::GetNewImpl<RegisterGameNodeSessionResponse>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
        &RegisterGameNodeSessionResponse::SharedDtor,
        ::google::protobuf::Message::GetClearImpl<RegisterGameNodeSessionResponse>(), &RegisterGameNodeSessionResponse::ByteSizeLong,
            &RegisterGameNodeSessionResponse::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
        PROTOBUF_FIELD_OFFSET(RegisterGameNodeSessionResponse, _impl_._cached_size_),
        false,
    },
    &RegisterGameNodeSessionResponse::kDescriptorMethods,
    &descriptor_table_proto_2fcommon_2fcommon_5fmessage_2eproto,
    nullptr,  // tracker
};
const ::google::protobuf::internal::ClassData* RegisterGameNodeSessionResponse::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_class_data_.tc_table);
  return _class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<0, 1, 1, 0, 2> RegisterGameNodeSessionResponse::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(RegisterGameNodeSessionResponse, _impl_._has_bits_),
    0, // no _extensions_
    1, 0,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967294,  // skipmap
    offsetof(decltype(_table_), field_entries),
    1,  // num_field_entries
    1,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    _class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::RegisterGameNodeSessionResponse>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // .SessionDetails session_info = 1;
    {::_pbi::TcParser::FastMtS1,
     {10, 0, 0, PROTOBUF_FIELD_OFFSET(RegisterGameNodeSessionResponse, _impl_.session_info_)}},
  }}, {{
    65535, 65535
  }}, {{
    // .SessionDetails session_info = 1;
    {PROTOBUF_FIELD_OFFSET(RegisterGameNodeSessionResponse, _impl_.session_info_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
  }}, {{
    {::_pbi::TcParser::GetTable<::SessionDetails>()},
  }}, {{
  }},
};

PROTOBUF_NOINLINE void RegisterGameNodeSessionResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:RegisterGameNodeSessionResponse)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    ABSL_DCHECK(_impl_.session_info_ != nullptr);
    _impl_.session_info_->Clear();
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::uint8_t* RegisterGameNodeSessionResponse::_InternalSerialize(
            const MessageLite& base, ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) {
          const RegisterGameNodeSessionResponse& this_ = static_cast<const RegisterGameNodeSessionResponse&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::uint8_t* RegisterGameNodeSessionResponse::_InternalSerialize(
            ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) const {
          const RegisterGameNodeSessionResponse& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(serialize_to_array_start:RegisterGameNodeSessionResponse)
          ::uint32_t cached_has_bits = 0;
          (void)cached_has_bits;

          cached_has_bits = this_._impl_._has_bits_[0];
          // .SessionDetails session_info = 1;
          if (cached_has_bits & 0x00000001u) {
            target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
                1, *this_._impl_.session_info_, this_._impl_.session_info_->GetCachedSize(), target,
                stream);
          }

          if (PROTOBUF_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
            target =
                ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
                    this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
          }
          // @@protoc_insertion_point(serialize_to_array_end:RegisterGameNodeSessionResponse)
          return target;
        }

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::size_t RegisterGameNodeSessionResponse::ByteSizeLong(const MessageLite& base) {
          const RegisterGameNodeSessionResponse& this_ = static_cast<const RegisterGameNodeSessionResponse&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::size_t RegisterGameNodeSessionResponse::ByteSizeLong() const {
          const RegisterGameNodeSessionResponse& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(message_byte_size_start:RegisterGameNodeSessionResponse)
          ::size_t total_size = 0;

          ::uint32_t cached_has_bits = 0;
          // Prevent compiler warnings about cached_has_bits being unused
          (void)cached_has_bits;

           {
            // .SessionDetails session_info = 1;
            cached_has_bits = this_._impl_._has_bits_[0];
            if (cached_has_bits & 0x00000001u) {
              total_size += 1 +
                            ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.session_info_);
            }
          }
          return this_.MaybeComputeUnknownFieldsSize(total_size,
                                                     &this_._impl_._cached_size_);
        }

void RegisterGameNodeSessionResponse::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<RegisterGameNodeSessionResponse*>(&to_msg);
  auto& from = static_cast<const RegisterGameNodeSessionResponse&>(from_msg);
  ::google::protobuf::Arena* arena = _this->GetArena();
  // @@protoc_insertion_point(class_specific_merge_from_start:RegisterGameNodeSessionResponse)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    ABSL_DCHECK(from._impl_.session_info_ != nullptr);
    if (_this->_impl_.session_info_ == nullptr) {
      _this->_impl_.session_info_ =
          ::google::protobuf::Message::CopyConstruct<::SessionDetails>(arena, *from._impl_.session_info_);
    } else {
      _this->_impl_.session_info_->MergeFrom(*from._impl_.session_info_);
    }
  }
  _this->_impl_._has_bits_[0] |= cached_has_bits;
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void RegisterGameNodeSessionResponse::CopyFrom(const RegisterGameNodeSessionResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:RegisterGameNodeSessionResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void RegisterGameNodeSessionResponse::InternalSwap(RegisterGameNodeSessionResponse* PROTOBUF_RESTRICT other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  swap(_impl_.session_info_, other->_impl_.session_info_);
}

::google::protobuf::Metadata RegisterGameNodeSessionResponse::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class RegisterGateNodeSessionResponse::_Internal {
 public:
  using HasBits =
      decltype(std::declval<RegisterGateNodeSessionResponse>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
      8 * PROTOBUF_FIELD_OFFSET(RegisterGateNodeSessionResponse, _impl_._has_bits_);
};

void RegisterGateNodeSessionResponse::clear_session_info() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.session_info_ != nullptr) _impl_.session_info_->Clear();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
RegisterGateNodeSessionResponse::RegisterGateNodeSessionResponse(::google::protobuf::Arena* arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:RegisterGateNodeSessionResponse)
}
inline PROTOBUF_NDEBUG_INLINE RegisterGateNodeSessionResponse::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from, const ::RegisterGateNodeSessionResponse& from_msg)
      : _has_bits_{from._has_bits_},
        _cached_size_{0} {}

RegisterGateNodeSessionResponse::RegisterGateNodeSessionResponse(
    ::google::protobuf::Arena* arena,
    const RegisterGateNodeSessionResponse& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  RegisterGateNodeSessionResponse* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);
  ::uint32_t cached_has_bits = _impl_._has_bits_[0];
  _impl_.session_info_ = (cached_has_bits & 0x00000001u) ? ::google::protobuf::Message::CopyConstruct<::SessionDetails>(
                              arena, *from._impl_.session_info_)
                        : nullptr;

  // @@protoc_insertion_point(copy_constructor:RegisterGateNodeSessionResponse)
}
inline PROTOBUF_NDEBUG_INLINE RegisterGateNodeSessionResponse::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0} {}

inline void RegisterGateNodeSessionResponse::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  _impl_.session_info_ = {};
}
RegisterGateNodeSessionResponse::~RegisterGateNodeSessionResponse() {
  // @@protoc_insertion_point(destructor:RegisterGateNodeSessionResponse)
  SharedDtor(*this);
}
inline void RegisterGateNodeSessionResponse::SharedDtor(MessageLite& self) {
  RegisterGateNodeSessionResponse& this_ = static_cast<RegisterGateNodeSessionResponse&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  delete this_._impl_.session_info_;
  this_._impl_.~Impl_();
}

inline void* RegisterGateNodeSessionResponse::PlacementNew_(const void*, void* mem,
                                        ::google::protobuf::Arena* arena) {
  return ::new (mem) RegisterGateNodeSessionResponse(arena);
}
constexpr auto RegisterGateNodeSessionResponse::InternalNewImpl_() {
  return ::google::protobuf::internal::MessageCreator::ZeroInit(sizeof(RegisterGateNodeSessionResponse),
                                            alignof(RegisterGateNodeSessionResponse));
}
PROTOBUF_CONSTINIT
PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::google::protobuf::internal::ClassDataFull RegisterGateNodeSessionResponse::_class_data_ = {
    ::google::protobuf::internal::ClassData{
        &_RegisterGateNodeSessionResponse_default_instance_._instance,
        &_table_.header,
        nullptr,  // OnDemandRegisterArenaDtor
        nullptr,  // IsInitialized
        &RegisterGateNodeSessionResponse::MergeImpl,
        ::google::protobuf::Message::GetNewImpl<RegisterGateNodeSessionResponse>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
        &RegisterGateNodeSessionResponse::SharedDtor,
        ::google::protobuf::Message::GetClearImpl<RegisterGateNodeSessionResponse>(), &RegisterGateNodeSessionResponse::ByteSizeLong,
            &RegisterGateNodeSessionResponse::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
        PROTOBUF_FIELD_OFFSET(RegisterGateNodeSessionResponse, _impl_._cached_size_),
        false,
    },
    &RegisterGateNodeSessionResponse::kDescriptorMethods,
    &descriptor_table_proto_2fcommon_2fcommon_5fmessage_2eproto,
    nullptr,  // tracker
};
const ::google::protobuf::internal::ClassData* RegisterGateNodeSessionResponse::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_class_data_.tc_table);
  return _class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<0, 1, 1, 0, 2> RegisterGateNodeSessionResponse::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(RegisterGateNodeSessionResponse, _impl_._has_bits_),
    0, // no _extensions_
    1, 0,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967294,  // skipmap
    offsetof(decltype(_table_), field_entries),
    1,  // num_field_entries
    1,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    _class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::RegisterGateNodeSessionResponse>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // .SessionDetails session_info = 1;
    {::_pbi::TcParser::FastMtS1,
     {10, 0, 0, PROTOBUF_FIELD_OFFSET(RegisterGateNodeSessionResponse, _impl_.session_info_)}},
  }}, {{
    65535, 65535
  }}, {{
    // .SessionDetails session_info = 1;
    {PROTOBUF_FIELD_OFFSET(RegisterGateNodeSessionResponse, _impl_.session_info_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
  }}, {{
    {::_pbi::TcParser::GetTable<::SessionDetails>()},
  }}, {{
  }},
};

PROTOBUF_NOINLINE void RegisterGateNodeSessionResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:RegisterGateNodeSessionResponse)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    ABSL_DCHECK(_impl_.session_info_ != nullptr);
    _impl_.session_info_->Clear();
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::uint8_t* RegisterGateNodeSessionResponse::_InternalSerialize(
            const MessageLite& base, ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) {
          const RegisterGateNodeSessionResponse& this_ = static_cast<const RegisterGateNodeSessionResponse&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::uint8_t* RegisterGateNodeSessionResponse::_InternalSerialize(
            ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) const {
          const RegisterGateNodeSessionResponse& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(serialize_to_array_start:RegisterGateNodeSessionResponse)
          ::uint32_t cached_has_bits = 0;
          (void)cached_has_bits;

          cached_has_bits = this_._impl_._has_bits_[0];
          // .SessionDetails session_info = 1;
          if (cached_has_bits & 0x00000001u) {
            target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
                1, *this_._impl_.session_info_, this_._impl_.session_info_->GetCachedSize(), target,
                stream);
          }

          if (PROTOBUF_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
            target =
                ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
                    this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
          }
          // @@protoc_insertion_point(serialize_to_array_end:RegisterGateNodeSessionResponse)
          return target;
        }

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::size_t RegisterGateNodeSessionResponse::ByteSizeLong(const MessageLite& base) {
          const RegisterGateNodeSessionResponse& this_ = static_cast<const RegisterGateNodeSessionResponse&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::size_t RegisterGateNodeSessionResponse::ByteSizeLong() const {
          const RegisterGateNodeSessionResponse& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(message_byte_size_start:RegisterGateNodeSessionResponse)
          ::size_t total_size = 0;

          ::uint32_t cached_has_bits = 0;
          // Prevent compiler warnings about cached_has_bits being unused
          (void)cached_has_bits;

           {
            // .SessionDetails session_info = 1;
            cached_has_bits = this_._impl_._has_bits_[0];
            if (cached_has_bits & 0x00000001u) {
              total_size += 1 +
                            ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.session_info_);
            }
          }
          return this_.MaybeComputeUnknownFieldsSize(total_size,
                                                     &this_._impl_._cached_size_);
        }

void RegisterGateNodeSessionResponse::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<RegisterGateNodeSessionResponse*>(&to_msg);
  auto& from = static_cast<const RegisterGateNodeSessionResponse&>(from_msg);
  ::google::protobuf::Arena* arena = _this->GetArena();
  // @@protoc_insertion_point(class_specific_merge_from_start:RegisterGateNodeSessionResponse)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    ABSL_DCHECK(from._impl_.session_info_ != nullptr);
    if (_this->_impl_.session_info_ == nullptr) {
      _this->_impl_.session_info_ =
          ::google::protobuf::Message::CopyConstruct<::SessionDetails>(arena, *from._impl_.session_info_);
    } else {
      _this->_impl_.session_info_->MergeFrom(*from._impl_.session_info_);
    }
  }
  _this->_impl_._has_bits_[0] |= cached_has_bits;
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void RegisterGateNodeSessionResponse::CopyFrom(const RegisterGateNodeSessionResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:RegisterGateNodeSessionResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void RegisterGateNodeSessionResponse::InternalSwap(RegisterGateNodeSessionResponse* PROTOBUF_RESTRICT other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  swap(_impl_.session_info_, other->_impl_.session_info_);
}

::google::protobuf::Metadata RegisterGateNodeSessionResponse::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class RegisterCentreSessionNodeRequest::_Internal {
 public:
  using HasBits =
      decltype(std::declval<RegisterCentreSessionNodeRequest>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
      8 * PROTOBUF_FIELD_OFFSET(RegisterCentreSessionNodeRequest, _impl_._has_bits_);
};

void RegisterCentreSessionNodeRequest::clear_session_info() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.session_info_ != nullptr) _impl_.session_info_->Clear();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
RegisterCentreSessionNodeRequest::RegisterCentreSessionNodeRequest(::google::protobuf::Arena* arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:RegisterCentreSessionNodeRequest)
}
inline PROTOBUF_NDEBUG_INLINE RegisterCentreSessionNodeRequest::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from, const ::RegisterCentreSessionNodeRequest& from_msg)
      : _has_bits_{from._has_bits_},
        _cached_size_{0} {}

RegisterCentreSessionNodeRequest::RegisterCentreSessionNodeRequest(
    ::google::protobuf::Arena* arena,
    const RegisterCentreSessionNodeRequest& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  RegisterCentreSessionNodeRequest* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);
  ::uint32_t cached_has_bits = _impl_._has_bits_[0];
  _impl_.session_info_ = (cached_has_bits & 0x00000001u) ? ::google::protobuf::Message::CopyConstruct<::SessionDetails>(
                              arena, *from._impl_.session_info_)
                        : nullptr;
  _impl_.centre_node_id_ = from._impl_.centre_node_id_;

  // @@protoc_insertion_point(copy_constructor:RegisterCentreSessionNodeRequest)
}
inline PROTOBUF_NDEBUG_INLINE RegisterCentreSessionNodeRequest::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0} {}

inline void RegisterCentreSessionNodeRequest::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, session_info_),
           0,
           offsetof(Impl_, centre_node_id_) -
               offsetof(Impl_, session_info_) +
               sizeof(Impl_::centre_node_id_));
}
RegisterCentreSessionNodeRequest::~RegisterCentreSessionNodeRequest() {
  // @@protoc_insertion_point(destructor:RegisterCentreSessionNodeRequest)
  SharedDtor(*this);
}
inline void RegisterCentreSessionNodeRequest::SharedDtor(MessageLite& self) {
  RegisterCentreSessionNodeRequest& this_ = static_cast<RegisterCentreSessionNodeRequest&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  delete this_._impl_.session_info_;
  this_._impl_.~Impl_();
}

inline void* RegisterCentreSessionNodeRequest::PlacementNew_(const void*, void* mem,
                                        ::google::protobuf::Arena* arena) {
  return ::new (mem) RegisterCentreSessionNodeRequest(arena);
}
constexpr auto RegisterCentreSessionNodeRequest::InternalNewImpl_() {
  return ::google::protobuf::internal::MessageCreator::ZeroInit(sizeof(RegisterCentreSessionNodeRequest),
                                            alignof(RegisterCentreSessionNodeRequest));
}
PROTOBUF_CONSTINIT
PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::google::protobuf::internal::ClassDataFull RegisterCentreSessionNodeRequest::_class_data_ = {
    ::google::protobuf::internal::ClassData{
        &_RegisterCentreSessionNodeRequest_default_instance_._instance,
        &_table_.header,
        nullptr,  // OnDemandRegisterArenaDtor
        nullptr,  // IsInitialized
        &RegisterCentreSessionNodeRequest::MergeImpl,
        ::google::protobuf::Message::GetNewImpl<RegisterCentreSessionNodeRequest>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
        &RegisterCentreSessionNodeRequest::SharedDtor,
        ::google::protobuf::Message::GetClearImpl<RegisterCentreSessionNodeRequest>(), &RegisterCentreSessionNodeRequest::ByteSizeLong,
            &RegisterCentreSessionNodeRequest::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
        PROTOBUF_FIELD_OFFSET(RegisterCentreSessionNodeRequest, _impl_._cached_size_),
        false,
    },
    &RegisterCentreSessionNodeRequest::kDescriptorMethods,
    &descriptor_table_proto_2fcommon_2fcommon_5fmessage_2eproto,
    nullptr,  // tracker
};
const ::google::protobuf::internal::ClassData* RegisterCentreSessionNodeRequest::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_class_data_.tc_table);
  return _class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<1, 2, 1, 0, 2> RegisterCentreSessionNodeRequest::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(RegisterCentreSessionNodeRequest, _impl_._has_bits_),
    0, // no _extensions_
    2, 8,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967292,  // skipmap
    offsetof(decltype(_table_), field_entries),
    2,  // num_field_entries
    1,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    _class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::RegisterCentreSessionNodeRequest>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // uint32 centre_node_id = 2;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(RegisterCentreSessionNodeRequest, _impl_.centre_node_id_), 63>(),
     {16, 63, 0, PROTOBUF_FIELD_OFFSET(RegisterCentreSessionNodeRequest, _impl_.centre_node_id_)}},
    // .SessionDetails session_info = 1;
    {::_pbi::TcParser::FastMtS1,
     {10, 0, 0, PROTOBUF_FIELD_OFFSET(RegisterCentreSessionNodeRequest, _impl_.session_info_)}},
  }}, {{
    65535, 65535
  }}, {{
    // .SessionDetails session_info = 1;
    {PROTOBUF_FIELD_OFFSET(RegisterCentreSessionNodeRequest, _impl_.session_info_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
    // uint32 centre_node_id = 2;
    {PROTOBUF_FIELD_OFFSET(RegisterCentreSessionNodeRequest, _impl_.centre_node_id_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUInt32)},
  }}, {{
    {::_pbi::TcParser::GetTable<::SessionDetails>()},
  }}, {{
  }},
};

PROTOBUF_NOINLINE void RegisterCentreSessionNodeRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:RegisterCentreSessionNodeRequest)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    ABSL_DCHECK(_impl_.session_info_ != nullptr);
    _impl_.session_info_->Clear();
  }
  _impl_.centre_node_id_ = 0u;
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::uint8_t* RegisterCentreSessionNodeRequest::_InternalSerialize(
            const MessageLite& base, ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) {
          const RegisterCentreSessionNodeRequest& this_ = static_cast<const RegisterCentreSessionNodeRequest&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::uint8_t* RegisterCentreSessionNodeRequest::_InternalSerialize(
            ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) const {
          const RegisterCentreSessionNodeRequest& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(serialize_to_array_start:RegisterCentreSessionNodeRequest)
          ::uint32_t cached_has_bits = 0;
          (void)cached_has_bits;

          cached_has_bits = this_._impl_._has_bits_[0];
          // .SessionDetails session_info = 1;
          if (cached_has_bits & 0x00000001u) {
            target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
                1, *this_._impl_.session_info_, this_._impl_.session_info_->GetCachedSize(), target,
                stream);
          }

          // uint32 centre_node_id = 2;
          if (this_._internal_centre_node_id() != 0) {
            target = stream->EnsureSpace(target);
            target = ::_pbi::WireFormatLite::WriteUInt32ToArray(
                2, this_._internal_centre_node_id(), target);
          }

          if (PROTOBUF_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
            target =
                ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
                    this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
          }
          // @@protoc_insertion_point(serialize_to_array_end:RegisterCentreSessionNodeRequest)
          return target;
        }

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::size_t RegisterCentreSessionNodeRequest::ByteSizeLong(const MessageLite& base) {
          const RegisterCentreSessionNodeRequest& this_ = static_cast<const RegisterCentreSessionNodeRequest&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::size_t RegisterCentreSessionNodeRequest::ByteSizeLong() const {
          const RegisterCentreSessionNodeRequest& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(message_byte_size_start:RegisterCentreSessionNodeRequest)
          ::size_t total_size = 0;

          ::uint32_t cached_has_bits = 0;
          // Prevent compiler warnings about cached_has_bits being unused
          (void)cached_has_bits;

          ::_pbi::Prefetch5LinesFrom7Lines(&this_);
           {
            // .SessionDetails session_info = 1;
            cached_has_bits = this_._impl_._has_bits_[0];
            if (cached_has_bits & 0x00000001u) {
              total_size += 1 +
                            ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.session_info_);
            }
          }
           {
            // uint32 centre_node_id = 2;
            if (this_._internal_centre_node_id() != 0) {
              total_size += ::_pbi::WireFormatLite::UInt32SizePlusOne(
                  this_._internal_centre_node_id());
            }
          }
          return this_.MaybeComputeUnknownFieldsSize(total_size,
                                                     &this_._impl_._cached_size_);
        }

void RegisterCentreSessionNodeRequest::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<RegisterCentreSessionNodeRequest*>(&to_msg);
  auto& from = static_cast<const RegisterCentreSessionNodeRequest&>(from_msg);
  ::google::protobuf::Arena* arena = _this->GetArena();
  // @@protoc_insertion_point(class_specific_merge_from_start:RegisterCentreSessionNodeRequest)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    ABSL_DCHECK(from._impl_.session_info_ != nullptr);
    if (_this->_impl_.session_info_ == nullptr) {
      _this->_impl_.session_info_ =
          ::google::protobuf::Message::CopyConstruct<::SessionDetails>(arena, *from._impl_.session_info_);
    } else {
      _this->_impl_.session_info_->MergeFrom(*from._impl_.session_info_);
    }
  }
  if (from._internal_centre_node_id() != 0) {
    _this->_impl_.centre_node_id_ = from._impl_.centre_node_id_;
  }
  _this->_impl_._has_bits_[0] |= cached_has_bits;
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void RegisterCentreSessionNodeRequest::CopyFrom(const RegisterCentreSessionNodeRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:RegisterCentreSessionNodeRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void RegisterCentreSessionNodeRequest::InternalSwap(RegisterCentreSessionNodeRequest* PROTOBUF_RESTRICT other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(RegisterCentreSessionNodeRequest, _impl_.centre_node_id_)
      + sizeof(RegisterCentreSessionNodeRequest::_impl_.centre_node_id_)
      - PROTOBUF_FIELD_OFFSET(RegisterCentreSessionNodeRequest, _impl_.session_info_)>(
          reinterpret_cast<char*>(&_impl_.session_info_),
          reinterpret_cast<char*>(&other->_impl_.session_info_));
}

::google::protobuf::Metadata RegisterCentreSessionNodeRequest::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class RegisterSessionCentreNodeResponse::_Internal {
 public:
  using HasBits =
      decltype(std::declval<RegisterSessionCentreNodeResponse>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
      8 * PROTOBUF_FIELD_OFFSET(RegisterSessionCentreNodeResponse, _impl_._has_bits_);
};

void RegisterSessionCentreNodeResponse::clear_session_info() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.session_info_ != nullptr) _impl_.session_info_->Clear();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
RegisterSessionCentreNodeResponse::RegisterSessionCentreNodeResponse(::google::protobuf::Arena* arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:RegisterSessionCentreNodeResponse)
}
inline PROTOBUF_NDEBUG_INLINE RegisterSessionCentreNodeResponse::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from, const ::RegisterSessionCentreNodeResponse& from_msg)
      : _has_bits_{from._has_bits_},
        _cached_size_{0} {}

RegisterSessionCentreNodeResponse::RegisterSessionCentreNodeResponse(
    ::google::protobuf::Arena* arena,
    const RegisterSessionCentreNodeResponse& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  RegisterSessionCentreNodeResponse* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);
  ::uint32_t cached_has_bits = _impl_._has_bits_[0];
  _impl_.session_info_ = (cached_has_bits & 0x00000001u) ? ::google::protobuf::Message::CopyConstruct<::SessionDetails>(
                              arena, *from._impl_.session_info_)
                        : nullptr;

  // @@protoc_insertion_point(copy_constructor:RegisterSessionCentreNodeResponse)
}
inline PROTOBUF_NDEBUG_INLINE RegisterSessionCentreNodeResponse::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0} {}

inline void RegisterSessionCentreNodeResponse::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  _impl_.session_info_ = {};
}
RegisterSessionCentreNodeResponse::~RegisterSessionCentreNodeResponse() {
  // @@protoc_insertion_point(destructor:RegisterSessionCentreNodeResponse)
  SharedDtor(*this);
}
inline void RegisterSessionCentreNodeResponse::SharedDtor(MessageLite& self) {
  RegisterSessionCentreNodeResponse& this_ = static_cast<RegisterSessionCentreNodeResponse&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  delete this_._impl_.session_info_;
  this_._impl_.~Impl_();
}

inline void* RegisterSessionCentreNodeResponse::PlacementNew_(const void*, void* mem,
                                        ::google::protobuf::Arena* arena) {
  return ::new (mem) RegisterSessionCentreNodeResponse(arena);
}
constexpr auto RegisterSessionCentreNodeResponse::InternalNewImpl_() {
  return ::google::protobuf::internal::MessageCreator::ZeroInit(sizeof(RegisterSessionCentreNodeResponse),
                                            alignof(RegisterSessionCentreNodeResponse));
}
PROTOBUF_CONSTINIT
PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::google::protobuf::internal::ClassDataFull RegisterSessionCentreNodeResponse::_class_data_ = {
    ::google::protobuf::internal::ClassData{
        &_RegisterSessionCentreNodeResponse_default_instance_._instance,
        &_table_.header,
        nullptr,  // OnDemandRegisterArenaDtor
        nullptr,  // IsInitialized
        &RegisterSessionCentreNodeResponse::MergeImpl,
        ::google::protobuf::Message::GetNewImpl<RegisterSessionCentreNodeResponse>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
        &RegisterSessionCentreNodeResponse::SharedDtor,
        ::google::protobuf::Message::GetClearImpl<RegisterSessionCentreNodeResponse>(), &RegisterSessionCentreNodeResponse::ByteSizeLong,
            &RegisterSessionCentreNodeResponse::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
        PROTOBUF_FIELD_OFFSET(RegisterSessionCentreNodeResponse, _impl_._cached_size_),
        false,
    },
    &RegisterSessionCentreNodeResponse::kDescriptorMethods,
    &descriptor_table_proto_2fcommon_2fcommon_5fmessage_2eproto,
    nullptr,  // tracker
};
const ::google::protobuf::internal::ClassData* RegisterSessionCentreNodeResponse::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_class_data_.tc_table);
  return _class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<0, 1, 1, 0, 2> RegisterSessionCentreNodeResponse::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(RegisterSessionCentreNodeResponse, _impl_._has_bits_),
    0, // no _extensions_
    1, 0,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967294,  // skipmap
    offsetof(decltype(_table_), field_entries),
    1,  // num_field_entries
    1,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    _class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::RegisterSessionCentreNodeResponse>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // .SessionDetails session_info = 1;
    {::_pbi::TcParser::FastMtS1,
     {10, 0, 0, PROTOBUF_FIELD_OFFSET(RegisterSessionCentreNodeResponse, _impl_.session_info_)}},
  }}, {{
    65535, 65535
  }}, {{
    // .SessionDetails session_info = 1;
    {PROTOBUF_FIELD_OFFSET(RegisterSessionCentreNodeResponse, _impl_.session_info_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
  }}, {{
    {::_pbi::TcParser::GetTable<::SessionDetails>()},
  }}, {{
  }},
};

PROTOBUF_NOINLINE void RegisterSessionCentreNodeResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:RegisterSessionCentreNodeResponse)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    ABSL_DCHECK(_impl_.session_info_ != nullptr);
    _impl_.session_info_->Clear();
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::uint8_t* RegisterSessionCentreNodeResponse::_InternalSerialize(
            const MessageLite& base, ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) {
          const RegisterSessionCentreNodeResponse& this_ = static_cast<const RegisterSessionCentreNodeResponse&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::uint8_t* RegisterSessionCentreNodeResponse::_InternalSerialize(
            ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) const {
          const RegisterSessionCentreNodeResponse& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(serialize_to_array_start:RegisterSessionCentreNodeResponse)
          ::uint32_t cached_has_bits = 0;
          (void)cached_has_bits;

          cached_has_bits = this_._impl_._has_bits_[0];
          // .SessionDetails session_info = 1;
          if (cached_has_bits & 0x00000001u) {
            target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
                1, *this_._impl_.session_info_, this_._impl_.session_info_->GetCachedSize(), target,
                stream);
          }

          if (PROTOBUF_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
            target =
                ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
                    this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
          }
          // @@protoc_insertion_point(serialize_to_array_end:RegisterSessionCentreNodeResponse)
          return target;
        }

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::size_t RegisterSessionCentreNodeResponse::ByteSizeLong(const MessageLite& base) {
          const RegisterSessionCentreNodeResponse& this_ = static_cast<const RegisterSessionCentreNodeResponse&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::size_t RegisterSessionCentreNodeResponse::ByteSizeLong() const {
          const RegisterSessionCentreNodeResponse& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(message_byte_size_start:RegisterSessionCentreNodeResponse)
          ::size_t total_size = 0;

          ::uint32_t cached_has_bits = 0;
          // Prevent compiler warnings about cached_has_bits being unused
          (void)cached_has_bits;

           {
            // .SessionDetails session_info = 1;
            cached_has_bits = this_._impl_._has_bits_[0];
            if (cached_has_bits & 0x00000001u) {
              total_size += 1 +
                            ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.session_info_);
            }
          }
          return this_.MaybeComputeUnknownFieldsSize(total_size,
                                                     &this_._impl_._cached_size_);
        }

void RegisterSessionCentreNodeResponse::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<RegisterSessionCentreNodeResponse*>(&to_msg);
  auto& from = static_cast<const RegisterSessionCentreNodeResponse&>(from_msg);
  ::google::protobuf::Arena* arena = _this->GetArena();
  // @@protoc_insertion_point(class_specific_merge_from_start:RegisterSessionCentreNodeResponse)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    ABSL_DCHECK(from._impl_.session_info_ != nullptr);
    if (_this->_impl_.session_info_ == nullptr) {
      _this->_impl_.session_info_ =
          ::google::protobuf::Message::CopyConstruct<::SessionDetails>(arena, *from._impl_.session_info_);
    } else {
      _this->_impl_.session_info_->MergeFrom(*from._impl_.session_info_);
    }
  }
  _this->_impl_._has_bits_[0] |= cached_has_bits;
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void RegisterSessionCentreNodeResponse::CopyFrom(const RegisterSessionCentreNodeResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:RegisterSessionCentreNodeResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void RegisterSessionCentreNodeResponse::InternalSwap(RegisterSessionCentreNodeResponse* PROTOBUF_RESTRICT other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  swap(_impl_.session_info_, other->_impl_.session_info_);
}

::google::protobuf::Metadata RegisterSessionCentreNodeResponse::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class GateSessionDisconnectRequest::_Internal {
 public:
  using HasBits =
      decltype(std::declval<GateSessionDisconnectRequest>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
      8 * PROTOBUF_FIELD_OFFSET(GateSessionDisconnectRequest, _impl_._has_bits_);
};

void GateSessionDisconnectRequest::clear_session_info() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.session_info_ != nullptr) _impl_.session_info_->Clear();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
GateSessionDisconnectRequest::GateSessionDisconnectRequest(::google::protobuf::Arena* arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:GateSessionDisconnectRequest)
}
inline PROTOBUF_NDEBUG_INLINE GateSessionDisconnectRequest::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from, const ::GateSessionDisconnectRequest& from_msg)
      : _has_bits_{from._has_bits_},
        _cached_size_{0} {}

GateSessionDisconnectRequest::GateSessionDisconnectRequest(
    ::google::protobuf::Arena* arena,
    const GateSessionDisconnectRequest& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  GateSessionDisconnectRequest* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);
  ::uint32_t cached_has_bits = _impl_._has_bits_[0];
  _impl_.session_info_ = (cached_has_bits & 0x00000001u) ? ::google::protobuf::Message::CopyConstruct<::SessionDetails>(
                              arena, *from._impl_.session_info_)
                        : nullptr;

  // @@protoc_insertion_point(copy_constructor:GateSessionDisconnectRequest)
}
inline PROTOBUF_NDEBUG_INLINE GateSessionDisconnectRequest::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0} {}

inline void GateSessionDisconnectRequest::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  _impl_.session_info_ = {};
}
GateSessionDisconnectRequest::~GateSessionDisconnectRequest() {
  // @@protoc_insertion_point(destructor:GateSessionDisconnectRequest)
  SharedDtor(*this);
}
inline void GateSessionDisconnectRequest::SharedDtor(MessageLite& self) {
  GateSessionDisconnectRequest& this_ = static_cast<GateSessionDisconnectRequest&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  delete this_._impl_.session_info_;
  this_._impl_.~Impl_();
}

inline void* GateSessionDisconnectRequest::PlacementNew_(const void*, void* mem,
                                        ::google::protobuf::Arena* arena) {
  return ::new (mem) GateSessionDisconnectRequest(arena);
}
constexpr auto GateSessionDisconnectRequest::InternalNewImpl_() {
  return ::google::protobuf::internal::MessageCreator::ZeroInit(sizeof(GateSessionDisconnectRequest),
                                            alignof(GateSessionDisconnectRequest));
}
PROTOBUF_CONSTINIT
PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::google::protobuf::internal::ClassDataFull GateSessionDisconnectRequest::_class_data_ = {
    ::google::protobuf::internal::ClassData{
        &_GateSessionDisconnectRequest_default_instance_._instance,
        &_table_.header,
        nullptr,  // OnDemandRegisterArenaDtor
        nullptr,  // IsInitialized
        &GateSessionDisconnectRequest::MergeImpl,
        ::google::protobuf::Message::GetNewImpl<GateSessionDisconnectRequest>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
        &GateSessionDisconnectRequest::SharedDtor,
        ::google::protobuf::Message::GetClearImpl<GateSessionDisconnectRequest>(), &GateSessionDisconnectRequest::ByteSizeLong,
            &GateSessionDisconnectRequest::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
        PROTOBUF_FIELD_OFFSET(GateSessionDisconnectRequest, _impl_._cached_size_),
        false,
    },
    &GateSessionDisconnectRequest::kDescriptorMethods,
    &descriptor_table_proto_2fcommon_2fcommon_5fmessage_2eproto,
    nullptr,  // tracker
};
const ::google::protobuf::internal::ClassData* GateSessionDisconnectRequest::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_class_data_.tc_table);
  return _class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<0, 1, 1, 0, 2> GateSessionDisconnectRequest::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(GateSessionDisconnectRequest, _impl_._has_bits_),
    0, // no _extensions_
    1, 0,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967294,  // skipmap
    offsetof(decltype(_table_), field_entries),
    1,  // num_field_entries
    1,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    _class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::GateSessionDisconnectRequest>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // .SessionDetails session_info = 1;
    {::_pbi::TcParser::FastMtS1,
     {10, 0, 0, PROTOBUF_FIELD_OFFSET(GateSessionDisconnectRequest, _impl_.session_info_)}},
  }}, {{
    65535, 65535
  }}, {{
    // .SessionDetails session_info = 1;
    {PROTOBUF_FIELD_OFFSET(GateSessionDisconnectRequest, _impl_.session_info_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
  }}, {{
    {::_pbi::TcParser::GetTable<::SessionDetails>()},
  }}, {{
  }},
};

PROTOBUF_NOINLINE void GateSessionDisconnectRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:GateSessionDisconnectRequest)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    ABSL_DCHECK(_impl_.session_info_ != nullptr);
    _impl_.session_info_->Clear();
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::uint8_t* GateSessionDisconnectRequest::_InternalSerialize(
            const MessageLite& base, ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) {
          const GateSessionDisconnectRequest& this_ = static_cast<const GateSessionDisconnectRequest&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::uint8_t* GateSessionDisconnectRequest::_InternalSerialize(
            ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) const {
          const GateSessionDisconnectRequest& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(serialize_to_array_start:GateSessionDisconnectRequest)
          ::uint32_t cached_has_bits = 0;
          (void)cached_has_bits;

          cached_has_bits = this_._impl_._has_bits_[0];
          // .SessionDetails session_info = 1;
          if (cached_has_bits & 0x00000001u) {
            target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
                1, *this_._impl_.session_info_, this_._impl_.session_info_->GetCachedSize(), target,
                stream);
          }

          if (PROTOBUF_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
            target =
                ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
                    this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
          }
          // @@protoc_insertion_point(serialize_to_array_end:GateSessionDisconnectRequest)
          return target;
        }

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::size_t GateSessionDisconnectRequest::ByteSizeLong(const MessageLite& base) {
          const GateSessionDisconnectRequest& this_ = static_cast<const GateSessionDisconnectRequest&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::size_t GateSessionDisconnectRequest::ByteSizeLong() const {
          const GateSessionDisconnectRequest& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(message_byte_size_start:GateSessionDisconnectRequest)
          ::size_t total_size = 0;

          ::uint32_t cached_has_bits = 0;
          // Prevent compiler warnings about cached_has_bits being unused
          (void)cached_has_bits;

           {
            // .SessionDetails session_info = 1;
            cached_has_bits = this_._impl_._has_bits_[0];
            if (cached_has_bits & 0x00000001u) {
              total_size += 1 +
                            ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.session_info_);
            }
          }
          return this_.MaybeComputeUnknownFieldsSize(total_size,
                                                     &this_._impl_._cached_size_);
        }

void GateSessionDisconnectRequest::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<GateSessionDisconnectRequest*>(&to_msg);
  auto& from = static_cast<const GateSessionDisconnectRequest&>(from_msg);
  ::google::protobuf::Arena* arena = _this->GetArena();
  // @@protoc_insertion_point(class_specific_merge_from_start:GateSessionDisconnectRequest)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    ABSL_DCHECK(from._impl_.session_info_ != nullptr);
    if (_this->_impl_.session_info_ == nullptr) {
      _this->_impl_.session_info_ =
          ::google::protobuf::Message::CopyConstruct<::SessionDetails>(arena, *from._impl_.session_info_);
    } else {
      _this->_impl_.session_info_->MergeFrom(*from._impl_.session_info_);
    }
  }
  _this->_impl_._has_bits_[0] |= cached_has_bits;
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void GateSessionDisconnectRequest::CopyFrom(const GateSessionDisconnectRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:GateSessionDisconnectRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void GateSessionDisconnectRequest::InternalSwap(GateSessionDisconnectRequest* PROTOBUF_RESTRICT other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  swap(_impl_.session_info_, other->_impl_.session_info_);
}

::google::protobuf::Metadata GateSessionDisconnectRequest::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class RouteMessageRequest::_Internal {
 public:
};

RouteMessageRequest::RouteMessageRequest(::google::protobuf::Arena* arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:RouteMessageRequest)
}
inline PROTOBUF_NDEBUG_INLINE RouteMessageRequest::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from, const ::RouteMessageRequest& from_msg)
      : route_nodes_{visibility, arena, from.route_nodes_},
        body_(arena, from.body_),
        _cached_size_{0} {}

RouteMessageRequest::RouteMessageRequest(
    ::google::protobuf::Arena* arena,
    const RouteMessageRequest& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  RouteMessageRequest* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);
  ::memcpy(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, session_id_),
           reinterpret_cast<const char *>(&from._impl_) +
               offsetof(Impl_, session_id_),
           offsetof(Impl_, is_client_) -
               offsetof(Impl_, session_id_) +
               sizeof(Impl_::is_client_));

  // @@protoc_insertion_point(copy_constructor:RouteMessageRequest)
}
inline PROTOBUF_NDEBUG_INLINE RouteMessageRequest::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : route_nodes_{visibility, arena},
        body_(arena),
        _cached_size_{0} {}

inline void RouteMessageRequest::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, session_id_),
           0,
           offsetof(Impl_, is_client_) -
               offsetof(Impl_, session_id_) +
               sizeof(Impl_::is_client_));
}
RouteMessageRequest::~RouteMessageRequest() {
  // @@protoc_insertion_point(destructor:RouteMessageRequest)
  SharedDtor(*this);
}
inline void RouteMessageRequest::SharedDtor(MessageLite& self) {
  RouteMessageRequest& this_ = static_cast<RouteMessageRequest&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  this_._impl_.body_.Destroy();
  this_._impl_.~Impl_();
}

inline void* RouteMessageRequest::PlacementNew_(const void*, void* mem,
                                        ::google::protobuf::Arena* arena) {
  return ::new (mem) RouteMessageRequest(arena);
}
constexpr auto RouteMessageRequest::InternalNewImpl_() {
  constexpr auto arena_bits = ::google::protobuf::internal::EncodePlacementArenaOffsets({
      PROTOBUF_FIELD_OFFSET(RouteMessageRequest, _impl_.route_nodes_) +
          decltype(RouteMessageRequest::_impl_.route_nodes_)::
              InternalGetArenaOffset(
                  ::google::protobuf::Message::internal_visibility()),
  });
  if (arena_bits.has_value()) {
    return ::google::protobuf::internal::MessageCreator::CopyInit(
        sizeof(RouteMessageRequest), alignof(RouteMessageRequest), *arena_bits);
  } else {
    return ::google::protobuf::internal::MessageCreator(&RouteMessageRequest::PlacementNew_,
                                 sizeof(RouteMessageRequest),
                                 alignof(RouteMessageRequest));
  }
}
PROTOBUF_CONSTINIT
PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::google::protobuf::internal::ClassDataFull RouteMessageRequest::_class_data_ = {
    ::google::protobuf::internal::ClassData{
        &_RouteMessageRequest_default_instance_._instance,
        &_table_.header,
        nullptr,  // OnDemandRegisterArenaDtor
        nullptr,  // IsInitialized
        &RouteMessageRequest::MergeImpl,
        ::google::protobuf::Message::GetNewImpl<RouteMessageRequest>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
        &RouteMessageRequest::SharedDtor,
        ::google::protobuf::Message::GetClearImpl<RouteMessageRequest>(), &RouteMessageRequest::ByteSizeLong,
            &RouteMessageRequest::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
        PROTOBUF_FIELD_OFFSET(RouteMessageRequest, _impl_._cached_size_),
        false,
    },
    &RouteMessageRequest::kDescriptorMethods,
    &descriptor_table_proto_2fcommon_2fcommon_5fmessage_2eproto,
    nullptr,  // tracker
};
const ::google::protobuf::internal::ClassData* RouteMessageRequest::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_class_data_.tc_table);
  return _class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<3, 5, 1, 0, 2> RouteMessageRequest::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    5, 56,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967264,  // skipmap
    offsetof(decltype(_table_), field_entries),
    5,  // num_field_entries
    1,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    _class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::RouteMessageRequest>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
    // bytes body = 1;
    {::_pbi::TcParser::FastBS1,
     {10, 63, 0, PROTOBUF_FIELD_OFFSET(RouteMessageRequest, _impl_.body_)}},
    // repeated .RoutingNodeInfo route_nodes = 2;
    {::_pbi::TcParser::FastMtR1,
     {18, 63, 0, PROTOBUF_FIELD_OFFSET(RouteMessageRequest, _impl_.route_nodes_)}},
    // uint64 session_id = 3;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint64_t, offsetof(RouteMessageRequest, _impl_.session_id_), 63>(),
     {24, 63, 0, PROTOBUF_FIELD_OFFSET(RouteMessageRequest, _impl_.session_id_)}},
    // uint64 id = 4;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint64_t, offsetof(RouteMessageRequest, _impl_.id_), 63>(),
     {32, 63, 0, PROTOBUF_FIELD_OFFSET(RouteMessageRequest, _impl_.id_)}},
    // bool is_client = 5;
    {::_pbi::TcParser::SingularVarintNoZag1<bool, offsetof(RouteMessageRequest, _impl_.is_client_), 63>(),
     {40, 63, 0, PROTOBUF_FIELD_OFFSET(RouteMessageRequest, _impl_.is_client_)}},
    {::_pbi::TcParser::MiniParse, {}},
    {::_pbi::TcParser::MiniParse, {}},
  }}, {{
    65535, 65535
  }}, {{
    // bytes body = 1;
    {PROTOBUF_FIELD_OFFSET(RouteMessageRequest, _impl_.body_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kBytes | ::_fl::kRepAString)},
    // repeated .RoutingNodeInfo route_nodes = 2;
    {PROTOBUF_FIELD_OFFSET(RouteMessageRequest, _impl_.route_nodes_), 0, 0,
    (0 | ::_fl::kFcRepeated | ::_fl::kMessage | ::_fl::kTvTable)},
    // uint64 session_id = 3;
    {PROTOBUF_FIELD_OFFSET(RouteMessageRequest, _impl_.session_id_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUInt64)},
    // uint64 id = 4;
    {PROTOBUF_FIELD_OFFSET(RouteMessageRequest, _impl_.id_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUInt64)},
    // bool is_client = 5;
    {PROTOBUF_FIELD_OFFSET(RouteMessageRequest, _impl_.is_client_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kBool)},
  }}, {{
    {::_pbi::TcParser::GetTable<::RoutingNodeInfo>()},
  }}, {{
  }},
};

PROTOBUF_NOINLINE void RouteMessageRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:RouteMessageRequest)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.route_nodes_.Clear();
  _impl_.body_.ClearToEmpty();
  ::memset(&_impl_.session_id_, 0, static_cast<::size_t>(
      reinterpret_cast<char*>(&_impl_.is_client_) -
      reinterpret_cast<char*>(&_impl_.session_id_)) + sizeof(_impl_.is_client_));
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::uint8_t* RouteMessageRequest::_InternalSerialize(
            const MessageLite& base, ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) {
          const RouteMessageRequest& this_ = static_cast<const RouteMessageRequest&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::uint8_t* RouteMessageRequest::_InternalSerialize(
            ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) const {
          const RouteMessageRequest& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(serialize_to_array_start:RouteMessageRequest)
          ::uint32_t cached_has_bits = 0;
          (void)cached_has_bits;

          // bytes body = 1;
          if (!this_._internal_body().empty()) {
            const std::string& _s = this_._internal_body();
            target = stream->WriteBytesMaybeAliased(1, _s, target);
          }

          // repeated .RoutingNodeInfo route_nodes = 2;
          for (unsigned i = 0, n = static_cast<unsigned>(
                                   this_._internal_route_nodes_size());
               i < n; i++) {
            const auto& repfield = this_._internal_route_nodes().Get(i);
            target =
                ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
                    2, repfield, repfield.GetCachedSize(),
                    target, stream);
          }

          // uint64 session_id = 3;
          if (this_._internal_session_id() != 0) {
            target = stream->EnsureSpace(target);
            target = ::_pbi::WireFormatLite::WriteUInt64ToArray(
                3, this_._internal_session_id(), target);
          }

          // uint64 id = 4;
          if (this_._internal_id() != 0) {
            target = stream->EnsureSpace(target);
            target = ::_pbi::WireFormatLite::WriteUInt64ToArray(
                4, this_._internal_id(), target);
          }

          // bool is_client = 5;
          if (this_._internal_is_client() != 0) {
            target = stream->EnsureSpace(target);
            target = ::_pbi::WireFormatLite::WriteBoolToArray(
                5, this_._internal_is_client(), target);
          }

          if (PROTOBUF_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
            target =
                ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
                    this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
          }
          // @@protoc_insertion_point(serialize_to_array_end:RouteMessageRequest)
          return target;
        }

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::size_t RouteMessageRequest::ByteSizeLong(const MessageLite& base) {
          const RouteMessageRequest& this_ = static_cast<const RouteMessageRequest&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::size_t RouteMessageRequest::ByteSizeLong() const {
          const RouteMessageRequest& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(message_byte_size_start:RouteMessageRequest)
          ::size_t total_size = 0;

          ::uint32_t cached_has_bits = 0;
          // Prevent compiler warnings about cached_has_bits being unused
          (void)cached_has_bits;

          ::_pbi::Prefetch5LinesFrom7Lines(&this_);
           {
            // repeated .RoutingNodeInfo route_nodes = 2;
            {
              total_size += 1UL * this_._internal_route_nodes_size();
              for (const auto& msg : this_._internal_route_nodes()) {
                total_size += ::google::protobuf::internal::WireFormatLite::MessageSize(msg);
              }
            }
          }
           {
            // bytes body = 1;
            if (!this_._internal_body().empty()) {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::BytesSize(
                                              this_._internal_body());
            }
            // uint64 session_id = 3;
            if (this_._internal_session_id() != 0) {
              total_size += ::_pbi::WireFormatLite::UInt64SizePlusOne(
                  this_._internal_session_id());
            }
            // uint64 id = 4;
            if (this_._internal_id() != 0) {
              total_size += ::_pbi::WireFormatLite::UInt64SizePlusOne(
                  this_._internal_id());
            }
            // bool is_client = 5;
            if (this_._internal_is_client() != 0) {
              total_size += 2;
            }
          }
          return this_.MaybeComputeUnknownFieldsSize(total_size,
                                                     &this_._impl_._cached_size_);
        }

void RouteMessageRequest::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<RouteMessageRequest*>(&to_msg);
  auto& from = static_cast<const RouteMessageRequest&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:RouteMessageRequest)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_internal_mutable_route_nodes()->MergeFrom(
      from._internal_route_nodes());
  if (!from._internal_body().empty()) {
    _this->_internal_set_body(from._internal_body());
  }
  if (from._internal_session_id() != 0) {
    _this->_impl_.session_id_ = from._impl_.session_id_;
  }
  if (from._internal_id() != 0) {
    _this->_impl_.id_ = from._impl_.id_;
  }
  if (from._internal_is_client() != 0) {
    _this->_impl_.is_client_ = from._impl_.is_client_;
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void RouteMessageRequest::CopyFrom(const RouteMessageRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:RouteMessageRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void RouteMessageRequest::InternalSwap(RouteMessageRequest* PROTOBUF_RESTRICT other) {
  using std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  _impl_.route_nodes_.InternalSwap(&other->_impl_.route_nodes_);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.body_, &other->_impl_.body_, arena);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(RouteMessageRequest, _impl_.is_client_)
      + sizeof(RouteMessageRequest::_impl_.is_client_)
      - PROTOBUF_FIELD_OFFSET(RouteMessageRequest, _impl_.session_id_)>(
          reinterpret_cast<char*>(&_impl_.session_id_),
          reinterpret_cast<char*>(&other->_impl_.session_id_));
}

::google::protobuf::Metadata RouteMessageRequest::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class RouteMessageResponse::_Internal {
 public:
};

RouteMessageResponse::RouteMessageResponse(::google::protobuf::Arena* arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:RouteMessageResponse)
}
inline PROTOBUF_NDEBUG_INLINE RouteMessageResponse::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from, const ::RouteMessageResponse& from_msg)
      : route_nodes_{visibility, arena, from.route_nodes_},
        body_(arena, from.body_),
        _cached_size_{0} {}

RouteMessageResponse::RouteMessageResponse(
    ::google::protobuf::Arena* arena,
    const RouteMessageResponse& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  RouteMessageResponse* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);
  ::memcpy(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, session_id_),
           reinterpret_cast<const char *>(&from._impl_) +
               offsetof(Impl_, session_id_),
           offsetof(Impl_, is_client_) -
               offsetof(Impl_, session_id_) +
               sizeof(Impl_::is_client_));

  // @@protoc_insertion_point(copy_constructor:RouteMessageResponse)
}
inline PROTOBUF_NDEBUG_INLINE RouteMessageResponse::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : route_nodes_{visibility, arena},
        body_(arena),
        _cached_size_{0} {}

inline void RouteMessageResponse::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, session_id_),
           0,
           offsetof(Impl_, is_client_) -
               offsetof(Impl_, session_id_) +
               sizeof(Impl_::is_client_));
}
RouteMessageResponse::~RouteMessageResponse() {
  // @@protoc_insertion_point(destructor:RouteMessageResponse)
  SharedDtor(*this);
}
inline void RouteMessageResponse::SharedDtor(MessageLite& self) {
  RouteMessageResponse& this_ = static_cast<RouteMessageResponse&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  this_._impl_.body_.Destroy();
  this_._impl_.~Impl_();
}

inline void* RouteMessageResponse::PlacementNew_(const void*, void* mem,
                                        ::google::protobuf::Arena* arena) {
  return ::new (mem) RouteMessageResponse(arena);
}
constexpr auto RouteMessageResponse::InternalNewImpl_() {
  constexpr auto arena_bits = ::google::protobuf::internal::EncodePlacementArenaOffsets({
      PROTOBUF_FIELD_OFFSET(RouteMessageResponse, _impl_.route_nodes_) +
          decltype(RouteMessageResponse::_impl_.route_nodes_)::
              InternalGetArenaOffset(
                  ::google::protobuf::Message::internal_visibility()),
  });
  if (arena_bits.has_value()) {
    return ::google::protobuf::internal::MessageCreator::CopyInit(
        sizeof(RouteMessageResponse), alignof(RouteMessageResponse), *arena_bits);
  } else {
    return ::google::protobuf::internal::MessageCreator(&RouteMessageResponse::PlacementNew_,
                                 sizeof(RouteMessageResponse),
                                 alignof(RouteMessageResponse));
  }
}
PROTOBUF_CONSTINIT
PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::google::protobuf::internal::ClassDataFull RouteMessageResponse::_class_data_ = {
    ::google::protobuf::internal::ClassData{
        &_RouteMessageResponse_default_instance_._instance,
        &_table_.header,
        nullptr,  // OnDemandRegisterArenaDtor
        nullptr,  // IsInitialized
        &RouteMessageResponse::MergeImpl,
        ::google::protobuf::Message::GetNewImpl<RouteMessageResponse>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
        &RouteMessageResponse::SharedDtor,
        ::google::protobuf::Message::GetClearImpl<RouteMessageResponse>(), &RouteMessageResponse::ByteSizeLong,
            &RouteMessageResponse::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
        PROTOBUF_FIELD_OFFSET(RouteMessageResponse, _impl_._cached_size_),
        false,
    },
    &RouteMessageResponse::kDescriptorMethods,
    &descriptor_table_proto_2fcommon_2fcommon_5fmessage_2eproto,
    nullptr,  // tracker
};
const ::google::protobuf::internal::ClassData* RouteMessageResponse::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_class_data_.tc_table);
  return _class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<3, 5, 1, 0, 2> RouteMessageResponse::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    5, 56,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967264,  // skipmap
    offsetof(decltype(_table_), field_entries),
    5,  // num_field_entries
    1,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    _class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::RouteMessageResponse>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
    // bytes body = 1;
    {::_pbi::TcParser::FastBS1,
     {10, 63, 0, PROTOBUF_FIELD_OFFSET(RouteMessageResponse, _impl_.body_)}},
    // repeated .RoutingNodeInfo route_nodes = 2;
    {::_pbi::TcParser::FastMtR1,
     {18, 63, 0, PROTOBUF_FIELD_OFFSET(RouteMessageResponse, _impl_.route_nodes_)}},
    // uint64 session_id = 3;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint64_t, offsetof(RouteMessageResponse, _impl_.session_id_), 63>(),
     {24, 63, 0, PROTOBUF_FIELD_OFFSET(RouteMessageResponse, _impl_.session_id_)}},
    // uint64 id = 4;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint64_t, offsetof(RouteMessageResponse, _impl_.id_), 63>(),
     {32, 63, 0, PROTOBUF_FIELD_OFFSET(RouteMessageResponse, _impl_.id_)}},
    // bool is_client = 5;
    {::_pbi::TcParser::SingularVarintNoZag1<bool, offsetof(RouteMessageResponse, _impl_.is_client_), 63>(),
     {40, 63, 0, PROTOBUF_FIELD_OFFSET(RouteMessageResponse, _impl_.is_client_)}},
    {::_pbi::TcParser::MiniParse, {}},
    {::_pbi::TcParser::MiniParse, {}},
  }}, {{
    65535, 65535
  }}, {{
    // bytes body = 1;
    {PROTOBUF_FIELD_OFFSET(RouteMessageResponse, _impl_.body_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kBytes | ::_fl::kRepAString)},
    // repeated .RoutingNodeInfo route_nodes = 2;
    {PROTOBUF_FIELD_OFFSET(RouteMessageResponse, _impl_.route_nodes_), 0, 0,
    (0 | ::_fl::kFcRepeated | ::_fl::kMessage | ::_fl::kTvTable)},
    // uint64 session_id = 3;
    {PROTOBUF_FIELD_OFFSET(RouteMessageResponse, _impl_.session_id_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUInt64)},
    // uint64 id = 4;
    {PROTOBUF_FIELD_OFFSET(RouteMessageResponse, _impl_.id_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUInt64)},
    // bool is_client = 5;
    {PROTOBUF_FIELD_OFFSET(RouteMessageResponse, _impl_.is_client_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kBool)},
  }}, {{
    {::_pbi::TcParser::GetTable<::RoutingNodeInfo>()},
  }}, {{
  }},
};

PROTOBUF_NOINLINE void RouteMessageResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:RouteMessageResponse)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.route_nodes_.Clear();
  _impl_.body_.ClearToEmpty();
  ::memset(&_impl_.session_id_, 0, static_cast<::size_t>(
      reinterpret_cast<char*>(&_impl_.is_client_) -
      reinterpret_cast<char*>(&_impl_.session_id_)) + sizeof(_impl_.is_client_));
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::uint8_t* RouteMessageResponse::_InternalSerialize(
            const MessageLite& base, ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) {
          const RouteMessageResponse& this_ = static_cast<const RouteMessageResponse&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::uint8_t* RouteMessageResponse::_InternalSerialize(
            ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) const {
          const RouteMessageResponse& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(serialize_to_array_start:RouteMessageResponse)
          ::uint32_t cached_has_bits = 0;
          (void)cached_has_bits;

          // bytes body = 1;
          if (!this_._internal_body().empty()) {
            const std::string& _s = this_._internal_body();
            target = stream->WriteBytesMaybeAliased(1, _s, target);
          }

          // repeated .RoutingNodeInfo route_nodes = 2;
          for (unsigned i = 0, n = static_cast<unsigned>(
                                   this_._internal_route_nodes_size());
               i < n; i++) {
            const auto& repfield = this_._internal_route_nodes().Get(i);
            target =
                ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
                    2, repfield, repfield.GetCachedSize(),
                    target, stream);
          }

          // uint64 session_id = 3;
          if (this_._internal_session_id() != 0) {
            target = stream->EnsureSpace(target);
            target = ::_pbi::WireFormatLite::WriteUInt64ToArray(
                3, this_._internal_session_id(), target);
          }

          // uint64 id = 4;
          if (this_._internal_id() != 0) {
            target = stream->EnsureSpace(target);
            target = ::_pbi::WireFormatLite::WriteUInt64ToArray(
                4, this_._internal_id(), target);
          }

          // bool is_client = 5;
          if (this_._internal_is_client() != 0) {
            target = stream->EnsureSpace(target);
            target = ::_pbi::WireFormatLite::WriteBoolToArray(
                5, this_._internal_is_client(), target);
          }

          if (PROTOBUF_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
            target =
                ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
                    this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
          }
          // @@protoc_insertion_point(serialize_to_array_end:RouteMessageResponse)
          return target;
        }

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::size_t RouteMessageResponse::ByteSizeLong(const MessageLite& base) {
          const RouteMessageResponse& this_ = static_cast<const RouteMessageResponse&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::size_t RouteMessageResponse::ByteSizeLong() const {
          const RouteMessageResponse& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(message_byte_size_start:RouteMessageResponse)
          ::size_t total_size = 0;

          ::uint32_t cached_has_bits = 0;
          // Prevent compiler warnings about cached_has_bits being unused
          (void)cached_has_bits;

          ::_pbi::Prefetch5LinesFrom7Lines(&this_);
           {
            // repeated .RoutingNodeInfo route_nodes = 2;
            {
              total_size += 1UL * this_._internal_route_nodes_size();
              for (const auto& msg : this_._internal_route_nodes()) {
                total_size += ::google::protobuf::internal::WireFormatLite::MessageSize(msg);
              }
            }
          }
           {
            // bytes body = 1;
            if (!this_._internal_body().empty()) {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::BytesSize(
                                              this_._internal_body());
            }
            // uint64 session_id = 3;
            if (this_._internal_session_id() != 0) {
              total_size += ::_pbi::WireFormatLite::UInt64SizePlusOne(
                  this_._internal_session_id());
            }
            // uint64 id = 4;
            if (this_._internal_id() != 0) {
              total_size += ::_pbi::WireFormatLite::UInt64SizePlusOne(
                  this_._internal_id());
            }
            // bool is_client = 5;
            if (this_._internal_is_client() != 0) {
              total_size += 2;
            }
          }
          return this_.MaybeComputeUnknownFieldsSize(total_size,
                                                     &this_._impl_._cached_size_);
        }

void RouteMessageResponse::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<RouteMessageResponse*>(&to_msg);
  auto& from = static_cast<const RouteMessageResponse&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:RouteMessageResponse)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_internal_mutable_route_nodes()->MergeFrom(
      from._internal_route_nodes());
  if (!from._internal_body().empty()) {
    _this->_internal_set_body(from._internal_body());
  }
  if (from._internal_session_id() != 0) {
    _this->_impl_.session_id_ = from._impl_.session_id_;
  }
  if (from._internal_id() != 0) {
    _this->_impl_.id_ = from._impl_.id_;
  }
  if (from._internal_is_client() != 0) {
    _this->_impl_.is_client_ = from._impl_.is_client_;
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void RouteMessageResponse::CopyFrom(const RouteMessageResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:RouteMessageResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void RouteMessageResponse::InternalSwap(RouteMessageResponse* PROTOBUF_RESTRICT other) {
  using std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  _impl_.route_nodes_.InternalSwap(&other->_impl_.route_nodes_);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.body_, &other->_impl_.body_, arena);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(RouteMessageResponse, _impl_.is_client_)
      + sizeof(RouteMessageResponse::_impl_.is_client_)
      - PROTOBUF_FIELD_OFFSET(RouteMessageResponse, _impl_.session_id_)>(
          reinterpret_cast<char*>(&_impl_.session_id_),
          reinterpret_cast<char*>(&other->_impl_.session_id_));
}

::google::protobuf::Metadata RouteMessageResponse::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class RoutePlayerMessageRequest::_Internal {
 public:
  using HasBits =
      decltype(std::declval<RoutePlayerMessageRequest>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
      8 * PROTOBUF_FIELD_OFFSET(RoutePlayerMessageRequest, _impl_._has_bits_);
};

void RoutePlayerMessageRequest::clear_node_list() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.node_list_.Clear();
}
RoutePlayerMessageRequest::RoutePlayerMessageRequest(::google::protobuf::Arena* arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:RoutePlayerMessageRequest)
}
inline PROTOBUF_NDEBUG_INLINE RoutePlayerMessageRequest::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from, const ::RoutePlayerMessageRequest& from_msg)
      : _has_bits_{from._has_bits_},
        _cached_size_{0},
        node_list_{visibility, arena, from.node_list_},
        body_(arena, from.body_) {}

RoutePlayerMessageRequest::RoutePlayerMessageRequest(
    ::google::protobuf::Arena* arena,
    const RoutePlayerMessageRequest& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  RoutePlayerMessageRequest* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);
  ::uint32_t cached_has_bits = _impl_._has_bits_[0];
  _impl_.player_info_ = (cached_has_bits & 0x00000001u) ? ::google::protobuf::Message::CopyConstruct<::PlayerInfoExternal>(
                              arena, *from._impl_.player_info_)
                        : nullptr;

  // @@protoc_insertion_point(copy_constructor:RoutePlayerMessageRequest)
}
inline PROTOBUF_NDEBUG_INLINE RoutePlayerMessageRequest::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0},
        node_list_{visibility, arena},
        body_(arena) {}

inline void RoutePlayerMessageRequest::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  _impl_.player_info_ = {};
}
RoutePlayerMessageRequest::~RoutePlayerMessageRequest() {
  // @@protoc_insertion_point(destructor:RoutePlayerMessageRequest)
  SharedDtor(*this);
}
inline void RoutePlayerMessageRequest::SharedDtor(MessageLite& self) {
  RoutePlayerMessageRequest& this_ = static_cast<RoutePlayerMessageRequest&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  this_._impl_.body_.Destroy();
  delete this_._impl_.player_info_;
  this_._impl_.~Impl_();
}

inline void* RoutePlayerMessageRequest::PlacementNew_(const void*, void* mem,
                                        ::google::protobuf::Arena* arena) {
  return ::new (mem) RoutePlayerMessageRequest(arena);
}
constexpr auto RoutePlayerMessageRequest::InternalNewImpl_() {
  constexpr auto arena_bits = ::google::protobuf::internal::EncodePlacementArenaOffsets({
      PROTOBUF_FIELD_OFFSET(RoutePlayerMessageRequest, _impl_.node_list_) +
          decltype(RoutePlayerMessageRequest::_impl_.node_list_)::
              InternalGetArenaOffset(
                  ::google::protobuf::Message::internal_visibility()),
  });
  if (arena_bits.has_value()) {
    return ::google::protobuf::internal::MessageCreator::CopyInit(
        sizeof(RoutePlayerMessageRequest), alignof(RoutePlayerMessageRequest), *arena_bits);
  } else {
    return ::google::protobuf::internal::MessageCreator(&RoutePlayerMessageRequest::PlacementNew_,
                                 sizeof(RoutePlayerMessageRequest),
                                 alignof(RoutePlayerMessageRequest));
  }
}
PROTOBUF_CONSTINIT
PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::google::protobuf::internal::ClassDataFull RoutePlayerMessageRequest::_class_data_ = {
    ::google::protobuf::internal::ClassData{
        &_RoutePlayerMessageRequest_default_instance_._instance,
        &_table_.header,
        nullptr,  // OnDemandRegisterArenaDtor
        nullptr,  // IsInitialized
        &RoutePlayerMessageRequest::MergeImpl,
        ::google::protobuf::Message::GetNewImpl<RoutePlayerMessageRequest>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
        &RoutePlayerMessageRequest::SharedDtor,
        ::google::protobuf::Message::GetClearImpl<RoutePlayerMessageRequest>(), &RoutePlayerMessageRequest::ByteSizeLong,
            &RoutePlayerMessageRequest::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
        PROTOBUF_FIELD_OFFSET(RoutePlayerMessageRequest, _impl_._cached_size_),
        false,
    },
    &RoutePlayerMessageRequest::kDescriptorMethods,
    &descriptor_table_proto_2fcommon_2fcommon_5fmessage_2eproto,
    nullptr,  // tracker
};
const ::google::protobuf::internal::ClassData* RoutePlayerMessageRequest::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_class_data_.tc_table);
  return _class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<2, 3, 2, 0, 2> RoutePlayerMessageRequest::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(RoutePlayerMessageRequest, _impl_._has_bits_),
    0, // no _extensions_
    3, 24,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967288,  // skipmap
    offsetof(decltype(_table_), field_entries),
    3,  // num_field_entries
    2,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    _class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::RoutePlayerMessageRequest>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
    // bytes body = 1;
    {::_pbi::TcParser::FastBS1,
     {10, 63, 0, PROTOBUF_FIELD_OFFSET(RoutePlayerMessageRequest, _impl_.body_)}},
    // repeated .NodeInfo node_list = 2;
    {::_pbi::TcParser::FastMtR1,
     {18, 63, 0, PROTOBUF_FIELD_OFFSET(RoutePlayerMessageRequest, _impl_.node_list_)}},
    // .PlayerInfoExternal player_info = 3;
    {::_pbi::TcParser::FastMtS1,
     {26, 0, 1, PROTOBUF_FIELD_OFFSET(RoutePlayerMessageRequest, _impl_.player_info_)}},
  }}, {{
    65535, 65535
  }}, {{
    // bytes body = 1;
    {PROTOBUF_FIELD_OFFSET(RoutePlayerMessageRequest, _impl_.body_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kBytes | ::_fl::kRepAString)},
    // repeated .NodeInfo node_list = 2;
    {PROTOBUF_FIELD_OFFSET(RoutePlayerMessageRequest, _impl_.node_list_), -1, 0,
    (0 | ::_fl::kFcRepeated | ::_fl::kMessage | ::_fl::kTvTable)},
    // .PlayerInfoExternal player_info = 3;
    {PROTOBUF_FIELD_OFFSET(RoutePlayerMessageRequest, _impl_.player_info_), _Internal::kHasBitsOffset + 0, 1,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
  }}, {{
    {::_pbi::TcParser::GetTable<::NodeInfo>()},
    {::_pbi::TcParser::GetTable<::PlayerInfoExternal>()},
  }}, {{
  }},
};

PROTOBUF_NOINLINE void RoutePlayerMessageRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:RoutePlayerMessageRequest)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.node_list_.Clear();
  _impl_.body_.ClearToEmpty();
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    ABSL_DCHECK(_impl_.player_info_ != nullptr);
    _impl_.player_info_->Clear();
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::uint8_t* RoutePlayerMessageRequest::_InternalSerialize(
            const MessageLite& base, ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) {
          const RoutePlayerMessageRequest& this_ = static_cast<const RoutePlayerMessageRequest&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::uint8_t* RoutePlayerMessageRequest::_InternalSerialize(
            ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) const {
          const RoutePlayerMessageRequest& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(serialize_to_array_start:RoutePlayerMessageRequest)
          ::uint32_t cached_has_bits = 0;
          (void)cached_has_bits;

          // bytes body = 1;
          if (!this_._internal_body().empty()) {
            const std::string& _s = this_._internal_body();
            target = stream->WriteBytesMaybeAliased(1, _s, target);
          }

          // repeated .NodeInfo node_list = 2;
          for (unsigned i = 0, n = static_cast<unsigned>(
                                   this_._internal_node_list_size());
               i < n; i++) {
            const auto& repfield = this_._internal_node_list().Get(i);
            target =
                ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
                    2, repfield, repfield.GetCachedSize(),
                    target, stream);
          }

          cached_has_bits = this_._impl_._has_bits_[0];
          // .PlayerInfoExternal player_info = 3;
          if (cached_has_bits & 0x00000001u) {
            target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
                3, *this_._impl_.player_info_, this_._impl_.player_info_->GetCachedSize(), target,
                stream);
          }

          if (PROTOBUF_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
            target =
                ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
                    this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
          }
          // @@protoc_insertion_point(serialize_to_array_end:RoutePlayerMessageRequest)
          return target;
        }

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::size_t RoutePlayerMessageRequest::ByteSizeLong(const MessageLite& base) {
          const RoutePlayerMessageRequest& this_ = static_cast<const RoutePlayerMessageRequest&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::size_t RoutePlayerMessageRequest::ByteSizeLong() const {
          const RoutePlayerMessageRequest& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(message_byte_size_start:RoutePlayerMessageRequest)
          ::size_t total_size = 0;

          ::uint32_t cached_has_bits = 0;
          // Prevent compiler warnings about cached_has_bits being unused
          (void)cached_has_bits;

          ::_pbi::Prefetch5LinesFrom7Lines(&this_);
           {
            // repeated .NodeInfo node_list = 2;
            {
              total_size += 1UL * this_._internal_node_list_size();
              for (const auto& msg : this_._internal_node_list()) {
                total_size += ::google::protobuf::internal::WireFormatLite::MessageSize(msg);
              }
            }
          }
           {
            // bytes body = 1;
            if (!this_._internal_body().empty()) {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::BytesSize(
                                              this_._internal_body());
            }
          }
           {
            // .PlayerInfoExternal player_info = 3;
            cached_has_bits = this_._impl_._has_bits_[0];
            if (cached_has_bits & 0x00000001u) {
              total_size += 1 +
                            ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.player_info_);
            }
          }
          return this_.MaybeComputeUnknownFieldsSize(total_size,
                                                     &this_._impl_._cached_size_);
        }

void RoutePlayerMessageRequest::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<RoutePlayerMessageRequest*>(&to_msg);
  auto& from = static_cast<const RoutePlayerMessageRequest&>(from_msg);
  ::google::protobuf::Arena* arena = _this->GetArena();
  // @@protoc_insertion_point(class_specific_merge_from_start:RoutePlayerMessageRequest)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_internal_mutable_node_list()->MergeFrom(
      from._internal_node_list());
  if (!from._internal_body().empty()) {
    _this->_internal_set_body(from._internal_body());
  }
  cached_has_bits = from._impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    ABSL_DCHECK(from._impl_.player_info_ != nullptr);
    if (_this->_impl_.player_info_ == nullptr) {
      _this->_impl_.player_info_ =
          ::google::protobuf::Message::CopyConstruct<::PlayerInfoExternal>(arena, *from._impl_.player_info_);
    } else {
      _this->_impl_.player_info_->MergeFrom(*from._impl_.player_info_);
    }
  }
  _this->_impl_._has_bits_[0] |= cached_has_bits;
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void RoutePlayerMessageRequest::CopyFrom(const RoutePlayerMessageRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:RoutePlayerMessageRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void RoutePlayerMessageRequest::InternalSwap(RoutePlayerMessageRequest* PROTOBUF_RESTRICT other) {
  using std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  _impl_.node_list_.InternalSwap(&other->_impl_.node_list_);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.body_, &other->_impl_.body_, arena);
  swap(_impl_.player_info_, other->_impl_.player_info_);
}

::google::protobuf::Metadata RoutePlayerMessageRequest::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class RoutePlayerMessageResponse::_Internal {
 public:
  using HasBits =
      decltype(std::declval<RoutePlayerMessageResponse>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
      8 * PROTOBUF_FIELD_OFFSET(RoutePlayerMessageResponse, _impl_._has_bits_);
};

void RoutePlayerMessageResponse::clear_node_list() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.node_list_.Clear();
}
RoutePlayerMessageResponse::RoutePlayerMessageResponse(::google::protobuf::Arena* arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:RoutePlayerMessageResponse)
}
inline PROTOBUF_NDEBUG_INLINE RoutePlayerMessageResponse::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from, const ::RoutePlayerMessageResponse& from_msg)
      : _has_bits_{from._has_bits_},
        _cached_size_{0},
        node_list_{visibility, arena, from.node_list_},
        body_(arena, from.body_) {}

RoutePlayerMessageResponse::RoutePlayerMessageResponse(
    ::google::protobuf::Arena* arena,
    const RoutePlayerMessageResponse& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  RoutePlayerMessageResponse* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);
  ::uint32_t cached_has_bits = _impl_._has_bits_[0];
  _impl_.player_info_ = (cached_has_bits & 0x00000001u) ? ::google::protobuf::Message::CopyConstruct<::PlayerInfoExternal>(
                              arena, *from._impl_.player_info_)
                        : nullptr;

  // @@protoc_insertion_point(copy_constructor:RoutePlayerMessageResponse)
}
inline PROTOBUF_NDEBUG_INLINE RoutePlayerMessageResponse::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0},
        node_list_{visibility, arena},
        body_(arena) {}

inline void RoutePlayerMessageResponse::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  _impl_.player_info_ = {};
}
RoutePlayerMessageResponse::~RoutePlayerMessageResponse() {
  // @@protoc_insertion_point(destructor:RoutePlayerMessageResponse)
  SharedDtor(*this);
}
inline void RoutePlayerMessageResponse::SharedDtor(MessageLite& self) {
  RoutePlayerMessageResponse& this_ = static_cast<RoutePlayerMessageResponse&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  this_._impl_.body_.Destroy();
  delete this_._impl_.player_info_;
  this_._impl_.~Impl_();
}

inline void* RoutePlayerMessageResponse::PlacementNew_(const void*, void* mem,
                                        ::google::protobuf::Arena* arena) {
  return ::new (mem) RoutePlayerMessageResponse(arena);
}
constexpr auto RoutePlayerMessageResponse::InternalNewImpl_() {
  constexpr auto arena_bits = ::google::protobuf::internal::EncodePlacementArenaOffsets({
      PROTOBUF_FIELD_OFFSET(RoutePlayerMessageResponse, _impl_.node_list_) +
          decltype(RoutePlayerMessageResponse::_impl_.node_list_)::
              InternalGetArenaOffset(
                  ::google::protobuf::Message::internal_visibility()),
  });
  if (arena_bits.has_value()) {
    return ::google::protobuf::internal::MessageCreator::CopyInit(
        sizeof(RoutePlayerMessageResponse), alignof(RoutePlayerMessageResponse), *arena_bits);
  } else {
    return ::google::protobuf::internal::MessageCreator(&RoutePlayerMessageResponse::PlacementNew_,
                                 sizeof(RoutePlayerMessageResponse),
                                 alignof(RoutePlayerMessageResponse));
  }
}
PROTOBUF_CONSTINIT
PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::google::protobuf::internal::ClassDataFull RoutePlayerMessageResponse::_class_data_ = {
    ::google::protobuf::internal::ClassData{
        &_RoutePlayerMessageResponse_default_instance_._instance,
        &_table_.header,
        nullptr,  // OnDemandRegisterArenaDtor
        nullptr,  // IsInitialized
        &RoutePlayerMessageResponse::MergeImpl,
        ::google::protobuf::Message::GetNewImpl<RoutePlayerMessageResponse>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
        &RoutePlayerMessageResponse::SharedDtor,
        ::google::protobuf::Message::GetClearImpl<RoutePlayerMessageResponse>(), &RoutePlayerMessageResponse::ByteSizeLong,
            &RoutePlayerMessageResponse::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
        PROTOBUF_FIELD_OFFSET(RoutePlayerMessageResponse, _impl_._cached_size_),
        false,
    },
    &RoutePlayerMessageResponse::kDescriptorMethods,
    &descriptor_table_proto_2fcommon_2fcommon_5fmessage_2eproto,
    nullptr,  // tracker
};
const ::google::protobuf::internal::ClassData* RoutePlayerMessageResponse::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_class_data_.tc_table);
  return _class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<2, 3, 2, 0, 2> RoutePlayerMessageResponse::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(RoutePlayerMessageResponse, _impl_._has_bits_),
    0, // no _extensions_
    3, 24,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967288,  // skipmap
    offsetof(decltype(_table_), field_entries),
    3,  // num_field_entries
    2,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    _class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::RoutePlayerMessageResponse>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
    // bytes body = 1;
    {::_pbi::TcParser::FastBS1,
     {10, 63, 0, PROTOBUF_FIELD_OFFSET(RoutePlayerMessageResponse, _impl_.body_)}},
    // repeated .NodeInfo node_list = 2;
    {::_pbi::TcParser::FastMtR1,
     {18, 63, 0, PROTOBUF_FIELD_OFFSET(RoutePlayerMessageResponse, _impl_.node_list_)}},
    // .PlayerInfoExternal player_info = 3;
    {::_pbi::TcParser::FastMtS1,
     {26, 0, 1, PROTOBUF_FIELD_OFFSET(RoutePlayerMessageResponse, _impl_.player_info_)}},
  }}, {{
    65535, 65535
  }}, {{
    // bytes body = 1;
    {PROTOBUF_FIELD_OFFSET(RoutePlayerMessageResponse, _impl_.body_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kBytes | ::_fl::kRepAString)},
    // repeated .NodeInfo node_list = 2;
    {PROTOBUF_FIELD_OFFSET(RoutePlayerMessageResponse, _impl_.node_list_), -1, 0,
    (0 | ::_fl::kFcRepeated | ::_fl::kMessage | ::_fl::kTvTable)},
    // .PlayerInfoExternal player_info = 3;
    {PROTOBUF_FIELD_OFFSET(RoutePlayerMessageResponse, _impl_.player_info_), _Internal::kHasBitsOffset + 0, 1,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
  }}, {{
    {::_pbi::TcParser::GetTable<::NodeInfo>()},
    {::_pbi::TcParser::GetTable<::PlayerInfoExternal>()},
  }}, {{
  }},
};

PROTOBUF_NOINLINE void RoutePlayerMessageResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:RoutePlayerMessageResponse)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.node_list_.Clear();
  _impl_.body_.ClearToEmpty();
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    ABSL_DCHECK(_impl_.player_info_ != nullptr);
    _impl_.player_info_->Clear();
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::uint8_t* RoutePlayerMessageResponse::_InternalSerialize(
            const MessageLite& base, ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) {
          const RoutePlayerMessageResponse& this_ = static_cast<const RoutePlayerMessageResponse&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::uint8_t* RoutePlayerMessageResponse::_InternalSerialize(
            ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) const {
          const RoutePlayerMessageResponse& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(serialize_to_array_start:RoutePlayerMessageResponse)
          ::uint32_t cached_has_bits = 0;
          (void)cached_has_bits;

          // bytes body = 1;
          if (!this_._internal_body().empty()) {
            const std::string& _s = this_._internal_body();
            target = stream->WriteBytesMaybeAliased(1, _s, target);
          }

          // repeated .NodeInfo node_list = 2;
          for (unsigned i = 0, n = static_cast<unsigned>(
                                   this_._internal_node_list_size());
               i < n; i++) {
            const auto& repfield = this_._internal_node_list().Get(i);
            target =
                ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
                    2, repfield, repfield.GetCachedSize(),
                    target, stream);
          }

          cached_has_bits = this_._impl_._has_bits_[0];
          // .PlayerInfoExternal player_info = 3;
          if (cached_has_bits & 0x00000001u) {
            target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
                3, *this_._impl_.player_info_, this_._impl_.player_info_->GetCachedSize(), target,
                stream);
          }

          if (PROTOBUF_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
            target =
                ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
                    this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
          }
          // @@protoc_insertion_point(serialize_to_array_end:RoutePlayerMessageResponse)
          return target;
        }

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::size_t RoutePlayerMessageResponse::ByteSizeLong(const MessageLite& base) {
          const RoutePlayerMessageResponse& this_ = static_cast<const RoutePlayerMessageResponse&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::size_t RoutePlayerMessageResponse::ByteSizeLong() const {
          const RoutePlayerMessageResponse& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(message_byte_size_start:RoutePlayerMessageResponse)
          ::size_t total_size = 0;

          ::uint32_t cached_has_bits = 0;
          // Prevent compiler warnings about cached_has_bits being unused
          (void)cached_has_bits;

          ::_pbi::Prefetch5LinesFrom7Lines(&this_);
           {
            // repeated .NodeInfo node_list = 2;
            {
              total_size += 1UL * this_._internal_node_list_size();
              for (const auto& msg : this_._internal_node_list()) {
                total_size += ::google::protobuf::internal::WireFormatLite::MessageSize(msg);
              }
            }
          }
           {
            // bytes body = 1;
            if (!this_._internal_body().empty()) {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::BytesSize(
                                              this_._internal_body());
            }
          }
           {
            // .PlayerInfoExternal player_info = 3;
            cached_has_bits = this_._impl_._has_bits_[0];
            if (cached_has_bits & 0x00000001u) {
              total_size += 1 +
                            ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.player_info_);
            }
          }
          return this_.MaybeComputeUnknownFieldsSize(total_size,
                                                     &this_._impl_._cached_size_);
        }

void RoutePlayerMessageResponse::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<RoutePlayerMessageResponse*>(&to_msg);
  auto& from = static_cast<const RoutePlayerMessageResponse&>(from_msg);
  ::google::protobuf::Arena* arena = _this->GetArena();
  // @@protoc_insertion_point(class_specific_merge_from_start:RoutePlayerMessageResponse)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_internal_mutable_node_list()->MergeFrom(
      from._internal_node_list());
  if (!from._internal_body().empty()) {
    _this->_internal_set_body(from._internal_body());
  }
  cached_has_bits = from._impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    ABSL_DCHECK(from._impl_.player_info_ != nullptr);
    if (_this->_impl_.player_info_ == nullptr) {
      _this->_impl_.player_info_ =
          ::google::protobuf::Message::CopyConstruct<::PlayerInfoExternal>(arena, *from._impl_.player_info_);
    } else {
      _this->_impl_.player_info_->MergeFrom(*from._impl_.player_info_);
    }
  }
  _this->_impl_._has_bits_[0] |= cached_has_bits;
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void RoutePlayerMessageResponse::CopyFrom(const RoutePlayerMessageResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:RoutePlayerMessageResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void RoutePlayerMessageResponse::InternalSwap(RoutePlayerMessageResponse* PROTOBUF_RESTRICT other) {
  using std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  _impl_.node_list_.InternalSwap(&other->_impl_.node_list_);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.body_, &other->_impl_.body_, arena);
  swap(_impl_.player_info_, other->_impl_.player_info_);
}

::google::protobuf::Metadata RoutePlayerMessageResponse::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class RegisterGameNodeRequest::_Internal {
 public:
  using HasBits =
      decltype(std::declval<RegisterGameNodeRequest>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
      8 * PROTOBUF_FIELD_OFFSET(RegisterGameNodeRequest, _impl_._has_bits_);
};

void RegisterGameNodeRequest::clear_rpc_client() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.rpc_client_ != nullptr) _impl_.rpc_client_->Clear();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
void RegisterGameNodeRequest::clear_rpc_server() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.rpc_server_ != nullptr) _impl_.rpc_server_->Clear();
  _impl_._has_bits_[0] &= ~0x00000002u;
}
RegisterGameNodeRequest::RegisterGameNodeRequest(::google::protobuf::Arena* arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:RegisterGameNodeRequest)
}
inline PROTOBUF_NDEBUG_INLINE RegisterGameNodeRequest::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from, const ::RegisterGameNodeRequest& from_msg)
      : _has_bits_{from._has_bits_},
        _cached_size_{0} {}

RegisterGameNodeRequest::RegisterGameNodeRequest(
    ::google::protobuf::Arena* arena,
    const RegisterGameNodeRequest& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  RegisterGameNodeRequest* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);
  ::uint32_t cached_has_bits = _impl_._has_bits_[0];
  _impl_.rpc_client_ = (cached_has_bits & 0x00000001u) ? ::google::protobuf::Message::CopyConstruct<::NetworkAddress>(
                              arena, *from._impl_.rpc_client_)
                        : nullptr;
  _impl_.rpc_server_ = (cached_has_bits & 0x00000002u) ? ::google::protobuf::Message::CopyConstruct<::NetworkAddress>(
                              arena, *from._impl_.rpc_server_)
                        : nullptr;
  ::memcpy(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, scene_node_id_),
           reinterpret_cast<const char *>(&from._impl_) +
               offsetof(Impl_, scene_node_id_),
           offsetof(Impl_, scene_node_type_) -
               offsetof(Impl_, scene_node_id_) +
               sizeof(Impl_::scene_node_type_));

  // @@protoc_insertion_point(copy_constructor:RegisterGameNodeRequest)
}
inline PROTOBUF_NDEBUG_INLINE RegisterGameNodeRequest::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0} {}

inline void RegisterGameNodeRequest::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, rpc_client_),
           0,
           offsetof(Impl_, scene_node_type_) -
               offsetof(Impl_, rpc_client_) +
               sizeof(Impl_::scene_node_type_));
}
RegisterGameNodeRequest::~RegisterGameNodeRequest() {
  // @@protoc_insertion_point(destructor:RegisterGameNodeRequest)
  SharedDtor(*this);
}
inline void RegisterGameNodeRequest::SharedDtor(MessageLite& self) {
  RegisterGameNodeRequest& this_ = static_cast<RegisterGameNodeRequest&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  delete this_._impl_.rpc_client_;
  delete this_._impl_.rpc_server_;
  this_._impl_.~Impl_();
}

inline void* RegisterGameNodeRequest::PlacementNew_(const void*, void* mem,
                                        ::google::protobuf::Arena* arena) {
  return ::new (mem) RegisterGameNodeRequest(arena);
}
constexpr auto RegisterGameNodeRequest::InternalNewImpl_() {
  return ::google::protobuf::internal::MessageCreator::ZeroInit(sizeof(RegisterGameNodeRequest),
                                            alignof(RegisterGameNodeRequest));
}
PROTOBUF_CONSTINIT
PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::google::protobuf::internal::ClassDataFull RegisterGameNodeRequest::_class_data_ = {
    ::google::protobuf::internal::ClassData{
        &_RegisterGameNodeRequest_default_instance_._instance,
        &_table_.header,
        nullptr,  // OnDemandRegisterArenaDtor
        nullptr,  // IsInitialized
        &RegisterGameNodeRequest::MergeImpl,
        ::google::protobuf::Message::GetNewImpl<RegisterGameNodeRequest>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
        &RegisterGameNodeRequest::SharedDtor,
        ::google::protobuf::Message::GetClearImpl<RegisterGameNodeRequest>(), &RegisterGameNodeRequest::ByteSizeLong,
            &RegisterGameNodeRequest::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
        PROTOBUF_FIELD_OFFSET(RegisterGameNodeRequest, _impl_._cached_size_),
        false,
    },
    &RegisterGameNodeRequest::kDescriptorMethods,
    &descriptor_table_proto_2fcommon_2fcommon_5fmessage_2eproto,
    nullptr,  // tracker
};
const ::google::protobuf::internal::ClassData* RegisterGameNodeRequest::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_class_data_.tc_table);
  return _class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<3, 5, 2, 0, 2> RegisterGameNodeRequest::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(RegisterGameNodeRequest, _impl_._has_bits_),
    0, // no _extensions_
    5, 56,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967264,  // skipmap
    offsetof(decltype(_table_), field_entries),
    5,  // num_field_entries
    2,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    _class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::RegisterGameNodeRequest>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
    // .NetworkAddress rpc_client = 1;
    {::_pbi::TcParser::FastMtS1,
     {10, 0, 0, PROTOBUF_FIELD_OFFSET(RegisterGameNodeRequest, _impl_.rpc_client_)}},
    // .NetworkAddress rpc_server = 2;
    {::_pbi::TcParser::FastMtS1,
     {18, 1, 1, PROTOBUF_FIELD_OFFSET(RegisterGameNodeRequest, _impl_.rpc_server_)}},
    // uint32 scene_node_id = 3;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(RegisterGameNodeRequest, _impl_.scene_node_id_), 63>(),
     {24, 63, 0, PROTOBUF_FIELD_OFFSET(RegisterGameNodeRequest, _impl_.scene_node_id_)}},
    // uint32 server_type = 4;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(RegisterGameNodeRequest, _impl_.server_type_), 63>(),
     {32, 63, 0, PROTOBUF_FIELD_OFFSET(RegisterGameNodeRequest, _impl_.server_type_)}},
    // uint32 scene_node_type = 5;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(RegisterGameNodeRequest, _impl_.scene_node_type_), 63>(),
     {40, 63, 0, PROTOBUF_FIELD_OFFSET(RegisterGameNodeRequest, _impl_.scene_node_type_)}},
    {::_pbi::TcParser::MiniParse, {}},
    {::_pbi::TcParser::MiniParse, {}},
  }}, {{
    65535, 65535
  }}, {{
    // .NetworkAddress rpc_client = 1;
    {PROTOBUF_FIELD_OFFSET(RegisterGameNodeRequest, _impl_.rpc_client_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
    // .NetworkAddress rpc_server = 2;
    {PROTOBUF_FIELD_OFFSET(RegisterGameNodeRequest, _impl_.rpc_server_), _Internal::kHasBitsOffset + 1, 1,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
    // uint32 scene_node_id = 3;
    {PROTOBUF_FIELD_OFFSET(RegisterGameNodeRequest, _impl_.scene_node_id_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUInt32)},
    // uint32 server_type = 4;
    {PROTOBUF_FIELD_OFFSET(RegisterGameNodeRequest, _impl_.server_type_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUInt32)},
    // uint32 scene_node_type = 5;
    {PROTOBUF_FIELD_OFFSET(RegisterGameNodeRequest, _impl_.scene_node_type_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUInt32)},
  }}, {{
    {::_pbi::TcParser::GetTable<::NetworkAddress>()},
    {::_pbi::TcParser::GetTable<::NetworkAddress>()},
  }}, {{
  }},
};

PROTOBUF_NOINLINE void RegisterGameNodeRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:RegisterGameNodeRequest)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    if (cached_has_bits & 0x00000001u) {
      ABSL_DCHECK(_impl_.rpc_client_ != nullptr);
      _impl_.rpc_client_->Clear();
    }
    if (cached_has_bits & 0x00000002u) {
      ABSL_DCHECK(_impl_.rpc_server_ != nullptr);
      _impl_.rpc_server_->Clear();
    }
  }
  ::memset(&_impl_.scene_node_id_, 0, static_cast<::size_t>(
      reinterpret_cast<char*>(&_impl_.scene_node_type_) -
      reinterpret_cast<char*>(&_impl_.scene_node_id_)) + sizeof(_impl_.scene_node_type_));
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::uint8_t* RegisterGameNodeRequest::_InternalSerialize(
            const MessageLite& base, ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) {
          const RegisterGameNodeRequest& this_ = static_cast<const RegisterGameNodeRequest&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::uint8_t* RegisterGameNodeRequest::_InternalSerialize(
            ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) const {
          const RegisterGameNodeRequest& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(serialize_to_array_start:RegisterGameNodeRequest)
          ::uint32_t cached_has_bits = 0;
          (void)cached_has_bits;

          cached_has_bits = this_._impl_._has_bits_[0];
          // .NetworkAddress rpc_client = 1;
          if (cached_has_bits & 0x00000001u) {
            target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
                1, *this_._impl_.rpc_client_, this_._impl_.rpc_client_->GetCachedSize(), target,
                stream);
          }

          // .NetworkAddress rpc_server = 2;
          if (cached_has_bits & 0x00000002u) {
            target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
                2, *this_._impl_.rpc_server_, this_._impl_.rpc_server_->GetCachedSize(), target,
                stream);
          }

          // uint32 scene_node_id = 3;
          if (this_._internal_scene_node_id() != 0) {
            target = stream->EnsureSpace(target);
            target = ::_pbi::WireFormatLite::WriteUInt32ToArray(
                3, this_._internal_scene_node_id(), target);
          }

          // uint32 server_type = 4;
          if (this_._internal_server_type() != 0) {
            target = stream->EnsureSpace(target);
            target = ::_pbi::WireFormatLite::WriteUInt32ToArray(
                4, this_._internal_server_type(), target);
          }

          // uint32 scene_node_type = 5;
          if (this_._internal_scene_node_type() != 0) {
            target = stream->EnsureSpace(target);
            target = ::_pbi::WireFormatLite::WriteUInt32ToArray(
                5, this_._internal_scene_node_type(), target);
          }

          if (PROTOBUF_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
            target =
                ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
                    this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
          }
          // @@protoc_insertion_point(serialize_to_array_end:RegisterGameNodeRequest)
          return target;
        }

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::size_t RegisterGameNodeRequest::ByteSizeLong(const MessageLite& base) {
          const RegisterGameNodeRequest& this_ = static_cast<const RegisterGameNodeRequest&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::size_t RegisterGameNodeRequest::ByteSizeLong() const {
          const RegisterGameNodeRequest& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(message_byte_size_start:RegisterGameNodeRequest)
          ::size_t total_size = 0;

          ::uint32_t cached_has_bits = 0;
          // Prevent compiler warnings about cached_has_bits being unused
          (void)cached_has_bits;

          ::_pbi::Prefetch5LinesFrom7Lines(&this_);
          cached_has_bits = this_._impl_._has_bits_[0];
          if (cached_has_bits & 0x00000003u) {
            // .NetworkAddress rpc_client = 1;
            if (cached_has_bits & 0x00000001u) {
              total_size += 1 +
                            ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.rpc_client_);
            }
            // .NetworkAddress rpc_server = 2;
            if (cached_has_bits & 0x00000002u) {
              total_size += 1 +
                            ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.rpc_server_);
            }
          }
           {
            // uint32 scene_node_id = 3;
            if (this_._internal_scene_node_id() != 0) {
              total_size += ::_pbi::WireFormatLite::UInt32SizePlusOne(
                  this_._internal_scene_node_id());
            }
            // uint32 server_type = 4;
            if (this_._internal_server_type() != 0) {
              total_size += ::_pbi::WireFormatLite::UInt32SizePlusOne(
                  this_._internal_server_type());
            }
            // uint32 scene_node_type = 5;
            if (this_._internal_scene_node_type() != 0) {
              total_size += ::_pbi::WireFormatLite::UInt32SizePlusOne(
                  this_._internal_scene_node_type());
            }
          }
          return this_.MaybeComputeUnknownFieldsSize(total_size,
                                                     &this_._impl_._cached_size_);
        }

void RegisterGameNodeRequest::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<RegisterGameNodeRequest*>(&to_msg);
  auto& from = static_cast<const RegisterGameNodeRequest&>(from_msg);
  ::google::protobuf::Arena* arena = _this->GetArena();
  // @@protoc_insertion_point(class_specific_merge_from_start:RegisterGameNodeRequest)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._impl_._has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    if (cached_has_bits & 0x00000001u) {
      ABSL_DCHECK(from._impl_.rpc_client_ != nullptr);
      if (_this->_impl_.rpc_client_ == nullptr) {
        _this->_impl_.rpc_client_ =
            ::google::protobuf::Message::CopyConstruct<::NetworkAddress>(arena, *from._impl_.rpc_client_);
      } else {
        _this->_impl_.rpc_client_->MergeFrom(*from._impl_.rpc_client_);
      }
    }
    if (cached_has_bits & 0x00000002u) {
      ABSL_DCHECK(from._impl_.rpc_server_ != nullptr);
      if (_this->_impl_.rpc_server_ == nullptr) {
        _this->_impl_.rpc_server_ =
            ::google::protobuf::Message::CopyConstruct<::NetworkAddress>(arena, *from._impl_.rpc_server_);
      } else {
        _this->_impl_.rpc_server_->MergeFrom(*from._impl_.rpc_server_);
      }
    }
  }
  if (from._internal_scene_node_id() != 0) {
    _this->_impl_.scene_node_id_ = from._impl_.scene_node_id_;
  }
  if (from._internal_server_type() != 0) {
    _this->_impl_.server_type_ = from._impl_.server_type_;
  }
  if (from._internal_scene_node_type() != 0) {
    _this->_impl_.scene_node_type_ = from._impl_.scene_node_type_;
  }
  _this->_impl_._has_bits_[0] |= cached_has_bits;
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void RegisterGameNodeRequest::CopyFrom(const RegisterGameNodeRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:RegisterGameNodeRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void RegisterGameNodeRequest::InternalSwap(RegisterGameNodeRequest* PROTOBUF_RESTRICT other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(RegisterGameNodeRequest, _impl_.scene_node_type_)
      + sizeof(RegisterGameNodeRequest::_impl_.scene_node_type_)
      - PROTOBUF_FIELD_OFFSET(RegisterGameNodeRequest, _impl_.rpc_client_)>(
          reinterpret_cast<char*>(&_impl_.rpc_client_),
          reinterpret_cast<char*>(&other->_impl_.rpc_client_));
}

::google::protobuf::Metadata RegisterGameNodeRequest::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class RegisterGateNodeRequest::_Internal {
 public:
  using HasBits =
      decltype(std::declval<RegisterGateNodeRequest>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
      8 * PROTOBUF_FIELD_OFFSET(RegisterGateNodeRequest, _impl_._has_bits_);
};

void RegisterGateNodeRequest::clear_rpc_client() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.rpc_client_ != nullptr) _impl_.rpc_client_->Clear();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
RegisterGateNodeRequest::RegisterGateNodeRequest(::google::protobuf::Arena* arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:RegisterGateNodeRequest)
}
inline PROTOBUF_NDEBUG_INLINE RegisterGateNodeRequest::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from, const ::RegisterGateNodeRequest& from_msg)
      : _has_bits_{from._has_bits_},
        _cached_size_{0} {}

RegisterGateNodeRequest::RegisterGateNodeRequest(
    ::google::protobuf::Arena* arena,
    const RegisterGateNodeRequest& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  RegisterGateNodeRequest* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);
  ::uint32_t cached_has_bits = _impl_._has_bits_[0];
  _impl_.rpc_client_ = (cached_has_bits & 0x00000001u) ? ::google::protobuf::Message::CopyConstruct<::NetworkAddress>(
                              arena, *from._impl_.rpc_client_)
                        : nullptr;
  _impl_.gate_node_id_ = from._impl_.gate_node_id_;

  // @@protoc_insertion_point(copy_constructor:RegisterGateNodeRequest)
}
inline PROTOBUF_NDEBUG_INLINE RegisterGateNodeRequest::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0} {}

inline void RegisterGateNodeRequest::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, rpc_client_),
           0,
           offsetof(Impl_, gate_node_id_) -
               offsetof(Impl_, rpc_client_) +
               sizeof(Impl_::gate_node_id_));
}
RegisterGateNodeRequest::~RegisterGateNodeRequest() {
  // @@protoc_insertion_point(destructor:RegisterGateNodeRequest)
  SharedDtor(*this);
}
inline void RegisterGateNodeRequest::SharedDtor(MessageLite& self) {
  RegisterGateNodeRequest& this_ = static_cast<RegisterGateNodeRequest&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  delete this_._impl_.rpc_client_;
  this_._impl_.~Impl_();
}

inline void* RegisterGateNodeRequest::PlacementNew_(const void*, void* mem,
                                        ::google::protobuf::Arena* arena) {
  return ::new (mem) RegisterGateNodeRequest(arena);
}
constexpr auto RegisterGateNodeRequest::InternalNewImpl_() {
  return ::google::protobuf::internal::MessageCreator::ZeroInit(sizeof(RegisterGateNodeRequest),
                                            alignof(RegisterGateNodeRequest));
}
PROTOBUF_CONSTINIT
PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::google::protobuf::internal::ClassDataFull RegisterGateNodeRequest::_class_data_ = {
    ::google::protobuf::internal::ClassData{
        &_RegisterGateNodeRequest_default_instance_._instance,
        &_table_.header,
        nullptr,  // OnDemandRegisterArenaDtor
        nullptr,  // IsInitialized
        &RegisterGateNodeRequest::MergeImpl,
        ::google::protobuf::Message::GetNewImpl<RegisterGateNodeRequest>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
        &RegisterGateNodeRequest::SharedDtor,
        ::google::protobuf::Message::GetClearImpl<RegisterGateNodeRequest>(), &RegisterGateNodeRequest::ByteSizeLong,
            &RegisterGateNodeRequest::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
        PROTOBUF_FIELD_OFFSET(RegisterGateNodeRequest, _impl_._cached_size_),
        false,
    },
    &RegisterGateNodeRequest::kDescriptorMethods,
    &descriptor_table_proto_2fcommon_2fcommon_5fmessage_2eproto,
    nullptr,  // tracker
};
const ::google::protobuf::internal::ClassData* RegisterGateNodeRequest::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_class_data_.tc_table);
  return _class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<1, 2, 1, 0, 2> RegisterGateNodeRequest::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(RegisterGateNodeRequest, _impl_._has_bits_),
    0, // no _extensions_
    2, 8,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967292,  // skipmap
    offsetof(decltype(_table_), field_entries),
    2,  // num_field_entries
    1,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    _class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::RegisterGateNodeRequest>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // uint32 gate_node_id = 2;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(RegisterGateNodeRequest, _impl_.gate_node_id_), 63>(),
     {16, 63, 0, PROTOBUF_FIELD_OFFSET(RegisterGateNodeRequest, _impl_.gate_node_id_)}},
    // .NetworkAddress rpc_client = 1;
    {::_pbi::TcParser::FastMtS1,
     {10, 0, 0, PROTOBUF_FIELD_OFFSET(RegisterGateNodeRequest, _impl_.rpc_client_)}},
  }}, {{
    65535, 65535
  }}, {{
    // .NetworkAddress rpc_client = 1;
    {PROTOBUF_FIELD_OFFSET(RegisterGateNodeRequest, _impl_.rpc_client_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
    // uint32 gate_node_id = 2;
    {PROTOBUF_FIELD_OFFSET(RegisterGateNodeRequest, _impl_.gate_node_id_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUInt32)},
  }}, {{
    {::_pbi::TcParser::GetTable<::NetworkAddress>()},
  }}, {{
  }},
};

PROTOBUF_NOINLINE void RegisterGateNodeRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:RegisterGateNodeRequest)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    ABSL_DCHECK(_impl_.rpc_client_ != nullptr);
    _impl_.rpc_client_->Clear();
  }
  _impl_.gate_node_id_ = 0u;
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::uint8_t* RegisterGateNodeRequest::_InternalSerialize(
            const MessageLite& base, ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) {
          const RegisterGateNodeRequest& this_ = static_cast<const RegisterGateNodeRequest&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::uint8_t* RegisterGateNodeRequest::_InternalSerialize(
            ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) const {
          const RegisterGateNodeRequest& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(serialize_to_array_start:RegisterGateNodeRequest)
          ::uint32_t cached_has_bits = 0;
          (void)cached_has_bits;

          cached_has_bits = this_._impl_._has_bits_[0];
          // .NetworkAddress rpc_client = 1;
          if (cached_has_bits & 0x00000001u) {
            target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
                1, *this_._impl_.rpc_client_, this_._impl_.rpc_client_->GetCachedSize(), target,
                stream);
          }

          // uint32 gate_node_id = 2;
          if (this_._internal_gate_node_id() != 0) {
            target = stream->EnsureSpace(target);
            target = ::_pbi::WireFormatLite::WriteUInt32ToArray(
                2, this_._internal_gate_node_id(), target);
          }

          if (PROTOBUF_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
            target =
                ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
                    this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
          }
          // @@protoc_insertion_point(serialize_to_array_end:RegisterGateNodeRequest)
          return target;
        }

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::size_t RegisterGateNodeRequest::ByteSizeLong(const MessageLite& base) {
          const RegisterGateNodeRequest& this_ = static_cast<const RegisterGateNodeRequest&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::size_t RegisterGateNodeRequest::ByteSizeLong() const {
          const RegisterGateNodeRequest& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(message_byte_size_start:RegisterGateNodeRequest)
          ::size_t total_size = 0;

          ::uint32_t cached_has_bits = 0;
          // Prevent compiler warnings about cached_has_bits being unused
          (void)cached_has_bits;

          ::_pbi::Prefetch5LinesFrom7Lines(&this_);
           {
            // .NetworkAddress rpc_client = 1;
            cached_has_bits = this_._impl_._has_bits_[0];
            if (cached_has_bits & 0x00000001u) {
              total_size += 1 +
                            ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.rpc_client_);
            }
          }
           {
            // uint32 gate_node_id = 2;
            if (this_._internal_gate_node_id() != 0) {
              total_size += ::_pbi::WireFormatLite::UInt32SizePlusOne(
                  this_._internal_gate_node_id());
            }
          }
          return this_.MaybeComputeUnknownFieldsSize(total_size,
                                                     &this_._impl_._cached_size_);
        }

void RegisterGateNodeRequest::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<RegisterGateNodeRequest*>(&to_msg);
  auto& from = static_cast<const RegisterGateNodeRequest&>(from_msg);
  ::google::protobuf::Arena* arena = _this->GetArena();
  // @@protoc_insertion_point(class_specific_merge_from_start:RegisterGateNodeRequest)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    ABSL_DCHECK(from._impl_.rpc_client_ != nullptr);
    if (_this->_impl_.rpc_client_ == nullptr) {
      _this->_impl_.rpc_client_ =
          ::google::protobuf::Message::CopyConstruct<::NetworkAddress>(arena, *from._impl_.rpc_client_);
    } else {
      _this->_impl_.rpc_client_->MergeFrom(*from._impl_.rpc_client_);
    }
  }
  if (from._internal_gate_node_id() != 0) {
    _this->_impl_.gate_node_id_ = from._impl_.gate_node_id_;
  }
  _this->_impl_._has_bits_[0] |= cached_has_bits;
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void RegisterGateNodeRequest::CopyFrom(const RegisterGateNodeRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:RegisterGateNodeRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void RegisterGateNodeRequest::InternalSwap(RegisterGateNodeRequest* PROTOBUF_RESTRICT other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(RegisterGateNodeRequest, _impl_.gate_node_id_)
      + sizeof(RegisterGateNodeRequest::_impl_.gate_node_id_)
      - PROTOBUF_FIELD_OFFSET(RegisterGateNodeRequest, _impl_.rpc_client_)>(
          reinterpret_cast<char*>(&_impl_.rpc_client_),
          reinterpret_cast<char*>(&other->_impl_.rpc_client_));
}

::google::protobuf::Metadata RegisterGateNodeRequest::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class UnregisterGameNodeRequest::_Internal {
 public:
};

UnregisterGameNodeRequest::UnregisterGameNodeRequest(::google::protobuf::Arena* arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:UnregisterGameNodeRequest)
}
UnregisterGameNodeRequest::UnregisterGameNodeRequest(
    ::google::protobuf::Arena* arena, const UnregisterGameNodeRequest& from)
    : UnregisterGameNodeRequest(arena) {
  MergeFrom(from);
}
inline PROTOBUF_NDEBUG_INLINE UnregisterGameNodeRequest::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0} {}

inline void UnregisterGameNodeRequest::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  _impl_.scene_node_id_ = {};
}
UnregisterGameNodeRequest::~UnregisterGameNodeRequest() {
  // @@protoc_insertion_point(destructor:UnregisterGameNodeRequest)
  SharedDtor(*this);
}
inline void UnregisterGameNodeRequest::SharedDtor(MessageLite& self) {
  UnregisterGameNodeRequest& this_ = static_cast<UnregisterGameNodeRequest&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  this_._impl_.~Impl_();
}

inline void* UnregisterGameNodeRequest::PlacementNew_(const void*, void* mem,
                                        ::google::protobuf::Arena* arena) {
  return ::new (mem) UnregisterGameNodeRequest(arena);
}
constexpr auto UnregisterGameNodeRequest::InternalNewImpl_() {
  return ::google::protobuf::internal::MessageCreator::ZeroInit(sizeof(UnregisterGameNodeRequest),
                                            alignof(UnregisterGameNodeRequest));
}
PROTOBUF_CONSTINIT
PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::google::protobuf::internal::ClassDataFull UnregisterGameNodeRequest::_class_data_ = {
    ::google::protobuf::internal::ClassData{
        &_UnregisterGameNodeRequest_default_instance_._instance,
        &_table_.header,
        nullptr,  // OnDemandRegisterArenaDtor
        nullptr,  // IsInitialized
        &UnregisterGameNodeRequest::MergeImpl,
        ::google::protobuf::Message::GetNewImpl<UnregisterGameNodeRequest>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
        &UnregisterGameNodeRequest::SharedDtor,
        ::google::protobuf::Message::GetClearImpl<UnregisterGameNodeRequest>(), &UnregisterGameNodeRequest::ByteSizeLong,
            &UnregisterGameNodeRequest::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
        PROTOBUF_FIELD_OFFSET(UnregisterGameNodeRequest, _impl_._cached_size_),
        false,
    },
    &UnregisterGameNodeRequest::kDescriptorMethods,
    &descriptor_table_proto_2fcommon_2fcommon_5fmessage_2eproto,
    nullptr,  // tracker
};
const ::google::protobuf::internal::ClassData* UnregisterGameNodeRequest::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_class_data_.tc_table);
  return _class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<0, 1, 0, 0, 2> UnregisterGameNodeRequest::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    1, 0,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967294,  // skipmap
    offsetof(decltype(_table_), field_entries),
    1,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    _class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::UnregisterGameNodeRequest>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // uint32 scene_node_id = 1;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(UnregisterGameNodeRequest, _impl_.scene_node_id_), 63>(),
     {8, 63, 0, PROTOBUF_FIELD_OFFSET(UnregisterGameNodeRequest, _impl_.scene_node_id_)}},
  }}, {{
    65535, 65535
  }}, {{
    // uint32 scene_node_id = 1;
    {PROTOBUF_FIELD_OFFSET(UnregisterGameNodeRequest, _impl_.scene_node_id_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUInt32)},
  }},
  // no aux_entries
  {{
  }},
};

PROTOBUF_NOINLINE void UnregisterGameNodeRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:UnregisterGameNodeRequest)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.scene_node_id_ = 0u;
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::uint8_t* UnregisterGameNodeRequest::_InternalSerialize(
            const MessageLite& base, ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) {
          const UnregisterGameNodeRequest& this_ = static_cast<const UnregisterGameNodeRequest&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::uint8_t* UnregisterGameNodeRequest::_InternalSerialize(
            ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) const {
          const UnregisterGameNodeRequest& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(serialize_to_array_start:UnregisterGameNodeRequest)
          ::uint32_t cached_has_bits = 0;
          (void)cached_has_bits;

          // uint32 scene_node_id = 1;
          if (this_._internal_scene_node_id() != 0) {
            target = stream->EnsureSpace(target);
            target = ::_pbi::WireFormatLite::WriteUInt32ToArray(
                1, this_._internal_scene_node_id(), target);
          }

          if (PROTOBUF_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
            target =
                ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
                    this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
          }
          // @@protoc_insertion_point(serialize_to_array_end:UnregisterGameNodeRequest)
          return target;
        }

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::size_t UnregisterGameNodeRequest::ByteSizeLong(const MessageLite& base) {
          const UnregisterGameNodeRequest& this_ = static_cast<const UnregisterGameNodeRequest&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::size_t UnregisterGameNodeRequest::ByteSizeLong() const {
          const UnregisterGameNodeRequest& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(message_byte_size_start:UnregisterGameNodeRequest)
          ::size_t total_size = 0;

          ::uint32_t cached_has_bits = 0;
          // Prevent compiler warnings about cached_has_bits being unused
          (void)cached_has_bits;

           {
            // uint32 scene_node_id = 1;
            if (this_._internal_scene_node_id() != 0) {
              total_size += ::_pbi::WireFormatLite::UInt32SizePlusOne(
                  this_._internal_scene_node_id());
            }
          }
          return this_.MaybeComputeUnknownFieldsSize(total_size,
                                                     &this_._impl_._cached_size_);
        }

void UnregisterGameNodeRequest::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<UnregisterGameNodeRequest*>(&to_msg);
  auto& from = static_cast<const UnregisterGameNodeRequest&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:UnregisterGameNodeRequest)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_scene_node_id() != 0) {
    _this->_impl_.scene_node_id_ = from._impl_.scene_node_id_;
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void UnregisterGameNodeRequest::CopyFrom(const UnregisterGameNodeRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:UnregisterGameNodeRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void UnregisterGameNodeRequest::InternalSwap(UnregisterGameNodeRequest* PROTOBUF_RESTRICT other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
        swap(_impl_.scene_node_id_, other->_impl_.scene_node_id_);
}

::google::protobuf::Metadata UnregisterGameNodeRequest::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class ProtoFieldCheckerTestSubPB::_Internal {
 public:
};

ProtoFieldCheckerTestSubPB::ProtoFieldCheckerTestSubPB(::google::protobuf::Arena* arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:ProtoFieldCheckerTestSubPB)
}
inline PROTOBUF_NDEBUG_INLINE ProtoFieldCheckerTestSubPB::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from, const ::ProtoFieldCheckerTestSubPB& from_msg)
      : items_{visibility, arena, from.items_},
        _cached_size_{0} {}

ProtoFieldCheckerTestSubPB::ProtoFieldCheckerTestSubPB(
    ::google::protobuf::Arena* arena,
    const ProtoFieldCheckerTestSubPB& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  ProtoFieldCheckerTestSubPB* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);

  // @@protoc_insertion_point(copy_constructor:ProtoFieldCheckerTestSubPB)
}
inline PROTOBUF_NDEBUG_INLINE ProtoFieldCheckerTestSubPB::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : items_{visibility, arena},
        _cached_size_{0} {}

inline void ProtoFieldCheckerTestSubPB::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
}
ProtoFieldCheckerTestSubPB::~ProtoFieldCheckerTestSubPB() {
  // @@protoc_insertion_point(destructor:ProtoFieldCheckerTestSubPB)
  SharedDtor(*this);
}
inline void ProtoFieldCheckerTestSubPB::SharedDtor(MessageLite& self) {
  ProtoFieldCheckerTestSubPB& this_ = static_cast<ProtoFieldCheckerTestSubPB&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  this_._impl_.~Impl_();
}

inline void* ProtoFieldCheckerTestSubPB::PlacementNew_(const void*, void* mem,
                                        ::google::protobuf::Arena* arena) {
  return ::new (mem) ProtoFieldCheckerTestSubPB(arena);
}
constexpr auto ProtoFieldCheckerTestSubPB::InternalNewImpl_() {
  constexpr auto arena_bits = ::google::protobuf::internal::EncodePlacementArenaOffsets({
      PROTOBUF_FIELD_OFFSET(ProtoFieldCheckerTestSubPB, _impl_.items_) +
          decltype(ProtoFieldCheckerTestSubPB::_impl_.items_)::
              InternalGetArenaOffset(
                  ::google::protobuf::Message::internal_visibility()),
  });
  if (arena_bits.has_value()) {
    return ::google::protobuf::internal::MessageCreator::ZeroInit(
        sizeof(ProtoFieldCheckerTestSubPB), alignof(ProtoFieldCheckerTestSubPB), *arena_bits);
  } else {
    return ::google::protobuf::internal::MessageCreator(&ProtoFieldCheckerTestSubPB::PlacementNew_,
                                 sizeof(ProtoFieldCheckerTestSubPB),
                                 alignof(ProtoFieldCheckerTestSubPB));
  }
}
PROTOBUF_CONSTINIT
PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::google::protobuf::internal::ClassDataFull ProtoFieldCheckerTestSubPB::_class_data_ = {
    ::google::protobuf::internal::ClassData{
        &_ProtoFieldCheckerTestSubPB_default_instance_._instance,
        &_table_.header,
        nullptr,  // OnDemandRegisterArenaDtor
        nullptr,  // IsInitialized
        &ProtoFieldCheckerTestSubPB::MergeImpl,
        ::google::protobuf::Message::GetNewImpl<ProtoFieldCheckerTestSubPB>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
        &ProtoFieldCheckerTestSubPB::SharedDtor,
        ::google::protobuf::Message::GetClearImpl<ProtoFieldCheckerTestSubPB>(), &ProtoFieldCheckerTestSubPB::ByteSizeLong,
            &ProtoFieldCheckerTestSubPB::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
        PROTOBUF_FIELD_OFFSET(ProtoFieldCheckerTestSubPB, _impl_._cached_size_),
        false,
    },
    &ProtoFieldCheckerTestSubPB::kDescriptorMethods,
    &descriptor_table_proto_2fcommon_2fcommon_5fmessage_2eproto,
    nullptr,  // tracker
};
const ::google::protobuf::internal::ClassData* ProtoFieldCheckerTestSubPB::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_class_data_.tc_table);
  return _class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<0, 1, 0, 40, 2> ProtoFieldCheckerTestSubPB::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    1, 0,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967294,  // skipmap
    offsetof(decltype(_table_), field_entries),
    1,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    _class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::ProtoFieldCheckerTestSubPB>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // repeated string items = 1;
    {::_pbi::TcParser::FastUR1,
     {10, 63, 0, PROTOBUF_FIELD_OFFSET(ProtoFieldCheckerTestSubPB, _impl_.items_)}},
  }}, {{
    65535, 65535
  }}, {{
    // repeated string items = 1;
    {PROTOBUF_FIELD_OFFSET(ProtoFieldCheckerTestSubPB, _impl_.items_), 0, 0,
    (0 | ::_fl::kFcRepeated | ::_fl::kUtf8String | ::_fl::kRepSString)},
  }},
  // no aux_entries
  {{
    "\32\5\0\0\0\0\0\0"
    "ProtoFieldCheckerTestSubPB"
    "items"
  }},
};

PROTOBUF_NOINLINE void ProtoFieldCheckerTestSubPB::Clear() {
// @@protoc_insertion_point(message_clear_start:ProtoFieldCheckerTestSubPB)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.items_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::uint8_t* ProtoFieldCheckerTestSubPB::_InternalSerialize(
            const MessageLite& base, ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) {
          const ProtoFieldCheckerTestSubPB& this_ = static_cast<const ProtoFieldCheckerTestSubPB&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::uint8_t* ProtoFieldCheckerTestSubPB::_InternalSerialize(
            ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) const {
          const ProtoFieldCheckerTestSubPB& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(serialize_to_array_start:ProtoFieldCheckerTestSubPB)
          ::uint32_t cached_has_bits = 0;
          (void)cached_has_bits;

          // repeated string items = 1;
          for (int i = 0, n = this_._internal_items_size(); i < n; ++i) {
            const auto& s = this_._internal_items().Get(i);
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                s.data(), static_cast<int>(s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "ProtoFieldCheckerTestSubPB.items");
            target = stream->WriteString(1, s, target);
          }

          if (PROTOBUF_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
            target =
                ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
                    this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
          }
          // @@protoc_insertion_point(serialize_to_array_end:ProtoFieldCheckerTestSubPB)
          return target;
        }

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::size_t ProtoFieldCheckerTestSubPB::ByteSizeLong(const MessageLite& base) {
          const ProtoFieldCheckerTestSubPB& this_ = static_cast<const ProtoFieldCheckerTestSubPB&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::size_t ProtoFieldCheckerTestSubPB::ByteSizeLong() const {
          const ProtoFieldCheckerTestSubPB& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(message_byte_size_start:ProtoFieldCheckerTestSubPB)
          ::size_t total_size = 0;

          ::uint32_t cached_has_bits = 0;
          // Prevent compiler warnings about cached_has_bits being unused
          (void)cached_has_bits;

          ::_pbi::Prefetch5LinesFrom7Lines(&this_);
           {
            // repeated string items = 1;
            {
              total_size +=
                  1 * ::google::protobuf::internal::FromIntSize(this_._internal_items().size());
              for (int i = 0, n = this_._internal_items().size(); i < n; ++i) {
                total_size += ::google::protobuf::internal::WireFormatLite::StringSize(
                    this_._internal_items().Get(i));
              }
            }
          }
          return this_.MaybeComputeUnknownFieldsSize(total_size,
                                                     &this_._impl_._cached_size_);
        }

void ProtoFieldCheckerTestSubPB::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<ProtoFieldCheckerTestSubPB*>(&to_msg);
  auto& from = static_cast<const ProtoFieldCheckerTestSubPB&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:ProtoFieldCheckerTestSubPB)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_internal_mutable_items()->MergeFrom(from._internal_items());
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void ProtoFieldCheckerTestSubPB::CopyFrom(const ProtoFieldCheckerTestSubPB& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:ProtoFieldCheckerTestSubPB)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void ProtoFieldCheckerTestSubPB::InternalSwap(ProtoFieldCheckerTestSubPB* PROTOBUF_RESTRICT other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  _impl_.items_.InternalSwap(&other->_impl_.items_);
}

::google::protobuf::Metadata ProtoFieldCheckerTestSubPB::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class ProtoFieldCheckerTestPB::_Internal {
 public:
  using HasBits =
      decltype(std::declval<ProtoFieldCheckerTestPB>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
      8 * PROTOBUF_FIELD_OFFSET(ProtoFieldCheckerTestPB, _impl_._has_bits_);
};

ProtoFieldCheckerTestPB::ProtoFieldCheckerTestPB(::google::protobuf::Arena* arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:ProtoFieldCheckerTestPB)
}
inline PROTOBUF_NDEBUG_INLINE ProtoFieldCheckerTestPB::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from, const ::ProtoFieldCheckerTestPB& from_msg)
      : _has_bits_{from._has_bits_},
        _cached_size_{0} {}

ProtoFieldCheckerTestPB::ProtoFieldCheckerTestPB(
    ::google::protobuf::Arena* arena,
    const ProtoFieldCheckerTestPB& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  ProtoFieldCheckerTestPB* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);
  ::uint32_t cached_has_bits = _impl_._has_bits_[0];
  _impl_.sub_message_ = (cached_has_bits & 0x00000001u) ? ::google::protobuf::Message::CopyConstruct<::ProtoFieldCheckerTestSubPB>(
                              arena, *from._impl_.sub_message_)
                        : nullptr;

  // @@protoc_insertion_point(copy_constructor:ProtoFieldCheckerTestPB)
}
inline PROTOBUF_NDEBUG_INLINE ProtoFieldCheckerTestPB::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0} {}

inline void ProtoFieldCheckerTestPB::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  _impl_.sub_message_ = {};
}
ProtoFieldCheckerTestPB::~ProtoFieldCheckerTestPB() {
  // @@protoc_insertion_point(destructor:ProtoFieldCheckerTestPB)
  SharedDtor(*this);
}
inline void ProtoFieldCheckerTestPB::SharedDtor(MessageLite& self) {
  ProtoFieldCheckerTestPB& this_ = static_cast<ProtoFieldCheckerTestPB&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  delete this_._impl_.sub_message_;
  this_._impl_.~Impl_();
}

inline void* ProtoFieldCheckerTestPB::PlacementNew_(const void*, void* mem,
                                        ::google::protobuf::Arena* arena) {
  return ::new (mem) ProtoFieldCheckerTestPB(arena);
}
constexpr auto ProtoFieldCheckerTestPB::InternalNewImpl_() {
  return ::google::protobuf::internal::MessageCreator::ZeroInit(sizeof(ProtoFieldCheckerTestPB),
                                            alignof(ProtoFieldCheckerTestPB));
}
PROTOBUF_CONSTINIT
PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::google::protobuf::internal::ClassDataFull ProtoFieldCheckerTestPB::_class_data_ = {
    ::google::protobuf::internal::ClassData{
        &_ProtoFieldCheckerTestPB_default_instance_._instance,
        &_table_.header,
        nullptr,  // OnDemandRegisterArenaDtor
        nullptr,  // IsInitialized
        &ProtoFieldCheckerTestPB::MergeImpl,
        ::google::protobuf::Message::GetNewImpl<ProtoFieldCheckerTestPB>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
        &ProtoFieldCheckerTestPB::SharedDtor,
        ::google::protobuf::Message::GetClearImpl<ProtoFieldCheckerTestPB>(), &ProtoFieldCheckerTestPB::ByteSizeLong,
            &ProtoFieldCheckerTestPB::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
        PROTOBUF_FIELD_OFFSET(ProtoFieldCheckerTestPB, _impl_._cached_size_),
        false,
    },
    &ProtoFieldCheckerTestPB::kDescriptorMethods,
    &descriptor_table_proto_2fcommon_2fcommon_5fmessage_2eproto,
    nullptr,  // tracker
};
const ::google::protobuf::internal::ClassData* ProtoFieldCheckerTestPB::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_class_data_.tc_table);
  return _class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<0, 1, 1, 0, 2> ProtoFieldCheckerTestPB::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(ProtoFieldCheckerTestPB, _impl_._has_bits_),
    0, // no _extensions_
    1, 0,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967294,  // skipmap
    offsetof(decltype(_table_), field_entries),
    1,  // num_field_entries
    1,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    _class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::ProtoFieldCheckerTestPB>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // .ProtoFieldCheckerTestSubPB sub_message = 1;
    {::_pbi::TcParser::FastMtS1,
     {10, 0, 0, PROTOBUF_FIELD_OFFSET(ProtoFieldCheckerTestPB, _impl_.sub_message_)}},
  }}, {{
    65535, 65535
  }}, {{
    // .ProtoFieldCheckerTestSubPB sub_message = 1;
    {PROTOBUF_FIELD_OFFSET(ProtoFieldCheckerTestPB, _impl_.sub_message_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
  }}, {{
    {::_pbi::TcParser::GetTable<::ProtoFieldCheckerTestSubPB>()},
  }}, {{
  }},
};

PROTOBUF_NOINLINE void ProtoFieldCheckerTestPB::Clear() {
// @@protoc_insertion_point(message_clear_start:ProtoFieldCheckerTestPB)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    ABSL_DCHECK(_impl_.sub_message_ != nullptr);
    _impl_.sub_message_->Clear();
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::uint8_t* ProtoFieldCheckerTestPB::_InternalSerialize(
            const MessageLite& base, ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) {
          const ProtoFieldCheckerTestPB& this_ = static_cast<const ProtoFieldCheckerTestPB&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::uint8_t* ProtoFieldCheckerTestPB::_InternalSerialize(
            ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) const {
          const ProtoFieldCheckerTestPB& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(serialize_to_array_start:ProtoFieldCheckerTestPB)
          ::uint32_t cached_has_bits = 0;
          (void)cached_has_bits;

          cached_has_bits = this_._impl_._has_bits_[0];
          // .ProtoFieldCheckerTestSubPB sub_message = 1;
          if (cached_has_bits & 0x00000001u) {
            target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
                1, *this_._impl_.sub_message_, this_._impl_.sub_message_->GetCachedSize(), target,
                stream);
          }

          if (PROTOBUF_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
            target =
                ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
                    this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
          }
          // @@protoc_insertion_point(serialize_to_array_end:ProtoFieldCheckerTestPB)
          return target;
        }

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::size_t ProtoFieldCheckerTestPB::ByteSizeLong(const MessageLite& base) {
          const ProtoFieldCheckerTestPB& this_ = static_cast<const ProtoFieldCheckerTestPB&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::size_t ProtoFieldCheckerTestPB::ByteSizeLong() const {
          const ProtoFieldCheckerTestPB& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(message_byte_size_start:ProtoFieldCheckerTestPB)
          ::size_t total_size = 0;

          ::uint32_t cached_has_bits = 0;
          // Prevent compiler warnings about cached_has_bits being unused
          (void)cached_has_bits;

           {
            // .ProtoFieldCheckerTestSubPB sub_message = 1;
            cached_has_bits = this_._impl_._has_bits_[0];
            if (cached_has_bits & 0x00000001u) {
              total_size += 1 +
                            ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.sub_message_);
            }
          }
          return this_.MaybeComputeUnknownFieldsSize(total_size,
                                                     &this_._impl_._cached_size_);
        }

void ProtoFieldCheckerTestPB::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<ProtoFieldCheckerTestPB*>(&to_msg);
  auto& from = static_cast<const ProtoFieldCheckerTestPB&>(from_msg);
  ::google::protobuf::Arena* arena = _this->GetArena();
  // @@protoc_insertion_point(class_specific_merge_from_start:ProtoFieldCheckerTestPB)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    ABSL_DCHECK(from._impl_.sub_message_ != nullptr);
    if (_this->_impl_.sub_message_ == nullptr) {
      _this->_impl_.sub_message_ =
          ::google::protobuf::Message::CopyConstruct<::ProtoFieldCheckerTestSubPB>(arena, *from._impl_.sub_message_);
    } else {
      _this->_impl_.sub_message_->MergeFrom(*from._impl_.sub_message_);
    }
  }
  _this->_impl_._has_bits_[0] |= cached_has_bits;
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void ProtoFieldCheckerTestPB::CopyFrom(const ProtoFieldCheckerTestPB& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:ProtoFieldCheckerTestPB)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void ProtoFieldCheckerTestPB::InternalSwap(ProtoFieldCheckerTestPB* PROTOBUF_RESTRICT other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  swap(_impl_.sub_message_, other->_impl_.sub_message_);
}

::google::protobuf::Metadata ProtoFieldCheckerTestPB::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class MyProtoMessage::_Internal {
 public:
  using HasBits =
      decltype(std::declval<MyProtoMessage>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
      8 * PROTOBUF_FIELD_OFFSET(MyProtoMessage, _impl_._has_bits_);
};

MyProtoMessage::MyProtoMessage(::google::protobuf::Arena* arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:MyProtoMessage)
}
inline PROTOBUF_NDEBUG_INLINE MyProtoMessage::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from, const ::MyProtoMessage& from_msg)
      : _has_bits_{from._has_bits_},
        _cached_size_{0},
        repeated_int32_field_{visibility, arena, from.repeated_int32_field_},
        _repeated_int32_field_cached_byte_size_{0},
        repeated_int64_field_{visibility, arena, from.repeated_int64_field_},
        _repeated_int64_field_cached_byte_size_{0} {}

MyProtoMessage::MyProtoMessage(
    ::google::protobuf::Arena* arena,
    const MyProtoMessage& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  MyProtoMessage* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);
  ::uint32_t cached_has_bits = _impl_._has_bits_[0];
  _impl_.nested_message_ = (cached_has_bits & 0x00000001u) ? ::google::protobuf::Message::CopyConstruct<::MyNestedMessage>(
                              arena, *from._impl_.nested_message_)
                        : nullptr;
  ::memcpy(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, single_int64_field_),
           reinterpret_cast<const char *>(&from._impl_) +
               offsetof(Impl_, single_int64_field_),
           offsetof(Impl_, single_int32_field_) -
               offsetof(Impl_, single_int64_field_) +
               sizeof(Impl_::single_int32_field_));

  // @@protoc_insertion_point(copy_constructor:MyProtoMessage)
}
inline PROTOBUF_NDEBUG_INLINE MyProtoMessage::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0},
        repeated_int32_field_{visibility, arena},
        _repeated_int32_field_cached_byte_size_{0},
        repeated_int64_field_{visibility, arena},
        _repeated_int64_field_cached_byte_size_{0} {}

inline void MyProtoMessage::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, nested_message_),
           0,
           offsetof(Impl_, single_int32_field_) -
               offsetof(Impl_, nested_message_) +
               sizeof(Impl_::single_int32_field_));
}
MyProtoMessage::~MyProtoMessage() {
  // @@protoc_insertion_point(destructor:MyProtoMessage)
  SharedDtor(*this);
}
inline void MyProtoMessage::SharedDtor(MessageLite& self) {
  MyProtoMessage& this_ = static_cast<MyProtoMessage&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  delete this_._impl_.nested_message_;
  this_._impl_.~Impl_();
}

inline void* MyProtoMessage::PlacementNew_(const void*, void* mem,
                                        ::google::protobuf::Arena* arena) {
  return ::new (mem) MyProtoMessage(arena);
}
constexpr auto MyProtoMessage::InternalNewImpl_() {
  constexpr auto arena_bits = ::google::protobuf::internal::EncodePlacementArenaOffsets({
      PROTOBUF_FIELD_OFFSET(MyProtoMessage, _impl_.repeated_int32_field_) +
          decltype(MyProtoMessage::_impl_.repeated_int32_field_)::
              InternalGetArenaOffset(
                  ::google::protobuf::Message::internal_visibility()),
      PROTOBUF_FIELD_OFFSET(MyProtoMessage, _impl_.repeated_int64_field_) +
          decltype(MyProtoMessage::_impl_.repeated_int64_field_)::
              InternalGetArenaOffset(
                  ::google::protobuf::Message::internal_visibility()),
  });
  if (arena_bits.has_value()) {
    return ::google::protobuf::internal::MessageCreator::ZeroInit(
        sizeof(MyProtoMessage), alignof(MyProtoMessage), *arena_bits);
  } else {
    return ::google::protobuf::internal::MessageCreator(&MyProtoMessage::PlacementNew_,
                                 sizeof(MyProtoMessage),
                                 alignof(MyProtoMessage));
  }
}
PROTOBUF_CONSTINIT
PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::google::protobuf::internal::ClassDataFull MyProtoMessage::_class_data_ = {
    ::google::protobuf::internal::ClassData{
        &_MyProtoMessage_default_instance_._instance,
        &_table_.header,
        nullptr,  // OnDemandRegisterArenaDtor
        nullptr,  // IsInitialized
        &MyProtoMessage::MergeImpl,
        ::google::protobuf::Message::GetNewImpl<MyProtoMessage>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
        &MyProtoMessage::SharedDtor,
        ::google::protobuf::Message::GetClearImpl<MyProtoMessage>(), &MyProtoMessage::ByteSizeLong,
            &MyProtoMessage::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
        PROTOBUF_FIELD_OFFSET(MyProtoMessage, _impl_._cached_size_),
        false,
    },
    &MyProtoMessage::kDescriptorMethods,
    &descriptor_table_proto_2fcommon_2fcommon_5fmessage_2eproto,
    nullptr,  // tracker
};
const ::google::protobuf::internal::ClassData* MyProtoMessage::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_class_data_.tc_table);
  return _class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<3, 5, 1, 0, 2> MyProtoMessage::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(MyProtoMessage, _impl_._has_bits_),
    0, // no _extensions_
    5, 56,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967264,  // skipmap
    offsetof(decltype(_table_), field_entries),
    5,  // num_field_entries
    1,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    _class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::MyProtoMessage>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
    // int32 single_int32_field = 1;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(MyProtoMessage, _impl_.single_int32_field_), 63>(),
     {8, 63, 0, PROTOBUF_FIELD_OFFSET(MyProtoMessage, _impl_.single_int32_field_)}},
    // int64 single_int64_field = 2;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint64_t, offsetof(MyProtoMessage, _impl_.single_int64_field_), 63>(),
     {16, 63, 0, PROTOBUF_FIELD_OFFSET(MyProtoMessage, _impl_.single_int64_field_)}},
    // repeated int32 repeated_int32_field = 3;
    {::_pbi::TcParser::FastV32P1,
     {26, 63, 0, PROTOBUF_FIELD_OFFSET(MyProtoMessage, _impl_.repeated_int32_field_)}},
    // repeated int64 repeated_int64_field = 4;
    {::_pbi::TcParser::FastV64P1,
     {34, 63, 0, PROTOBUF_FIELD_OFFSET(MyProtoMessage, _impl_.repeated_int64_field_)}},
    // .MyNestedMessage nested_message = 5;
    {::_pbi::TcParser::FastMtS1,
     {42, 0, 0, PROTOBUF_FIELD_OFFSET(MyProtoMessage, _impl_.nested_message_)}},
    {::_pbi::TcParser::MiniParse, {}},
    {::_pbi::TcParser::MiniParse, {}},
  }}, {{
    65535, 65535
  }}, {{
    // int32 single_int32_field = 1;
    {PROTOBUF_FIELD_OFFSET(MyProtoMessage, _impl_.single_int32_field_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kInt32)},
    // int64 single_int64_field = 2;
    {PROTOBUF_FIELD_OFFSET(MyProtoMessage, _impl_.single_int64_field_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kInt64)},
    // repeated int32 repeated_int32_field = 3;
    {PROTOBUF_FIELD_OFFSET(MyProtoMessage, _impl_.repeated_int32_field_), -1, 0,
    (0 | ::_fl::kFcRepeated | ::_fl::kPackedInt32)},
    // repeated int64 repeated_int64_field = 4;
    {PROTOBUF_FIELD_OFFSET(MyProtoMessage, _impl_.repeated_int64_field_), -1, 0,
    (0 | ::_fl::kFcRepeated | ::_fl::kPackedInt64)},
    // .MyNestedMessage nested_message = 5;
    {PROTOBUF_FIELD_OFFSET(MyProtoMessage, _impl_.nested_message_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
  }}, {{
    {::_pbi::TcParser::GetTable<::MyNestedMessage>()},
  }}, {{
  }},
};

PROTOBUF_NOINLINE void MyProtoMessage::Clear() {
// @@protoc_insertion_point(message_clear_start:MyProtoMessage)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.repeated_int32_field_.Clear();
  _impl_.repeated_int64_field_.Clear();
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    ABSL_DCHECK(_impl_.nested_message_ != nullptr);
    _impl_.nested_message_->Clear();
  }
  ::memset(&_impl_.single_int64_field_, 0, static_cast<::size_t>(
      reinterpret_cast<char*>(&_impl_.single_int32_field_) -
      reinterpret_cast<char*>(&_impl_.single_int64_field_)) + sizeof(_impl_.single_int32_field_));
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::uint8_t* MyProtoMessage::_InternalSerialize(
            const MessageLite& base, ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) {
          const MyProtoMessage& this_ = static_cast<const MyProtoMessage&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::uint8_t* MyProtoMessage::_InternalSerialize(
            ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) const {
          const MyProtoMessage& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(serialize_to_array_start:MyProtoMessage)
          ::uint32_t cached_has_bits = 0;
          (void)cached_has_bits;

          // int32 single_int32_field = 1;
          if (this_._internal_single_int32_field() != 0) {
            target = ::google::protobuf::internal::WireFormatLite::
                WriteInt32ToArrayWithField<1>(
                    stream, this_._internal_single_int32_field(), target);
          }

          // int64 single_int64_field = 2;
          if (this_._internal_single_int64_field() != 0) {
            target = ::google::protobuf::internal::WireFormatLite::
                WriteInt64ToArrayWithField<2>(
                    stream, this_._internal_single_int64_field(), target);
          }

          // repeated int32 repeated_int32_field = 3;
          {
            int byte_size = this_._impl_._repeated_int32_field_cached_byte_size_.Get();
            if (byte_size > 0) {
              target = stream->WriteInt32Packed(
                  3, this_._internal_repeated_int32_field(), byte_size, target);
            }
          }

          // repeated int64 repeated_int64_field = 4;
          {
            int byte_size = this_._impl_._repeated_int64_field_cached_byte_size_.Get();
            if (byte_size > 0) {
              target = stream->WriteInt64Packed(
                  4, this_._internal_repeated_int64_field(), byte_size, target);
            }
          }

          cached_has_bits = this_._impl_._has_bits_[0];
          // .MyNestedMessage nested_message = 5;
          if (cached_has_bits & 0x00000001u) {
            target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
                5, *this_._impl_.nested_message_, this_._impl_.nested_message_->GetCachedSize(), target,
                stream);
          }

          if (PROTOBUF_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
            target =
                ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
                    this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
          }
          // @@protoc_insertion_point(serialize_to_array_end:MyProtoMessage)
          return target;
        }

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::size_t MyProtoMessage::ByteSizeLong(const MessageLite& base) {
          const MyProtoMessage& this_ = static_cast<const MyProtoMessage&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::size_t MyProtoMessage::ByteSizeLong() const {
          const MyProtoMessage& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(message_byte_size_start:MyProtoMessage)
          ::size_t total_size = 0;

          ::uint32_t cached_has_bits = 0;
          // Prevent compiler warnings about cached_has_bits being unused
          (void)cached_has_bits;

          ::_pbi::Prefetch5LinesFrom7Lines(&this_);
           {
            // repeated int32 repeated_int32_field = 3;
            {
              total_size +=
                  ::_pbi::WireFormatLite::Int32SizeWithPackedTagSize(
                      this_._internal_repeated_int32_field(), 1,
                      this_._impl_._repeated_int32_field_cached_byte_size_);
            }
            // repeated int64 repeated_int64_field = 4;
            {
              total_size +=
                  ::_pbi::WireFormatLite::Int64SizeWithPackedTagSize(
                      this_._internal_repeated_int64_field(), 1,
                      this_._impl_._repeated_int64_field_cached_byte_size_);
            }
          }
           {
            // .MyNestedMessage nested_message = 5;
            cached_has_bits = this_._impl_._has_bits_[0];
            if (cached_has_bits & 0x00000001u) {
              total_size += 1 +
                            ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.nested_message_);
            }
          }
           {
            // int64 single_int64_field = 2;
            if (this_._internal_single_int64_field() != 0) {
              total_size += ::_pbi::WireFormatLite::Int64SizePlusOne(
                  this_._internal_single_int64_field());
            }
            // int32 single_int32_field = 1;
            if (this_._internal_single_int32_field() != 0) {
              total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(
                  this_._internal_single_int32_field());
            }
          }
          return this_.MaybeComputeUnknownFieldsSize(total_size,
                                                     &this_._impl_._cached_size_);
        }

void MyProtoMessage::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<MyProtoMessage*>(&to_msg);
  auto& from = static_cast<const MyProtoMessage&>(from_msg);
  ::google::protobuf::Arena* arena = _this->GetArena();
  // @@protoc_insertion_point(class_specific_merge_from_start:MyProtoMessage)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_internal_mutable_repeated_int32_field()->MergeFrom(from._internal_repeated_int32_field());
  _this->_internal_mutable_repeated_int64_field()->MergeFrom(from._internal_repeated_int64_field());
  cached_has_bits = from._impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    ABSL_DCHECK(from._impl_.nested_message_ != nullptr);
    if (_this->_impl_.nested_message_ == nullptr) {
      _this->_impl_.nested_message_ =
          ::google::protobuf::Message::CopyConstruct<::MyNestedMessage>(arena, *from._impl_.nested_message_);
    } else {
      _this->_impl_.nested_message_->MergeFrom(*from._impl_.nested_message_);
    }
  }
  if (from._internal_single_int64_field() != 0) {
    _this->_impl_.single_int64_field_ = from._impl_.single_int64_field_;
  }
  if (from._internal_single_int32_field() != 0) {
    _this->_impl_.single_int32_field_ = from._impl_.single_int32_field_;
  }
  _this->_impl_._has_bits_[0] |= cached_has_bits;
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void MyProtoMessage::CopyFrom(const MyProtoMessage& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:MyProtoMessage)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void MyProtoMessage::InternalSwap(MyProtoMessage* PROTOBUF_RESTRICT other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  _impl_.repeated_int32_field_.InternalSwap(&other->_impl_.repeated_int32_field_);
  _impl_.repeated_int64_field_.InternalSwap(&other->_impl_.repeated_int64_field_);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(MyProtoMessage, _impl_.single_int32_field_)
      + sizeof(MyProtoMessage::_impl_.single_int32_field_)
      - PROTOBUF_FIELD_OFFSET(MyProtoMessage, _impl_.nested_message_)>(
          reinterpret_cast<char*>(&_impl_.nested_message_),
          reinterpret_cast<char*>(&other->_impl_.nested_message_));
}

::google::protobuf::Metadata MyProtoMessage::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class MyNestedMessage::_Internal {
 public:
};

MyNestedMessage::MyNestedMessage(::google::protobuf::Arena* arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:MyNestedMessage)
}
MyNestedMessage::MyNestedMessage(
    ::google::protobuf::Arena* arena, const MyNestedMessage& from)
    : MyNestedMessage(arena) {
  MergeFrom(from);
}
inline PROTOBUF_NDEBUG_INLINE MyNestedMessage::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0} {}

inline void MyNestedMessage::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, nested_int64_field_),
           0,
           offsetof(Impl_, nested_int32_field_) -
               offsetof(Impl_, nested_int64_field_) +
               sizeof(Impl_::nested_int32_field_));
}
MyNestedMessage::~MyNestedMessage() {
  // @@protoc_insertion_point(destructor:MyNestedMessage)
  SharedDtor(*this);
}
inline void MyNestedMessage::SharedDtor(MessageLite& self) {
  MyNestedMessage& this_ = static_cast<MyNestedMessage&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  this_._impl_.~Impl_();
}

inline void* MyNestedMessage::PlacementNew_(const void*, void* mem,
                                        ::google::protobuf::Arena* arena) {
  return ::new (mem) MyNestedMessage(arena);
}
constexpr auto MyNestedMessage::InternalNewImpl_() {
  return ::google::protobuf::internal::MessageCreator::ZeroInit(sizeof(MyNestedMessage),
                                            alignof(MyNestedMessage));
}
PROTOBUF_CONSTINIT
PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::google::protobuf::internal::ClassDataFull MyNestedMessage::_class_data_ = {
    ::google::protobuf::internal::ClassData{
        &_MyNestedMessage_default_instance_._instance,
        &_table_.header,
        nullptr,  // OnDemandRegisterArenaDtor
        nullptr,  // IsInitialized
        &MyNestedMessage::MergeImpl,
        ::google::protobuf::Message::GetNewImpl<MyNestedMessage>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
        &MyNestedMessage::SharedDtor,
        ::google::protobuf::Message::GetClearImpl<MyNestedMessage>(), &MyNestedMessage::ByteSizeLong,
            &MyNestedMessage::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
        PROTOBUF_FIELD_OFFSET(MyNestedMessage, _impl_._cached_size_),
        false,
    },
    &MyNestedMessage::kDescriptorMethods,
    &descriptor_table_proto_2fcommon_2fcommon_5fmessage_2eproto,
    nullptr,  // tracker
};
const ::google::protobuf::internal::ClassData* MyNestedMessage::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_class_data_.tc_table);
  return _class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<1, 2, 0, 0, 2> MyNestedMessage::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    2, 8,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967292,  // skipmap
    offsetof(decltype(_table_), field_entries),
    2,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    _class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::MyNestedMessage>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // int64 nested_int64_field = 2;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint64_t, offsetof(MyNestedMessage, _impl_.nested_int64_field_), 63>(),
     {16, 63, 0, PROTOBUF_FIELD_OFFSET(MyNestedMessage, _impl_.nested_int64_field_)}},
    // int32 nested_int32_field = 1;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(MyNestedMessage, _impl_.nested_int32_field_), 63>(),
     {8, 63, 0, PROTOBUF_FIELD_OFFSET(MyNestedMessage, _impl_.nested_int32_field_)}},
  }}, {{
    65535, 65535
  }}, {{
    // int32 nested_int32_field = 1;
    {PROTOBUF_FIELD_OFFSET(MyNestedMessage, _impl_.nested_int32_field_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kInt32)},
    // int64 nested_int64_field = 2;
    {PROTOBUF_FIELD_OFFSET(MyNestedMessage, _impl_.nested_int64_field_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kInt64)},
  }},
  // no aux_entries
  {{
  }},
};

PROTOBUF_NOINLINE void MyNestedMessage::Clear() {
// @@protoc_insertion_point(message_clear_start:MyNestedMessage)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&_impl_.nested_int64_field_, 0, static_cast<::size_t>(
      reinterpret_cast<char*>(&_impl_.nested_int32_field_) -
      reinterpret_cast<char*>(&_impl_.nested_int64_field_)) + sizeof(_impl_.nested_int32_field_));
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::uint8_t* MyNestedMessage::_InternalSerialize(
            const MessageLite& base, ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) {
          const MyNestedMessage& this_ = static_cast<const MyNestedMessage&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::uint8_t* MyNestedMessage::_InternalSerialize(
            ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) const {
          const MyNestedMessage& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(serialize_to_array_start:MyNestedMessage)
          ::uint32_t cached_has_bits = 0;
          (void)cached_has_bits;

          // int32 nested_int32_field = 1;
          if (this_._internal_nested_int32_field() != 0) {
            target = ::google::protobuf::internal::WireFormatLite::
                WriteInt32ToArrayWithField<1>(
                    stream, this_._internal_nested_int32_field(), target);
          }

          // int64 nested_int64_field = 2;
          if (this_._internal_nested_int64_field() != 0) {
            target = ::google::protobuf::internal::WireFormatLite::
                WriteInt64ToArrayWithField<2>(
                    stream, this_._internal_nested_int64_field(), target);
          }

          if (PROTOBUF_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
            target =
                ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
                    this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
          }
          // @@protoc_insertion_point(serialize_to_array_end:MyNestedMessage)
          return target;
        }

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::size_t MyNestedMessage::ByteSizeLong(const MessageLite& base) {
          const MyNestedMessage& this_ = static_cast<const MyNestedMessage&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::size_t MyNestedMessage::ByteSizeLong() const {
          const MyNestedMessage& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(message_byte_size_start:MyNestedMessage)
          ::size_t total_size = 0;

          ::uint32_t cached_has_bits = 0;
          // Prevent compiler warnings about cached_has_bits being unused
          (void)cached_has_bits;

          ::_pbi::Prefetch5LinesFrom7Lines(&this_);
           {
            // int64 nested_int64_field = 2;
            if (this_._internal_nested_int64_field() != 0) {
              total_size += ::_pbi::WireFormatLite::Int64SizePlusOne(
                  this_._internal_nested_int64_field());
            }
            // int32 nested_int32_field = 1;
            if (this_._internal_nested_int32_field() != 0) {
              total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(
                  this_._internal_nested_int32_field());
            }
          }
          return this_.MaybeComputeUnknownFieldsSize(total_size,
                                                     &this_._impl_._cached_size_);
        }

void MyNestedMessage::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<MyNestedMessage*>(&to_msg);
  auto& from = static_cast<const MyNestedMessage&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:MyNestedMessage)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_nested_int64_field() != 0) {
    _this->_impl_.nested_int64_field_ = from._impl_.nested_int64_field_;
  }
  if (from._internal_nested_int32_field() != 0) {
    _this->_impl_.nested_int32_field_ = from._impl_.nested_int32_field_;
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void MyNestedMessage::CopyFrom(const MyNestedMessage& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:MyNestedMessage)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void MyNestedMessage::InternalSwap(MyNestedMessage* PROTOBUF_RESTRICT other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(MyNestedMessage, _impl_.nested_int32_field_)
      + sizeof(MyNestedMessage::_impl_.nested_int32_field_)
      - PROTOBUF_FIELD_OFFSET(MyNestedMessage, _impl_.nested_int64_field_)>(
          reinterpret_cast<char*>(&_impl_.nested_int64_field_),
          reinterpret_cast<char*>(&other->_impl_.nested_int64_field_));
}

::google::protobuf::Metadata MyNestedMessage::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class RegisterNodeSessionRequest::_Internal {
 public:
  using HasBits =
      decltype(std::declval<RegisterNodeSessionRequest>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
      8 * PROTOBUF_FIELD_OFFSET(RegisterNodeSessionRequest, _impl_._has_bits_);
};

void RegisterNodeSessionRequest::clear_node_info() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.node_info_ != nullptr) _impl_.node_info_->Clear();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
void RegisterNodeSessionRequest::clear_endpoint() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.endpoint_ != nullptr) _impl_.endpoint_->Clear();
  _impl_._has_bits_[0] &= ~0x00000002u;
}
RegisterNodeSessionRequest::RegisterNodeSessionRequest(::google::protobuf::Arena* arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:RegisterNodeSessionRequest)
}
inline PROTOBUF_NDEBUG_INLINE RegisterNodeSessionRequest::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from, const ::RegisterNodeSessionRequest& from_msg)
      : _has_bits_{from._has_bits_},
        _cached_size_{0} {}

RegisterNodeSessionRequest::RegisterNodeSessionRequest(
    ::google::protobuf::Arena* arena,
    const RegisterNodeSessionRequest& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  RegisterNodeSessionRequest* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);
  ::uint32_t cached_has_bits = _impl_._has_bits_[0];
  _impl_.node_info_ = (cached_has_bits & 0x00000001u) ? ::google::protobuf::Message::CopyConstruct<::NodeInfo>(
                              arena, *from._impl_.node_info_)
                        : nullptr;
  _impl_.endpoint_ = (cached_has_bits & 0x00000002u) ? ::google::protobuf::Message::CopyConstruct<::EndpointPBComponent>(
                              arena, *from._impl_.endpoint_)
                        : nullptr;

  // @@protoc_insertion_point(copy_constructor:RegisterNodeSessionRequest)
}
inline PROTOBUF_NDEBUG_INLINE RegisterNodeSessionRequest::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0} {}

inline void RegisterNodeSessionRequest::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, node_info_),
           0,
           offsetof(Impl_, endpoint_) -
               offsetof(Impl_, node_info_) +
               sizeof(Impl_::endpoint_));
}
RegisterNodeSessionRequest::~RegisterNodeSessionRequest() {
  // @@protoc_insertion_point(destructor:RegisterNodeSessionRequest)
  SharedDtor(*this);
}
inline void RegisterNodeSessionRequest::SharedDtor(MessageLite& self) {
  RegisterNodeSessionRequest& this_ = static_cast<RegisterNodeSessionRequest&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  delete this_._impl_.node_info_;
  delete this_._impl_.endpoint_;
  this_._impl_.~Impl_();
}

inline void* RegisterNodeSessionRequest::PlacementNew_(const void*, void* mem,
                                        ::google::protobuf::Arena* arena) {
  return ::new (mem) RegisterNodeSessionRequest(arena);
}
constexpr auto RegisterNodeSessionRequest::InternalNewImpl_() {
  return ::google::protobuf::internal::MessageCreator::ZeroInit(sizeof(RegisterNodeSessionRequest),
                                            alignof(RegisterNodeSessionRequest));
}
PROTOBUF_CONSTINIT
PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::google::protobuf::internal::ClassDataFull RegisterNodeSessionRequest::_class_data_ = {
    ::google::protobuf::internal::ClassData{
        &_RegisterNodeSessionRequest_default_instance_._instance,
        &_table_.header,
        nullptr,  // OnDemandRegisterArenaDtor
        nullptr,  // IsInitialized
        &RegisterNodeSessionRequest::MergeImpl,
        ::google::protobuf::Message::GetNewImpl<RegisterNodeSessionRequest>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
        &RegisterNodeSessionRequest::SharedDtor,
        ::google::protobuf::Message::GetClearImpl<RegisterNodeSessionRequest>(), &RegisterNodeSessionRequest::ByteSizeLong,
            &RegisterNodeSessionRequest::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
        PROTOBUF_FIELD_OFFSET(RegisterNodeSessionRequest, _impl_._cached_size_),
        false,
    },
    &RegisterNodeSessionRequest::kDescriptorMethods,
    &descriptor_table_proto_2fcommon_2fcommon_5fmessage_2eproto,
    nullptr,  // tracker
};
const ::google::protobuf::internal::ClassData* RegisterNodeSessionRequest::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_class_data_.tc_table);
  return _class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<1, 2, 2, 0, 2> RegisterNodeSessionRequest::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(RegisterNodeSessionRequest, _impl_._has_bits_),
    0, // no _extensions_
    2, 8,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967292,  // skipmap
    offsetof(decltype(_table_), field_entries),
    2,  // num_field_entries
    2,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    _class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::RegisterNodeSessionRequest>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // .EndpointPBComponent endpoint = 2;
    {::_pbi::TcParser::FastMtS1,
     {18, 1, 1, PROTOBUF_FIELD_OFFSET(RegisterNodeSessionRequest, _impl_.endpoint_)}},
    // .NodeInfo node_info = 1;
    {::_pbi::TcParser::FastMtS1,
     {10, 0, 0, PROTOBUF_FIELD_OFFSET(RegisterNodeSessionRequest, _impl_.node_info_)}},
  }}, {{
    65535, 65535
  }}, {{
    // .NodeInfo node_info = 1;
    {PROTOBUF_FIELD_OFFSET(RegisterNodeSessionRequest, _impl_.node_info_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
    // .EndpointPBComponent endpoint = 2;
    {PROTOBUF_FIELD_OFFSET(RegisterNodeSessionRequest, _impl_.endpoint_), _Internal::kHasBitsOffset + 1, 1,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
  }}, {{
    {::_pbi::TcParser::GetTable<::NodeInfo>()},
    {::_pbi::TcParser::GetTable<::EndpointPBComponent>()},
  }}, {{
  }},
};

PROTOBUF_NOINLINE void RegisterNodeSessionRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:RegisterNodeSessionRequest)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    if (cached_has_bits & 0x00000001u) {
      ABSL_DCHECK(_impl_.node_info_ != nullptr);
      _impl_.node_info_->Clear();
    }
    if (cached_has_bits & 0x00000002u) {
      ABSL_DCHECK(_impl_.endpoint_ != nullptr);
      _impl_.endpoint_->Clear();
    }
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::uint8_t* RegisterNodeSessionRequest::_InternalSerialize(
            const MessageLite& base, ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) {
          const RegisterNodeSessionRequest& this_ = static_cast<const RegisterNodeSessionRequest&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::uint8_t* RegisterNodeSessionRequest::_InternalSerialize(
            ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) const {
          const RegisterNodeSessionRequest& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(serialize_to_array_start:RegisterNodeSessionRequest)
          ::uint32_t cached_has_bits = 0;
          (void)cached_has_bits;

          cached_has_bits = this_._impl_._has_bits_[0];
          // .NodeInfo node_info = 1;
          if (cached_has_bits & 0x00000001u) {
            target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
                1, *this_._impl_.node_info_, this_._impl_.node_info_->GetCachedSize(), target,
                stream);
          }

          // .EndpointPBComponent endpoint = 2;
          if (cached_has_bits & 0x00000002u) {
            target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
                2, *this_._impl_.endpoint_, this_._impl_.endpoint_->GetCachedSize(), target,
                stream);
          }

          if (PROTOBUF_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
            target =
                ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
                    this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
          }
          // @@protoc_insertion_point(serialize_to_array_end:RegisterNodeSessionRequest)
          return target;
        }

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::size_t RegisterNodeSessionRequest::ByteSizeLong(const MessageLite& base) {
          const RegisterNodeSessionRequest& this_ = static_cast<const RegisterNodeSessionRequest&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::size_t RegisterNodeSessionRequest::ByteSizeLong() const {
          const RegisterNodeSessionRequest& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(message_byte_size_start:RegisterNodeSessionRequest)
          ::size_t total_size = 0;

          ::uint32_t cached_has_bits = 0;
          // Prevent compiler warnings about cached_has_bits being unused
          (void)cached_has_bits;

          ::_pbi::Prefetch5LinesFrom7Lines(&this_);
          cached_has_bits = this_._impl_._has_bits_[0];
          if (cached_has_bits & 0x00000003u) {
            // .NodeInfo node_info = 1;
            if (cached_has_bits & 0x00000001u) {
              total_size += 1 +
                            ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.node_info_);
            }
            // .EndpointPBComponent endpoint = 2;
            if (cached_has_bits & 0x00000002u) {
              total_size += 1 +
                            ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.endpoint_);
            }
          }
          return this_.MaybeComputeUnknownFieldsSize(total_size,
                                                     &this_._impl_._cached_size_);
        }

void RegisterNodeSessionRequest::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<RegisterNodeSessionRequest*>(&to_msg);
  auto& from = static_cast<const RegisterNodeSessionRequest&>(from_msg);
  ::google::protobuf::Arena* arena = _this->GetArena();
  // @@protoc_insertion_point(class_specific_merge_from_start:RegisterNodeSessionRequest)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._impl_._has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    if (cached_has_bits & 0x00000001u) {
      ABSL_DCHECK(from._impl_.node_info_ != nullptr);
      if (_this->_impl_.node_info_ == nullptr) {
        _this->_impl_.node_info_ =
            ::google::protobuf::Message::CopyConstruct<::NodeInfo>(arena, *from._impl_.node_info_);
      } else {
        _this->_impl_.node_info_->MergeFrom(*from._impl_.node_info_);
      }
    }
    if (cached_has_bits & 0x00000002u) {
      ABSL_DCHECK(from._impl_.endpoint_ != nullptr);
      if (_this->_impl_.endpoint_ == nullptr) {
        _this->_impl_.endpoint_ =
            ::google::protobuf::Message::CopyConstruct<::EndpointPBComponent>(arena, *from._impl_.endpoint_);
      } else {
        _this->_impl_.endpoint_->MergeFrom(*from._impl_.endpoint_);
      }
    }
  }
  _this->_impl_._has_bits_[0] |= cached_has_bits;
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void RegisterNodeSessionRequest::CopyFrom(const RegisterNodeSessionRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:RegisterNodeSessionRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void RegisterNodeSessionRequest::InternalSwap(RegisterNodeSessionRequest* PROTOBUF_RESTRICT other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(RegisterNodeSessionRequest, _impl_.endpoint_)
      + sizeof(RegisterNodeSessionRequest::_impl_.endpoint_)
      - PROTOBUF_FIELD_OFFSET(RegisterNodeSessionRequest, _impl_.node_info_)>(
          reinterpret_cast<char*>(&_impl_.node_info_),
          reinterpret_cast<char*>(&other->_impl_.node_info_));
}

::google::protobuf::Metadata RegisterNodeSessionRequest::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// @@protoc_insertion_point(namespace_scope)
namespace google {
namespace protobuf {
}  // namespace protobuf
}  // namespace google
// @@protoc_insertion_point(global_scope)
PROTOBUF_ATTRIBUTE_INIT_PRIORITY2 static ::std::false_type
    _static_init2_ PROTOBUF_UNUSED =
        (::_pbi::AddDescriptors(&descriptor_table_proto_2fcommon_2fcommon_5fmessage_2eproto),
         ::std::false_type{});
#include "google/protobuf/port_undef.inc"
