// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: common/common_message.proto
// Protobuf C++ Version: 5.26.1

#include "common/common_message.pb.h"

#include <algorithm>
#include "google/protobuf/io/coded_stream.h"
#include "google/protobuf/extension_set.h"
#include "google/protobuf/wire_format_lite.h"
#include "google/protobuf/descriptor.h"
#include "google/protobuf/generated_message_reflection.h"
#include "google/protobuf/reflection_ops.h"
#include "google/protobuf/wire_format.h"
#include "google/protobuf/generated_message_tctable_impl.h"
// @@protoc_insertion_point(includes)

// Must be included last.
#include "google/protobuf/port_def.inc"
PROTOBUF_PRAGMA_INIT_SEG
namespace _pb = ::google::protobuf;
namespace _pbi = ::google::protobuf::internal;
namespace _fl = ::google::protobuf::internal::field_layout;

inline constexpr UnRegisterGameNodeRequest::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : game_node_id_{0u},
        _cached_size_{0} {}

template <typename>
PROTOBUF_CONSTEXPR UnRegisterGameNodeRequest::UnRegisterGameNodeRequest(::_pbi::ConstantInitialized)
    : _impl_(::_pbi::ConstantInitialized()) {}
struct UnRegisterGameNodeRequestDefaultTypeInternal {
  PROTOBUF_CONSTEXPR UnRegisterGameNodeRequestDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~UnRegisterGameNodeRequestDefaultTypeInternal() {}
  union {
    UnRegisterGameNodeRequest _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 UnRegisterGameNodeRequestDefaultTypeInternal _UnRegisterGameNodeRequest_default_instance_;

inline constexpr PlayerMessageExtern::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : player_id_{::uint64_t{0u}},
        _cached_size_{0} {}

template <typename>
PROTOBUF_CONSTEXPR PlayerMessageExtern::PlayerMessageExtern(::_pbi::ConstantInitialized)
    : _impl_(::_pbi::ConstantInitialized()) {}
struct PlayerMessageExternDefaultTypeInternal {
  PROTOBUF_CONSTEXPR PlayerMessageExternDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~PlayerMessageExternDefaultTypeInternal() {}
  union {
    PlayerMessageExtern _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 PlayerMessageExternDefaultTypeInternal _PlayerMessageExtern_default_instance_;

inline constexpr NodeMessageHead::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : session_id_{::uint64_t{0u}},
        node_id_{0u},
        _cached_size_{0} {}

template <typename>
PROTOBUF_CONSTEXPR NodeMessageHead::NodeMessageHead(::_pbi::ConstantInitialized)
    : _impl_(::_pbi::ConstantInitialized()) {}
struct NodeMessageHeadDefaultTypeInternal {
  PROTOBUF_CONSTEXPR NodeMessageHeadDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~NodeMessageHeadDefaultTypeInternal() {}
  union {
    NodeMessageHead _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 NodeMessageHeadDefaultTypeInternal _NodeMessageHead_default_instance_;

inline constexpr MessageBody::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : body_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        id_{::uint64_t{0u}},
        message_id_{0u},
        _cached_size_{0} {}

template <typename>
PROTOBUF_CONSTEXPR MessageBody::MessageBody(::_pbi::ConstantInitialized)
    : _impl_(::_pbi::ConstantInitialized()) {}
struct MessageBodyDefaultTypeInternal {
  PROTOBUF_CONSTEXPR MessageBodyDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~MessageBodyDefaultTypeInternal() {}
  union {
    MessageBody _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 MessageBodyDefaultTypeInternal _MessageBody_default_instance_;

inline constexpr RoutePlayerMsgStringResponse::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        node_list_{},
        body_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        player_ex_{nullptr} {}

template <typename>
PROTOBUF_CONSTEXPR RoutePlayerMsgStringResponse::RoutePlayerMsgStringResponse(::_pbi::ConstantInitialized)
    : _impl_(::_pbi::ConstantInitialized()) {}
struct RoutePlayerMsgStringResponseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR RoutePlayerMsgStringResponseDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~RoutePlayerMsgStringResponseDefaultTypeInternal() {}
  union {
    RoutePlayerMsgStringResponse _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 RoutePlayerMsgStringResponseDefaultTypeInternal _RoutePlayerMsgStringResponse_default_instance_;

inline constexpr RoutePlayerMsgStringRequest::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        node_list_{},
        body_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        player_ex_{nullptr} {}

template <typename>
PROTOBUF_CONSTEXPR RoutePlayerMsgStringRequest::RoutePlayerMsgStringRequest(::_pbi::ConstantInitialized)
    : _impl_(::_pbi::ConstantInitialized()) {}
struct RoutePlayerMsgStringRequestDefaultTypeInternal {
  PROTOBUF_CONSTEXPR RoutePlayerMsgStringRequestDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~RoutePlayerMsgStringRequestDefaultTypeInternal() {}
  union {
    RoutePlayerMsgStringRequest _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 RoutePlayerMsgStringRequestDefaultTypeInternal _RoutePlayerMsgStringRequest_default_instance_;

inline constexpr RouteNodeInfo::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        node_info_{nullptr},
        message_id_{0u} {}

template <typename>
PROTOBUF_CONSTEXPR RouteNodeInfo::RouteNodeInfo(::_pbi::ConstantInitialized)
    : _impl_(::_pbi::ConstantInitialized()) {}
struct RouteNodeInfoDefaultTypeInternal {
  PROTOBUF_CONSTEXPR RouteNodeInfoDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~RouteNodeInfoDefaultTypeInternal() {}
  union {
    RouteNodeInfo _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 RouteNodeInfoDefaultTypeInternal _RouteNodeInfo_default_instance_;

inline constexpr RegisterSessionGateNodeResponse::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        session_info_{nullptr} {}

template <typename>
PROTOBUF_CONSTEXPR RegisterSessionGateNodeResponse::RegisterSessionGateNodeResponse(::_pbi::ConstantInitialized)
    : _impl_(::_pbi::ConstantInitialized()) {}
struct RegisterSessionGateNodeResponseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR RegisterSessionGateNodeResponseDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~RegisterSessionGateNodeResponseDefaultTypeInternal() {}
  union {
    RegisterSessionGateNodeResponse _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 RegisterSessionGateNodeResponseDefaultTypeInternal _RegisterSessionGateNodeResponse_default_instance_;

inline constexpr RegisterSessionCentreNodeResponse::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        session_info_{nullptr} {}

template <typename>
PROTOBUF_CONSTEXPR RegisterSessionCentreNodeResponse::RegisterSessionCentreNodeResponse(::_pbi::ConstantInitialized)
    : _impl_(::_pbi::ConstantInitialized()) {}
struct RegisterSessionCentreNodeResponseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR RegisterSessionCentreNodeResponseDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~RegisterSessionCentreNodeResponseDefaultTypeInternal() {}
  union {
    RegisterSessionCentreNodeResponse _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 RegisterSessionCentreNodeResponseDefaultTypeInternal _RegisterSessionCentreNodeResponse_default_instance_;

inline constexpr RegisterGateNodeRequest::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        rpc_client_{nullptr},
        gate_node_id_{0u} {}

template <typename>
PROTOBUF_CONSTEXPR RegisterGateNodeRequest::RegisterGateNodeRequest(::_pbi::ConstantInitialized)
    : _impl_(::_pbi::ConstantInitialized()) {}
struct RegisterGateNodeRequestDefaultTypeInternal {
  PROTOBUF_CONSTEXPR RegisterGateNodeRequestDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~RegisterGateNodeRequestDefaultTypeInternal() {}
  union {
    RegisterGateNodeRequest _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 RegisterGateNodeRequestDefaultTypeInternal _RegisterGateNodeRequest_default_instance_;

inline constexpr RegisterGameNodeSessionResponse::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        session_info_{nullptr} {}

template <typename>
PROTOBUF_CONSTEXPR RegisterGameNodeSessionResponse::RegisterGameNodeSessionResponse(::_pbi::ConstantInitialized)
    : _impl_(::_pbi::ConstantInitialized()) {}
struct RegisterGameNodeSessionResponseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR RegisterGameNodeSessionResponseDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~RegisterGameNodeSessionResponseDefaultTypeInternal() {}
  union {
    RegisterGameNodeSessionResponse _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 RegisterGameNodeSessionResponseDefaultTypeInternal _RegisterGameNodeSessionResponse_default_instance_;

inline constexpr RegisterGameNodeSessionRequest::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        session_info_{nullptr},
        game_node_id_{0u} {}

template <typename>
PROTOBUF_CONSTEXPR RegisterGameNodeSessionRequest::RegisterGameNodeSessionRequest(::_pbi::ConstantInitialized)
    : _impl_(::_pbi::ConstantInitialized()) {}
struct RegisterGameNodeSessionRequestDefaultTypeInternal {
  PROTOBUF_CONSTEXPR RegisterGameNodeSessionRequestDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~RegisterGameNodeSessionRequestDefaultTypeInternal() {}
  union {
    RegisterGameNodeSessionRequest _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 RegisterGameNodeSessionRequestDefaultTypeInternal _RegisterGameNodeSessionRequest_default_instance_;

inline constexpr RegisterGameNodeRequest::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        rpc_client_{nullptr},
        rpc_server_{nullptr},
        game_node_id_{0u},
        server_type_{0u} {}

template <typename>
PROTOBUF_CONSTEXPR RegisterGameNodeRequest::RegisterGameNodeRequest(::_pbi::ConstantInitialized)
    : _impl_(::_pbi::ConstantInitialized()) {}
struct RegisterGameNodeRequestDefaultTypeInternal {
  PROTOBUF_CONSTEXPR RegisterGameNodeRequestDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~RegisterGameNodeRequestDefaultTypeInternal() {}
  union {
    RegisterGameNodeRequest _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 RegisterGameNodeRequestDefaultTypeInternal _RegisterGameNodeRequest_default_instance_;

inline constexpr RegisterCentreSessionNodeRequest::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        session_info_{nullptr},
        centre_node_id_{0u} {}

template <typename>
PROTOBUF_CONSTEXPR RegisterCentreSessionNodeRequest::RegisterCentreSessionNodeRequest(::_pbi::ConstantInitialized)
    : _impl_(::_pbi::ConstantInitialized()) {}
struct RegisterCentreSessionNodeRequestDefaultTypeInternal {
  PROTOBUF_CONSTEXPR RegisterCentreSessionNodeRequestDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~RegisterCentreSessionNodeRequestDefaultTypeInternal() {}
  union {
    RegisterCentreSessionNodeRequest _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 RegisterCentreSessionNodeRequestDefaultTypeInternal _RegisterCentreSessionNodeRequest_default_instance_;

inline constexpr PlayerNodeServiceRequest::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        body_{nullptr},
        head_{nullptr} {}

template <typename>
PROTOBUF_CONSTEXPR PlayerNodeServiceRequest::PlayerNodeServiceRequest(::_pbi::ConstantInitialized)
    : _impl_(::_pbi::ConstantInitialized()) {}
struct PlayerNodeServiceRequestDefaultTypeInternal {
  PROTOBUF_CONSTEXPR PlayerNodeServiceRequestDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~PlayerNodeServiceRequestDefaultTypeInternal() {}
  union {
    PlayerNodeServiceRequest _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 PlayerNodeServiceRequestDefaultTypeInternal _PlayerNodeServiceRequest_default_instance_;

inline constexpr PlayerMessageResponse::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        body_{nullptr},
        head_{nullptr} {}

template <typename>
PROTOBUF_CONSTEXPR PlayerMessageResponse::PlayerMessageResponse(::_pbi::ConstantInitialized)
    : _impl_(::_pbi::ConstantInitialized()) {}
struct PlayerMessageResponseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR PlayerMessageResponseDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~PlayerMessageResponseDefaultTypeInternal() {}
  union {
    PlayerMessageResponse _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 PlayerMessageResponseDefaultTypeInternal _PlayerMessageResponse_default_instance_;

inline constexpr NodeRouteMessageResponse::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        body_{nullptr},
        head_{nullptr} {}

template <typename>
PROTOBUF_CONSTEXPR NodeRouteMessageResponse::NodeRouteMessageResponse(::_pbi::ConstantInitialized)
    : _impl_(::_pbi::ConstantInitialized()) {}
struct NodeRouteMessageResponseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR NodeRouteMessageResponseDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~NodeRouteMessageResponseDefaultTypeInternal() {}
  union {
    NodeRouteMessageResponse _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 NodeRouteMessageResponseDefaultTypeInternal _NodeRouteMessageResponse_default_instance_;

inline constexpr NodeRouteMessageRequest::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        body_{nullptr},
        head_{nullptr} {}

template <typename>
PROTOBUF_CONSTEXPR NodeRouteMessageRequest::NodeRouteMessageRequest(::_pbi::ConstantInitialized)
    : _impl_(::_pbi::ConstantInitialized()) {}
struct NodeRouteMessageRequestDefaultTypeInternal {
  PROTOBUF_CONSTEXPR NodeRouteMessageRequestDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~NodeRouteMessageRequestDefaultTypeInternal() {}
  union {
    NodeRouteMessageRequest _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 NodeRouteMessageRequestDefaultTypeInternal _NodeRouteMessageRequest_default_instance_;

inline constexpr NodeRouteMessageBody::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        node_info_{nullptr} {}

template <typename>
PROTOBUF_CONSTEXPR NodeRouteMessageBody::NodeRouteMessageBody(::_pbi::ConstantInitialized)
    : _impl_(::_pbi::ConstantInitialized()) {}
struct NodeRouteMessageBodyDefaultTypeInternal {
  PROTOBUF_CONSTEXPR NodeRouteMessageBodyDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~NodeRouteMessageBodyDefaultTypeInternal() {}
  union {
    NodeRouteMessageBody _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 NodeRouteMessageBodyDefaultTypeInternal _NodeRouteMessageBody_default_instance_;

inline constexpr GateSessionDisconnectRequest::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        session_info_{nullptr} {}

template <typename>
PROTOBUF_CONSTEXPR GateSessionDisconnectRequest::GateSessionDisconnectRequest(::_pbi::ConstantInitialized)
    : _impl_(::_pbi::ConstantInitialized()) {}
struct GateSessionDisconnectRequestDefaultTypeInternal {
  PROTOBUF_CONSTEXPR GateSessionDisconnectRequestDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~GateSessionDisconnectRequestDefaultTypeInternal() {}
  union {
    GateSessionDisconnectRequest _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 GateSessionDisconnectRequestDefaultTypeInternal _GateSessionDisconnectRequest_default_instance_;

inline constexpr RouteMsgStringResponse::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : route_data_list_{},
        body_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        session_id_{::uint64_t{0u}},
        id_{::uint64_t{0u}},
        is_client_{false},
        _cached_size_{0} {}

template <typename>
PROTOBUF_CONSTEXPR RouteMsgStringResponse::RouteMsgStringResponse(::_pbi::ConstantInitialized)
    : _impl_(::_pbi::ConstantInitialized()) {}
struct RouteMsgStringResponseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR RouteMsgStringResponseDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~RouteMsgStringResponseDefaultTypeInternal() {}
  union {
    RouteMsgStringResponse _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 RouteMsgStringResponseDefaultTypeInternal _RouteMsgStringResponse_default_instance_;

inline constexpr RouteMsgStringRequest::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : route_data_list_{},
        body_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        session_id_{::uint64_t{0u}},
        id_{::uint64_t{0u}},
        is_client_{false},
        _cached_size_{0} {}

template <typename>
PROTOBUF_CONSTEXPR RouteMsgStringRequest::RouteMsgStringRequest(::_pbi::ConstantInitialized)
    : _impl_(::_pbi::ConstantInitialized()) {}
struct RouteMsgStringRequestDefaultTypeInternal {
  PROTOBUF_CONSTEXPR RouteMsgStringRequestDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~RouteMsgStringRequestDefaultTypeInternal() {}
  union {
    RouteMsgStringRequest _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 RouteMsgStringRequestDefaultTypeInternal _RouteMsgStringRequest_default_instance_;
static ::_pb::Metadata file_level_metadata_common_2fcommon_5fmessage_2eproto[22];
static constexpr const ::_pb::EnumDescriptor**
    file_level_enum_descriptors_common_2fcommon_5fmessage_2eproto = nullptr;
static constexpr const ::_pb::ServiceDescriptor**
    file_level_service_descriptors_common_2fcommon_5fmessage_2eproto = nullptr;
const ::uint32_t
    TableStruct_common_2fcommon_5fmessage_2eproto::offsets[] ABSL_ATTRIBUTE_SECTION_VARIABLE(
        protodesc_cold) = {
        PROTOBUF_FIELD_OFFSET(::RouteNodeInfo, _impl_._has_bits_),
        PROTOBUF_FIELD_OFFSET(::RouteNodeInfo, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::RouteNodeInfo, _impl_.node_info_),
        PROTOBUF_FIELD_OFFSET(::RouteNodeInfo, _impl_.message_id_),
        0,
        ~0u,
        ~0u,  // no _has_bits_
        PROTOBUF_FIELD_OFFSET(::MessageBody, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::MessageBody, _impl_.body_),
        PROTOBUF_FIELD_OFFSET(::MessageBody, _impl_.message_id_),
        PROTOBUF_FIELD_OFFSET(::MessageBody, _impl_.id_),
        ~0u,  // no _has_bits_
        PROTOBUF_FIELD_OFFSET(::NodeMessageHead, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::NodeMessageHead, _impl_.node_id_),
        PROTOBUF_FIELD_OFFSET(::NodeMessageHead, _impl_.session_id_),
        PROTOBUF_FIELD_OFFSET(::NodeRouteMessageRequest, _impl_._has_bits_),
        PROTOBUF_FIELD_OFFSET(::NodeRouteMessageRequest, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::NodeRouteMessageRequest, _impl_.body_),
        PROTOBUF_FIELD_OFFSET(::NodeRouteMessageRequest, _impl_.head_),
        0,
        1,
        PROTOBUF_FIELD_OFFSET(::NodeRouteMessageResponse, _impl_._has_bits_),
        PROTOBUF_FIELD_OFFSET(::NodeRouteMessageResponse, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::NodeRouteMessageResponse, _impl_.body_),
        PROTOBUF_FIELD_OFFSET(::NodeRouteMessageResponse, _impl_.head_),
        0,
        1,
        ~0u,  // no _has_bits_
        PROTOBUF_FIELD_OFFSET(::PlayerMessageExtern, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::PlayerMessageExtern, _impl_.player_id_),
        PROTOBUF_FIELD_OFFSET(::PlayerNodeServiceRequest, _impl_._has_bits_),
        PROTOBUF_FIELD_OFFSET(::PlayerNodeServiceRequest, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::PlayerNodeServiceRequest, _impl_.body_),
        PROTOBUF_FIELD_OFFSET(::PlayerNodeServiceRequest, _impl_.head_),
        0,
        1,
        PROTOBUF_FIELD_OFFSET(::PlayerMessageResponse, _impl_._has_bits_),
        PROTOBUF_FIELD_OFFSET(::PlayerMessageResponse, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::PlayerMessageResponse, _impl_.body_),
        PROTOBUF_FIELD_OFFSET(::PlayerMessageResponse, _impl_.head_),
        0,
        1,
        PROTOBUF_FIELD_OFFSET(::NodeRouteMessageBody, _impl_._has_bits_),
        PROTOBUF_FIELD_OFFSET(::NodeRouteMessageBody, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::NodeRouteMessageBody, _impl_.node_info_),
        0,
        PROTOBUF_FIELD_OFFSET(::RegisterGameNodeSessionRequest, _impl_._has_bits_),
        PROTOBUF_FIELD_OFFSET(::RegisterGameNodeSessionRequest, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::RegisterGameNodeSessionRequest, _impl_.session_info_),
        PROTOBUF_FIELD_OFFSET(::RegisterGameNodeSessionRequest, _impl_.game_node_id_),
        0,
        ~0u,
        PROTOBUF_FIELD_OFFSET(::RegisterGameNodeSessionResponse, _impl_._has_bits_),
        PROTOBUF_FIELD_OFFSET(::RegisterGameNodeSessionResponse, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::RegisterGameNodeSessionResponse, _impl_.session_info_),
        0,
        PROTOBUF_FIELD_OFFSET(::RegisterSessionGateNodeResponse, _impl_._has_bits_),
        PROTOBUF_FIELD_OFFSET(::RegisterSessionGateNodeResponse, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::RegisterSessionGateNodeResponse, _impl_.session_info_),
        0,
        PROTOBUF_FIELD_OFFSET(::RegisterCentreSessionNodeRequest, _impl_._has_bits_),
        PROTOBUF_FIELD_OFFSET(::RegisterCentreSessionNodeRequest, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::RegisterCentreSessionNodeRequest, _impl_.session_info_),
        PROTOBUF_FIELD_OFFSET(::RegisterCentreSessionNodeRequest, _impl_.centre_node_id_),
        0,
        ~0u,
        PROTOBUF_FIELD_OFFSET(::RegisterSessionCentreNodeResponse, _impl_._has_bits_),
        PROTOBUF_FIELD_OFFSET(::RegisterSessionCentreNodeResponse, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::RegisterSessionCentreNodeResponse, _impl_.session_info_),
        0,
        PROTOBUF_FIELD_OFFSET(::GateSessionDisconnectRequest, _impl_._has_bits_),
        PROTOBUF_FIELD_OFFSET(::GateSessionDisconnectRequest, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::GateSessionDisconnectRequest, _impl_.session_info_),
        0,
        ~0u,  // no _has_bits_
        PROTOBUF_FIELD_OFFSET(::RouteMsgStringRequest, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::RouteMsgStringRequest, _impl_.body_),
        PROTOBUF_FIELD_OFFSET(::RouteMsgStringRequest, _impl_.route_data_list_),
        PROTOBUF_FIELD_OFFSET(::RouteMsgStringRequest, _impl_.session_id_),
        PROTOBUF_FIELD_OFFSET(::RouteMsgStringRequest, _impl_.id_),
        PROTOBUF_FIELD_OFFSET(::RouteMsgStringRequest, _impl_.is_client_),
        ~0u,  // no _has_bits_
        PROTOBUF_FIELD_OFFSET(::RouteMsgStringResponse, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::RouteMsgStringResponse, _impl_.body_),
        PROTOBUF_FIELD_OFFSET(::RouteMsgStringResponse, _impl_.route_data_list_),
        PROTOBUF_FIELD_OFFSET(::RouteMsgStringResponse, _impl_.session_id_),
        PROTOBUF_FIELD_OFFSET(::RouteMsgStringResponse, _impl_.id_),
        PROTOBUF_FIELD_OFFSET(::RouteMsgStringResponse, _impl_.is_client_),
        PROTOBUF_FIELD_OFFSET(::RoutePlayerMsgStringRequest, _impl_._has_bits_),
        PROTOBUF_FIELD_OFFSET(::RoutePlayerMsgStringRequest, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::RoutePlayerMsgStringRequest, _impl_.body_),
        PROTOBUF_FIELD_OFFSET(::RoutePlayerMsgStringRequest, _impl_.node_list_),
        PROTOBUF_FIELD_OFFSET(::RoutePlayerMsgStringRequest, _impl_.player_ex_),
        ~0u,
        ~0u,
        0,
        PROTOBUF_FIELD_OFFSET(::RoutePlayerMsgStringResponse, _impl_._has_bits_),
        PROTOBUF_FIELD_OFFSET(::RoutePlayerMsgStringResponse, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::RoutePlayerMsgStringResponse, _impl_.body_),
        PROTOBUF_FIELD_OFFSET(::RoutePlayerMsgStringResponse, _impl_.node_list_),
        PROTOBUF_FIELD_OFFSET(::RoutePlayerMsgStringResponse, _impl_.player_ex_),
        ~0u,
        ~0u,
        0,
        PROTOBUF_FIELD_OFFSET(::RegisterGameNodeRequest, _impl_._has_bits_),
        PROTOBUF_FIELD_OFFSET(::RegisterGameNodeRequest, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::RegisterGameNodeRequest, _impl_.rpc_client_),
        PROTOBUF_FIELD_OFFSET(::RegisterGameNodeRequest, _impl_.rpc_server_),
        PROTOBUF_FIELD_OFFSET(::RegisterGameNodeRequest, _impl_.game_node_id_),
        PROTOBUF_FIELD_OFFSET(::RegisterGameNodeRequest, _impl_.server_type_),
        0,
        1,
        ~0u,
        ~0u,
        PROTOBUF_FIELD_OFFSET(::RegisterGateNodeRequest, _impl_._has_bits_),
        PROTOBUF_FIELD_OFFSET(::RegisterGateNodeRequest, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::RegisterGateNodeRequest, _impl_.rpc_client_),
        PROTOBUF_FIELD_OFFSET(::RegisterGateNodeRequest, _impl_.gate_node_id_),
        0,
        ~0u,
        ~0u,  // no _has_bits_
        PROTOBUF_FIELD_OFFSET(::UnRegisterGameNodeRequest, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::UnRegisterGameNodeRequest, _impl_.game_node_id_),
};

static const ::_pbi::MigrationSchema
    schemas[] ABSL_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
        {0, 10, -1, sizeof(::RouteNodeInfo)},
        {12, -1, -1, sizeof(::MessageBody)},
        {23, -1, -1, sizeof(::NodeMessageHead)},
        {33, 43, -1, sizeof(::NodeRouteMessageRequest)},
        {45, 55, -1, sizeof(::NodeRouteMessageResponse)},
        {57, -1, -1, sizeof(::PlayerMessageExtern)},
        {66, 76, -1, sizeof(::PlayerNodeServiceRequest)},
        {78, 88, -1, sizeof(::PlayerMessageResponse)},
        {90, 99, -1, sizeof(::NodeRouteMessageBody)},
        {100, 110, -1, sizeof(::RegisterGameNodeSessionRequest)},
        {112, 121, -1, sizeof(::RegisterGameNodeSessionResponse)},
        {122, 131, -1, sizeof(::RegisterSessionGateNodeResponse)},
        {132, 142, -1, sizeof(::RegisterCentreSessionNodeRequest)},
        {144, 153, -1, sizeof(::RegisterSessionCentreNodeResponse)},
        {154, 163, -1, sizeof(::GateSessionDisconnectRequest)},
        {164, -1, -1, sizeof(::RouteMsgStringRequest)},
        {177, -1, -1, sizeof(::RouteMsgStringResponse)},
        {190, 201, -1, sizeof(::RoutePlayerMsgStringRequest)},
        {204, 215, -1, sizeof(::RoutePlayerMsgStringResponse)},
        {218, 230, -1, sizeof(::RegisterGameNodeRequest)},
        {234, 244, -1, sizeof(::RegisterGateNodeRequest)},
        {246, -1, -1, sizeof(::UnRegisterGameNodeRequest)},
};
static const ::_pb::Message* const file_default_instances[] = {
    &::_RouteNodeInfo_default_instance_._instance,
    &::_MessageBody_default_instance_._instance,
    &::_NodeMessageHead_default_instance_._instance,
    &::_NodeRouteMessageRequest_default_instance_._instance,
    &::_NodeRouteMessageResponse_default_instance_._instance,
    &::_PlayerMessageExtern_default_instance_._instance,
    &::_PlayerNodeServiceRequest_default_instance_._instance,
    &::_PlayerMessageResponse_default_instance_._instance,
    &::_NodeRouteMessageBody_default_instance_._instance,
    &::_RegisterGameNodeSessionRequest_default_instance_._instance,
    &::_RegisterGameNodeSessionResponse_default_instance_._instance,
    &::_RegisterSessionGateNodeResponse_default_instance_._instance,
    &::_RegisterCentreSessionNodeRequest_default_instance_._instance,
    &::_RegisterSessionCentreNodeResponse_default_instance_._instance,
    &::_GateSessionDisconnectRequest_default_instance_._instance,
    &::_RouteMsgStringRequest_default_instance_._instance,
    &::_RouteMsgStringResponse_default_instance_._instance,
    &::_RoutePlayerMsgStringRequest_default_instance_._instance,
    &::_RoutePlayerMsgStringResponse_default_instance_._instance,
    &::_RegisterGameNodeRequest_default_instance_._instance,
    &::_RegisterGateNodeRequest_default_instance_._instance,
    &::_UnRegisterGameNodeRequest_default_instance_._instance,
};
const char descriptor_table_protodef_common_2fcommon_5fmessage_2eproto[] ABSL_ATTRIBUTE_SECTION_VARIABLE(
    protodesc_cold) = {
    "\n\033common/common_message.proto\032\023common/co"
    "mmon.proto\032\024common/session.proto\"A\n\rRout"
    "eNodeInfo\022\034\n\tnode_info\030\001 \001(\0132\t.NodeInfo\022"
    "\022\n\nmessage_id\030\002 \001(\r\";\n\013MessageBody\022\014\n\004bo"
    "dy\030\001 \001(\014\022\022\n\nmessage_id\030\002 \001(\r\022\n\n\002id\030\003 \001(\004"
    "\"6\n\017NodeMessageHead\022\017\n\007node_id\030\001 \001(\r\022\022\n\n"
    "session_id\030\002 \001(\004\"U\n\027NodeRouteMessageRequ"
    "est\022\032\n\004body\030\001 \001(\0132\014.MessageBody\022\036\n\004head\030"
    "\002 \001(\0132\020.NodeMessageHead\"V\n\030NodeRouteMess"
    "ageResponse\022\032\n\004body\030\001 \001(\0132\014.MessageBody\022"
    "\036\n\004head\030\002 \001(\0132\020.NodeMessageHead\"(\n\023Playe"
    "rMessageExtern\022\021\n\tplayer_id\030\001 \001(\004\"Z\n\030Pla"
    "yerNodeServiceRequest\022\032\n\004body\030\001 \001(\0132\014.Me"
    "ssageBody\022\"\n\004head\030\002 \001(\0132\024.PlayerMessageE"
    "xtern\"W\n\025PlayerMessageResponse\022\032\n\004body\030\001"
    " \001(\0132\014.MessageBody\022\"\n\004head\030\002 \001(\0132\024.Playe"
    "rMessageExtern\"4\n\024NodeRouteMessageBody\022\034"
    "\n\tnode_info\030\002 \001(\0132\t.NodeInfo\"]\n\036Register"
    "GameNodeSessionRequest\022%\n\014session_info\030\001"
    " \001(\0132\017.SessionDetails\022\024\n\014game_node_id\030\002 "
    "\001(\r\"H\n\037RegisterGameNodeSessionResponse\022%"
    "\n\014session_info\030\001 \001(\0132\017.SessionDetails\"H\n"
    "\037RegisterSessionGateNodeResponse\022%\n\014sess"
    "ion_info\030\001 \001(\0132\017.SessionDetails\"a\n Regis"
    "terCentreSessionNodeRequest\022%\n\014session_i"
    "nfo\030\001 \001(\0132\017.SessionDetails\022\026\n\016centre_nod"
    "e_id\030\002 \001(\r\"J\n!RegisterSessionCentreNodeR"
    "esponse\022%\n\014session_info\030\001 \001(\0132\017.SessionD"
    "etails\"E\n\034GateSessionDisconnectRequest\022%"
    "\n\014session_info\030\001 \001(\0132\017.SessionDetails\"\201\001"
    "\n\025RouteMsgStringRequest\022\014\n\004body\030\001 \001(\014\022\'\n"
    "\017route_data_list\030\002 \003(\0132\016.RouteNodeInfo\022\022"
    "\n\nsession_id\030\003 \001(\004\022\n\n\002id\030\004 \001(\004\022\021\n\tis_cli"
    "ent\030\005 \001(\010\"\202\001\n\026RouteMsgStringResponse\022\014\n\004"
    "body\030\001 \001(\014\022\'\n\017route_data_list\030\002 \003(\0132\016.Ro"
    "uteNodeInfo\022\022\n\nsession_id\030\003 \001(\004\022\n\n\002id\030\004 "
    "\001(\004\022\021\n\tis_client\030\005 \001(\010\"r\n\033RoutePlayerMsg"
    "StringRequest\022\014\n\004body\030\001 \001(\014\022\034\n\tnode_list"
    "\030\002 \003(\0132\t.NodeInfo\022\'\n\tplayer_ex\030\003 \001(\0132\024.P"
    "layerMessageExtern\"s\n\034RoutePlayerMsgStri"
    "ngResponse\022\014\n\004body\030\001 \001(\014\022\034\n\tnode_list\030\002 "
    "\003(\0132\t.NodeInfo\022\'\n\tplayer_ex\030\003 \001(\0132\024.Play"
    "erMessageExtern\"\216\001\n\027RegisterGameNodeRequ"
    "est\022#\n\nrpc_client\030\001 \001(\0132\017.NetworkAddress"
    "\022#\n\nrpc_server\030\002 \001(\0132\017.NetworkAddress\022\024\n"
    "\014game_node_id\030\003 \001(\r\022\023\n\013server_type\030\004 \001(\r"
    "\"T\n\027RegisterGateNodeRequest\022#\n\nrpc_clien"
    "t\030\001 \001(\0132\017.NetworkAddress\022\024\n\014gate_node_id"
    "\030\002 \001(\r\"1\n\031UnRegisterGameNodeRequest\022\024\n\014g"
    "ame_node_id\030\001 \001(\rB\tZ\007pb/gameb\006proto3"
};
static const ::_pbi::DescriptorTable* const descriptor_table_common_2fcommon_5fmessage_2eproto_deps[2] =
    {
        &::descriptor_table_common_2fcommon_2eproto,
        &::descriptor_table_common_2fsession_2eproto,
};
static ::absl::once_flag descriptor_table_common_2fcommon_5fmessage_2eproto_once;
const ::_pbi::DescriptorTable descriptor_table_common_2fcommon_5fmessage_2eproto = {
    false,
    false,
    1996,
    descriptor_table_protodef_common_2fcommon_5fmessage_2eproto,
    "common/common_message.proto",
    &descriptor_table_common_2fcommon_5fmessage_2eproto_once,
    descriptor_table_common_2fcommon_5fmessage_2eproto_deps,
    2,
    22,
    schemas,
    file_default_instances,
    TableStruct_common_2fcommon_5fmessage_2eproto::offsets,
    file_level_metadata_common_2fcommon_5fmessage_2eproto,
    file_level_enum_descriptors_common_2fcommon_5fmessage_2eproto,
    file_level_service_descriptors_common_2fcommon_5fmessage_2eproto,
};

// This function exists to be marked as weak.
// It can significantly speed up compilation by breaking up LLVM's SCC
// in the .pb.cc translation units. Large translation units see a
// reduction of more than 35% of walltime for optimized builds. Without
// the weak attribute all the messages in the file, including all the
// vtables and everything they use become part of the same SCC through
// a cycle like:
// GetMetadata -> descriptor table -> default instances ->
//   vtables -> GetMetadata
// By adding a weak function here we break the connection from the
// individual vtables back into the descriptor table.
PROTOBUF_ATTRIBUTE_WEAK const ::_pbi::DescriptorTable* descriptor_table_common_2fcommon_5fmessage_2eproto_getter() {
  return &descriptor_table_common_2fcommon_5fmessage_2eproto;
}
// ===================================================================

class RouteNodeInfo::_Internal {
 public:
  using HasBits = decltype(std::declval<RouteNodeInfo>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
    8 * PROTOBUF_FIELD_OFFSET(RouteNodeInfo, _impl_._has_bits_);
};

void RouteNodeInfo::clear_node_info() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  if (_impl_.node_info_ != nullptr) _impl_.node_info_->Clear();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
RouteNodeInfo::RouteNodeInfo(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:RouteNodeInfo)
}
inline PROTOBUF_NDEBUG_INLINE RouteNodeInfo::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from)
      : _has_bits_{from._has_bits_},
        _cached_size_{0} {}

RouteNodeInfo::RouteNodeInfo(
    ::google::protobuf::Arena* arena,
    const RouteNodeInfo& from)
    : ::google::protobuf::Message(arena) {
  RouteNodeInfo* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_);
  ::uint32_t cached_has_bits = _impl_._has_bits_[0];
  _impl_.node_info_ = (cached_has_bits & 0x00000001u) ? ::google::protobuf::Message::CopyConstruct<::NodeInfo>(
                              arena, *from._impl_.node_info_)
                        : nullptr;
  _impl_.message_id_ = from._impl_.message_id_;

  // @@protoc_insertion_point(copy_constructor:RouteNodeInfo)
}
inline PROTOBUF_NDEBUG_INLINE RouteNodeInfo::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0} {}

inline void RouteNodeInfo::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, node_info_),
           0,
           offsetof(Impl_, message_id_) -
               offsetof(Impl_, node_info_) +
               sizeof(Impl_::message_id_));
}
RouteNodeInfo::~RouteNodeInfo() {
  // @@protoc_insertion_point(destructor:RouteNodeInfo)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void RouteNodeInfo::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  delete _impl_.node_info_;
  _impl_.~Impl_();
}

const ::google::protobuf::MessageLite::ClassData*
RouteNodeInfo::GetClassData() const {
  PROTOBUF_CONSTINIT static const ::google::protobuf::MessageLite::
      ClassDataFull _data_ = {
          {
              nullptr,  // OnDemandRegisterArenaDtor
              PROTOBUF_FIELD_OFFSET(RouteNodeInfo, _impl_._cached_size_),
              false,
          },
          &RouteNodeInfo::MergeImpl,
          &RouteNodeInfo::kDescriptorMethods,
      };
  return &_data_;
}
PROTOBUF_NOINLINE void RouteNodeInfo::Clear() {
// @@protoc_insertion_point(message_clear_start:RouteNodeInfo)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    ABSL_DCHECK(_impl_.node_info_ != nullptr);
    _impl_.node_info_->Clear();
  }
  _impl_.message_id_ = 0u;
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* RouteNodeInfo::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<1, 2, 1, 0, 2> RouteNodeInfo::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(RouteNodeInfo, _impl_._has_bits_),
    0, // no _extensions_
    2, 8,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967292,  // skipmap
    offsetof(decltype(_table_), field_entries),
    2,  // num_field_entries
    1,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    &_RouteNodeInfo_default_instance_._instance,
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::RouteNodeInfo>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // uint32 message_id = 2;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(RouteNodeInfo, _impl_.message_id_), 63>(),
     {16, 63, 0, PROTOBUF_FIELD_OFFSET(RouteNodeInfo, _impl_.message_id_)}},
    // .NodeInfo node_info = 1;
    {::_pbi::TcParser::FastMtS1,
     {10, 0, 0, PROTOBUF_FIELD_OFFSET(RouteNodeInfo, _impl_.node_info_)}},
  }}, {{
    65535, 65535
  }}, {{
    // .NodeInfo node_info = 1;
    {PROTOBUF_FIELD_OFFSET(RouteNodeInfo, _impl_.node_info_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
    // uint32 message_id = 2;
    {PROTOBUF_FIELD_OFFSET(RouteNodeInfo, _impl_.message_id_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUInt32)},
  }}, {{
    {::_pbi::TcParser::GetTable<::NodeInfo>()},
  }}, {{
  }},
};

::uint8_t* RouteNodeInfo::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:RouteNodeInfo)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  // .NodeInfo node_info = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
        1, *_impl_.node_info_, _impl_.node_info_->GetCachedSize(), target, stream);
  }

  // uint32 message_id = 2;
  if (this->_internal_message_id() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt32ToArray(
        2, this->_internal_message_id(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:RouteNodeInfo)
  return target;
}

::size_t RouteNodeInfo::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:RouteNodeInfo)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // .NodeInfo node_info = 1;
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    total_size +=
        1 + ::google::protobuf::internal::WireFormatLite::MessageSize(*_impl_.node_info_);
  }

  // uint32 message_id = 2;
  if (this->_internal_message_id() != 0) {
    total_size += ::_pbi::WireFormatLite::UInt32SizePlusOne(
        this->_internal_message_id());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}


void RouteNodeInfo::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<RouteNodeInfo*>(&to_msg);
  auto& from = static_cast<const RouteNodeInfo&>(from_msg);
  ::google::protobuf::Arena* arena = _this->GetArena();
  // @@protoc_insertion_point(class_specific_merge_from_start:RouteNodeInfo)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    ABSL_DCHECK(from._impl_.node_info_ != nullptr);
    if (_this->_impl_.node_info_ == nullptr) {
      _this->_impl_.node_info_ =
          ::google::protobuf::Message::CopyConstruct<::NodeInfo>(arena, *from._impl_.node_info_);
    } else {
      _this->_impl_.node_info_->MergeFrom(*from._impl_.node_info_);
    }
  }
  if (from._internal_message_id() != 0) {
    _this->_impl_.message_id_ = from._impl_.message_id_;
  }
  _this->_impl_._has_bits_[0] |= cached_has_bits;
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void RouteNodeInfo::CopyFrom(const RouteNodeInfo& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:RouteNodeInfo)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool RouteNodeInfo::IsInitialized() const {
  return true;
}

void RouteNodeInfo::InternalSwap(RouteNodeInfo* PROTOBUF_RESTRICT other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(RouteNodeInfo, _impl_.message_id_)
      + sizeof(RouteNodeInfo::_impl_.message_id_)
      - PROTOBUF_FIELD_OFFSET(RouteNodeInfo, _impl_.node_info_)>(
          reinterpret_cast<char*>(&_impl_.node_info_),
          reinterpret_cast<char*>(&other->_impl_.node_info_));
}

::google::protobuf::Metadata RouteNodeInfo::GetMetadata() const {
  return ::_pbi::AssignDescriptors(&descriptor_table_common_2fcommon_5fmessage_2eproto_getter,
                                   &descriptor_table_common_2fcommon_5fmessage_2eproto_once,
                                   file_level_metadata_common_2fcommon_5fmessage_2eproto[0]);
}
// ===================================================================

class MessageBody::_Internal {
 public:
};

MessageBody::MessageBody(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:MessageBody)
}
inline PROTOBUF_NDEBUG_INLINE MessageBody::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from)
      : body_(arena, from.body_),
        _cached_size_{0} {}

MessageBody::MessageBody(
    ::google::protobuf::Arena* arena,
    const MessageBody& from)
    : ::google::protobuf::Message(arena) {
  MessageBody* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_);
  ::memcpy(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, id_),
           reinterpret_cast<const char *>(&from._impl_) +
               offsetof(Impl_, id_),
           offsetof(Impl_, message_id_) -
               offsetof(Impl_, id_) +
               sizeof(Impl_::message_id_));

  // @@protoc_insertion_point(copy_constructor:MessageBody)
}
inline PROTOBUF_NDEBUG_INLINE MessageBody::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : body_(arena),
        _cached_size_{0} {}

inline void MessageBody::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, id_),
           0,
           offsetof(Impl_, message_id_) -
               offsetof(Impl_, id_) +
               sizeof(Impl_::message_id_));
}
MessageBody::~MessageBody() {
  // @@protoc_insertion_point(destructor:MessageBody)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void MessageBody::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  _impl_.body_.Destroy();
  _impl_.~Impl_();
}

const ::google::protobuf::MessageLite::ClassData*
MessageBody::GetClassData() const {
  PROTOBUF_CONSTINIT static const ::google::protobuf::MessageLite::
      ClassDataFull _data_ = {
          {
              nullptr,  // OnDemandRegisterArenaDtor
              PROTOBUF_FIELD_OFFSET(MessageBody, _impl_._cached_size_),
              false,
          },
          &MessageBody::MergeImpl,
          &MessageBody::kDescriptorMethods,
      };
  return &_data_;
}
PROTOBUF_NOINLINE void MessageBody::Clear() {
// @@protoc_insertion_point(message_clear_start:MessageBody)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.body_.ClearToEmpty();
  ::memset(&_impl_.id_, 0, static_cast<::size_t>(
      reinterpret_cast<char*>(&_impl_.message_id_) -
      reinterpret_cast<char*>(&_impl_.id_)) + sizeof(_impl_.message_id_));
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* MessageBody::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<2, 3, 0, 0, 2> MessageBody::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    3, 24,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967288,  // skipmap
    offsetof(decltype(_table_), field_entries),
    3,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    &_MessageBody_default_instance_._instance,
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::MessageBody>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
    // bytes body = 1;
    {::_pbi::TcParser::FastBS1,
     {10, 63, 0, PROTOBUF_FIELD_OFFSET(MessageBody, _impl_.body_)}},
    // uint32 message_id = 2;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(MessageBody, _impl_.message_id_), 63>(),
     {16, 63, 0, PROTOBUF_FIELD_OFFSET(MessageBody, _impl_.message_id_)}},
    // uint64 id = 3;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint64_t, offsetof(MessageBody, _impl_.id_), 63>(),
     {24, 63, 0, PROTOBUF_FIELD_OFFSET(MessageBody, _impl_.id_)}},
  }}, {{
    65535, 65535
  }}, {{
    // bytes body = 1;
    {PROTOBUF_FIELD_OFFSET(MessageBody, _impl_.body_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kBytes | ::_fl::kRepAString)},
    // uint32 message_id = 2;
    {PROTOBUF_FIELD_OFFSET(MessageBody, _impl_.message_id_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUInt32)},
    // uint64 id = 3;
    {PROTOBUF_FIELD_OFFSET(MessageBody, _impl_.id_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUInt64)},
  }},
  // no aux_entries
  {{
  }},
};

::uint8_t* MessageBody::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:MessageBody)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  // bytes body = 1;
  if (!this->_internal_body().empty()) {
    const std::string& _s = this->_internal_body();
    target = stream->WriteBytesMaybeAliased(1, _s, target);
  }

  // uint32 message_id = 2;
  if (this->_internal_message_id() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt32ToArray(
        2, this->_internal_message_id(), target);
  }

  // uint64 id = 3;
  if (this->_internal_id() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt64ToArray(
        3, this->_internal_id(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:MessageBody)
  return target;
}

::size_t MessageBody::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:MessageBody)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // bytes body = 1;
  if (!this->_internal_body().empty()) {
    total_size += 1 + ::google::protobuf::internal::WireFormatLite::BytesSize(
                                    this->_internal_body());
  }

  // uint64 id = 3;
  if (this->_internal_id() != 0) {
    total_size += ::_pbi::WireFormatLite::UInt64SizePlusOne(
        this->_internal_id());
  }

  // uint32 message_id = 2;
  if (this->_internal_message_id() != 0) {
    total_size += ::_pbi::WireFormatLite::UInt32SizePlusOne(
        this->_internal_message_id());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}


void MessageBody::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<MessageBody*>(&to_msg);
  auto& from = static_cast<const MessageBody&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:MessageBody)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_body().empty()) {
    _this->_internal_set_body(from._internal_body());
  }
  if (from._internal_id() != 0) {
    _this->_impl_.id_ = from._impl_.id_;
  }
  if (from._internal_message_id() != 0) {
    _this->_impl_.message_id_ = from._impl_.message_id_;
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void MessageBody::CopyFrom(const MessageBody& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:MessageBody)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool MessageBody::IsInitialized() const {
  return true;
}

void MessageBody::InternalSwap(MessageBody* PROTOBUF_RESTRICT other) {
  using std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.body_, &other->_impl_.body_, arena);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(MessageBody, _impl_.message_id_)
      + sizeof(MessageBody::_impl_.message_id_)
      - PROTOBUF_FIELD_OFFSET(MessageBody, _impl_.id_)>(
          reinterpret_cast<char*>(&_impl_.id_),
          reinterpret_cast<char*>(&other->_impl_.id_));
}

::google::protobuf::Metadata MessageBody::GetMetadata() const {
  return ::_pbi::AssignDescriptors(&descriptor_table_common_2fcommon_5fmessage_2eproto_getter,
                                   &descriptor_table_common_2fcommon_5fmessage_2eproto_once,
                                   file_level_metadata_common_2fcommon_5fmessage_2eproto[1]);
}
// ===================================================================

class NodeMessageHead::_Internal {
 public:
};

NodeMessageHead::NodeMessageHead(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:NodeMessageHead)
}
NodeMessageHead::NodeMessageHead(
    ::google::protobuf::Arena* arena, const NodeMessageHead& from)
    : NodeMessageHead(arena) {
  MergeFrom(from);
}
inline PROTOBUF_NDEBUG_INLINE NodeMessageHead::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0} {}

inline void NodeMessageHead::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, session_id_),
           0,
           offsetof(Impl_, node_id_) -
               offsetof(Impl_, session_id_) +
               sizeof(Impl_::node_id_));
}
NodeMessageHead::~NodeMessageHead() {
  // @@protoc_insertion_point(destructor:NodeMessageHead)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void NodeMessageHead::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  _impl_.~Impl_();
}

const ::google::protobuf::MessageLite::ClassData*
NodeMessageHead::GetClassData() const {
  PROTOBUF_CONSTINIT static const ::google::protobuf::MessageLite::
      ClassDataFull _data_ = {
          {
              nullptr,  // OnDemandRegisterArenaDtor
              PROTOBUF_FIELD_OFFSET(NodeMessageHead, _impl_._cached_size_),
              false,
          },
          &NodeMessageHead::MergeImpl,
          &NodeMessageHead::kDescriptorMethods,
      };
  return &_data_;
}
PROTOBUF_NOINLINE void NodeMessageHead::Clear() {
// @@protoc_insertion_point(message_clear_start:NodeMessageHead)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&_impl_.session_id_, 0, static_cast<::size_t>(
      reinterpret_cast<char*>(&_impl_.node_id_) -
      reinterpret_cast<char*>(&_impl_.session_id_)) + sizeof(_impl_.node_id_));
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* NodeMessageHead::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<1, 2, 0, 0, 2> NodeMessageHead::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    2, 8,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967292,  // skipmap
    offsetof(decltype(_table_), field_entries),
    2,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    &_NodeMessageHead_default_instance_._instance,
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::NodeMessageHead>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // uint64 session_id = 2;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint64_t, offsetof(NodeMessageHead, _impl_.session_id_), 63>(),
     {16, 63, 0, PROTOBUF_FIELD_OFFSET(NodeMessageHead, _impl_.session_id_)}},
    // uint32 node_id = 1;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(NodeMessageHead, _impl_.node_id_), 63>(),
     {8, 63, 0, PROTOBUF_FIELD_OFFSET(NodeMessageHead, _impl_.node_id_)}},
  }}, {{
    65535, 65535
  }}, {{
    // uint32 node_id = 1;
    {PROTOBUF_FIELD_OFFSET(NodeMessageHead, _impl_.node_id_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUInt32)},
    // uint64 session_id = 2;
    {PROTOBUF_FIELD_OFFSET(NodeMessageHead, _impl_.session_id_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUInt64)},
  }},
  // no aux_entries
  {{
  }},
};

::uint8_t* NodeMessageHead::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:NodeMessageHead)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  // uint32 node_id = 1;
  if (this->_internal_node_id() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt32ToArray(
        1, this->_internal_node_id(), target);
  }

  // uint64 session_id = 2;
  if (this->_internal_session_id() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt64ToArray(
        2, this->_internal_session_id(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:NodeMessageHead)
  return target;
}

::size_t NodeMessageHead::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:NodeMessageHead)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // uint64 session_id = 2;
  if (this->_internal_session_id() != 0) {
    total_size += ::_pbi::WireFormatLite::UInt64SizePlusOne(
        this->_internal_session_id());
  }

  // uint32 node_id = 1;
  if (this->_internal_node_id() != 0) {
    total_size += ::_pbi::WireFormatLite::UInt32SizePlusOne(
        this->_internal_node_id());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}


void NodeMessageHead::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<NodeMessageHead*>(&to_msg);
  auto& from = static_cast<const NodeMessageHead&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:NodeMessageHead)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_session_id() != 0) {
    _this->_impl_.session_id_ = from._impl_.session_id_;
  }
  if (from._internal_node_id() != 0) {
    _this->_impl_.node_id_ = from._impl_.node_id_;
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void NodeMessageHead::CopyFrom(const NodeMessageHead& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:NodeMessageHead)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool NodeMessageHead::IsInitialized() const {
  return true;
}

void NodeMessageHead::InternalSwap(NodeMessageHead* PROTOBUF_RESTRICT other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(NodeMessageHead, _impl_.node_id_)
      + sizeof(NodeMessageHead::_impl_.node_id_)
      - PROTOBUF_FIELD_OFFSET(NodeMessageHead, _impl_.session_id_)>(
          reinterpret_cast<char*>(&_impl_.session_id_),
          reinterpret_cast<char*>(&other->_impl_.session_id_));
}

::google::protobuf::Metadata NodeMessageHead::GetMetadata() const {
  return ::_pbi::AssignDescriptors(&descriptor_table_common_2fcommon_5fmessage_2eproto_getter,
                                   &descriptor_table_common_2fcommon_5fmessage_2eproto_once,
                                   file_level_metadata_common_2fcommon_5fmessage_2eproto[2]);
}
// ===================================================================

class NodeRouteMessageRequest::_Internal {
 public:
  using HasBits = decltype(std::declval<NodeRouteMessageRequest>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
    8 * PROTOBUF_FIELD_OFFSET(NodeRouteMessageRequest, _impl_._has_bits_);
};

NodeRouteMessageRequest::NodeRouteMessageRequest(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:NodeRouteMessageRequest)
}
inline PROTOBUF_NDEBUG_INLINE NodeRouteMessageRequest::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from)
      : _has_bits_{from._has_bits_},
        _cached_size_{0} {}

NodeRouteMessageRequest::NodeRouteMessageRequest(
    ::google::protobuf::Arena* arena,
    const NodeRouteMessageRequest& from)
    : ::google::protobuf::Message(arena) {
  NodeRouteMessageRequest* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_);
  ::uint32_t cached_has_bits = _impl_._has_bits_[0];
  _impl_.body_ = (cached_has_bits & 0x00000001u) ? ::google::protobuf::Message::CopyConstruct<::MessageBody>(
                              arena, *from._impl_.body_)
                        : nullptr;
  _impl_.head_ = (cached_has_bits & 0x00000002u) ? ::google::protobuf::Message::CopyConstruct<::NodeMessageHead>(
                              arena, *from._impl_.head_)
                        : nullptr;

  // @@protoc_insertion_point(copy_constructor:NodeRouteMessageRequest)
}
inline PROTOBUF_NDEBUG_INLINE NodeRouteMessageRequest::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0} {}

inline void NodeRouteMessageRequest::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, body_),
           0,
           offsetof(Impl_, head_) -
               offsetof(Impl_, body_) +
               sizeof(Impl_::head_));
}
NodeRouteMessageRequest::~NodeRouteMessageRequest() {
  // @@protoc_insertion_point(destructor:NodeRouteMessageRequest)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void NodeRouteMessageRequest::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  delete _impl_.body_;
  delete _impl_.head_;
  _impl_.~Impl_();
}

const ::google::protobuf::MessageLite::ClassData*
NodeRouteMessageRequest::GetClassData() const {
  PROTOBUF_CONSTINIT static const ::google::protobuf::MessageLite::
      ClassDataFull _data_ = {
          {
              nullptr,  // OnDemandRegisterArenaDtor
              PROTOBUF_FIELD_OFFSET(NodeRouteMessageRequest, _impl_._cached_size_),
              false,
          },
          &NodeRouteMessageRequest::MergeImpl,
          &NodeRouteMessageRequest::kDescriptorMethods,
      };
  return &_data_;
}
PROTOBUF_NOINLINE void NodeRouteMessageRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:NodeRouteMessageRequest)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    if (cached_has_bits & 0x00000001u) {
      ABSL_DCHECK(_impl_.body_ != nullptr);
      _impl_.body_->Clear();
    }
    if (cached_has_bits & 0x00000002u) {
      ABSL_DCHECK(_impl_.head_ != nullptr);
      _impl_.head_->Clear();
    }
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* NodeRouteMessageRequest::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<1, 2, 2, 0, 2> NodeRouteMessageRequest::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(NodeRouteMessageRequest, _impl_._has_bits_),
    0, // no _extensions_
    2, 8,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967292,  // skipmap
    offsetof(decltype(_table_), field_entries),
    2,  // num_field_entries
    2,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    &_NodeRouteMessageRequest_default_instance_._instance,
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::NodeRouteMessageRequest>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // .NodeMessageHead head = 2;
    {::_pbi::TcParser::FastMtS1,
     {18, 1, 1, PROTOBUF_FIELD_OFFSET(NodeRouteMessageRequest, _impl_.head_)}},
    // .MessageBody body = 1;
    {::_pbi::TcParser::FastMtS1,
     {10, 0, 0, PROTOBUF_FIELD_OFFSET(NodeRouteMessageRequest, _impl_.body_)}},
  }}, {{
    65535, 65535
  }}, {{
    // .MessageBody body = 1;
    {PROTOBUF_FIELD_OFFSET(NodeRouteMessageRequest, _impl_.body_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
    // .NodeMessageHead head = 2;
    {PROTOBUF_FIELD_OFFSET(NodeRouteMessageRequest, _impl_.head_), _Internal::kHasBitsOffset + 1, 1,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
  }}, {{
    {::_pbi::TcParser::GetTable<::MessageBody>()},
    {::_pbi::TcParser::GetTable<::NodeMessageHead>()},
  }}, {{
  }},
};

::uint8_t* NodeRouteMessageRequest::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:NodeRouteMessageRequest)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  // .MessageBody body = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
        1, *_impl_.body_, _impl_.body_->GetCachedSize(), target, stream);
  }

  // .NodeMessageHead head = 2;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
        2, *_impl_.head_, _impl_.head_->GetCachedSize(), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:NodeRouteMessageRequest)
  return target;
}

::size_t NodeRouteMessageRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:NodeRouteMessageRequest)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    // .MessageBody body = 1;
    if (cached_has_bits & 0x00000001u) {
      total_size +=
          1 + ::google::protobuf::internal::WireFormatLite::MessageSize(*_impl_.body_);
    }

    // .NodeMessageHead head = 2;
    if (cached_has_bits & 0x00000002u) {
      total_size +=
          1 + ::google::protobuf::internal::WireFormatLite::MessageSize(*_impl_.head_);
    }

  }
  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}


void NodeRouteMessageRequest::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<NodeRouteMessageRequest*>(&to_msg);
  auto& from = static_cast<const NodeRouteMessageRequest&>(from_msg);
  ::google::protobuf::Arena* arena = _this->GetArena();
  // @@protoc_insertion_point(class_specific_merge_from_start:NodeRouteMessageRequest)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._impl_._has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    if (cached_has_bits & 0x00000001u) {
      ABSL_DCHECK(from._impl_.body_ != nullptr);
      if (_this->_impl_.body_ == nullptr) {
        _this->_impl_.body_ =
            ::google::protobuf::Message::CopyConstruct<::MessageBody>(arena, *from._impl_.body_);
      } else {
        _this->_impl_.body_->MergeFrom(*from._impl_.body_);
      }
    }
    if (cached_has_bits & 0x00000002u) {
      ABSL_DCHECK(from._impl_.head_ != nullptr);
      if (_this->_impl_.head_ == nullptr) {
        _this->_impl_.head_ =
            ::google::protobuf::Message::CopyConstruct<::NodeMessageHead>(arena, *from._impl_.head_);
      } else {
        _this->_impl_.head_->MergeFrom(*from._impl_.head_);
      }
    }
  }
  _this->_impl_._has_bits_[0] |= cached_has_bits;
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void NodeRouteMessageRequest::CopyFrom(const NodeRouteMessageRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:NodeRouteMessageRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool NodeRouteMessageRequest::IsInitialized() const {
  return true;
}

void NodeRouteMessageRequest::InternalSwap(NodeRouteMessageRequest* PROTOBUF_RESTRICT other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(NodeRouteMessageRequest, _impl_.head_)
      + sizeof(NodeRouteMessageRequest::_impl_.head_)
      - PROTOBUF_FIELD_OFFSET(NodeRouteMessageRequest, _impl_.body_)>(
          reinterpret_cast<char*>(&_impl_.body_),
          reinterpret_cast<char*>(&other->_impl_.body_));
}

::google::protobuf::Metadata NodeRouteMessageRequest::GetMetadata() const {
  return ::_pbi::AssignDescriptors(&descriptor_table_common_2fcommon_5fmessage_2eproto_getter,
                                   &descriptor_table_common_2fcommon_5fmessage_2eproto_once,
                                   file_level_metadata_common_2fcommon_5fmessage_2eproto[3]);
}
// ===================================================================

class NodeRouteMessageResponse::_Internal {
 public:
  using HasBits = decltype(std::declval<NodeRouteMessageResponse>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
    8 * PROTOBUF_FIELD_OFFSET(NodeRouteMessageResponse, _impl_._has_bits_);
};

NodeRouteMessageResponse::NodeRouteMessageResponse(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:NodeRouteMessageResponse)
}
inline PROTOBUF_NDEBUG_INLINE NodeRouteMessageResponse::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from)
      : _has_bits_{from._has_bits_},
        _cached_size_{0} {}

NodeRouteMessageResponse::NodeRouteMessageResponse(
    ::google::protobuf::Arena* arena,
    const NodeRouteMessageResponse& from)
    : ::google::protobuf::Message(arena) {
  NodeRouteMessageResponse* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_);
  ::uint32_t cached_has_bits = _impl_._has_bits_[0];
  _impl_.body_ = (cached_has_bits & 0x00000001u) ? ::google::protobuf::Message::CopyConstruct<::MessageBody>(
                              arena, *from._impl_.body_)
                        : nullptr;
  _impl_.head_ = (cached_has_bits & 0x00000002u) ? ::google::protobuf::Message::CopyConstruct<::NodeMessageHead>(
                              arena, *from._impl_.head_)
                        : nullptr;

  // @@protoc_insertion_point(copy_constructor:NodeRouteMessageResponse)
}
inline PROTOBUF_NDEBUG_INLINE NodeRouteMessageResponse::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0} {}

inline void NodeRouteMessageResponse::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, body_),
           0,
           offsetof(Impl_, head_) -
               offsetof(Impl_, body_) +
               sizeof(Impl_::head_));
}
NodeRouteMessageResponse::~NodeRouteMessageResponse() {
  // @@protoc_insertion_point(destructor:NodeRouteMessageResponse)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void NodeRouteMessageResponse::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  delete _impl_.body_;
  delete _impl_.head_;
  _impl_.~Impl_();
}

const ::google::protobuf::MessageLite::ClassData*
NodeRouteMessageResponse::GetClassData() const {
  PROTOBUF_CONSTINIT static const ::google::protobuf::MessageLite::
      ClassDataFull _data_ = {
          {
              nullptr,  // OnDemandRegisterArenaDtor
              PROTOBUF_FIELD_OFFSET(NodeRouteMessageResponse, _impl_._cached_size_),
              false,
          },
          &NodeRouteMessageResponse::MergeImpl,
          &NodeRouteMessageResponse::kDescriptorMethods,
      };
  return &_data_;
}
PROTOBUF_NOINLINE void NodeRouteMessageResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:NodeRouteMessageResponse)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    if (cached_has_bits & 0x00000001u) {
      ABSL_DCHECK(_impl_.body_ != nullptr);
      _impl_.body_->Clear();
    }
    if (cached_has_bits & 0x00000002u) {
      ABSL_DCHECK(_impl_.head_ != nullptr);
      _impl_.head_->Clear();
    }
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* NodeRouteMessageResponse::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<1, 2, 2, 0, 2> NodeRouteMessageResponse::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(NodeRouteMessageResponse, _impl_._has_bits_),
    0, // no _extensions_
    2, 8,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967292,  // skipmap
    offsetof(decltype(_table_), field_entries),
    2,  // num_field_entries
    2,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    &_NodeRouteMessageResponse_default_instance_._instance,
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::NodeRouteMessageResponse>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // .NodeMessageHead head = 2;
    {::_pbi::TcParser::FastMtS1,
     {18, 1, 1, PROTOBUF_FIELD_OFFSET(NodeRouteMessageResponse, _impl_.head_)}},
    // .MessageBody body = 1;
    {::_pbi::TcParser::FastMtS1,
     {10, 0, 0, PROTOBUF_FIELD_OFFSET(NodeRouteMessageResponse, _impl_.body_)}},
  }}, {{
    65535, 65535
  }}, {{
    // .MessageBody body = 1;
    {PROTOBUF_FIELD_OFFSET(NodeRouteMessageResponse, _impl_.body_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
    // .NodeMessageHead head = 2;
    {PROTOBUF_FIELD_OFFSET(NodeRouteMessageResponse, _impl_.head_), _Internal::kHasBitsOffset + 1, 1,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
  }}, {{
    {::_pbi::TcParser::GetTable<::MessageBody>()},
    {::_pbi::TcParser::GetTable<::NodeMessageHead>()},
  }}, {{
  }},
};

::uint8_t* NodeRouteMessageResponse::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:NodeRouteMessageResponse)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  // .MessageBody body = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
        1, *_impl_.body_, _impl_.body_->GetCachedSize(), target, stream);
  }

  // .NodeMessageHead head = 2;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
        2, *_impl_.head_, _impl_.head_->GetCachedSize(), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:NodeRouteMessageResponse)
  return target;
}

::size_t NodeRouteMessageResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:NodeRouteMessageResponse)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    // .MessageBody body = 1;
    if (cached_has_bits & 0x00000001u) {
      total_size +=
          1 + ::google::protobuf::internal::WireFormatLite::MessageSize(*_impl_.body_);
    }

    // .NodeMessageHead head = 2;
    if (cached_has_bits & 0x00000002u) {
      total_size +=
          1 + ::google::protobuf::internal::WireFormatLite::MessageSize(*_impl_.head_);
    }

  }
  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}


void NodeRouteMessageResponse::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<NodeRouteMessageResponse*>(&to_msg);
  auto& from = static_cast<const NodeRouteMessageResponse&>(from_msg);
  ::google::protobuf::Arena* arena = _this->GetArena();
  // @@protoc_insertion_point(class_specific_merge_from_start:NodeRouteMessageResponse)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._impl_._has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    if (cached_has_bits & 0x00000001u) {
      ABSL_DCHECK(from._impl_.body_ != nullptr);
      if (_this->_impl_.body_ == nullptr) {
        _this->_impl_.body_ =
            ::google::protobuf::Message::CopyConstruct<::MessageBody>(arena, *from._impl_.body_);
      } else {
        _this->_impl_.body_->MergeFrom(*from._impl_.body_);
      }
    }
    if (cached_has_bits & 0x00000002u) {
      ABSL_DCHECK(from._impl_.head_ != nullptr);
      if (_this->_impl_.head_ == nullptr) {
        _this->_impl_.head_ =
            ::google::protobuf::Message::CopyConstruct<::NodeMessageHead>(arena, *from._impl_.head_);
      } else {
        _this->_impl_.head_->MergeFrom(*from._impl_.head_);
      }
    }
  }
  _this->_impl_._has_bits_[0] |= cached_has_bits;
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void NodeRouteMessageResponse::CopyFrom(const NodeRouteMessageResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:NodeRouteMessageResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool NodeRouteMessageResponse::IsInitialized() const {
  return true;
}

void NodeRouteMessageResponse::InternalSwap(NodeRouteMessageResponse* PROTOBUF_RESTRICT other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(NodeRouteMessageResponse, _impl_.head_)
      + sizeof(NodeRouteMessageResponse::_impl_.head_)
      - PROTOBUF_FIELD_OFFSET(NodeRouteMessageResponse, _impl_.body_)>(
          reinterpret_cast<char*>(&_impl_.body_),
          reinterpret_cast<char*>(&other->_impl_.body_));
}

::google::protobuf::Metadata NodeRouteMessageResponse::GetMetadata() const {
  return ::_pbi::AssignDescriptors(&descriptor_table_common_2fcommon_5fmessage_2eproto_getter,
                                   &descriptor_table_common_2fcommon_5fmessage_2eproto_once,
                                   file_level_metadata_common_2fcommon_5fmessage_2eproto[4]);
}
// ===================================================================

class PlayerMessageExtern::_Internal {
 public:
};

PlayerMessageExtern::PlayerMessageExtern(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:PlayerMessageExtern)
}
PlayerMessageExtern::PlayerMessageExtern(
    ::google::protobuf::Arena* arena, const PlayerMessageExtern& from)
    : PlayerMessageExtern(arena) {
  MergeFrom(from);
}
inline PROTOBUF_NDEBUG_INLINE PlayerMessageExtern::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0} {}

inline void PlayerMessageExtern::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  _impl_.player_id_ = {};
}
PlayerMessageExtern::~PlayerMessageExtern() {
  // @@protoc_insertion_point(destructor:PlayerMessageExtern)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void PlayerMessageExtern::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  _impl_.~Impl_();
}

const ::google::protobuf::MessageLite::ClassData*
PlayerMessageExtern::GetClassData() const {
  PROTOBUF_CONSTINIT static const ::google::protobuf::MessageLite::
      ClassDataFull _data_ = {
          {
              nullptr,  // OnDemandRegisterArenaDtor
              PROTOBUF_FIELD_OFFSET(PlayerMessageExtern, _impl_._cached_size_),
              false,
          },
          &PlayerMessageExtern::MergeImpl,
          &PlayerMessageExtern::kDescriptorMethods,
      };
  return &_data_;
}
PROTOBUF_NOINLINE void PlayerMessageExtern::Clear() {
// @@protoc_insertion_point(message_clear_start:PlayerMessageExtern)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.player_id_ = ::uint64_t{0u};
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* PlayerMessageExtern::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<0, 1, 0, 0, 2> PlayerMessageExtern::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    1, 0,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967294,  // skipmap
    offsetof(decltype(_table_), field_entries),
    1,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    &_PlayerMessageExtern_default_instance_._instance,
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::PlayerMessageExtern>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // uint64 player_id = 1;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint64_t, offsetof(PlayerMessageExtern, _impl_.player_id_), 63>(),
     {8, 63, 0, PROTOBUF_FIELD_OFFSET(PlayerMessageExtern, _impl_.player_id_)}},
  }}, {{
    65535, 65535
  }}, {{
    // uint64 player_id = 1;
    {PROTOBUF_FIELD_OFFSET(PlayerMessageExtern, _impl_.player_id_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUInt64)},
  }},
  // no aux_entries
  {{
  }},
};

::uint8_t* PlayerMessageExtern::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:PlayerMessageExtern)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  // uint64 player_id = 1;
  if (this->_internal_player_id() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt64ToArray(
        1, this->_internal_player_id(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:PlayerMessageExtern)
  return target;
}

::size_t PlayerMessageExtern::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:PlayerMessageExtern)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // uint64 player_id = 1;
  if (this->_internal_player_id() != 0) {
    total_size += ::_pbi::WireFormatLite::UInt64SizePlusOne(
        this->_internal_player_id());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}


void PlayerMessageExtern::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<PlayerMessageExtern*>(&to_msg);
  auto& from = static_cast<const PlayerMessageExtern&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:PlayerMessageExtern)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_player_id() != 0) {
    _this->_impl_.player_id_ = from._impl_.player_id_;
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void PlayerMessageExtern::CopyFrom(const PlayerMessageExtern& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:PlayerMessageExtern)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool PlayerMessageExtern::IsInitialized() const {
  return true;
}

void PlayerMessageExtern::InternalSwap(PlayerMessageExtern* PROTOBUF_RESTRICT other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
        swap(_impl_.player_id_, other->_impl_.player_id_);
}

::google::protobuf::Metadata PlayerMessageExtern::GetMetadata() const {
  return ::_pbi::AssignDescriptors(&descriptor_table_common_2fcommon_5fmessage_2eproto_getter,
                                   &descriptor_table_common_2fcommon_5fmessage_2eproto_once,
                                   file_level_metadata_common_2fcommon_5fmessage_2eproto[5]);
}
// ===================================================================

class PlayerNodeServiceRequest::_Internal {
 public:
  using HasBits = decltype(std::declval<PlayerNodeServiceRequest>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
    8 * PROTOBUF_FIELD_OFFSET(PlayerNodeServiceRequest, _impl_._has_bits_);
};

PlayerNodeServiceRequest::PlayerNodeServiceRequest(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:PlayerNodeServiceRequest)
}
inline PROTOBUF_NDEBUG_INLINE PlayerNodeServiceRequest::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from)
      : _has_bits_{from._has_bits_},
        _cached_size_{0} {}

PlayerNodeServiceRequest::PlayerNodeServiceRequest(
    ::google::protobuf::Arena* arena,
    const PlayerNodeServiceRequest& from)
    : ::google::protobuf::Message(arena) {
  PlayerNodeServiceRequest* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_);
  ::uint32_t cached_has_bits = _impl_._has_bits_[0];
  _impl_.body_ = (cached_has_bits & 0x00000001u) ? ::google::protobuf::Message::CopyConstruct<::MessageBody>(
                              arena, *from._impl_.body_)
                        : nullptr;
  _impl_.head_ = (cached_has_bits & 0x00000002u) ? ::google::protobuf::Message::CopyConstruct<::PlayerMessageExtern>(
                              arena, *from._impl_.head_)
                        : nullptr;

  // @@protoc_insertion_point(copy_constructor:PlayerNodeServiceRequest)
}
inline PROTOBUF_NDEBUG_INLINE PlayerNodeServiceRequest::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0} {}

inline void PlayerNodeServiceRequest::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, body_),
           0,
           offsetof(Impl_, head_) -
               offsetof(Impl_, body_) +
               sizeof(Impl_::head_));
}
PlayerNodeServiceRequest::~PlayerNodeServiceRequest() {
  // @@protoc_insertion_point(destructor:PlayerNodeServiceRequest)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void PlayerNodeServiceRequest::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  delete _impl_.body_;
  delete _impl_.head_;
  _impl_.~Impl_();
}

const ::google::protobuf::MessageLite::ClassData*
PlayerNodeServiceRequest::GetClassData() const {
  PROTOBUF_CONSTINIT static const ::google::protobuf::MessageLite::
      ClassDataFull _data_ = {
          {
              nullptr,  // OnDemandRegisterArenaDtor
              PROTOBUF_FIELD_OFFSET(PlayerNodeServiceRequest, _impl_._cached_size_),
              false,
          },
          &PlayerNodeServiceRequest::MergeImpl,
          &PlayerNodeServiceRequest::kDescriptorMethods,
      };
  return &_data_;
}
PROTOBUF_NOINLINE void PlayerNodeServiceRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:PlayerNodeServiceRequest)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    if (cached_has_bits & 0x00000001u) {
      ABSL_DCHECK(_impl_.body_ != nullptr);
      _impl_.body_->Clear();
    }
    if (cached_has_bits & 0x00000002u) {
      ABSL_DCHECK(_impl_.head_ != nullptr);
      _impl_.head_->Clear();
    }
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* PlayerNodeServiceRequest::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<1, 2, 2, 0, 2> PlayerNodeServiceRequest::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(PlayerNodeServiceRequest, _impl_._has_bits_),
    0, // no _extensions_
    2, 8,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967292,  // skipmap
    offsetof(decltype(_table_), field_entries),
    2,  // num_field_entries
    2,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    &_PlayerNodeServiceRequest_default_instance_._instance,
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::PlayerNodeServiceRequest>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // .PlayerMessageExtern head = 2;
    {::_pbi::TcParser::FastMtS1,
     {18, 1, 1, PROTOBUF_FIELD_OFFSET(PlayerNodeServiceRequest, _impl_.head_)}},
    // .MessageBody body = 1;
    {::_pbi::TcParser::FastMtS1,
     {10, 0, 0, PROTOBUF_FIELD_OFFSET(PlayerNodeServiceRequest, _impl_.body_)}},
  }}, {{
    65535, 65535
  }}, {{
    // .MessageBody body = 1;
    {PROTOBUF_FIELD_OFFSET(PlayerNodeServiceRequest, _impl_.body_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
    // .PlayerMessageExtern head = 2;
    {PROTOBUF_FIELD_OFFSET(PlayerNodeServiceRequest, _impl_.head_), _Internal::kHasBitsOffset + 1, 1,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
  }}, {{
    {::_pbi::TcParser::GetTable<::MessageBody>()},
    {::_pbi::TcParser::GetTable<::PlayerMessageExtern>()},
  }}, {{
  }},
};

::uint8_t* PlayerNodeServiceRequest::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:PlayerNodeServiceRequest)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  // .MessageBody body = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
        1, *_impl_.body_, _impl_.body_->GetCachedSize(), target, stream);
  }

  // .PlayerMessageExtern head = 2;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
        2, *_impl_.head_, _impl_.head_->GetCachedSize(), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:PlayerNodeServiceRequest)
  return target;
}

::size_t PlayerNodeServiceRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:PlayerNodeServiceRequest)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    // .MessageBody body = 1;
    if (cached_has_bits & 0x00000001u) {
      total_size +=
          1 + ::google::protobuf::internal::WireFormatLite::MessageSize(*_impl_.body_);
    }

    // .PlayerMessageExtern head = 2;
    if (cached_has_bits & 0x00000002u) {
      total_size +=
          1 + ::google::protobuf::internal::WireFormatLite::MessageSize(*_impl_.head_);
    }

  }
  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}


void PlayerNodeServiceRequest::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<PlayerNodeServiceRequest*>(&to_msg);
  auto& from = static_cast<const PlayerNodeServiceRequest&>(from_msg);
  ::google::protobuf::Arena* arena = _this->GetArena();
  // @@protoc_insertion_point(class_specific_merge_from_start:PlayerNodeServiceRequest)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._impl_._has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    if (cached_has_bits & 0x00000001u) {
      ABSL_DCHECK(from._impl_.body_ != nullptr);
      if (_this->_impl_.body_ == nullptr) {
        _this->_impl_.body_ =
            ::google::protobuf::Message::CopyConstruct<::MessageBody>(arena, *from._impl_.body_);
      } else {
        _this->_impl_.body_->MergeFrom(*from._impl_.body_);
      }
    }
    if (cached_has_bits & 0x00000002u) {
      ABSL_DCHECK(from._impl_.head_ != nullptr);
      if (_this->_impl_.head_ == nullptr) {
        _this->_impl_.head_ =
            ::google::protobuf::Message::CopyConstruct<::PlayerMessageExtern>(arena, *from._impl_.head_);
      } else {
        _this->_impl_.head_->MergeFrom(*from._impl_.head_);
      }
    }
  }
  _this->_impl_._has_bits_[0] |= cached_has_bits;
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void PlayerNodeServiceRequest::CopyFrom(const PlayerNodeServiceRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:PlayerNodeServiceRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool PlayerNodeServiceRequest::IsInitialized() const {
  return true;
}

void PlayerNodeServiceRequest::InternalSwap(PlayerNodeServiceRequest* PROTOBUF_RESTRICT other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(PlayerNodeServiceRequest, _impl_.head_)
      + sizeof(PlayerNodeServiceRequest::_impl_.head_)
      - PROTOBUF_FIELD_OFFSET(PlayerNodeServiceRequest, _impl_.body_)>(
          reinterpret_cast<char*>(&_impl_.body_),
          reinterpret_cast<char*>(&other->_impl_.body_));
}

::google::protobuf::Metadata PlayerNodeServiceRequest::GetMetadata() const {
  return ::_pbi::AssignDescriptors(&descriptor_table_common_2fcommon_5fmessage_2eproto_getter,
                                   &descriptor_table_common_2fcommon_5fmessage_2eproto_once,
                                   file_level_metadata_common_2fcommon_5fmessage_2eproto[6]);
}
// ===================================================================

class PlayerMessageResponse::_Internal {
 public:
  using HasBits = decltype(std::declval<PlayerMessageResponse>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
    8 * PROTOBUF_FIELD_OFFSET(PlayerMessageResponse, _impl_._has_bits_);
};

PlayerMessageResponse::PlayerMessageResponse(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:PlayerMessageResponse)
}
inline PROTOBUF_NDEBUG_INLINE PlayerMessageResponse::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from)
      : _has_bits_{from._has_bits_},
        _cached_size_{0} {}

PlayerMessageResponse::PlayerMessageResponse(
    ::google::protobuf::Arena* arena,
    const PlayerMessageResponse& from)
    : ::google::protobuf::Message(arena) {
  PlayerMessageResponse* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_);
  ::uint32_t cached_has_bits = _impl_._has_bits_[0];
  _impl_.body_ = (cached_has_bits & 0x00000001u) ? ::google::protobuf::Message::CopyConstruct<::MessageBody>(
                              arena, *from._impl_.body_)
                        : nullptr;
  _impl_.head_ = (cached_has_bits & 0x00000002u) ? ::google::protobuf::Message::CopyConstruct<::PlayerMessageExtern>(
                              arena, *from._impl_.head_)
                        : nullptr;

  // @@protoc_insertion_point(copy_constructor:PlayerMessageResponse)
}
inline PROTOBUF_NDEBUG_INLINE PlayerMessageResponse::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0} {}

inline void PlayerMessageResponse::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, body_),
           0,
           offsetof(Impl_, head_) -
               offsetof(Impl_, body_) +
               sizeof(Impl_::head_));
}
PlayerMessageResponse::~PlayerMessageResponse() {
  // @@protoc_insertion_point(destructor:PlayerMessageResponse)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void PlayerMessageResponse::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  delete _impl_.body_;
  delete _impl_.head_;
  _impl_.~Impl_();
}

const ::google::protobuf::MessageLite::ClassData*
PlayerMessageResponse::GetClassData() const {
  PROTOBUF_CONSTINIT static const ::google::protobuf::MessageLite::
      ClassDataFull _data_ = {
          {
              nullptr,  // OnDemandRegisterArenaDtor
              PROTOBUF_FIELD_OFFSET(PlayerMessageResponse, _impl_._cached_size_),
              false,
          },
          &PlayerMessageResponse::MergeImpl,
          &PlayerMessageResponse::kDescriptorMethods,
      };
  return &_data_;
}
PROTOBUF_NOINLINE void PlayerMessageResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:PlayerMessageResponse)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    if (cached_has_bits & 0x00000001u) {
      ABSL_DCHECK(_impl_.body_ != nullptr);
      _impl_.body_->Clear();
    }
    if (cached_has_bits & 0x00000002u) {
      ABSL_DCHECK(_impl_.head_ != nullptr);
      _impl_.head_->Clear();
    }
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* PlayerMessageResponse::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<1, 2, 2, 0, 2> PlayerMessageResponse::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(PlayerMessageResponse, _impl_._has_bits_),
    0, // no _extensions_
    2, 8,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967292,  // skipmap
    offsetof(decltype(_table_), field_entries),
    2,  // num_field_entries
    2,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    &_PlayerMessageResponse_default_instance_._instance,
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::PlayerMessageResponse>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // .PlayerMessageExtern head = 2;
    {::_pbi::TcParser::FastMtS1,
     {18, 1, 1, PROTOBUF_FIELD_OFFSET(PlayerMessageResponse, _impl_.head_)}},
    // .MessageBody body = 1;
    {::_pbi::TcParser::FastMtS1,
     {10, 0, 0, PROTOBUF_FIELD_OFFSET(PlayerMessageResponse, _impl_.body_)}},
  }}, {{
    65535, 65535
  }}, {{
    // .MessageBody body = 1;
    {PROTOBUF_FIELD_OFFSET(PlayerMessageResponse, _impl_.body_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
    // .PlayerMessageExtern head = 2;
    {PROTOBUF_FIELD_OFFSET(PlayerMessageResponse, _impl_.head_), _Internal::kHasBitsOffset + 1, 1,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
  }}, {{
    {::_pbi::TcParser::GetTable<::MessageBody>()},
    {::_pbi::TcParser::GetTable<::PlayerMessageExtern>()},
  }}, {{
  }},
};

::uint8_t* PlayerMessageResponse::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:PlayerMessageResponse)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  // .MessageBody body = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
        1, *_impl_.body_, _impl_.body_->GetCachedSize(), target, stream);
  }

  // .PlayerMessageExtern head = 2;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
        2, *_impl_.head_, _impl_.head_->GetCachedSize(), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:PlayerMessageResponse)
  return target;
}

::size_t PlayerMessageResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:PlayerMessageResponse)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    // .MessageBody body = 1;
    if (cached_has_bits & 0x00000001u) {
      total_size +=
          1 + ::google::protobuf::internal::WireFormatLite::MessageSize(*_impl_.body_);
    }

    // .PlayerMessageExtern head = 2;
    if (cached_has_bits & 0x00000002u) {
      total_size +=
          1 + ::google::protobuf::internal::WireFormatLite::MessageSize(*_impl_.head_);
    }

  }
  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}


void PlayerMessageResponse::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<PlayerMessageResponse*>(&to_msg);
  auto& from = static_cast<const PlayerMessageResponse&>(from_msg);
  ::google::protobuf::Arena* arena = _this->GetArena();
  // @@protoc_insertion_point(class_specific_merge_from_start:PlayerMessageResponse)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._impl_._has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    if (cached_has_bits & 0x00000001u) {
      ABSL_DCHECK(from._impl_.body_ != nullptr);
      if (_this->_impl_.body_ == nullptr) {
        _this->_impl_.body_ =
            ::google::protobuf::Message::CopyConstruct<::MessageBody>(arena, *from._impl_.body_);
      } else {
        _this->_impl_.body_->MergeFrom(*from._impl_.body_);
      }
    }
    if (cached_has_bits & 0x00000002u) {
      ABSL_DCHECK(from._impl_.head_ != nullptr);
      if (_this->_impl_.head_ == nullptr) {
        _this->_impl_.head_ =
            ::google::protobuf::Message::CopyConstruct<::PlayerMessageExtern>(arena, *from._impl_.head_);
      } else {
        _this->_impl_.head_->MergeFrom(*from._impl_.head_);
      }
    }
  }
  _this->_impl_._has_bits_[0] |= cached_has_bits;
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void PlayerMessageResponse::CopyFrom(const PlayerMessageResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:PlayerMessageResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool PlayerMessageResponse::IsInitialized() const {
  return true;
}

void PlayerMessageResponse::InternalSwap(PlayerMessageResponse* PROTOBUF_RESTRICT other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(PlayerMessageResponse, _impl_.head_)
      + sizeof(PlayerMessageResponse::_impl_.head_)
      - PROTOBUF_FIELD_OFFSET(PlayerMessageResponse, _impl_.body_)>(
          reinterpret_cast<char*>(&_impl_.body_),
          reinterpret_cast<char*>(&other->_impl_.body_));
}

::google::protobuf::Metadata PlayerMessageResponse::GetMetadata() const {
  return ::_pbi::AssignDescriptors(&descriptor_table_common_2fcommon_5fmessage_2eproto_getter,
                                   &descriptor_table_common_2fcommon_5fmessage_2eproto_once,
                                   file_level_metadata_common_2fcommon_5fmessage_2eproto[7]);
}
// ===================================================================

class NodeRouteMessageBody::_Internal {
 public:
  using HasBits = decltype(std::declval<NodeRouteMessageBody>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
    8 * PROTOBUF_FIELD_OFFSET(NodeRouteMessageBody, _impl_._has_bits_);
};

void NodeRouteMessageBody::clear_node_info() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  if (_impl_.node_info_ != nullptr) _impl_.node_info_->Clear();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
NodeRouteMessageBody::NodeRouteMessageBody(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:NodeRouteMessageBody)
}
inline PROTOBUF_NDEBUG_INLINE NodeRouteMessageBody::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from)
      : _has_bits_{from._has_bits_},
        _cached_size_{0} {}

NodeRouteMessageBody::NodeRouteMessageBody(
    ::google::protobuf::Arena* arena,
    const NodeRouteMessageBody& from)
    : ::google::protobuf::Message(arena) {
  NodeRouteMessageBody* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_);
  ::uint32_t cached_has_bits = _impl_._has_bits_[0];
  _impl_.node_info_ = (cached_has_bits & 0x00000001u) ? ::google::protobuf::Message::CopyConstruct<::NodeInfo>(
                              arena, *from._impl_.node_info_)
                        : nullptr;

  // @@protoc_insertion_point(copy_constructor:NodeRouteMessageBody)
}
inline PROTOBUF_NDEBUG_INLINE NodeRouteMessageBody::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0} {}

inline void NodeRouteMessageBody::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  _impl_.node_info_ = {};
}
NodeRouteMessageBody::~NodeRouteMessageBody() {
  // @@protoc_insertion_point(destructor:NodeRouteMessageBody)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void NodeRouteMessageBody::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  delete _impl_.node_info_;
  _impl_.~Impl_();
}

const ::google::protobuf::MessageLite::ClassData*
NodeRouteMessageBody::GetClassData() const {
  PROTOBUF_CONSTINIT static const ::google::protobuf::MessageLite::
      ClassDataFull _data_ = {
          {
              nullptr,  // OnDemandRegisterArenaDtor
              PROTOBUF_FIELD_OFFSET(NodeRouteMessageBody, _impl_._cached_size_),
              false,
          },
          &NodeRouteMessageBody::MergeImpl,
          &NodeRouteMessageBody::kDescriptorMethods,
      };
  return &_data_;
}
PROTOBUF_NOINLINE void NodeRouteMessageBody::Clear() {
// @@protoc_insertion_point(message_clear_start:NodeRouteMessageBody)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    ABSL_DCHECK(_impl_.node_info_ != nullptr);
    _impl_.node_info_->Clear();
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* NodeRouteMessageBody::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<0, 1, 1, 0, 2> NodeRouteMessageBody::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(NodeRouteMessageBody, _impl_._has_bits_),
    0, // no _extensions_
    2, 0,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967293,  // skipmap
    offsetof(decltype(_table_), field_entries),
    1,  // num_field_entries
    1,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    &_NodeRouteMessageBody_default_instance_._instance,
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::NodeRouteMessageBody>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // .NodeInfo node_info = 2;
    {::_pbi::TcParser::FastMtS1,
     {18, 0, 0, PROTOBUF_FIELD_OFFSET(NodeRouteMessageBody, _impl_.node_info_)}},
  }}, {{
    65535, 65535
  }}, {{
    // .NodeInfo node_info = 2;
    {PROTOBUF_FIELD_OFFSET(NodeRouteMessageBody, _impl_.node_info_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
  }}, {{
    {::_pbi::TcParser::GetTable<::NodeInfo>()},
  }}, {{
  }},
};

::uint8_t* NodeRouteMessageBody::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:NodeRouteMessageBody)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  // .NodeInfo node_info = 2;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
        2, *_impl_.node_info_, _impl_.node_info_->GetCachedSize(), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:NodeRouteMessageBody)
  return target;
}

::size_t NodeRouteMessageBody::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:NodeRouteMessageBody)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // .NodeInfo node_info = 2;
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    total_size +=
        1 + ::google::protobuf::internal::WireFormatLite::MessageSize(*_impl_.node_info_);
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}


void NodeRouteMessageBody::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<NodeRouteMessageBody*>(&to_msg);
  auto& from = static_cast<const NodeRouteMessageBody&>(from_msg);
  ::google::protobuf::Arena* arena = _this->GetArena();
  // @@protoc_insertion_point(class_specific_merge_from_start:NodeRouteMessageBody)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    ABSL_DCHECK(from._impl_.node_info_ != nullptr);
    if (_this->_impl_.node_info_ == nullptr) {
      _this->_impl_.node_info_ =
          ::google::protobuf::Message::CopyConstruct<::NodeInfo>(arena, *from._impl_.node_info_);
    } else {
      _this->_impl_.node_info_->MergeFrom(*from._impl_.node_info_);
    }
  }
  _this->_impl_._has_bits_[0] |= cached_has_bits;
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void NodeRouteMessageBody::CopyFrom(const NodeRouteMessageBody& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:NodeRouteMessageBody)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool NodeRouteMessageBody::IsInitialized() const {
  return true;
}

void NodeRouteMessageBody::InternalSwap(NodeRouteMessageBody* PROTOBUF_RESTRICT other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  swap(_impl_.node_info_, other->_impl_.node_info_);
}

::google::protobuf::Metadata NodeRouteMessageBody::GetMetadata() const {
  return ::_pbi::AssignDescriptors(&descriptor_table_common_2fcommon_5fmessage_2eproto_getter,
                                   &descriptor_table_common_2fcommon_5fmessage_2eproto_once,
                                   file_level_metadata_common_2fcommon_5fmessage_2eproto[8]);
}
// ===================================================================

class RegisterGameNodeSessionRequest::_Internal {
 public:
  using HasBits = decltype(std::declval<RegisterGameNodeSessionRequest>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
    8 * PROTOBUF_FIELD_OFFSET(RegisterGameNodeSessionRequest, _impl_._has_bits_);
};

void RegisterGameNodeSessionRequest::clear_session_info() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  if (_impl_.session_info_ != nullptr) _impl_.session_info_->Clear();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
RegisterGameNodeSessionRequest::RegisterGameNodeSessionRequest(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:RegisterGameNodeSessionRequest)
}
inline PROTOBUF_NDEBUG_INLINE RegisterGameNodeSessionRequest::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from)
      : _has_bits_{from._has_bits_},
        _cached_size_{0} {}

RegisterGameNodeSessionRequest::RegisterGameNodeSessionRequest(
    ::google::protobuf::Arena* arena,
    const RegisterGameNodeSessionRequest& from)
    : ::google::protobuf::Message(arena) {
  RegisterGameNodeSessionRequest* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_);
  ::uint32_t cached_has_bits = _impl_._has_bits_[0];
  _impl_.session_info_ = (cached_has_bits & 0x00000001u) ? ::google::protobuf::Message::CopyConstruct<::SessionDetails>(
                              arena, *from._impl_.session_info_)
                        : nullptr;
  _impl_.game_node_id_ = from._impl_.game_node_id_;

  // @@protoc_insertion_point(copy_constructor:RegisterGameNodeSessionRequest)
}
inline PROTOBUF_NDEBUG_INLINE RegisterGameNodeSessionRequest::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0} {}

inline void RegisterGameNodeSessionRequest::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, session_info_),
           0,
           offsetof(Impl_, game_node_id_) -
               offsetof(Impl_, session_info_) +
               sizeof(Impl_::game_node_id_));
}
RegisterGameNodeSessionRequest::~RegisterGameNodeSessionRequest() {
  // @@protoc_insertion_point(destructor:RegisterGameNodeSessionRequest)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void RegisterGameNodeSessionRequest::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  delete _impl_.session_info_;
  _impl_.~Impl_();
}

const ::google::protobuf::MessageLite::ClassData*
RegisterGameNodeSessionRequest::GetClassData() const {
  PROTOBUF_CONSTINIT static const ::google::protobuf::MessageLite::
      ClassDataFull _data_ = {
          {
              nullptr,  // OnDemandRegisterArenaDtor
              PROTOBUF_FIELD_OFFSET(RegisterGameNodeSessionRequest, _impl_._cached_size_),
              false,
          },
          &RegisterGameNodeSessionRequest::MergeImpl,
          &RegisterGameNodeSessionRequest::kDescriptorMethods,
      };
  return &_data_;
}
PROTOBUF_NOINLINE void RegisterGameNodeSessionRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:RegisterGameNodeSessionRequest)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    ABSL_DCHECK(_impl_.session_info_ != nullptr);
    _impl_.session_info_->Clear();
  }
  _impl_.game_node_id_ = 0u;
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* RegisterGameNodeSessionRequest::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<1, 2, 1, 0, 2> RegisterGameNodeSessionRequest::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(RegisterGameNodeSessionRequest, _impl_._has_bits_),
    0, // no _extensions_
    2, 8,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967292,  // skipmap
    offsetof(decltype(_table_), field_entries),
    2,  // num_field_entries
    1,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    &_RegisterGameNodeSessionRequest_default_instance_._instance,
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::RegisterGameNodeSessionRequest>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // uint32 game_node_id = 2;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(RegisterGameNodeSessionRequest, _impl_.game_node_id_), 63>(),
     {16, 63, 0, PROTOBUF_FIELD_OFFSET(RegisterGameNodeSessionRequest, _impl_.game_node_id_)}},
    // .SessionDetails session_info = 1;
    {::_pbi::TcParser::FastMtS1,
     {10, 0, 0, PROTOBUF_FIELD_OFFSET(RegisterGameNodeSessionRequest, _impl_.session_info_)}},
  }}, {{
    65535, 65535
  }}, {{
    // .SessionDetails session_info = 1;
    {PROTOBUF_FIELD_OFFSET(RegisterGameNodeSessionRequest, _impl_.session_info_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
    // uint32 game_node_id = 2;
    {PROTOBUF_FIELD_OFFSET(RegisterGameNodeSessionRequest, _impl_.game_node_id_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUInt32)},
  }}, {{
    {::_pbi::TcParser::GetTable<::SessionDetails>()},
  }}, {{
  }},
};

::uint8_t* RegisterGameNodeSessionRequest::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:RegisterGameNodeSessionRequest)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  // .SessionDetails session_info = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
        1, *_impl_.session_info_, _impl_.session_info_->GetCachedSize(), target, stream);
  }

  // uint32 game_node_id = 2;
  if (this->_internal_game_node_id() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt32ToArray(
        2, this->_internal_game_node_id(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:RegisterGameNodeSessionRequest)
  return target;
}

::size_t RegisterGameNodeSessionRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:RegisterGameNodeSessionRequest)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // .SessionDetails session_info = 1;
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    total_size +=
        1 + ::google::protobuf::internal::WireFormatLite::MessageSize(*_impl_.session_info_);
  }

  // uint32 game_node_id = 2;
  if (this->_internal_game_node_id() != 0) {
    total_size += ::_pbi::WireFormatLite::UInt32SizePlusOne(
        this->_internal_game_node_id());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}


void RegisterGameNodeSessionRequest::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<RegisterGameNodeSessionRequest*>(&to_msg);
  auto& from = static_cast<const RegisterGameNodeSessionRequest&>(from_msg);
  ::google::protobuf::Arena* arena = _this->GetArena();
  // @@protoc_insertion_point(class_specific_merge_from_start:RegisterGameNodeSessionRequest)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    ABSL_DCHECK(from._impl_.session_info_ != nullptr);
    if (_this->_impl_.session_info_ == nullptr) {
      _this->_impl_.session_info_ =
          ::google::protobuf::Message::CopyConstruct<::SessionDetails>(arena, *from._impl_.session_info_);
    } else {
      _this->_impl_.session_info_->MergeFrom(*from._impl_.session_info_);
    }
  }
  if (from._internal_game_node_id() != 0) {
    _this->_impl_.game_node_id_ = from._impl_.game_node_id_;
  }
  _this->_impl_._has_bits_[0] |= cached_has_bits;
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void RegisterGameNodeSessionRequest::CopyFrom(const RegisterGameNodeSessionRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:RegisterGameNodeSessionRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool RegisterGameNodeSessionRequest::IsInitialized() const {
  return true;
}

void RegisterGameNodeSessionRequest::InternalSwap(RegisterGameNodeSessionRequest* PROTOBUF_RESTRICT other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(RegisterGameNodeSessionRequest, _impl_.game_node_id_)
      + sizeof(RegisterGameNodeSessionRequest::_impl_.game_node_id_)
      - PROTOBUF_FIELD_OFFSET(RegisterGameNodeSessionRequest, _impl_.session_info_)>(
          reinterpret_cast<char*>(&_impl_.session_info_),
          reinterpret_cast<char*>(&other->_impl_.session_info_));
}

::google::protobuf::Metadata RegisterGameNodeSessionRequest::GetMetadata() const {
  return ::_pbi::AssignDescriptors(&descriptor_table_common_2fcommon_5fmessage_2eproto_getter,
                                   &descriptor_table_common_2fcommon_5fmessage_2eproto_once,
                                   file_level_metadata_common_2fcommon_5fmessage_2eproto[9]);
}
// ===================================================================

class RegisterGameNodeSessionResponse::_Internal {
 public:
  using HasBits = decltype(std::declval<RegisterGameNodeSessionResponse>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
    8 * PROTOBUF_FIELD_OFFSET(RegisterGameNodeSessionResponse, _impl_._has_bits_);
};

void RegisterGameNodeSessionResponse::clear_session_info() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  if (_impl_.session_info_ != nullptr) _impl_.session_info_->Clear();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
RegisterGameNodeSessionResponse::RegisterGameNodeSessionResponse(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:RegisterGameNodeSessionResponse)
}
inline PROTOBUF_NDEBUG_INLINE RegisterGameNodeSessionResponse::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from)
      : _has_bits_{from._has_bits_},
        _cached_size_{0} {}

RegisterGameNodeSessionResponse::RegisterGameNodeSessionResponse(
    ::google::protobuf::Arena* arena,
    const RegisterGameNodeSessionResponse& from)
    : ::google::protobuf::Message(arena) {
  RegisterGameNodeSessionResponse* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_);
  ::uint32_t cached_has_bits = _impl_._has_bits_[0];
  _impl_.session_info_ = (cached_has_bits & 0x00000001u) ? ::google::protobuf::Message::CopyConstruct<::SessionDetails>(
                              arena, *from._impl_.session_info_)
                        : nullptr;

  // @@protoc_insertion_point(copy_constructor:RegisterGameNodeSessionResponse)
}
inline PROTOBUF_NDEBUG_INLINE RegisterGameNodeSessionResponse::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0} {}

inline void RegisterGameNodeSessionResponse::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  _impl_.session_info_ = {};
}
RegisterGameNodeSessionResponse::~RegisterGameNodeSessionResponse() {
  // @@protoc_insertion_point(destructor:RegisterGameNodeSessionResponse)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void RegisterGameNodeSessionResponse::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  delete _impl_.session_info_;
  _impl_.~Impl_();
}

const ::google::protobuf::MessageLite::ClassData*
RegisterGameNodeSessionResponse::GetClassData() const {
  PROTOBUF_CONSTINIT static const ::google::protobuf::MessageLite::
      ClassDataFull _data_ = {
          {
              nullptr,  // OnDemandRegisterArenaDtor
              PROTOBUF_FIELD_OFFSET(RegisterGameNodeSessionResponse, _impl_._cached_size_),
              false,
          },
          &RegisterGameNodeSessionResponse::MergeImpl,
          &RegisterGameNodeSessionResponse::kDescriptorMethods,
      };
  return &_data_;
}
PROTOBUF_NOINLINE void RegisterGameNodeSessionResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:RegisterGameNodeSessionResponse)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    ABSL_DCHECK(_impl_.session_info_ != nullptr);
    _impl_.session_info_->Clear();
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* RegisterGameNodeSessionResponse::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<0, 1, 1, 0, 2> RegisterGameNodeSessionResponse::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(RegisterGameNodeSessionResponse, _impl_._has_bits_),
    0, // no _extensions_
    1, 0,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967294,  // skipmap
    offsetof(decltype(_table_), field_entries),
    1,  // num_field_entries
    1,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    &_RegisterGameNodeSessionResponse_default_instance_._instance,
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::RegisterGameNodeSessionResponse>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // .SessionDetails session_info = 1;
    {::_pbi::TcParser::FastMtS1,
     {10, 0, 0, PROTOBUF_FIELD_OFFSET(RegisterGameNodeSessionResponse, _impl_.session_info_)}},
  }}, {{
    65535, 65535
  }}, {{
    // .SessionDetails session_info = 1;
    {PROTOBUF_FIELD_OFFSET(RegisterGameNodeSessionResponse, _impl_.session_info_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
  }}, {{
    {::_pbi::TcParser::GetTable<::SessionDetails>()},
  }}, {{
  }},
};

::uint8_t* RegisterGameNodeSessionResponse::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:RegisterGameNodeSessionResponse)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  // .SessionDetails session_info = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
        1, *_impl_.session_info_, _impl_.session_info_->GetCachedSize(), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:RegisterGameNodeSessionResponse)
  return target;
}

::size_t RegisterGameNodeSessionResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:RegisterGameNodeSessionResponse)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // .SessionDetails session_info = 1;
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    total_size +=
        1 + ::google::protobuf::internal::WireFormatLite::MessageSize(*_impl_.session_info_);
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}


void RegisterGameNodeSessionResponse::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<RegisterGameNodeSessionResponse*>(&to_msg);
  auto& from = static_cast<const RegisterGameNodeSessionResponse&>(from_msg);
  ::google::protobuf::Arena* arena = _this->GetArena();
  // @@protoc_insertion_point(class_specific_merge_from_start:RegisterGameNodeSessionResponse)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    ABSL_DCHECK(from._impl_.session_info_ != nullptr);
    if (_this->_impl_.session_info_ == nullptr) {
      _this->_impl_.session_info_ =
          ::google::protobuf::Message::CopyConstruct<::SessionDetails>(arena, *from._impl_.session_info_);
    } else {
      _this->_impl_.session_info_->MergeFrom(*from._impl_.session_info_);
    }
  }
  _this->_impl_._has_bits_[0] |= cached_has_bits;
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void RegisterGameNodeSessionResponse::CopyFrom(const RegisterGameNodeSessionResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:RegisterGameNodeSessionResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool RegisterGameNodeSessionResponse::IsInitialized() const {
  return true;
}

void RegisterGameNodeSessionResponse::InternalSwap(RegisterGameNodeSessionResponse* PROTOBUF_RESTRICT other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  swap(_impl_.session_info_, other->_impl_.session_info_);
}

::google::protobuf::Metadata RegisterGameNodeSessionResponse::GetMetadata() const {
  return ::_pbi::AssignDescriptors(&descriptor_table_common_2fcommon_5fmessage_2eproto_getter,
                                   &descriptor_table_common_2fcommon_5fmessage_2eproto_once,
                                   file_level_metadata_common_2fcommon_5fmessage_2eproto[10]);
}
// ===================================================================

class RegisterSessionGateNodeResponse::_Internal {
 public:
  using HasBits = decltype(std::declval<RegisterSessionGateNodeResponse>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
    8 * PROTOBUF_FIELD_OFFSET(RegisterSessionGateNodeResponse, _impl_._has_bits_);
};

void RegisterSessionGateNodeResponse::clear_session_info() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  if (_impl_.session_info_ != nullptr) _impl_.session_info_->Clear();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
RegisterSessionGateNodeResponse::RegisterSessionGateNodeResponse(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:RegisterSessionGateNodeResponse)
}
inline PROTOBUF_NDEBUG_INLINE RegisterSessionGateNodeResponse::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from)
      : _has_bits_{from._has_bits_},
        _cached_size_{0} {}

RegisterSessionGateNodeResponse::RegisterSessionGateNodeResponse(
    ::google::protobuf::Arena* arena,
    const RegisterSessionGateNodeResponse& from)
    : ::google::protobuf::Message(arena) {
  RegisterSessionGateNodeResponse* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_);
  ::uint32_t cached_has_bits = _impl_._has_bits_[0];
  _impl_.session_info_ = (cached_has_bits & 0x00000001u) ? ::google::protobuf::Message::CopyConstruct<::SessionDetails>(
                              arena, *from._impl_.session_info_)
                        : nullptr;

  // @@protoc_insertion_point(copy_constructor:RegisterSessionGateNodeResponse)
}
inline PROTOBUF_NDEBUG_INLINE RegisterSessionGateNodeResponse::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0} {}

inline void RegisterSessionGateNodeResponse::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  _impl_.session_info_ = {};
}
RegisterSessionGateNodeResponse::~RegisterSessionGateNodeResponse() {
  // @@protoc_insertion_point(destructor:RegisterSessionGateNodeResponse)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void RegisterSessionGateNodeResponse::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  delete _impl_.session_info_;
  _impl_.~Impl_();
}

const ::google::protobuf::MessageLite::ClassData*
RegisterSessionGateNodeResponse::GetClassData() const {
  PROTOBUF_CONSTINIT static const ::google::protobuf::MessageLite::
      ClassDataFull _data_ = {
          {
              nullptr,  // OnDemandRegisterArenaDtor
              PROTOBUF_FIELD_OFFSET(RegisterSessionGateNodeResponse, _impl_._cached_size_),
              false,
          },
          &RegisterSessionGateNodeResponse::MergeImpl,
          &RegisterSessionGateNodeResponse::kDescriptorMethods,
      };
  return &_data_;
}
PROTOBUF_NOINLINE void RegisterSessionGateNodeResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:RegisterSessionGateNodeResponse)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    ABSL_DCHECK(_impl_.session_info_ != nullptr);
    _impl_.session_info_->Clear();
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* RegisterSessionGateNodeResponse::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<0, 1, 1, 0, 2> RegisterSessionGateNodeResponse::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(RegisterSessionGateNodeResponse, _impl_._has_bits_),
    0, // no _extensions_
    1, 0,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967294,  // skipmap
    offsetof(decltype(_table_), field_entries),
    1,  // num_field_entries
    1,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    &_RegisterSessionGateNodeResponse_default_instance_._instance,
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::RegisterSessionGateNodeResponse>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // .SessionDetails session_info = 1;
    {::_pbi::TcParser::FastMtS1,
     {10, 0, 0, PROTOBUF_FIELD_OFFSET(RegisterSessionGateNodeResponse, _impl_.session_info_)}},
  }}, {{
    65535, 65535
  }}, {{
    // .SessionDetails session_info = 1;
    {PROTOBUF_FIELD_OFFSET(RegisterSessionGateNodeResponse, _impl_.session_info_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
  }}, {{
    {::_pbi::TcParser::GetTable<::SessionDetails>()},
  }}, {{
  }},
};

::uint8_t* RegisterSessionGateNodeResponse::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:RegisterSessionGateNodeResponse)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  // .SessionDetails session_info = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
        1, *_impl_.session_info_, _impl_.session_info_->GetCachedSize(), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:RegisterSessionGateNodeResponse)
  return target;
}

::size_t RegisterSessionGateNodeResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:RegisterSessionGateNodeResponse)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // .SessionDetails session_info = 1;
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    total_size +=
        1 + ::google::protobuf::internal::WireFormatLite::MessageSize(*_impl_.session_info_);
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}


void RegisterSessionGateNodeResponse::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<RegisterSessionGateNodeResponse*>(&to_msg);
  auto& from = static_cast<const RegisterSessionGateNodeResponse&>(from_msg);
  ::google::protobuf::Arena* arena = _this->GetArena();
  // @@protoc_insertion_point(class_specific_merge_from_start:RegisterSessionGateNodeResponse)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    ABSL_DCHECK(from._impl_.session_info_ != nullptr);
    if (_this->_impl_.session_info_ == nullptr) {
      _this->_impl_.session_info_ =
          ::google::protobuf::Message::CopyConstruct<::SessionDetails>(arena, *from._impl_.session_info_);
    } else {
      _this->_impl_.session_info_->MergeFrom(*from._impl_.session_info_);
    }
  }
  _this->_impl_._has_bits_[0] |= cached_has_bits;
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void RegisterSessionGateNodeResponse::CopyFrom(const RegisterSessionGateNodeResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:RegisterSessionGateNodeResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool RegisterSessionGateNodeResponse::IsInitialized() const {
  return true;
}

void RegisterSessionGateNodeResponse::InternalSwap(RegisterSessionGateNodeResponse* PROTOBUF_RESTRICT other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  swap(_impl_.session_info_, other->_impl_.session_info_);
}

::google::protobuf::Metadata RegisterSessionGateNodeResponse::GetMetadata() const {
  return ::_pbi::AssignDescriptors(&descriptor_table_common_2fcommon_5fmessage_2eproto_getter,
                                   &descriptor_table_common_2fcommon_5fmessage_2eproto_once,
                                   file_level_metadata_common_2fcommon_5fmessage_2eproto[11]);
}
// ===================================================================

class RegisterCentreSessionNodeRequest::_Internal {
 public:
  using HasBits = decltype(std::declval<RegisterCentreSessionNodeRequest>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
    8 * PROTOBUF_FIELD_OFFSET(RegisterCentreSessionNodeRequest, _impl_._has_bits_);
};

void RegisterCentreSessionNodeRequest::clear_session_info() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  if (_impl_.session_info_ != nullptr) _impl_.session_info_->Clear();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
RegisterCentreSessionNodeRequest::RegisterCentreSessionNodeRequest(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:RegisterCentreSessionNodeRequest)
}
inline PROTOBUF_NDEBUG_INLINE RegisterCentreSessionNodeRequest::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from)
      : _has_bits_{from._has_bits_},
        _cached_size_{0} {}

RegisterCentreSessionNodeRequest::RegisterCentreSessionNodeRequest(
    ::google::protobuf::Arena* arena,
    const RegisterCentreSessionNodeRequest& from)
    : ::google::protobuf::Message(arena) {
  RegisterCentreSessionNodeRequest* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_);
  ::uint32_t cached_has_bits = _impl_._has_bits_[0];
  _impl_.session_info_ = (cached_has_bits & 0x00000001u) ? ::google::protobuf::Message::CopyConstruct<::SessionDetails>(
                              arena, *from._impl_.session_info_)
                        : nullptr;
  _impl_.centre_node_id_ = from._impl_.centre_node_id_;

  // @@protoc_insertion_point(copy_constructor:RegisterCentreSessionNodeRequest)
}
inline PROTOBUF_NDEBUG_INLINE RegisterCentreSessionNodeRequest::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0} {}

inline void RegisterCentreSessionNodeRequest::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, session_info_),
           0,
           offsetof(Impl_, centre_node_id_) -
               offsetof(Impl_, session_info_) +
               sizeof(Impl_::centre_node_id_));
}
RegisterCentreSessionNodeRequest::~RegisterCentreSessionNodeRequest() {
  // @@protoc_insertion_point(destructor:RegisterCentreSessionNodeRequest)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void RegisterCentreSessionNodeRequest::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  delete _impl_.session_info_;
  _impl_.~Impl_();
}

const ::google::protobuf::MessageLite::ClassData*
RegisterCentreSessionNodeRequest::GetClassData() const {
  PROTOBUF_CONSTINIT static const ::google::protobuf::MessageLite::
      ClassDataFull _data_ = {
          {
              nullptr,  // OnDemandRegisterArenaDtor
              PROTOBUF_FIELD_OFFSET(RegisterCentreSessionNodeRequest, _impl_._cached_size_),
              false,
          },
          &RegisterCentreSessionNodeRequest::MergeImpl,
          &RegisterCentreSessionNodeRequest::kDescriptorMethods,
      };
  return &_data_;
}
PROTOBUF_NOINLINE void RegisterCentreSessionNodeRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:RegisterCentreSessionNodeRequest)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    ABSL_DCHECK(_impl_.session_info_ != nullptr);
    _impl_.session_info_->Clear();
  }
  _impl_.centre_node_id_ = 0u;
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* RegisterCentreSessionNodeRequest::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<1, 2, 1, 0, 2> RegisterCentreSessionNodeRequest::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(RegisterCentreSessionNodeRequest, _impl_._has_bits_),
    0, // no _extensions_
    2, 8,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967292,  // skipmap
    offsetof(decltype(_table_), field_entries),
    2,  // num_field_entries
    1,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    &_RegisterCentreSessionNodeRequest_default_instance_._instance,
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::RegisterCentreSessionNodeRequest>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // uint32 centre_node_id = 2;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(RegisterCentreSessionNodeRequest, _impl_.centre_node_id_), 63>(),
     {16, 63, 0, PROTOBUF_FIELD_OFFSET(RegisterCentreSessionNodeRequest, _impl_.centre_node_id_)}},
    // .SessionDetails session_info = 1;
    {::_pbi::TcParser::FastMtS1,
     {10, 0, 0, PROTOBUF_FIELD_OFFSET(RegisterCentreSessionNodeRequest, _impl_.session_info_)}},
  }}, {{
    65535, 65535
  }}, {{
    // .SessionDetails session_info = 1;
    {PROTOBUF_FIELD_OFFSET(RegisterCentreSessionNodeRequest, _impl_.session_info_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
    // uint32 centre_node_id = 2;
    {PROTOBUF_FIELD_OFFSET(RegisterCentreSessionNodeRequest, _impl_.centre_node_id_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUInt32)},
  }}, {{
    {::_pbi::TcParser::GetTable<::SessionDetails>()},
  }}, {{
  }},
};

::uint8_t* RegisterCentreSessionNodeRequest::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:RegisterCentreSessionNodeRequest)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  // .SessionDetails session_info = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
        1, *_impl_.session_info_, _impl_.session_info_->GetCachedSize(), target, stream);
  }

  // uint32 centre_node_id = 2;
  if (this->_internal_centre_node_id() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt32ToArray(
        2, this->_internal_centre_node_id(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:RegisterCentreSessionNodeRequest)
  return target;
}

::size_t RegisterCentreSessionNodeRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:RegisterCentreSessionNodeRequest)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // .SessionDetails session_info = 1;
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    total_size +=
        1 + ::google::protobuf::internal::WireFormatLite::MessageSize(*_impl_.session_info_);
  }

  // uint32 centre_node_id = 2;
  if (this->_internal_centre_node_id() != 0) {
    total_size += ::_pbi::WireFormatLite::UInt32SizePlusOne(
        this->_internal_centre_node_id());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}


void RegisterCentreSessionNodeRequest::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<RegisterCentreSessionNodeRequest*>(&to_msg);
  auto& from = static_cast<const RegisterCentreSessionNodeRequest&>(from_msg);
  ::google::protobuf::Arena* arena = _this->GetArena();
  // @@protoc_insertion_point(class_specific_merge_from_start:RegisterCentreSessionNodeRequest)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    ABSL_DCHECK(from._impl_.session_info_ != nullptr);
    if (_this->_impl_.session_info_ == nullptr) {
      _this->_impl_.session_info_ =
          ::google::protobuf::Message::CopyConstruct<::SessionDetails>(arena, *from._impl_.session_info_);
    } else {
      _this->_impl_.session_info_->MergeFrom(*from._impl_.session_info_);
    }
  }
  if (from._internal_centre_node_id() != 0) {
    _this->_impl_.centre_node_id_ = from._impl_.centre_node_id_;
  }
  _this->_impl_._has_bits_[0] |= cached_has_bits;
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void RegisterCentreSessionNodeRequest::CopyFrom(const RegisterCentreSessionNodeRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:RegisterCentreSessionNodeRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool RegisterCentreSessionNodeRequest::IsInitialized() const {
  return true;
}

void RegisterCentreSessionNodeRequest::InternalSwap(RegisterCentreSessionNodeRequest* PROTOBUF_RESTRICT other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(RegisterCentreSessionNodeRequest, _impl_.centre_node_id_)
      + sizeof(RegisterCentreSessionNodeRequest::_impl_.centre_node_id_)
      - PROTOBUF_FIELD_OFFSET(RegisterCentreSessionNodeRequest, _impl_.session_info_)>(
          reinterpret_cast<char*>(&_impl_.session_info_),
          reinterpret_cast<char*>(&other->_impl_.session_info_));
}

::google::protobuf::Metadata RegisterCentreSessionNodeRequest::GetMetadata() const {
  return ::_pbi::AssignDescriptors(&descriptor_table_common_2fcommon_5fmessage_2eproto_getter,
                                   &descriptor_table_common_2fcommon_5fmessage_2eproto_once,
                                   file_level_metadata_common_2fcommon_5fmessage_2eproto[12]);
}
// ===================================================================

class RegisterSessionCentreNodeResponse::_Internal {
 public:
  using HasBits = decltype(std::declval<RegisterSessionCentreNodeResponse>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
    8 * PROTOBUF_FIELD_OFFSET(RegisterSessionCentreNodeResponse, _impl_._has_bits_);
};

void RegisterSessionCentreNodeResponse::clear_session_info() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  if (_impl_.session_info_ != nullptr) _impl_.session_info_->Clear();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
RegisterSessionCentreNodeResponse::RegisterSessionCentreNodeResponse(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:RegisterSessionCentreNodeResponse)
}
inline PROTOBUF_NDEBUG_INLINE RegisterSessionCentreNodeResponse::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from)
      : _has_bits_{from._has_bits_},
        _cached_size_{0} {}

RegisterSessionCentreNodeResponse::RegisterSessionCentreNodeResponse(
    ::google::protobuf::Arena* arena,
    const RegisterSessionCentreNodeResponse& from)
    : ::google::protobuf::Message(arena) {
  RegisterSessionCentreNodeResponse* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_);
  ::uint32_t cached_has_bits = _impl_._has_bits_[0];
  _impl_.session_info_ = (cached_has_bits & 0x00000001u) ? ::google::protobuf::Message::CopyConstruct<::SessionDetails>(
                              arena, *from._impl_.session_info_)
                        : nullptr;

  // @@protoc_insertion_point(copy_constructor:RegisterSessionCentreNodeResponse)
}
inline PROTOBUF_NDEBUG_INLINE RegisterSessionCentreNodeResponse::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0} {}

inline void RegisterSessionCentreNodeResponse::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  _impl_.session_info_ = {};
}
RegisterSessionCentreNodeResponse::~RegisterSessionCentreNodeResponse() {
  // @@protoc_insertion_point(destructor:RegisterSessionCentreNodeResponse)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void RegisterSessionCentreNodeResponse::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  delete _impl_.session_info_;
  _impl_.~Impl_();
}

const ::google::protobuf::MessageLite::ClassData*
RegisterSessionCentreNodeResponse::GetClassData() const {
  PROTOBUF_CONSTINIT static const ::google::protobuf::MessageLite::
      ClassDataFull _data_ = {
          {
              nullptr,  // OnDemandRegisterArenaDtor
              PROTOBUF_FIELD_OFFSET(RegisterSessionCentreNodeResponse, _impl_._cached_size_),
              false,
          },
          &RegisterSessionCentreNodeResponse::MergeImpl,
          &RegisterSessionCentreNodeResponse::kDescriptorMethods,
      };
  return &_data_;
}
PROTOBUF_NOINLINE void RegisterSessionCentreNodeResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:RegisterSessionCentreNodeResponse)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    ABSL_DCHECK(_impl_.session_info_ != nullptr);
    _impl_.session_info_->Clear();
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* RegisterSessionCentreNodeResponse::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<0, 1, 1, 0, 2> RegisterSessionCentreNodeResponse::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(RegisterSessionCentreNodeResponse, _impl_._has_bits_),
    0, // no _extensions_
    1, 0,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967294,  // skipmap
    offsetof(decltype(_table_), field_entries),
    1,  // num_field_entries
    1,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    &_RegisterSessionCentreNodeResponse_default_instance_._instance,
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::RegisterSessionCentreNodeResponse>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // .SessionDetails session_info = 1;
    {::_pbi::TcParser::FastMtS1,
     {10, 0, 0, PROTOBUF_FIELD_OFFSET(RegisterSessionCentreNodeResponse, _impl_.session_info_)}},
  }}, {{
    65535, 65535
  }}, {{
    // .SessionDetails session_info = 1;
    {PROTOBUF_FIELD_OFFSET(RegisterSessionCentreNodeResponse, _impl_.session_info_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
  }}, {{
    {::_pbi::TcParser::GetTable<::SessionDetails>()},
  }}, {{
  }},
};

::uint8_t* RegisterSessionCentreNodeResponse::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:RegisterSessionCentreNodeResponse)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  // .SessionDetails session_info = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
        1, *_impl_.session_info_, _impl_.session_info_->GetCachedSize(), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:RegisterSessionCentreNodeResponse)
  return target;
}

::size_t RegisterSessionCentreNodeResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:RegisterSessionCentreNodeResponse)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // .SessionDetails session_info = 1;
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    total_size +=
        1 + ::google::protobuf::internal::WireFormatLite::MessageSize(*_impl_.session_info_);
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}


void RegisterSessionCentreNodeResponse::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<RegisterSessionCentreNodeResponse*>(&to_msg);
  auto& from = static_cast<const RegisterSessionCentreNodeResponse&>(from_msg);
  ::google::protobuf::Arena* arena = _this->GetArena();
  // @@protoc_insertion_point(class_specific_merge_from_start:RegisterSessionCentreNodeResponse)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    ABSL_DCHECK(from._impl_.session_info_ != nullptr);
    if (_this->_impl_.session_info_ == nullptr) {
      _this->_impl_.session_info_ =
          ::google::protobuf::Message::CopyConstruct<::SessionDetails>(arena, *from._impl_.session_info_);
    } else {
      _this->_impl_.session_info_->MergeFrom(*from._impl_.session_info_);
    }
  }
  _this->_impl_._has_bits_[0] |= cached_has_bits;
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void RegisterSessionCentreNodeResponse::CopyFrom(const RegisterSessionCentreNodeResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:RegisterSessionCentreNodeResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool RegisterSessionCentreNodeResponse::IsInitialized() const {
  return true;
}

void RegisterSessionCentreNodeResponse::InternalSwap(RegisterSessionCentreNodeResponse* PROTOBUF_RESTRICT other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  swap(_impl_.session_info_, other->_impl_.session_info_);
}

::google::protobuf::Metadata RegisterSessionCentreNodeResponse::GetMetadata() const {
  return ::_pbi::AssignDescriptors(&descriptor_table_common_2fcommon_5fmessage_2eproto_getter,
                                   &descriptor_table_common_2fcommon_5fmessage_2eproto_once,
                                   file_level_metadata_common_2fcommon_5fmessage_2eproto[13]);
}
// ===================================================================

class GateSessionDisconnectRequest::_Internal {
 public:
  using HasBits = decltype(std::declval<GateSessionDisconnectRequest>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
    8 * PROTOBUF_FIELD_OFFSET(GateSessionDisconnectRequest, _impl_._has_bits_);
};

void GateSessionDisconnectRequest::clear_session_info() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  if (_impl_.session_info_ != nullptr) _impl_.session_info_->Clear();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
GateSessionDisconnectRequest::GateSessionDisconnectRequest(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:GateSessionDisconnectRequest)
}
inline PROTOBUF_NDEBUG_INLINE GateSessionDisconnectRequest::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from)
      : _has_bits_{from._has_bits_},
        _cached_size_{0} {}

GateSessionDisconnectRequest::GateSessionDisconnectRequest(
    ::google::protobuf::Arena* arena,
    const GateSessionDisconnectRequest& from)
    : ::google::protobuf::Message(arena) {
  GateSessionDisconnectRequest* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_);
  ::uint32_t cached_has_bits = _impl_._has_bits_[0];
  _impl_.session_info_ = (cached_has_bits & 0x00000001u) ? ::google::protobuf::Message::CopyConstruct<::SessionDetails>(
                              arena, *from._impl_.session_info_)
                        : nullptr;

  // @@protoc_insertion_point(copy_constructor:GateSessionDisconnectRequest)
}
inline PROTOBUF_NDEBUG_INLINE GateSessionDisconnectRequest::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0} {}

inline void GateSessionDisconnectRequest::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  _impl_.session_info_ = {};
}
GateSessionDisconnectRequest::~GateSessionDisconnectRequest() {
  // @@protoc_insertion_point(destructor:GateSessionDisconnectRequest)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void GateSessionDisconnectRequest::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  delete _impl_.session_info_;
  _impl_.~Impl_();
}

const ::google::protobuf::MessageLite::ClassData*
GateSessionDisconnectRequest::GetClassData() const {
  PROTOBUF_CONSTINIT static const ::google::protobuf::MessageLite::
      ClassDataFull _data_ = {
          {
              nullptr,  // OnDemandRegisterArenaDtor
              PROTOBUF_FIELD_OFFSET(GateSessionDisconnectRequest, _impl_._cached_size_),
              false,
          },
          &GateSessionDisconnectRequest::MergeImpl,
          &GateSessionDisconnectRequest::kDescriptorMethods,
      };
  return &_data_;
}
PROTOBUF_NOINLINE void GateSessionDisconnectRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:GateSessionDisconnectRequest)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    ABSL_DCHECK(_impl_.session_info_ != nullptr);
    _impl_.session_info_->Clear();
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* GateSessionDisconnectRequest::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<0, 1, 1, 0, 2> GateSessionDisconnectRequest::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(GateSessionDisconnectRequest, _impl_._has_bits_),
    0, // no _extensions_
    1, 0,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967294,  // skipmap
    offsetof(decltype(_table_), field_entries),
    1,  // num_field_entries
    1,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    &_GateSessionDisconnectRequest_default_instance_._instance,
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::GateSessionDisconnectRequest>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // .SessionDetails session_info = 1;
    {::_pbi::TcParser::FastMtS1,
     {10, 0, 0, PROTOBUF_FIELD_OFFSET(GateSessionDisconnectRequest, _impl_.session_info_)}},
  }}, {{
    65535, 65535
  }}, {{
    // .SessionDetails session_info = 1;
    {PROTOBUF_FIELD_OFFSET(GateSessionDisconnectRequest, _impl_.session_info_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
  }}, {{
    {::_pbi::TcParser::GetTable<::SessionDetails>()},
  }}, {{
  }},
};

::uint8_t* GateSessionDisconnectRequest::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:GateSessionDisconnectRequest)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  // .SessionDetails session_info = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
        1, *_impl_.session_info_, _impl_.session_info_->GetCachedSize(), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:GateSessionDisconnectRequest)
  return target;
}

::size_t GateSessionDisconnectRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:GateSessionDisconnectRequest)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // .SessionDetails session_info = 1;
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    total_size +=
        1 + ::google::protobuf::internal::WireFormatLite::MessageSize(*_impl_.session_info_);
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}


void GateSessionDisconnectRequest::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<GateSessionDisconnectRequest*>(&to_msg);
  auto& from = static_cast<const GateSessionDisconnectRequest&>(from_msg);
  ::google::protobuf::Arena* arena = _this->GetArena();
  // @@protoc_insertion_point(class_specific_merge_from_start:GateSessionDisconnectRequest)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    ABSL_DCHECK(from._impl_.session_info_ != nullptr);
    if (_this->_impl_.session_info_ == nullptr) {
      _this->_impl_.session_info_ =
          ::google::protobuf::Message::CopyConstruct<::SessionDetails>(arena, *from._impl_.session_info_);
    } else {
      _this->_impl_.session_info_->MergeFrom(*from._impl_.session_info_);
    }
  }
  _this->_impl_._has_bits_[0] |= cached_has_bits;
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void GateSessionDisconnectRequest::CopyFrom(const GateSessionDisconnectRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:GateSessionDisconnectRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool GateSessionDisconnectRequest::IsInitialized() const {
  return true;
}

void GateSessionDisconnectRequest::InternalSwap(GateSessionDisconnectRequest* PROTOBUF_RESTRICT other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  swap(_impl_.session_info_, other->_impl_.session_info_);
}

::google::protobuf::Metadata GateSessionDisconnectRequest::GetMetadata() const {
  return ::_pbi::AssignDescriptors(&descriptor_table_common_2fcommon_5fmessage_2eproto_getter,
                                   &descriptor_table_common_2fcommon_5fmessage_2eproto_once,
                                   file_level_metadata_common_2fcommon_5fmessage_2eproto[14]);
}
// ===================================================================

class RouteMsgStringRequest::_Internal {
 public:
};

RouteMsgStringRequest::RouteMsgStringRequest(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:RouteMsgStringRequest)
}
inline PROTOBUF_NDEBUG_INLINE RouteMsgStringRequest::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from)
      : route_data_list_{visibility, arena, from.route_data_list_},
        body_(arena, from.body_),
        _cached_size_{0} {}

RouteMsgStringRequest::RouteMsgStringRequest(
    ::google::protobuf::Arena* arena,
    const RouteMsgStringRequest& from)
    : ::google::protobuf::Message(arena) {
  RouteMsgStringRequest* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_);
  ::memcpy(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, session_id_),
           reinterpret_cast<const char *>(&from._impl_) +
               offsetof(Impl_, session_id_),
           offsetof(Impl_, is_client_) -
               offsetof(Impl_, session_id_) +
               sizeof(Impl_::is_client_));

  // @@protoc_insertion_point(copy_constructor:RouteMsgStringRequest)
}
inline PROTOBUF_NDEBUG_INLINE RouteMsgStringRequest::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : route_data_list_{visibility, arena},
        body_(arena),
        _cached_size_{0} {}

inline void RouteMsgStringRequest::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, session_id_),
           0,
           offsetof(Impl_, is_client_) -
               offsetof(Impl_, session_id_) +
               sizeof(Impl_::is_client_));
}
RouteMsgStringRequest::~RouteMsgStringRequest() {
  // @@protoc_insertion_point(destructor:RouteMsgStringRequest)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void RouteMsgStringRequest::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  _impl_.body_.Destroy();
  _impl_.~Impl_();
}

const ::google::protobuf::MessageLite::ClassData*
RouteMsgStringRequest::GetClassData() const {
  PROTOBUF_CONSTINIT static const ::google::protobuf::MessageLite::
      ClassDataFull _data_ = {
          {
              nullptr,  // OnDemandRegisterArenaDtor
              PROTOBUF_FIELD_OFFSET(RouteMsgStringRequest, _impl_._cached_size_),
              false,
          },
          &RouteMsgStringRequest::MergeImpl,
          &RouteMsgStringRequest::kDescriptorMethods,
      };
  return &_data_;
}
PROTOBUF_NOINLINE void RouteMsgStringRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:RouteMsgStringRequest)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.route_data_list_.Clear();
  _impl_.body_.ClearToEmpty();
  ::memset(&_impl_.session_id_, 0, static_cast<::size_t>(
      reinterpret_cast<char*>(&_impl_.is_client_) -
      reinterpret_cast<char*>(&_impl_.session_id_)) + sizeof(_impl_.is_client_));
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* RouteMsgStringRequest::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<3, 5, 1, 0, 2> RouteMsgStringRequest::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    5, 56,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967264,  // skipmap
    offsetof(decltype(_table_), field_entries),
    5,  // num_field_entries
    1,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    &_RouteMsgStringRequest_default_instance_._instance,
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::RouteMsgStringRequest>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
    // bytes body = 1;
    {::_pbi::TcParser::FastBS1,
     {10, 63, 0, PROTOBUF_FIELD_OFFSET(RouteMsgStringRequest, _impl_.body_)}},
    // repeated .RouteNodeInfo route_data_list = 2;
    {::_pbi::TcParser::FastMtR1,
     {18, 63, 0, PROTOBUF_FIELD_OFFSET(RouteMsgStringRequest, _impl_.route_data_list_)}},
    // uint64 session_id = 3;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint64_t, offsetof(RouteMsgStringRequest, _impl_.session_id_), 63>(),
     {24, 63, 0, PROTOBUF_FIELD_OFFSET(RouteMsgStringRequest, _impl_.session_id_)}},
    // uint64 id = 4;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint64_t, offsetof(RouteMsgStringRequest, _impl_.id_), 63>(),
     {32, 63, 0, PROTOBUF_FIELD_OFFSET(RouteMsgStringRequest, _impl_.id_)}},
    // bool is_client = 5;
    {::_pbi::TcParser::SingularVarintNoZag1<bool, offsetof(RouteMsgStringRequest, _impl_.is_client_), 63>(),
     {40, 63, 0, PROTOBUF_FIELD_OFFSET(RouteMsgStringRequest, _impl_.is_client_)}},
    {::_pbi::TcParser::MiniParse, {}},
    {::_pbi::TcParser::MiniParse, {}},
  }}, {{
    65535, 65535
  }}, {{
    // bytes body = 1;
    {PROTOBUF_FIELD_OFFSET(RouteMsgStringRequest, _impl_.body_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kBytes | ::_fl::kRepAString)},
    // repeated .RouteNodeInfo route_data_list = 2;
    {PROTOBUF_FIELD_OFFSET(RouteMsgStringRequest, _impl_.route_data_list_), 0, 0,
    (0 | ::_fl::kFcRepeated | ::_fl::kMessage | ::_fl::kTvTable)},
    // uint64 session_id = 3;
    {PROTOBUF_FIELD_OFFSET(RouteMsgStringRequest, _impl_.session_id_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUInt64)},
    // uint64 id = 4;
    {PROTOBUF_FIELD_OFFSET(RouteMsgStringRequest, _impl_.id_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUInt64)},
    // bool is_client = 5;
    {PROTOBUF_FIELD_OFFSET(RouteMsgStringRequest, _impl_.is_client_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kBool)},
  }}, {{
    {::_pbi::TcParser::GetTable<::RouteNodeInfo>()},
  }}, {{
  }},
};

::uint8_t* RouteMsgStringRequest::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:RouteMsgStringRequest)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  // bytes body = 1;
  if (!this->_internal_body().empty()) {
    const std::string& _s = this->_internal_body();
    target = stream->WriteBytesMaybeAliased(1, _s, target);
  }

  // repeated .RouteNodeInfo route_data_list = 2;
  for (unsigned i = 0, n = static_cast<unsigned>(
                           this->_internal_route_data_list_size());
       i < n; i++) {
    const auto& repfield = this->_internal_route_data_list().Get(i);
    target =
        ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
            2, repfield, repfield.GetCachedSize(),
            target, stream);
  }

  // uint64 session_id = 3;
  if (this->_internal_session_id() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt64ToArray(
        3, this->_internal_session_id(), target);
  }

  // uint64 id = 4;
  if (this->_internal_id() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt64ToArray(
        4, this->_internal_id(), target);
  }

  // bool is_client = 5;
  if (this->_internal_is_client() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteBoolToArray(
        5, this->_internal_is_client(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:RouteMsgStringRequest)
  return target;
}

::size_t RouteMsgStringRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:RouteMsgStringRequest)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated .RouteNodeInfo route_data_list = 2;
  total_size += 1UL * this->_internal_route_data_list_size();
  for (const auto& msg : this->_internal_route_data_list()) {
    total_size += ::google::protobuf::internal::WireFormatLite::MessageSize(msg);
  }
  // bytes body = 1;
  if (!this->_internal_body().empty()) {
    total_size += 1 + ::google::protobuf::internal::WireFormatLite::BytesSize(
                                    this->_internal_body());
  }

  // uint64 session_id = 3;
  if (this->_internal_session_id() != 0) {
    total_size += ::_pbi::WireFormatLite::UInt64SizePlusOne(
        this->_internal_session_id());
  }

  // uint64 id = 4;
  if (this->_internal_id() != 0) {
    total_size += ::_pbi::WireFormatLite::UInt64SizePlusOne(
        this->_internal_id());
  }

  // bool is_client = 5;
  if (this->_internal_is_client() != 0) {
    total_size += 2;
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}


void RouteMsgStringRequest::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<RouteMsgStringRequest*>(&to_msg);
  auto& from = static_cast<const RouteMsgStringRequest&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:RouteMsgStringRequest)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_internal_mutable_route_data_list()->MergeFrom(
      from._internal_route_data_list());
  if (!from._internal_body().empty()) {
    _this->_internal_set_body(from._internal_body());
  }
  if (from._internal_session_id() != 0) {
    _this->_impl_.session_id_ = from._impl_.session_id_;
  }
  if (from._internal_id() != 0) {
    _this->_impl_.id_ = from._impl_.id_;
  }
  if (from._internal_is_client() != 0) {
    _this->_impl_.is_client_ = from._impl_.is_client_;
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void RouteMsgStringRequest::CopyFrom(const RouteMsgStringRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:RouteMsgStringRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool RouteMsgStringRequest::IsInitialized() const {
  return true;
}

void RouteMsgStringRequest::InternalSwap(RouteMsgStringRequest* PROTOBUF_RESTRICT other) {
  using std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  _impl_.route_data_list_.InternalSwap(&other->_impl_.route_data_list_);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.body_, &other->_impl_.body_, arena);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(RouteMsgStringRequest, _impl_.is_client_)
      + sizeof(RouteMsgStringRequest::_impl_.is_client_)
      - PROTOBUF_FIELD_OFFSET(RouteMsgStringRequest, _impl_.session_id_)>(
          reinterpret_cast<char*>(&_impl_.session_id_),
          reinterpret_cast<char*>(&other->_impl_.session_id_));
}

::google::protobuf::Metadata RouteMsgStringRequest::GetMetadata() const {
  return ::_pbi::AssignDescriptors(&descriptor_table_common_2fcommon_5fmessage_2eproto_getter,
                                   &descriptor_table_common_2fcommon_5fmessage_2eproto_once,
                                   file_level_metadata_common_2fcommon_5fmessage_2eproto[15]);
}
// ===================================================================

class RouteMsgStringResponse::_Internal {
 public:
};

RouteMsgStringResponse::RouteMsgStringResponse(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:RouteMsgStringResponse)
}
inline PROTOBUF_NDEBUG_INLINE RouteMsgStringResponse::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from)
      : route_data_list_{visibility, arena, from.route_data_list_},
        body_(arena, from.body_),
        _cached_size_{0} {}

RouteMsgStringResponse::RouteMsgStringResponse(
    ::google::protobuf::Arena* arena,
    const RouteMsgStringResponse& from)
    : ::google::protobuf::Message(arena) {
  RouteMsgStringResponse* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_);
  ::memcpy(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, session_id_),
           reinterpret_cast<const char *>(&from._impl_) +
               offsetof(Impl_, session_id_),
           offsetof(Impl_, is_client_) -
               offsetof(Impl_, session_id_) +
               sizeof(Impl_::is_client_));

  // @@protoc_insertion_point(copy_constructor:RouteMsgStringResponse)
}
inline PROTOBUF_NDEBUG_INLINE RouteMsgStringResponse::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : route_data_list_{visibility, arena},
        body_(arena),
        _cached_size_{0} {}

inline void RouteMsgStringResponse::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, session_id_),
           0,
           offsetof(Impl_, is_client_) -
               offsetof(Impl_, session_id_) +
               sizeof(Impl_::is_client_));
}
RouteMsgStringResponse::~RouteMsgStringResponse() {
  // @@protoc_insertion_point(destructor:RouteMsgStringResponse)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void RouteMsgStringResponse::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  _impl_.body_.Destroy();
  _impl_.~Impl_();
}

const ::google::protobuf::MessageLite::ClassData*
RouteMsgStringResponse::GetClassData() const {
  PROTOBUF_CONSTINIT static const ::google::protobuf::MessageLite::
      ClassDataFull _data_ = {
          {
              nullptr,  // OnDemandRegisterArenaDtor
              PROTOBUF_FIELD_OFFSET(RouteMsgStringResponse, _impl_._cached_size_),
              false,
          },
          &RouteMsgStringResponse::MergeImpl,
          &RouteMsgStringResponse::kDescriptorMethods,
      };
  return &_data_;
}
PROTOBUF_NOINLINE void RouteMsgStringResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:RouteMsgStringResponse)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.route_data_list_.Clear();
  _impl_.body_.ClearToEmpty();
  ::memset(&_impl_.session_id_, 0, static_cast<::size_t>(
      reinterpret_cast<char*>(&_impl_.is_client_) -
      reinterpret_cast<char*>(&_impl_.session_id_)) + sizeof(_impl_.is_client_));
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* RouteMsgStringResponse::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<3, 5, 1, 0, 2> RouteMsgStringResponse::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    5, 56,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967264,  // skipmap
    offsetof(decltype(_table_), field_entries),
    5,  // num_field_entries
    1,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    &_RouteMsgStringResponse_default_instance_._instance,
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::RouteMsgStringResponse>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
    // bytes body = 1;
    {::_pbi::TcParser::FastBS1,
     {10, 63, 0, PROTOBUF_FIELD_OFFSET(RouteMsgStringResponse, _impl_.body_)}},
    // repeated .RouteNodeInfo route_data_list = 2;
    {::_pbi::TcParser::FastMtR1,
     {18, 63, 0, PROTOBUF_FIELD_OFFSET(RouteMsgStringResponse, _impl_.route_data_list_)}},
    // uint64 session_id = 3;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint64_t, offsetof(RouteMsgStringResponse, _impl_.session_id_), 63>(),
     {24, 63, 0, PROTOBUF_FIELD_OFFSET(RouteMsgStringResponse, _impl_.session_id_)}},
    // uint64 id = 4;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint64_t, offsetof(RouteMsgStringResponse, _impl_.id_), 63>(),
     {32, 63, 0, PROTOBUF_FIELD_OFFSET(RouteMsgStringResponse, _impl_.id_)}},
    // bool is_client = 5;
    {::_pbi::TcParser::SingularVarintNoZag1<bool, offsetof(RouteMsgStringResponse, _impl_.is_client_), 63>(),
     {40, 63, 0, PROTOBUF_FIELD_OFFSET(RouteMsgStringResponse, _impl_.is_client_)}},
    {::_pbi::TcParser::MiniParse, {}},
    {::_pbi::TcParser::MiniParse, {}},
  }}, {{
    65535, 65535
  }}, {{
    // bytes body = 1;
    {PROTOBUF_FIELD_OFFSET(RouteMsgStringResponse, _impl_.body_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kBytes | ::_fl::kRepAString)},
    // repeated .RouteNodeInfo route_data_list = 2;
    {PROTOBUF_FIELD_OFFSET(RouteMsgStringResponse, _impl_.route_data_list_), 0, 0,
    (0 | ::_fl::kFcRepeated | ::_fl::kMessage | ::_fl::kTvTable)},
    // uint64 session_id = 3;
    {PROTOBUF_FIELD_OFFSET(RouteMsgStringResponse, _impl_.session_id_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUInt64)},
    // uint64 id = 4;
    {PROTOBUF_FIELD_OFFSET(RouteMsgStringResponse, _impl_.id_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUInt64)},
    // bool is_client = 5;
    {PROTOBUF_FIELD_OFFSET(RouteMsgStringResponse, _impl_.is_client_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kBool)},
  }}, {{
    {::_pbi::TcParser::GetTable<::RouteNodeInfo>()},
  }}, {{
  }},
};

::uint8_t* RouteMsgStringResponse::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:RouteMsgStringResponse)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  // bytes body = 1;
  if (!this->_internal_body().empty()) {
    const std::string& _s = this->_internal_body();
    target = stream->WriteBytesMaybeAliased(1, _s, target);
  }

  // repeated .RouteNodeInfo route_data_list = 2;
  for (unsigned i = 0, n = static_cast<unsigned>(
                           this->_internal_route_data_list_size());
       i < n; i++) {
    const auto& repfield = this->_internal_route_data_list().Get(i);
    target =
        ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
            2, repfield, repfield.GetCachedSize(),
            target, stream);
  }

  // uint64 session_id = 3;
  if (this->_internal_session_id() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt64ToArray(
        3, this->_internal_session_id(), target);
  }

  // uint64 id = 4;
  if (this->_internal_id() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt64ToArray(
        4, this->_internal_id(), target);
  }

  // bool is_client = 5;
  if (this->_internal_is_client() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteBoolToArray(
        5, this->_internal_is_client(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:RouteMsgStringResponse)
  return target;
}

::size_t RouteMsgStringResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:RouteMsgStringResponse)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated .RouteNodeInfo route_data_list = 2;
  total_size += 1UL * this->_internal_route_data_list_size();
  for (const auto& msg : this->_internal_route_data_list()) {
    total_size += ::google::protobuf::internal::WireFormatLite::MessageSize(msg);
  }
  // bytes body = 1;
  if (!this->_internal_body().empty()) {
    total_size += 1 + ::google::protobuf::internal::WireFormatLite::BytesSize(
                                    this->_internal_body());
  }

  // uint64 session_id = 3;
  if (this->_internal_session_id() != 0) {
    total_size += ::_pbi::WireFormatLite::UInt64SizePlusOne(
        this->_internal_session_id());
  }

  // uint64 id = 4;
  if (this->_internal_id() != 0) {
    total_size += ::_pbi::WireFormatLite::UInt64SizePlusOne(
        this->_internal_id());
  }

  // bool is_client = 5;
  if (this->_internal_is_client() != 0) {
    total_size += 2;
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}


void RouteMsgStringResponse::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<RouteMsgStringResponse*>(&to_msg);
  auto& from = static_cast<const RouteMsgStringResponse&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:RouteMsgStringResponse)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_internal_mutable_route_data_list()->MergeFrom(
      from._internal_route_data_list());
  if (!from._internal_body().empty()) {
    _this->_internal_set_body(from._internal_body());
  }
  if (from._internal_session_id() != 0) {
    _this->_impl_.session_id_ = from._impl_.session_id_;
  }
  if (from._internal_id() != 0) {
    _this->_impl_.id_ = from._impl_.id_;
  }
  if (from._internal_is_client() != 0) {
    _this->_impl_.is_client_ = from._impl_.is_client_;
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void RouteMsgStringResponse::CopyFrom(const RouteMsgStringResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:RouteMsgStringResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool RouteMsgStringResponse::IsInitialized() const {
  return true;
}

void RouteMsgStringResponse::InternalSwap(RouteMsgStringResponse* PROTOBUF_RESTRICT other) {
  using std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  _impl_.route_data_list_.InternalSwap(&other->_impl_.route_data_list_);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.body_, &other->_impl_.body_, arena);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(RouteMsgStringResponse, _impl_.is_client_)
      + sizeof(RouteMsgStringResponse::_impl_.is_client_)
      - PROTOBUF_FIELD_OFFSET(RouteMsgStringResponse, _impl_.session_id_)>(
          reinterpret_cast<char*>(&_impl_.session_id_),
          reinterpret_cast<char*>(&other->_impl_.session_id_));
}

::google::protobuf::Metadata RouteMsgStringResponse::GetMetadata() const {
  return ::_pbi::AssignDescriptors(&descriptor_table_common_2fcommon_5fmessage_2eproto_getter,
                                   &descriptor_table_common_2fcommon_5fmessage_2eproto_once,
                                   file_level_metadata_common_2fcommon_5fmessage_2eproto[16]);
}
// ===================================================================

class RoutePlayerMsgStringRequest::_Internal {
 public:
  using HasBits = decltype(std::declval<RoutePlayerMsgStringRequest>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
    8 * PROTOBUF_FIELD_OFFSET(RoutePlayerMsgStringRequest, _impl_._has_bits_);
};

void RoutePlayerMsgStringRequest::clear_node_list() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.node_list_.Clear();
}
RoutePlayerMsgStringRequest::RoutePlayerMsgStringRequest(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:RoutePlayerMsgStringRequest)
}
inline PROTOBUF_NDEBUG_INLINE RoutePlayerMsgStringRequest::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from)
      : _has_bits_{from._has_bits_},
        _cached_size_{0},
        node_list_{visibility, arena, from.node_list_},
        body_(arena, from.body_) {}

RoutePlayerMsgStringRequest::RoutePlayerMsgStringRequest(
    ::google::protobuf::Arena* arena,
    const RoutePlayerMsgStringRequest& from)
    : ::google::protobuf::Message(arena) {
  RoutePlayerMsgStringRequest* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_);
  ::uint32_t cached_has_bits = _impl_._has_bits_[0];
  _impl_.player_ex_ = (cached_has_bits & 0x00000001u) ? ::google::protobuf::Message::CopyConstruct<::PlayerMessageExtern>(
                              arena, *from._impl_.player_ex_)
                        : nullptr;

  // @@protoc_insertion_point(copy_constructor:RoutePlayerMsgStringRequest)
}
inline PROTOBUF_NDEBUG_INLINE RoutePlayerMsgStringRequest::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0},
        node_list_{visibility, arena},
        body_(arena) {}

inline void RoutePlayerMsgStringRequest::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  _impl_.player_ex_ = {};
}
RoutePlayerMsgStringRequest::~RoutePlayerMsgStringRequest() {
  // @@protoc_insertion_point(destructor:RoutePlayerMsgStringRequest)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void RoutePlayerMsgStringRequest::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  _impl_.body_.Destroy();
  delete _impl_.player_ex_;
  _impl_.~Impl_();
}

const ::google::protobuf::MessageLite::ClassData*
RoutePlayerMsgStringRequest::GetClassData() const {
  PROTOBUF_CONSTINIT static const ::google::protobuf::MessageLite::
      ClassDataFull _data_ = {
          {
              nullptr,  // OnDemandRegisterArenaDtor
              PROTOBUF_FIELD_OFFSET(RoutePlayerMsgStringRequest, _impl_._cached_size_),
              false,
          },
          &RoutePlayerMsgStringRequest::MergeImpl,
          &RoutePlayerMsgStringRequest::kDescriptorMethods,
      };
  return &_data_;
}
PROTOBUF_NOINLINE void RoutePlayerMsgStringRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:RoutePlayerMsgStringRequest)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.node_list_.Clear();
  _impl_.body_.ClearToEmpty();
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    ABSL_DCHECK(_impl_.player_ex_ != nullptr);
    _impl_.player_ex_->Clear();
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* RoutePlayerMsgStringRequest::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<2, 3, 2, 0, 2> RoutePlayerMsgStringRequest::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(RoutePlayerMsgStringRequest, _impl_._has_bits_),
    0, // no _extensions_
    3, 24,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967288,  // skipmap
    offsetof(decltype(_table_), field_entries),
    3,  // num_field_entries
    2,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    &_RoutePlayerMsgStringRequest_default_instance_._instance,
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::RoutePlayerMsgStringRequest>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
    // bytes body = 1;
    {::_pbi::TcParser::FastBS1,
     {10, 63, 0, PROTOBUF_FIELD_OFFSET(RoutePlayerMsgStringRequest, _impl_.body_)}},
    // repeated .NodeInfo node_list = 2;
    {::_pbi::TcParser::FastMtR1,
     {18, 63, 0, PROTOBUF_FIELD_OFFSET(RoutePlayerMsgStringRequest, _impl_.node_list_)}},
    // .PlayerMessageExtern player_ex = 3;
    {::_pbi::TcParser::FastMtS1,
     {26, 0, 1, PROTOBUF_FIELD_OFFSET(RoutePlayerMsgStringRequest, _impl_.player_ex_)}},
  }}, {{
    65535, 65535
  }}, {{
    // bytes body = 1;
    {PROTOBUF_FIELD_OFFSET(RoutePlayerMsgStringRequest, _impl_.body_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kBytes | ::_fl::kRepAString)},
    // repeated .NodeInfo node_list = 2;
    {PROTOBUF_FIELD_OFFSET(RoutePlayerMsgStringRequest, _impl_.node_list_), -1, 0,
    (0 | ::_fl::kFcRepeated | ::_fl::kMessage | ::_fl::kTvTable)},
    // .PlayerMessageExtern player_ex = 3;
    {PROTOBUF_FIELD_OFFSET(RoutePlayerMsgStringRequest, _impl_.player_ex_), _Internal::kHasBitsOffset + 0, 1,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
  }}, {{
    {::_pbi::TcParser::GetTable<::NodeInfo>()},
    {::_pbi::TcParser::GetTable<::PlayerMessageExtern>()},
  }}, {{
  }},
};

::uint8_t* RoutePlayerMsgStringRequest::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:RoutePlayerMsgStringRequest)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  // bytes body = 1;
  if (!this->_internal_body().empty()) {
    const std::string& _s = this->_internal_body();
    target = stream->WriteBytesMaybeAliased(1, _s, target);
  }

  // repeated .NodeInfo node_list = 2;
  for (unsigned i = 0, n = static_cast<unsigned>(
                           this->_internal_node_list_size());
       i < n; i++) {
    const auto& repfield = this->_internal_node_list().Get(i);
    target =
        ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
            2, repfield, repfield.GetCachedSize(),
            target, stream);
  }

  cached_has_bits = _impl_._has_bits_[0];
  // .PlayerMessageExtern player_ex = 3;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
        3, *_impl_.player_ex_, _impl_.player_ex_->GetCachedSize(), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:RoutePlayerMsgStringRequest)
  return target;
}

::size_t RoutePlayerMsgStringRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:RoutePlayerMsgStringRequest)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated .NodeInfo node_list = 2;
  total_size += 1UL * this->_internal_node_list_size();
  for (const auto& msg : this->_internal_node_list()) {
    total_size += ::google::protobuf::internal::WireFormatLite::MessageSize(msg);
  }
  // bytes body = 1;
  if (!this->_internal_body().empty()) {
    total_size += 1 + ::google::protobuf::internal::WireFormatLite::BytesSize(
                                    this->_internal_body());
  }

  // .PlayerMessageExtern player_ex = 3;
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    total_size +=
        1 + ::google::protobuf::internal::WireFormatLite::MessageSize(*_impl_.player_ex_);
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}


void RoutePlayerMsgStringRequest::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<RoutePlayerMsgStringRequest*>(&to_msg);
  auto& from = static_cast<const RoutePlayerMsgStringRequest&>(from_msg);
  ::google::protobuf::Arena* arena = _this->GetArena();
  // @@protoc_insertion_point(class_specific_merge_from_start:RoutePlayerMsgStringRequest)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_internal_mutable_node_list()->MergeFrom(
      from._internal_node_list());
  if (!from._internal_body().empty()) {
    _this->_internal_set_body(from._internal_body());
  }
  cached_has_bits = from._impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    ABSL_DCHECK(from._impl_.player_ex_ != nullptr);
    if (_this->_impl_.player_ex_ == nullptr) {
      _this->_impl_.player_ex_ =
          ::google::protobuf::Message::CopyConstruct<::PlayerMessageExtern>(arena, *from._impl_.player_ex_);
    } else {
      _this->_impl_.player_ex_->MergeFrom(*from._impl_.player_ex_);
    }
  }
  _this->_impl_._has_bits_[0] |= cached_has_bits;
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void RoutePlayerMsgStringRequest::CopyFrom(const RoutePlayerMsgStringRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:RoutePlayerMsgStringRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool RoutePlayerMsgStringRequest::IsInitialized() const {
  return true;
}

void RoutePlayerMsgStringRequest::InternalSwap(RoutePlayerMsgStringRequest* PROTOBUF_RESTRICT other) {
  using std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  _impl_.node_list_.InternalSwap(&other->_impl_.node_list_);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.body_, &other->_impl_.body_, arena);
  swap(_impl_.player_ex_, other->_impl_.player_ex_);
}

::google::protobuf::Metadata RoutePlayerMsgStringRequest::GetMetadata() const {
  return ::_pbi::AssignDescriptors(&descriptor_table_common_2fcommon_5fmessage_2eproto_getter,
                                   &descriptor_table_common_2fcommon_5fmessage_2eproto_once,
                                   file_level_metadata_common_2fcommon_5fmessage_2eproto[17]);
}
// ===================================================================

class RoutePlayerMsgStringResponse::_Internal {
 public:
  using HasBits = decltype(std::declval<RoutePlayerMsgStringResponse>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
    8 * PROTOBUF_FIELD_OFFSET(RoutePlayerMsgStringResponse, _impl_._has_bits_);
};

void RoutePlayerMsgStringResponse::clear_node_list() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.node_list_.Clear();
}
RoutePlayerMsgStringResponse::RoutePlayerMsgStringResponse(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:RoutePlayerMsgStringResponse)
}
inline PROTOBUF_NDEBUG_INLINE RoutePlayerMsgStringResponse::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from)
      : _has_bits_{from._has_bits_},
        _cached_size_{0},
        node_list_{visibility, arena, from.node_list_},
        body_(arena, from.body_) {}

RoutePlayerMsgStringResponse::RoutePlayerMsgStringResponse(
    ::google::protobuf::Arena* arena,
    const RoutePlayerMsgStringResponse& from)
    : ::google::protobuf::Message(arena) {
  RoutePlayerMsgStringResponse* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_);
  ::uint32_t cached_has_bits = _impl_._has_bits_[0];
  _impl_.player_ex_ = (cached_has_bits & 0x00000001u) ? ::google::protobuf::Message::CopyConstruct<::PlayerMessageExtern>(
                              arena, *from._impl_.player_ex_)
                        : nullptr;

  // @@protoc_insertion_point(copy_constructor:RoutePlayerMsgStringResponse)
}
inline PROTOBUF_NDEBUG_INLINE RoutePlayerMsgStringResponse::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0},
        node_list_{visibility, arena},
        body_(arena) {}

inline void RoutePlayerMsgStringResponse::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  _impl_.player_ex_ = {};
}
RoutePlayerMsgStringResponse::~RoutePlayerMsgStringResponse() {
  // @@protoc_insertion_point(destructor:RoutePlayerMsgStringResponse)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void RoutePlayerMsgStringResponse::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  _impl_.body_.Destroy();
  delete _impl_.player_ex_;
  _impl_.~Impl_();
}

const ::google::protobuf::MessageLite::ClassData*
RoutePlayerMsgStringResponse::GetClassData() const {
  PROTOBUF_CONSTINIT static const ::google::protobuf::MessageLite::
      ClassDataFull _data_ = {
          {
              nullptr,  // OnDemandRegisterArenaDtor
              PROTOBUF_FIELD_OFFSET(RoutePlayerMsgStringResponse, _impl_._cached_size_),
              false,
          },
          &RoutePlayerMsgStringResponse::MergeImpl,
          &RoutePlayerMsgStringResponse::kDescriptorMethods,
      };
  return &_data_;
}
PROTOBUF_NOINLINE void RoutePlayerMsgStringResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:RoutePlayerMsgStringResponse)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.node_list_.Clear();
  _impl_.body_.ClearToEmpty();
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    ABSL_DCHECK(_impl_.player_ex_ != nullptr);
    _impl_.player_ex_->Clear();
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* RoutePlayerMsgStringResponse::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<2, 3, 2, 0, 2> RoutePlayerMsgStringResponse::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(RoutePlayerMsgStringResponse, _impl_._has_bits_),
    0, // no _extensions_
    3, 24,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967288,  // skipmap
    offsetof(decltype(_table_), field_entries),
    3,  // num_field_entries
    2,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    &_RoutePlayerMsgStringResponse_default_instance_._instance,
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::RoutePlayerMsgStringResponse>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
    // bytes body = 1;
    {::_pbi::TcParser::FastBS1,
     {10, 63, 0, PROTOBUF_FIELD_OFFSET(RoutePlayerMsgStringResponse, _impl_.body_)}},
    // repeated .NodeInfo node_list = 2;
    {::_pbi::TcParser::FastMtR1,
     {18, 63, 0, PROTOBUF_FIELD_OFFSET(RoutePlayerMsgStringResponse, _impl_.node_list_)}},
    // .PlayerMessageExtern player_ex = 3;
    {::_pbi::TcParser::FastMtS1,
     {26, 0, 1, PROTOBUF_FIELD_OFFSET(RoutePlayerMsgStringResponse, _impl_.player_ex_)}},
  }}, {{
    65535, 65535
  }}, {{
    // bytes body = 1;
    {PROTOBUF_FIELD_OFFSET(RoutePlayerMsgStringResponse, _impl_.body_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kBytes | ::_fl::kRepAString)},
    // repeated .NodeInfo node_list = 2;
    {PROTOBUF_FIELD_OFFSET(RoutePlayerMsgStringResponse, _impl_.node_list_), -1, 0,
    (0 | ::_fl::kFcRepeated | ::_fl::kMessage | ::_fl::kTvTable)},
    // .PlayerMessageExtern player_ex = 3;
    {PROTOBUF_FIELD_OFFSET(RoutePlayerMsgStringResponse, _impl_.player_ex_), _Internal::kHasBitsOffset + 0, 1,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
  }}, {{
    {::_pbi::TcParser::GetTable<::NodeInfo>()},
    {::_pbi::TcParser::GetTable<::PlayerMessageExtern>()},
  }}, {{
  }},
};

::uint8_t* RoutePlayerMsgStringResponse::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:RoutePlayerMsgStringResponse)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  // bytes body = 1;
  if (!this->_internal_body().empty()) {
    const std::string& _s = this->_internal_body();
    target = stream->WriteBytesMaybeAliased(1, _s, target);
  }

  // repeated .NodeInfo node_list = 2;
  for (unsigned i = 0, n = static_cast<unsigned>(
                           this->_internal_node_list_size());
       i < n; i++) {
    const auto& repfield = this->_internal_node_list().Get(i);
    target =
        ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
            2, repfield, repfield.GetCachedSize(),
            target, stream);
  }

  cached_has_bits = _impl_._has_bits_[0];
  // .PlayerMessageExtern player_ex = 3;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
        3, *_impl_.player_ex_, _impl_.player_ex_->GetCachedSize(), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:RoutePlayerMsgStringResponse)
  return target;
}

::size_t RoutePlayerMsgStringResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:RoutePlayerMsgStringResponse)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated .NodeInfo node_list = 2;
  total_size += 1UL * this->_internal_node_list_size();
  for (const auto& msg : this->_internal_node_list()) {
    total_size += ::google::protobuf::internal::WireFormatLite::MessageSize(msg);
  }
  // bytes body = 1;
  if (!this->_internal_body().empty()) {
    total_size += 1 + ::google::protobuf::internal::WireFormatLite::BytesSize(
                                    this->_internal_body());
  }

  // .PlayerMessageExtern player_ex = 3;
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    total_size +=
        1 + ::google::protobuf::internal::WireFormatLite::MessageSize(*_impl_.player_ex_);
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}


void RoutePlayerMsgStringResponse::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<RoutePlayerMsgStringResponse*>(&to_msg);
  auto& from = static_cast<const RoutePlayerMsgStringResponse&>(from_msg);
  ::google::protobuf::Arena* arena = _this->GetArena();
  // @@protoc_insertion_point(class_specific_merge_from_start:RoutePlayerMsgStringResponse)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_internal_mutable_node_list()->MergeFrom(
      from._internal_node_list());
  if (!from._internal_body().empty()) {
    _this->_internal_set_body(from._internal_body());
  }
  cached_has_bits = from._impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    ABSL_DCHECK(from._impl_.player_ex_ != nullptr);
    if (_this->_impl_.player_ex_ == nullptr) {
      _this->_impl_.player_ex_ =
          ::google::protobuf::Message::CopyConstruct<::PlayerMessageExtern>(arena, *from._impl_.player_ex_);
    } else {
      _this->_impl_.player_ex_->MergeFrom(*from._impl_.player_ex_);
    }
  }
  _this->_impl_._has_bits_[0] |= cached_has_bits;
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void RoutePlayerMsgStringResponse::CopyFrom(const RoutePlayerMsgStringResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:RoutePlayerMsgStringResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool RoutePlayerMsgStringResponse::IsInitialized() const {
  return true;
}

void RoutePlayerMsgStringResponse::InternalSwap(RoutePlayerMsgStringResponse* PROTOBUF_RESTRICT other) {
  using std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  _impl_.node_list_.InternalSwap(&other->_impl_.node_list_);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.body_, &other->_impl_.body_, arena);
  swap(_impl_.player_ex_, other->_impl_.player_ex_);
}

::google::protobuf::Metadata RoutePlayerMsgStringResponse::GetMetadata() const {
  return ::_pbi::AssignDescriptors(&descriptor_table_common_2fcommon_5fmessage_2eproto_getter,
                                   &descriptor_table_common_2fcommon_5fmessage_2eproto_once,
                                   file_level_metadata_common_2fcommon_5fmessage_2eproto[18]);
}
// ===================================================================

class RegisterGameNodeRequest::_Internal {
 public:
  using HasBits = decltype(std::declval<RegisterGameNodeRequest>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
    8 * PROTOBUF_FIELD_OFFSET(RegisterGameNodeRequest, _impl_._has_bits_);
};

void RegisterGameNodeRequest::clear_rpc_client() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  if (_impl_.rpc_client_ != nullptr) _impl_.rpc_client_->Clear();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
void RegisterGameNodeRequest::clear_rpc_server() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  if (_impl_.rpc_server_ != nullptr) _impl_.rpc_server_->Clear();
  _impl_._has_bits_[0] &= ~0x00000002u;
}
RegisterGameNodeRequest::RegisterGameNodeRequest(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:RegisterGameNodeRequest)
}
inline PROTOBUF_NDEBUG_INLINE RegisterGameNodeRequest::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from)
      : _has_bits_{from._has_bits_},
        _cached_size_{0} {}

RegisterGameNodeRequest::RegisterGameNodeRequest(
    ::google::protobuf::Arena* arena,
    const RegisterGameNodeRequest& from)
    : ::google::protobuf::Message(arena) {
  RegisterGameNodeRequest* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_);
  ::uint32_t cached_has_bits = _impl_._has_bits_[0];
  _impl_.rpc_client_ = (cached_has_bits & 0x00000001u) ? ::google::protobuf::Message::CopyConstruct<::NetworkAddress>(
                              arena, *from._impl_.rpc_client_)
                        : nullptr;
  _impl_.rpc_server_ = (cached_has_bits & 0x00000002u) ? ::google::protobuf::Message::CopyConstruct<::NetworkAddress>(
                              arena, *from._impl_.rpc_server_)
                        : nullptr;
  ::memcpy(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, game_node_id_),
           reinterpret_cast<const char *>(&from._impl_) +
               offsetof(Impl_, game_node_id_),
           offsetof(Impl_, server_type_) -
               offsetof(Impl_, game_node_id_) +
               sizeof(Impl_::server_type_));

  // @@protoc_insertion_point(copy_constructor:RegisterGameNodeRequest)
}
inline PROTOBUF_NDEBUG_INLINE RegisterGameNodeRequest::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0} {}

inline void RegisterGameNodeRequest::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, rpc_client_),
           0,
           offsetof(Impl_, server_type_) -
               offsetof(Impl_, rpc_client_) +
               sizeof(Impl_::server_type_));
}
RegisterGameNodeRequest::~RegisterGameNodeRequest() {
  // @@protoc_insertion_point(destructor:RegisterGameNodeRequest)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void RegisterGameNodeRequest::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  delete _impl_.rpc_client_;
  delete _impl_.rpc_server_;
  _impl_.~Impl_();
}

const ::google::protobuf::MessageLite::ClassData*
RegisterGameNodeRequest::GetClassData() const {
  PROTOBUF_CONSTINIT static const ::google::protobuf::MessageLite::
      ClassDataFull _data_ = {
          {
              nullptr,  // OnDemandRegisterArenaDtor
              PROTOBUF_FIELD_OFFSET(RegisterGameNodeRequest, _impl_._cached_size_),
              false,
          },
          &RegisterGameNodeRequest::MergeImpl,
          &RegisterGameNodeRequest::kDescriptorMethods,
      };
  return &_data_;
}
PROTOBUF_NOINLINE void RegisterGameNodeRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:RegisterGameNodeRequest)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    if (cached_has_bits & 0x00000001u) {
      ABSL_DCHECK(_impl_.rpc_client_ != nullptr);
      _impl_.rpc_client_->Clear();
    }
    if (cached_has_bits & 0x00000002u) {
      ABSL_DCHECK(_impl_.rpc_server_ != nullptr);
      _impl_.rpc_server_->Clear();
    }
  }
  ::memset(&_impl_.game_node_id_, 0, static_cast<::size_t>(
      reinterpret_cast<char*>(&_impl_.server_type_) -
      reinterpret_cast<char*>(&_impl_.game_node_id_)) + sizeof(_impl_.server_type_));
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* RegisterGameNodeRequest::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<2, 4, 2, 0, 2> RegisterGameNodeRequest::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(RegisterGameNodeRequest, _impl_._has_bits_),
    0, // no _extensions_
    4, 24,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967280,  // skipmap
    offsetof(decltype(_table_), field_entries),
    4,  // num_field_entries
    2,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    &_RegisterGameNodeRequest_default_instance_._instance,
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::RegisterGameNodeRequest>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // uint32 server_type = 4;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(RegisterGameNodeRequest, _impl_.server_type_), 63>(),
     {32, 63, 0, PROTOBUF_FIELD_OFFSET(RegisterGameNodeRequest, _impl_.server_type_)}},
    // .NetworkAddress rpc_client = 1;
    {::_pbi::TcParser::FastMtS1,
     {10, 0, 0, PROTOBUF_FIELD_OFFSET(RegisterGameNodeRequest, _impl_.rpc_client_)}},
    // .NetworkAddress rpc_server = 2;
    {::_pbi::TcParser::FastMtS1,
     {18, 1, 1, PROTOBUF_FIELD_OFFSET(RegisterGameNodeRequest, _impl_.rpc_server_)}},
    // uint32 game_node_id = 3;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(RegisterGameNodeRequest, _impl_.game_node_id_), 63>(),
     {24, 63, 0, PROTOBUF_FIELD_OFFSET(RegisterGameNodeRequest, _impl_.game_node_id_)}},
  }}, {{
    65535, 65535
  }}, {{
    // .NetworkAddress rpc_client = 1;
    {PROTOBUF_FIELD_OFFSET(RegisterGameNodeRequest, _impl_.rpc_client_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
    // .NetworkAddress rpc_server = 2;
    {PROTOBUF_FIELD_OFFSET(RegisterGameNodeRequest, _impl_.rpc_server_), _Internal::kHasBitsOffset + 1, 1,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
    // uint32 game_node_id = 3;
    {PROTOBUF_FIELD_OFFSET(RegisterGameNodeRequest, _impl_.game_node_id_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUInt32)},
    // uint32 server_type = 4;
    {PROTOBUF_FIELD_OFFSET(RegisterGameNodeRequest, _impl_.server_type_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUInt32)},
  }}, {{
    {::_pbi::TcParser::GetTable<::NetworkAddress>()},
    {::_pbi::TcParser::GetTable<::NetworkAddress>()},
  }}, {{
  }},
};

::uint8_t* RegisterGameNodeRequest::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:RegisterGameNodeRequest)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  // .NetworkAddress rpc_client = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
        1, *_impl_.rpc_client_, _impl_.rpc_client_->GetCachedSize(), target, stream);
  }

  // .NetworkAddress rpc_server = 2;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
        2, *_impl_.rpc_server_, _impl_.rpc_server_->GetCachedSize(), target, stream);
  }

  // uint32 game_node_id = 3;
  if (this->_internal_game_node_id() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt32ToArray(
        3, this->_internal_game_node_id(), target);
  }

  // uint32 server_type = 4;
  if (this->_internal_server_type() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt32ToArray(
        4, this->_internal_server_type(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:RegisterGameNodeRequest)
  return target;
}

::size_t RegisterGameNodeRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:RegisterGameNodeRequest)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    // .NetworkAddress rpc_client = 1;
    if (cached_has_bits & 0x00000001u) {
      total_size +=
          1 + ::google::protobuf::internal::WireFormatLite::MessageSize(*_impl_.rpc_client_);
    }

    // .NetworkAddress rpc_server = 2;
    if (cached_has_bits & 0x00000002u) {
      total_size +=
          1 + ::google::protobuf::internal::WireFormatLite::MessageSize(*_impl_.rpc_server_);
    }

  }
  // uint32 game_node_id = 3;
  if (this->_internal_game_node_id() != 0) {
    total_size += ::_pbi::WireFormatLite::UInt32SizePlusOne(
        this->_internal_game_node_id());
  }

  // uint32 server_type = 4;
  if (this->_internal_server_type() != 0) {
    total_size += ::_pbi::WireFormatLite::UInt32SizePlusOne(
        this->_internal_server_type());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}


void RegisterGameNodeRequest::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<RegisterGameNodeRequest*>(&to_msg);
  auto& from = static_cast<const RegisterGameNodeRequest&>(from_msg);
  ::google::protobuf::Arena* arena = _this->GetArena();
  // @@protoc_insertion_point(class_specific_merge_from_start:RegisterGameNodeRequest)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._impl_._has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    if (cached_has_bits & 0x00000001u) {
      ABSL_DCHECK(from._impl_.rpc_client_ != nullptr);
      if (_this->_impl_.rpc_client_ == nullptr) {
        _this->_impl_.rpc_client_ =
            ::google::protobuf::Message::CopyConstruct<::NetworkAddress>(arena, *from._impl_.rpc_client_);
      } else {
        _this->_impl_.rpc_client_->MergeFrom(*from._impl_.rpc_client_);
      }
    }
    if (cached_has_bits & 0x00000002u) {
      ABSL_DCHECK(from._impl_.rpc_server_ != nullptr);
      if (_this->_impl_.rpc_server_ == nullptr) {
        _this->_impl_.rpc_server_ =
            ::google::protobuf::Message::CopyConstruct<::NetworkAddress>(arena, *from._impl_.rpc_server_);
      } else {
        _this->_impl_.rpc_server_->MergeFrom(*from._impl_.rpc_server_);
      }
    }
  }
  if (from._internal_game_node_id() != 0) {
    _this->_impl_.game_node_id_ = from._impl_.game_node_id_;
  }
  if (from._internal_server_type() != 0) {
    _this->_impl_.server_type_ = from._impl_.server_type_;
  }
  _this->_impl_._has_bits_[0] |= cached_has_bits;
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void RegisterGameNodeRequest::CopyFrom(const RegisterGameNodeRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:RegisterGameNodeRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool RegisterGameNodeRequest::IsInitialized() const {
  return true;
}

void RegisterGameNodeRequest::InternalSwap(RegisterGameNodeRequest* PROTOBUF_RESTRICT other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(RegisterGameNodeRequest, _impl_.server_type_)
      + sizeof(RegisterGameNodeRequest::_impl_.server_type_)
      - PROTOBUF_FIELD_OFFSET(RegisterGameNodeRequest, _impl_.rpc_client_)>(
          reinterpret_cast<char*>(&_impl_.rpc_client_),
          reinterpret_cast<char*>(&other->_impl_.rpc_client_));
}

::google::protobuf::Metadata RegisterGameNodeRequest::GetMetadata() const {
  return ::_pbi::AssignDescriptors(&descriptor_table_common_2fcommon_5fmessage_2eproto_getter,
                                   &descriptor_table_common_2fcommon_5fmessage_2eproto_once,
                                   file_level_metadata_common_2fcommon_5fmessage_2eproto[19]);
}
// ===================================================================

class RegisterGateNodeRequest::_Internal {
 public:
  using HasBits = decltype(std::declval<RegisterGateNodeRequest>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
    8 * PROTOBUF_FIELD_OFFSET(RegisterGateNodeRequest, _impl_._has_bits_);
};

void RegisterGateNodeRequest::clear_rpc_client() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  if (_impl_.rpc_client_ != nullptr) _impl_.rpc_client_->Clear();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
RegisterGateNodeRequest::RegisterGateNodeRequest(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:RegisterGateNodeRequest)
}
inline PROTOBUF_NDEBUG_INLINE RegisterGateNodeRequest::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from)
      : _has_bits_{from._has_bits_},
        _cached_size_{0} {}

RegisterGateNodeRequest::RegisterGateNodeRequest(
    ::google::protobuf::Arena* arena,
    const RegisterGateNodeRequest& from)
    : ::google::protobuf::Message(arena) {
  RegisterGateNodeRequest* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_);
  ::uint32_t cached_has_bits = _impl_._has_bits_[0];
  _impl_.rpc_client_ = (cached_has_bits & 0x00000001u) ? ::google::protobuf::Message::CopyConstruct<::NetworkAddress>(
                              arena, *from._impl_.rpc_client_)
                        : nullptr;
  _impl_.gate_node_id_ = from._impl_.gate_node_id_;

  // @@protoc_insertion_point(copy_constructor:RegisterGateNodeRequest)
}
inline PROTOBUF_NDEBUG_INLINE RegisterGateNodeRequest::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0} {}

inline void RegisterGateNodeRequest::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, rpc_client_),
           0,
           offsetof(Impl_, gate_node_id_) -
               offsetof(Impl_, rpc_client_) +
               sizeof(Impl_::gate_node_id_));
}
RegisterGateNodeRequest::~RegisterGateNodeRequest() {
  // @@protoc_insertion_point(destructor:RegisterGateNodeRequest)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void RegisterGateNodeRequest::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  delete _impl_.rpc_client_;
  _impl_.~Impl_();
}

const ::google::protobuf::MessageLite::ClassData*
RegisterGateNodeRequest::GetClassData() const {
  PROTOBUF_CONSTINIT static const ::google::protobuf::MessageLite::
      ClassDataFull _data_ = {
          {
              nullptr,  // OnDemandRegisterArenaDtor
              PROTOBUF_FIELD_OFFSET(RegisterGateNodeRequest, _impl_._cached_size_),
              false,
          },
          &RegisterGateNodeRequest::MergeImpl,
          &RegisterGateNodeRequest::kDescriptorMethods,
      };
  return &_data_;
}
PROTOBUF_NOINLINE void RegisterGateNodeRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:RegisterGateNodeRequest)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    ABSL_DCHECK(_impl_.rpc_client_ != nullptr);
    _impl_.rpc_client_->Clear();
  }
  _impl_.gate_node_id_ = 0u;
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* RegisterGateNodeRequest::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<1, 2, 1, 0, 2> RegisterGateNodeRequest::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(RegisterGateNodeRequest, _impl_._has_bits_),
    0, // no _extensions_
    2, 8,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967292,  // skipmap
    offsetof(decltype(_table_), field_entries),
    2,  // num_field_entries
    1,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    &_RegisterGateNodeRequest_default_instance_._instance,
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::RegisterGateNodeRequest>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // uint32 gate_node_id = 2;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(RegisterGateNodeRequest, _impl_.gate_node_id_), 63>(),
     {16, 63, 0, PROTOBUF_FIELD_OFFSET(RegisterGateNodeRequest, _impl_.gate_node_id_)}},
    // .NetworkAddress rpc_client = 1;
    {::_pbi::TcParser::FastMtS1,
     {10, 0, 0, PROTOBUF_FIELD_OFFSET(RegisterGateNodeRequest, _impl_.rpc_client_)}},
  }}, {{
    65535, 65535
  }}, {{
    // .NetworkAddress rpc_client = 1;
    {PROTOBUF_FIELD_OFFSET(RegisterGateNodeRequest, _impl_.rpc_client_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
    // uint32 gate_node_id = 2;
    {PROTOBUF_FIELD_OFFSET(RegisterGateNodeRequest, _impl_.gate_node_id_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUInt32)},
  }}, {{
    {::_pbi::TcParser::GetTable<::NetworkAddress>()},
  }}, {{
  }},
};

::uint8_t* RegisterGateNodeRequest::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:RegisterGateNodeRequest)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  // .NetworkAddress rpc_client = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
        1, *_impl_.rpc_client_, _impl_.rpc_client_->GetCachedSize(), target, stream);
  }

  // uint32 gate_node_id = 2;
  if (this->_internal_gate_node_id() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt32ToArray(
        2, this->_internal_gate_node_id(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:RegisterGateNodeRequest)
  return target;
}

::size_t RegisterGateNodeRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:RegisterGateNodeRequest)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // .NetworkAddress rpc_client = 1;
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    total_size +=
        1 + ::google::protobuf::internal::WireFormatLite::MessageSize(*_impl_.rpc_client_);
  }

  // uint32 gate_node_id = 2;
  if (this->_internal_gate_node_id() != 0) {
    total_size += ::_pbi::WireFormatLite::UInt32SizePlusOne(
        this->_internal_gate_node_id());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}


void RegisterGateNodeRequest::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<RegisterGateNodeRequest*>(&to_msg);
  auto& from = static_cast<const RegisterGateNodeRequest&>(from_msg);
  ::google::protobuf::Arena* arena = _this->GetArena();
  // @@protoc_insertion_point(class_specific_merge_from_start:RegisterGateNodeRequest)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    ABSL_DCHECK(from._impl_.rpc_client_ != nullptr);
    if (_this->_impl_.rpc_client_ == nullptr) {
      _this->_impl_.rpc_client_ =
          ::google::protobuf::Message::CopyConstruct<::NetworkAddress>(arena, *from._impl_.rpc_client_);
    } else {
      _this->_impl_.rpc_client_->MergeFrom(*from._impl_.rpc_client_);
    }
  }
  if (from._internal_gate_node_id() != 0) {
    _this->_impl_.gate_node_id_ = from._impl_.gate_node_id_;
  }
  _this->_impl_._has_bits_[0] |= cached_has_bits;
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void RegisterGateNodeRequest::CopyFrom(const RegisterGateNodeRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:RegisterGateNodeRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool RegisterGateNodeRequest::IsInitialized() const {
  return true;
}

void RegisterGateNodeRequest::InternalSwap(RegisterGateNodeRequest* PROTOBUF_RESTRICT other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(RegisterGateNodeRequest, _impl_.gate_node_id_)
      + sizeof(RegisterGateNodeRequest::_impl_.gate_node_id_)
      - PROTOBUF_FIELD_OFFSET(RegisterGateNodeRequest, _impl_.rpc_client_)>(
          reinterpret_cast<char*>(&_impl_.rpc_client_),
          reinterpret_cast<char*>(&other->_impl_.rpc_client_));
}

::google::protobuf::Metadata RegisterGateNodeRequest::GetMetadata() const {
  return ::_pbi::AssignDescriptors(&descriptor_table_common_2fcommon_5fmessage_2eproto_getter,
                                   &descriptor_table_common_2fcommon_5fmessage_2eproto_once,
                                   file_level_metadata_common_2fcommon_5fmessage_2eproto[20]);
}
// ===================================================================

class UnRegisterGameNodeRequest::_Internal {
 public:
};

UnRegisterGameNodeRequest::UnRegisterGameNodeRequest(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:UnRegisterGameNodeRequest)
}
UnRegisterGameNodeRequest::UnRegisterGameNodeRequest(
    ::google::protobuf::Arena* arena, const UnRegisterGameNodeRequest& from)
    : UnRegisterGameNodeRequest(arena) {
  MergeFrom(from);
}
inline PROTOBUF_NDEBUG_INLINE UnRegisterGameNodeRequest::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0} {}

inline void UnRegisterGameNodeRequest::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  _impl_.game_node_id_ = {};
}
UnRegisterGameNodeRequest::~UnRegisterGameNodeRequest() {
  // @@protoc_insertion_point(destructor:UnRegisterGameNodeRequest)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void UnRegisterGameNodeRequest::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  _impl_.~Impl_();
}

const ::google::protobuf::MessageLite::ClassData*
UnRegisterGameNodeRequest::GetClassData() const {
  PROTOBUF_CONSTINIT static const ::google::protobuf::MessageLite::
      ClassDataFull _data_ = {
          {
              nullptr,  // OnDemandRegisterArenaDtor
              PROTOBUF_FIELD_OFFSET(UnRegisterGameNodeRequest, _impl_._cached_size_),
              false,
          },
          &UnRegisterGameNodeRequest::MergeImpl,
          &UnRegisterGameNodeRequest::kDescriptorMethods,
      };
  return &_data_;
}
PROTOBUF_NOINLINE void UnRegisterGameNodeRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:UnRegisterGameNodeRequest)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.game_node_id_ = 0u;
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* UnRegisterGameNodeRequest::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<0, 1, 0, 0, 2> UnRegisterGameNodeRequest::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    1, 0,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967294,  // skipmap
    offsetof(decltype(_table_), field_entries),
    1,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    &_UnRegisterGameNodeRequest_default_instance_._instance,
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::UnRegisterGameNodeRequest>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // uint32 game_node_id = 1;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(UnRegisterGameNodeRequest, _impl_.game_node_id_), 63>(),
     {8, 63, 0, PROTOBUF_FIELD_OFFSET(UnRegisterGameNodeRequest, _impl_.game_node_id_)}},
  }}, {{
    65535, 65535
  }}, {{
    // uint32 game_node_id = 1;
    {PROTOBUF_FIELD_OFFSET(UnRegisterGameNodeRequest, _impl_.game_node_id_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUInt32)},
  }},
  // no aux_entries
  {{
  }},
};

::uint8_t* UnRegisterGameNodeRequest::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:UnRegisterGameNodeRequest)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  // uint32 game_node_id = 1;
  if (this->_internal_game_node_id() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt32ToArray(
        1, this->_internal_game_node_id(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:UnRegisterGameNodeRequest)
  return target;
}

::size_t UnRegisterGameNodeRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:UnRegisterGameNodeRequest)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // uint32 game_node_id = 1;
  if (this->_internal_game_node_id() != 0) {
    total_size += ::_pbi::WireFormatLite::UInt32SizePlusOne(
        this->_internal_game_node_id());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}


void UnRegisterGameNodeRequest::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<UnRegisterGameNodeRequest*>(&to_msg);
  auto& from = static_cast<const UnRegisterGameNodeRequest&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:UnRegisterGameNodeRequest)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_game_node_id() != 0) {
    _this->_impl_.game_node_id_ = from._impl_.game_node_id_;
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void UnRegisterGameNodeRequest::CopyFrom(const UnRegisterGameNodeRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:UnRegisterGameNodeRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool UnRegisterGameNodeRequest::IsInitialized() const {
  return true;
}

void UnRegisterGameNodeRequest::InternalSwap(UnRegisterGameNodeRequest* PROTOBUF_RESTRICT other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
        swap(_impl_.game_node_id_, other->_impl_.game_node_id_);
}

::google::protobuf::Metadata UnRegisterGameNodeRequest::GetMetadata() const {
  return ::_pbi::AssignDescriptors(&descriptor_table_common_2fcommon_5fmessage_2eproto_getter,
                                   &descriptor_table_common_2fcommon_5fmessage_2eproto_once,
                                   file_level_metadata_common_2fcommon_5fmessage_2eproto[21]);
}
// @@protoc_insertion_point(namespace_scope)
namespace google {
namespace protobuf {
}  // namespace protobuf
}  // namespace google
// @@protoc_insertion_point(global_scope)
PROTOBUF_ATTRIBUTE_INIT_PRIORITY2
static ::std::false_type _static_init_ PROTOBUF_UNUSED =
    (::_pbi::AddDescriptors(&descriptor_table_common_2fcommon_5fmessage_2eproto),
     ::std::false_type{});
#include "google/protobuf/port_undef.inc"
