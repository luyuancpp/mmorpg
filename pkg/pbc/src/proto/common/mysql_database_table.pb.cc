// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: common/mysql_database_table.proto
// Protobuf C++ Version: 5.26.1

#include "common/mysql_database_table.pb.h"

#include <algorithm>
#include "google/protobuf/io/coded_stream.h"
#include "google/protobuf/extension_set.h"
#include "google/protobuf/wire_format_lite.h"
#include "google/protobuf/descriptor.h"
#include "google/protobuf/generated_message_reflection.h"
#include "google/protobuf/reflection_ops.h"
#include "google/protobuf/wire_format.h"
#include "google/protobuf/generated_message_tctable_impl.h"
// @@protoc_insertion_point(includes)

// Must be included last.
#include "google/protobuf/port_def.inc"
PROTOBUF_PRAGMA_INIT_SEG
namespace _pb = ::google::protobuf;
namespace _pbi = ::google::protobuf::internal;
namespace _fl = ::google::protobuf::internal::field_layout;

inline constexpr player_database_1::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : player_id_{::uint64_t{0u}},
        _cached_size_{0} {}

template <typename>
PROTOBUF_CONSTEXPR player_database_1::player_database_1(::_pbi::ConstantInitialized)
    : _impl_(::_pbi::ConstantInitialized()) {}
struct player_database_1DefaultTypeInternal {
  PROTOBUF_CONSTEXPR player_database_1DefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~player_database_1DefaultTypeInternal() {}
  union {
    player_database_1 _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 player_database_1DefaultTypeInternal _player_database_1_default_instance_;

inline constexpr account_share_database::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : account_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        _cached_size_{0} {}

template <typename>
PROTOBUF_CONSTEXPR account_share_database::account_share_database(::_pbi::ConstantInitialized)
    : _impl_(::_pbi::ConstantInitialized()) {}
struct account_share_databaseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR account_share_databaseDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~account_share_databaseDefaultTypeInternal() {}
  union {
    account_share_database _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 account_share_databaseDefaultTypeInternal _account_share_database_default_instance_;

inline constexpr user_accounts::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        account_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        password_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        simple_players_{nullptr} {}

template <typename>
PROTOBUF_CONSTEXPR user_accounts::user_accounts(::_pbi::ConstantInitialized)
    : _impl_(::_pbi::ConstantInitialized()) {}
struct user_accountsDefaultTypeInternal {
  PROTOBUF_CONSTEXPR user_accountsDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~user_accountsDefaultTypeInternal() {}
  union {
    user_accounts _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 user_accountsDefaultTypeInternal _user_accounts_default_instance_;

inline constexpr player_database::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        transform_{nullptr},
        uint64_pb_component_{nullptr},
        skill_list_{nullptr},
        uint32_pb_component_{nullptr},
        player_id_{::uint64_t{0u}} {}

template <typename>
PROTOBUF_CONSTEXPR player_database::player_database(::_pbi::ConstantInitialized)
    : _impl_(::_pbi::ConstantInitialized()) {}
struct player_databaseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR player_databaseDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~player_databaseDefaultTypeInternal() {}
  union {
    player_database _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 player_databaseDefaultTypeInternal _player_database_default_instance_;

inline constexpr player_centre_database::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        scene_info_{nullptr},
        player_id_{::uint64_t{0u}} {}

template <typename>
PROTOBUF_CONSTEXPR player_centre_database::player_centre_database(::_pbi::ConstantInitialized)
    : _impl_(::_pbi::ConstantInitialized()) {}
struct player_centre_databaseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR player_centre_databaseDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~player_centre_databaseDefaultTypeInternal() {}
  union {
    player_centre_database _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 player_centre_databaseDefaultTypeInternal _player_centre_database_default_instance_;
static ::_pb::Metadata file_level_metadata_common_2fmysql_5fdatabase_5ftable_2eproto[5];
static constexpr const ::_pb::EnumDescriptor**
    file_level_enum_descriptors_common_2fmysql_5fdatabase_5ftable_2eproto = nullptr;
static constexpr const ::_pb::ServiceDescriptor**
    file_level_service_descriptors_common_2fmysql_5fdatabase_5ftable_2eproto = nullptr;
const ::uint32_t
    TableStruct_common_2fmysql_5fdatabase_5ftable_2eproto::offsets[] ABSL_ATTRIBUTE_SECTION_VARIABLE(
        protodesc_cold) = {
        PROTOBUF_FIELD_OFFSET(::user_accounts, _impl_._has_bits_),
        PROTOBUF_FIELD_OFFSET(::user_accounts, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::user_accounts, _impl_.account_),
        PROTOBUF_FIELD_OFFSET(::user_accounts, _impl_.password_),
        PROTOBUF_FIELD_OFFSET(::user_accounts, _impl_.simple_players_),
        ~0u,
        ~0u,
        0,
        ~0u,  // no _has_bits_
        PROTOBUF_FIELD_OFFSET(::account_share_database, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::account_share_database, _impl_.account_),
        PROTOBUF_FIELD_OFFSET(::player_centre_database, _impl_._has_bits_),
        PROTOBUF_FIELD_OFFSET(::player_centre_database, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::player_centre_database, _impl_.player_id_),
        PROTOBUF_FIELD_OFFSET(::player_centre_database, _impl_.scene_info_),
        ~0u,
        0,
        PROTOBUF_FIELD_OFFSET(::player_database, _impl_._has_bits_),
        PROTOBUF_FIELD_OFFSET(::player_database, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::player_database, _impl_.player_id_),
        PROTOBUF_FIELD_OFFSET(::player_database, _impl_.transform_),
        PROTOBUF_FIELD_OFFSET(::player_database, _impl_.uint64_pb_component_),
        PROTOBUF_FIELD_OFFSET(::player_database, _impl_.skill_list_),
        PROTOBUF_FIELD_OFFSET(::player_database, _impl_.uint32_pb_component_),
        ~0u,
        0,
        1,
        2,
        3,
        ~0u,  // no _has_bits_
        PROTOBUF_FIELD_OFFSET(::player_database_1, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::player_database_1, _impl_.player_id_),
};

static const ::_pbi::MigrationSchema
    schemas[] ABSL_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
        {0, 11, -1, sizeof(::user_accounts)},
        {14, -1, -1, sizeof(::account_share_database)},
        {23, 33, -1, sizeof(::player_centre_database)},
        {35, 48, -1, sizeof(::player_database)},
        {53, -1, -1, sizeof(::player_database_1)},
};
static const ::_pb::Message* const file_default_instances[] = {
    &::_user_accounts_default_instance_._instance,
    &::_account_share_database_default_instance_._instance,
    &::_player_centre_database_default_instance_._instance,
    &::_player_database_default_instance_._instance,
    &::_player_database_1_default_instance_._instance,
};
const char descriptor_table_protodef_common_2fmysql_5fdatabase_5ftable_2eproto[] ABSL_ATTRIBUTE_SECTION_VARIABLE(
    protodesc_cold) = {
    "\n!common/mysql_database_table.proto\032\024com"
    "mon/db_base.proto\032\032common/user_accounts."
    "proto\032\021common/comp.proto\032\'logic/componen"
    "t/player_scene_comp.proto\032 logic/compone"
    "nt/actor_comp.proto\032!logic/component/pla"
    "yer_comp.proto\032\'logic/component/player_s"
    "kill_comp.proto\"q\n\ruser_accounts\022\017\n\007acco"
    "unt\030\001 \001(\t\022\020\n\010password\030\002 \001(\t\0220\n\016simple_pl"
    "ayers\030\003 \001(\0132\030.AccountSimplePlayerList:\013\222"
    "\265\030\007account\"6\n\026account_share_database\022\017\n\007"
    "account\030\001 \001(\t:\013\222\265\030\007account\"{\n\026player_cen"
    "tre_database\022\021\n\tplayer_id\030\001 \001(\004\0222\n\nscene"
    "_info\030\002 \001(\0132\036.PlayerSceneContextPBCompon"
    "ent:\032\222\265\030\tplayer_id\262\265\030\tplayer_id\"\376\001\n\017play"
    "er_database\022\021\n\tplayer_id\030\001 \001(\004\022\035\n\ttransf"
    "orm\030\002 \001(\0132\n.Transform\0225\n\023uint64_pb_compo"
    "nent\030\003 \001(\0132\030.PlayerUint64PBComponent\022/\n\n"
    "skill_list\030\004 \001(\0132\033.PlayerSkillListPBComp"
    "onent\0225\n\023uint32_pb_component\030\005 \001(\0132\030.Pla"
    "yerUint32PBComponent:\032\222\265\030\tplayer_id\262\265\030\tp"
    "layer_id\"B\n\021player_database_1\022\021\n\tplayer_"
    "id\030\001 \001(\004:\032\222\265\030\tplayer_id\262\265\030\tplayer_idB\tZ\007"
    "pb/gameb\006proto3"
};
static const ::_pbi::DescriptorTable* const descriptor_table_common_2fmysql_5fdatabase_5ftable_2eproto_deps[7] =
    {
        &::descriptor_table_common_2fcomp_2eproto,
        &::descriptor_table_common_2fdb_5fbase_2eproto,
        &::descriptor_table_common_2fuser_5faccounts_2eproto,
        &::descriptor_table_logic_2fcomponent_2factor_5fcomp_2eproto,
        &::descriptor_table_logic_2fcomponent_2fplayer_5fcomp_2eproto,
        &::descriptor_table_logic_2fcomponent_2fplayer_5fscene_5fcomp_2eproto,
        &::descriptor_table_logic_2fcomponent_2fplayer_5fskill_5fcomp_2eproto,
};
static ::absl::once_flag descriptor_table_common_2fmysql_5fdatabase_5ftable_2eproto_once;
const ::_pbi::DescriptorTable descriptor_table_common_2fmysql_5fdatabase_5ftable_2eproto = {
    false,
    false,
    895,
    descriptor_table_protodef_common_2fmysql_5fdatabase_5ftable_2eproto,
    "common/mysql_database_table.proto",
    &descriptor_table_common_2fmysql_5fdatabase_5ftable_2eproto_once,
    descriptor_table_common_2fmysql_5fdatabase_5ftable_2eproto_deps,
    7,
    5,
    schemas,
    file_default_instances,
    TableStruct_common_2fmysql_5fdatabase_5ftable_2eproto::offsets,
    file_level_metadata_common_2fmysql_5fdatabase_5ftable_2eproto,
    file_level_enum_descriptors_common_2fmysql_5fdatabase_5ftable_2eproto,
    file_level_service_descriptors_common_2fmysql_5fdatabase_5ftable_2eproto,
};

// This function exists to be marked as weak.
// It can significantly speed up compilation by breaking up LLVM's SCC
// in the .pb.cc translation units. Large translation units see a
// reduction of more than 35% of walltime for optimized builds. Without
// the weak attribute all the messages in the file, including all the
// vtables and everything they use become part of the same SCC through
// a cycle like:
// GetMetadata -> descriptor table -> default instances ->
//   vtables -> GetMetadata
// By adding a weak function here we break the connection from the
// individual vtables back into the descriptor table.
PROTOBUF_ATTRIBUTE_WEAK const ::_pbi::DescriptorTable* descriptor_table_common_2fmysql_5fdatabase_5ftable_2eproto_getter() {
  return &descriptor_table_common_2fmysql_5fdatabase_5ftable_2eproto;
}
// ===================================================================

class user_accounts::_Internal {
 public:
  using HasBits = decltype(std::declval<user_accounts>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
    8 * PROTOBUF_FIELD_OFFSET(user_accounts, _impl_._has_bits_);
};

void user_accounts::clear_simple_players() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  if (_impl_.simple_players_ != nullptr) _impl_.simple_players_->Clear();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
user_accounts::user_accounts(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:user_accounts)
}
inline PROTOBUF_NDEBUG_INLINE user_accounts::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from)
      : _has_bits_{from._has_bits_},
        _cached_size_{0},
        account_(arena, from.account_),
        password_(arena, from.password_) {}

user_accounts::user_accounts(
    ::google::protobuf::Arena* arena,
    const user_accounts& from)
    : ::google::protobuf::Message(arena) {
  user_accounts* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_);
  ::uint32_t cached_has_bits = _impl_._has_bits_[0];
  _impl_.simple_players_ = (cached_has_bits & 0x00000001u) ? ::google::protobuf::Message::CopyConstruct<::AccountSimplePlayerList>(
                              arena, *from._impl_.simple_players_)
                        : nullptr;

  // @@protoc_insertion_point(copy_constructor:user_accounts)
}
inline PROTOBUF_NDEBUG_INLINE user_accounts::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0},
        account_(arena),
        password_(arena) {}

inline void user_accounts::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  _impl_.simple_players_ = {};
}
user_accounts::~user_accounts() {
  // @@protoc_insertion_point(destructor:user_accounts)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void user_accounts::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  _impl_.account_.Destroy();
  _impl_.password_.Destroy();
  delete _impl_.simple_players_;
  _impl_.~Impl_();
}

const ::google::protobuf::MessageLite::ClassData*
user_accounts::GetClassData() const {
  PROTOBUF_CONSTINIT static const ::google::protobuf::MessageLite::
      ClassDataFull _data_ = {
          {
              nullptr,  // OnDemandRegisterArenaDtor
              PROTOBUF_FIELD_OFFSET(user_accounts, _impl_._cached_size_),
              false,
          },
          &user_accounts::MergeImpl,
          &user_accounts::kDescriptorMethods,
      };
  return &_data_;
}
PROTOBUF_NOINLINE void user_accounts::Clear() {
// @@protoc_insertion_point(message_clear_start:user_accounts)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.account_.ClearToEmpty();
  _impl_.password_.ClearToEmpty();
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    ABSL_DCHECK(_impl_.simple_players_ != nullptr);
    _impl_.simple_players_->Clear();
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* user_accounts::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<2, 3, 1, 37, 2> user_accounts::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(user_accounts, _impl_._has_bits_),
    0, // no _extensions_
    3, 24,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967288,  // skipmap
    offsetof(decltype(_table_), field_entries),
    3,  // num_field_entries
    1,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    &_user_accounts_default_instance_._instance,
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::user_accounts>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
    // string account = 1;
    {::_pbi::TcParser::FastUS1,
     {10, 63, 0, PROTOBUF_FIELD_OFFSET(user_accounts, _impl_.account_)}},
    // string password = 2;
    {::_pbi::TcParser::FastUS1,
     {18, 63, 0, PROTOBUF_FIELD_OFFSET(user_accounts, _impl_.password_)}},
    // .AccountSimplePlayerList simple_players = 3;
    {::_pbi::TcParser::FastMtS1,
     {26, 0, 0, PROTOBUF_FIELD_OFFSET(user_accounts, _impl_.simple_players_)}},
  }}, {{
    65535, 65535
  }}, {{
    // string account = 1;
    {PROTOBUF_FIELD_OFFSET(user_accounts, _impl_.account_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // string password = 2;
    {PROTOBUF_FIELD_OFFSET(user_accounts, _impl_.password_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // .AccountSimplePlayerList simple_players = 3;
    {PROTOBUF_FIELD_OFFSET(user_accounts, _impl_.simple_players_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
  }}, {{
    {::_pbi::TcParser::GetTable<::AccountSimplePlayerList>()},
  }}, {{
    "\15\7\10\0\0\0\0\0"
    "user_accounts"
    "account"
    "password"
  }},
};

::uint8_t* user_accounts::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:user_accounts)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  // string account = 1;
  if (!this->_internal_account().empty()) {
    const std::string& _s = this->_internal_account();
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
        _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "user_accounts.account");
    target = stream->WriteStringMaybeAliased(1, _s, target);
  }

  // string password = 2;
  if (!this->_internal_password().empty()) {
    const std::string& _s = this->_internal_password();
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
        _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "user_accounts.password");
    target = stream->WriteStringMaybeAliased(2, _s, target);
  }

  cached_has_bits = _impl_._has_bits_[0];
  // .AccountSimplePlayerList simple_players = 3;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
        3, *_impl_.simple_players_, _impl_.simple_players_->GetCachedSize(), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:user_accounts)
  return target;
}

::size_t user_accounts::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:user_accounts)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string account = 1;
  if (!this->_internal_account().empty()) {
    total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                    this->_internal_account());
  }

  // string password = 2;
  if (!this->_internal_password().empty()) {
    total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                    this->_internal_password());
  }

  // .AccountSimplePlayerList simple_players = 3;
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    total_size +=
        1 + ::google::protobuf::internal::WireFormatLite::MessageSize(*_impl_.simple_players_);
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}


void user_accounts::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<user_accounts*>(&to_msg);
  auto& from = static_cast<const user_accounts&>(from_msg);
  ::google::protobuf::Arena* arena = _this->GetArena();
  // @@protoc_insertion_point(class_specific_merge_from_start:user_accounts)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_account().empty()) {
    _this->_internal_set_account(from._internal_account());
  }
  if (!from._internal_password().empty()) {
    _this->_internal_set_password(from._internal_password());
  }
  cached_has_bits = from._impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    ABSL_DCHECK(from._impl_.simple_players_ != nullptr);
    if (_this->_impl_.simple_players_ == nullptr) {
      _this->_impl_.simple_players_ =
          ::google::protobuf::Message::CopyConstruct<::AccountSimplePlayerList>(arena, *from._impl_.simple_players_);
    } else {
      _this->_impl_.simple_players_->MergeFrom(*from._impl_.simple_players_);
    }
  }
  _this->_impl_._has_bits_[0] |= cached_has_bits;
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void user_accounts::CopyFrom(const user_accounts& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:user_accounts)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool user_accounts::IsInitialized() const {
  return true;
}

void user_accounts::InternalSwap(user_accounts* PROTOBUF_RESTRICT other) {
  using std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.account_, &other->_impl_.account_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.password_, &other->_impl_.password_, arena);
  swap(_impl_.simple_players_, other->_impl_.simple_players_);
}

::google::protobuf::Metadata user_accounts::GetMetadata() const {
  return ::_pbi::AssignDescriptors(&descriptor_table_common_2fmysql_5fdatabase_5ftable_2eproto_getter,
                                   &descriptor_table_common_2fmysql_5fdatabase_5ftable_2eproto_once,
                                   file_level_metadata_common_2fmysql_5fdatabase_5ftable_2eproto[0]);
}
// ===================================================================

class account_share_database::_Internal {
 public:
};

account_share_database::account_share_database(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:account_share_database)
}
inline PROTOBUF_NDEBUG_INLINE account_share_database::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from)
      : account_(arena, from.account_),
        _cached_size_{0} {}

account_share_database::account_share_database(
    ::google::protobuf::Arena* arena,
    const account_share_database& from)
    : ::google::protobuf::Message(arena) {
  account_share_database* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_);

  // @@protoc_insertion_point(copy_constructor:account_share_database)
}
inline PROTOBUF_NDEBUG_INLINE account_share_database::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : account_(arena),
        _cached_size_{0} {}

inline void account_share_database::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
}
account_share_database::~account_share_database() {
  // @@protoc_insertion_point(destructor:account_share_database)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void account_share_database::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  _impl_.account_.Destroy();
  _impl_.~Impl_();
}

const ::google::protobuf::MessageLite::ClassData*
account_share_database::GetClassData() const {
  PROTOBUF_CONSTINIT static const ::google::protobuf::MessageLite::
      ClassDataFull _data_ = {
          {
              nullptr,  // OnDemandRegisterArenaDtor
              PROTOBUF_FIELD_OFFSET(account_share_database, _impl_._cached_size_),
              false,
          },
          &account_share_database::MergeImpl,
          &account_share_database::kDescriptorMethods,
      };
  return &_data_;
}
PROTOBUF_NOINLINE void account_share_database::Clear() {
// @@protoc_insertion_point(message_clear_start:account_share_database)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.account_.ClearToEmpty();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* account_share_database::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<0, 1, 0, 38, 2> account_share_database::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    1, 0,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967294,  // skipmap
    offsetof(decltype(_table_), field_entries),
    1,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    &_account_share_database_default_instance_._instance,
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::account_share_database>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // string account = 1;
    {::_pbi::TcParser::FastUS1,
     {10, 63, 0, PROTOBUF_FIELD_OFFSET(account_share_database, _impl_.account_)}},
  }}, {{
    65535, 65535
  }}, {{
    // string account = 1;
    {PROTOBUF_FIELD_OFFSET(account_share_database, _impl_.account_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
  }},
  // no aux_entries
  {{
    "\26\7\0\0\0\0\0\0"
    "account_share_database"
    "account"
  }},
};

::uint8_t* account_share_database::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:account_share_database)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  // string account = 1;
  if (!this->_internal_account().empty()) {
    const std::string& _s = this->_internal_account();
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
        _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "account_share_database.account");
    target = stream->WriteStringMaybeAliased(1, _s, target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:account_share_database)
  return target;
}

::size_t account_share_database::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:account_share_database)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string account = 1;
  if (!this->_internal_account().empty()) {
    total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                    this->_internal_account());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}


void account_share_database::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<account_share_database*>(&to_msg);
  auto& from = static_cast<const account_share_database&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:account_share_database)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_account().empty()) {
    _this->_internal_set_account(from._internal_account());
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void account_share_database::CopyFrom(const account_share_database& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:account_share_database)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool account_share_database::IsInitialized() const {
  return true;
}

void account_share_database::InternalSwap(account_share_database* PROTOBUF_RESTRICT other) {
  using std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.account_, &other->_impl_.account_, arena);
}

::google::protobuf::Metadata account_share_database::GetMetadata() const {
  return ::_pbi::AssignDescriptors(&descriptor_table_common_2fmysql_5fdatabase_5ftable_2eproto_getter,
                                   &descriptor_table_common_2fmysql_5fdatabase_5ftable_2eproto_once,
                                   file_level_metadata_common_2fmysql_5fdatabase_5ftable_2eproto[1]);
}
// ===================================================================

class player_centre_database::_Internal {
 public:
  using HasBits = decltype(std::declval<player_centre_database>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
    8 * PROTOBUF_FIELD_OFFSET(player_centre_database, _impl_._has_bits_);
};

void player_centre_database::clear_scene_info() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  if (_impl_.scene_info_ != nullptr) _impl_.scene_info_->Clear();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
player_centre_database::player_centre_database(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:player_centre_database)
}
inline PROTOBUF_NDEBUG_INLINE player_centre_database::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from)
      : _has_bits_{from._has_bits_},
        _cached_size_{0} {}

player_centre_database::player_centre_database(
    ::google::protobuf::Arena* arena,
    const player_centre_database& from)
    : ::google::protobuf::Message(arena) {
  player_centre_database* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_);
  ::uint32_t cached_has_bits = _impl_._has_bits_[0];
  _impl_.scene_info_ = (cached_has_bits & 0x00000001u) ? ::google::protobuf::Message::CopyConstruct<::PlayerSceneContextPBComponent>(
                              arena, *from._impl_.scene_info_)
                        : nullptr;
  _impl_.player_id_ = from._impl_.player_id_;

  // @@protoc_insertion_point(copy_constructor:player_centre_database)
}
inline PROTOBUF_NDEBUG_INLINE player_centre_database::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0} {}

inline void player_centre_database::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, scene_info_),
           0,
           offsetof(Impl_, player_id_) -
               offsetof(Impl_, scene_info_) +
               sizeof(Impl_::player_id_));
}
player_centre_database::~player_centre_database() {
  // @@protoc_insertion_point(destructor:player_centre_database)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void player_centre_database::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  delete _impl_.scene_info_;
  _impl_.~Impl_();
}

const ::google::protobuf::MessageLite::ClassData*
player_centre_database::GetClassData() const {
  PROTOBUF_CONSTINIT static const ::google::protobuf::MessageLite::
      ClassDataFull _data_ = {
          {
              nullptr,  // OnDemandRegisterArenaDtor
              PROTOBUF_FIELD_OFFSET(player_centre_database, _impl_._cached_size_),
              false,
          },
          &player_centre_database::MergeImpl,
          &player_centre_database::kDescriptorMethods,
      };
  return &_data_;
}
PROTOBUF_NOINLINE void player_centre_database::Clear() {
// @@protoc_insertion_point(message_clear_start:player_centre_database)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    ABSL_DCHECK(_impl_.scene_info_ != nullptr);
    _impl_.scene_info_->Clear();
  }
  _impl_.player_id_ = ::uint64_t{0u};
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* player_centre_database::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<1, 2, 1, 0, 2> player_centre_database::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(player_centre_database, _impl_._has_bits_),
    0, // no _extensions_
    2, 8,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967292,  // skipmap
    offsetof(decltype(_table_), field_entries),
    2,  // num_field_entries
    1,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    &_player_centre_database_default_instance_._instance,
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::player_centre_database>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // .PlayerSceneContextPBComponent scene_info = 2;
    {::_pbi::TcParser::FastMtS1,
     {18, 0, 0, PROTOBUF_FIELD_OFFSET(player_centre_database, _impl_.scene_info_)}},
    // uint64 player_id = 1;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint64_t, offsetof(player_centre_database, _impl_.player_id_), 63>(),
     {8, 63, 0, PROTOBUF_FIELD_OFFSET(player_centre_database, _impl_.player_id_)}},
  }}, {{
    65535, 65535
  }}, {{
    // uint64 player_id = 1;
    {PROTOBUF_FIELD_OFFSET(player_centre_database, _impl_.player_id_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUInt64)},
    // .PlayerSceneContextPBComponent scene_info = 2;
    {PROTOBUF_FIELD_OFFSET(player_centre_database, _impl_.scene_info_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
  }}, {{
    {::_pbi::TcParser::GetTable<::PlayerSceneContextPBComponent>()},
  }}, {{
  }},
};

::uint8_t* player_centre_database::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:player_centre_database)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  // uint64 player_id = 1;
  if (this->_internal_player_id() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt64ToArray(
        1, this->_internal_player_id(), target);
  }

  cached_has_bits = _impl_._has_bits_[0];
  // .PlayerSceneContextPBComponent scene_info = 2;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
        2, *_impl_.scene_info_, _impl_.scene_info_->GetCachedSize(), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:player_centre_database)
  return target;
}

::size_t player_centre_database::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:player_centre_database)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // .PlayerSceneContextPBComponent scene_info = 2;
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    total_size +=
        1 + ::google::protobuf::internal::WireFormatLite::MessageSize(*_impl_.scene_info_);
  }

  // uint64 player_id = 1;
  if (this->_internal_player_id() != 0) {
    total_size += ::_pbi::WireFormatLite::UInt64SizePlusOne(
        this->_internal_player_id());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}


void player_centre_database::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<player_centre_database*>(&to_msg);
  auto& from = static_cast<const player_centre_database&>(from_msg);
  ::google::protobuf::Arena* arena = _this->GetArena();
  // @@protoc_insertion_point(class_specific_merge_from_start:player_centre_database)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    ABSL_DCHECK(from._impl_.scene_info_ != nullptr);
    if (_this->_impl_.scene_info_ == nullptr) {
      _this->_impl_.scene_info_ =
          ::google::protobuf::Message::CopyConstruct<::PlayerSceneContextPBComponent>(arena, *from._impl_.scene_info_);
    } else {
      _this->_impl_.scene_info_->MergeFrom(*from._impl_.scene_info_);
    }
  }
  if (from._internal_player_id() != 0) {
    _this->_impl_.player_id_ = from._impl_.player_id_;
  }
  _this->_impl_._has_bits_[0] |= cached_has_bits;
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void player_centre_database::CopyFrom(const player_centre_database& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:player_centre_database)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool player_centre_database::IsInitialized() const {
  return true;
}

void player_centre_database::InternalSwap(player_centre_database* PROTOBUF_RESTRICT other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(player_centre_database, _impl_.player_id_)
      + sizeof(player_centre_database::_impl_.player_id_)
      - PROTOBUF_FIELD_OFFSET(player_centre_database, _impl_.scene_info_)>(
          reinterpret_cast<char*>(&_impl_.scene_info_),
          reinterpret_cast<char*>(&other->_impl_.scene_info_));
}

::google::protobuf::Metadata player_centre_database::GetMetadata() const {
  return ::_pbi::AssignDescriptors(&descriptor_table_common_2fmysql_5fdatabase_5ftable_2eproto_getter,
                                   &descriptor_table_common_2fmysql_5fdatabase_5ftable_2eproto_once,
                                   file_level_metadata_common_2fmysql_5fdatabase_5ftable_2eproto[2]);
}
// ===================================================================

class player_database::_Internal {
 public:
  using HasBits = decltype(std::declval<player_database>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
    8 * PROTOBUF_FIELD_OFFSET(player_database, _impl_._has_bits_);
};

void player_database::clear_transform() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  if (_impl_.transform_ != nullptr) _impl_.transform_->Clear();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
void player_database::clear_uint64_pb_component() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  if (_impl_.uint64_pb_component_ != nullptr) _impl_.uint64_pb_component_->Clear();
  _impl_._has_bits_[0] &= ~0x00000002u;
}
void player_database::clear_skill_list() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  if (_impl_.skill_list_ != nullptr) _impl_.skill_list_->Clear();
  _impl_._has_bits_[0] &= ~0x00000004u;
}
void player_database::clear_uint32_pb_component() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  if (_impl_.uint32_pb_component_ != nullptr) _impl_.uint32_pb_component_->Clear();
  _impl_._has_bits_[0] &= ~0x00000008u;
}
player_database::player_database(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:player_database)
}
inline PROTOBUF_NDEBUG_INLINE player_database::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from)
      : _has_bits_{from._has_bits_},
        _cached_size_{0} {}

player_database::player_database(
    ::google::protobuf::Arena* arena,
    const player_database& from)
    : ::google::protobuf::Message(arena) {
  player_database* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_);
  ::uint32_t cached_has_bits = _impl_._has_bits_[0];
  _impl_.transform_ = (cached_has_bits & 0x00000001u) ? ::google::protobuf::Message::CopyConstruct<::Transform>(
                              arena, *from._impl_.transform_)
                        : nullptr;
  _impl_.uint64_pb_component_ = (cached_has_bits & 0x00000002u) ? ::google::protobuf::Message::CopyConstruct<::PlayerUint64PBComponent>(
                              arena, *from._impl_.uint64_pb_component_)
                        : nullptr;
  _impl_.skill_list_ = (cached_has_bits & 0x00000004u) ? ::google::protobuf::Message::CopyConstruct<::PlayerSkillListPBComponent>(
                              arena, *from._impl_.skill_list_)
                        : nullptr;
  _impl_.uint32_pb_component_ = (cached_has_bits & 0x00000008u) ? ::google::protobuf::Message::CopyConstruct<::PlayerUint32PBComponent>(
                              arena, *from._impl_.uint32_pb_component_)
                        : nullptr;
  _impl_.player_id_ = from._impl_.player_id_;

  // @@protoc_insertion_point(copy_constructor:player_database)
}
inline PROTOBUF_NDEBUG_INLINE player_database::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0} {}

inline void player_database::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, transform_),
           0,
           offsetof(Impl_, player_id_) -
               offsetof(Impl_, transform_) +
               sizeof(Impl_::player_id_));
}
player_database::~player_database() {
  // @@protoc_insertion_point(destructor:player_database)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void player_database::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  delete _impl_.transform_;
  delete _impl_.uint64_pb_component_;
  delete _impl_.skill_list_;
  delete _impl_.uint32_pb_component_;
  _impl_.~Impl_();
}

const ::google::protobuf::MessageLite::ClassData*
player_database::GetClassData() const {
  PROTOBUF_CONSTINIT static const ::google::protobuf::MessageLite::
      ClassDataFull _data_ = {
          {
              nullptr,  // OnDemandRegisterArenaDtor
              PROTOBUF_FIELD_OFFSET(player_database, _impl_._cached_size_),
              false,
          },
          &player_database::MergeImpl,
          &player_database::kDescriptorMethods,
      };
  return &_data_;
}
PROTOBUF_NOINLINE void player_database::Clear() {
// @@protoc_insertion_point(message_clear_start:player_database)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x0000000fu) {
    if (cached_has_bits & 0x00000001u) {
      ABSL_DCHECK(_impl_.transform_ != nullptr);
      _impl_.transform_->Clear();
    }
    if (cached_has_bits & 0x00000002u) {
      ABSL_DCHECK(_impl_.uint64_pb_component_ != nullptr);
      _impl_.uint64_pb_component_->Clear();
    }
    if (cached_has_bits & 0x00000004u) {
      ABSL_DCHECK(_impl_.skill_list_ != nullptr);
      _impl_.skill_list_->Clear();
    }
    if (cached_has_bits & 0x00000008u) {
      ABSL_DCHECK(_impl_.uint32_pb_component_ != nullptr);
      _impl_.uint32_pb_component_->Clear();
    }
  }
  _impl_.player_id_ = ::uint64_t{0u};
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* player_database::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<3, 5, 4, 0, 2> player_database::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(player_database, _impl_._has_bits_),
    0, // no _extensions_
    5, 56,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967264,  // skipmap
    offsetof(decltype(_table_), field_entries),
    5,  // num_field_entries
    4,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    &_player_database_default_instance_._instance,
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::player_database>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
    // uint64 player_id = 1;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint64_t, offsetof(player_database, _impl_.player_id_), 63>(),
     {8, 63, 0, PROTOBUF_FIELD_OFFSET(player_database, _impl_.player_id_)}},
    // .Transform transform = 2;
    {::_pbi::TcParser::FastMtS1,
     {18, 0, 0, PROTOBUF_FIELD_OFFSET(player_database, _impl_.transform_)}},
    // .PlayerUint64PBComponent uint64_pb_component = 3;
    {::_pbi::TcParser::FastMtS1,
     {26, 1, 1, PROTOBUF_FIELD_OFFSET(player_database, _impl_.uint64_pb_component_)}},
    // .PlayerSkillListPBComponent skill_list = 4;
    {::_pbi::TcParser::FastMtS1,
     {34, 2, 2, PROTOBUF_FIELD_OFFSET(player_database, _impl_.skill_list_)}},
    // .PlayerUint32PBComponent uint32_pb_component = 5;
    {::_pbi::TcParser::FastMtS1,
     {42, 3, 3, PROTOBUF_FIELD_OFFSET(player_database, _impl_.uint32_pb_component_)}},
    {::_pbi::TcParser::MiniParse, {}},
    {::_pbi::TcParser::MiniParse, {}},
  }}, {{
    65535, 65535
  }}, {{
    // uint64 player_id = 1;
    {PROTOBUF_FIELD_OFFSET(player_database, _impl_.player_id_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUInt64)},
    // .Transform transform = 2;
    {PROTOBUF_FIELD_OFFSET(player_database, _impl_.transform_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
    // .PlayerUint64PBComponent uint64_pb_component = 3;
    {PROTOBUF_FIELD_OFFSET(player_database, _impl_.uint64_pb_component_), _Internal::kHasBitsOffset + 1, 1,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
    // .PlayerSkillListPBComponent skill_list = 4;
    {PROTOBUF_FIELD_OFFSET(player_database, _impl_.skill_list_), _Internal::kHasBitsOffset + 2, 2,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
    // .PlayerUint32PBComponent uint32_pb_component = 5;
    {PROTOBUF_FIELD_OFFSET(player_database, _impl_.uint32_pb_component_), _Internal::kHasBitsOffset + 3, 3,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
  }}, {{
    {::_pbi::TcParser::GetTable<::Transform>()},
    {::_pbi::TcParser::GetTable<::PlayerUint64PBComponent>()},
    {::_pbi::TcParser::GetTable<::PlayerSkillListPBComponent>()},
    {::_pbi::TcParser::GetTable<::PlayerUint32PBComponent>()},
  }}, {{
  }},
};

::uint8_t* player_database::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:player_database)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  // uint64 player_id = 1;
  if (this->_internal_player_id() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt64ToArray(
        1, this->_internal_player_id(), target);
  }

  cached_has_bits = _impl_._has_bits_[0];
  // .Transform transform = 2;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
        2, *_impl_.transform_, _impl_.transform_->GetCachedSize(), target, stream);
  }

  // .PlayerUint64PBComponent uint64_pb_component = 3;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
        3, *_impl_.uint64_pb_component_, _impl_.uint64_pb_component_->GetCachedSize(), target, stream);
  }

  // .PlayerSkillListPBComponent skill_list = 4;
  if (cached_has_bits & 0x00000004u) {
    target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
        4, *_impl_.skill_list_, _impl_.skill_list_->GetCachedSize(), target, stream);
  }

  // .PlayerUint32PBComponent uint32_pb_component = 5;
  if (cached_has_bits & 0x00000008u) {
    target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
        5, *_impl_.uint32_pb_component_, _impl_.uint32_pb_component_->GetCachedSize(), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:player_database)
  return target;
}

::size_t player_database::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:player_database)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x0000000fu) {
    // .Transform transform = 2;
    if (cached_has_bits & 0x00000001u) {
      total_size +=
          1 + ::google::protobuf::internal::WireFormatLite::MessageSize(*_impl_.transform_);
    }

    // .PlayerUint64PBComponent uint64_pb_component = 3;
    if (cached_has_bits & 0x00000002u) {
      total_size +=
          1 + ::google::protobuf::internal::WireFormatLite::MessageSize(*_impl_.uint64_pb_component_);
    }

    // .PlayerSkillListPBComponent skill_list = 4;
    if (cached_has_bits & 0x00000004u) {
      total_size +=
          1 + ::google::protobuf::internal::WireFormatLite::MessageSize(*_impl_.skill_list_);
    }

    // .PlayerUint32PBComponent uint32_pb_component = 5;
    if (cached_has_bits & 0x00000008u) {
      total_size +=
          1 + ::google::protobuf::internal::WireFormatLite::MessageSize(*_impl_.uint32_pb_component_);
    }

  }
  // uint64 player_id = 1;
  if (this->_internal_player_id() != 0) {
    total_size += ::_pbi::WireFormatLite::UInt64SizePlusOne(
        this->_internal_player_id());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}


void player_database::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<player_database*>(&to_msg);
  auto& from = static_cast<const player_database&>(from_msg);
  ::google::protobuf::Arena* arena = _this->GetArena();
  // @@protoc_insertion_point(class_specific_merge_from_start:player_database)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._impl_._has_bits_[0];
  if (cached_has_bits & 0x0000000fu) {
    if (cached_has_bits & 0x00000001u) {
      ABSL_DCHECK(from._impl_.transform_ != nullptr);
      if (_this->_impl_.transform_ == nullptr) {
        _this->_impl_.transform_ =
            ::google::protobuf::Message::CopyConstruct<::Transform>(arena, *from._impl_.transform_);
      } else {
        _this->_impl_.transform_->MergeFrom(*from._impl_.transform_);
      }
    }
    if (cached_has_bits & 0x00000002u) {
      ABSL_DCHECK(from._impl_.uint64_pb_component_ != nullptr);
      if (_this->_impl_.uint64_pb_component_ == nullptr) {
        _this->_impl_.uint64_pb_component_ =
            ::google::protobuf::Message::CopyConstruct<::PlayerUint64PBComponent>(arena, *from._impl_.uint64_pb_component_);
      } else {
        _this->_impl_.uint64_pb_component_->MergeFrom(*from._impl_.uint64_pb_component_);
      }
    }
    if (cached_has_bits & 0x00000004u) {
      ABSL_DCHECK(from._impl_.skill_list_ != nullptr);
      if (_this->_impl_.skill_list_ == nullptr) {
        _this->_impl_.skill_list_ =
            ::google::protobuf::Message::CopyConstruct<::PlayerSkillListPBComponent>(arena, *from._impl_.skill_list_);
      } else {
        _this->_impl_.skill_list_->MergeFrom(*from._impl_.skill_list_);
      }
    }
    if (cached_has_bits & 0x00000008u) {
      ABSL_DCHECK(from._impl_.uint32_pb_component_ != nullptr);
      if (_this->_impl_.uint32_pb_component_ == nullptr) {
        _this->_impl_.uint32_pb_component_ =
            ::google::protobuf::Message::CopyConstruct<::PlayerUint32PBComponent>(arena, *from._impl_.uint32_pb_component_);
      } else {
        _this->_impl_.uint32_pb_component_->MergeFrom(*from._impl_.uint32_pb_component_);
      }
    }
  }
  if (from._internal_player_id() != 0) {
    _this->_impl_.player_id_ = from._impl_.player_id_;
  }
  _this->_impl_._has_bits_[0] |= cached_has_bits;
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void player_database::CopyFrom(const player_database& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:player_database)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool player_database::IsInitialized() const {
  return true;
}

void player_database::InternalSwap(player_database* PROTOBUF_RESTRICT other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(player_database, _impl_.player_id_)
      + sizeof(player_database::_impl_.player_id_)
      - PROTOBUF_FIELD_OFFSET(player_database, _impl_.transform_)>(
          reinterpret_cast<char*>(&_impl_.transform_),
          reinterpret_cast<char*>(&other->_impl_.transform_));
}

::google::protobuf::Metadata player_database::GetMetadata() const {
  return ::_pbi::AssignDescriptors(&descriptor_table_common_2fmysql_5fdatabase_5ftable_2eproto_getter,
                                   &descriptor_table_common_2fmysql_5fdatabase_5ftable_2eproto_once,
                                   file_level_metadata_common_2fmysql_5fdatabase_5ftable_2eproto[3]);
}
// ===================================================================

class player_database_1::_Internal {
 public:
};

player_database_1::player_database_1(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:player_database_1)
}
player_database_1::player_database_1(
    ::google::protobuf::Arena* arena, const player_database_1& from)
    : player_database_1(arena) {
  MergeFrom(from);
}
inline PROTOBUF_NDEBUG_INLINE player_database_1::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0} {}

inline void player_database_1::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  _impl_.player_id_ = {};
}
player_database_1::~player_database_1() {
  // @@protoc_insertion_point(destructor:player_database_1)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void player_database_1::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  _impl_.~Impl_();
}

const ::google::protobuf::MessageLite::ClassData*
player_database_1::GetClassData() const {
  PROTOBUF_CONSTINIT static const ::google::protobuf::MessageLite::
      ClassDataFull _data_ = {
          {
              nullptr,  // OnDemandRegisterArenaDtor
              PROTOBUF_FIELD_OFFSET(player_database_1, _impl_._cached_size_),
              false,
          },
          &player_database_1::MergeImpl,
          &player_database_1::kDescriptorMethods,
      };
  return &_data_;
}
PROTOBUF_NOINLINE void player_database_1::Clear() {
// @@protoc_insertion_point(message_clear_start:player_database_1)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.player_id_ = ::uint64_t{0u};
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* player_database_1::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<0, 1, 0, 0, 2> player_database_1::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    1, 0,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967294,  // skipmap
    offsetof(decltype(_table_), field_entries),
    1,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    &_player_database_1_default_instance_._instance,
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::player_database_1>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // uint64 player_id = 1;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint64_t, offsetof(player_database_1, _impl_.player_id_), 63>(),
     {8, 63, 0, PROTOBUF_FIELD_OFFSET(player_database_1, _impl_.player_id_)}},
  }}, {{
    65535, 65535
  }}, {{
    // uint64 player_id = 1;
    {PROTOBUF_FIELD_OFFSET(player_database_1, _impl_.player_id_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUInt64)},
  }},
  // no aux_entries
  {{
  }},
};

::uint8_t* player_database_1::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:player_database_1)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  // uint64 player_id = 1;
  if (this->_internal_player_id() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt64ToArray(
        1, this->_internal_player_id(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:player_database_1)
  return target;
}

::size_t player_database_1::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:player_database_1)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // uint64 player_id = 1;
  if (this->_internal_player_id() != 0) {
    total_size += ::_pbi::WireFormatLite::UInt64SizePlusOne(
        this->_internal_player_id());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}


void player_database_1::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<player_database_1*>(&to_msg);
  auto& from = static_cast<const player_database_1&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:player_database_1)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_player_id() != 0) {
    _this->_impl_.player_id_ = from._impl_.player_id_;
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void player_database_1::CopyFrom(const player_database_1& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:player_database_1)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool player_database_1::IsInitialized() const {
  return true;
}

void player_database_1::InternalSwap(player_database_1* PROTOBUF_RESTRICT other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
        swap(_impl_.player_id_, other->_impl_.player_id_);
}

::google::protobuf::Metadata player_database_1::GetMetadata() const {
  return ::_pbi::AssignDescriptors(&descriptor_table_common_2fmysql_5fdatabase_5ftable_2eproto_getter,
                                   &descriptor_table_common_2fmysql_5fdatabase_5ftable_2eproto_once,
                                   file_level_metadata_common_2fmysql_5fdatabase_5ftable_2eproto[4]);
}
// @@protoc_insertion_point(namespace_scope)
namespace google {
namespace protobuf {
}  // namespace protobuf
}  // namespace google
// @@protoc_insertion_point(global_scope)
PROTOBUF_ATTRIBUTE_INIT_PRIORITY2
static ::std::false_type _static_init_ PROTOBUF_UNUSED =
    (::_pbi::AddDescriptors(&descriptor_table_common_2fmysql_5fdatabase_5ftable_2eproto),
     ::std::false_type{});
#include "google/protobuf/port_undef.inc"
