// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: proto/common/user_accounts.proto
// Protobuf C++ Version: 5.26.1

#ifndef GOOGLE_PROTOBUF_INCLUDED_proto_2fcommon_2fuser_5faccounts_2eproto_2epb_2eh
#define GOOGLE_PROTOBUF_INCLUDED_proto_2fcommon_2fuser_5faccounts_2eproto_2epb_2eh

#include <limits>
#include <string>
#include <type_traits>
#include <utility>

#include "google/protobuf/port_def.inc"
#if PROTOBUF_VERSION != 5026001
#error "Protobuf C++ gencode is built with an incompatible version of"
#error "Protobuf C++ headers/runtime. See"
#error "https://protobuf.dev/support/cross-version-runtime-guarantee/#cpp"
#endif
#include "google/protobuf/port_undef.inc"
#include "google/protobuf/io/coded_stream.h"
#include "google/protobuf/arena.h"
#include "google/protobuf/arenastring.h"
#include "google/protobuf/generated_message_tctable_decl.h"
#include "google/protobuf/generated_message_util.h"
#include "google/protobuf/metadata_lite.h"
#include "google/protobuf/generated_message_reflection.h"
#include "google/protobuf/message.h"
#include "google/protobuf/repeated_field.h"  // IWYU pragma: export
#include "google/protobuf/extension_set.h"  // IWYU pragma: export
#include "google/protobuf/unknown_field_set.h"
// @@protoc_insertion_point(includes)

// Must be included last.
#include "google/protobuf/port_def.inc"

#define PROTOBUF_INTERNAL_EXPORT_proto_2fcommon_2fuser_5faccounts_2eproto

namespace google {
namespace protobuf {
namespace internal {
class AnyMetadata;
}  // namespace internal
}  // namespace protobuf
}  // namespace google

// Internal implementation detail -- do not use these members.
struct TableStruct_proto_2fcommon_2fuser_5faccounts_2eproto {
  static const ::uint32_t offsets[];
};
extern const ::google::protobuf::internal::DescriptorTable
    descriptor_table_proto_2fcommon_2fuser_5faccounts_2eproto;
class AccountSimplePlayer;
struct AccountSimplePlayerDefaultTypeInternal;
extern AccountSimplePlayerDefaultTypeInternal _AccountSimplePlayer_default_instance_;
class AccountSimplePlayerList;
struct AccountSimplePlayerListDefaultTypeInternal;
extern AccountSimplePlayerListDefaultTypeInternal _AccountSimplePlayerList_default_instance_;
namespace google {
namespace protobuf {
}  // namespace protobuf
}  // namespace google


// ===================================================================


// -------------------------------------------------------------------

class AccountSimplePlayer final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:AccountSimplePlayer) */ {
 public:
  inline AccountSimplePlayer() : AccountSimplePlayer(nullptr) {}
  ~AccountSimplePlayer() override;
  template <typename = void>
  explicit PROTOBUF_CONSTEXPR AccountSimplePlayer(
      ::google::protobuf::internal::ConstantInitialized);

  inline AccountSimplePlayer(const AccountSimplePlayer& from) : AccountSimplePlayer(nullptr, from) {}
  inline AccountSimplePlayer(AccountSimplePlayer&& from) noexcept
      : AccountSimplePlayer(nullptr, std::move(from)) {}
  inline AccountSimplePlayer& operator=(const AccountSimplePlayer& from) {
    CopyFrom(from);
    return *this;
  }
  inline AccountSimplePlayer& operator=(AccountSimplePlayer&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
#ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
#endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const AccountSimplePlayer& default_instance() {
    return *internal_default_instance();
  }
  static inline const AccountSimplePlayer* internal_default_instance() {
    return reinterpret_cast<const AccountSimplePlayer*>(
        &_AccountSimplePlayer_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 0;
  friend void swap(AccountSimplePlayer& a, AccountSimplePlayer& b) { a.Swap(&b); }
  inline void Swap(AccountSimplePlayer* other) {
    if (other == this) return;
#ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr && GetArena() == other->GetArena()) {
#else   // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
#endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(AccountSimplePlayer* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  AccountSimplePlayer* New(::google::protobuf::Arena* arena = nullptr) const final {
    return ::google::protobuf::Message::DefaultConstruct<AccountSimplePlayer>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const AccountSimplePlayer& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const AccountSimplePlayer& from) { AccountSimplePlayer::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  ::size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::google::protobuf::internal::ParseContext* ctx) final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(AccountSimplePlayer* other);
 private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() { return "AccountSimplePlayer"; }

 protected:
  explicit AccountSimplePlayer(::google::protobuf::Arena* arena);
  AccountSimplePlayer(::google::protobuf::Arena* arena, const AccountSimplePlayer& from);
  AccountSimplePlayer(::google::protobuf::Arena* arena, AccountSimplePlayer&& from) noexcept
      : AccountSimplePlayer(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::MessageLite::ClassData* GetClassData()
      const final;

 public:
  ::google::protobuf::Metadata GetMetadata() const final;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kPlayerIdFieldNumber = 1,
  };
  // uint64 player_id = 1;
  void clear_player_id() ;
  ::uint64_t player_id() const;
  void set_player_id(::uint64_t value);

  private:
  ::uint64_t _internal_player_id() const;
  void _internal_set_player_id(::uint64_t value);

  public:
  // @@protoc_insertion_point(class_scope:AccountSimplePlayer)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      0, 1, 0,
      0, 2>
      _table_;
  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from);
    ::uint64_t player_id_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_proto_2fcommon_2fuser_5faccounts_2eproto;
};
// -------------------------------------------------------------------

class AccountSimplePlayerList final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:AccountSimplePlayerList) */ {
 public:
  inline AccountSimplePlayerList() : AccountSimplePlayerList(nullptr) {}
  ~AccountSimplePlayerList() override;
  template <typename = void>
  explicit PROTOBUF_CONSTEXPR AccountSimplePlayerList(
      ::google::protobuf::internal::ConstantInitialized);

  inline AccountSimplePlayerList(const AccountSimplePlayerList& from) : AccountSimplePlayerList(nullptr, from) {}
  inline AccountSimplePlayerList(AccountSimplePlayerList&& from) noexcept
      : AccountSimplePlayerList(nullptr, std::move(from)) {}
  inline AccountSimplePlayerList& operator=(const AccountSimplePlayerList& from) {
    CopyFrom(from);
    return *this;
  }
  inline AccountSimplePlayerList& operator=(AccountSimplePlayerList&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
#ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
#endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const AccountSimplePlayerList& default_instance() {
    return *internal_default_instance();
  }
  static inline const AccountSimplePlayerList* internal_default_instance() {
    return reinterpret_cast<const AccountSimplePlayerList*>(
        &_AccountSimplePlayerList_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 1;
  friend void swap(AccountSimplePlayerList& a, AccountSimplePlayerList& b) { a.Swap(&b); }
  inline void Swap(AccountSimplePlayerList* other) {
    if (other == this) return;
#ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr && GetArena() == other->GetArena()) {
#else   // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
#endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(AccountSimplePlayerList* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  AccountSimplePlayerList* New(::google::protobuf::Arena* arena = nullptr) const final {
    return ::google::protobuf::Message::DefaultConstruct<AccountSimplePlayerList>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const AccountSimplePlayerList& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const AccountSimplePlayerList& from) { AccountSimplePlayerList::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  ::size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::google::protobuf::internal::ParseContext* ctx) final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(AccountSimplePlayerList* other);
 private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() { return "AccountSimplePlayerList"; }

 protected:
  explicit AccountSimplePlayerList(::google::protobuf::Arena* arena);
  AccountSimplePlayerList(::google::protobuf::Arena* arena, const AccountSimplePlayerList& from);
  AccountSimplePlayerList(::google::protobuf::Arena* arena, AccountSimplePlayerList&& from) noexcept
      : AccountSimplePlayerList(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::MessageLite::ClassData* GetClassData()
      const final;

 public:
  ::google::protobuf::Metadata GetMetadata() const final;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kPlayersFieldNumber = 1,
  };
  // repeated .AccountSimplePlayer players = 1;
  int players_size() const;
  private:
  int _internal_players_size() const;

  public:
  void clear_players() ;
  ::AccountSimplePlayer* mutable_players(int index);
  ::google::protobuf::RepeatedPtrField<::AccountSimplePlayer>* mutable_players();

  private:
  const ::google::protobuf::RepeatedPtrField<::AccountSimplePlayer>& _internal_players() const;
  ::google::protobuf::RepeatedPtrField<::AccountSimplePlayer>* _internal_mutable_players();
  public:
  const ::AccountSimplePlayer& players(int index) const;
  ::AccountSimplePlayer* add_players();
  const ::google::protobuf::RepeatedPtrField<::AccountSimplePlayer>& players() const;
  // @@protoc_insertion_point(class_scope:AccountSimplePlayerList)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      0, 1, 1,
      0, 2>
      _table_;
  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from);
    ::google::protobuf::RepeatedPtrField< ::AccountSimplePlayer > players_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_proto_2fcommon_2fuser_5faccounts_2eproto;
};

// ===================================================================




// ===================================================================


#ifdef __GNUC__
#pragma GCC diagnostic push
#pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif  // __GNUC__
// -------------------------------------------------------------------

// AccountSimplePlayer

// uint64 player_id = 1;
inline void AccountSimplePlayer::clear_player_id() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.player_id_ = ::uint64_t{0u};
}
inline ::uint64_t AccountSimplePlayer::player_id() const {
  // @@protoc_insertion_point(field_get:AccountSimplePlayer.player_id)
  return _internal_player_id();
}
inline void AccountSimplePlayer::set_player_id(::uint64_t value) {
  _internal_set_player_id(value);
  // @@protoc_insertion_point(field_set:AccountSimplePlayer.player_id)
}
inline ::uint64_t AccountSimplePlayer::_internal_player_id() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.player_id_;
}
inline void AccountSimplePlayer::_internal_set_player_id(::uint64_t value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.player_id_ = value;
}

// -------------------------------------------------------------------

// AccountSimplePlayerList

// repeated .AccountSimplePlayer players = 1;
inline int AccountSimplePlayerList::_internal_players_size() const {
  return _internal_players().size();
}
inline int AccountSimplePlayerList::players_size() const {
  return _internal_players_size();
}
inline void AccountSimplePlayerList::clear_players() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.players_.Clear();
}
inline ::AccountSimplePlayer* AccountSimplePlayerList::mutable_players(int index)
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable:AccountSimplePlayerList.players)
  return _internal_mutable_players()->Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField<::AccountSimplePlayer>* AccountSimplePlayerList::mutable_players()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable_list:AccountSimplePlayerList.players)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  return _internal_mutable_players();
}
inline const ::AccountSimplePlayer& AccountSimplePlayerList::players(int index) const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:AccountSimplePlayerList.players)
  return _internal_players().Get(index);
}
inline ::AccountSimplePlayer* AccountSimplePlayerList::add_players() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ::AccountSimplePlayer* _add = _internal_mutable_players()->Add();
  // @@protoc_insertion_point(field_add:AccountSimplePlayerList.players)
  return _add;
}
inline const ::google::protobuf::RepeatedPtrField<::AccountSimplePlayer>& AccountSimplePlayerList::players() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_list:AccountSimplePlayerList.players)
  return _internal_players();
}
inline const ::google::protobuf::RepeatedPtrField<::AccountSimplePlayer>&
AccountSimplePlayerList::_internal_players() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.players_;
}
inline ::google::protobuf::RepeatedPtrField<::AccountSimplePlayer>*
AccountSimplePlayerList::_internal_mutable_players() {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return &_impl_.players_;
}

#ifdef __GNUC__
#pragma GCC diagnostic pop
#endif  // __GNUC__

// @@protoc_insertion_point(namespace_scope)


// @@protoc_insertion_point(global_scope)

#include "google/protobuf/port_undef.inc"

#endif  // GOOGLE_PROTOBUF_INCLUDED_proto_2fcommon_2fuser_5faccounts_2eproto_2epb_2eh
