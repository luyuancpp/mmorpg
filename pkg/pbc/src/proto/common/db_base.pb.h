// Generated by the protocol buffer compiler.  DO NOT EDIT!
// NO CHECKED-IN PROTOBUF GENCODE
// source: proto/common/db_base.proto
// Protobuf C++ Version: 6.31.0-dev

#ifndef proto_2fcommon_2fdb_5fbase_2eproto_2epb_2eh
#define proto_2fcommon_2fdb_5fbase_2eproto_2epb_2eh

#include <limits>
#include <string>
#include <type_traits>
#include <utility>

#include "google/protobuf/runtime_version.h"
#if PROTOBUF_VERSION != 6031000
#error "Protobuf C++ gencode is built with an incompatible version of"
#error "Protobuf C++ headers/runtime. See"
#error "https://protobuf.dev/support/cross-version-runtime-guarantee/#cpp"
#endif
#include "google/protobuf/io/coded_stream.h"
#include "google/protobuf/arena.h"
#include "google/protobuf/arenastring.h"
#include "google/protobuf/generated_message_tctable_decl.h"
#include "google/protobuf/generated_message_util.h"
#include "google/protobuf/metadata_lite.h"
#include "google/protobuf/generated_message_reflection.h"
#include "google/protobuf/repeated_field.h"  // IWYU pragma: export
#include "google/protobuf/extension_set.h"  // IWYU pragma: export
#include "google/protobuf/generated_enum_reflection.h"
#include "google/protobuf/descriptor.pb.h"
// @@protoc_insertion_point(includes)

// Must be included last.
#include "google/protobuf/port_def.inc"

#define PROTOBUF_INTERNAL_EXPORT_proto_2fcommon_2fdb_5fbase_2eproto

namespace google {
namespace protobuf {
namespace internal {
template <typename T>
::absl::string_view GetAnyMessageName();
}  // namespace internal
}  // namespace protobuf
}  // namespace google

// Internal implementation detail -- do not use these members.
struct TableStruct_proto_2fcommon_2fdb_5fbase_2eproto {
  static const ::uint32_t offsets[];
};
extern "C" {
extern const ::google::protobuf::internal::DescriptorTable descriptor_table_proto_2fcommon_2fdb_5fbase_2eproto;
}  // extern "C"
enum BS_RESULT_TYPE : int;
extern const uint32_t BS_RESULT_TYPE_internal_data_[];
enum OPERATE_TYPE : int;
extern const uint32_t OPERATE_TYPE_internal_data_[];
namespace google {
namespace protobuf {
template <>
internal::EnumTraitsT<::BS_RESULT_TYPE_internal_data_>
    internal::EnumTraitsImpl::value<::BS_RESULT_TYPE>;
template <>
internal::EnumTraitsT<::OPERATE_TYPE_internal_data_>
    internal::EnumTraitsImpl::value<::OPERATE_TYPE>;
}  // namespace protobuf
}  // namespace google

enum OPERATE_TYPE : int {
  OPERATE_NONE = 0,
  OPERATE_INSERT = 1,
  OPERATE_UPDATE = 2,
  OPERATE_DELETE = 3,
  OPERATE_LOAD = 4,
  OPERATE_DELETE_CACHE = 5,
  OPERATE_REPLACE = 6,
  OPERATE_CALL_PROC = 7,
  OPERATE_DELETE_BACKUP = 8,
  OPERATE_TYPE_INT_MIN_SENTINEL_DO_NOT_USE_ =
      std::numeric_limits<::int32_t>::min(),
  OPERATE_TYPE_INT_MAX_SENTINEL_DO_NOT_USE_ =
      std::numeric_limits<::int32_t>::max(),
};

extern const uint32_t OPERATE_TYPE_internal_data_[];
inline constexpr OPERATE_TYPE OPERATE_TYPE_MIN =
    static_cast<OPERATE_TYPE>(0);
inline constexpr OPERATE_TYPE OPERATE_TYPE_MAX =
    static_cast<OPERATE_TYPE>(8);
inline bool OPERATE_TYPE_IsValid(int value) {
  return 0 <= value && value <= 8;
}
inline constexpr int OPERATE_TYPE_ARRAYSIZE = 8 + 1;
const ::google::protobuf::EnumDescriptor* PROTOBUF_NONNULL OPERATE_TYPE_descriptor();
template <typename T>
const std::string& OPERATE_TYPE_Name(T value) {
  static_assert(std::is_same<T, OPERATE_TYPE>::value ||
                    std::is_integral<T>::value,
                "Incorrect type passed to OPERATE_TYPE_Name().");
  return OPERATE_TYPE_Name(static_cast<OPERATE_TYPE>(value));
}
template <>
inline const std::string& OPERATE_TYPE_Name(OPERATE_TYPE value) {
  return ::google::protobuf::internal::NameOfDenseEnum<OPERATE_TYPE_descriptor, 0, 8>(
      static_cast<int>(value));
}
inline bool OPERATE_TYPE_Parse(
    absl::string_view name, OPERATE_TYPE* PROTOBUF_NONNULL value) {
  return ::google::protobuf::internal::ParseNamedEnum<OPERATE_TYPE>(OPERATE_TYPE_descriptor(), name,
                                           value);
}
enum BS_RESULT_TYPE : int {
  BS_RESULT_NONE = 0,
  BS_RESULT_SUCCESS = 1,
  BS_RESULT_FAILED = 2,
  BS_RESULT_TYPE_INT_MIN_SENTINEL_DO_NOT_USE_ =
      std::numeric_limits<::int32_t>::min(),
  BS_RESULT_TYPE_INT_MAX_SENTINEL_DO_NOT_USE_ =
      std::numeric_limits<::int32_t>::max(),
};

extern const uint32_t BS_RESULT_TYPE_internal_data_[];
inline constexpr BS_RESULT_TYPE BS_RESULT_TYPE_MIN =
    static_cast<BS_RESULT_TYPE>(0);
inline constexpr BS_RESULT_TYPE BS_RESULT_TYPE_MAX =
    static_cast<BS_RESULT_TYPE>(2);
inline bool BS_RESULT_TYPE_IsValid(int value) {
  return 0 <= value && value <= 2;
}
inline constexpr int BS_RESULT_TYPE_ARRAYSIZE = 2 + 1;
const ::google::protobuf::EnumDescriptor* PROTOBUF_NONNULL BS_RESULT_TYPE_descriptor();
template <typename T>
const std::string& BS_RESULT_TYPE_Name(T value) {
  static_assert(std::is_same<T, BS_RESULT_TYPE>::value ||
                    std::is_integral<T>::value,
                "Incorrect type passed to BS_RESULT_TYPE_Name().");
  return BS_RESULT_TYPE_Name(static_cast<BS_RESULT_TYPE>(value));
}
template <>
inline const std::string& BS_RESULT_TYPE_Name(BS_RESULT_TYPE value) {
  return ::google::protobuf::internal::NameOfDenseEnum<BS_RESULT_TYPE_descriptor, 0, 2>(
      static_cast<int>(value));
}
inline bool BS_RESULT_TYPE_Parse(
    absl::string_view name, BS_RESULT_TYPE* PROTOBUF_NONNULL value) {
  return ::google::protobuf::internal::ParseNamedEnum<BS_RESULT_TYPE>(BS_RESULT_TYPE_descriptor(), name,
                                           value);
}

// ===================================================================



// ===================================================================



inline constexpr int kOptionTableIdFieldNumber =
    50000;
extern ::google::protobuf::internal::ExtensionIdentifier<
    ::google::protobuf::MessageOptions, ::google::protobuf::internal::PrimitiveTypeTraits< ::uint32_t >, 13, false>
    OptionTableId;
inline constexpr int kOptionTableNameFieldNumber =
    50001;
extern ::google::protobuf::internal::ExtensionIdentifier<
    ::google::protobuf::MessageOptions, ::google::protobuf::internal::StringTypeTraits, 9, false>
    OptionTableName;
inline constexpr int kOptionPrimaryKeyFieldNumber =
    50002;
extern ::google::protobuf::internal::ExtensionIdentifier<
    ::google::protobuf::MessageOptions, ::google::protobuf::internal::StringTypeTraits, 9, false>
    OptionPrimaryKey;
inline constexpr int kOptionForeignKeyFieldNumber =
    50003;
extern ::google::protobuf::internal::ExtensionIdentifier<
    ::google::protobuf::MessageOptions, ::google::protobuf::internal::StringTypeTraits, 9, false>
    OptionForeignKey;
inline constexpr int kOptionForeignReferencesFieldNumber =
    50005;
extern ::google::protobuf::internal::ExtensionIdentifier<
    ::google::protobuf::MessageOptions, ::google::protobuf::internal::StringTypeTraits, 9, false>
    OptionForeignReferences;
inline constexpr int kOptionAutoIncrementKeyFieldNumber =
    50006;
extern ::google::protobuf::internal::ExtensionIdentifier<
    ::google::protobuf::MessageOptions, ::google::protobuf::internal::StringTypeTraits, 9, false>
    OptionAutoIncrementKey;
inline constexpr int kOptionBackupTableNameFieldNumber =
    50007;
extern ::google::protobuf::internal::ExtensionIdentifier<
    ::google::protobuf::MessageOptions, ::google::protobuf::internal::StringTypeTraits, 9, false>
    OptionBackupTableName;
inline constexpr int kOptionLoadOnlyFieldNumber =
    50008;
extern ::google::protobuf::internal::ExtensionIdentifier<
    ::google::protobuf::MessageOptions, ::google::protobuf::internal::PrimitiveTypeTraits< bool >, 8, false>
    OptionLoadOnly;
inline constexpr int kOptionProcedureNameFieldNumber =
    50009;
extern ::google::protobuf::internal::ExtensionIdentifier<
    ::google::protobuf::MessageOptions, ::google::protobuf::internal::StringTypeTraits, 9, false>
    OptionProcedureName;
inline constexpr int kOptionProcedureResultFieldNumber =
    50010;
extern ::google::protobuf::internal::ExtensionIdentifier<
    ::google::protobuf::MessageOptions, ::google::protobuf::internal::StringTypeTraits, 9, false>
    OptionProcedureResult;
inline constexpr int kOptionIndexFieldNumber =
    50011;
extern ::google::protobuf::internal::ExtensionIdentifier<
    ::google::protobuf::MessageOptions, ::google::protobuf::internal::StringTypeTraits, 9, false>
    OptionIndex;
inline constexpr int kOptionUniqueKeyFieldNumber =
    50012;
extern ::google::protobuf::internal::ExtensionIdentifier<
    ::google::protobuf::MessageOptions, ::google::protobuf::internal::StringTypeTraits, 9, false>
    OptionUniqueKey;
inline constexpr int kOptionRepeatLimitFieldNumber =
    60000;
extern ::google::protobuf::internal::ExtensionIdentifier<
    ::google::protobuf::FieldOptions, ::google::protobuf::internal::PrimitiveTypeTraits< ::uint32_t >, 13, false>
    OptionRepeatLimit;
inline constexpr int kOptionDBFieldExtraFieldNumber =
    60001;
extern ::google::protobuf::internal::ExtensionIdentifier<
    ::google::protobuf::FieldOptions, ::google::protobuf::internal::StringTypeTraits, 9, false>
    OptionDBFieldExtra;
inline constexpr int kOptionDBReadOnlyFieldNumber =
    60002;
extern ::google::protobuf::internal::ExtensionIdentifier<
    ::google::protobuf::FieldOptions, ::google::protobuf::internal::PrimitiveTypeTraits< bool >, 8, false>
    OptionDBReadOnly;
inline constexpr int kOptionDBNamePrefixFieldNumber =
    60003;
extern ::google::protobuf::internal::ExtensionIdentifier<
    ::google::protobuf::FieldOptions, ::google::protobuf::internal::StringTypeTraits, 9, false>
    OptionDBNamePrefix;
inline constexpr int kOptionDBLoadSqlFieldNumber =
    60004;
extern ::google::protobuf::internal::ExtensionIdentifier<
    ::google::protobuf::FieldOptions, ::google::protobuf::internal::StringTypeTraits, 9, false>
    OptionDBLoadSql;
inline constexpr int kOptionDBNeedEscapeFieldNumber =
    60005;
extern ::google::protobuf::internal::ExtensionIdentifier<
    ::google::protobuf::FieldOptions, ::google::protobuf::internal::PrimitiveTypeTraits< bool >, 8, false>
    OptionDBNeedEscape;
inline constexpr int kOptionDBProcParamFieldNumber =
    60006;
extern ::google::protobuf::internal::ExtensionIdentifier<
    ::google::protobuf::FieldOptions, ::google::protobuf::internal::PrimitiveTypeTraits< bool >, 8, false>
    OptionDBProcParam;
inline constexpr int kOptionOldNameFieldNumber =
    60007;
extern ::google::protobuf::internal::ExtensionIdentifier<
    ::google::protobuf::FieldOptions, ::google::protobuf::internal::StringTypeTraits, 9, false>
    OptionOldName;
inline constexpr int kOptionTableFieldNumber =
    60008;
extern ::google::protobuf::internal::ExtensionIdentifier<
    ::google::protobuf::FieldOptions, ::google::protobuf::internal::StringTypeTraits, 9, false>
    OptionTable;
inline constexpr int kOptionBackUpTabelFieldNumber =
    60009;
extern ::google::protobuf::internal::ExtensionIdentifier<
    ::google::protobuf::FieldOptions, ::google::protobuf::internal::StringTypeTraits, 9, false>
    OptionBackUpTabel;

// ===================================================================


#ifdef __GNUC__
#pragma GCC diagnostic push
#pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif  // __GNUC__
#ifdef __GNUC__
#pragma GCC diagnostic pop
#endif  // __GNUC__

// @@protoc_insertion_point(namespace_scope)


namespace google {
namespace protobuf {

template <>
struct is_proto_enum<::OPERATE_TYPE> : std::true_type {};
template <>
inline const EnumDescriptor* PROTOBUF_NONNULL GetEnumDescriptor<::OPERATE_TYPE>() {
  return ::OPERATE_TYPE_descriptor();
}
template <>
struct is_proto_enum<::BS_RESULT_TYPE> : std::true_type {};
template <>
inline const EnumDescriptor* PROTOBUF_NONNULL GetEnumDescriptor<::BS_RESULT_TYPE>() {
  return ::BS_RESULT_TYPE_descriptor();
}

}  // namespace protobuf
}  // namespace google

// @@protoc_insertion_point(global_scope)

#include "google/protobuf/port_undef.inc"

#endif  // proto_2fcommon_2fdb_5fbase_2eproto_2epb_2eh
