// Generated by the protocol buffer compiler.  DO NOT EDIT!
// NO CHECKED-IN PROTOBUF GENCODE
// source: proto/common/game_service.proto
// Protobuf C++ Version: 5.29.0

#include "proto/common/game_service.pb.h"

#include <algorithm>
#include <type_traits>
#include "google/protobuf/io/coded_stream.h"
#include "google/protobuf/generated_message_tctable_impl.h"
#include "google/protobuf/extension_set.h"
#include "google/protobuf/generated_message_util.h"
#include "google/protobuf/wire_format_lite.h"
#include "google/protobuf/descriptor.h"
#include "google/protobuf/generated_message_reflection.h"
#include "google/protobuf/reflection_ops.h"
#include "google/protobuf/wire_format.h"
// @@protoc_insertion_point(includes)

// Must be included last.
#include "google/protobuf/port_def.inc"
PROTOBUF_PRAGMA_INIT_SEG
namespace _pb = ::google::protobuf;
namespace _pbi = ::google::protobuf::internal;
namespace _fl = ::google::protobuf::internal::field_layout;

inline constexpr SessionDisconnectRequest::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : player_id_{::uint64_t{0u}},
        _cached_size_{0} {}

template <typename>
PROTOBUF_CONSTEXPR SessionDisconnectRequest::SessionDisconnectRequest(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct SessionDisconnectRequestDefaultTypeInternal {
  PROTOBUF_CONSTEXPR SessionDisconnectRequestDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~SessionDisconnectRequestDefaultTypeInternal() {}
  union {
    SessionDisconnectRequest _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 SessionDisconnectRequestDefaultTypeInternal _SessionDisconnectRequest_default_instance_;

inline constexpr RegisterPlayerSessionRequest::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : session_id_{::uint64_t{0u}},
        player_id_{::uint64_t{0u}},
        _cached_size_{0} {}

template <typename>
PROTOBUF_CONSTEXPR RegisterPlayerSessionRequest::RegisterPlayerSessionRequest(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct RegisterPlayerSessionRequestDefaultTypeInternal {
  PROTOBUF_CONSTEXPR RegisterPlayerSessionRequestDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~RegisterPlayerSessionRequestDefaultTypeInternal() {}
  union {
    RegisterPlayerSessionRequest _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 RegisterPlayerSessionRequestDefaultTypeInternal _RegisterPlayerSessionRequest_default_instance_;

inline constexpr PlayerEnterGameNodeRequest::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : player_id_{::uint64_t{0u}},
        session_id_{::uint64_t{0u}},
        centre_node_id_{0u},
        _cached_size_{0} {}

template <typename>
PROTOBUF_CONSTEXPR PlayerEnterGameNodeRequest::PlayerEnterGameNodeRequest(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct PlayerEnterGameNodeRequestDefaultTypeInternal {
  PROTOBUF_CONSTEXPR PlayerEnterGameNodeRequestDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~PlayerEnterGameNodeRequestDefaultTypeInternal() {}
  union {
    PlayerEnterGameNodeRequest _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 PlayerEnterGameNodeRequestDefaultTypeInternal _PlayerEnterGameNodeRequest_default_instance_;

inline constexpr CreateSceneRequest::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : config_id_{0u},
        _cached_size_{0} {}

template <typename>
PROTOBUF_CONSTEXPR CreateSceneRequest::CreateSceneRequest(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct CreateSceneRequestDefaultTypeInternal {
  PROTOBUF_CONSTEXPR CreateSceneRequestDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~CreateSceneRequestDefaultTypeInternal() {}
  union {
    CreateSceneRequest _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 CreateSceneRequestDefaultTypeInternal _CreateSceneRequest_default_instance_;

inline constexpr Centre2GsEnterSceneRequest::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : player_id_{::uint64_t{0u}},
        scene_id_{::uint64_t{0u}},
        _cached_size_{0} {}

template <typename>
PROTOBUF_CONSTEXPR Centre2GsEnterSceneRequest::Centre2GsEnterSceneRequest(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct Centre2GsEnterSceneRequestDefaultTypeInternal {
  PROTOBUF_CONSTEXPR Centre2GsEnterSceneRequestDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~Centre2GsEnterSceneRequestDefaultTypeInternal() {}
  union {
    Centre2GsEnterSceneRequest _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 Centre2GsEnterSceneRequestDefaultTypeInternal _Centre2GsEnterSceneRequest_default_instance_;

inline constexpr GameNodeConnectRequest::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        rpc_client_{nullptr},
        gate_node_id_{0u} {}

template <typename>
PROTOBUF_CONSTEXPR GameNodeConnectRequest::GameNodeConnectRequest(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct GameNodeConnectRequestDefaultTypeInternal {
  PROTOBUF_CONSTEXPR GameNodeConnectRequestDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~GameNodeConnectRequestDefaultTypeInternal() {}
  union {
    GameNodeConnectRequest _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 GameNodeConnectRequestDefaultTypeInternal _GameNodeConnectRequest_default_instance_;

inline constexpr CreateSceneResponse::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        scene_info_{nullptr} {}

template <typename>
PROTOBUF_CONSTEXPR CreateSceneResponse::CreateSceneResponse(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct CreateSceneResponseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR CreateSceneResponseDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~CreateSceneResponseDefaultTypeInternal() {}
  union {
    CreateSceneResponse _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 CreateSceneResponseDefaultTypeInternal _CreateSceneResponse_default_instance_;

inline constexpr ClientSendMessageToPlayerResponse::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        message_content_{nullptr},
        session_id_{::uint64_t{0u}} {}

template <typename>
PROTOBUF_CONSTEXPR ClientSendMessageToPlayerResponse::ClientSendMessageToPlayerResponse(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct ClientSendMessageToPlayerResponseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR ClientSendMessageToPlayerResponseDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~ClientSendMessageToPlayerResponseDefaultTypeInternal() {}
  union {
    ClientSendMessageToPlayerResponse _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 ClientSendMessageToPlayerResponseDefaultTypeInternal _ClientSendMessageToPlayerResponse_default_instance_;

inline constexpr ClientSendMessageToPlayerRequest::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        message_content_{nullptr},
        session_id_{::uint64_t{0u}} {}

template <typename>
PROTOBUF_CONSTEXPR ClientSendMessageToPlayerRequest::ClientSendMessageToPlayerRequest(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct ClientSendMessageToPlayerRequestDefaultTypeInternal {
  PROTOBUF_CONSTEXPR ClientSendMessageToPlayerRequestDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~ClientSendMessageToPlayerRequestDefaultTypeInternal() {}
  union {
    ClientSendMessageToPlayerRequest _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 ClientSendMessageToPlayerRequestDefaultTypeInternal _ClientSendMessageToPlayerRequest_default_instance_;
static constexpr const ::_pb::EnumDescriptor**
    file_level_enum_descriptors_proto_2fcommon_2fgame_5fservice_2eproto = nullptr;
static const ::_pb::ServiceDescriptor*
    file_level_service_descriptors_proto_2fcommon_2fgame_5fservice_2eproto[1];
const ::uint32_t
    TableStruct_proto_2fcommon_2fgame_5fservice_2eproto::offsets[] ABSL_ATTRIBUTE_SECTION_VARIABLE(
        protodesc_cold) = {
        ~0u,  // no _has_bits_
        PROTOBUF_FIELD_OFFSET(::PlayerEnterGameNodeRequest, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::PlayerEnterGameNodeRequest, _impl_.player_id_),
        PROTOBUF_FIELD_OFFSET(::PlayerEnterGameNodeRequest, _impl_.session_id_),
        PROTOBUF_FIELD_OFFSET(::PlayerEnterGameNodeRequest, _impl_.centre_node_id_),
        PROTOBUF_FIELD_OFFSET(::ClientSendMessageToPlayerRequest, _impl_._has_bits_),
        PROTOBUF_FIELD_OFFSET(::ClientSendMessageToPlayerRequest, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::ClientSendMessageToPlayerRequest, _impl_.message_content_),
        PROTOBUF_FIELD_OFFSET(::ClientSendMessageToPlayerRequest, _impl_.session_id_),
        0,
        ~0u,
        PROTOBUF_FIELD_OFFSET(::ClientSendMessageToPlayerResponse, _impl_._has_bits_),
        PROTOBUF_FIELD_OFFSET(::ClientSendMessageToPlayerResponse, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::ClientSendMessageToPlayerResponse, _impl_.message_content_),
        PROTOBUF_FIELD_OFFSET(::ClientSendMessageToPlayerResponse, _impl_.session_id_),
        0,
        ~0u,
        ~0u,  // no _has_bits_
        PROTOBUF_FIELD_OFFSET(::SessionDisconnectRequest, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::SessionDisconnectRequest, _impl_.player_id_),
        PROTOBUF_FIELD_OFFSET(::GameNodeConnectRequest, _impl_._has_bits_),
        PROTOBUF_FIELD_OFFSET(::GameNodeConnectRequest, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::GameNodeConnectRequest, _impl_.rpc_client_),
        PROTOBUF_FIELD_OFFSET(::GameNodeConnectRequest, _impl_.gate_node_id_),
        0,
        ~0u,
        ~0u,  // no _has_bits_
        PROTOBUF_FIELD_OFFSET(::RegisterPlayerSessionRequest, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::RegisterPlayerSessionRequest, _impl_.session_id_),
        PROTOBUF_FIELD_OFFSET(::RegisterPlayerSessionRequest, _impl_.player_id_),
        ~0u,  // no _has_bits_
        PROTOBUF_FIELD_OFFSET(::Centre2GsEnterSceneRequest, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::Centre2GsEnterSceneRequest, _impl_.player_id_),
        PROTOBUF_FIELD_OFFSET(::Centre2GsEnterSceneRequest, _impl_.scene_id_),
        ~0u,  // no _has_bits_
        PROTOBUF_FIELD_OFFSET(::CreateSceneRequest, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::CreateSceneRequest, _impl_.config_id_),
        PROTOBUF_FIELD_OFFSET(::CreateSceneResponse, _impl_._has_bits_),
        PROTOBUF_FIELD_OFFSET(::CreateSceneResponse, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::CreateSceneResponse, _impl_.scene_info_),
        0,
};

static const ::_pbi::MigrationSchema
    schemas[] ABSL_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
        {0, -1, -1, sizeof(::PlayerEnterGameNodeRequest)},
        {11, 21, -1, sizeof(::ClientSendMessageToPlayerRequest)},
        {23, 33, -1, sizeof(::ClientSendMessageToPlayerResponse)},
        {35, -1, -1, sizeof(::SessionDisconnectRequest)},
        {44, 54, -1, sizeof(::GameNodeConnectRequest)},
        {56, -1, -1, sizeof(::RegisterPlayerSessionRequest)},
        {66, -1, -1, sizeof(::Centre2GsEnterSceneRequest)},
        {76, -1, -1, sizeof(::CreateSceneRequest)},
        {85, 94, -1, sizeof(::CreateSceneResponse)},
};
static const ::_pb::Message* const file_default_instances[] = {
    &::_PlayerEnterGameNodeRequest_default_instance_._instance,
    &::_ClientSendMessageToPlayerRequest_default_instance_._instance,
    &::_ClientSendMessageToPlayerResponse_default_instance_._instance,
    &::_SessionDisconnectRequest_default_instance_._instance,
    &::_GameNodeConnectRequest_default_instance_._instance,
    &::_RegisterPlayerSessionRequest_default_instance_._instance,
    &::_Centre2GsEnterSceneRequest_default_instance_._instance,
    &::_CreateSceneRequest_default_instance_._instance,
    &::_CreateSceneResponse_default_instance_._instance,
};
const char descriptor_table_protodef_proto_2fcommon_2fgame_5fservice_2eproto[] ABSL_ATTRIBUTE_SECTION_VARIABLE(
    protodesc_cold) = {
    "\n\037proto/common/game_service.proto\032\030proto"
    "/common/empty.proto\032\031proto/common/common"
    ".proto\032!proto/common/common_message.prot"
    "o\"[\n\032PlayerEnterGameNodeRequest\022\021\n\tplaye"
    "r_id\030\001 \001(\004\022\022\n\nsession_id\030\002 \001(\004\022\026\n\016centre"
    "_node_id\030\003 \001(\r\"`\n ClientSendMessageToPla"
    "yerRequest\022(\n\017message_content\030\001 \001(\0132\017.Me"
    "ssageContent\022\022\n\nsession_id\030\002 \001(\004\"a\n!Clie"
    "ntSendMessageToPlayerResponse\022(\n\017message"
    "_content\030\001 \001(\0132\017.MessageContent\022\022\n\nsessi"
    "on_id\030\002 \001(\004\"-\n\030SessionDisconnectRequest\022"
    "\021\n\tplayer_id\030\001 \001(\004\"S\n\026GameNodeConnectReq"
    "uest\022#\n\nrpc_client\030\001 \001(\0132\017.NetworkAddres"
    "s\022\024\n\014gate_node_id\030\002 \001(\r\"E\n\034RegisterPlaye"
    "rSessionRequest\022\022\n\nsession_id\030\001 \001(\004\022\021\n\tp"
    "layer_id\030\002 \001(\004\"A\n\032Centre2GsEnterSceneReq"
    "uest\022\021\n\tplayer_id\030\001 \001(\004\022\020\n\010scene_id\030\002 \001("
    "\004\"\'\n\022CreateSceneRequest\022\021\n\tconfig_id\030\001 \001"
    "(\r\"@\n\023CreateSceneResponse\022)\n\nscene_info\030"
    "\001 \001(\0132\025.SceneInfoPBComponent2\231\006\n\013GameSer"
    "vice\022:\n\023PlayerEnterGameNode\022\033.PlayerEnte"
    "rGameNodeRequest\032\006.Empty\022J\n\023SendMessageT"
    "oPlayer\022\030.NodeRouteMessageRequest\032\031.Node"
    "RouteMessageResponse\022b\n\031ClientSendMessag"
    "eToPlayer\022!.ClientSendMessageToPlayerReq"
    "uest\032\".ClientSendMessageToPlayerResponse"
    "\022A\n\035CentreSendToPlayerViaGameNode\022\030.Node"
    "RouteMessageRequest\032\006.Empty\022J\n\023InvokePla"
    "yerService\022\030.NodeRouteMessageRequest\032\031.N"
    "odeRouteMessageResponse\022A\n\022RouteNodeStri"
    "ngMsg\022\024.RouteMessageRequest\032\025.RouteMessa"
    "geResponse\022O\n\024RoutePlayerStringMsg\022\032.Rou"
    "tePlayerMessageRequest\032\033.RoutePlayerMess"
    "ageResponse\022<\n\023UpdateSessionDetail\022\035.Reg"
    "isterPlayerSessionRequest\032\006.Empty\0221\n\nEnt"
    "erScene\022\033.Centre2GsEnterSceneRequest\032\006.E"
    "mpty\0228\n\013CreateScene\022\023.CreateSceneRequest"
    "\032\024.CreateSceneResponse\022P\n\023RegisterNodeSe"
    "ssion\022\033.RegisterNodeSessionRequest\032\034.Reg"
    "isterNodeSessionResponseB\014Z\007pb/game\200\001\001b\006"
    "proto3"
};
static const ::_pbi::DescriptorTable* const descriptor_table_proto_2fcommon_2fgame_5fservice_2eproto_deps[3] =
    {
        &::descriptor_table_proto_2fcommon_2fcommon_2eproto,
        &::descriptor_table_proto_2fcommon_2fcommon_5fmessage_2eproto,
        &::descriptor_table_proto_2fcommon_2fempty_2eproto,
};
static ::absl::once_flag descriptor_table_proto_2fcommon_2fgame_5fservice_2eproto_once;
PROTOBUF_CONSTINIT const ::_pbi::DescriptorTable descriptor_table_proto_2fcommon_2fgame_5fservice_2eproto = {
    false,
    false,
    1606,
    descriptor_table_protodef_proto_2fcommon_2fgame_5fservice_2eproto,
    "proto/common/game_service.proto",
    &descriptor_table_proto_2fcommon_2fgame_5fservice_2eproto_once,
    descriptor_table_proto_2fcommon_2fgame_5fservice_2eproto_deps,
    3,
    9,
    schemas,
    file_default_instances,
    TableStruct_proto_2fcommon_2fgame_5fservice_2eproto::offsets,
    file_level_enum_descriptors_proto_2fcommon_2fgame_5fservice_2eproto,
    file_level_service_descriptors_proto_2fcommon_2fgame_5fservice_2eproto,
};
// ===================================================================

class PlayerEnterGameNodeRequest::_Internal {
 public:
};

PlayerEnterGameNodeRequest::PlayerEnterGameNodeRequest(::google::protobuf::Arena* arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:PlayerEnterGameNodeRequest)
}
PlayerEnterGameNodeRequest::PlayerEnterGameNodeRequest(
    ::google::protobuf::Arena* arena, const PlayerEnterGameNodeRequest& from)
    : PlayerEnterGameNodeRequest(arena) {
  MergeFrom(from);
}
inline PROTOBUF_NDEBUG_INLINE PlayerEnterGameNodeRequest::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0} {}

inline void PlayerEnterGameNodeRequest::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, player_id_),
           0,
           offsetof(Impl_, centre_node_id_) -
               offsetof(Impl_, player_id_) +
               sizeof(Impl_::centre_node_id_));
}
PlayerEnterGameNodeRequest::~PlayerEnterGameNodeRequest() {
  // @@protoc_insertion_point(destructor:PlayerEnterGameNodeRequest)
  SharedDtor(*this);
}
inline void PlayerEnterGameNodeRequest::SharedDtor(MessageLite& self) {
  PlayerEnterGameNodeRequest& this_ = static_cast<PlayerEnterGameNodeRequest&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  this_._impl_.~Impl_();
}

inline void* PlayerEnterGameNodeRequest::PlacementNew_(const void*, void* mem,
                                        ::google::protobuf::Arena* arena) {
  return ::new (mem) PlayerEnterGameNodeRequest(arena);
}
constexpr auto PlayerEnterGameNodeRequest::InternalNewImpl_() {
  return ::google::protobuf::internal::MessageCreator::ZeroInit(sizeof(PlayerEnterGameNodeRequest),
                                            alignof(PlayerEnterGameNodeRequest));
}
PROTOBUF_CONSTINIT
PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::google::protobuf::internal::ClassDataFull PlayerEnterGameNodeRequest::_class_data_ = {
    ::google::protobuf::internal::ClassData{
        &_PlayerEnterGameNodeRequest_default_instance_._instance,
        &_table_.header,
        nullptr,  // OnDemandRegisterArenaDtor
        nullptr,  // IsInitialized
        &PlayerEnterGameNodeRequest::MergeImpl,
        ::google::protobuf::Message::GetNewImpl<PlayerEnterGameNodeRequest>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
        &PlayerEnterGameNodeRequest::SharedDtor,
        ::google::protobuf::Message::GetClearImpl<PlayerEnterGameNodeRequest>(), &PlayerEnterGameNodeRequest::ByteSizeLong,
            &PlayerEnterGameNodeRequest::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
        PROTOBUF_FIELD_OFFSET(PlayerEnterGameNodeRequest, _impl_._cached_size_),
        false,
    },
    &PlayerEnterGameNodeRequest::kDescriptorMethods,
    &descriptor_table_proto_2fcommon_2fgame_5fservice_2eproto,
    nullptr,  // tracker
};
const ::google::protobuf::internal::ClassData* PlayerEnterGameNodeRequest::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_class_data_.tc_table);
  return _class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<2, 3, 0, 0, 2> PlayerEnterGameNodeRequest::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    3, 24,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967288,  // skipmap
    offsetof(decltype(_table_), field_entries),
    3,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    _class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::PlayerEnterGameNodeRequest>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
    // uint64 player_id = 1;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint64_t, offsetof(PlayerEnterGameNodeRequest, _impl_.player_id_), 63>(),
     {8, 63, 0, PROTOBUF_FIELD_OFFSET(PlayerEnterGameNodeRequest, _impl_.player_id_)}},
    // uint64 session_id = 2;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint64_t, offsetof(PlayerEnterGameNodeRequest, _impl_.session_id_), 63>(),
     {16, 63, 0, PROTOBUF_FIELD_OFFSET(PlayerEnterGameNodeRequest, _impl_.session_id_)}},
    // uint32 centre_node_id = 3;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(PlayerEnterGameNodeRequest, _impl_.centre_node_id_), 63>(),
     {24, 63, 0, PROTOBUF_FIELD_OFFSET(PlayerEnterGameNodeRequest, _impl_.centre_node_id_)}},
  }}, {{
    65535, 65535
  }}, {{
    // uint64 player_id = 1;
    {PROTOBUF_FIELD_OFFSET(PlayerEnterGameNodeRequest, _impl_.player_id_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUInt64)},
    // uint64 session_id = 2;
    {PROTOBUF_FIELD_OFFSET(PlayerEnterGameNodeRequest, _impl_.session_id_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUInt64)},
    // uint32 centre_node_id = 3;
    {PROTOBUF_FIELD_OFFSET(PlayerEnterGameNodeRequest, _impl_.centre_node_id_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUInt32)},
  }},
  // no aux_entries
  {{
  }},
};

PROTOBUF_NOINLINE void PlayerEnterGameNodeRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:PlayerEnterGameNodeRequest)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&_impl_.player_id_, 0, static_cast<::size_t>(
      reinterpret_cast<char*>(&_impl_.centre_node_id_) -
      reinterpret_cast<char*>(&_impl_.player_id_)) + sizeof(_impl_.centre_node_id_));
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::uint8_t* PlayerEnterGameNodeRequest::_InternalSerialize(
            const MessageLite& base, ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) {
          const PlayerEnterGameNodeRequest& this_ = static_cast<const PlayerEnterGameNodeRequest&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::uint8_t* PlayerEnterGameNodeRequest::_InternalSerialize(
            ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) const {
          const PlayerEnterGameNodeRequest& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(serialize_to_array_start:PlayerEnterGameNodeRequest)
          ::uint32_t cached_has_bits = 0;
          (void)cached_has_bits;

          // uint64 player_id = 1;
          if (this_._internal_player_id() != 0) {
            target = stream->EnsureSpace(target);
            target = ::_pbi::WireFormatLite::WriteUInt64ToArray(
                1, this_._internal_player_id(), target);
          }

          // uint64 session_id = 2;
          if (this_._internal_session_id() != 0) {
            target = stream->EnsureSpace(target);
            target = ::_pbi::WireFormatLite::WriteUInt64ToArray(
                2, this_._internal_session_id(), target);
          }

          // uint32 centre_node_id = 3;
          if (this_._internal_centre_node_id() != 0) {
            target = stream->EnsureSpace(target);
            target = ::_pbi::WireFormatLite::WriteUInt32ToArray(
                3, this_._internal_centre_node_id(), target);
          }

          if (PROTOBUF_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
            target =
                ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
                    this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
          }
          // @@protoc_insertion_point(serialize_to_array_end:PlayerEnterGameNodeRequest)
          return target;
        }

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::size_t PlayerEnterGameNodeRequest::ByteSizeLong(const MessageLite& base) {
          const PlayerEnterGameNodeRequest& this_ = static_cast<const PlayerEnterGameNodeRequest&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::size_t PlayerEnterGameNodeRequest::ByteSizeLong() const {
          const PlayerEnterGameNodeRequest& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(message_byte_size_start:PlayerEnterGameNodeRequest)
          ::size_t total_size = 0;

          ::uint32_t cached_has_bits = 0;
          // Prevent compiler warnings about cached_has_bits being unused
          (void)cached_has_bits;

          ::_pbi::Prefetch5LinesFrom7Lines(&this_);
           {
            // uint64 player_id = 1;
            if (this_._internal_player_id() != 0) {
              total_size += ::_pbi::WireFormatLite::UInt64SizePlusOne(
                  this_._internal_player_id());
            }
            // uint64 session_id = 2;
            if (this_._internal_session_id() != 0) {
              total_size += ::_pbi::WireFormatLite::UInt64SizePlusOne(
                  this_._internal_session_id());
            }
            // uint32 centre_node_id = 3;
            if (this_._internal_centre_node_id() != 0) {
              total_size += ::_pbi::WireFormatLite::UInt32SizePlusOne(
                  this_._internal_centre_node_id());
            }
          }
          return this_.MaybeComputeUnknownFieldsSize(total_size,
                                                     &this_._impl_._cached_size_);
        }

void PlayerEnterGameNodeRequest::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<PlayerEnterGameNodeRequest*>(&to_msg);
  auto& from = static_cast<const PlayerEnterGameNodeRequest&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:PlayerEnterGameNodeRequest)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_player_id() != 0) {
    _this->_impl_.player_id_ = from._impl_.player_id_;
  }
  if (from._internal_session_id() != 0) {
    _this->_impl_.session_id_ = from._impl_.session_id_;
  }
  if (from._internal_centre_node_id() != 0) {
    _this->_impl_.centre_node_id_ = from._impl_.centre_node_id_;
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void PlayerEnterGameNodeRequest::CopyFrom(const PlayerEnterGameNodeRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:PlayerEnterGameNodeRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void PlayerEnterGameNodeRequest::InternalSwap(PlayerEnterGameNodeRequest* PROTOBUF_RESTRICT other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(PlayerEnterGameNodeRequest, _impl_.centre_node_id_)
      + sizeof(PlayerEnterGameNodeRequest::_impl_.centre_node_id_)
      - PROTOBUF_FIELD_OFFSET(PlayerEnterGameNodeRequest, _impl_.player_id_)>(
          reinterpret_cast<char*>(&_impl_.player_id_),
          reinterpret_cast<char*>(&other->_impl_.player_id_));
}

::google::protobuf::Metadata PlayerEnterGameNodeRequest::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class ClientSendMessageToPlayerRequest::_Internal {
 public:
  using HasBits =
      decltype(std::declval<ClientSendMessageToPlayerRequest>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
      8 * PROTOBUF_FIELD_OFFSET(ClientSendMessageToPlayerRequest, _impl_._has_bits_);
};

void ClientSendMessageToPlayerRequest::clear_message_content() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.message_content_ != nullptr) _impl_.message_content_->Clear();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
ClientSendMessageToPlayerRequest::ClientSendMessageToPlayerRequest(::google::protobuf::Arena* arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:ClientSendMessageToPlayerRequest)
}
inline PROTOBUF_NDEBUG_INLINE ClientSendMessageToPlayerRequest::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from, const ::ClientSendMessageToPlayerRequest& from_msg)
      : _has_bits_{from._has_bits_},
        _cached_size_{0} {}

ClientSendMessageToPlayerRequest::ClientSendMessageToPlayerRequest(
    ::google::protobuf::Arena* arena,
    const ClientSendMessageToPlayerRequest& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  ClientSendMessageToPlayerRequest* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);
  ::uint32_t cached_has_bits = _impl_._has_bits_[0];
  _impl_.message_content_ = (cached_has_bits & 0x00000001u) ? ::google::protobuf::Message::CopyConstruct<::MessageContent>(
                              arena, *from._impl_.message_content_)
                        : nullptr;
  _impl_.session_id_ = from._impl_.session_id_;

  // @@protoc_insertion_point(copy_constructor:ClientSendMessageToPlayerRequest)
}
inline PROTOBUF_NDEBUG_INLINE ClientSendMessageToPlayerRequest::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0} {}

inline void ClientSendMessageToPlayerRequest::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, message_content_),
           0,
           offsetof(Impl_, session_id_) -
               offsetof(Impl_, message_content_) +
               sizeof(Impl_::session_id_));
}
ClientSendMessageToPlayerRequest::~ClientSendMessageToPlayerRequest() {
  // @@protoc_insertion_point(destructor:ClientSendMessageToPlayerRequest)
  SharedDtor(*this);
}
inline void ClientSendMessageToPlayerRequest::SharedDtor(MessageLite& self) {
  ClientSendMessageToPlayerRequest& this_ = static_cast<ClientSendMessageToPlayerRequest&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  delete this_._impl_.message_content_;
  this_._impl_.~Impl_();
}

inline void* ClientSendMessageToPlayerRequest::PlacementNew_(const void*, void* mem,
                                        ::google::protobuf::Arena* arena) {
  return ::new (mem) ClientSendMessageToPlayerRequest(arena);
}
constexpr auto ClientSendMessageToPlayerRequest::InternalNewImpl_() {
  return ::google::protobuf::internal::MessageCreator::ZeroInit(sizeof(ClientSendMessageToPlayerRequest),
                                            alignof(ClientSendMessageToPlayerRequest));
}
PROTOBUF_CONSTINIT
PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::google::protobuf::internal::ClassDataFull ClientSendMessageToPlayerRequest::_class_data_ = {
    ::google::protobuf::internal::ClassData{
        &_ClientSendMessageToPlayerRequest_default_instance_._instance,
        &_table_.header,
        nullptr,  // OnDemandRegisterArenaDtor
        nullptr,  // IsInitialized
        &ClientSendMessageToPlayerRequest::MergeImpl,
        ::google::protobuf::Message::GetNewImpl<ClientSendMessageToPlayerRequest>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
        &ClientSendMessageToPlayerRequest::SharedDtor,
        ::google::protobuf::Message::GetClearImpl<ClientSendMessageToPlayerRequest>(), &ClientSendMessageToPlayerRequest::ByteSizeLong,
            &ClientSendMessageToPlayerRequest::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
        PROTOBUF_FIELD_OFFSET(ClientSendMessageToPlayerRequest, _impl_._cached_size_),
        false,
    },
    &ClientSendMessageToPlayerRequest::kDescriptorMethods,
    &descriptor_table_proto_2fcommon_2fgame_5fservice_2eproto,
    nullptr,  // tracker
};
const ::google::protobuf::internal::ClassData* ClientSendMessageToPlayerRequest::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_class_data_.tc_table);
  return _class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<1, 2, 1, 0, 2> ClientSendMessageToPlayerRequest::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(ClientSendMessageToPlayerRequest, _impl_._has_bits_),
    0, // no _extensions_
    2, 8,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967292,  // skipmap
    offsetof(decltype(_table_), field_entries),
    2,  // num_field_entries
    1,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    _class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::ClientSendMessageToPlayerRequest>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // uint64 session_id = 2;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint64_t, offsetof(ClientSendMessageToPlayerRequest, _impl_.session_id_), 63>(),
     {16, 63, 0, PROTOBUF_FIELD_OFFSET(ClientSendMessageToPlayerRequest, _impl_.session_id_)}},
    // .MessageContent message_content = 1;
    {::_pbi::TcParser::FastMtS1,
     {10, 0, 0, PROTOBUF_FIELD_OFFSET(ClientSendMessageToPlayerRequest, _impl_.message_content_)}},
  }}, {{
    65535, 65535
  }}, {{
    // .MessageContent message_content = 1;
    {PROTOBUF_FIELD_OFFSET(ClientSendMessageToPlayerRequest, _impl_.message_content_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
    // uint64 session_id = 2;
    {PROTOBUF_FIELD_OFFSET(ClientSendMessageToPlayerRequest, _impl_.session_id_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUInt64)},
  }}, {{
    {::_pbi::TcParser::GetTable<::MessageContent>()},
  }}, {{
  }},
};

PROTOBUF_NOINLINE void ClientSendMessageToPlayerRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:ClientSendMessageToPlayerRequest)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    ABSL_DCHECK(_impl_.message_content_ != nullptr);
    _impl_.message_content_->Clear();
  }
  _impl_.session_id_ = ::uint64_t{0u};
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::uint8_t* ClientSendMessageToPlayerRequest::_InternalSerialize(
            const MessageLite& base, ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) {
          const ClientSendMessageToPlayerRequest& this_ = static_cast<const ClientSendMessageToPlayerRequest&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::uint8_t* ClientSendMessageToPlayerRequest::_InternalSerialize(
            ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) const {
          const ClientSendMessageToPlayerRequest& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(serialize_to_array_start:ClientSendMessageToPlayerRequest)
          ::uint32_t cached_has_bits = 0;
          (void)cached_has_bits;

          cached_has_bits = this_._impl_._has_bits_[0];
          // .MessageContent message_content = 1;
          if (cached_has_bits & 0x00000001u) {
            target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
                1, *this_._impl_.message_content_, this_._impl_.message_content_->GetCachedSize(), target,
                stream);
          }

          // uint64 session_id = 2;
          if (this_._internal_session_id() != 0) {
            target = stream->EnsureSpace(target);
            target = ::_pbi::WireFormatLite::WriteUInt64ToArray(
                2, this_._internal_session_id(), target);
          }

          if (PROTOBUF_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
            target =
                ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
                    this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
          }
          // @@protoc_insertion_point(serialize_to_array_end:ClientSendMessageToPlayerRequest)
          return target;
        }

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::size_t ClientSendMessageToPlayerRequest::ByteSizeLong(const MessageLite& base) {
          const ClientSendMessageToPlayerRequest& this_ = static_cast<const ClientSendMessageToPlayerRequest&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::size_t ClientSendMessageToPlayerRequest::ByteSizeLong() const {
          const ClientSendMessageToPlayerRequest& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(message_byte_size_start:ClientSendMessageToPlayerRequest)
          ::size_t total_size = 0;

          ::uint32_t cached_has_bits = 0;
          // Prevent compiler warnings about cached_has_bits being unused
          (void)cached_has_bits;

          ::_pbi::Prefetch5LinesFrom7Lines(&this_);
           {
            // .MessageContent message_content = 1;
            cached_has_bits = this_._impl_._has_bits_[0];
            if (cached_has_bits & 0x00000001u) {
              total_size += 1 +
                            ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.message_content_);
            }
          }
           {
            // uint64 session_id = 2;
            if (this_._internal_session_id() != 0) {
              total_size += ::_pbi::WireFormatLite::UInt64SizePlusOne(
                  this_._internal_session_id());
            }
          }
          return this_.MaybeComputeUnknownFieldsSize(total_size,
                                                     &this_._impl_._cached_size_);
        }

void ClientSendMessageToPlayerRequest::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<ClientSendMessageToPlayerRequest*>(&to_msg);
  auto& from = static_cast<const ClientSendMessageToPlayerRequest&>(from_msg);
  ::google::protobuf::Arena* arena = _this->GetArena();
  // @@protoc_insertion_point(class_specific_merge_from_start:ClientSendMessageToPlayerRequest)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    ABSL_DCHECK(from._impl_.message_content_ != nullptr);
    if (_this->_impl_.message_content_ == nullptr) {
      _this->_impl_.message_content_ =
          ::google::protobuf::Message::CopyConstruct<::MessageContent>(arena, *from._impl_.message_content_);
    } else {
      _this->_impl_.message_content_->MergeFrom(*from._impl_.message_content_);
    }
  }
  if (from._internal_session_id() != 0) {
    _this->_impl_.session_id_ = from._impl_.session_id_;
  }
  _this->_impl_._has_bits_[0] |= cached_has_bits;
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void ClientSendMessageToPlayerRequest::CopyFrom(const ClientSendMessageToPlayerRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:ClientSendMessageToPlayerRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void ClientSendMessageToPlayerRequest::InternalSwap(ClientSendMessageToPlayerRequest* PROTOBUF_RESTRICT other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(ClientSendMessageToPlayerRequest, _impl_.session_id_)
      + sizeof(ClientSendMessageToPlayerRequest::_impl_.session_id_)
      - PROTOBUF_FIELD_OFFSET(ClientSendMessageToPlayerRequest, _impl_.message_content_)>(
          reinterpret_cast<char*>(&_impl_.message_content_),
          reinterpret_cast<char*>(&other->_impl_.message_content_));
}

::google::protobuf::Metadata ClientSendMessageToPlayerRequest::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class ClientSendMessageToPlayerResponse::_Internal {
 public:
  using HasBits =
      decltype(std::declval<ClientSendMessageToPlayerResponse>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
      8 * PROTOBUF_FIELD_OFFSET(ClientSendMessageToPlayerResponse, _impl_._has_bits_);
};

void ClientSendMessageToPlayerResponse::clear_message_content() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.message_content_ != nullptr) _impl_.message_content_->Clear();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
ClientSendMessageToPlayerResponse::ClientSendMessageToPlayerResponse(::google::protobuf::Arena* arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:ClientSendMessageToPlayerResponse)
}
inline PROTOBUF_NDEBUG_INLINE ClientSendMessageToPlayerResponse::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from, const ::ClientSendMessageToPlayerResponse& from_msg)
      : _has_bits_{from._has_bits_},
        _cached_size_{0} {}

ClientSendMessageToPlayerResponse::ClientSendMessageToPlayerResponse(
    ::google::protobuf::Arena* arena,
    const ClientSendMessageToPlayerResponse& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  ClientSendMessageToPlayerResponse* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);
  ::uint32_t cached_has_bits = _impl_._has_bits_[0];
  _impl_.message_content_ = (cached_has_bits & 0x00000001u) ? ::google::protobuf::Message::CopyConstruct<::MessageContent>(
                              arena, *from._impl_.message_content_)
                        : nullptr;
  _impl_.session_id_ = from._impl_.session_id_;

  // @@protoc_insertion_point(copy_constructor:ClientSendMessageToPlayerResponse)
}
inline PROTOBUF_NDEBUG_INLINE ClientSendMessageToPlayerResponse::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0} {}

inline void ClientSendMessageToPlayerResponse::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, message_content_),
           0,
           offsetof(Impl_, session_id_) -
               offsetof(Impl_, message_content_) +
               sizeof(Impl_::session_id_));
}
ClientSendMessageToPlayerResponse::~ClientSendMessageToPlayerResponse() {
  // @@protoc_insertion_point(destructor:ClientSendMessageToPlayerResponse)
  SharedDtor(*this);
}
inline void ClientSendMessageToPlayerResponse::SharedDtor(MessageLite& self) {
  ClientSendMessageToPlayerResponse& this_ = static_cast<ClientSendMessageToPlayerResponse&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  delete this_._impl_.message_content_;
  this_._impl_.~Impl_();
}

inline void* ClientSendMessageToPlayerResponse::PlacementNew_(const void*, void* mem,
                                        ::google::protobuf::Arena* arena) {
  return ::new (mem) ClientSendMessageToPlayerResponse(arena);
}
constexpr auto ClientSendMessageToPlayerResponse::InternalNewImpl_() {
  return ::google::protobuf::internal::MessageCreator::ZeroInit(sizeof(ClientSendMessageToPlayerResponse),
                                            alignof(ClientSendMessageToPlayerResponse));
}
PROTOBUF_CONSTINIT
PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::google::protobuf::internal::ClassDataFull ClientSendMessageToPlayerResponse::_class_data_ = {
    ::google::protobuf::internal::ClassData{
        &_ClientSendMessageToPlayerResponse_default_instance_._instance,
        &_table_.header,
        nullptr,  // OnDemandRegisterArenaDtor
        nullptr,  // IsInitialized
        &ClientSendMessageToPlayerResponse::MergeImpl,
        ::google::protobuf::Message::GetNewImpl<ClientSendMessageToPlayerResponse>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
        &ClientSendMessageToPlayerResponse::SharedDtor,
        ::google::protobuf::Message::GetClearImpl<ClientSendMessageToPlayerResponse>(), &ClientSendMessageToPlayerResponse::ByteSizeLong,
            &ClientSendMessageToPlayerResponse::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
        PROTOBUF_FIELD_OFFSET(ClientSendMessageToPlayerResponse, _impl_._cached_size_),
        false,
    },
    &ClientSendMessageToPlayerResponse::kDescriptorMethods,
    &descriptor_table_proto_2fcommon_2fgame_5fservice_2eproto,
    nullptr,  // tracker
};
const ::google::protobuf::internal::ClassData* ClientSendMessageToPlayerResponse::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_class_data_.tc_table);
  return _class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<1, 2, 1, 0, 2> ClientSendMessageToPlayerResponse::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(ClientSendMessageToPlayerResponse, _impl_._has_bits_),
    0, // no _extensions_
    2, 8,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967292,  // skipmap
    offsetof(decltype(_table_), field_entries),
    2,  // num_field_entries
    1,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    _class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::ClientSendMessageToPlayerResponse>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // uint64 session_id = 2;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint64_t, offsetof(ClientSendMessageToPlayerResponse, _impl_.session_id_), 63>(),
     {16, 63, 0, PROTOBUF_FIELD_OFFSET(ClientSendMessageToPlayerResponse, _impl_.session_id_)}},
    // .MessageContent message_content = 1;
    {::_pbi::TcParser::FastMtS1,
     {10, 0, 0, PROTOBUF_FIELD_OFFSET(ClientSendMessageToPlayerResponse, _impl_.message_content_)}},
  }}, {{
    65535, 65535
  }}, {{
    // .MessageContent message_content = 1;
    {PROTOBUF_FIELD_OFFSET(ClientSendMessageToPlayerResponse, _impl_.message_content_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
    // uint64 session_id = 2;
    {PROTOBUF_FIELD_OFFSET(ClientSendMessageToPlayerResponse, _impl_.session_id_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUInt64)},
  }}, {{
    {::_pbi::TcParser::GetTable<::MessageContent>()},
  }}, {{
  }},
};

PROTOBUF_NOINLINE void ClientSendMessageToPlayerResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:ClientSendMessageToPlayerResponse)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    ABSL_DCHECK(_impl_.message_content_ != nullptr);
    _impl_.message_content_->Clear();
  }
  _impl_.session_id_ = ::uint64_t{0u};
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::uint8_t* ClientSendMessageToPlayerResponse::_InternalSerialize(
            const MessageLite& base, ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) {
          const ClientSendMessageToPlayerResponse& this_ = static_cast<const ClientSendMessageToPlayerResponse&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::uint8_t* ClientSendMessageToPlayerResponse::_InternalSerialize(
            ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) const {
          const ClientSendMessageToPlayerResponse& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(serialize_to_array_start:ClientSendMessageToPlayerResponse)
          ::uint32_t cached_has_bits = 0;
          (void)cached_has_bits;

          cached_has_bits = this_._impl_._has_bits_[0];
          // .MessageContent message_content = 1;
          if (cached_has_bits & 0x00000001u) {
            target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
                1, *this_._impl_.message_content_, this_._impl_.message_content_->GetCachedSize(), target,
                stream);
          }

          // uint64 session_id = 2;
          if (this_._internal_session_id() != 0) {
            target = stream->EnsureSpace(target);
            target = ::_pbi::WireFormatLite::WriteUInt64ToArray(
                2, this_._internal_session_id(), target);
          }

          if (PROTOBUF_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
            target =
                ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
                    this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
          }
          // @@protoc_insertion_point(serialize_to_array_end:ClientSendMessageToPlayerResponse)
          return target;
        }

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::size_t ClientSendMessageToPlayerResponse::ByteSizeLong(const MessageLite& base) {
          const ClientSendMessageToPlayerResponse& this_ = static_cast<const ClientSendMessageToPlayerResponse&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::size_t ClientSendMessageToPlayerResponse::ByteSizeLong() const {
          const ClientSendMessageToPlayerResponse& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(message_byte_size_start:ClientSendMessageToPlayerResponse)
          ::size_t total_size = 0;

          ::uint32_t cached_has_bits = 0;
          // Prevent compiler warnings about cached_has_bits being unused
          (void)cached_has_bits;

          ::_pbi::Prefetch5LinesFrom7Lines(&this_);
           {
            // .MessageContent message_content = 1;
            cached_has_bits = this_._impl_._has_bits_[0];
            if (cached_has_bits & 0x00000001u) {
              total_size += 1 +
                            ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.message_content_);
            }
          }
           {
            // uint64 session_id = 2;
            if (this_._internal_session_id() != 0) {
              total_size += ::_pbi::WireFormatLite::UInt64SizePlusOne(
                  this_._internal_session_id());
            }
          }
          return this_.MaybeComputeUnknownFieldsSize(total_size,
                                                     &this_._impl_._cached_size_);
        }

void ClientSendMessageToPlayerResponse::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<ClientSendMessageToPlayerResponse*>(&to_msg);
  auto& from = static_cast<const ClientSendMessageToPlayerResponse&>(from_msg);
  ::google::protobuf::Arena* arena = _this->GetArena();
  // @@protoc_insertion_point(class_specific_merge_from_start:ClientSendMessageToPlayerResponse)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    ABSL_DCHECK(from._impl_.message_content_ != nullptr);
    if (_this->_impl_.message_content_ == nullptr) {
      _this->_impl_.message_content_ =
          ::google::protobuf::Message::CopyConstruct<::MessageContent>(arena, *from._impl_.message_content_);
    } else {
      _this->_impl_.message_content_->MergeFrom(*from._impl_.message_content_);
    }
  }
  if (from._internal_session_id() != 0) {
    _this->_impl_.session_id_ = from._impl_.session_id_;
  }
  _this->_impl_._has_bits_[0] |= cached_has_bits;
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void ClientSendMessageToPlayerResponse::CopyFrom(const ClientSendMessageToPlayerResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:ClientSendMessageToPlayerResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void ClientSendMessageToPlayerResponse::InternalSwap(ClientSendMessageToPlayerResponse* PROTOBUF_RESTRICT other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(ClientSendMessageToPlayerResponse, _impl_.session_id_)
      + sizeof(ClientSendMessageToPlayerResponse::_impl_.session_id_)
      - PROTOBUF_FIELD_OFFSET(ClientSendMessageToPlayerResponse, _impl_.message_content_)>(
          reinterpret_cast<char*>(&_impl_.message_content_),
          reinterpret_cast<char*>(&other->_impl_.message_content_));
}

::google::protobuf::Metadata ClientSendMessageToPlayerResponse::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class SessionDisconnectRequest::_Internal {
 public:
};

SessionDisconnectRequest::SessionDisconnectRequest(::google::protobuf::Arena* arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:SessionDisconnectRequest)
}
SessionDisconnectRequest::SessionDisconnectRequest(
    ::google::protobuf::Arena* arena, const SessionDisconnectRequest& from)
    : SessionDisconnectRequest(arena) {
  MergeFrom(from);
}
inline PROTOBUF_NDEBUG_INLINE SessionDisconnectRequest::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0} {}

inline void SessionDisconnectRequest::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  _impl_.player_id_ = {};
}
SessionDisconnectRequest::~SessionDisconnectRequest() {
  // @@protoc_insertion_point(destructor:SessionDisconnectRequest)
  SharedDtor(*this);
}
inline void SessionDisconnectRequest::SharedDtor(MessageLite& self) {
  SessionDisconnectRequest& this_ = static_cast<SessionDisconnectRequest&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  this_._impl_.~Impl_();
}

inline void* SessionDisconnectRequest::PlacementNew_(const void*, void* mem,
                                        ::google::protobuf::Arena* arena) {
  return ::new (mem) SessionDisconnectRequest(arena);
}
constexpr auto SessionDisconnectRequest::InternalNewImpl_() {
  return ::google::protobuf::internal::MessageCreator::ZeroInit(sizeof(SessionDisconnectRequest),
                                            alignof(SessionDisconnectRequest));
}
PROTOBUF_CONSTINIT
PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::google::protobuf::internal::ClassDataFull SessionDisconnectRequest::_class_data_ = {
    ::google::protobuf::internal::ClassData{
        &_SessionDisconnectRequest_default_instance_._instance,
        &_table_.header,
        nullptr,  // OnDemandRegisterArenaDtor
        nullptr,  // IsInitialized
        &SessionDisconnectRequest::MergeImpl,
        ::google::protobuf::Message::GetNewImpl<SessionDisconnectRequest>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
        &SessionDisconnectRequest::SharedDtor,
        ::google::protobuf::Message::GetClearImpl<SessionDisconnectRequest>(), &SessionDisconnectRequest::ByteSizeLong,
            &SessionDisconnectRequest::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
        PROTOBUF_FIELD_OFFSET(SessionDisconnectRequest, _impl_._cached_size_),
        false,
    },
    &SessionDisconnectRequest::kDescriptorMethods,
    &descriptor_table_proto_2fcommon_2fgame_5fservice_2eproto,
    nullptr,  // tracker
};
const ::google::protobuf::internal::ClassData* SessionDisconnectRequest::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_class_data_.tc_table);
  return _class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<0, 1, 0, 0, 2> SessionDisconnectRequest::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    1, 0,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967294,  // skipmap
    offsetof(decltype(_table_), field_entries),
    1,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    _class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::SessionDisconnectRequest>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // uint64 player_id = 1;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint64_t, offsetof(SessionDisconnectRequest, _impl_.player_id_), 63>(),
     {8, 63, 0, PROTOBUF_FIELD_OFFSET(SessionDisconnectRequest, _impl_.player_id_)}},
  }}, {{
    65535, 65535
  }}, {{
    // uint64 player_id = 1;
    {PROTOBUF_FIELD_OFFSET(SessionDisconnectRequest, _impl_.player_id_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUInt64)},
  }},
  // no aux_entries
  {{
  }},
};

PROTOBUF_NOINLINE void SessionDisconnectRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:SessionDisconnectRequest)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.player_id_ = ::uint64_t{0u};
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::uint8_t* SessionDisconnectRequest::_InternalSerialize(
            const MessageLite& base, ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) {
          const SessionDisconnectRequest& this_ = static_cast<const SessionDisconnectRequest&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::uint8_t* SessionDisconnectRequest::_InternalSerialize(
            ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) const {
          const SessionDisconnectRequest& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(serialize_to_array_start:SessionDisconnectRequest)
          ::uint32_t cached_has_bits = 0;
          (void)cached_has_bits;

          // uint64 player_id = 1;
          if (this_._internal_player_id() != 0) {
            target = stream->EnsureSpace(target);
            target = ::_pbi::WireFormatLite::WriteUInt64ToArray(
                1, this_._internal_player_id(), target);
          }

          if (PROTOBUF_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
            target =
                ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
                    this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
          }
          // @@protoc_insertion_point(serialize_to_array_end:SessionDisconnectRequest)
          return target;
        }

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::size_t SessionDisconnectRequest::ByteSizeLong(const MessageLite& base) {
          const SessionDisconnectRequest& this_ = static_cast<const SessionDisconnectRequest&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::size_t SessionDisconnectRequest::ByteSizeLong() const {
          const SessionDisconnectRequest& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(message_byte_size_start:SessionDisconnectRequest)
          ::size_t total_size = 0;

          ::uint32_t cached_has_bits = 0;
          // Prevent compiler warnings about cached_has_bits being unused
          (void)cached_has_bits;

           {
            // uint64 player_id = 1;
            if (this_._internal_player_id() != 0) {
              total_size += ::_pbi::WireFormatLite::UInt64SizePlusOne(
                  this_._internal_player_id());
            }
          }
          return this_.MaybeComputeUnknownFieldsSize(total_size,
                                                     &this_._impl_._cached_size_);
        }

void SessionDisconnectRequest::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<SessionDisconnectRequest*>(&to_msg);
  auto& from = static_cast<const SessionDisconnectRequest&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:SessionDisconnectRequest)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_player_id() != 0) {
    _this->_impl_.player_id_ = from._impl_.player_id_;
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void SessionDisconnectRequest::CopyFrom(const SessionDisconnectRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:SessionDisconnectRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void SessionDisconnectRequest::InternalSwap(SessionDisconnectRequest* PROTOBUF_RESTRICT other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
        swap(_impl_.player_id_, other->_impl_.player_id_);
}

::google::protobuf::Metadata SessionDisconnectRequest::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class GameNodeConnectRequest::_Internal {
 public:
  using HasBits =
      decltype(std::declval<GameNodeConnectRequest>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
      8 * PROTOBUF_FIELD_OFFSET(GameNodeConnectRequest, _impl_._has_bits_);
};

void GameNodeConnectRequest::clear_rpc_client() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.rpc_client_ != nullptr) _impl_.rpc_client_->Clear();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
GameNodeConnectRequest::GameNodeConnectRequest(::google::protobuf::Arena* arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:GameNodeConnectRequest)
}
inline PROTOBUF_NDEBUG_INLINE GameNodeConnectRequest::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from, const ::GameNodeConnectRequest& from_msg)
      : _has_bits_{from._has_bits_},
        _cached_size_{0} {}

GameNodeConnectRequest::GameNodeConnectRequest(
    ::google::protobuf::Arena* arena,
    const GameNodeConnectRequest& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  GameNodeConnectRequest* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);
  ::uint32_t cached_has_bits = _impl_._has_bits_[0];
  _impl_.rpc_client_ = (cached_has_bits & 0x00000001u) ? ::google::protobuf::Message::CopyConstruct<::NetworkAddress>(
                              arena, *from._impl_.rpc_client_)
                        : nullptr;
  _impl_.gate_node_id_ = from._impl_.gate_node_id_;

  // @@protoc_insertion_point(copy_constructor:GameNodeConnectRequest)
}
inline PROTOBUF_NDEBUG_INLINE GameNodeConnectRequest::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0} {}

inline void GameNodeConnectRequest::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, rpc_client_),
           0,
           offsetof(Impl_, gate_node_id_) -
               offsetof(Impl_, rpc_client_) +
               sizeof(Impl_::gate_node_id_));
}
GameNodeConnectRequest::~GameNodeConnectRequest() {
  // @@protoc_insertion_point(destructor:GameNodeConnectRequest)
  SharedDtor(*this);
}
inline void GameNodeConnectRequest::SharedDtor(MessageLite& self) {
  GameNodeConnectRequest& this_ = static_cast<GameNodeConnectRequest&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  delete this_._impl_.rpc_client_;
  this_._impl_.~Impl_();
}

inline void* GameNodeConnectRequest::PlacementNew_(const void*, void* mem,
                                        ::google::protobuf::Arena* arena) {
  return ::new (mem) GameNodeConnectRequest(arena);
}
constexpr auto GameNodeConnectRequest::InternalNewImpl_() {
  return ::google::protobuf::internal::MessageCreator::ZeroInit(sizeof(GameNodeConnectRequest),
                                            alignof(GameNodeConnectRequest));
}
PROTOBUF_CONSTINIT
PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::google::protobuf::internal::ClassDataFull GameNodeConnectRequest::_class_data_ = {
    ::google::protobuf::internal::ClassData{
        &_GameNodeConnectRequest_default_instance_._instance,
        &_table_.header,
        nullptr,  // OnDemandRegisterArenaDtor
        nullptr,  // IsInitialized
        &GameNodeConnectRequest::MergeImpl,
        ::google::protobuf::Message::GetNewImpl<GameNodeConnectRequest>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
        &GameNodeConnectRequest::SharedDtor,
        ::google::protobuf::Message::GetClearImpl<GameNodeConnectRequest>(), &GameNodeConnectRequest::ByteSizeLong,
            &GameNodeConnectRequest::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
        PROTOBUF_FIELD_OFFSET(GameNodeConnectRequest, _impl_._cached_size_),
        false,
    },
    &GameNodeConnectRequest::kDescriptorMethods,
    &descriptor_table_proto_2fcommon_2fgame_5fservice_2eproto,
    nullptr,  // tracker
};
const ::google::protobuf::internal::ClassData* GameNodeConnectRequest::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_class_data_.tc_table);
  return _class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<1, 2, 1, 0, 2> GameNodeConnectRequest::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(GameNodeConnectRequest, _impl_._has_bits_),
    0, // no _extensions_
    2, 8,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967292,  // skipmap
    offsetof(decltype(_table_), field_entries),
    2,  // num_field_entries
    1,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    _class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::GameNodeConnectRequest>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // uint32 gate_node_id = 2;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(GameNodeConnectRequest, _impl_.gate_node_id_), 63>(),
     {16, 63, 0, PROTOBUF_FIELD_OFFSET(GameNodeConnectRequest, _impl_.gate_node_id_)}},
    // .NetworkAddress rpc_client = 1;
    {::_pbi::TcParser::FastMtS1,
     {10, 0, 0, PROTOBUF_FIELD_OFFSET(GameNodeConnectRequest, _impl_.rpc_client_)}},
  }}, {{
    65535, 65535
  }}, {{
    // .NetworkAddress rpc_client = 1;
    {PROTOBUF_FIELD_OFFSET(GameNodeConnectRequest, _impl_.rpc_client_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
    // uint32 gate_node_id = 2;
    {PROTOBUF_FIELD_OFFSET(GameNodeConnectRequest, _impl_.gate_node_id_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUInt32)},
  }}, {{
    {::_pbi::TcParser::GetTable<::NetworkAddress>()},
  }}, {{
  }},
};

PROTOBUF_NOINLINE void GameNodeConnectRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:GameNodeConnectRequest)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    ABSL_DCHECK(_impl_.rpc_client_ != nullptr);
    _impl_.rpc_client_->Clear();
  }
  _impl_.gate_node_id_ = 0u;
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::uint8_t* GameNodeConnectRequest::_InternalSerialize(
            const MessageLite& base, ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) {
          const GameNodeConnectRequest& this_ = static_cast<const GameNodeConnectRequest&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::uint8_t* GameNodeConnectRequest::_InternalSerialize(
            ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) const {
          const GameNodeConnectRequest& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(serialize_to_array_start:GameNodeConnectRequest)
          ::uint32_t cached_has_bits = 0;
          (void)cached_has_bits;

          cached_has_bits = this_._impl_._has_bits_[0];
          // .NetworkAddress rpc_client = 1;
          if (cached_has_bits & 0x00000001u) {
            target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
                1, *this_._impl_.rpc_client_, this_._impl_.rpc_client_->GetCachedSize(), target,
                stream);
          }

          // uint32 gate_node_id = 2;
          if (this_._internal_gate_node_id() != 0) {
            target = stream->EnsureSpace(target);
            target = ::_pbi::WireFormatLite::WriteUInt32ToArray(
                2, this_._internal_gate_node_id(), target);
          }

          if (PROTOBUF_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
            target =
                ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
                    this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
          }
          // @@protoc_insertion_point(serialize_to_array_end:GameNodeConnectRequest)
          return target;
        }

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::size_t GameNodeConnectRequest::ByteSizeLong(const MessageLite& base) {
          const GameNodeConnectRequest& this_ = static_cast<const GameNodeConnectRequest&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::size_t GameNodeConnectRequest::ByteSizeLong() const {
          const GameNodeConnectRequest& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(message_byte_size_start:GameNodeConnectRequest)
          ::size_t total_size = 0;

          ::uint32_t cached_has_bits = 0;
          // Prevent compiler warnings about cached_has_bits being unused
          (void)cached_has_bits;

          ::_pbi::Prefetch5LinesFrom7Lines(&this_);
           {
            // .NetworkAddress rpc_client = 1;
            cached_has_bits = this_._impl_._has_bits_[0];
            if (cached_has_bits & 0x00000001u) {
              total_size += 1 +
                            ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.rpc_client_);
            }
          }
           {
            // uint32 gate_node_id = 2;
            if (this_._internal_gate_node_id() != 0) {
              total_size += ::_pbi::WireFormatLite::UInt32SizePlusOne(
                  this_._internal_gate_node_id());
            }
          }
          return this_.MaybeComputeUnknownFieldsSize(total_size,
                                                     &this_._impl_._cached_size_);
        }

void GameNodeConnectRequest::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<GameNodeConnectRequest*>(&to_msg);
  auto& from = static_cast<const GameNodeConnectRequest&>(from_msg);
  ::google::protobuf::Arena* arena = _this->GetArena();
  // @@protoc_insertion_point(class_specific_merge_from_start:GameNodeConnectRequest)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    ABSL_DCHECK(from._impl_.rpc_client_ != nullptr);
    if (_this->_impl_.rpc_client_ == nullptr) {
      _this->_impl_.rpc_client_ =
          ::google::protobuf::Message::CopyConstruct<::NetworkAddress>(arena, *from._impl_.rpc_client_);
    } else {
      _this->_impl_.rpc_client_->MergeFrom(*from._impl_.rpc_client_);
    }
  }
  if (from._internal_gate_node_id() != 0) {
    _this->_impl_.gate_node_id_ = from._impl_.gate_node_id_;
  }
  _this->_impl_._has_bits_[0] |= cached_has_bits;
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void GameNodeConnectRequest::CopyFrom(const GameNodeConnectRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:GameNodeConnectRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void GameNodeConnectRequest::InternalSwap(GameNodeConnectRequest* PROTOBUF_RESTRICT other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(GameNodeConnectRequest, _impl_.gate_node_id_)
      + sizeof(GameNodeConnectRequest::_impl_.gate_node_id_)
      - PROTOBUF_FIELD_OFFSET(GameNodeConnectRequest, _impl_.rpc_client_)>(
          reinterpret_cast<char*>(&_impl_.rpc_client_),
          reinterpret_cast<char*>(&other->_impl_.rpc_client_));
}

::google::protobuf::Metadata GameNodeConnectRequest::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class RegisterPlayerSessionRequest::_Internal {
 public:
};

RegisterPlayerSessionRequest::RegisterPlayerSessionRequest(::google::protobuf::Arena* arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:RegisterPlayerSessionRequest)
}
RegisterPlayerSessionRequest::RegisterPlayerSessionRequest(
    ::google::protobuf::Arena* arena, const RegisterPlayerSessionRequest& from)
    : RegisterPlayerSessionRequest(arena) {
  MergeFrom(from);
}
inline PROTOBUF_NDEBUG_INLINE RegisterPlayerSessionRequest::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0} {}

inline void RegisterPlayerSessionRequest::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, session_id_),
           0,
           offsetof(Impl_, player_id_) -
               offsetof(Impl_, session_id_) +
               sizeof(Impl_::player_id_));
}
RegisterPlayerSessionRequest::~RegisterPlayerSessionRequest() {
  // @@protoc_insertion_point(destructor:RegisterPlayerSessionRequest)
  SharedDtor(*this);
}
inline void RegisterPlayerSessionRequest::SharedDtor(MessageLite& self) {
  RegisterPlayerSessionRequest& this_ = static_cast<RegisterPlayerSessionRequest&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  this_._impl_.~Impl_();
}

inline void* RegisterPlayerSessionRequest::PlacementNew_(const void*, void* mem,
                                        ::google::protobuf::Arena* arena) {
  return ::new (mem) RegisterPlayerSessionRequest(arena);
}
constexpr auto RegisterPlayerSessionRequest::InternalNewImpl_() {
  return ::google::protobuf::internal::MessageCreator::ZeroInit(sizeof(RegisterPlayerSessionRequest),
                                            alignof(RegisterPlayerSessionRequest));
}
PROTOBUF_CONSTINIT
PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::google::protobuf::internal::ClassDataFull RegisterPlayerSessionRequest::_class_data_ = {
    ::google::protobuf::internal::ClassData{
        &_RegisterPlayerSessionRequest_default_instance_._instance,
        &_table_.header,
        nullptr,  // OnDemandRegisterArenaDtor
        nullptr,  // IsInitialized
        &RegisterPlayerSessionRequest::MergeImpl,
        ::google::protobuf::Message::GetNewImpl<RegisterPlayerSessionRequest>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
        &RegisterPlayerSessionRequest::SharedDtor,
        ::google::protobuf::Message::GetClearImpl<RegisterPlayerSessionRequest>(), &RegisterPlayerSessionRequest::ByteSizeLong,
            &RegisterPlayerSessionRequest::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
        PROTOBUF_FIELD_OFFSET(RegisterPlayerSessionRequest, _impl_._cached_size_),
        false,
    },
    &RegisterPlayerSessionRequest::kDescriptorMethods,
    &descriptor_table_proto_2fcommon_2fgame_5fservice_2eproto,
    nullptr,  // tracker
};
const ::google::protobuf::internal::ClassData* RegisterPlayerSessionRequest::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_class_data_.tc_table);
  return _class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<1, 2, 0, 0, 2> RegisterPlayerSessionRequest::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    2, 8,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967292,  // skipmap
    offsetof(decltype(_table_), field_entries),
    2,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    _class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::RegisterPlayerSessionRequest>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // uint64 player_id = 2;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint64_t, offsetof(RegisterPlayerSessionRequest, _impl_.player_id_), 63>(),
     {16, 63, 0, PROTOBUF_FIELD_OFFSET(RegisterPlayerSessionRequest, _impl_.player_id_)}},
    // uint64 session_id = 1;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint64_t, offsetof(RegisterPlayerSessionRequest, _impl_.session_id_), 63>(),
     {8, 63, 0, PROTOBUF_FIELD_OFFSET(RegisterPlayerSessionRequest, _impl_.session_id_)}},
  }}, {{
    65535, 65535
  }}, {{
    // uint64 session_id = 1;
    {PROTOBUF_FIELD_OFFSET(RegisterPlayerSessionRequest, _impl_.session_id_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUInt64)},
    // uint64 player_id = 2;
    {PROTOBUF_FIELD_OFFSET(RegisterPlayerSessionRequest, _impl_.player_id_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUInt64)},
  }},
  // no aux_entries
  {{
  }},
};

PROTOBUF_NOINLINE void RegisterPlayerSessionRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:RegisterPlayerSessionRequest)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&_impl_.session_id_, 0, static_cast<::size_t>(
      reinterpret_cast<char*>(&_impl_.player_id_) -
      reinterpret_cast<char*>(&_impl_.session_id_)) + sizeof(_impl_.player_id_));
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::uint8_t* RegisterPlayerSessionRequest::_InternalSerialize(
            const MessageLite& base, ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) {
          const RegisterPlayerSessionRequest& this_ = static_cast<const RegisterPlayerSessionRequest&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::uint8_t* RegisterPlayerSessionRequest::_InternalSerialize(
            ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) const {
          const RegisterPlayerSessionRequest& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(serialize_to_array_start:RegisterPlayerSessionRequest)
          ::uint32_t cached_has_bits = 0;
          (void)cached_has_bits;

          // uint64 session_id = 1;
          if (this_._internal_session_id() != 0) {
            target = stream->EnsureSpace(target);
            target = ::_pbi::WireFormatLite::WriteUInt64ToArray(
                1, this_._internal_session_id(), target);
          }

          // uint64 player_id = 2;
          if (this_._internal_player_id() != 0) {
            target = stream->EnsureSpace(target);
            target = ::_pbi::WireFormatLite::WriteUInt64ToArray(
                2, this_._internal_player_id(), target);
          }

          if (PROTOBUF_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
            target =
                ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
                    this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
          }
          // @@protoc_insertion_point(serialize_to_array_end:RegisterPlayerSessionRequest)
          return target;
        }

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::size_t RegisterPlayerSessionRequest::ByteSizeLong(const MessageLite& base) {
          const RegisterPlayerSessionRequest& this_ = static_cast<const RegisterPlayerSessionRequest&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::size_t RegisterPlayerSessionRequest::ByteSizeLong() const {
          const RegisterPlayerSessionRequest& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(message_byte_size_start:RegisterPlayerSessionRequest)
          ::size_t total_size = 0;

          ::uint32_t cached_has_bits = 0;
          // Prevent compiler warnings about cached_has_bits being unused
          (void)cached_has_bits;

          ::_pbi::Prefetch5LinesFrom7Lines(&this_);
           {
            // uint64 session_id = 1;
            if (this_._internal_session_id() != 0) {
              total_size += ::_pbi::WireFormatLite::UInt64SizePlusOne(
                  this_._internal_session_id());
            }
            // uint64 player_id = 2;
            if (this_._internal_player_id() != 0) {
              total_size += ::_pbi::WireFormatLite::UInt64SizePlusOne(
                  this_._internal_player_id());
            }
          }
          return this_.MaybeComputeUnknownFieldsSize(total_size,
                                                     &this_._impl_._cached_size_);
        }

void RegisterPlayerSessionRequest::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<RegisterPlayerSessionRequest*>(&to_msg);
  auto& from = static_cast<const RegisterPlayerSessionRequest&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:RegisterPlayerSessionRequest)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_session_id() != 0) {
    _this->_impl_.session_id_ = from._impl_.session_id_;
  }
  if (from._internal_player_id() != 0) {
    _this->_impl_.player_id_ = from._impl_.player_id_;
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void RegisterPlayerSessionRequest::CopyFrom(const RegisterPlayerSessionRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:RegisterPlayerSessionRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void RegisterPlayerSessionRequest::InternalSwap(RegisterPlayerSessionRequest* PROTOBUF_RESTRICT other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(RegisterPlayerSessionRequest, _impl_.player_id_)
      + sizeof(RegisterPlayerSessionRequest::_impl_.player_id_)
      - PROTOBUF_FIELD_OFFSET(RegisterPlayerSessionRequest, _impl_.session_id_)>(
          reinterpret_cast<char*>(&_impl_.session_id_),
          reinterpret_cast<char*>(&other->_impl_.session_id_));
}

::google::protobuf::Metadata RegisterPlayerSessionRequest::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class Centre2GsEnterSceneRequest::_Internal {
 public:
};

Centre2GsEnterSceneRequest::Centre2GsEnterSceneRequest(::google::protobuf::Arena* arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:Centre2GsEnterSceneRequest)
}
Centre2GsEnterSceneRequest::Centre2GsEnterSceneRequest(
    ::google::protobuf::Arena* arena, const Centre2GsEnterSceneRequest& from)
    : Centre2GsEnterSceneRequest(arena) {
  MergeFrom(from);
}
inline PROTOBUF_NDEBUG_INLINE Centre2GsEnterSceneRequest::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0} {}

inline void Centre2GsEnterSceneRequest::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, player_id_),
           0,
           offsetof(Impl_, scene_id_) -
               offsetof(Impl_, player_id_) +
               sizeof(Impl_::scene_id_));
}
Centre2GsEnterSceneRequest::~Centre2GsEnterSceneRequest() {
  // @@protoc_insertion_point(destructor:Centre2GsEnterSceneRequest)
  SharedDtor(*this);
}
inline void Centre2GsEnterSceneRequest::SharedDtor(MessageLite& self) {
  Centre2GsEnterSceneRequest& this_ = static_cast<Centre2GsEnterSceneRequest&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  this_._impl_.~Impl_();
}

inline void* Centre2GsEnterSceneRequest::PlacementNew_(const void*, void* mem,
                                        ::google::protobuf::Arena* arena) {
  return ::new (mem) Centre2GsEnterSceneRequest(arena);
}
constexpr auto Centre2GsEnterSceneRequest::InternalNewImpl_() {
  return ::google::protobuf::internal::MessageCreator::ZeroInit(sizeof(Centre2GsEnterSceneRequest),
                                            alignof(Centre2GsEnterSceneRequest));
}
PROTOBUF_CONSTINIT
PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::google::protobuf::internal::ClassDataFull Centre2GsEnterSceneRequest::_class_data_ = {
    ::google::protobuf::internal::ClassData{
        &_Centre2GsEnterSceneRequest_default_instance_._instance,
        &_table_.header,
        nullptr,  // OnDemandRegisterArenaDtor
        nullptr,  // IsInitialized
        &Centre2GsEnterSceneRequest::MergeImpl,
        ::google::protobuf::Message::GetNewImpl<Centre2GsEnterSceneRequest>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
        &Centre2GsEnterSceneRequest::SharedDtor,
        ::google::protobuf::Message::GetClearImpl<Centre2GsEnterSceneRequest>(), &Centre2GsEnterSceneRequest::ByteSizeLong,
            &Centre2GsEnterSceneRequest::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
        PROTOBUF_FIELD_OFFSET(Centre2GsEnterSceneRequest, _impl_._cached_size_),
        false,
    },
    &Centre2GsEnterSceneRequest::kDescriptorMethods,
    &descriptor_table_proto_2fcommon_2fgame_5fservice_2eproto,
    nullptr,  // tracker
};
const ::google::protobuf::internal::ClassData* Centre2GsEnterSceneRequest::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_class_data_.tc_table);
  return _class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<1, 2, 0, 0, 2> Centre2GsEnterSceneRequest::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    2, 8,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967292,  // skipmap
    offsetof(decltype(_table_), field_entries),
    2,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    _class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::Centre2GsEnterSceneRequest>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // uint64 scene_id = 2;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint64_t, offsetof(Centre2GsEnterSceneRequest, _impl_.scene_id_), 63>(),
     {16, 63, 0, PROTOBUF_FIELD_OFFSET(Centre2GsEnterSceneRequest, _impl_.scene_id_)}},
    // uint64 player_id = 1;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint64_t, offsetof(Centre2GsEnterSceneRequest, _impl_.player_id_), 63>(),
     {8, 63, 0, PROTOBUF_FIELD_OFFSET(Centre2GsEnterSceneRequest, _impl_.player_id_)}},
  }}, {{
    65535, 65535
  }}, {{
    // uint64 player_id = 1;
    {PROTOBUF_FIELD_OFFSET(Centre2GsEnterSceneRequest, _impl_.player_id_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUInt64)},
    // uint64 scene_id = 2;
    {PROTOBUF_FIELD_OFFSET(Centre2GsEnterSceneRequest, _impl_.scene_id_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUInt64)},
  }},
  // no aux_entries
  {{
  }},
};

PROTOBUF_NOINLINE void Centre2GsEnterSceneRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:Centre2GsEnterSceneRequest)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&_impl_.player_id_, 0, static_cast<::size_t>(
      reinterpret_cast<char*>(&_impl_.scene_id_) -
      reinterpret_cast<char*>(&_impl_.player_id_)) + sizeof(_impl_.scene_id_));
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::uint8_t* Centre2GsEnterSceneRequest::_InternalSerialize(
            const MessageLite& base, ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) {
          const Centre2GsEnterSceneRequest& this_ = static_cast<const Centre2GsEnterSceneRequest&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::uint8_t* Centre2GsEnterSceneRequest::_InternalSerialize(
            ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) const {
          const Centre2GsEnterSceneRequest& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(serialize_to_array_start:Centre2GsEnterSceneRequest)
          ::uint32_t cached_has_bits = 0;
          (void)cached_has_bits;

          // uint64 player_id = 1;
          if (this_._internal_player_id() != 0) {
            target = stream->EnsureSpace(target);
            target = ::_pbi::WireFormatLite::WriteUInt64ToArray(
                1, this_._internal_player_id(), target);
          }

          // uint64 scene_id = 2;
          if (this_._internal_scene_id() != 0) {
            target = stream->EnsureSpace(target);
            target = ::_pbi::WireFormatLite::WriteUInt64ToArray(
                2, this_._internal_scene_id(), target);
          }

          if (PROTOBUF_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
            target =
                ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
                    this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
          }
          // @@protoc_insertion_point(serialize_to_array_end:Centre2GsEnterSceneRequest)
          return target;
        }

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::size_t Centre2GsEnterSceneRequest::ByteSizeLong(const MessageLite& base) {
          const Centre2GsEnterSceneRequest& this_ = static_cast<const Centre2GsEnterSceneRequest&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::size_t Centre2GsEnterSceneRequest::ByteSizeLong() const {
          const Centre2GsEnterSceneRequest& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(message_byte_size_start:Centre2GsEnterSceneRequest)
          ::size_t total_size = 0;

          ::uint32_t cached_has_bits = 0;
          // Prevent compiler warnings about cached_has_bits being unused
          (void)cached_has_bits;

          ::_pbi::Prefetch5LinesFrom7Lines(&this_);
           {
            // uint64 player_id = 1;
            if (this_._internal_player_id() != 0) {
              total_size += ::_pbi::WireFormatLite::UInt64SizePlusOne(
                  this_._internal_player_id());
            }
            // uint64 scene_id = 2;
            if (this_._internal_scene_id() != 0) {
              total_size += ::_pbi::WireFormatLite::UInt64SizePlusOne(
                  this_._internal_scene_id());
            }
          }
          return this_.MaybeComputeUnknownFieldsSize(total_size,
                                                     &this_._impl_._cached_size_);
        }

void Centre2GsEnterSceneRequest::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<Centre2GsEnterSceneRequest*>(&to_msg);
  auto& from = static_cast<const Centre2GsEnterSceneRequest&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:Centre2GsEnterSceneRequest)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_player_id() != 0) {
    _this->_impl_.player_id_ = from._impl_.player_id_;
  }
  if (from._internal_scene_id() != 0) {
    _this->_impl_.scene_id_ = from._impl_.scene_id_;
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void Centre2GsEnterSceneRequest::CopyFrom(const Centre2GsEnterSceneRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:Centre2GsEnterSceneRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void Centre2GsEnterSceneRequest::InternalSwap(Centre2GsEnterSceneRequest* PROTOBUF_RESTRICT other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(Centre2GsEnterSceneRequest, _impl_.scene_id_)
      + sizeof(Centre2GsEnterSceneRequest::_impl_.scene_id_)
      - PROTOBUF_FIELD_OFFSET(Centre2GsEnterSceneRequest, _impl_.player_id_)>(
          reinterpret_cast<char*>(&_impl_.player_id_),
          reinterpret_cast<char*>(&other->_impl_.player_id_));
}

::google::protobuf::Metadata Centre2GsEnterSceneRequest::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class CreateSceneRequest::_Internal {
 public:
};

CreateSceneRequest::CreateSceneRequest(::google::protobuf::Arena* arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:CreateSceneRequest)
}
CreateSceneRequest::CreateSceneRequest(
    ::google::protobuf::Arena* arena, const CreateSceneRequest& from)
    : CreateSceneRequest(arena) {
  MergeFrom(from);
}
inline PROTOBUF_NDEBUG_INLINE CreateSceneRequest::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0} {}

inline void CreateSceneRequest::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  _impl_.config_id_ = {};
}
CreateSceneRequest::~CreateSceneRequest() {
  // @@protoc_insertion_point(destructor:CreateSceneRequest)
  SharedDtor(*this);
}
inline void CreateSceneRequest::SharedDtor(MessageLite& self) {
  CreateSceneRequest& this_ = static_cast<CreateSceneRequest&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  this_._impl_.~Impl_();
}

inline void* CreateSceneRequest::PlacementNew_(const void*, void* mem,
                                        ::google::protobuf::Arena* arena) {
  return ::new (mem) CreateSceneRequest(arena);
}
constexpr auto CreateSceneRequest::InternalNewImpl_() {
  return ::google::protobuf::internal::MessageCreator::ZeroInit(sizeof(CreateSceneRequest),
                                            alignof(CreateSceneRequest));
}
PROTOBUF_CONSTINIT
PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::google::protobuf::internal::ClassDataFull CreateSceneRequest::_class_data_ = {
    ::google::protobuf::internal::ClassData{
        &_CreateSceneRequest_default_instance_._instance,
        &_table_.header,
        nullptr,  // OnDemandRegisterArenaDtor
        nullptr,  // IsInitialized
        &CreateSceneRequest::MergeImpl,
        ::google::protobuf::Message::GetNewImpl<CreateSceneRequest>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
        &CreateSceneRequest::SharedDtor,
        ::google::protobuf::Message::GetClearImpl<CreateSceneRequest>(), &CreateSceneRequest::ByteSizeLong,
            &CreateSceneRequest::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
        PROTOBUF_FIELD_OFFSET(CreateSceneRequest, _impl_._cached_size_),
        false,
    },
    &CreateSceneRequest::kDescriptorMethods,
    &descriptor_table_proto_2fcommon_2fgame_5fservice_2eproto,
    nullptr,  // tracker
};
const ::google::protobuf::internal::ClassData* CreateSceneRequest::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_class_data_.tc_table);
  return _class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<0, 1, 0, 0, 2> CreateSceneRequest::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    1, 0,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967294,  // skipmap
    offsetof(decltype(_table_), field_entries),
    1,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    _class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::CreateSceneRequest>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // uint32 config_id = 1;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(CreateSceneRequest, _impl_.config_id_), 63>(),
     {8, 63, 0, PROTOBUF_FIELD_OFFSET(CreateSceneRequest, _impl_.config_id_)}},
  }}, {{
    65535, 65535
  }}, {{
    // uint32 config_id = 1;
    {PROTOBUF_FIELD_OFFSET(CreateSceneRequest, _impl_.config_id_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUInt32)},
  }},
  // no aux_entries
  {{
  }},
};

PROTOBUF_NOINLINE void CreateSceneRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:CreateSceneRequest)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.config_id_ = 0u;
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::uint8_t* CreateSceneRequest::_InternalSerialize(
            const MessageLite& base, ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) {
          const CreateSceneRequest& this_ = static_cast<const CreateSceneRequest&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::uint8_t* CreateSceneRequest::_InternalSerialize(
            ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) const {
          const CreateSceneRequest& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(serialize_to_array_start:CreateSceneRequest)
          ::uint32_t cached_has_bits = 0;
          (void)cached_has_bits;

          // uint32 config_id = 1;
          if (this_._internal_config_id() != 0) {
            target = stream->EnsureSpace(target);
            target = ::_pbi::WireFormatLite::WriteUInt32ToArray(
                1, this_._internal_config_id(), target);
          }

          if (PROTOBUF_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
            target =
                ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
                    this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
          }
          // @@protoc_insertion_point(serialize_to_array_end:CreateSceneRequest)
          return target;
        }

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::size_t CreateSceneRequest::ByteSizeLong(const MessageLite& base) {
          const CreateSceneRequest& this_ = static_cast<const CreateSceneRequest&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::size_t CreateSceneRequest::ByteSizeLong() const {
          const CreateSceneRequest& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(message_byte_size_start:CreateSceneRequest)
          ::size_t total_size = 0;

          ::uint32_t cached_has_bits = 0;
          // Prevent compiler warnings about cached_has_bits being unused
          (void)cached_has_bits;

           {
            // uint32 config_id = 1;
            if (this_._internal_config_id() != 0) {
              total_size += ::_pbi::WireFormatLite::UInt32SizePlusOne(
                  this_._internal_config_id());
            }
          }
          return this_.MaybeComputeUnknownFieldsSize(total_size,
                                                     &this_._impl_._cached_size_);
        }

void CreateSceneRequest::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<CreateSceneRequest*>(&to_msg);
  auto& from = static_cast<const CreateSceneRequest&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:CreateSceneRequest)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_config_id() != 0) {
    _this->_impl_.config_id_ = from._impl_.config_id_;
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void CreateSceneRequest::CopyFrom(const CreateSceneRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CreateSceneRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void CreateSceneRequest::InternalSwap(CreateSceneRequest* PROTOBUF_RESTRICT other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
        swap(_impl_.config_id_, other->_impl_.config_id_);
}

::google::protobuf::Metadata CreateSceneRequest::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class CreateSceneResponse::_Internal {
 public:
  using HasBits =
      decltype(std::declval<CreateSceneResponse>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
      8 * PROTOBUF_FIELD_OFFSET(CreateSceneResponse, _impl_._has_bits_);
};

void CreateSceneResponse::clear_scene_info() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.scene_info_ != nullptr) _impl_.scene_info_->Clear();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
CreateSceneResponse::CreateSceneResponse(::google::protobuf::Arena* arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:CreateSceneResponse)
}
inline PROTOBUF_NDEBUG_INLINE CreateSceneResponse::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from, const ::CreateSceneResponse& from_msg)
      : _has_bits_{from._has_bits_},
        _cached_size_{0} {}

CreateSceneResponse::CreateSceneResponse(
    ::google::protobuf::Arena* arena,
    const CreateSceneResponse& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  CreateSceneResponse* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);
  ::uint32_t cached_has_bits = _impl_._has_bits_[0];
  _impl_.scene_info_ = (cached_has_bits & 0x00000001u) ? ::google::protobuf::Message::CopyConstruct<::SceneInfoPBComponent>(
                              arena, *from._impl_.scene_info_)
                        : nullptr;

  // @@protoc_insertion_point(copy_constructor:CreateSceneResponse)
}
inline PROTOBUF_NDEBUG_INLINE CreateSceneResponse::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0} {}

inline void CreateSceneResponse::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  _impl_.scene_info_ = {};
}
CreateSceneResponse::~CreateSceneResponse() {
  // @@protoc_insertion_point(destructor:CreateSceneResponse)
  SharedDtor(*this);
}
inline void CreateSceneResponse::SharedDtor(MessageLite& self) {
  CreateSceneResponse& this_ = static_cast<CreateSceneResponse&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  delete this_._impl_.scene_info_;
  this_._impl_.~Impl_();
}

inline void* CreateSceneResponse::PlacementNew_(const void*, void* mem,
                                        ::google::protobuf::Arena* arena) {
  return ::new (mem) CreateSceneResponse(arena);
}
constexpr auto CreateSceneResponse::InternalNewImpl_() {
  return ::google::protobuf::internal::MessageCreator::ZeroInit(sizeof(CreateSceneResponse),
                                            alignof(CreateSceneResponse));
}
PROTOBUF_CONSTINIT
PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::google::protobuf::internal::ClassDataFull CreateSceneResponse::_class_data_ = {
    ::google::protobuf::internal::ClassData{
        &_CreateSceneResponse_default_instance_._instance,
        &_table_.header,
        nullptr,  // OnDemandRegisterArenaDtor
        nullptr,  // IsInitialized
        &CreateSceneResponse::MergeImpl,
        ::google::protobuf::Message::GetNewImpl<CreateSceneResponse>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
        &CreateSceneResponse::SharedDtor,
        ::google::protobuf::Message::GetClearImpl<CreateSceneResponse>(), &CreateSceneResponse::ByteSizeLong,
            &CreateSceneResponse::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
        PROTOBUF_FIELD_OFFSET(CreateSceneResponse, _impl_._cached_size_),
        false,
    },
    &CreateSceneResponse::kDescriptorMethods,
    &descriptor_table_proto_2fcommon_2fgame_5fservice_2eproto,
    nullptr,  // tracker
};
const ::google::protobuf::internal::ClassData* CreateSceneResponse::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_class_data_.tc_table);
  return _class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<0, 1, 1, 0, 2> CreateSceneResponse::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(CreateSceneResponse, _impl_._has_bits_),
    0, // no _extensions_
    1, 0,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967294,  // skipmap
    offsetof(decltype(_table_), field_entries),
    1,  // num_field_entries
    1,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    _class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::CreateSceneResponse>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // .SceneInfoPBComponent scene_info = 1;
    {::_pbi::TcParser::FastMtS1,
     {10, 0, 0, PROTOBUF_FIELD_OFFSET(CreateSceneResponse, _impl_.scene_info_)}},
  }}, {{
    65535, 65535
  }}, {{
    // .SceneInfoPBComponent scene_info = 1;
    {PROTOBUF_FIELD_OFFSET(CreateSceneResponse, _impl_.scene_info_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
  }}, {{
    {::_pbi::TcParser::GetTable<::SceneInfoPBComponent>()},
  }}, {{
  }},
};

PROTOBUF_NOINLINE void CreateSceneResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:CreateSceneResponse)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    ABSL_DCHECK(_impl_.scene_info_ != nullptr);
    _impl_.scene_info_->Clear();
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::uint8_t* CreateSceneResponse::_InternalSerialize(
            const MessageLite& base, ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) {
          const CreateSceneResponse& this_ = static_cast<const CreateSceneResponse&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::uint8_t* CreateSceneResponse::_InternalSerialize(
            ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) const {
          const CreateSceneResponse& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(serialize_to_array_start:CreateSceneResponse)
          ::uint32_t cached_has_bits = 0;
          (void)cached_has_bits;

          cached_has_bits = this_._impl_._has_bits_[0];
          // .SceneInfoPBComponent scene_info = 1;
          if (cached_has_bits & 0x00000001u) {
            target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
                1, *this_._impl_.scene_info_, this_._impl_.scene_info_->GetCachedSize(), target,
                stream);
          }

          if (PROTOBUF_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
            target =
                ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
                    this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
          }
          // @@protoc_insertion_point(serialize_to_array_end:CreateSceneResponse)
          return target;
        }

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::size_t CreateSceneResponse::ByteSizeLong(const MessageLite& base) {
          const CreateSceneResponse& this_ = static_cast<const CreateSceneResponse&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::size_t CreateSceneResponse::ByteSizeLong() const {
          const CreateSceneResponse& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(message_byte_size_start:CreateSceneResponse)
          ::size_t total_size = 0;

          ::uint32_t cached_has_bits = 0;
          // Prevent compiler warnings about cached_has_bits being unused
          (void)cached_has_bits;

           {
            // .SceneInfoPBComponent scene_info = 1;
            cached_has_bits = this_._impl_._has_bits_[0];
            if (cached_has_bits & 0x00000001u) {
              total_size += 1 +
                            ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.scene_info_);
            }
          }
          return this_.MaybeComputeUnknownFieldsSize(total_size,
                                                     &this_._impl_._cached_size_);
        }

void CreateSceneResponse::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<CreateSceneResponse*>(&to_msg);
  auto& from = static_cast<const CreateSceneResponse&>(from_msg);
  ::google::protobuf::Arena* arena = _this->GetArena();
  // @@protoc_insertion_point(class_specific_merge_from_start:CreateSceneResponse)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    ABSL_DCHECK(from._impl_.scene_info_ != nullptr);
    if (_this->_impl_.scene_info_ == nullptr) {
      _this->_impl_.scene_info_ =
          ::google::protobuf::Message::CopyConstruct<::SceneInfoPBComponent>(arena, *from._impl_.scene_info_);
    } else {
      _this->_impl_.scene_info_->MergeFrom(*from._impl_.scene_info_);
    }
  }
  _this->_impl_._has_bits_[0] |= cached_has_bits;
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void CreateSceneResponse::CopyFrom(const CreateSceneResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CreateSceneResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void CreateSceneResponse::InternalSwap(CreateSceneResponse* PROTOBUF_RESTRICT other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  swap(_impl_.scene_info_, other->_impl_.scene_info_);
}

::google::protobuf::Metadata CreateSceneResponse::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

const ::google::protobuf::ServiceDescriptor* GameService::descriptor() {
  ::google::protobuf::internal::AssignDescriptors(&descriptor_table_proto_2fcommon_2fgame_5fservice_2eproto);
  return file_level_service_descriptors_proto_2fcommon_2fgame_5fservice_2eproto[0];
}

const ::google::protobuf::ServiceDescriptor* GameService::GetDescriptor() {
  return descriptor();
}

void GameService::PlayerEnterGameNode(::google::protobuf::RpcController* controller,
                         const ::PlayerEnterGameNodeRequest*, ::Empty*, ::google::protobuf::Closure* done) {
  controller->SetFailed("Method PlayerEnterGameNode() not implemented.");
  done->Run();
}
void GameService::SendMessageToPlayer(::google::protobuf::RpcController* controller,
                         const ::NodeRouteMessageRequest*, ::NodeRouteMessageResponse*, ::google::protobuf::Closure* done) {
  controller->SetFailed("Method SendMessageToPlayer() not implemented.");
  done->Run();
}
void GameService::ClientSendMessageToPlayer(::google::protobuf::RpcController* controller,
                         const ::ClientSendMessageToPlayerRequest*, ::ClientSendMessageToPlayerResponse*, ::google::protobuf::Closure* done) {
  controller->SetFailed("Method ClientSendMessageToPlayer() not implemented.");
  done->Run();
}
void GameService::CentreSendToPlayerViaGameNode(::google::protobuf::RpcController* controller,
                         const ::NodeRouteMessageRequest*, ::Empty*, ::google::protobuf::Closure* done) {
  controller->SetFailed("Method CentreSendToPlayerViaGameNode() not implemented.");
  done->Run();
}
void GameService::InvokePlayerService(::google::protobuf::RpcController* controller,
                         const ::NodeRouteMessageRequest*, ::NodeRouteMessageResponse*, ::google::protobuf::Closure* done) {
  controller->SetFailed("Method InvokePlayerService() not implemented.");
  done->Run();
}
void GameService::RouteNodeStringMsg(::google::protobuf::RpcController* controller,
                         const ::RouteMessageRequest*, ::RouteMessageResponse*, ::google::protobuf::Closure* done) {
  controller->SetFailed("Method RouteNodeStringMsg() not implemented.");
  done->Run();
}
void GameService::RoutePlayerStringMsg(::google::protobuf::RpcController* controller,
                         const ::RoutePlayerMessageRequest*, ::RoutePlayerMessageResponse*, ::google::protobuf::Closure* done) {
  controller->SetFailed("Method RoutePlayerStringMsg() not implemented.");
  done->Run();
}
void GameService::UpdateSessionDetail(::google::protobuf::RpcController* controller,
                         const ::RegisterPlayerSessionRequest*, ::Empty*, ::google::protobuf::Closure* done) {
  controller->SetFailed("Method UpdateSessionDetail() not implemented.");
  done->Run();
}
void GameService::EnterScene(::google::protobuf::RpcController* controller,
                         const ::Centre2GsEnterSceneRequest*, ::Empty*, ::google::protobuf::Closure* done) {
  controller->SetFailed("Method EnterScene() not implemented.");
  done->Run();
}
void GameService::CreateScene(::google::protobuf::RpcController* controller,
                         const ::CreateSceneRequest*, ::CreateSceneResponse*, ::google::protobuf::Closure* done) {
  controller->SetFailed("Method CreateScene() not implemented.");
  done->Run();
}
void GameService::RegisterNodeSession(::google::protobuf::RpcController* controller,
                         const ::RegisterNodeSessionRequest*, ::RegisterNodeSessionResponse*, ::google::protobuf::Closure* done) {
  controller->SetFailed("Method RegisterNodeSession() not implemented.");
  done->Run();
}

void GameService::CallMethod(
    const ::google::protobuf::MethodDescriptor* method,
    ::google::protobuf::RpcController* controller,
    const ::google::protobuf::Message* request,
    ::google::protobuf::Message* response, ::google::protobuf::Closure* done) {
  ABSL_DCHECK_EQ(method->service(), file_level_service_descriptors_proto_2fcommon_2fgame_5fservice_2eproto[0]);
  switch (method->index()) {
    case 0:
      this->PlayerEnterGameNode(controller,
                   ::google::protobuf::DownCastMessage<::PlayerEnterGameNodeRequest>(request),
                   ::google::protobuf::DownCastMessage<::Empty>(response),
                   done);
      break;
    case 1:
      this->SendMessageToPlayer(controller,
                   ::google::protobuf::DownCastMessage<::NodeRouteMessageRequest>(request),
                   ::google::protobuf::DownCastMessage<::NodeRouteMessageResponse>(response),
                   done);
      break;
    case 2:
      this->ClientSendMessageToPlayer(controller,
                   ::google::protobuf::DownCastMessage<::ClientSendMessageToPlayerRequest>(request),
                   ::google::protobuf::DownCastMessage<::ClientSendMessageToPlayerResponse>(response),
                   done);
      break;
    case 3:
      this->CentreSendToPlayerViaGameNode(controller,
                   ::google::protobuf::DownCastMessage<::NodeRouteMessageRequest>(request),
                   ::google::protobuf::DownCastMessage<::Empty>(response),
                   done);
      break;
    case 4:
      this->InvokePlayerService(controller,
                   ::google::protobuf::DownCastMessage<::NodeRouteMessageRequest>(request),
                   ::google::protobuf::DownCastMessage<::NodeRouteMessageResponse>(response),
                   done);
      break;
    case 5:
      this->RouteNodeStringMsg(controller,
                   ::google::protobuf::DownCastMessage<::RouteMessageRequest>(request),
                   ::google::protobuf::DownCastMessage<::RouteMessageResponse>(response),
                   done);
      break;
    case 6:
      this->RoutePlayerStringMsg(controller,
                   ::google::protobuf::DownCastMessage<::RoutePlayerMessageRequest>(request),
                   ::google::protobuf::DownCastMessage<::RoutePlayerMessageResponse>(response),
                   done);
      break;
    case 7:
      this->UpdateSessionDetail(controller,
                   ::google::protobuf::DownCastMessage<::RegisterPlayerSessionRequest>(request),
                   ::google::protobuf::DownCastMessage<::Empty>(response),
                   done);
      break;
    case 8:
      this->EnterScene(controller,
                   ::google::protobuf::DownCastMessage<::Centre2GsEnterSceneRequest>(request),
                   ::google::protobuf::DownCastMessage<::Empty>(response),
                   done);
      break;
    case 9:
      this->CreateScene(controller,
                   ::google::protobuf::DownCastMessage<::CreateSceneRequest>(request),
                   ::google::protobuf::DownCastMessage<::CreateSceneResponse>(response),
                   done);
      break;
    case 10:
      this->RegisterNodeSession(controller,
                   ::google::protobuf::DownCastMessage<::RegisterNodeSessionRequest>(request),
                   ::google::protobuf::DownCastMessage<::RegisterNodeSessionResponse>(response),
                   done);
      break;

    default:
      ABSL_LOG(FATAL) << "Bad method index; this should never happen.";
      break;
  }
}

const ::google::protobuf::Message& GameService::GetRequestPrototype(
    const ::google::protobuf::MethodDescriptor* method) const {
  ABSL_DCHECK_EQ(method->service(), descriptor());
  switch (method->index()) {
    case 0:
      return ::PlayerEnterGameNodeRequest::default_instance();
    case 1:
      return ::NodeRouteMessageRequest::default_instance();
    case 2:
      return ::ClientSendMessageToPlayerRequest::default_instance();
    case 3:
      return ::NodeRouteMessageRequest::default_instance();
    case 4:
      return ::NodeRouteMessageRequest::default_instance();
    case 5:
      return ::RouteMessageRequest::default_instance();
    case 6:
      return ::RoutePlayerMessageRequest::default_instance();
    case 7:
      return ::RegisterPlayerSessionRequest::default_instance();
    case 8:
      return ::Centre2GsEnterSceneRequest::default_instance();
    case 9:
      return ::CreateSceneRequest::default_instance();
    case 10:
      return ::RegisterNodeSessionRequest::default_instance();

    default:
      ABSL_LOG(FATAL) << "Bad method index; this should never happen.";
      return *::google::protobuf::MessageFactory::generated_factory()
                  ->GetPrototype(method->input_type());
  }
}

const ::google::protobuf::Message& GameService::GetResponsePrototype(
    const ::google::protobuf::MethodDescriptor* method) const {
  ABSL_DCHECK_EQ(method->service(), descriptor());
  switch (method->index()) {
    case 0:
      return ::Empty::default_instance();
    case 1:
      return ::NodeRouteMessageResponse::default_instance();
    case 2:
      return ::ClientSendMessageToPlayerResponse::default_instance();
    case 3:
      return ::Empty::default_instance();
    case 4:
      return ::NodeRouteMessageResponse::default_instance();
    case 5:
      return ::RouteMessageResponse::default_instance();
    case 6:
      return ::RoutePlayerMessageResponse::default_instance();
    case 7:
      return ::Empty::default_instance();
    case 8:
      return ::Empty::default_instance();
    case 9:
      return ::CreateSceneResponse::default_instance();
    case 10:
      return ::RegisterNodeSessionResponse::default_instance();

    default:
      ABSL_LOG(FATAL) << "Bad method index; this should never happen.";
      return *::google::protobuf::MessageFactory::generated_factory()
                  ->GetPrototype(method->output_type());
  }
}

GameService_Stub::GameService_Stub(::google::protobuf::RpcChannel* channel)
    : channel_(channel), owns_channel_(false) {}

GameService_Stub::GameService_Stub(
    ::google::protobuf::RpcChannel* channel,
    ::google::protobuf::Service::ChannelOwnership ownership)
    : channel_(channel),
      owns_channel_(ownership ==
                    ::google::protobuf::Service::STUB_OWNS_CHANNEL) {}

GameService_Stub::~GameService_Stub() {
  if (owns_channel_) delete channel_;
}

void GameService_Stub::PlayerEnterGameNode(::google::protobuf::RpcController* controller,
                              const ::PlayerEnterGameNodeRequest* request,
                              ::Empty* response, ::google::protobuf::Closure* done) {
  channel_->CallMethod(descriptor()->method(0), controller,
                       request, response, done);
}
void GameService_Stub::SendMessageToPlayer(::google::protobuf::RpcController* controller,
                              const ::NodeRouteMessageRequest* request,
                              ::NodeRouteMessageResponse* response, ::google::protobuf::Closure* done) {
  channel_->CallMethod(descriptor()->method(1), controller,
                       request, response, done);
}
void GameService_Stub::ClientSendMessageToPlayer(::google::protobuf::RpcController* controller,
                              const ::ClientSendMessageToPlayerRequest* request,
                              ::ClientSendMessageToPlayerResponse* response, ::google::protobuf::Closure* done) {
  channel_->CallMethod(descriptor()->method(2), controller,
                       request, response, done);
}
void GameService_Stub::CentreSendToPlayerViaGameNode(::google::protobuf::RpcController* controller,
                              const ::NodeRouteMessageRequest* request,
                              ::Empty* response, ::google::protobuf::Closure* done) {
  channel_->CallMethod(descriptor()->method(3), controller,
                       request, response, done);
}
void GameService_Stub::InvokePlayerService(::google::protobuf::RpcController* controller,
                              const ::NodeRouteMessageRequest* request,
                              ::NodeRouteMessageResponse* response, ::google::protobuf::Closure* done) {
  channel_->CallMethod(descriptor()->method(4), controller,
                       request, response, done);
}
void GameService_Stub::RouteNodeStringMsg(::google::protobuf::RpcController* controller,
                              const ::RouteMessageRequest* request,
                              ::RouteMessageResponse* response, ::google::protobuf::Closure* done) {
  channel_->CallMethod(descriptor()->method(5), controller,
                       request, response, done);
}
void GameService_Stub::RoutePlayerStringMsg(::google::protobuf::RpcController* controller,
                              const ::RoutePlayerMessageRequest* request,
                              ::RoutePlayerMessageResponse* response, ::google::protobuf::Closure* done) {
  channel_->CallMethod(descriptor()->method(6), controller,
                       request, response, done);
}
void GameService_Stub::UpdateSessionDetail(::google::protobuf::RpcController* controller,
                              const ::RegisterPlayerSessionRequest* request,
                              ::Empty* response, ::google::protobuf::Closure* done) {
  channel_->CallMethod(descriptor()->method(7), controller,
                       request, response, done);
}
void GameService_Stub::EnterScene(::google::protobuf::RpcController* controller,
                              const ::Centre2GsEnterSceneRequest* request,
                              ::Empty* response, ::google::protobuf::Closure* done) {
  channel_->CallMethod(descriptor()->method(8), controller,
                       request, response, done);
}
void GameService_Stub::CreateScene(::google::protobuf::RpcController* controller,
                              const ::CreateSceneRequest* request,
                              ::CreateSceneResponse* response, ::google::protobuf::Closure* done) {
  channel_->CallMethod(descriptor()->method(9), controller,
                       request, response, done);
}
void GameService_Stub::RegisterNodeSession(::google::protobuf::RpcController* controller,
                              const ::RegisterNodeSessionRequest* request,
                              ::RegisterNodeSessionResponse* response, ::google::protobuf::Closure* done) {
  channel_->CallMethod(descriptor()->method(10), controller,
                       request, response, done);
}
// @@protoc_insertion_point(namespace_scope)
namespace google {
namespace protobuf {
}  // namespace protobuf
}  // namespace google
// @@protoc_insertion_point(global_scope)
PROTOBUF_ATTRIBUTE_INIT_PRIORITY2 static ::std::false_type
    _static_init2_ PROTOBUF_UNUSED =
        (::_pbi::AddDescriptors(&descriptor_table_proto_2fcommon_2fgame_5fservice_2eproto),
         ::std::false_type{});
#include "google/protobuf/port_undef.inc"
