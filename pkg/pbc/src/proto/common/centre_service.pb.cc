// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: proto/common/centre_service.proto
// Protobuf C++ Version: 5.26.1

#include "proto/common/centre_service.pb.h"

#include <algorithm>
#include "google/protobuf/io/coded_stream.h"
#include "google/protobuf/extension_set.h"
#include "google/protobuf/wire_format_lite.h"
#include "google/protobuf/descriptor.h"
#include "google/protobuf/generated_message_reflection.h"
#include "google/protobuf/reflection_ops.h"
#include "google/protobuf/wire_format.h"
#include "google/protobuf/generated_message_tctable_impl.h"
// @@protoc_insertion_point(includes)

// Must be included last.
#include "google/protobuf/port_def.inc"
PROTOBUF_PRAGMA_INIT_SEG
namespace _pb = ::google::protobuf;
namespace _pbi = ::google::protobuf::internal;
namespace _fl = ::google::protobuf::internal::field_layout;
      template <typename>
PROTOBUF_CONSTEXPR LoginNodeLeaveGameRequest::LoginNodeLeaveGameRequest(::_pbi::ConstantInitialized) {}
struct LoginNodeLeaveGameRequestDefaultTypeInternal {
  PROTOBUF_CONSTEXPR LoginNodeLeaveGameRequestDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~LoginNodeLeaveGameRequestDefaultTypeInternal() {}
  union {
    LoginNodeLeaveGameRequest _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 LoginNodeLeaveGameRequestDefaultTypeInternal _LoginNodeLeaveGameRequest_default_instance_;

inline constexpr EnterGameNodeSuccessRequest::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : player_id_{::uint64_t{0u}},
        game_node_id_{0u},
        _cached_size_{0} {}

template <typename>
PROTOBUF_CONSTEXPR EnterGameNodeSuccessRequest::EnterGameNodeSuccessRequest(::_pbi::ConstantInitialized)
    : _impl_(::_pbi::ConstantInitialized()) {}
struct EnterGameNodeSuccessRequestDefaultTypeInternal {
  PROTOBUF_CONSTEXPR EnterGameNodeSuccessRequestDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~EnterGameNodeSuccessRequestDefaultTypeInternal() {}
  union {
    EnterGameNodeSuccessRequest _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 EnterGameNodeSuccessRequestDefaultTypeInternal _EnterGameNodeSuccessRequest_default_instance_;

inline constexpr GateClientMessageRequest::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        rpc_client_{nullptr} {}

template <typename>
PROTOBUF_CONSTEXPR GateClientMessageRequest::GateClientMessageRequest(::_pbi::ConstantInitialized)
    : _impl_(::_pbi::ConstantInitialized()) {}
struct GateClientMessageRequestDefaultTypeInternal {
  PROTOBUF_CONSTEXPR GateClientMessageRequestDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~GateClientMessageRequestDefaultTypeInternal() {}
  union {
    GateClientMessageRequest _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 GateClientMessageRequestDefaultTypeInternal _GateClientMessageRequest_default_instance_;

inline constexpr CentrePlayerGameNodeEntryRequest::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        client_msg_body_{nullptr},
        session_info_{nullptr} {}

template <typename>
PROTOBUF_CONSTEXPR CentrePlayerGameNodeEntryRequest::CentrePlayerGameNodeEntryRequest(::_pbi::ConstantInitialized)
    : _impl_(::_pbi::ConstantInitialized()) {}
struct CentrePlayerGameNodeEntryRequestDefaultTypeInternal {
  PROTOBUF_CONSTEXPR CentrePlayerGameNodeEntryRequestDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~CentrePlayerGameNodeEntryRequestDefaultTypeInternal() {}
  union {
    CentrePlayerGameNodeEntryRequest _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 CentrePlayerGameNodeEntryRequestDefaultTypeInternal _CentrePlayerGameNodeEntryRequest_default_instance_;
static ::_pb::Metadata file_level_metadata_proto_2fcommon_2fcentre_5fservice_2eproto[4];
static constexpr const ::_pb::EnumDescriptor**
    file_level_enum_descriptors_proto_2fcommon_2fcentre_5fservice_2eproto = nullptr;
static const ::_pb::ServiceDescriptor*
    file_level_service_descriptors_proto_2fcommon_2fcentre_5fservice_2eproto[1];
const ::uint32_t
    TableStruct_proto_2fcommon_2fcentre_5fservice_2eproto::offsets[] ABSL_ATTRIBUTE_SECTION_VARIABLE(
        protodesc_cold) = {
        PROTOBUF_FIELD_OFFSET(::GateClientMessageRequest, _impl_._has_bits_),
        PROTOBUF_FIELD_OFFSET(::GateClientMessageRequest, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::GateClientMessageRequest, _impl_.rpc_client_),
        0,
        ~0u,  // no _has_bits_
        PROTOBUF_FIELD_OFFSET(::LoginNodeLeaveGameRequest, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        ~0u,  // no _has_bits_
        PROTOBUF_FIELD_OFFSET(::EnterGameNodeSuccessRequest, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::EnterGameNodeSuccessRequest, _impl_.player_id_),
        PROTOBUF_FIELD_OFFSET(::EnterGameNodeSuccessRequest, _impl_.game_node_id_),
        PROTOBUF_FIELD_OFFSET(::CentrePlayerGameNodeEntryRequest, _impl_._has_bits_),
        PROTOBUF_FIELD_OFFSET(::CentrePlayerGameNodeEntryRequest, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::CentrePlayerGameNodeEntryRequest, _impl_.client_msg_body_),
        PROTOBUF_FIELD_OFFSET(::CentrePlayerGameNodeEntryRequest, _impl_.session_info_),
        0,
        1,
};

static const ::_pbi::MigrationSchema
    schemas[] ABSL_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
        {0, 9, -1, sizeof(::GateClientMessageRequest)},
        {10, -1, -1, sizeof(::LoginNodeLeaveGameRequest)},
        {18, -1, -1, sizeof(::EnterGameNodeSuccessRequest)},
        {28, 38, -1, sizeof(::CentrePlayerGameNodeEntryRequest)},
};
static const ::_pb::Message* const file_default_instances[] = {
    &::_GateClientMessageRequest_default_instance_._instance,
    &::_LoginNodeLeaveGameRequest_default_instance_._instance,
    &::_EnterGameNodeSuccessRequest_default_instance_._instance,
    &::_CentrePlayerGameNodeEntryRequest_default_instance_._instance,
};
const char descriptor_table_protodef_proto_2fcommon_2fcentre_5fservice_2eproto[] ABSL_ATTRIBUTE_SECTION_VARIABLE(
    protodesc_cold) = {
    "\n!proto/common/centre_service.proto\032\031pro"
    "to/common/common.proto\032\030proto/common/emp"
    "ty.proto\032\032proto/common/session.proto\032\031pr"
    "oto/common/c2gate.proto\032!proto/common/co"
    "mmon_message.proto\"\?\n\030GateClientMessageR"
    "equest\022#\n\nrpc_client\030\001 \001(\0132\017.NetworkAddr"
    "ess\"\033\n\031LoginNodeLeaveGameRequest\"F\n\033Ente"
    "rGameNodeSuccessRequest\022\021\n\tplayer_id\030\001 \001"
    "(\004\022\024\n\014game_node_id\030\002 \001(\r\"u\n CentrePlayer"
    "GameNodeEntryRequest\022*\n\017client_msg_body\030"
    "\001 \001(\0132\021.EnterGameRequest\022%\n\014session_info"
    "\030\002 \001(\0132\017.SessionDetails2\267\006\n\rCentreServic"
    "e\0224\n\020RegisterGameNode\022\030.RegisterGameNode"
    "Request\032\006.Empty\0224\n\020RegisterGateNode\022\030.Re"
    "gisterGateNodeRequest\032\006.Empty\0226\n\021GatePla"
    "yerService\022\031.GateClientMessageRequest\032\006."
    "Empty\022>\n\025GateSessionDisconnect\022\035.GateSes"
    "sionDisconnectRequest\032\006.Empty\0226\n\025LoginNo"
    "deAccountLogin\022\r.LoginRequest\032\016.LoginRes"
    "ponse\022\?\n\022LoginNodeEnterGame\022!.CentrePlay"
    "erGameNodeEntryRequest\032\006.Empty\0228\n\022LoginN"
    "odeLeaveGame\022\032.LoginNodeLeaveGameRequest"
    "\032\006.Empty\022C\n\032LoginNodeSessionDisconnect\022\035"
    ".GateSessionDisconnectRequest\032\006.Empty\022D\n"
    "\rPlayerService\022\030.NodeRouteMessageRequest"
    "\032\031.NodeRouteMessageResponse\0226\n\016EnterGsSu"
    "cceed\022\034.EnterGameNodeSuccessRequest\032\006.Em"
    "pty\022A\n\022RouteNodeStringMsg\022\024.RouteMessage"
    "Request\032\025.RouteMessageResponse\022O\n\024RouteP"
    "layerStringMsg\022\032.RoutePlayerMessageReque"
    "st\032\033.RoutePlayerMessageResponse\0228\n\022UnReg"
    "isterGameNode\022\032.UnregisterGameNodeReques"
    "t\032\006.EmptyB\014Z\007pb/game\200\001\001b\006proto3"
};
static const ::_pbi::DescriptorTable* const descriptor_table_proto_2fcommon_2fcentre_5fservice_2eproto_deps[5] =
    {
        &::descriptor_table_proto_2fcommon_2fc2gate_2eproto,
        &::descriptor_table_proto_2fcommon_2fcommon_2eproto,
        &::descriptor_table_proto_2fcommon_2fcommon_5fmessage_2eproto,
        &::descriptor_table_proto_2fcommon_2fempty_2eproto,
        &::descriptor_table_proto_2fcommon_2fsession_2eproto,
};
static ::absl::once_flag descriptor_table_proto_2fcommon_2fcentre_5fservice_2eproto_once;
const ::_pbi::DescriptorTable descriptor_table_proto_2fcommon_2fcentre_5fservice_2eproto = {
    false,
    false,
    1311,
    descriptor_table_protodef_proto_2fcommon_2fcentre_5fservice_2eproto,
    "proto/common/centre_service.proto",
    &descriptor_table_proto_2fcommon_2fcentre_5fservice_2eproto_once,
    descriptor_table_proto_2fcommon_2fcentre_5fservice_2eproto_deps,
    5,
    4,
    schemas,
    file_default_instances,
    TableStruct_proto_2fcommon_2fcentre_5fservice_2eproto::offsets,
    file_level_metadata_proto_2fcommon_2fcentre_5fservice_2eproto,
    file_level_enum_descriptors_proto_2fcommon_2fcentre_5fservice_2eproto,
    file_level_service_descriptors_proto_2fcommon_2fcentre_5fservice_2eproto,
};

// This function exists to be marked as weak.
// It can significantly speed up compilation by breaking up LLVM's SCC
// in the .pb.cc translation units. Large translation units see a
// reduction of more than 35% of walltime for optimized builds. Without
// the weak attribute all the messages in the file, including all the
// vtables and everything they use become part of the same SCC through
// a cycle like:
// GetMetadata -> descriptor table -> default instances ->
//   vtables -> GetMetadata
// By adding a weak function here we break the connection from the
// individual vtables back into the descriptor table.
PROTOBUF_ATTRIBUTE_WEAK const ::_pbi::DescriptorTable* descriptor_table_proto_2fcommon_2fcentre_5fservice_2eproto_getter() {
  return &descriptor_table_proto_2fcommon_2fcentre_5fservice_2eproto;
}
// ===================================================================

class GateClientMessageRequest::_Internal {
 public:
  using HasBits = decltype(std::declval<GateClientMessageRequest>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
    8 * PROTOBUF_FIELD_OFFSET(GateClientMessageRequest, _impl_._has_bits_);
};

void GateClientMessageRequest::clear_rpc_client() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  if (_impl_.rpc_client_ != nullptr) _impl_.rpc_client_->Clear();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
GateClientMessageRequest::GateClientMessageRequest(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:GateClientMessageRequest)
}
inline PROTOBUF_NDEBUG_INLINE GateClientMessageRequest::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from)
      : _has_bits_{from._has_bits_},
        _cached_size_{0} {}

GateClientMessageRequest::GateClientMessageRequest(
    ::google::protobuf::Arena* arena,
    const GateClientMessageRequest& from)
    : ::google::protobuf::Message(arena) {
  GateClientMessageRequest* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_);
  ::uint32_t cached_has_bits = _impl_._has_bits_[0];
  _impl_.rpc_client_ = (cached_has_bits & 0x00000001u) ? ::google::protobuf::Message::CopyConstruct<::NetworkAddress>(
                              arena, *from._impl_.rpc_client_)
                        : nullptr;

  // @@protoc_insertion_point(copy_constructor:GateClientMessageRequest)
}
inline PROTOBUF_NDEBUG_INLINE GateClientMessageRequest::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0} {}

inline void GateClientMessageRequest::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  _impl_.rpc_client_ = {};
}
GateClientMessageRequest::~GateClientMessageRequest() {
  // @@protoc_insertion_point(destructor:GateClientMessageRequest)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void GateClientMessageRequest::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  delete _impl_.rpc_client_;
  _impl_.~Impl_();
}

const ::google::protobuf::MessageLite::ClassData*
GateClientMessageRequest::GetClassData() const {
  PROTOBUF_CONSTINIT static const ::google::protobuf::MessageLite::
      ClassDataFull _data_ = {
          {
              nullptr,  // OnDemandRegisterArenaDtor
              PROTOBUF_FIELD_OFFSET(GateClientMessageRequest, _impl_._cached_size_),
              false,
          },
          &GateClientMessageRequest::MergeImpl,
          &GateClientMessageRequest::kDescriptorMethods,
      };
  return &_data_;
}
PROTOBUF_NOINLINE void GateClientMessageRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:GateClientMessageRequest)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    ABSL_DCHECK(_impl_.rpc_client_ != nullptr);
    _impl_.rpc_client_->Clear();
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* GateClientMessageRequest::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<0, 1, 1, 0, 2> GateClientMessageRequest::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(GateClientMessageRequest, _impl_._has_bits_),
    0, // no _extensions_
    1, 0,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967294,  // skipmap
    offsetof(decltype(_table_), field_entries),
    1,  // num_field_entries
    1,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    &_GateClientMessageRequest_default_instance_._instance,
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::GateClientMessageRequest>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // .NetworkAddress rpc_client = 1;
    {::_pbi::TcParser::FastMtS1,
     {10, 0, 0, PROTOBUF_FIELD_OFFSET(GateClientMessageRequest, _impl_.rpc_client_)}},
  }}, {{
    65535, 65535
  }}, {{
    // .NetworkAddress rpc_client = 1;
    {PROTOBUF_FIELD_OFFSET(GateClientMessageRequest, _impl_.rpc_client_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
  }}, {{
    {::_pbi::TcParser::GetTable<::NetworkAddress>()},
  }}, {{
  }},
};

::uint8_t* GateClientMessageRequest::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:GateClientMessageRequest)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  // .NetworkAddress rpc_client = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
        1, *_impl_.rpc_client_, _impl_.rpc_client_->GetCachedSize(), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:GateClientMessageRequest)
  return target;
}

::size_t GateClientMessageRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:GateClientMessageRequest)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // .NetworkAddress rpc_client = 1;
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    total_size +=
        1 + ::google::protobuf::internal::WireFormatLite::MessageSize(*_impl_.rpc_client_);
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}


void GateClientMessageRequest::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<GateClientMessageRequest*>(&to_msg);
  auto& from = static_cast<const GateClientMessageRequest&>(from_msg);
  ::google::protobuf::Arena* arena = _this->GetArena();
  // @@protoc_insertion_point(class_specific_merge_from_start:GateClientMessageRequest)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    ABSL_DCHECK(from._impl_.rpc_client_ != nullptr);
    if (_this->_impl_.rpc_client_ == nullptr) {
      _this->_impl_.rpc_client_ =
          ::google::protobuf::Message::CopyConstruct<::NetworkAddress>(arena, *from._impl_.rpc_client_);
    } else {
      _this->_impl_.rpc_client_->MergeFrom(*from._impl_.rpc_client_);
    }
  }
  _this->_impl_._has_bits_[0] |= cached_has_bits;
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void GateClientMessageRequest::CopyFrom(const GateClientMessageRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:GateClientMessageRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool GateClientMessageRequest::IsInitialized() const {
  return true;
}

void GateClientMessageRequest::InternalSwap(GateClientMessageRequest* PROTOBUF_RESTRICT other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  swap(_impl_.rpc_client_, other->_impl_.rpc_client_);
}

::google::protobuf::Metadata GateClientMessageRequest::GetMetadata() const {
  return ::_pbi::AssignDescriptors(&descriptor_table_proto_2fcommon_2fcentre_5fservice_2eproto_getter,
                                   &descriptor_table_proto_2fcommon_2fcentre_5fservice_2eproto_once,
                                   file_level_metadata_proto_2fcommon_2fcentre_5fservice_2eproto[0]);
}
// ===================================================================

class LoginNodeLeaveGameRequest::_Internal {
 public:
};

LoginNodeLeaveGameRequest::LoginNodeLeaveGameRequest(::google::protobuf::Arena* arena)
    : ::google::protobuf::internal::ZeroFieldsBase(arena) {
  // @@protoc_insertion_point(arena_constructor:LoginNodeLeaveGameRequest)
}
LoginNodeLeaveGameRequest::LoginNodeLeaveGameRequest(
    ::google::protobuf::Arena* arena,
    const LoginNodeLeaveGameRequest& from)
    : ::google::protobuf::internal::ZeroFieldsBase(arena) {
  LoginNodeLeaveGameRequest* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);

  // @@protoc_insertion_point(copy_constructor:LoginNodeLeaveGameRequest)
}









::google::protobuf::Metadata LoginNodeLeaveGameRequest::GetMetadata() const {
  return ::_pbi::AssignDescriptors(&descriptor_table_proto_2fcommon_2fcentre_5fservice_2eproto_getter,
                                   &descriptor_table_proto_2fcommon_2fcentre_5fservice_2eproto_once,
                                   file_level_metadata_proto_2fcommon_2fcentre_5fservice_2eproto[1]);
}
// ===================================================================

class EnterGameNodeSuccessRequest::_Internal {
 public:
};

EnterGameNodeSuccessRequest::EnterGameNodeSuccessRequest(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:EnterGameNodeSuccessRequest)
}
EnterGameNodeSuccessRequest::EnterGameNodeSuccessRequest(
    ::google::protobuf::Arena* arena, const EnterGameNodeSuccessRequest& from)
    : EnterGameNodeSuccessRequest(arena) {
  MergeFrom(from);
}
inline PROTOBUF_NDEBUG_INLINE EnterGameNodeSuccessRequest::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0} {}

inline void EnterGameNodeSuccessRequest::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, player_id_),
           0,
           offsetof(Impl_, game_node_id_) -
               offsetof(Impl_, player_id_) +
               sizeof(Impl_::game_node_id_));
}
EnterGameNodeSuccessRequest::~EnterGameNodeSuccessRequest() {
  // @@protoc_insertion_point(destructor:EnterGameNodeSuccessRequest)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void EnterGameNodeSuccessRequest::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  _impl_.~Impl_();
}

const ::google::protobuf::MessageLite::ClassData*
EnterGameNodeSuccessRequest::GetClassData() const {
  PROTOBUF_CONSTINIT static const ::google::protobuf::MessageLite::
      ClassDataFull _data_ = {
          {
              nullptr,  // OnDemandRegisterArenaDtor
              PROTOBUF_FIELD_OFFSET(EnterGameNodeSuccessRequest, _impl_._cached_size_),
              false,
          },
          &EnterGameNodeSuccessRequest::MergeImpl,
          &EnterGameNodeSuccessRequest::kDescriptorMethods,
      };
  return &_data_;
}
PROTOBUF_NOINLINE void EnterGameNodeSuccessRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:EnterGameNodeSuccessRequest)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&_impl_.player_id_, 0, static_cast<::size_t>(
      reinterpret_cast<char*>(&_impl_.game_node_id_) -
      reinterpret_cast<char*>(&_impl_.player_id_)) + sizeof(_impl_.game_node_id_));
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* EnterGameNodeSuccessRequest::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<1, 2, 0, 0, 2> EnterGameNodeSuccessRequest::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    2, 8,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967292,  // skipmap
    offsetof(decltype(_table_), field_entries),
    2,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    &_EnterGameNodeSuccessRequest_default_instance_._instance,
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::EnterGameNodeSuccessRequest>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // uint32 game_node_id = 2;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(EnterGameNodeSuccessRequest, _impl_.game_node_id_), 63>(),
     {16, 63, 0, PROTOBUF_FIELD_OFFSET(EnterGameNodeSuccessRequest, _impl_.game_node_id_)}},
    // uint64 player_id = 1;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint64_t, offsetof(EnterGameNodeSuccessRequest, _impl_.player_id_), 63>(),
     {8, 63, 0, PROTOBUF_FIELD_OFFSET(EnterGameNodeSuccessRequest, _impl_.player_id_)}},
  }}, {{
    65535, 65535
  }}, {{
    // uint64 player_id = 1;
    {PROTOBUF_FIELD_OFFSET(EnterGameNodeSuccessRequest, _impl_.player_id_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUInt64)},
    // uint32 game_node_id = 2;
    {PROTOBUF_FIELD_OFFSET(EnterGameNodeSuccessRequest, _impl_.game_node_id_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUInt32)},
  }},
  // no aux_entries
  {{
  }},
};

::uint8_t* EnterGameNodeSuccessRequest::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:EnterGameNodeSuccessRequest)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  // uint64 player_id = 1;
  if (this->_internal_player_id() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt64ToArray(
        1, this->_internal_player_id(), target);
  }

  // uint32 game_node_id = 2;
  if (this->_internal_game_node_id() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt32ToArray(
        2, this->_internal_game_node_id(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:EnterGameNodeSuccessRequest)
  return target;
}

::size_t EnterGameNodeSuccessRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:EnterGameNodeSuccessRequest)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // uint64 player_id = 1;
  if (this->_internal_player_id() != 0) {
    total_size += ::_pbi::WireFormatLite::UInt64SizePlusOne(
        this->_internal_player_id());
  }

  // uint32 game_node_id = 2;
  if (this->_internal_game_node_id() != 0) {
    total_size += ::_pbi::WireFormatLite::UInt32SizePlusOne(
        this->_internal_game_node_id());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}


void EnterGameNodeSuccessRequest::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<EnterGameNodeSuccessRequest*>(&to_msg);
  auto& from = static_cast<const EnterGameNodeSuccessRequest&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:EnterGameNodeSuccessRequest)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_player_id() != 0) {
    _this->_impl_.player_id_ = from._impl_.player_id_;
  }
  if (from._internal_game_node_id() != 0) {
    _this->_impl_.game_node_id_ = from._impl_.game_node_id_;
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void EnterGameNodeSuccessRequest::CopyFrom(const EnterGameNodeSuccessRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:EnterGameNodeSuccessRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool EnterGameNodeSuccessRequest::IsInitialized() const {
  return true;
}

void EnterGameNodeSuccessRequest::InternalSwap(EnterGameNodeSuccessRequest* PROTOBUF_RESTRICT other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(EnterGameNodeSuccessRequest, _impl_.game_node_id_)
      + sizeof(EnterGameNodeSuccessRequest::_impl_.game_node_id_)
      - PROTOBUF_FIELD_OFFSET(EnterGameNodeSuccessRequest, _impl_.player_id_)>(
          reinterpret_cast<char*>(&_impl_.player_id_),
          reinterpret_cast<char*>(&other->_impl_.player_id_));
}

::google::protobuf::Metadata EnterGameNodeSuccessRequest::GetMetadata() const {
  return ::_pbi::AssignDescriptors(&descriptor_table_proto_2fcommon_2fcentre_5fservice_2eproto_getter,
                                   &descriptor_table_proto_2fcommon_2fcentre_5fservice_2eproto_once,
                                   file_level_metadata_proto_2fcommon_2fcentre_5fservice_2eproto[2]);
}
// ===================================================================

class CentrePlayerGameNodeEntryRequest::_Internal {
 public:
  using HasBits = decltype(std::declval<CentrePlayerGameNodeEntryRequest>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
    8 * PROTOBUF_FIELD_OFFSET(CentrePlayerGameNodeEntryRequest, _impl_._has_bits_);
};

void CentrePlayerGameNodeEntryRequest::clear_client_msg_body() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  if (_impl_.client_msg_body_ != nullptr) _impl_.client_msg_body_->Clear();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
void CentrePlayerGameNodeEntryRequest::clear_session_info() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  if (_impl_.session_info_ != nullptr) _impl_.session_info_->Clear();
  _impl_._has_bits_[0] &= ~0x00000002u;
}
CentrePlayerGameNodeEntryRequest::CentrePlayerGameNodeEntryRequest(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:CentrePlayerGameNodeEntryRequest)
}
inline PROTOBUF_NDEBUG_INLINE CentrePlayerGameNodeEntryRequest::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from)
      : _has_bits_{from._has_bits_},
        _cached_size_{0} {}

CentrePlayerGameNodeEntryRequest::CentrePlayerGameNodeEntryRequest(
    ::google::protobuf::Arena* arena,
    const CentrePlayerGameNodeEntryRequest& from)
    : ::google::protobuf::Message(arena) {
  CentrePlayerGameNodeEntryRequest* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_);
  ::uint32_t cached_has_bits = _impl_._has_bits_[0];
  _impl_.client_msg_body_ = (cached_has_bits & 0x00000001u) ? ::google::protobuf::Message::CopyConstruct<::EnterGameRequest>(
                              arena, *from._impl_.client_msg_body_)
                        : nullptr;
  _impl_.session_info_ = (cached_has_bits & 0x00000002u) ? ::google::protobuf::Message::CopyConstruct<::SessionDetails>(
                              arena, *from._impl_.session_info_)
                        : nullptr;

  // @@protoc_insertion_point(copy_constructor:CentrePlayerGameNodeEntryRequest)
}
inline PROTOBUF_NDEBUG_INLINE CentrePlayerGameNodeEntryRequest::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0} {}

inline void CentrePlayerGameNodeEntryRequest::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, client_msg_body_),
           0,
           offsetof(Impl_, session_info_) -
               offsetof(Impl_, client_msg_body_) +
               sizeof(Impl_::session_info_));
}
CentrePlayerGameNodeEntryRequest::~CentrePlayerGameNodeEntryRequest() {
  // @@protoc_insertion_point(destructor:CentrePlayerGameNodeEntryRequest)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void CentrePlayerGameNodeEntryRequest::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  delete _impl_.client_msg_body_;
  delete _impl_.session_info_;
  _impl_.~Impl_();
}

const ::google::protobuf::MessageLite::ClassData*
CentrePlayerGameNodeEntryRequest::GetClassData() const {
  PROTOBUF_CONSTINIT static const ::google::protobuf::MessageLite::
      ClassDataFull _data_ = {
          {
              nullptr,  // OnDemandRegisterArenaDtor
              PROTOBUF_FIELD_OFFSET(CentrePlayerGameNodeEntryRequest, _impl_._cached_size_),
              false,
          },
          &CentrePlayerGameNodeEntryRequest::MergeImpl,
          &CentrePlayerGameNodeEntryRequest::kDescriptorMethods,
      };
  return &_data_;
}
PROTOBUF_NOINLINE void CentrePlayerGameNodeEntryRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:CentrePlayerGameNodeEntryRequest)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    if (cached_has_bits & 0x00000001u) {
      ABSL_DCHECK(_impl_.client_msg_body_ != nullptr);
      _impl_.client_msg_body_->Clear();
    }
    if (cached_has_bits & 0x00000002u) {
      ABSL_DCHECK(_impl_.session_info_ != nullptr);
      _impl_.session_info_->Clear();
    }
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* CentrePlayerGameNodeEntryRequest::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<1, 2, 2, 0, 2> CentrePlayerGameNodeEntryRequest::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(CentrePlayerGameNodeEntryRequest, _impl_._has_bits_),
    0, // no _extensions_
    2, 8,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967292,  // skipmap
    offsetof(decltype(_table_), field_entries),
    2,  // num_field_entries
    2,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    &_CentrePlayerGameNodeEntryRequest_default_instance_._instance,
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::CentrePlayerGameNodeEntryRequest>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // .SessionDetails session_info = 2;
    {::_pbi::TcParser::FastMtS1,
     {18, 1, 1, PROTOBUF_FIELD_OFFSET(CentrePlayerGameNodeEntryRequest, _impl_.session_info_)}},
    // .EnterGameRequest client_msg_body = 1;
    {::_pbi::TcParser::FastMtS1,
     {10, 0, 0, PROTOBUF_FIELD_OFFSET(CentrePlayerGameNodeEntryRequest, _impl_.client_msg_body_)}},
  }}, {{
    65535, 65535
  }}, {{
    // .EnterGameRequest client_msg_body = 1;
    {PROTOBUF_FIELD_OFFSET(CentrePlayerGameNodeEntryRequest, _impl_.client_msg_body_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
    // .SessionDetails session_info = 2;
    {PROTOBUF_FIELD_OFFSET(CentrePlayerGameNodeEntryRequest, _impl_.session_info_), _Internal::kHasBitsOffset + 1, 1,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
  }}, {{
    {::_pbi::TcParser::GetTable<::EnterGameRequest>()},
    {::_pbi::TcParser::GetTable<::SessionDetails>()},
  }}, {{
  }},
};

::uint8_t* CentrePlayerGameNodeEntryRequest::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:CentrePlayerGameNodeEntryRequest)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  // .EnterGameRequest client_msg_body = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
        1, *_impl_.client_msg_body_, _impl_.client_msg_body_->GetCachedSize(), target, stream);
  }

  // .SessionDetails session_info = 2;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
        2, *_impl_.session_info_, _impl_.session_info_->GetCachedSize(), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CentrePlayerGameNodeEntryRequest)
  return target;
}

::size_t CentrePlayerGameNodeEntryRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:CentrePlayerGameNodeEntryRequest)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    // .EnterGameRequest client_msg_body = 1;
    if (cached_has_bits & 0x00000001u) {
      total_size +=
          1 + ::google::protobuf::internal::WireFormatLite::MessageSize(*_impl_.client_msg_body_);
    }

    // .SessionDetails session_info = 2;
    if (cached_has_bits & 0x00000002u) {
      total_size +=
          1 + ::google::protobuf::internal::WireFormatLite::MessageSize(*_impl_.session_info_);
    }

  }
  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}


void CentrePlayerGameNodeEntryRequest::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<CentrePlayerGameNodeEntryRequest*>(&to_msg);
  auto& from = static_cast<const CentrePlayerGameNodeEntryRequest&>(from_msg);
  ::google::protobuf::Arena* arena = _this->GetArena();
  // @@protoc_insertion_point(class_specific_merge_from_start:CentrePlayerGameNodeEntryRequest)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._impl_._has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    if (cached_has_bits & 0x00000001u) {
      ABSL_DCHECK(from._impl_.client_msg_body_ != nullptr);
      if (_this->_impl_.client_msg_body_ == nullptr) {
        _this->_impl_.client_msg_body_ =
            ::google::protobuf::Message::CopyConstruct<::EnterGameRequest>(arena, *from._impl_.client_msg_body_);
      } else {
        _this->_impl_.client_msg_body_->MergeFrom(*from._impl_.client_msg_body_);
      }
    }
    if (cached_has_bits & 0x00000002u) {
      ABSL_DCHECK(from._impl_.session_info_ != nullptr);
      if (_this->_impl_.session_info_ == nullptr) {
        _this->_impl_.session_info_ =
            ::google::protobuf::Message::CopyConstruct<::SessionDetails>(arena, *from._impl_.session_info_);
      } else {
        _this->_impl_.session_info_->MergeFrom(*from._impl_.session_info_);
      }
    }
  }
  _this->_impl_._has_bits_[0] |= cached_has_bits;
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void CentrePlayerGameNodeEntryRequest::CopyFrom(const CentrePlayerGameNodeEntryRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CentrePlayerGameNodeEntryRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool CentrePlayerGameNodeEntryRequest::IsInitialized() const {
  return true;
}

void CentrePlayerGameNodeEntryRequest::InternalSwap(CentrePlayerGameNodeEntryRequest* PROTOBUF_RESTRICT other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(CentrePlayerGameNodeEntryRequest, _impl_.session_info_)
      + sizeof(CentrePlayerGameNodeEntryRequest::_impl_.session_info_)
      - PROTOBUF_FIELD_OFFSET(CentrePlayerGameNodeEntryRequest, _impl_.client_msg_body_)>(
          reinterpret_cast<char*>(&_impl_.client_msg_body_),
          reinterpret_cast<char*>(&other->_impl_.client_msg_body_));
}

::google::protobuf::Metadata CentrePlayerGameNodeEntryRequest::GetMetadata() const {
  return ::_pbi::AssignDescriptors(&descriptor_table_proto_2fcommon_2fcentre_5fservice_2eproto_getter,
                                   &descriptor_table_proto_2fcommon_2fcentre_5fservice_2eproto_once,
                                   file_level_metadata_proto_2fcommon_2fcentre_5fservice_2eproto[3]);
}
// ===================================================================

const ::google::protobuf::ServiceDescriptor* CentreService::descriptor() {
  ::google::protobuf::internal::AssignDescriptors(&descriptor_table_proto_2fcommon_2fcentre_5fservice_2eproto);
  return file_level_service_descriptors_proto_2fcommon_2fcentre_5fservice_2eproto[0];
}

const ::google::protobuf::ServiceDescriptor* CentreService::GetDescriptor() {
  return descriptor();
}

void CentreService::RegisterGameNode(::google::protobuf::RpcController* controller,
                         const ::RegisterGameNodeRequest*, ::Empty*, ::google::protobuf::Closure* done) {
  controller->SetFailed("Method RegisterGameNode() not implemented.");
  done->Run();
}
void CentreService::RegisterGateNode(::google::protobuf::RpcController* controller,
                         const ::RegisterGateNodeRequest*, ::Empty*, ::google::protobuf::Closure* done) {
  controller->SetFailed("Method RegisterGateNode() not implemented.");
  done->Run();
}
void CentreService::GatePlayerService(::google::protobuf::RpcController* controller,
                         const ::GateClientMessageRequest*, ::Empty*, ::google::protobuf::Closure* done) {
  controller->SetFailed("Method GatePlayerService() not implemented.");
  done->Run();
}
void CentreService::GateSessionDisconnect(::google::protobuf::RpcController* controller,
                         const ::GateSessionDisconnectRequest*, ::Empty*, ::google::protobuf::Closure* done) {
  controller->SetFailed("Method GateSessionDisconnect() not implemented.");
  done->Run();
}
void CentreService::LoginNodeAccountLogin(::google::protobuf::RpcController* controller,
                         const ::LoginRequest*, ::LoginResponse*, ::google::protobuf::Closure* done) {
  controller->SetFailed("Method LoginNodeAccountLogin() not implemented.");
  done->Run();
}
void CentreService::LoginNodeEnterGame(::google::protobuf::RpcController* controller,
                         const ::CentrePlayerGameNodeEntryRequest*, ::Empty*, ::google::protobuf::Closure* done) {
  controller->SetFailed("Method LoginNodeEnterGame() not implemented.");
  done->Run();
}
void CentreService::LoginNodeLeaveGame(::google::protobuf::RpcController* controller,
                         const ::LoginNodeLeaveGameRequest*, ::Empty*, ::google::protobuf::Closure* done) {
  controller->SetFailed("Method LoginNodeLeaveGame() not implemented.");
  done->Run();
}
void CentreService::LoginNodeSessionDisconnect(::google::protobuf::RpcController* controller,
                         const ::GateSessionDisconnectRequest*, ::Empty*, ::google::protobuf::Closure* done) {
  controller->SetFailed("Method LoginNodeSessionDisconnect() not implemented.");
  done->Run();
}
void CentreService::PlayerService(::google::protobuf::RpcController* controller,
                         const ::NodeRouteMessageRequest*, ::NodeRouteMessageResponse*, ::google::protobuf::Closure* done) {
  controller->SetFailed("Method PlayerService() not implemented.");
  done->Run();
}
void CentreService::EnterGsSucceed(::google::protobuf::RpcController* controller,
                         const ::EnterGameNodeSuccessRequest*, ::Empty*, ::google::protobuf::Closure* done) {
  controller->SetFailed("Method EnterGsSucceed() not implemented.");
  done->Run();
}
void CentreService::RouteNodeStringMsg(::google::protobuf::RpcController* controller,
                         const ::RouteMessageRequest*, ::RouteMessageResponse*, ::google::protobuf::Closure* done) {
  controller->SetFailed("Method RouteNodeStringMsg() not implemented.");
  done->Run();
}
void CentreService::RoutePlayerStringMsg(::google::protobuf::RpcController* controller,
                         const ::RoutePlayerMessageRequest*, ::RoutePlayerMessageResponse*, ::google::protobuf::Closure* done) {
  controller->SetFailed("Method RoutePlayerStringMsg() not implemented.");
  done->Run();
}
void CentreService::UnRegisterGameNode(::google::protobuf::RpcController* controller,
                         const ::UnregisterGameNodeRequest*, ::Empty*, ::google::protobuf::Closure* done) {
  controller->SetFailed("Method UnRegisterGameNode() not implemented.");
  done->Run();
}

void CentreService::CallMethod(
    const ::google::protobuf::MethodDescriptor* method,
    ::google::protobuf::RpcController* controller,
    const ::google::protobuf::Message* request,
    ::google::protobuf::Message* response, ::google::protobuf::Closure* done) {
  ABSL_DCHECK_EQ(method->service(), file_level_service_descriptors_proto_2fcommon_2fcentre_5fservice_2eproto[0]);
  switch (method->index()) {
    case 0:
      RegisterGameNode(controller,
             ::google::protobuf::internal::DownCast<const ::RegisterGameNodeRequest*>(request),
             ::google::protobuf::internal::DownCast<::Empty*>(response), done);
      break;
    case 1:
      RegisterGateNode(controller,
             ::google::protobuf::internal::DownCast<const ::RegisterGateNodeRequest*>(request),
             ::google::protobuf::internal::DownCast<::Empty*>(response), done);
      break;
    case 2:
      GatePlayerService(controller,
             ::google::protobuf::internal::DownCast<const ::GateClientMessageRequest*>(request),
             ::google::protobuf::internal::DownCast<::Empty*>(response), done);
      break;
    case 3:
      GateSessionDisconnect(controller,
             ::google::protobuf::internal::DownCast<const ::GateSessionDisconnectRequest*>(request),
             ::google::protobuf::internal::DownCast<::Empty*>(response), done);
      break;
    case 4:
      LoginNodeAccountLogin(controller,
             ::google::protobuf::internal::DownCast<const ::LoginRequest*>(request),
             ::google::protobuf::internal::DownCast<::LoginResponse*>(response), done);
      break;
    case 5:
      LoginNodeEnterGame(controller,
             ::google::protobuf::internal::DownCast<const ::CentrePlayerGameNodeEntryRequest*>(request),
             ::google::protobuf::internal::DownCast<::Empty*>(response), done);
      break;
    case 6:
      LoginNodeLeaveGame(controller,
             ::google::protobuf::internal::DownCast<const ::LoginNodeLeaveGameRequest*>(request),
             ::google::protobuf::internal::DownCast<::Empty*>(response), done);
      break;
    case 7:
      LoginNodeSessionDisconnect(controller,
             ::google::protobuf::internal::DownCast<const ::GateSessionDisconnectRequest*>(request),
             ::google::protobuf::internal::DownCast<::Empty*>(response), done);
      break;
    case 8:
      PlayerService(controller,
             ::google::protobuf::internal::DownCast<const ::NodeRouteMessageRequest*>(request),
             ::google::protobuf::internal::DownCast<::NodeRouteMessageResponse*>(response), done);
      break;
    case 9:
      EnterGsSucceed(controller,
             ::google::protobuf::internal::DownCast<const ::EnterGameNodeSuccessRequest*>(request),
             ::google::protobuf::internal::DownCast<::Empty*>(response), done);
      break;
    case 10:
      RouteNodeStringMsg(controller,
             ::google::protobuf::internal::DownCast<const ::RouteMessageRequest*>(request),
             ::google::protobuf::internal::DownCast<::RouteMessageResponse*>(response), done);
      break;
    case 11:
      RoutePlayerStringMsg(controller,
             ::google::protobuf::internal::DownCast<const ::RoutePlayerMessageRequest*>(request),
             ::google::protobuf::internal::DownCast<::RoutePlayerMessageResponse*>(response), done);
      break;
    case 12:
      UnRegisterGameNode(controller,
             ::google::protobuf::internal::DownCast<const ::UnregisterGameNodeRequest*>(request),
             ::google::protobuf::internal::DownCast<::Empty*>(response), done);
      break;

    default:
      ABSL_LOG(FATAL) << "Bad method index; this should never happen.";
      break;
  }
}

const ::google::protobuf::Message& CentreService::GetRequestPrototype(
    const ::google::protobuf::MethodDescriptor* method) const {
  ABSL_DCHECK_EQ(method->service(), descriptor());
  switch (method->index()) {
    case 0:
      return ::RegisterGameNodeRequest::default_instance();
    case 1:
      return ::RegisterGateNodeRequest::default_instance();
    case 2:
      return ::GateClientMessageRequest::default_instance();
    case 3:
      return ::GateSessionDisconnectRequest::default_instance();
    case 4:
      return ::LoginRequest::default_instance();
    case 5:
      return ::CentrePlayerGameNodeEntryRequest::default_instance();
    case 6:
      return ::LoginNodeLeaveGameRequest::default_instance();
    case 7:
      return ::GateSessionDisconnectRequest::default_instance();
    case 8:
      return ::NodeRouteMessageRequest::default_instance();
    case 9:
      return ::EnterGameNodeSuccessRequest::default_instance();
    case 10:
      return ::RouteMessageRequest::default_instance();
    case 11:
      return ::RoutePlayerMessageRequest::default_instance();
    case 12:
      return ::UnregisterGameNodeRequest::default_instance();

    default:
      ABSL_LOG(FATAL) << "Bad method index; this should never happen.";
      return *::google::protobuf::MessageFactory::generated_factory()
                  ->GetPrototype(method->input_type());
  }
}

const ::google::protobuf::Message& CentreService::GetResponsePrototype(
    const ::google::protobuf::MethodDescriptor* method) const {
  ABSL_DCHECK_EQ(method->service(), descriptor());
  switch (method->index()) {
    case 0:
      return ::Empty::default_instance();
    case 1:
      return ::Empty::default_instance();
    case 2:
      return ::Empty::default_instance();
    case 3:
      return ::Empty::default_instance();
    case 4:
      return ::LoginResponse::default_instance();
    case 5:
      return ::Empty::default_instance();
    case 6:
      return ::Empty::default_instance();
    case 7:
      return ::Empty::default_instance();
    case 8:
      return ::NodeRouteMessageResponse::default_instance();
    case 9:
      return ::Empty::default_instance();
    case 10:
      return ::RouteMessageResponse::default_instance();
    case 11:
      return ::RoutePlayerMessageResponse::default_instance();
    case 12:
      return ::Empty::default_instance();

    default:
      ABSL_LOG(FATAL) << "Bad method index; this should never happen.";
      return *::google::protobuf::MessageFactory::generated_factory()
                  ->GetPrototype(method->output_type());
  }
}

CentreService_Stub::CentreService_Stub(::google::protobuf::RpcChannel* channel)
    : channel_(channel), owns_channel_(false) {}

CentreService_Stub::CentreService_Stub(
    ::google::protobuf::RpcChannel* channel,
    ::google::protobuf::Service::ChannelOwnership ownership)
    : channel_(channel),
      owns_channel_(ownership ==
                    ::google::protobuf::Service::STUB_OWNS_CHANNEL) {}

CentreService_Stub::~CentreService_Stub() {
  if (owns_channel_) delete channel_;
}

void CentreService_Stub::RegisterGameNode(::google::protobuf::RpcController* controller,
                              const ::RegisterGameNodeRequest* request,
                              ::Empty* response, ::google::protobuf::Closure* done) {
  channel_->CallMethod(descriptor()->method(0), controller,
                       request, response, done);
}
void CentreService_Stub::RegisterGateNode(::google::protobuf::RpcController* controller,
                              const ::RegisterGateNodeRequest* request,
                              ::Empty* response, ::google::protobuf::Closure* done) {
  channel_->CallMethod(descriptor()->method(1), controller,
                       request, response, done);
}
void CentreService_Stub::GatePlayerService(::google::protobuf::RpcController* controller,
                              const ::GateClientMessageRequest* request,
                              ::Empty* response, ::google::protobuf::Closure* done) {
  channel_->CallMethod(descriptor()->method(2), controller,
                       request, response, done);
}
void CentreService_Stub::GateSessionDisconnect(::google::protobuf::RpcController* controller,
                              const ::GateSessionDisconnectRequest* request,
                              ::Empty* response, ::google::protobuf::Closure* done) {
  channel_->CallMethod(descriptor()->method(3), controller,
                       request, response, done);
}
void CentreService_Stub::LoginNodeAccountLogin(::google::protobuf::RpcController* controller,
                              const ::LoginRequest* request,
                              ::LoginResponse* response, ::google::protobuf::Closure* done) {
  channel_->CallMethod(descriptor()->method(4), controller,
                       request, response, done);
}
void CentreService_Stub::LoginNodeEnterGame(::google::protobuf::RpcController* controller,
                              const ::CentrePlayerGameNodeEntryRequest* request,
                              ::Empty* response, ::google::protobuf::Closure* done) {
  channel_->CallMethod(descriptor()->method(5), controller,
                       request, response, done);
}
void CentreService_Stub::LoginNodeLeaveGame(::google::protobuf::RpcController* controller,
                              const ::LoginNodeLeaveGameRequest* request,
                              ::Empty* response, ::google::protobuf::Closure* done) {
  channel_->CallMethod(descriptor()->method(6), controller,
                       request, response, done);
}
void CentreService_Stub::LoginNodeSessionDisconnect(::google::protobuf::RpcController* controller,
                              const ::GateSessionDisconnectRequest* request,
                              ::Empty* response, ::google::protobuf::Closure* done) {
  channel_->CallMethod(descriptor()->method(7), controller,
                       request, response, done);
}
void CentreService_Stub::PlayerService(::google::protobuf::RpcController* controller,
                              const ::NodeRouteMessageRequest* request,
                              ::NodeRouteMessageResponse* response, ::google::protobuf::Closure* done) {
  channel_->CallMethod(descriptor()->method(8), controller,
                       request, response, done);
}
void CentreService_Stub::EnterGsSucceed(::google::protobuf::RpcController* controller,
                              const ::EnterGameNodeSuccessRequest* request,
                              ::Empty* response, ::google::protobuf::Closure* done) {
  channel_->CallMethod(descriptor()->method(9), controller,
                       request, response, done);
}
void CentreService_Stub::RouteNodeStringMsg(::google::protobuf::RpcController* controller,
                              const ::RouteMessageRequest* request,
                              ::RouteMessageResponse* response, ::google::protobuf::Closure* done) {
  channel_->CallMethod(descriptor()->method(10), controller,
                       request, response, done);
}
void CentreService_Stub::RoutePlayerStringMsg(::google::protobuf::RpcController* controller,
                              const ::RoutePlayerMessageRequest* request,
                              ::RoutePlayerMessageResponse* response, ::google::protobuf::Closure* done) {
  channel_->CallMethod(descriptor()->method(11), controller,
                       request, response, done);
}
void CentreService_Stub::UnRegisterGameNode(::google::protobuf::RpcController* controller,
                              const ::UnregisterGameNodeRequest* request,
                              ::Empty* response, ::google::protobuf::Closure* done) {
  channel_->CallMethod(descriptor()->method(12), controller,
                       request, response, done);
}
// @@protoc_insertion_point(namespace_scope)
namespace google {
namespace protobuf {
}  // namespace protobuf
}  // namespace google
// @@protoc_insertion_point(global_scope)
PROTOBUF_ATTRIBUTE_INIT_PRIORITY2
static ::std::false_type _static_init_ PROTOBUF_UNUSED =
    (::_pbi::AddDescriptors(&descriptor_table_proto_2fcommon_2fcentre_5fservice_2eproto),
     ::std::false_type{});
#include "google/protobuf/port_undef.inc"
