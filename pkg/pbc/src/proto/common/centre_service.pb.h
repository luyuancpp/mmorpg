// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: proto/common/centre_service.proto
// Protobuf C++ Version: 5.26.1

#ifndef GOOGLE_PROTOBUF_INCLUDED_proto_2fcommon_2fcentre_5fservice_2eproto_2epb_2eh
#define GOOGLE_PROTOBUF_INCLUDED_proto_2fcommon_2fcentre_5fservice_2eproto_2epb_2eh

#include <limits>
#include <string>
#include <type_traits>
#include <utility>

#include "google/protobuf/port_def.inc"
#if PROTOBUF_VERSION != 5026001
#error "Protobuf C++ gencode is built with an incompatible version of"
#error "Protobuf C++ headers/runtime. See"
#error "https://protobuf.dev/support/cross-version-runtime-guarantee/#cpp"
#endif
#include "google/protobuf/port_undef.inc"
#include "google/protobuf/io/coded_stream.h"
#include "google/protobuf/arena.h"
#include "google/protobuf/arenastring.h"
#include "google/protobuf/generated_message_bases.h"
#include "google/protobuf/generated_message_tctable_decl.h"
#include "google/protobuf/generated_message_util.h"
#include "google/protobuf/metadata_lite.h"
#include "google/protobuf/generated_message_reflection.h"
#include "google/protobuf/message.h"
#include "google/protobuf/repeated_field.h"  // IWYU pragma: export
#include "google/protobuf/extension_set.h"  // IWYU pragma: export
#include "google/protobuf/service.h"
#include "google/protobuf/unknown_field_set.h"
#include "proto/common/common.pb.h"
#include "proto/common/empty.pb.h"
#include "proto/common/session.pb.h"
#include "proto/common/c2gate.pb.h"
#include "proto/common/common_message.pb.h"
// @@protoc_insertion_point(includes)

// Must be included last.
#include "google/protobuf/port_def.inc"

#define PROTOBUF_INTERNAL_EXPORT_proto_2fcommon_2fcentre_5fservice_2eproto

namespace google {
namespace protobuf {
namespace internal {
class AnyMetadata;
}  // namespace internal
}  // namespace protobuf
}  // namespace google

// Internal implementation detail -- do not use these members.
struct TableStruct_proto_2fcommon_2fcentre_5fservice_2eproto {
  static const ::uint32_t offsets[];
};
extern const ::google::protobuf::internal::DescriptorTable
    descriptor_table_proto_2fcommon_2fcentre_5fservice_2eproto;
class CentrePlayerGameNodeEntryRequest;
struct CentrePlayerGameNodeEntryRequestDefaultTypeInternal;
extern CentrePlayerGameNodeEntryRequestDefaultTypeInternal _CentrePlayerGameNodeEntryRequest_default_instance_;
class EnterGameNodeSuccessRequest;
struct EnterGameNodeSuccessRequestDefaultTypeInternal;
extern EnterGameNodeSuccessRequestDefaultTypeInternal _EnterGameNodeSuccessRequest_default_instance_;
class GateClientMessageRequest;
struct GateClientMessageRequestDefaultTypeInternal;
extern GateClientMessageRequestDefaultTypeInternal _GateClientMessageRequest_default_instance_;
class LoginNodeLeaveGameRequest;
struct LoginNodeLeaveGameRequestDefaultTypeInternal;
extern LoginNodeLeaveGameRequestDefaultTypeInternal _LoginNodeLeaveGameRequest_default_instance_;
namespace google {
namespace protobuf {
}  // namespace protobuf
}  // namespace google


// ===================================================================


// -------------------------------------------------------------------

class LoginNodeLeaveGameRequest final : public ::google::protobuf::internal::ZeroFieldsBase
/* @@protoc_insertion_point(class_definition:LoginNodeLeaveGameRequest) */ {
 public:
  inline LoginNodeLeaveGameRequest() : LoginNodeLeaveGameRequest(nullptr) {}
  template <typename = void>
  explicit PROTOBUF_CONSTEXPR LoginNodeLeaveGameRequest(
      ::google::protobuf::internal::ConstantInitialized);

  inline LoginNodeLeaveGameRequest(const LoginNodeLeaveGameRequest& from) : LoginNodeLeaveGameRequest(nullptr, from) {}
  inline LoginNodeLeaveGameRequest(LoginNodeLeaveGameRequest&& from) noexcept
      : LoginNodeLeaveGameRequest(nullptr, std::move(from)) {}
  inline LoginNodeLeaveGameRequest& operator=(const LoginNodeLeaveGameRequest& from) {
    CopyFrom(from);
    return *this;
  }
  inline LoginNodeLeaveGameRequest& operator=(LoginNodeLeaveGameRequest&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
#ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
#endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const LoginNodeLeaveGameRequest& default_instance() {
    return *internal_default_instance();
  }
  static inline const LoginNodeLeaveGameRequest* internal_default_instance() {
    return reinterpret_cast<const LoginNodeLeaveGameRequest*>(
        &_LoginNodeLeaveGameRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 1;
  friend void swap(LoginNodeLeaveGameRequest& a, LoginNodeLeaveGameRequest& b) { a.Swap(&b); }
  inline void Swap(LoginNodeLeaveGameRequest* other) {
    if (other == this) return;
#ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr && GetArena() == other->GetArena()) {
#else   // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
#endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(LoginNodeLeaveGameRequest* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  LoginNodeLeaveGameRequest* New(::google::protobuf::Arena* arena = nullptr) const final {
    return ::google::protobuf::internal::ZeroFieldsBase::DefaultConstruct<LoginNodeLeaveGameRequest>(arena);
  }
  using ::google::protobuf::internal::ZeroFieldsBase::CopyFrom;
  inline void CopyFrom(const LoginNodeLeaveGameRequest& from) {
    ::google::protobuf::internal::ZeroFieldsBase::CopyImpl(*this, from);
  }
  using ::google::protobuf::internal::ZeroFieldsBase::MergeFrom;
  void MergeFrom(const LoginNodeLeaveGameRequest& from) {
    ::google::protobuf::internal::ZeroFieldsBase::MergeImpl(*this, from);
  }

  public:
 private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() { return "LoginNodeLeaveGameRequest"; }

 protected:
  explicit LoginNodeLeaveGameRequest(::google::protobuf::Arena* arena);
  LoginNodeLeaveGameRequest(::google::protobuf::Arena* arena, const LoginNodeLeaveGameRequest& from);
  LoginNodeLeaveGameRequest(::google::protobuf::Arena* arena, LoginNodeLeaveGameRequest&& from) noexcept
      : LoginNodeLeaveGameRequest(arena) {
    *this = ::std::move(from);
  }

 public:
  ::google::protobuf::Metadata GetMetadata() const final;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  // @@protoc_insertion_point(class_scope:LoginNodeLeaveGameRequest)
 private:
  class _Internal;
  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from);
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  friend struct ::TableStruct_proto_2fcommon_2fcentre_5fservice_2eproto;
};
// -------------------------------------------------------------------

class EnterGameNodeSuccessRequest final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:EnterGameNodeSuccessRequest) */ {
 public:
  inline EnterGameNodeSuccessRequest() : EnterGameNodeSuccessRequest(nullptr) {}
  ~EnterGameNodeSuccessRequest() override;
  template <typename = void>
  explicit PROTOBUF_CONSTEXPR EnterGameNodeSuccessRequest(
      ::google::protobuf::internal::ConstantInitialized);

  inline EnterGameNodeSuccessRequest(const EnterGameNodeSuccessRequest& from) : EnterGameNodeSuccessRequest(nullptr, from) {}
  inline EnterGameNodeSuccessRequest(EnterGameNodeSuccessRequest&& from) noexcept
      : EnterGameNodeSuccessRequest(nullptr, std::move(from)) {}
  inline EnterGameNodeSuccessRequest& operator=(const EnterGameNodeSuccessRequest& from) {
    CopyFrom(from);
    return *this;
  }
  inline EnterGameNodeSuccessRequest& operator=(EnterGameNodeSuccessRequest&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
#ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
#endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const EnterGameNodeSuccessRequest& default_instance() {
    return *internal_default_instance();
  }
  static inline const EnterGameNodeSuccessRequest* internal_default_instance() {
    return reinterpret_cast<const EnterGameNodeSuccessRequest*>(
        &_EnterGameNodeSuccessRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 2;
  friend void swap(EnterGameNodeSuccessRequest& a, EnterGameNodeSuccessRequest& b) { a.Swap(&b); }
  inline void Swap(EnterGameNodeSuccessRequest* other) {
    if (other == this) return;
#ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr && GetArena() == other->GetArena()) {
#else   // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
#endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(EnterGameNodeSuccessRequest* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  EnterGameNodeSuccessRequest* New(::google::protobuf::Arena* arena = nullptr) const final {
    return ::google::protobuf::Message::DefaultConstruct<EnterGameNodeSuccessRequest>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const EnterGameNodeSuccessRequest& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const EnterGameNodeSuccessRequest& from) { EnterGameNodeSuccessRequest::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  ::size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::google::protobuf::internal::ParseContext* ctx) final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(EnterGameNodeSuccessRequest* other);
 private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() { return "EnterGameNodeSuccessRequest"; }

 protected:
  explicit EnterGameNodeSuccessRequest(::google::protobuf::Arena* arena);
  EnterGameNodeSuccessRequest(::google::protobuf::Arena* arena, const EnterGameNodeSuccessRequest& from);
  EnterGameNodeSuccessRequest(::google::protobuf::Arena* arena, EnterGameNodeSuccessRequest&& from) noexcept
      : EnterGameNodeSuccessRequest(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::MessageLite::ClassData* GetClassData()
      const final;

 public:
  ::google::protobuf::Metadata GetMetadata() const final;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kPlayerIdFieldNumber = 1,
    kGameNodeIdFieldNumber = 2,
  };
  // uint64 player_id = 1;
  void clear_player_id() ;
  ::uint64_t player_id() const;
  void set_player_id(::uint64_t value);

  private:
  ::uint64_t _internal_player_id() const;
  void _internal_set_player_id(::uint64_t value);

  public:
  // uint32 game_node_id = 2;
  void clear_game_node_id() ;
  ::uint32_t game_node_id() const;
  void set_game_node_id(::uint32_t value);

  private:
  ::uint32_t _internal_game_node_id() const;
  void _internal_set_game_node_id(::uint32_t value);

  public:
  // @@protoc_insertion_point(class_scope:EnterGameNodeSuccessRequest)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      1, 2, 0,
      0, 2>
      _table_;
  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from);
    ::uint64_t player_id_;
    ::uint32_t game_node_id_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_proto_2fcommon_2fcentre_5fservice_2eproto;
};
// -------------------------------------------------------------------

class GateClientMessageRequest final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:GateClientMessageRequest) */ {
 public:
  inline GateClientMessageRequest() : GateClientMessageRequest(nullptr) {}
  ~GateClientMessageRequest() override;
  template <typename = void>
  explicit PROTOBUF_CONSTEXPR GateClientMessageRequest(
      ::google::protobuf::internal::ConstantInitialized);

  inline GateClientMessageRequest(const GateClientMessageRequest& from) : GateClientMessageRequest(nullptr, from) {}
  inline GateClientMessageRequest(GateClientMessageRequest&& from) noexcept
      : GateClientMessageRequest(nullptr, std::move(from)) {}
  inline GateClientMessageRequest& operator=(const GateClientMessageRequest& from) {
    CopyFrom(from);
    return *this;
  }
  inline GateClientMessageRequest& operator=(GateClientMessageRequest&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
#ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
#endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const GateClientMessageRequest& default_instance() {
    return *internal_default_instance();
  }
  static inline const GateClientMessageRequest* internal_default_instance() {
    return reinterpret_cast<const GateClientMessageRequest*>(
        &_GateClientMessageRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 0;
  friend void swap(GateClientMessageRequest& a, GateClientMessageRequest& b) { a.Swap(&b); }
  inline void Swap(GateClientMessageRequest* other) {
    if (other == this) return;
#ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr && GetArena() == other->GetArena()) {
#else   // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
#endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(GateClientMessageRequest* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  GateClientMessageRequest* New(::google::protobuf::Arena* arena = nullptr) const final {
    return ::google::protobuf::Message::DefaultConstruct<GateClientMessageRequest>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const GateClientMessageRequest& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const GateClientMessageRequest& from) { GateClientMessageRequest::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  ::size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::google::protobuf::internal::ParseContext* ctx) final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(GateClientMessageRequest* other);
 private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() { return "GateClientMessageRequest"; }

 protected:
  explicit GateClientMessageRequest(::google::protobuf::Arena* arena);
  GateClientMessageRequest(::google::protobuf::Arena* arena, const GateClientMessageRequest& from);
  GateClientMessageRequest(::google::protobuf::Arena* arena, GateClientMessageRequest&& from) noexcept
      : GateClientMessageRequest(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::MessageLite::ClassData* GetClassData()
      const final;

 public:
  ::google::protobuf::Metadata GetMetadata() const final;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kRpcClientFieldNumber = 1,
  };
  // .NetworkAddress rpc_client = 1;
  bool has_rpc_client() const;
  void clear_rpc_client() ;
  const ::NetworkAddress& rpc_client() const;
  PROTOBUF_NODISCARD ::NetworkAddress* release_rpc_client();
  ::NetworkAddress* mutable_rpc_client();
  void set_allocated_rpc_client(::NetworkAddress* value);
  void unsafe_arena_set_allocated_rpc_client(::NetworkAddress* value);
  ::NetworkAddress* unsafe_arena_release_rpc_client();

  private:
  const ::NetworkAddress& _internal_rpc_client() const;
  ::NetworkAddress* _internal_mutable_rpc_client();

  public:
  // @@protoc_insertion_point(class_scope:GateClientMessageRequest)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      0, 1, 1,
      0, 2>
      _table_;
  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from);
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    ::NetworkAddress* rpc_client_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_proto_2fcommon_2fcentre_5fservice_2eproto;
};
// -------------------------------------------------------------------

class CentrePlayerGameNodeEntryRequest final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:CentrePlayerGameNodeEntryRequest) */ {
 public:
  inline CentrePlayerGameNodeEntryRequest() : CentrePlayerGameNodeEntryRequest(nullptr) {}
  ~CentrePlayerGameNodeEntryRequest() override;
  template <typename = void>
  explicit PROTOBUF_CONSTEXPR CentrePlayerGameNodeEntryRequest(
      ::google::protobuf::internal::ConstantInitialized);

  inline CentrePlayerGameNodeEntryRequest(const CentrePlayerGameNodeEntryRequest& from) : CentrePlayerGameNodeEntryRequest(nullptr, from) {}
  inline CentrePlayerGameNodeEntryRequest(CentrePlayerGameNodeEntryRequest&& from) noexcept
      : CentrePlayerGameNodeEntryRequest(nullptr, std::move(from)) {}
  inline CentrePlayerGameNodeEntryRequest& operator=(const CentrePlayerGameNodeEntryRequest& from) {
    CopyFrom(from);
    return *this;
  }
  inline CentrePlayerGameNodeEntryRequest& operator=(CentrePlayerGameNodeEntryRequest&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
#ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
#endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const CentrePlayerGameNodeEntryRequest& default_instance() {
    return *internal_default_instance();
  }
  static inline const CentrePlayerGameNodeEntryRequest* internal_default_instance() {
    return reinterpret_cast<const CentrePlayerGameNodeEntryRequest*>(
        &_CentrePlayerGameNodeEntryRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 3;
  friend void swap(CentrePlayerGameNodeEntryRequest& a, CentrePlayerGameNodeEntryRequest& b) { a.Swap(&b); }
  inline void Swap(CentrePlayerGameNodeEntryRequest* other) {
    if (other == this) return;
#ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr && GetArena() == other->GetArena()) {
#else   // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
#endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(CentrePlayerGameNodeEntryRequest* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  CentrePlayerGameNodeEntryRequest* New(::google::protobuf::Arena* arena = nullptr) const final {
    return ::google::protobuf::Message::DefaultConstruct<CentrePlayerGameNodeEntryRequest>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const CentrePlayerGameNodeEntryRequest& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const CentrePlayerGameNodeEntryRequest& from) { CentrePlayerGameNodeEntryRequest::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  ::size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::google::protobuf::internal::ParseContext* ctx) final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(CentrePlayerGameNodeEntryRequest* other);
 private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() { return "CentrePlayerGameNodeEntryRequest"; }

 protected:
  explicit CentrePlayerGameNodeEntryRequest(::google::protobuf::Arena* arena);
  CentrePlayerGameNodeEntryRequest(::google::protobuf::Arena* arena, const CentrePlayerGameNodeEntryRequest& from);
  CentrePlayerGameNodeEntryRequest(::google::protobuf::Arena* arena, CentrePlayerGameNodeEntryRequest&& from) noexcept
      : CentrePlayerGameNodeEntryRequest(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::MessageLite::ClassData* GetClassData()
      const final;

 public:
  ::google::protobuf::Metadata GetMetadata() const final;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kClientMsgBodyFieldNumber = 1,
    kSessionInfoFieldNumber = 2,
  };
  // .EnterGameRequest client_msg_body = 1;
  bool has_client_msg_body() const;
  void clear_client_msg_body() ;
  const ::EnterGameRequest& client_msg_body() const;
  PROTOBUF_NODISCARD ::EnterGameRequest* release_client_msg_body();
  ::EnterGameRequest* mutable_client_msg_body();
  void set_allocated_client_msg_body(::EnterGameRequest* value);
  void unsafe_arena_set_allocated_client_msg_body(::EnterGameRequest* value);
  ::EnterGameRequest* unsafe_arena_release_client_msg_body();

  private:
  const ::EnterGameRequest& _internal_client_msg_body() const;
  ::EnterGameRequest* _internal_mutable_client_msg_body();

  public:
  // .SessionDetails session_info = 2;
  bool has_session_info() const;
  void clear_session_info() ;
  const ::SessionDetails& session_info() const;
  PROTOBUF_NODISCARD ::SessionDetails* release_session_info();
  ::SessionDetails* mutable_session_info();
  void set_allocated_session_info(::SessionDetails* value);
  void unsafe_arena_set_allocated_session_info(::SessionDetails* value);
  ::SessionDetails* unsafe_arena_release_session_info();

  private:
  const ::SessionDetails& _internal_session_info() const;
  ::SessionDetails* _internal_mutable_session_info();

  public:
  // @@protoc_insertion_point(class_scope:CentrePlayerGameNodeEntryRequest)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      1, 2, 2,
      0, 2>
      _table_;
  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from);
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    ::EnterGameRequest* client_msg_body_;
    ::SessionDetails* session_info_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_proto_2fcommon_2fcentre_5fservice_2eproto;
};

// ===================================================================


// -------------------------------------------------------------------

class CentreService_Stub;
class CentreService : public ::google::protobuf::Service {
 protected:
  CentreService() = default;

 public:
  using Stub = CentreService_Stub;

  CentreService(const CentreService&) = delete;
  CentreService& operator=(const CentreService&) = delete;
  virtual ~CentreService() = default;

  static const ::google::protobuf::ServiceDescriptor* descriptor();

  virtual void RegisterGameNode(::google::protobuf::RpcController* controller,
                        const ::RegisterGameNodeRequest* request,
                        ::Empty* response,
                        ::google::protobuf::Closure* done);
  virtual void RegisterGateNode(::google::protobuf::RpcController* controller,
                        const ::RegisterGateNodeRequest* request,
                        ::Empty* response,
                        ::google::protobuf::Closure* done);
  virtual void GatePlayerService(::google::protobuf::RpcController* controller,
                        const ::GateClientMessageRequest* request,
                        ::Empty* response,
                        ::google::protobuf::Closure* done);
  virtual void GateSessionDisconnect(::google::protobuf::RpcController* controller,
                        const ::GateSessionDisconnectRequest* request,
                        ::Empty* response,
                        ::google::protobuf::Closure* done);
  virtual void LoginNodeAccountLogin(::google::protobuf::RpcController* controller,
                        const ::LoginRequest* request,
                        ::LoginResponse* response,
                        ::google::protobuf::Closure* done);
  virtual void LoginNodeEnterGame(::google::protobuf::RpcController* controller,
                        const ::CentrePlayerGameNodeEntryRequest* request,
                        ::Empty* response,
                        ::google::protobuf::Closure* done);
  virtual void LoginNodeLeaveGame(::google::protobuf::RpcController* controller,
                        const ::LoginNodeLeaveGameRequest* request,
                        ::Empty* response,
                        ::google::protobuf::Closure* done);
  virtual void LoginNodeSessionDisconnect(::google::protobuf::RpcController* controller,
                        const ::GateSessionDisconnectRequest* request,
                        ::Empty* response,
                        ::google::protobuf::Closure* done);
  virtual void PlayerService(::google::protobuf::RpcController* controller,
                        const ::NodeRouteMessageRequest* request,
                        ::NodeRouteMessageResponse* response,
                        ::google::protobuf::Closure* done);
  virtual void EnterGsSucceed(::google::protobuf::RpcController* controller,
                        const ::EnterGameNodeSuccessRequest* request,
                        ::Empty* response,
                        ::google::protobuf::Closure* done);
  virtual void RouteNodeStringMsg(::google::protobuf::RpcController* controller,
                        const ::RouteMsgStringRequest* request,
                        ::RouteMsgStringResponse* response,
                        ::google::protobuf::Closure* done);
  virtual void RoutePlayerStringMsg(::google::protobuf::RpcController* controller,
                        const ::RoutePlayerMsgStringRequest* request,
                        ::RoutePlayerMsgStringResponse* response,
                        ::google::protobuf::Closure* done);
  virtual void UnRegisterGameNode(::google::protobuf::RpcController* controller,
                        const ::UnRegisterGameNodeRequest* request,
                        ::Empty* response,
                        ::google::protobuf::Closure* done);

  // implements Service ----------------------------------------------
  const ::google::protobuf::ServiceDescriptor* GetDescriptor() override;

  void CallMethod(const ::google::protobuf::MethodDescriptor* method,
                  ::google::protobuf::RpcController* controller,
                  const ::google::protobuf::Message* request,
                  ::google::protobuf::Message* response,
                  ::google::protobuf::Closure* done) override;

  const ::google::protobuf::Message& GetRequestPrototype(
      const ::google::protobuf::MethodDescriptor* method) const override;

  const ::google::protobuf::Message& GetResponsePrototype(
      const ::google::protobuf::MethodDescriptor* method) const override;
};

class CentreService_Stub final : public CentreService {
 public:
  CentreService_Stub(::google::protobuf::RpcChannel* channel);
  CentreService_Stub(::google::protobuf::RpcChannel* channel,
                   ::google::protobuf::Service::ChannelOwnership ownership);

  CentreService_Stub(const CentreService_Stub&) = delete;
  CentreService_Stub& operator=(const CentreService_Stub&) = delete;

  ~CentreService_Stub() override;

  inline ::google::protobuf::RpcChannel* channel() { return channel_; }

  // implements CentreService ------------------------------------------
  void RegisterGameNode(::google::protobuf::RpcController* controller,
                        const ::RegisterGameNodeRequest* request,
                        ::Empty* response,
                        ::google::protobuf::Closure* done) override;
  void RegisterGateNode(::google::protobuf::RpcController* controller,
                        const ::RegisterGateNodeRequest* request,
                        ::Empty* response,
                        ::google::protobuf::Closure* done) override;
  void GatePlayerService(::google::protobuf::RpcController* controller,
                        const ::GateClientMessageRequest* request,
                        ::Empty* response,
                        ::google::protobuf::Closure* done) override;
  void GateSessionDisconnect(::google::protobuf::RpcController* controller,
                        const ::GateSessionDisconnectRequest* request,
                        ::Empty* response,
                        ::google::protobuf::Closure* done) override;
  void LoginNodeAccountLogin(::google::protobuf::RpcController* controller,
                        const ::LoginRequest* request,
                        ::LoginResponse* response,
                        ::google::protobuf::Closure* done) override;
  void LoginNodeEnterGame(::google::protobuf::RpcController* controller,
                        const ::CentrePlayerGameNodeEntryRequest* request,
                        ::Empty* response,
                        ::google::protobuf::Closure* done) override;
  void LoginNodeLeaveGame(::google::protobuf::RpcController* controller,
                        const ::LoginNodeLeaveGameRequest* request,
                        ::Empty* response,
                        ::google::protobuf::Closure* done) override;
  void LoginNodeSessionDisconnect(::google::protobuf::RpcController* controller,
                        const ::GateSessionDisconnectRequest* request,
                        ::Empty* response,
                        ::google::protobuf::Closure* done) override;
  void PlayerService(::google::protobuf::RpcController* controller,
                        const ::NodeRouteMessageRequest* request,
                        ::NodeRouteMessageResponse* response,
                        ::google::protobuf::Closure* done) override;
  void EnterGsSucceed(::google::protobuf::RpcController* controller,
                        const ::EnterGameNodeSuccessRequest* request,
                        ::Empty* response,
                        ::google::protobuf::Closure* done) override;
  void RouteNodeStringMsg(::google::protobuf::RpcController* controller,
                        const ::RouteMsgStringRequest* request,
                        ::RouteMsgStringResponse* response,
                        ::google::protobuf::Closure* done) override;
  void RoutePlayerStringMsg(::google::protobuf::RpcController* controller,
                        const ::RoutePlayerMsgStringRequest* request,
                        ::RoutePlayerMsgStringResponse* response,
                        ::google::protobuf::Closure* done) override;
  void UnRegisterGameNode(::google::protobuf::RpcController* controller,
                        const ::UnRegisterGameNodeRequest* request,
                        ::Empty* response,
                        ::google::protobuf::Closure* done) override;

 private:
  ::google::protobuf::RpcChannel* channel_;
  bool owns_channel_;
};
// ===================================================================



// ===================================================================


#ifdef __GNUC__
#pragma GCC diagnostic push
#pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif  // __GNUC__
// -------------------------------------------------------------------

// GateClientMessageRequest

// .NetworkAddress rpc_client = 1;
inline bool GateClientMessageRequest::has_rpc_client() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.rpc_client_ != nullptr);
  return value;
}
inline const ::NetworkAddress& GateClientMessageRequest::_internal_rpc_client() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  const ::NetworkAddress* p = _impl_.rpc_client_;
  return p != nullptr ? *p : reinterpret_cast<const ::NetworkAddress&>(::_NetworkAddress_default_instance_);
}
inline const ::NetworkAddress& GateClientMessageRequest::rpc_client() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:GateClientMessageRequest.rpc_client)
  return _internal_rpc_client();
}
inline void GateClientMessageRequest::unsafe_arena_set_allocated_rpc_client(::NetworkAddress* value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.rpc_client_);
  }
  _impl_.rpc_client_ = reinterpret_cast<::NetworkAddress*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:GateClientMessageRequest.rpc_client)
}
inline ::NetworkAddress* GateClientMessageRequest::release_rpc_client() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::NetworkAddress* released = _impl_.rpc_client_;
  _impl_.rpc_client_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
  auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
  released = ::google::protobuf::internal::DuplicateIfNonNull(released);
  if (GetArena() == nullptr) {
    delete old;
  }
#else   // PROTOBUF_FORCE_COPY_IN_RELEASE
  if (GetArena() != nullptr) {
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
  }
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
  return released;
}
inline ::NetworkAddress* GateClientMessageRequest::unsafe_arena_release_rpc_client() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  // @@protoc_insertion_point(field_release:GateClientMessageRequest.rpc_client)

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::NetworkAddress* temp = _impl_.rpc_client_;
  _impl_.rpc_client_ = nullptr;
  return temp;
}
inline ::NetworkAddress* GateClientMessageRequest::_internal_mutable_rpc_client() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  if (_impl_.rpc_client_ == nullptr) {
    auto* p = ::google::protobuf::Message::DefaultConstruct<::NetworkAddress>(GetArena());
    _impl_.rpc_client_ = reinterpret_cast<::NetworkAddress*>(p);
  }
  return _impl_.rpc_client_;
}
inline ::NetworkAddress* GateClientMessageRequest::mutable_rpc_client() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  _impl_._has_bits_[0] |= 0x00000001u;
  ::NetworkAddress* _msg = _internal_mutable_rpc_client();
  // @@protoc_insertion_point(field_mutable:GateClientMessageRequest.rpc_client)
  return _msg;
}
inline void GateClientMessageRequest::set_allocated_rpc_client(::NetworkAddress* value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  if (message_arena == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.rpc_client_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = reinterpret_cast<::google::protobuf::MessageLite*>(value)->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }

  _impl_.rpc_client_ = reinterpret_cast<::NetworkAddress*>(value);
  // @@protoc_insertion_point(field_set_allocated:GateClientMessageRequest.rpc_client)
}

// -------------------------------------------------------------------

// LoginNodeLeaveGameRequest

// -------------------------------------------------------------------

// EnterGameNodeSuccessRequest

// uint64 player_id = 1;
inline void EnterGameNodeSuccessRequest::clear_player_id() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.player_id_ = ::uint64_t{0u};
}
inline ::uint64_t EnterGameNodeSuccessRequest::player_id() const {
  // @@protoc_insertion_point(field_get:EnterGameNodeSuccessRequest.player_id)
  return _internal_player_id();
}
inline void EnterGameNodeSuccessRequest::set_player_id(::uint64_t value) {
  _internal_set_player_id(value);
  // @@protoc_insertion_point(field_set:EnterGameNodeSuccessRequest.player_id)
}
inline ::uint64_t EnterGameNodeSuccessRequest::_internal_player_id() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.player_id_;
}
inline void EnterGameNodeSuccessRequest::_internal_set_player_id(::uint64_t value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.player_id_ = value;
}

// uint32 game_node_id = 2;
inline void EnterGameNodeSuccessRequest::clear_game_node_id() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.game_node_id_ = 0u;
}
inline ::uint32_t EnterGameNodeSuccessRequest::game_node_id() const {
  // @@protoc_insertion_point(field_get:EnterGameNodeSuccessRequest.game_node_id)
  return _internal_game_node_id();
}
inline void EnterGameNodeSuccessRequest::set_game_node_id(::uint32_t value) {
  _internal_set_game_node_id(value);
  // @@protoc_insertion_point(field_set:EnterGameNodeSuccessRequest.game_node_id)
}
inline ::uint32_t EnterGameNodeSuccessRequest::_internal_game_node_id() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.game_node_id_;
}
inline void EnterGameNodeSuccessRequest::_internal_set_game_node_id(::uint32_t value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.game_node_id_ = value;
}

// -------------------------------------------------------------------

// CentrePlayerGameNodeEntryRequest

// .EnterGameRequest client_msg_body = 1;
inline bool CentrePlayerGameNodeEntryRequest::has_client_msg_body() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.client_msg_body_ != nullptr);
  return value;
}
inline const ::EnterGameRequest& CentrePlayerGameNodeEntryRequest::_internal_client_msg_body() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  const ::EnterGameRequest* p = _impl_.client_msg_body_;
  return p != nullptr ? *p : reinterpret_cast<const ::EnterGameRequest&>(::_EnterGameRequest_default_instance_);
}
inline const ::EnterGameRequest& CentrePlayerGameNodeEntryRequest::client_msg_body() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:CentrePlayerGameNodeEntryRequest.client_msg_body)
  return _internal_client_msg_body();
}
inline void CentrePlayerGameNodeEntryRequest::unsafe_arena_set_allocated_client_msg_body(::EnterGameRequest* value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.client_msg_body_);
  }
  _impl_.client_msg_body_ = reinterpret_cast<::EnterGameRequest*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:CentrePlayerGameNodeEntryRequest.client_msg_body)
}
inline ::EnterGameRequest* CentrePlayerGameNodeEntryRequest::release_client_msg_body() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::EnterGameRequest* released = _impl_.client_msg_body_;
  _impl_.client_msg_body_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
  auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
  released = ::google::protobuf::internal::DuplicateIfNonNull(released);
  if (GetArena() == nullptr) {
    delete old;
  }
#else   // PROTOBUF_FORCE_COPY_IN_RELEASE
  if (GetArena() != nullptr) {
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
  }
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
  return released;
}
inline ::EnterGameRequest* CentrePlayerGameNodeEntryRequest::unsafe_arena_release_client_msg_body() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  // @@protoc_insertion_point(field_release:CentrePlayerGameNodeEntryRequest.client_msg_body)

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::EnterGameRequest* temp = _impl_.client_msg_body_;
  _impl_.client_msg_body_ = nullptr;
  return temp;
}
inline ::EnterGameRequest* CentrePlayerGameNodeEntryRequest::_internal_mutable_client_msg_body() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  if (_impl_.client_msg_body_ == nullptr) {
    auto* p = ::google::protobuf::Message::DefaultConstruct<::EnterGameRequest>(GetArena());
    _impl_.client_msg_body_ = reinterpret_cast<::EnterGameRequest*>(p);
  }
  return _impl_.client_msg_body_;
}
inline ::EnterGameRequest* CentrePlayerGameNodeEntryRequest::mutable_client_msg_body() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  _impl_._has_bits_[0] |= 0x00000001u;
  ::EnterGameRequest* _msg = _internal_mutable_client_msg_body();
  // @@protoc_insertion_point(field_mutable:CentrePlayerGameNodeEntryRequest.client_msg_body)
  return _msg;
}
inline void CentrePlayerGameNodeEntryRequest::set_allocated_client_msg_body(::EnterGameRequest* value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  if (message_arena == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.client_msg_body_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = reinterpret_cast<::google::protobuf::MessageLite*>(value)->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }

  _impl_.client_msg_body_ = reinterpret_cast<::EnterGameRequest*>(value);
  // @@protoc_insertion_point(field_set_allocated:CentrePlayerGameNodeEntryRequest.client_msg_body)
}

// .SessionDetails session_info = 2;
inline bool CentrePlayerGameNodeEntryRequest::has_session_info() const {
  bool value = (_impl_._has_bits_[0] & 0x00000002u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.session_info_ != nullptr);
  return value;
}
inline const ::SessionDetails& CentrePlayerGameNodeEntryRequest::_internal_session_info() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  const ::SessionDetails* p = _impl_.session_info_;
  return p != nullptr ? *p : reinterpret_cast<const ::SessionDetails&>(::_SessionDetails_default_instance_);
}
inline const ::SessionDetails& CentrePlayerGameNodeEntryRequest::session_info() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:CentrePlayerGameNodeEntryRequest.session_info)
  return _internal_session_info();
}
inline void CentrePlayerGameNodeEntryRequest::unsafe_arena_set_allocated_session_info(::SessionDetails* value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.session_info_);
  }
  _impl_.session_info_ = reinterpret_cast<::SessionDetails*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000002u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000002u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:CentrePlayerGameNodeEntryRequest.session_info)
}
inline ::SessionDetails* CentrePlayerGameNodeEntryRequest::release_session_info() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);

  _impl_._has_bits_[0] &= ~0x00000002u;
  ::SessionDetails* released = _impl_.session_info_;
  _impl_.session_info_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
  auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
  released = ::google::protobuf::internal::DuplicateIfNonNull(released);
  if (GetArena() == nullptr) {
    delete old;
  }
#else   // PROTOBUF_FORCE_COPY_IN_RELEASE
  if (GetArena() != nullptr) {
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
  }
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
  return released;
}
inline ::SessionDetails* CentrePlayerGameNodeEntryRequest::unsafe_arena_release_session_info() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  // @@protoc_insertion_point(field_release:CentrePlayerGameNodeEntryRequest.session_info)

  _impl_._has_bits_[0] &= ~0x00000002u;
  ::SessionDetails* temp = _impl_.session_info_;
  _impl_.session_info_ = nullptr;
  return temp;
}
inline ::SessionDetails* CentrePlayerGameNodeEntryRequest::_internal_mutable_session_info() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  if (_impl_.session_info_ == nullptr) {
    auto* p = ::google::protobuf::Message::DefaultConstruct<::SessionDetails>(GetArena());
    _impl_.session_info_ = reinterpret_cast<::SessionDetails*>(p);
  }
  return _impl_.session_info_;
}
inline ::SessionDetails* CentrePlayerGameNodeEntryRequest::mutable_session_info() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  _impl_._has_bits_[0] |= 0x00000002u;
  ::SessionDetails* _msg = _internal_mutable_session_info();
  // @@protoc_insertion_point(field_mutable:CentrePlayerGameNodeEntryRequest.session_info)
  return _msg;
}
inline void CentrePlayerGameNodeEntryRequest::set_allocated_session_info(::SessionDetails* value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  if (message_arena == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.session_info_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = reinterpret_cast<::google::protobuf::MessageLite*>(value)->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000002u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000002u;
  }

  _impl_.session_info_ = reinterpret_cast<::SessionDetails*>(value);
  // @@protoc_insertion_point(field_set_allocated:CentrePlayerGameNodeEntryRequest.session_info)
}

#ifdef __GNUC__
#pragma GCC diagnostic pop
#endif  // __GNUC__

// @@protoc_insertion_point(namespace_scope)


// @@protoc_insertion_point(global_scope)

#include "google/protobuf/port_undef.inc"

#endif  // GOOGLE_PROTOBUF_INCLUDED_proto_2fcommon_2fcentre_5fservice_2eproto_2epb_2eh
