// Generated by the protocol buffer compiler.  DO NOT EDIT!
// NO CHECKED-IN PROTOBUF GENCODE
// source: proto/common/deploy_service.proto
// Protobuf C++ Version: 5.29.0

#include "proto/common/deploy_service.pb.h"

#include <algorithm>
#include <type_traits>
#include "google/protobuf/io/coded_stream.h"
#include "google/protobuf/generated_message_tctable_impl.h"
#include "google/protobuf/extension_set.h"
#include "google/protobuf/generated_message_util.h"
#include "google/protobuf/wire_format_lite.h"
#include "google/protobuf/descriptor.h"
#include "google/protobuf/generated_message_reflection.h"
#include "google/protobuf/reflection_ops.h"
#include "google/protobuf/wire_format.h"
// @@protoc_insertion_point(includes)

// Must be included last.
#include "google/protobuf/port_def.inc"
PROTOBUF_PRAGMA_INIT_SEG
namespace _pb = ::google::protobuf;
namespace _pbi = ::google::protobuf::internal;
namespace _fl = ::google::protobuf::internal::field_layout;

inline constexpr redis_node_db::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : ip_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        id_{0u},
        port_{0u},
        zone_id_{0u},
        _cached_size_{0} {}

template <typename>
PROTOBUF_CONSTEXPR redis_node_db::redis_node_db(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct redis_node_dbDefaultTypeInternal {
  PROTOBUF_CONSTEXPR redis_node_dbDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~redis_node_dbDefaultTypeInternal() {}
  union {
    redis_node_db _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 redis_node_dbDefaultTypeInternal _redis_node_db_default_instance_;
              template <typename>
PROTOBUF_CONSTEXPR RenewLeaseIDResponse::RenewLeaseIDResponse(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::internal::ZeroFieldsBase(_class_data_.base()){}
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::internal::ZeroFieldsBase() {
}
#endif  // PROTOBUF_CUSTOM_VTABLE
struct RenewLeaseIDResponseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR RenewLeaseIDResponseDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~RenewLeaseIDResponseDefaultTypeInternal() {}
  union {
    RenewLeaseIDResponse _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 RenewLeaseIDResponseDefaultTypeInternal _RenewLeaseIDResponse_default_instance_;

inline constexpr RenewLeaseIDRequest::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : lease_id_{::uint64_t{0u}},
        _cached_size_{0} {}

template <typename>
PROTOBUF_CONSTEXPR RenewLeaseIDRequest::RenewLeaseIDRequest(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct RenewLeaseIDRequestDefaultTypeInternal {
  PROTOBUF_CONSTEXPR RenewLeaseIDRequestDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~RenewLeaseIDRequestDefaultTypeInternal() {}
  union {
    RenewLeaseIDRequest _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 RenewLeaseIDRequestDefaultTypeInternal _RenewLeaseIDRequest_default_instance_;

inline constexpr ReleaseIDResponse::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : success_{false},
        _cached_size_{0} {}

template <typename>
PROTOBUF_CONSTEXPR ReleaseIDResponse::ReleaseIDResponse(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct ReleaseIDResponseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR ReleaseIDResponseDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~ReleaseIDResponseDefaultTypeInternal() {}
  union {
    ReleaseIDResponse _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 ReleaseIDResponseDefaultTypeInternal _ReleaseIDResponse_default_instance_;

inline constexpr ReleaseIDRequest::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : id_{::uint64_t{0u}},
        lease_id_{::uint64_t{0u}},
        node_type_{0u},
        _cached_size_{0} {}

template <typename>
PROTOBUF_CONSTEXPR ReleaseIDRequest::ReleaseIDRequest(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct ReleaseIDRequestDefaultTypeInternal {
  PROTOBUF_CONSTEXPR ReleaseIDRequestDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~ReleaseIDRequestDefaultTypeInternal() {}
  union {
    ReleaseIDRequest _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 ReleaseIDRequestDefaultTypeInternal _ReleaseIDRequest_default_instance_;

inline constexpr NodeInfoRequest::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : zone_id_{0u},
        node_type_{0u},
        _cached_size_{0} {}

template <typename>
PROTOBUF_CONSTEXPR NodeInfoRequest::NodeInfoRequest(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct NodeInfoRequestDefaultTypeInternal {
  PROTOBUF_CONSTEXPR NodeInfoRequestDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~NodeInfoRequestDefaultTypeInternal() {}
  union {
    NodeInfoRequest _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 NodeInfoRequestDefaultTypeInternal _NodeInfoRequest_default_instance_;

inline constexpr GetIDResponse::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : id_{::uint64_t{0u}},
        lease_id_{::uint64_t{0u}},
        _cached_size_{0} {}

template <typename>
PROTOBUF_CONSTEXPR GetIDResponse::GetIDResponse(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct GetIDResponseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR GetIDResponseDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~GetIDResponseDefaultTypeInternal() {}
  union {
    GetIDResponse _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 GetIDResponseDefaultTypeInternal _GetIDResponse_default_instance_;

inline constexpr GetIDRequest::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : client_name_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        node_type_{0u},
        _cached_size_{0} {}

template <typename>
PROTOBUF_CONSTEXPR GetIDRequest::GetIDRequest(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct GetIDRequestDefaultTypeInternal {
  PROTOBUF_CONSTEXPR GetIDRequestDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~GetIDRequestDefaultTypeInternal() {}
  union {
    GetIDRequest _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 GetIDRequestDefaultTypeInternal _GetIDRequest_default_instance_;

inline constexpr redis_node_list_db::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : redis_info_{},
        _cached_size_{0} {}

template <typename>
PROTOBUF_CONSTEXPR redis_node_list_db::redis_node_list_db(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct redis_node_list_dbDefaultTypeInternal {
  PROTOBUF_CONSTEXPR redis_node_list_dbDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~redis_node_list_dbDefaultTypeInternal() {}
  union {
    redis_node_list_db _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 redis_node_list_dbDefaultTypeInternal _redis_node_list_db_default_instance_;

inline constexpr NodeInfoResponse::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        redis_info_{nullptr},
        lease_id_{::uint64_t{0u}},
        node_id_{0u} {}

template <typename>
PROTOBUF_CONSTEXPR NodeInfoResponse::NodeInfoResponse(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct NodeInfoResponseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR NodeInfoResponseDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~NodeInfoResponseDefaultTypeInternal() {}
  union {
    NodeInfoResponse _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 NodeInfoResponseDefaultTypeInternal _NodeInfoResponse_default_instance_;
static constexpr const ::_pb::EnumDescriptor**
    file_level_enum_descriptors_proto_2fcommon_2fdeploy_5fservice_2eproto = nullptr;
static constexpr const ::_pb::ServiceDescriptor**
    file_level_service_descriptors_proto_2fcommon_2fdeploy_5fservice_2eproto = nullptr;
const ::uint32_t
    TableStruct_proto_2fcommon_2fdeploy_5fservice_2eproto::offsets[] ABSL_ATTRIBUTE_SECTION_VARIABLE(
        protodesc_cold) = {
        ~0u,  // no _has_bits_
        PROTOBUF_FIELD_OFFSET(::redis_node_list_db, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::redis_node_list_db, _impl_.redis_info_),
        ~0u,  // no _has_bits_
        PROTOBUF_FIELD_OFFSET(::redis_node_db, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::redis_node_db, _impl_.id_),
        PROTOBUF_FIELD_OFFSET(::redis_node_db, _impl_.ip_),
        PROTOBUF_FIELD_OFFSET(::redis_node_db, _impl_.port_),
        PROTOBUF_FIELD_OFFSET(::redis_node_db, _impl_.zone_id_),
        ~0u,  // no _has_bits_
        PROTOBUF_FIELD_OFFSET(::NodeInfoRequest, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::NodeInfoRequest, _impl_.zone_id_),
        PROTOBUF_FIELD_OFFSET(::NodeInfoRequest, _impl_.node_type_),
        PROTOBUF_FIELD_OFFSET(::NodeInfoResponse, _impl_._has_bits_),
        PROTOBUF_FIELD_OFFSET(::NodeInfoResponse, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::NodeInfoResponse, _impl_.redis_info_),
        PROTOBUF_FIELD_OFFSET(::NodeInfoResponse, _impl_.node_id_),
        PROTOBUF_FIELD_OFFSET(::NodeInfoResponse, _impl_.lease_id_),
        0,
        ~0u,
        ~0u,
        ~0u,  // no _has_bits_
        PROTOBUF_FIELD_OFFSET(::GetIDRequest, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::GetIDRequest, _impl_.client_name_),
        PROTOBUF_FIELD_OFFSET(::GetIDRequest, _impl_.node_type_),
        ~0u,  // no _has_bits_
        PROTOBUF_FIELD_OFFSET(::GetIDResponse, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::GetIDResponse, _impl_.id_),
        PROTOBUF_FIELD_OFFSET(::GetIDResponse, _impl_.lease_id_),
        ~0u,  // no _has_bits_
        PROTOBUF_FIELD_OFFSET(::ReleaseIDRequest, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::ReleaseIDRequest, _impl_.id_),
        PROTOBUF_FIELD_OFFSET(::ReleaseIDRequest, _impl_.node_type_),
        PROTOBUF_FIELD_OFFSET(::ReleaseIDRequest, _impl_.lease_id_),
        ~0u,  // no _has_bits_
        PROTOBUF_FIELD_OFFSET(::ReleaseIDResponse, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::ReleaseIDResponse, _impl_.success_),
        ~0u,  // no _has_bits_
        PROTOBUF_FIELD_OFFSET(::RenewLeaseIDRequest, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::RenewLeaseIDRequest, _impl_.lease_id_),
        ~0u,  // no _has_bits_
        PROTOBUF_FIELD_OFFSET(::RenewLeaseIDResponse, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
};

static const ::_pbi::MigrationSchema
    schemas[] ABSL_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
        {0, -1, -1, sizeof(::redis_node_list_db)},
        {9, -1, -1, sizeof(::redis_node_db)},
        {21, -1, -1, sizeof(::NodeInfoRequest)},
        {31, 42, -1, sizeof(::NodeInfoResponse)},
        {45, -1, -1, sizeof(::GetIDRequest)},
        {55, -1, -1, sizeof(::GetIDResponse)},
        {65, -1, -1, sizeof(::ReleaseIDRequest)},
        {76, -1, -1, sizeof(::ReleaseIDResponse)},
        {85, -1, -1, sizeof(::RenewLeaseIDRequest)},
        {94, -1, -1, sizeof(::RenewLeaseIDResponse)},
};
static const ::_pb::Message* const file_default_instances[] = {
    &::_redis_node_list_db_default_instance_._instance,
    &::_redis_node_db_default_instance_._instance,
    &::_NodeInfoRequest_default_instance_._instance,
    &::_NodeInfoResponse_default_instance_._instance,
    &::_GetIDRequest_default_instance_._instance,
    &::_GetIDResponse_default_instance_._instance,
    &::_ReleaseIDRequest_default_instance_._instance,
    &::_ReleaseIDResponse_default_instance_._instance,
    &::_RenewLeaseIDRequest_default_instance_._instance,
    &::_RenewLeaseIDResponse_default_instance_._instance,
};
const char descriptor_table_protodef_proto_2fcommon_2fdeploy_5fservice_2eproto[] ABSL_ATTRIBUTE_SECTION_VARIABLE(
    protodesc_cold) = {
    "\n!proto/common/deploy_service.proto\032\032pro"
    "to/common/db_base.proto\"8\n\022redis_node_li"
    "st_db\022\"\n\nredis_info\030\001 \003(\0132\016.redis_node_d"
    "b\"h\n\rredis_node_db\022\n\n\002id\030\001 \001(\r\022\n\n\002ip\030\002 \001"
    "(\t\022\014\n\004port\030\003 \001(\r\022\017\n\007zone_id\030\004 \001(\r: \212\222\364\001\r"
    "redis_node_db\222\222\364\001\002id\262\222\364\001\002id\"5\n\017NodeInfoR"
    "equest\022\017\n\007zone_id\030\001 \001(\r\022\021\n\tnode_type\030\002 \001"
    "(\r\"^\n\020NodeInfoResponse\022\'\n\nredis_info\030\001 \001"
    "(\0132\023.redis_node_list_db\022\017\n\007node_id\030\002 \001(\r"
    "\022\020\n\010lease_id\030\003 \001(\004\"6\n\014GetIDRequest\022\023\n\013cl"
    "ient_name\030\001 \001(\t\022\021\n\tnode_type\030\002 \001(\r\"-\n\rGe"
    "tIDResponse\022\n\n\002id\030\001 \001(\004\022\020\n\010lease_id\030\002 \001("
    "\004\"C\n\020ReleaseIDRequest\022\n\n\002id\030\001 \001(\004\022\021\n\tnod"
    "e_type\030\002 \001(\r\022\020\n\010lease_id\030\003 \001(\004\"$\n\021Releas"
    "eIDResponse\022\017\n\007success\030\001 \001(\010\"\'\n\023RenewLea"
    "seIDRequest\022\020\n\010lease_id\030\001 \001(\004\"\026\n\024RenewLe"
    "aseIDResponse2\332\001\n\rDeployService\0222\n\013GetNo"
    "deInfo\022\020.NodeInfoRequest\032\021.NodeInfoRespo"
    "nse\022&\n\005GetID\022\r.GetIDRequest\032\016.GetIDRespo"
    "nse\0222\n\tReleaseID\022\021.ReleaseIDRequest\032\022.Re"
    "leaseIDResponse\0229\n\nRenewLease\022\024.RenewLea"
    "seIDRequest\032\025.RenewLeaseIDResponseB\tZ\007pb"
    "/gameb\006proto3"
};
static const ::_pbi::DescriptorTable* const descriptor_table_proto_2fcommon_2fdeploy_5fservice_2eproto_deps[1] =
    {
        &::descriptor_table_proto_2fcommon_2fdb_5fbase_2eproto,
};
static ::absl::once_flag descriptor_table_proto_2fcommon_2fdeploy_5fservice_2eproto_once;
PROTOBUF_CONSTINIT const ::_pbi::DescriptorTable descriptor_table_proto_2fcommon_2fdeploy_5fservice_2eproto = {
    false,
    false,
    893,
    descriptor_table_protodef_proto_2fcommon_2fdeploy_5fservice_2eproto,
    "proto/common/deploy_service.proto",
    &descriptor_table_proto_2fcommon_2fdeploy_5fservice_2eproto_once,
    descriptor_table_proto_2fcommon_2fdeploy_5fservice_2eproto_deps,
    1,
    10,
    schemas,
    file_default_instances,
    TableStruct_proto_2fcommon_2fdeploy_5fservice_2eproto::offsets,
    file_level_enum_descriptors_proto_2fcommon_2fdeploy_5fservice_2eproto,
    file_level_service_descriptors_proto_2fcommon_2fdeploy_5fservice_2eproto,
};
// ===================================================================

class redis_node_list_db::_Internal {
 public:
};

redis_node_list_db::redis_node_list_db(::google::protobuf::Arena* arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:redis_node_list_db)
}
inline PROTOBUF_NDEBUG_INLINE redis_node_list_db::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from, const ::redis_node_list_db& from_msg)
      : redis_info_{visibility, arena, from.redis_info_},
        _cached_size_{0} {}

redis_node_list_db::redis_node_list_db(
    ::google::protobuf::Arena* arena,
    const redis_node_list_db& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  redis_node_list_db* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);

  // @@protoc_insertion_point(copy_constructor:redis_node_list_db)
}
inline PROTOBUF_NDEBUG_INLINE redis_node_list_db::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : redis_info_{visibility, arena},
        _cached_size_{0} {}

inline void redis_node_list_db::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
}
redis_node_list_db::~redis_node_list_db() {
  // @@protoc_insertion_point(destructor:redis_node_list_db)
  SharedDtor(*this);
}
inline void redis_node_list_db::SharedDtor(MessageLite& self) {
  redis_node_list_db& this_ = static_cast<redis_node_list_db&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  this_._impl_.~Impl_();
}

inline void* redis_node_list_db::PlacementNew_(const void*, void* mem,
                                        ::google::protobuf::Arena* arena) {
  return ::new (mem) redis_node_list_db(arena);
}
constexpr auto redis_node_list_db::InternalNewImpl_() {
  constexpr auto arena_bits = ::google::protobuf::internal::EncodePlacementArenaOffsets({
      PROTOBUF_FIELD_OFFSET(redis_node_list_db, _impl_.redis_info_) +
          decltype(redis_node_list_db::_impl_.redis_info_)::
              InternalGetArenaOffset(
                  ::google::protobuf::Message::internal_visibility()),
  });
  if (arena_bits.has_value()) {
    return ::google::protobuf::internal::MessageCreator::ZeroInit(
        sizeof(redis_node_list_db), alignof(redis_node_list_db), *arena_bits);
  } else {
    return ::google::protobuf::internal::MessageCreator(&redis_node_list_db::PlacementNew_,
                                 sizeof(redis_node_list_db),
                                 alignof(redis_node_list_db));
  }
}
PROTOBUF_CONSTINIT
PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::google::protobuf::internal::ClassDataFull redis_node_list_db::_class_data_ = {
    ::google::protobuf::internal::ClassData{
        &_redis_node_list_db_default_instance_._instance,
        &_table_.header,
        nullptr,  // OnDemandRegisterArenaDtor
        nullptr,  // IsInitialized
        &redis_node_list_db::MergeImpl,
        ::google::protobuf::Message::GetNewImpl<redis_node_list_db>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
        &redis_node_list_db::SharedDtor,
        ::google::protobuf::Message::GetClearImpl<redis_node_list_db>(), &redis_node_list_db::ByteSizeLong,
            &redis_node_list_db::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
        PROTOBUF_FIELD_OFFSET(redis_node_list_db, _impl_._cached_size_),
        false,
    },
    &redis_node_list_db::kDescriptorMethods,
    &descriptor_table_proto_2fcommon_2fdeploy_5fservice_2eproto,
    nullptr,  // tracker
};
const ::google::protobuf::internal::ClassData* redis_node_list_db::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_class_data_.tc_table);
  return _class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<0, 1, 1, 0, 2> redis_node_list_db::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    1, 0,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967294,  // skipmap
    offsetof(decltype(_table_), field_entries),
    1,  // num_field_entries
    1,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    _class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::redis_node_list_db>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // repeated .redis_node_db redis_info = 1;
    {::_pbi::TcParser::FastMtR1,
     {10, 63, 0, PROTOBUF_FIELD_OFFSET(redis_node_list_db, _impl_.redis_info_)}},
  }}, {{
    65535, 65535
  }}, {{
    // repeated .redis_node_db redis_info = 1;
    {PROTOBUF_FIELD_OFFSET(redis_node_list_db, _impl_.redis_info_), 0, 0,
    (0 | ::_fl::kFcRepeated | ::_fl::kMessage | ::_fl::kTvTable)},
  }}, {{
    {::_pbi::TcParser::GetTable<::redis_node_db>()},
  }}, {{
  }},
};

PROTOBUF_NOINLINE void redis_node_list_db::Clear() {
// @@protoc_insertion_point(message_clear_start:redis_node_list_db)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.redis_info_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::uint8_t* redis_node_list_db::_InternalSerialize(
            const MessageLite& base, ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) {
          const redis_node_list_db& this_ = static_cast<const redis_node_list_db&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::uint8_t* redis_node_list_db::_InternalSerialize(
            ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) const {
          const redis_node_list_db& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(serialize_to_array_start:redis_node_list_db)
          ::uint32_t cached_has_bits = 0;
          (void)cached_has_bits;

          // repeated .redis_node_db redis_info = 1;
          for (unsigned i = 0, n = static_cast<unsigned>(
                                   this_._internal_redis_info_size());
               i < n; i++) {
            const auto& repfield = this_._internal_redis_info().Get(i);
            target =
                ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
                    1, repfield, repfield.GetCachedSize(),
                    target, stream);
          }

          if (PROTOBUF_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
            target =
                ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
                    this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
          }
          // @@protoc_insertion_point(serialize_to_array_end:redis_node_list_db)
          return target;
        }

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::size_t redis_node_list_db::ByteSizeLong(const MessageLite& base) {
          const redis_node_list_db& this_ = static_cast<const redis_node_list_db&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::size_t redis_node_list_db::ByteSizeLong() const {
          const redis_node_list_db& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(message_byte_size_start:redis_node_list_db)
          ::size_t total_size = 0;

          ::uint32_t cached_has_bits = 0;
          // Prevent compiler warnings about cached_has_bits being unused
          (void)cached_has_bits;

          ::_pbi::Prefetch5LinesFrom7Lines(&this_);
           {
            // repeated .redis_node_db redis_info = 1;
            {
              total_size += 1UL * this_._internal_redis_info_size();
              for (const auto& msg : this_._internal_redis_info()) {
                total_size += ::google::protobuf::internal::WireFormatLite::MessageSize(msg);
              }
            }
          }
          return this_.MaybeComputeUnknownFieldsSize(total_size,
                                                     &this_._impl_._cached_size_);
        }

void redis_node_list_db::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<redis_node_list_db*>(&to_msg);
  auto& from = static_cast<const redis_node_list_db&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:redis_node_list_db)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_internal_mutable_redis_info()->MergeFrom(
      from._internal_redis_info());
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void redis_node_list_db::CopyFrom(const redis_node_list_db& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:redis_node_list_db)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void redis_node_list_db::InternalSwap(redis_node_list_db* PROTOBUF_RESTRICT other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  _impl_.redis_info_.InternalSwap(&other->_impl_.redis_info_);
}

::google::protobuf::Metadata redis_node_list_db::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class redis_node_db::_Internal {
 public:
};

redis_node_db::redis_node_db(::google::protobuf::Arena* arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:redis_node_db)
}
inline PROTOBUF_NDEBUG_INLINE redis_node_db::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from, const ::redis_node_db& from_msg)
      : ip_(arena, from.ip_),
        _cached_size_{0} {}

redis_node_db::redis_node_db(
    ::google::protobuf::Arena* arena,
    const redis_node_db& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  redis_node_db* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);
  ::memcpy(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, id_),
           reinterpret_cast<const char *>(&from._impl_) +
               offsetof(Impl_, id_),
           offsetof(Impl_, zone_id_) -
               offsetof(Impl_, id_) +
               sizeof(Impl_::zone_id_));

  // @@protoc_insertion_point(copy_constructor:redis_node_db)
}
inline PROTOBUF_NDEBUG_INLINE redis_node_db::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : ip_(arena),
        _cached_size_{0} {}

inline void redis_node_db::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, id_),
           0,
           offsetof(Impl_, zone_id_) -
               offsetof(Impl_, id_) +
               sizeof(Impl_::zone_id_));
}
redis_node_db::~redis_node_db() {
  // @@protoc_insertion_point(destructor:redis_node_db)
  SharedDtor(*this);
}
inline void redis_node_db::SharedDtor(MessageLite& self) {
  redis_node_db& this_ = static_cast<redis_node_db&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  this_._impl_.ip_.Destroy();
  this_._impl_.~Impl_();
}

inline void* redis_node_db::PlacementNew_(const void*, void* mem,
                                        ::google::protobuf::Arena* arena) {
  return ::new (mem) redis_node_db(arena);
}
constexpr auto redis_node_db::InternalNewImpl_() {
  return ::google::protobuf::internal::MessageCreator::CopyInit(sizeof(redis_node_db),
                                            alignof(redis_node_db));
}
PROTOBUF_CONSTINIT
PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::google::protobuf::internal::ClassDataFull redis_node_db::_class_data_ = {
    ::google::protobuf::internal::ClassData{
        &_redis_node_db_default_instance_._instance,
        &_table_.header,
        nullptr,  // OnDemandRegisterArenaDtor
        nullptr,  // IsInitialized
        &redis_node_db::MergeImpl,
        ::google::protobuf::Message::GetNewImpl<redis_node_db>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
        &redis_node_db::SharedDtor,
        ::google::protobuf::Message::GetClearImpl<redis_node_db>(), &redis_node_db::ByteSizeLong,
            &redis_node_db::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
        PROTOBUF_FIELD_OFFSET(redis_node_db, _impl_._cached_size_),
        false,
    },
    &redis_node_db::kDescriptorMethods,
    &descriptor_table_proto_2fcommon_2fdeploy_5fservice_2eproto,
    nullptr,  // tracker
};
const ::google::protobuf::internal::ClassData* redis_node_db::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_class_data_.tc_table);
  return _class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<2, 4, 0, 24, 2> redis_node_db::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    4, 24,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967280,  // skipmap
    offsetof(decltype(_table_), field_entries),
    4,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    _class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::redis_node_db>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // uint32 zone_id = 4;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(redis_node_db, _impl_.zone_id_), 63>(),
     {32, 63, 0, PROTOBUF_FIELD_OFFSET(redis_node_db, _impl_.zone_id_)}},
    // uint32 id = 1;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(redis_node_db, _impl_.id_), 63>(),
     {8, 63, 0, PROTOBUF_FIELD_OFFSET(redis_node_db, _impl_.id_)}},
    // string ip = 2;
    {::_pbi::TcParser::FastUS1,
     {18, 63, 0, PROTOBUF_FIELD_OFFSET(redis_node_db, _impl_.ip_)}},
    // uint32 port = 3;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(redis_node_db, _impl_.port_), 63>(),
     {24, 63, 0, PROTOBUF_FIELD_OFFSET(redis_node_db, _impl_.port_)}},
  }}, {{
    65535, 65535
  }}, {{
    // uint32 id = 1;
    {PROTOBUF_FIELD_OFFSET(redis_node_db, _impl_.id_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUInt32)},
    // string ip = 2;
    {PROTOBUF_FIELD_OFFSET(redis_node_db, _impl_.ip_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // uint32 port = 3;
    {PROTOBUF_FIELD_OFFSET(redis_node_db, _impl_.port_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUInt32)},
    // uint32 zone_id = 4;
    {PROTOBUF_FIELD_OFFSET(redis_node_db, _impl_.zone_id_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUInt32)},
  }},
  // no aux_entries
  {{
    "\15\0\2\0\0\0\0\0"
    "redis_node_db"
    "ip"
  }},
};

PROTOBUF_NOINLINE void redis_node_db::Clear() {
// @@protoc_insertion_point(message_clear_start:redis_node_db)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.ip_.ClearToEmpty();
  ::memset(&_impl_.id_, 0, static_cast<::size_t>(
      reinterpret_cast<char*>(&_impl_.zone_id_) -
      reinterpret_cast<char*>(&_impl_.id_)) + sizeof(_impl_.zone_id_));
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::uint8_t* redis_node_db::_InternalSerialize(
            const MessageLite& base, ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) {
          const redis_node_db& this_ = static_cast<const redis_node_db&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::uint8_t* redis_node_db::_InternalSerialize(
            ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) const {
          const redis_node_db& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(serialize_to_array_start:redis_node_db)
          ::uint32_t cached_has_bits = 0;
          (void)cached_has_bits;

          // uint32 id = 1;
          if (this_._internal_id() != 0) {
            target = stream->EnsureSpace(target);
            target = ::_pbi::WireFormatLite::WriteUInt32ToArray(
                1, this_._internal_id(), target);
          }

          // string ip = 2;
          if (!this_._internal_ip().empty()) {
            const std::string& _s = this_._internal_ip();
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "redis_node_db.ip");
            target = stream->WriteStringMaybeAliased(2, _s, target);
          }

          // uint32 port = 3;
          if (this_._internal_port() != 0) {
            target = stream->EnsureSpace(target);
            target = ::_pbi::WireFormatLite::WriteUInt32ToArray(
                3, this_._internal_port(), target);
          }

          // uint32 zone_id = 4;
          if (this_._internal_zone_id() != 0) {
            target = stream->EnsureSpace(target);
            target = ::_pbi::WireFormatLite::WriteUInt32ToArray(
                4, this_._internal_zone_id(), target);
          }

          if (PROTOBUF_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
            target =
                ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
                    this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
          }
          // @@protoc_insertion_point(serialize_to_array_end:redis_node_db)
          return target;
        }

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::size_t redis_node_db::ByteSizeLong(const MessageLite& base) {
          const redis_node_db& this_ = static_cast<const redis_node_db&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::size_t redis_node_db::ByteSizeLong() const {
          const redis_node_db& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(message_byte_size_start:redis_node_db)
          ::size_t total_size = 0;

          ::uint32_t cached_has_bits = 0;
          // Prevent compiler warnings about cached_has_bits being unused
          (void)cached_has_bits;

          ::_pbi::Prefetch5LinesFrom7Lines(&this_);
           {
            // string ip = 2;
            if (!this_._internal_ip().empty()) {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                              this_._internal_ip());
            }
            // uint32 id = 1;
            if (this_._internal_id() != 0) {
              total_size += ::_pbi::WireFormatLite::UInt32SizePlusOne(
                  this_._internal_id());
            }
            // uint32 port = 3;
            if (this_._internal_port() != 0) {
              total_size += ::_pbi::WireFormatLite::UInt32SizePlusOne(
                  this_._internal_port());
            }
            // uint32 zone_id = 4;
            if (this_._internal_zone_id() != 0) {
              total_size += ::_pbi::WireFormatLite::UInt32SizePlusOne(
                  this_._internal_zone_id());
            }
          }
          return this_.MaybeComputeUnknownFieldsSize(total_size,
                                                     &this_._impl_._cached_size_);
        }

void redis_node_db::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<redis_node_db*>(&to_msg);
  auto& from = static_cast<const redis_node_db&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:redis_node_db)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_ip().empty()) {
    _this->_internal_set_ip(from._internal_ip());
  }
  if (from._internal_id() != 0) {
    _this->_impl_.id_ = from._impl_.id_;
  }
  if (from._internal_port() != 0) {
    _this->_impl_.port_ = from._impl_.port_;
  }
  if (from._internal_zone_id() != 0) {
    _this->_impl_.zone_id_ = from._impl_.zone_id_;
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void redis_node_db::CopyFrom(const redis_node_db& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:redis_node_db)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void redis_node_db::InternalSwap(redis_node_db* PROTOBUF_RESTRICT other) {
  using std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.ip_, &other->_impl_.ip_, arena);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(redis_node_db, _impl_.zone_id_)
      + sizeof(redis_node_db::_impl_.zone_id_)
      - PROTOBUF_FIELD_OFFSET(redis_node_db, _impl_.id_)>(
          reinterpret_cast<char*>(&_impl_.id_),
          reinterpret_cast<char*>(&other->_impl_.id_));
}

::google::protobuf::Metadata redis_node_db::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class NodeInfoRequest::_Internal {
 public:
};

NodeInfoRequest::NodeInfoRequest(::google::protobuf::Arena* arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:NodeInfoRequest)
}
NodeInfoRequest::NodeInfoRequest(
    ::google::protobuf::Arena* arena, const NodeInfoRequest& from)
    : NodeInfoRequest(arena) {
  MergeFrom(from);
}
inline PROTOBUF_NDEBUG_INLINE NodeInfoRequest::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0} {}

inline void NodeInfoRequest::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, zone_id_),
           0,
           offsetof(Impl_, node_type_) -
               offsetof(Impl_, zone_id_) +
               sizeof(Impl_::node_type_));
}
NodeInfoRequest::~NodeInfoRequest() {
  // @@protoc_insertion_point(destructor:NodeInfoRequest)
  SharedDtor(*this);
}
inline void NodeInfoRequest::SharedDtor(MessageLite& self) {
  NodeInfoRequest& this_ = static_cast<NodeInfoRequest&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  this_._impl_.~Impl_();
}

inline void* NodeInfoRequest::PlacementNew_(const void*, void* mem,
                                        ::google::protobuf::Arena* arena) {
  return ::new (mem) NodeInfoRequest(arena);
}
constexpr auto NodeInfoRequest::InternalNewImpl_() {
  return ::google::protobuf::internal::MessageCreator::ZeroInit(sizeof(NodeInfoRequest),
                                            alignof(NodeInfoRequest));
}
PROTOBUF_CONSTINIT
PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::google::protobuf::internal::ClassDataFull NodeInfoRequest::_class_data_ = {
    ::google::protobuf::internal::ClassData{
        &_NodeInfoRequest_default_instance_._instance,
        &_table_.header,
        nullptr,  // OnDemandRegisterArenaDtor
        nullptr,  // IsInitialized
        &NodeInfoRequest::MergeImpl,
        ::google::protobuf::Message::GetNewImpl<NodeInfoRequest>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
        &NodeInfoRequest::SharedDtor,
        ::google::protobuf::Message::GetClearImpl<NodeInfoRequest>(), &NodeInfoRequest::ByteSizeLong,
            &NodeInfoRequest::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
        PROTOBUF_FIELD_OFFSET(NodeInfoRequest, _impl_._cached_size_),
        false,
    },
    &NodeInfoRequest::kDescriptorMethods,
    &descriptor_table_proto_2fcommon_2fdeploy_5fservice_2eproto,
    nullptr,  // tracker
};
const ::google::protobuf::internal::ClassData* NodeInfoRequest::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_class_data_.tc_table);
  return _class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<1, 2, 0, 0, 2> NodeInfoRequest::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    2, 8,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967292,  // skipmap
    offsetof(decltype(_table_), field_entries),
    2,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    _class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::NodeInfoRequest>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // uint32 node_type = 2;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(NodeInfoRequest, _impl_.node_type_), 63>(),
     {16, 63, 0, PROTOBUF_FIELD_OFFSET(NodeInfoRequest, _impl_.node_type_)}},
    // uint32 zone_id = 1;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(NodeInfoRequest, _impl_.zone_id_), 63>(),
     {8, 63, 0, PROTOBUF_FIELD_OFFSET(NodeInfoRequest, _impl_.zone_id_)}},
  }}, {{
    65535, 65535
  }}, {{
    // uint32 zone_id = 1;
    {PROTOBUF_FIELD_OFFSET(NodeInfoRequest, _impl_.zone_id_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUInt32)},
    // uint32 node_type = 2;
    {PROTOBUF_FIELD_OFFSET(NodeInfoRequest, _impl_.node_type_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUInt32)},
  }},
  // no aux_entries
  {{
  }},
};

PROTOBUF_NOINLINE void NodeInfoRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:NodeInfoRequest)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&_impl_.zone_id_, 0, static_cast<::size_t>(
      reinterpret_cast<char*>(&_impl_.node_type_) -
      reinterpret_cast<char*>(&_impl_.zone_id_)) + sizeof(_impl_.node_type_));
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::uint8_t* NodeInfoRequest::_InternalSerialize(
            const MessageLite& base, ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) {
          const NodeInfoRequest& this_ = static_cast<const NodeInfoRequest&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::uint8_t* NodeInfoRequest::_InternalSerialize(
            ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) const {
          const NodeInfoRequest& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(serialize_to_array_start:NodeInfoRequest)
          ::uint32_t cached_has_bits = 0;
          (void)cached_has_bits;

          // uint32 zone_id = 1;
          if (this_._internal_zone_id() != 0) {
            target = stream->EnsureSpace(target);
            target = ::_pbi::WireFormatLite::WriteUInt32ToArray(
                1, this_._internal_zone_id(), target);
          }

          // uint32 node_type = 2;
          if (this_._internal_node_type() != 0) {
            target = stream->EnsureSpace(target);
            target = ::_pbi::WireFormatLite::WriteUInt32ToArray(
                2, this_._internal_node_type(), target);
          }

          if (PROTOBUF_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
            target =
                ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
                    this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
          }
          // @@protoc_insertion_point(serialize_to_array_end:NodeInfoRequest)
          return target;
        }

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::size_t NodeInfoRequest::ByteSizeLong(const MessageLite& base) {
          const NodeInfoRequest& this_ = static_cast<const NodeInfoRequest&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::size_t NodeInfoRequest::ByteSizeLong() const {
          const NodeInfoRequest& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(message_byte_size_start:NodeInfoRequest)
          ::size_t total_size = 0;

          ::uint32_t cached_has_bits = 0;
          // Prevent compiler warnings about cached_has_bits being unused
          (void)cached_has_bits;

          ::_pbi::Prefetch5LinesFrom7Lines(&this_);
           {
            // uint32 zone_id = 1;
            if (this_._internal_zone_id() != 0) {
              total_size += ::_pbi::WireFormatLite::UInt32SizePlusOne(
                  this_._internal_zone_id());
            }
            // uint32 node_type = 2;
            if (this_._internal_node_type() != 0) {
              total_size += ::_pbi::WireFormatLite::UInt32SizePlusOne(
                  this_._internal_node_type());
            }
          }
          return this_.MaybeComputeUnknownFieldsSize(total_size,
                                                     &this_._impl_._cached_size_);
        }

void NodeInfoRequest::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<NodeInfoRequest*>(&to_msg);
  auto& from = static_cast<const NodeInfoRequest&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:NodeInfoRequest)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_zone_id() != 0) {
    _this->_impl_.zone_id_ = from._impl_.zone_id_;
  }
  if (from._internal_node_type() != 0) {
    _this->_impl_.node_type_ = from._impl_.node_type_;
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void NodeInfoRequest::CopyFrom(const NodeInfoRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:NodeInfoRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void NodeInfoRequest::InternalSwap(NodeInfoRequest* PROTOBUF_RESTRICT other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(NodeInfoRequest, _impl_.node_type_)
      + sizeof(NodeInfoRequest::_impl_.node_type_)
      - PROTOBUF_FIELD_OFFSET(NodeInfoRequest, _impl_.zone_id_)>(
          reinterpret_cast<char*>(&_impl_.zone_id_),
          reinterpret_cast<char*>(&other->_impl_.zone_id_));
}

::google::protobuf::Metadata NodeInfoRequest::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class NodeInfoResponse::_Internal {
 public:
  using HasBits =
      decltype(std::declval<NodeInfoResponse>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
      8 * PROTOBUF_FIELD_OFFSET(NodeInfoResponse, _impl_._has_bits_);
};

NodeInfoResponse::NodeInfoResponse(::google::protobuf::Arena* arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:NodeInfoResponse)
}
inline PROTOBUF_NDEBUG_INLINE NodeInfoResponse::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from, const ::NodeInfoResponse& from_msg)
      : _has_bits_{from._has_bits_},
        _cached_size_{0} {}

NodeInfoResponse::NodeInfoResponse(
    ::google::protobuf::Arena* arena,
    const NodeInfoResponse& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  NodeInfoResponse* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);
  ::uint32_t cached_has_bits = _impl_._has_bits_[0];
  _impl_.redis_info_ = (cached_has_bits & 0x00000001u) ? ::google::protobuf::Message::CopyConstruct<::redis_node_list_db>(
                              arena, *from._impl_.redis_info_)
                        : nullptr;
  ::memcpy(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, lease_id_),
           reinterpret_cast<const char *>(&from._impl_) +
               offsetof(Impl_, lease_id_),
           offsetof(Impl_, node_id_) -
               offsetof(Impl_, lease_id_) +
               sizeof(Impl_::node_id_));

  // @@protoc_insertion_point(copy_constructor:NodeInfoResponse)
}
inline PROTOBUF_NDEBUG_INLINE NodeInfoResponse::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0} {}

inline void NodeInfoResponse::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, redis_info_),
           0,
           offsetof(Impl_, node_id_) -
               offsetof(Impl_, redis_info_) +
               sizeof(Impl_::node_id_));
}
NodeInfoResponse::~NodeInfoResponse() {
  // @@protoc_insertion_point(destructor:NodeInfoResponse)
  SharedDtor(*this);
}
inline void NodeInfoResponse::SharedDtor(MessageLite& self) {
  NodeInfoResponse& this_ = static_cast<NodeInfoResponse&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  delete this_._impl_.redis_info_;
  this_._impl_.~Impl_();
}

inline void* NodeInfoResponse::PlacementNew_(const void*, void* mem,
                                        ::google::protobuf::Arena* arena) {
  return ::new (mem) NodeInfoResponse(arena);
}
constexpr auto NodeInfoResponse::InternalNewImpl_() {
  return ::google::protobuf::internal::MessageCreator::ZeroInit(sizeof(NodeInfoResponse),
                                            alignof(NodeInfoResponse));
}
PROTOBUF_CONSTINIT
PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::google::protobuf::internal::ClassDataFull NodeInfoResponse::_class_data_ = {
    ::google::protobuf::internal::ClassData{
        &_NodeInfoResponse_default_instance_._instance,
        &_table_.header,
        nullptr,  // OnDemandRegisterArenaDtor
        nullptr,  // IsInitialized
        &NodeInfoResponse::MergeImpl,
        ::google::protobuf::Message::GetNewImpl<NodeInfoResponse>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
        &NodeInfoResponse::SharedDtor,
        ::google::protobuf::Message::GetClearImpl<NodeInfoResponse>(), &NodeInfoResponse::ByteSizeLong,
            &NodeInfoResponse::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
        PROTOBUF_FIELD_OFFSET(NodeInfoResponse, _impl_._cached_size_),
        false,
    },
    &NodeInfoResponse::kDescriptorMethods,
    &descriptor_table_proto_2fcommon_2fdeploy_5fservice_2eproto,
    nullptr,  // tracker
};
const ::google::protobuf::internal::ClassData* NodeInfoResponse::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_class_data_.tc_table);
  return _class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<2, 3, 1, 0, 2> NodeInfoResponse::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(NodeInfoResponse, _impl_._has_bits_),
    0, // no _extensions_
    3, 24,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967288,  // skipmap
    offsetof(decltype(_table_), field_entries),
    3,  // num_field_entries
    1,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    _class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::NodeInfoResponse>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
    // .redis_node_list_db redis_info = 1;
    {::_pbi::TcParser::FastMtS1,
     {10, 0, 0, PROTOBUF_FIELD_OFFSET(NodeInfoResponse, _impl_.redis_info_)}},
    // uint32 node_id = 2;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(NodeInfoResponse, _impl_.node_id_), 63>(),
     {16, 63, 0, PROTOBUF_FIELD_OFFSET(NodeInfoResponse, _impl_.node_id_)}},
    // uint64 lease_id = 3;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint64_t, offsetof(NodeInfoResponse, _impl_.lease_id_), 63>(),
     {24, 63, 0, PROTOBUF_FIELD_OFFSET(NodeInfoResponse, _impl_.lease_id_)}},
  }}, {{
    65535, 65535
  }}, {{
    // .redis_node_list_db redis_info = 1;
    {PROTOBUF_FIELD_OFFSET(NodeInfoResponse, _impl_.redis_info_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
    // uint32 node_id = 2;
    {PROTOBUF_FIELD_OFFSET(NodeInfoResponse, _impl_.node_id_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUInt32)},
    // uint64 lease_id = 3;
    {PROTOBUF_FIELD_OFFSET(NodeInfoResponse, _impl_.lease_id_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUInt64)},
  }}, {{
    {::_pbi::TcParser::GetTable<::redis_node_list_db>()},
  }}, {{
  }},
};

PROTOBUF_NOINLINE void NodeInfoResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:NodeInfoResponse)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    ABSL_DCHECK(_impl_.redis_info_ != nullptr);
    _impl_.redis_info_->Clear();
  }
  ::memset(&_impl_.lease_id_, 0, static_cast<::size_t>(
      reinterpret_cast<char*>(&_impl_.node_id_) -
      reinterpret_cast<char*>(&_impl_.lease_id_)) + sizeof(_impl_.node_id_));
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::uint8_t* NodeInfoResponse::_InternalSerialize(
            const MessageLite& base, ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) {
          const NodeInfoResponse& this_ = static_cast<const NodeInfoResponse&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::uint8_t* NodeInfoResponse::_InternalSerialize(
            ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) const {
          const NodeInfoResponse& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(serialize_to_array_start:NodeInfoResponse)
          ::uint32_t cached_has_bits = 0;
          (void)cached_has_bits;

          cached_has_bits = this_._impl_._has_bits_[0];
          // .redis_node_list_db redis_info = 1;
          if (cached_has_bits & 0x00000001u) {
            target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
                1, *this_._impl_.redis_info_, this_._impl_.redis_info_->GetCachedSize(), target,
                stream);
          }

          // uint32 node_id = 2;
          if (this_._internal_node_id() != 0) {
            target = stream->EnsureSpace(target);
            target = ::_pbi::WireFormatLite::WriteUInt32ToArray(
                2, this_._internal_node_id(), target);
          }

          // uint64 lease_id = 3;
          if (this_._internal_lease_id() != 0) {
            target = stream->EnsureSpace(target);
            target = ::_pbi::WireFormatLite::WriteUInt64ToArray(
                3, this_._internal_lease_id(), target);
          }

          if (PROTOBUF_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
            target =
                ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
                    this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
          }
          // @@protoc_insertion_point(serialize_to_array_end:NodeInfoResponse)
          return target;
        }

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::size_t NodeInfoResponse::ByteSizeLong(const MessageLite& base) {
          const NodeInfoResponse& this_ = static_cast<const NodeInfoResponse&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::size_t NodeInfoResponse::ByteSizeLong() const {
          const NodeInfoResponse& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(message_byte_size_start:NodeInfoResponse)
          ::size_t total_size = 0;

          ::uint32_t cached_has_bits = 0;
          // Prevent compiler warnings about cached_has_bits being unused
          (void)cached_has_bits;

          ::_pbi::Prefetch5LinesFrom7Lines(&this_);
           {
            // .redis_node_list_db redis_info = 1;
            cached_has_bits = this_._impl_._has_bits_[0];
            if (cached_has_bits & 0x00000001u) {
              total_size += 1 +
                            ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.redis_info_);
            }
          }
           {
            // uint64 lease_id = 3;
            if (this_._internal_lease_id() != 0) {
              total_size += ::_pbi::WireFormatLite::UInt64SizePlusOne(
                  this_._internal_lease_id());
            }
            // uint32 node_id = 2;
            if (this_._internal_node_id() != 0) {
              total_size += ::_pbi::WireFormatLite::UInt32SizePlusOne(
                  this_._internal_node_id());
            }
          }
          return this_.MaybeComputeUnknownFieldsSize(total_size,
                                                     &this_._impl_._cached_size_);
        }

void NodeInfoResponse::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<NodeInfoResponse*>(&to_msg);
  auto& from = static_cast<const NodeInfoResponse&>(from_msg);
  ::google::protobuf::Arena* arena = _this->GetArena();
  // @@protoc_insertion_point(class_specific_merge_from_start:NodeInfoResponse)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    ABSL_DCHECK(from._impl_.redis_info_ != nullptr);
    if (_this->_impl_.redis_info_ == nullptr) {
      _this->_impl_.redis_info_ =
          ::google::protobuf::Message::CopyConstruct<::redis_node_list_db>(arena, *from._impl_.redis_info_);
    } else {
      _this->_impl_.redis_info_->MergeFrom(*from._impl_.redis_info_);
    }
  }
  if (from._internal_lease_id() != 0) {
    _this->_impl_.lease_id_ = from._impl_.lease_id_;
  }
  if (from._internal_node_id() != 0) {
    _this->_impl_.node_id_ = from._impl_.node_id_;
  }
  _this->_impl_._has_bits_[0] |= cached_has_bits;
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void NodeInfoResponse::CopyFrom(const NodeInfoResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:NodeInfoResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void NodeInfoResponse::InternalSwap(NodeInfoResponse* PROTOBUF_RESTRICT other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(NodeInfoResponse, _impl_.node_id_)
      + sizeof(NodeInfoResponse::_impl_.node_id_)
      - PROTOBUF_FIELD_OFFSET(NodeInfoResponse, _impl_.redis_info_)>(
          reinterpret_cast<char*>(&_impl_.redis_info_),
          reinterpret_cast<char*>(&other->_impl_.redis_info_));
}

::google::protobuf::Metadata NodeInfoResponse::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class GetIDRequest::_Internal {
 public:
};

GetIDRequest::GetIDRequest(::google::protobuf::Arena* arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:GetIDRequest)
}
inline PROTOBUF_NDEBUG_INLINE GetIDRequest::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from, const ::GetIDRequest& from_msg)
      : client_name_(arena, from.client_name_),
        _cached_size_{0} {}

GetIDRequest::GetIDRequest(
    ::google::protobuf::Arena* arena,
    const GetIDRequest& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  GetIDRequest* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);
  _impl_.node_type_ = from._impl_.node_type_;

  // @@protoc_insertion_point(copy_constructor:GetIDRequest)
}
inline PROTOBUF_NDEBUG_INLINE GetIDRequest::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : client_name_(arena),
        _cached_size_{0} {}

inline void GetIDRequest::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  _impl_.node_type_ = {};
}
GetIDRequest::~GetIDRequest() {
  // @@protoc_insertion_point(destructor:GetIDRequest)
  SharedDtor(*this);
}
inline void GetIDRequest::SharedDtor(MessageLite& self) {
  GetIDRequest& this_ = static_cast<GetIDRequest&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  this_._impl_.client_name_.Destroy();
  this_._impl_.~Impl_();
}

inline void* GetIDRequest::PlacementNew_(const void*, void* mem,
                                        ::google::protobuf::Arena* arena) {
  return ::new (mem) GetIDRequest(arena);
}
constexpr auto GetIDRequest::InternalNewImpl_() {
  return ::google::protobuf::internal::MessageCreator::CopyInit(sizeof(GetIDRequest),
                                            alignof(GetIDRequest));
}
PROTOBUF_CONSTINIT
PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::google::protobuf::internal::ClassDataFull GetIDRequest::_class_data_ = {
    ::google::protobuf::internal::ClassData{
        &_GetIDRequest_default_instance_._instance,
        &_table_.header,
        nullptr,  // OnDemandRegisterArenaDtor
        nullptr,  // IsInitialized
        &GetIDRequest::MergeImpl,
        ::google::protobuf::Message::GetNewImpl<GetIDRequest>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
        &GetIDRequest::SharedDtor,
        ::google::protobuf::Message::GetClearImpl<GetIDRequest>(), &GetIDRequest::ByteSizeLong,
            &GetIDRequest::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
        PROTOBUF_FIELD_OFFSET(GetIDRequest, _impl_._cached_size_),
        false,
    },
    &GetIDRequest::kDescriptorMethods,
    &descriptor_table_proto_2fcommon_2fdeploy_5fservice_2eproto,
    nullptr,  // tracker
};
const ::google::protobuf::internal::ClassData* GetIDRequest::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_class_data_.tc_table);
  return _class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<1, 2, 0, 32, 2> GetIDRequest::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    2, 8,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967292,  // skipmap
    offsetof(decltype(_table_), field_entries),
    2,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    _class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::GetIDRequest>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // uint32 node_type = 2;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(GetIDRequest, _impl_.node_type_), 63>(),
     {16, 63, 0, PROTOBUF_FIELD_OFFSET(GetIDRequest, _impl_.node_type_)}},
    // string client_name = 1;
    {::_pbi::TcParser::FastUS1,
     {10, 63, 0, PROTOBUF_FIELD_OFFSET(GetIDRequest, _impl_.client_name_)}},
  }}, {{
    65535, 65535
  }}, {{
    // string client_name = 1;
    {PROTOBUF_FIELD_OFFSET(GetIDRequest, _impl_.client_name_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // uint32 node_type = 2;
    {PROTOBUF_FIELD_OFFSET(GetIDRequest, _impl_.node_type_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUInt32)},
  }},
  // no aux_entries
  {{
    "\14\13\0\0\0\0\0\0"
    "GetIDRequest"
    "client_name"
  }},
};

PROTOBUF_NOINLINE void GetIDRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:GetIDRequest)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.client_name_.ClearToEmpty();
  _impl_.node_type_ = 0u;
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::uint8_t* GetIDRequest::_InternalSerialize(
            const MessageLite& base, ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) {
          const GetIDRequest& this_ = static_cast<const GetIDRequest&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::uint8_t* GetIDRequest::_InternalSerialize(
            ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) const {
          const GetIDRequest& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(serialize_to_array_start:GetIDRequest)
          ::uint32_t cached_has_bits = 0;
          (void)cached_has_bits;

          // string client_name = 1;
          if (!this_._internal_client_name().empty()) {
            const std::string& _s = this_._internal_client_name();
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "GetIDRequest.client_name");
            target = stream->WriteStringMaybeAliased(1, _s, target);
          }

          // uint32 node_type = 2;
          if (this_._internal_node_type() != 0) {
            target = stream->EnsureSpace(target);
            target = ::_pbi::WireFormatLite::WriteUInt32ToArray(
                2, this_._internal_node_type(), target);
          }

          if (PROTOBUF_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
            target =
                ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
                    this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
          }
          // @@protoc_insertion_point(serialize_to_array_end:GetIDRequest)
          return target;
        }

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::size_t GetIDRequest::ByteSizeLong(const MessageLite& base) {
          const GetIDRequest& this_ = static_cast<const GetIDRequest&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::size_t GetIDRequest::ByteSizeLong() const {
          const GetIDRequest& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(message_byte_size_start:GetIDRequest)
          ::size_t total_size = 0;

          ::uint32_t cached_has_bits = 0;
          // Prevent compiler warnings about cached_has_bits being unused
          (void)cached_has_bits;

          ::_pbi::Prefetch5LinesFrom7Lines(&this_);
           {
            // string client_name = 1;
            if (!this_._internal_client_name().empty()) {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                              this_._internal_client_name());
            }
            // uint32 node_type = 2;
            if (this_._internal_node_type() != 0) {
              total_size += ::_pbi::WireFormatLite::UInt32SizePlusOne(
                  this_._internal_node_type());
            }
          }
          return this_.MaybeComputeUnknownFieldsSize(total_size,
                                                     &this_._impl_._cached_size_);
        }

void GetIDRequest::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<GetIDRequest*>(&to_msg);
  auto& from = static_cast<const GetIDRequest&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:GetIDRequest)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_client_name().empty()) {
    _this->_internal_set_client_name(from._internal_client_name());
  }
  if (from._internal_node_type() != 0) {
    _this->_impl_.node_type_ = from._impl_.node_type_;
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void GetIDRequest::CopyFrom(const GetIDRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:GetIDRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void GetIDRequest::InternalSwap(GetIDRequest* PROTOBUF_RESTRICT other) {
  using std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.client_name_, &other->_impl_.client_name_, arena);
        swap(_impl_.node_type_, other->_impl_.node_type_);
}

::google::protobuf::Metadata GetIDRequest::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class GetIDResponse::_Internal {
 public:
};

GetIDResponse::GetIDResponse(::google::protobuf::Arena* arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:GetIDResponse)
}
GetIDResponse::GetIDResponse(
    ::google::protobuf::Arena* arena, const GetIDResponse& from)
    : GetIDResponse(arena) {
  MergeFrom(from);
}
inline PROTOBUF_NDEBUG_INLINE GetIDResponse::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0} {}

inline void GetIDResponse::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, id_),
           0,
           offsetof(Impl_, lease_id_) -
               offsetof(Impl_, id_) +
               sizeof(Impl_::lease_id_));
}
GetIDResponse::~GetIDResponse() {
  // @@protoc_insertion_point(destructor:GetIDResponse)
  SharedDtor(*this);
}
inline void GetIDResponse::SharedDtor(MessageLite& self) {
  GetIDResponse& this_ = static_cast<GetIDResponse&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  this_._impl_.~Impl_();
}

inline void* GetIDResponse::PlacementNew_(const void*, void* mem,
                                        ::google::protobuf::Arena* arena) {
  return ::new (mem) GetIDResponse(arena);
}
constexpr auto GetIDResponse::InternalNewImpl_() {
  return ::google::protobuf::internal::MessageCreator::ZeroInit(sizeof(GetIDResponse),
                                            alignof(GetIDResponse));
}
PROTOBUF_CONSTINIT
PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::google::protobuf::internal::ClassDataFull GetIDResponse::_class_data_ = {
    ::google::protobuf::internal::ClassData{
        &_GetIDResponse_default_instance_._instance,
        &_table_.header,
        nullptr,  // OnDemandRegisterArenaDtor
        nullptr,  // IsInitialized
        &GetIDResponse::MergeImpl,
        ::google::protobuf::Message::GetNewImpl<GetIDResponse>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
        &GetIDResponse::SharedDtor,
        ::google::protobuf::Message::GetClearImpl<GetIDResponse>(), &GetIDResponse::ByteSizeLong,
            &GetIDResponse::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
        PROTOBUF_FIELD_OFFSET(GetIDResponse, _impl_._cached_size_),
        false,
    },
    &GetIDResponse::kDescriptorMethods,
    &descriptor_table_proto_2fcommon_2fdeploy_5fservice_2eproto,
    nullptr,  // tracker
};
const ::google::protobuf::internal::ClassData* GetIDResponse::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_class_data_.tc_table);
  return _class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<1, 2, 0, 0, 2> GetIDResponse::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    2, 8,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967292,  // skipmap
    offsetof(decltype(_table_), field_entries),
    2,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    _class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::GetIDResponse>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // uint64 lease_id = 2;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint64_t, offsetof(GetIDResponse, _impl_.lease_id_), 63>(),
     {16, 63, 0, PROTOBUF_FIELD_OFFSET(GetIDResponse, _impl_.lease_id_)}},
    // uint64 id = 1;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint64_t, offsetof(GetIDResponse, _impl_.id_), 63>(),
     {8, 63, 0, PROTOBUF_FIELD_OFFSET(GetIDResponse, _impl_.id_)}},
  }}, {{
    65535, 65535
  }}, {{
    // uint64 id = 1;
    {PROTOBUF_FIELD_OFFSET(GetIDResponse, _impl_.id_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUInt64)},
    // uint64 lease_id = 2;
    {PROTOBUF_FIELD_OFFSET(GetIDResponse, _impl_.lease_id_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUInt64)},
  }},
  // no aux_entries
  {{
  }},
};

PROTOBUF_NOINLINE void GetIDResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:GetIDResponse)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&_impl_.id_, 0, static_cast<::size_t>(
      reinterpret_cast<char*>(&_impl_.lease_id_) -
      reinterpret_cast<char*>(&_impl_.id_)) + sizeof(_impl_.lease_id_));
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::uint8_t* GetIDResponse::_InternalSerialize(
            const MessageLite& base, ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) {
          const GetIDResponse& this_ = static_cast<const GetIDResponse&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::uint8_t* GetIDResponse::_InternalSerialize(
            ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) const {
          const GetIDResponse& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(serialize_to_array_start:GetIDResponse)
          ::uint32_t cached_has_bits = 0;
          (void)cached_has_bits;

          // uint64 id = 1;
          if (this_._internal_id() != 0) {
            target = stream->EnsureSpace(target);
            target = ::_pbi::WireFormatLite::WriteUInt64ToArray(
                1, this_._internal_id(), target);
          }

          // uint64 lease_id = 2;
          if (this_._internal_lease_id() != 0) {
            target = stream->EnsureSpace(target);
            target = ::_pbi::WireFormatLite::WriteUInt64ToArray(
                2, this_._internal_lease_id(), target);
          }

          if (PROTOBUF_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
            target =
                ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
                    this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
          }
          // @@protoc_insertion_point(serialize_to_array_end:GetIDResponse)
          return target;
        }

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::size_t GetIDResponse::ByteSizeLong(const MessageLite& base) {
          const GetIDResponse& this_ = static_cast<const GetIDResponse&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::size_t GetIDResponse::ByteSizeLong() const {
          const GetIDResponse& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(message_byte_size_start:GetIDResponse)
          ::size_t total_size = 0;

          ::uint32_t cached_has_bits = 0;
          // Prevent compiler warnings about cached_has_bits being unused
          (void)cached_has_bits;

          ::_pbi::Prefetch5LinesFrom7Lines(&this_);
           {
            // uint64 id = 1;
            if (this_._internal_id() != 0) {
              total_size += ::_pbi::WireFormatLite::UInt64SizePlusOne(
                  this_._internal_id());
            }
            // uint64 lease_id = 2;
            if (this_._internal_lease_id() != 0) {
              total_size += ::_pbi::WireFormatLite::UInt64SizePlusOne(
                  this_._internal_lease_id());
            }
          }
          return this_.MaybeComputeUnknownFieldsSize(total_size,
                                                     &this_._impl_._cached_size_);
        }

void GetIDResponse::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<GetIDResponse*>(&to_msg);
  auto& from = static_cast<const GetIDResponse&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:GetIDResponse)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_id() != 0) {
    _this->_impl_.id_ = from._impl_.id_;
  }
  if (from._internal_lease_id() != 0) {
    _this->_impl_.lease_id_ = from._impl_.lease_id_;
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void GetIDResponse::CopyFrom(const GetIDResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:GetIDResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void GetIDResponse::InternalSwap(GetIDResponse* PROTOBUF_RESTRICT other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(GetIDResponse, _impl_.lease_id_)
      + sizeof(GetIDResponse::_impl_.lease_id_)
      - PROTOBUF_FIELD_OFFSET(GetIDResponse, _impl_.id_)>(
          reinterpret_cast<char*>(&_impl_.id_),
          reinterpret_cast<char*>(&other->_impl_.id_));
}

::google::protobuf::Metadata GetIDResponse::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class ReleaseIDRequest::_Internal {
 public:
};

ReleaseIDRequest::ReleaseIDRequest(::google::protobuf::Arena* arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:ReleaseIDRequest)
}
ReleaseIDRequest::ReleaseIDRequest(
    ::google::protobuf::Arena* arena, const ReleaseIDRequest& from)
    : ReleaseIDRequest(arena) {
  MergeFrom(from);
}
inline PROTOBUF_NDEBUG_INLINE ReleaseIDRequest::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0} {}

inline void ReleaseIDRequest::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, id_),
           0,
           offsetof(Impl_, node_type_) -
               offsetof(Impl_, id_) +
               sizeof(Impl_::node_type_));
}
ReleaseIDRequest::~ReleaseIDRequest() {
  // @@protoc_insertion_point(destructor:ReleaseIDRequest)
  SharedDtor(*this);
}
inline void ReleaseIDRequest::SharedDtor(MessageLite& self) {
  ReleaseIDRequest& this_ = static_cast<ReleaseIDRequest&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  this_._impl_.~Impl_();
}

inline void* ReleaseIDRequest::PlacementNew_(const void*, void* mem,
                                        ::google::protobuf::Arena* arena) {
  return ::new (mem) ReleaseIDRequest(arena);
}
constexpr auto ReleaseIDRequest::InternalNewImpl_() {
  return ::google::protobuf::internal::MessageCreator::ZeroInit(sizeof(ReleaseIDRequest),
                                            alignof(ReleaseIDRequest));
}
PROTOBUF_CONSTINIT
PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::google::protobuf::internal::ClassDataFull ReleaseIDRequest::_class_data_ = {
    ::google::protobuf::internal::ClassData{
        &_ReleaseIDRequest_default_instance_._instance,
        &_table_.header,
        nullptr,  // OnDemandRegisterArenaDtor
        nullptr,  // IsInitialized
        &ReleaseIDRequest::MergeImpl,
        ::google::protobuf::Message::GetNewImpl<ReleaseIDRequest>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
        &ReleaseIDRequest::SharedDtor,
        ::google::protobuf::Message::GetClearImpl<ReleaseIDRequest>(), &ReleaseIDRequest::ByteSizeLong,
            &ReleaseIDRequest::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
        PROTOBUF_FIELD_OFFSET(ReleaseIDRequest, _impl_._cached_size_),
        false,
    },
    &ReleaseIDRequest::kDescriptorMethods,
    &descriptor_table_proto_2fcommon_2fdeploy_5fservice_2eproto,
    nullptr,  // tracker
};
const ::google::protobuf::internal::ClassData* ReleaseIDRequest::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_class_data_.tc_table);
  return _class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<2, 3, 0, 0, 2> ReleaseIDRequest::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    3, 24,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967288,  // skipmap
    offsetof(decltype(_table_), field_entries),
    3,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    _class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::ReleaseIDRequest>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
    // uint64 id = 1;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint64_t, offsetof(ReleaseIDRequest, _impl_.id_), 63>(),
     {8, 63, 0, PROTOBUF_FIELD_OFFSET(ReleaseIDRequest, _impl_.id_)}},
    // uint32 node_type = 2;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(ReleaseIDRequest, _impl_.node_type_), 63>(),
     {16, 63, 0, PROTOBUF_FIELD_OFFSET(ReleaseIDRequest, _impl_.node_type_)}},
    // uint64 lease_id = 3;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint64_t, offsetof(ReleaseIDRequest, _impl_.lease_id_), 63>(),
     {24, 63, 0, PROTOBUF_FIELD_OFFSET(ReleaseIDRequest, _impl_.lease_id_)}},
  }}, {{
    65535, 65535
  }}, {{
    // uint64 id = 1;
    {PROTOBUF_FIELD_OFFSET(ReleaseIDRequest, _impl_.id_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUInt64)},
    // uint32 node_type = 2;
    {PROTOBUF_FIELD_OFFSET(ReleaseIDRequest, _impl_.node_type_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUInt32)},
    // uint64 lease_id = 3;
    {PROTOBUF_FIELD_OFFSET(ReleaseIDRequest, _impl_.lease_id_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUInt64)},
  }},
  // no aux_entries
  {{
  }},
};

PROTOBUF_NOINLINE void ReleaseIDRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:ReleaseIDRequest)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&_impl_.id_, 0, static_cast<::size_t>(
      reinterpret_cast<char*>(&_impl_.node_type_) -
      reinterpret_cast<char*>(&_impl_.id_)) + sizeof(_impl_.node_type_));
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::uint8_t* ReleaseIDRequest::_InternalSerialize(
            const MessageLite& base, ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) {
          const ReleaseIDRequest& this_ = static_cast<const ReleaseIDRequest&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::uint8_t* ReleaseIDRequest::_InternalSerialize(
            ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) const {
          const ReleaseIDRequest& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(serialize_to_array_start:ReleaseIDRequest)
          ::uint32_t cached_has_bits = 0;
          (void)cached_has_bits;

          // uint64 id = 1;
          if (this_._internal_id() != 0) {
            target = stream->EnsureSpace(target);
            target = ::_pbi::WireFormatLite::WriteUInt64ToArray(
                1, this_._internal_id(), target);
          }

          // uint32 node_type = 2;
          if (this_._internal_node_type() != 0) {
            target = stream->EnsureSpace(target);
            target = ::_pbi::WireFormatLite::WriteUInt32ToArray(
                2, this_._internal_node_type(), target);
          }

          // uint64 lease_id = 3;
          if (this_._internal_lease_id() != 0) {
            target = stream->EnsureSpace(target);
            target = ::_pbi::WireFormatLite::WriteUInt64ToArray(
                3, this_._internal_lease_id(), target);
          }

          if (PROTOBUF_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
            target =
                ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
                    this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
          }
          // @@protoc_insertion_point(serialize_to_array_end:ReleaseIDRequest)
          return target;
        }

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::size_t ReleaseIDRequest::ByteSizeLong(const MessageLite& base) {
          const ReleaseIDRequest& this_ = static_cast<const ReleaseIDRequest&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::size_t ReleaseIDRequest::ByteSizeLong() const {
          const ReleaseIDRequest& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(message_byte_size_start:ReleaseIDRequest)
          ::size_t total_size = 0;

          ::uint32_t cached_has_bits = 0;
          // Prevent compiler warnings about cached_has_bits being unused
          (void)cached_has_bits;

          ::_pbi::Prefetch5LinesFrom7Lines(&this_);
           {
            // uint64 id = 1;
            if (this_._internal_id() != 0) {
              total_size += ::_pbi::WireFormatLite::UInt64SizePlusOne(
                  this_._internal_id());
            }
            // uint64 lease_id = 3;
            if (this_._internal_lease_id() != 0) {
              total_size += ::_pbi::WireFormatLite::UInt64SizePlusOne(
                  this_._internal_lease_id());
            }
            // uint32 node_type = 2;
            if (this_._internal_node_type() != 0) {
              total_size += ::_pbi::WireFormatLite::UInt32SizePlusOne(
                  this_._internal_node_type());
            }
          }
          return this_.MaybeComputeUnknownFieldsSize(total_size,
                                                     &this_._impl_._cached_size_);
        }

void ReleaseIDRequest::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<ReleaseIDRequest*>(&to_msg);
  auto& from = static_cast<const ReleaseIDRequest&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:ReleaseIDRequest)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_id() != 0) {
    _this->_impl_.id_ = from._impl_.id_;
  }
  if (from._internal_lease_id() != 0) {
    _this->_impl_.lease_id_ = from._impl_.lease_id_;
  }
  if (from._internal_node_type() != 0) {
    _this->_impl_.node_type_ = from._impl_.node_type_;
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void ReleaseIDRequest::CopyFrom(const ReleaseIDRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:ReleaseIDRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void ReleaseIDRequest::InternalSwap(ReleaseIDRequest* PROTOBUF_RESTRICT other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(ReleaseIDRequest, _impl_.node_type_)
      + sizeof(ReleaseIDRequest::_impl_.node_type_)
      - PROTOBUF_FIELD_OFFSET(ReleaseIDRequest, _impl_.id_)>(
          reinterpret_cast<char*>(&_impl_.id_),
          reinterpret_cast<char*>(&other->_impl_.id_));
}

::google::protobuf::Metadata ReleaseIDRequest::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class ReleaseIDResponse::_Internal {
 public:
};

ReleaseIDResponse::ReleaseIDResponse(::google::protobuf::Arena* arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:ReleaseIDResponse)
}
ReleaseIDResponse::ReleaseIDResponse(
    ::google::protobuf::Arena* arena, const ReleaseIDResponse& from)
    : ReleaseIDResponse(arena) {
  MergeFrom(from);
}
inline PROTOBUF_NDEBUG_INLINE ReleaseIDResponse::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0} {}

inline void ReleaseIDResponse::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  _impl_.success_ = {};
}
ReleaseIDResponse::~ReleaseIDResponse() {
  // @@protoc_insertion_point(destructor:ReleaseIDResponse)
  SharedDtor(*this);
}
inline void ReleaseIDResponse::SharedDtor(MessageLite& self) {
  ReleaseIDResponse& this_ = static_cast<ReleaseIDResponse&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  this_._impl_.~Impl_();
}

inline void* ReleaseIDResponse::PlacementNew_(const void*, void* mem,
                                        ::google::protobuf::Arena* arena) {
  return ::new (mem) ReleaseIDResponse(arena);
}
constexpr auto ReleaseIDResponse::InternalNewImpl_() {
  return ::google::protobuf::internal::MessageCreator::ZeroInit(sizeof(ReleaseIDResponse),
                                            alignof(ReleaseIDResponse));
}
PROTOBUF_CONSTINIT
PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::google::protobuf::internal::ClassDataFull ReleaseIDResponse::_class_data_ = {
    ::google::protobuf::internal::ClassData{
        &_ReleaseIDResponse_default_instance_._instance,
        &_table_.header,
        nullptr,  // OnDemandRegisterArenaDtor
        nullptr,  // IsInitialized
        &ReleaseIDResponse::MergeImpl,
        ::google::protobuf::Message::GetNewImpl<ReleaseIDResponse>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
        &ReleaseIDResponse::SharedDtor,
        ::google::protobuf::Message::GetClearImpl<ReleaseIDResponse>(), &ReleaseIDResponse::ByteSizeLong,
            &ReleaseIDResponse::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
        PROTOBUF_FIELD_OFFSET(ReleaseIDResponse, _impl_._cached_size_),
        false,
    },
    &ReleaseIDResponse::kDescriptorMethods,
    &descriptor_table_proto_2fcommon_2fdeploy_5fservice_2eproto,
    nullptr,  // tracker
};
const ::google::protobuf::internal::ClassData* ReleaseIDResponse::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_class_data_.tc_table);
  return _class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<0, 1, 0, 0, 2> ReleaseIDResponse::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    1, 0,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967294,  // skipmap
    offsetof(decltype(_table_), field_entries),
    1,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    _class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::ReleaseIDResponse>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // bool success = 1;
    {::_pbi::TcParser::SingularVarintNoZag1<bool, offsetof(ReleaseIDResponse, _impl_.success_), 63>(),
     {8, 63, 0, PROTOBUF_FIELD_OFFSET(ReleaseIDResponse, _impl_.success_)}},
  }}, {{
    65535, 65535
  }}, {{
    // bool success = 1;
    {PROTOBUF_FIELD_OFFSET(ReleaseIDResponse, _impl_.success_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kBool)},
  }},
  // no aux_entries
  {{
  }},
};

PROTOBUF_NOINLINE void ReleaseIDResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:ReleaseIDResponse)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.success_ = false;
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::uint8_t* ReleaseIDResponse::_InternalSerialize(
            const MessageLite& base, ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) {
          const ReleaseIDResponse& this_ = static_cast<const ReleaseIDResponse&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::uint8_t* ReleaseIDResponse::_InternalSerialize(
            ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) const {
          const ReleaseIDResponse& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(serialize_to_array_start:ReleaseIDResponse)
          ::uint32_t cached_has_bits = 0;
          (void)cached_has_bits;

          // bool success = 1;
          if (this_._internal_success() != 0) {
            target = stream->EnsureSpace(target);
            target = ::_pbi::WireFormatLite::WriteBoolToArray(
                1, this_._internal_success(), target);
          }

          if (PROTOBUF_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
            target =
                ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
                    this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
          }
          // @@protoc_insertion_point(serialize_to_array_end:ReleaseIDResponse)
          return target;
        }

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::size_t ReleaseIDResponse::ByteSizeLong(const MessageLite& base) {
          const ReleaseIDResponse& this_ = static_cast<const ReleaseIDResponse&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::size_t ReleaseIDResponse::ByteSizeLong() const {
          const ReleaseIDResponse& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(message_byte_size_start:ReleaseIDResponse)
          ::size_t total_size = 0;

          ::uint32_t cached_has_bits = 0;
          // Prevent compiler warnings about cached_has_bits being unused
          (void)cached_has_bits;

           {
            // bool success = 1;
            if (this_._internal_success() != 0) {
              total_size += 2;
            }
          }
          return this_.MaybeComputeUnknownFieldsSize(total_size,
                                                     &this_._impl_._cached_size_);
        }

void ReleaseIDResponse::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<ReleaseIDResponse*>(&to_msg);
  auto& from = static_cast<const ReleaseIDResponse&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:ReleaseIDResponse)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_success() != 0) {
    _this->_impl_.success_ = from._impl_.success_;
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void ReleaseIDResponse::CopyFrom(const ReleaseIDResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:ReleaseIDResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void ReleaseIDResponse::InternalSwap(ReleaseIDResponse* PROTOBUF_RESTRICT other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
        swap(_impl_.success_, other->_impl_.success_);
}

::google::protobuf::Metadata ReleaseIDResponse::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class RenewLeaseIDRequest::_Internal {
 public:
};

RenewLeaseIDRequest::RenewLeaseIDRequest(::google::protobuf::Arena* arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:RenewLeaseIDRequest)
}
RenewLeaseIDRequest::RenewLeaseIDRequest(
    ::google::protobuf::Arena* arena, const RenewLeaseIDRequest& from)
    : RenewLeaseIDRequest(arena) {
  MergeFrom(from);
}
inline PROTOBUF_NDEBUG_INLINE RenewLeaseIDRequest::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0} {}

inline void RenewLeaseIDRequest::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  _impl_.lease_id_ = {};
}
RenewLeaseIDRequest::~RenewLeaseIDRequest() {
  // @@protoc_insertion_point(destructor:RenewLeaseIDRequest)
  SharedDtor(*this);
}
inline void RenewLeaseIDRequest::SharedDtor(MessageLite& self) {
  RenewLeaseIDRequest& this_ = static_cast<RenewLeaseIDRequest&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  this_._impl_.~Impl_();
}

inline void* RenewLeaseIDRequest::PlacementNew_(const void*, void* mem,
                                        ::google::protobuf::Arena* arena) {
  return ::new (mem) RenewLeaseIDRequest(arena);
}
constexpr auto RenewLeaseIDRequest::InternalNewImpl_() {
  return ::google::protobuf::internal::MessageCreator::ZeroInit(sizeof(RenewLeaseIDRequest),
                                            alignof(RenewLeaseIDRequest));
}
PROTOBUF_CONSTINIT
PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::google::protobuf::internal::ClassDataFull RenewLeaseIDRequest::_class_data_ = {
    ::google::protobuf::internal::ClassData{
        &_RenewLeaseIDRequest_default_instance_._instance,
        &_table_.header,
        nullptr,  // OnDemandRegisterArenaDtor
        nullptr,  // IsInitialized
        &RenewLeaseIDRequest::MergeImpl,
        ::google::protobuf::Message::GetNewImpl<RenewLeaseIDRequest>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
        &RenewLeaseIDRequest::SharedDtor,
        ::google::protobuf::Message::GetClearImpl<RenewLeaseIDRequest>(), &RenewLeaseIDRequest::ByteSizeLong,
            &RenewLeaseIDRequest::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
        PROTOBUF_FIELD_OFFSET(RenewLeaseIDRequest, _impl_._cached_size_),
        false,
    },
    &RenewLeaseIDRequest::kDescriptorMethods,
    &descriptor_table_proto_2fcommon_2fdeploy_5fservice_2eproto,
    nullptr,  // tracker
};
const ::google::protobuf::internal::ClassData* RenewLeaseIDRequest::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_class_data_.tc_table);
  return _class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<0, 1, 0, 0, 2> RenewLeaseIDRequest::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    1, 0,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967294,  // skipmap
    offsetof(decltype(_table_), field_entries),
    1,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    _class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::RenewLeaseIDRequest>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // uint64 lease_id = 1;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint64_t, offsetof(RenewLeaseIDRequest, _impl_.lease_id_), 63>(),
     {8, 63, 0, PROTOBUF_FIELD_OFFSET(RenewLeaseIDRequest, _impl_.lease_id_)}},
  }}, {{
    65535, 65535
  }}, {{
    // uint64 lease_id = 1;
    {PROTOBUF_FIELD_OFFSET(RenewLeaseIDRequest, _impl_.lease_id_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUInt64)},
  }},
  // no aux_entries
  {{
  }},
};

PROTOBUF_NOINLINE void RenewLeaseIDRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:RenewLeaseIDRequest)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.lease_id_ = ::uint64_t{0u};
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::uint8_t* RenewLeaseIDRequest::_InternalSerialize(
            const MessageLite& base, ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) {
          const RenewLeaseIDRequest& this_ = static_cast<const RenewLeaseIDRequest&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::uint8_t* RenewLeaseIDRequest::_InternalSerialize(
            ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) const {
          const RenewLeaseIDRequest& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(serialize_to_array_start:RenewLeaseIDRequest)
          ::uint32_t cached_has_bits = 0;
          (void)cached_has_bits;

          // uint64 lease_id = 1;
          if (this_._internal_lease_id() != 0) {
            target = stream->EnsureSpace(target);
            target = ::_pbi::WireFormatLite::WriteUInt64ToArray(
                1, this_._internal_lease_id(), target);
          }

          if (PROTOBUF_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
            target =
                ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
                    this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
          }
          // @@protoc_insertion_point(serialize_to_array_end:RenewLeaseIDRequest)
          return target;
        }

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::size_t RenewLeaseIDRequest::ByteSizeLong(const MessageLite& base) {
          const RenewLeaseIDRequest& this_ = static_cast<const RenewLeaseIDRequest&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::size_t RenewLeaseIDRequest::ByteSizeLong() const {
          const RenewLeaseIDRequest& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(message_byte_size_start:RenewLeaseIDRequest)
          ::size_t total_size = 0;

          ::uint32_t cached_has_bits = 0;
          // Prevent compiler warnings about cached_has_bits being unused
          (void)cached_has_bits;

           {
            // uint64 lease_id = 1;
            if (this_._internal_lease_id() != 0) {
              total_size += ::_pbi::WireFormatLite::UInt64SizePlusOne(
                  this_._internal_lease_id());
            }
          }
          return this_.MaybeComputeUnknownFieldsSize(total_size,
                                                     &this_._impl_._cached_size_);
        }

void RenewLeaseIDRequest::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<RenewLeaseIDRequest*>(&to_msg);
  auto& from = static_cast<const RenewLeaseIDRequest&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:RenewLeaseIDRequest)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_lease_id() != 0) {
    _this->_impl_.lease_id_ = from._impl_.lease_id_;
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void RenewLeaseIDRequest::CopyFrom(const RenewLeaseIDRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:RenewLeaseIDRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void RenewLeaseIDRequest::InternalSwap(RenewLeaseIDRequest* PROTOBUF_RESTRICT other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
        swap(_impl_.lease_id_, other->_impl_.lease_id_);
}

::google::protobuf::Metadata RenewLeaseIDRequest::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class RenewLeaseIDResponse::_Internal {
 public:
};

RenewLeaseIDResponse::RenewLeaseIDResponse(::google::protobuf::Arena* arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::internal::ZeroFieldsBase(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::internal::ZeroFieldsBase(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  // @@protoc_insertion_point(arena_constructor:RenewLeaseIDResponse)
}
RenewLeaseIDResponse::RenewLeaseIDResponse(
    ::google::protobuf::Arena* arena,
    const RenewLeaseIDResponse& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::internal::ZeroFieldsBase(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::internal::ZeroFieldsBase(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  RenewLeaseIDResponse* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);

  // @@protoc_insertion_point(copy_constructor:RenewLeaseIDResponse)
}

inline void* RenewLeaseIDResponse::PlacementNew_(const void*, void* mem,
                                        ::google::protobuf::Arena* arena) {
  return ::new (mem) RenewLeaseIDResponse(arena);
}
constexpr auto RenewLeaseIDResponse::InternalNewImpl_() {
  return ::google::protobuf::internal::MessageCreator::ZeroInit(sizeof(RenewLeaseIDResponse),
                                            alignof(RenewLeaseIDResponse));
}
PROTOBUF_CONSTINIT
PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::google::protobuf::internal::ClassDataFull RenewLeaseIDResponse::_class_data_ = {
    ::google::protobuf::internal::ClassData{
        &_RenewLeaseIDResponse_default_instance_._instance,
        &_table_.header,
        nullptr,  // OnDemandRegisterArenaDtor
        nullptr,  // IsInitialized
        &RenewLeaseIDResponse::MergeImpl,
        ::google::protobuf::internal::ZeroFieldsBase::GetNewImpl<RenewLeaseIDResponse>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
        &RenewLeaseIDResponse::SharedDtor,
        ::google::protobuf::internal::ZeroFieldsBase::GetClearImpl<RenewLeaseIDResponse>(), &RenewLeaseIDResponse::ByteSizeLong,
            &RenewLeaseIDResponse::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
        PROTOBUF_FIELD_OFFSET(RenewLeaseIDResponse, _impl_._cached_size_),
        false,
    },
    &RenewLeaseIDResponse::kDescriptorMethods,
    &descriptor_table_proto_2fcommon_2fdeploy_5fservice_2eproto,
    nullptr,  // tracker
};
const ::google::protobuf::internal::ClassData* RenewLeaseIDResponse::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_class_data_.tc_table);
  return _class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<0, 0, 0, 0, 2> RenewLeaseIDResponse::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    0, 0,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967295,  // skipmap
    offsetof(decltype(_table_), field_names),  // no field_entries
    0,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    _class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::RenewLeaseIDResponse>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
  }}, {{
    65535, 65535
  }},
  // no field_entries, or aux_entries
  {{
  }},
};








::google::protobuf::Metadata RenewLeaseIDResponse::GetMetadata() const {
  return ::google::protobuf::internal::ZeroFieldsBase::GetMetadataImpl(GetClassData()->full());
}
// @@protoc_insertion_point(namespace_scope)
namespace google {
namespace protobuf {
}  // namespace protobuf
}  // namespace google
// @@protoc_insertion_point(global_scope)
PROTOBUF_ATTRIBUTE_INIT_PRIORITY2 static ::std::false_type
    _static_init2_ PROTOBUF_UNUSED =
        (::_pbi::AddDescriptors(&descriptor_table_proto_2fcommon_2fdeploy_5fservice_2eproto),
         ::std::false_type{});
#include "google/protobuf/port_undef.inc"
