// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: proto/common/deploy_service.proto
// Protobuf C++ Version: 5.26.1

#include "proto/common/deploy_service.pb.h"

#include <algorithm>
#include "google/protobuf/io/coded_stream.h"
#include "google/protobuf/extension_set.h"
#include "google/protobuf/wire_format_lite.h"
#include "google/protobuf/descriptor.h"
#include "google/protobuf/generated_message_reflection.h"
#include "google/protobuf/reflection_ops.h"
#include "google/protobuf/wire_format.h"
#include "google/protobuf/generated_message_tctable_impl.h"
// @@protoc_insertion_point(includes)

// Must be included last.
#include "google/protobuf/port_def.inc"
PROTOBUF_PRAGMA_INIT_SEG
namespace _pb = ::google::protobuf;
namespace _pbi = ::google::protobuf::internal;
namespace _fl = ::google::protobuf::internal::field_layout;

inline constexpr redis_node_db::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : ip_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        id_{0u},
        port_{0u},
        zone_id_{0u},
        _cached_size_{0} {}

template <typename>
PROTOBUF_CONSTEXPR redis_node_db::redis_node_db(::_pbi::ConstantInitialized)
    : _impl_(::_pbi::ConstantInitialized()) {}
struct redis_node_dbDefaultTypeInternal {
  PROTOBUF_CONSTEXPR redis_node_dbDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~redis_node_dbDefaultTypeInternal() {}
  union {
    redis_node_db _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 redis_node_dbDefaultTypeInternal _redis_node_db_default_instance_;

inline constexpr login_node_db::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : addr_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        id_{0u},
        zone_id_{0u},
        _cached_size_{0} {}

template <typename>
PROTOBUF_CONSTEXPR login_node_db::login_node_db(::_pbi::ConstantInitialized)
    : _impl_(::_pbi::ConstantInitialized()) {}
struct login_node_dbDefaultTypeInternal {
  PROTOBUF_CONSTEXPR login_node_dbDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~login_node_dbDefaultTypeInternal() {}
  union {
    login_node_db _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 login_node_dbDefaultTypeInternal _login_node_db_default_instance_;

inline constexpr lobby_node_db::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : ip_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        id_{0u},
        port_{0u},
        _cached_size_{0} {}

template <typename>
PROTOBUF_CONSTEXPR lobby_node_db::lobby_node_db(::_pbi::ConstantInitialized)
    : _impl_(::_pbi::ConstantInitialized()) {}
struct lobby_node_dbDefaultTypeInternal {
  PROTOBUF_CONSTEXPR lobby_node_dbDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~lobby_node_dbDefaultTypeInternal() {}
  union {
    lobby_node_db _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 lobby_node_dbDefaultTypeInternal _lobby_node_db_default_instance_;

inline constexpr gate_node_db::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : ip_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        id_{0u},
        port_{0u},
        zone_id_{0u},
        _cached_size_{0} {}

template <typename>
PROTOBUF_CONSTEXPR gate_node_db::gate_node_db(::_pbi::ConstantInitialized)
    : _impl_(::_pbi::ConstantInitialized()) {}
struct gate_node_dbDefaultTypeInternal {
  PROTOBUF_CONSTEXPR gate_node_dbDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~gate_node_dbDefaultTypeInternal() {}
  union {
    gate_node_db _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 gate_node_dbDefaultTypeInternal _gate_node_db_default_instance_;

inline constexpr game_node_db::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : ip_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        id_{0u},
        port_{0u},
        zone_id_{0u},
        _cached_size_{0} {}

template <typename>
PROTOBUF_CONSTEXPR game_node_db::game_node_db(::_pbi::ConstantInitialized)
    : _impl_(::_pbi::ConstantInitialized()) {}
struct game_node_dbDefaultTypeInternal {
  PROTOBUF_CONSTEXPR game_node_dbDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~game_node_dbDefaultTypeInternal() {}
  union {
    game_node_db _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 game_node_dbDefaultTypeInternal _game_node_db_default_instance_;

inline constexpr database_node_db::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : addr_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        id_{0u},
        zone_id_{0u},
        _cached_size_{0} {}

template <typename>
PROTOBUF_CONSTEXPR database_node_db::database_node_db(::_pbi::ConstantInitialized)
    : _impl_(::_pbi::ConstantInitialized()) {}
struct database_node_dbDefaultTypeInternal {
  PROTOBUF_CONSTEXPR database_node_dbDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~database_node_dbDefaultTypeInternal() {}
  union {
    database_node_db _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 database_node_dbDefaultTypeInternal _database_node_db_default_instance_;

inline constexpr centre_node_db::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : ip_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        id_{0u},
        port_{0u},
        zone_id_{0u},
        _cached_size_{0} {}

template <typename>
PROTOBUF_CONSTEXPR centre_node_db::centre_node_db(::_pbi::ConstantInitialized)
    : _impl_(::_pbi::ConstantInitialized()) {}
struct centre_node_dbDefaultTypeInternal {
  PROTOBUF_CONSTEXPR centre_node_dbDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~centre_node_dbDefaultTypeInternal() {}
  union {
    centre_node_db _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 centre_node_dbDefaultTypeInternal _centre_node_db_default_instance_;

inline constexpr ReleaseIDResponse::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : success_{false},
        _cached_size_{0} {}

template <typename>
PROTOBUF_CONSTEXPR ReleaseIDResponse::ReleaseIDResponse(::_pbi::ConstantInitialized)
    : _impl_(::_pbi::ConstantInitialized()) {}
struct ReleaseIDResponseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR ReleaseIDResponseDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~ReleaseIDResponseDefaultTypeInternal() {}
  union {
    ReleaseIDResponse _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 ReleaseIDResponseDefaultTypeInternal _ReleaseIDResponse_default_instance_;

inline constexpr ReleaseIDRequest::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : id_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        server_type_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        _cached_size_{0} {}

template <typename>
PROTOBUF_CONSTEXPR ReleaseIDRequest::ReleaseIDRequest(::_pbi::ConstantInitialized)
    : _impl_(::_pbi::ConstantInitialized()) {}
struct ReleaseIDRequestDefaultTypeInternal {
  PROTOBUF_CONSTEXPR ReleaseIDRequestDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~ReleaseIDRequestDefaultTypeInternal() {}
  union {
    ReleaseIDRequest _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 ReleaseIDRequestDefaultTypeInternal _ReleaseIDRequest_default_instance_;

inline constexpr NodeInfoRequest::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : zone_id_{0u},
        node_type_{0u},
        _cached_size_{0} {}

template <typename>
PROTOBUF_CONSTEXPR NodeInfoRequest::NodeInfoRequest(::_pbi::ConstantInitialized)
    : _impl_(::_pbi::ConstantInitialized()) {}
struct NodeInfoRequestDefaultTypeInternal {
  PROTOBUF_CONSTEXPR NodeInfoRequestDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~NodeInfoRequestDefaultTypeInternal() {}
  union {
    NodeInfoRequest _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 NodeInfoRequestDefaultTypeInternal _NodeInfoRequest_default_instance_;

inline constexpr GetIDResponse::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : id_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        _cached_size_{0} {}

template <typename>
PROTOBUF_CONSTEXPR GetIDResponse::GetIDResponse(::_pbi::ConstantInitialized)
    : _impl_(::_pbi::ConstantInitialized()) {}
struct GetIDResponseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR GetIDResponseDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~GetIDResponseDefaultTypeInternal() {}
  union {
    GetIDResponse _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 GetIDResponseDefaultTypeInternal _GetIDResponse_default_instance_;

inline constexpr GetIDRequest::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : client_name_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        server_type_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        _cached_size_{0} {}

template <typename>
PROTOBUF_CONSTEXPR GetIDRequest::GetIDRequest(::_pbi::ConstantInitialized)
    : _impl_(::_pbi::ConstantInitialized()) {}
struct GetIDRequestDefaultTypeInternal {
  PROTOBUF_CONSTEXPR GetIDRequestDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~GetIDRequestDefaultTypeInternal() {}
  union {
    GetIDRequest _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 GetIDRequestDefaultTypeInternal _GetIDRequest_default_instance_;

inline constexpr redis_node_list_db::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : redis_info_{},
        _cached_size_{0} {}

template <typename>
PROTOBUF_CONSTEXPR redis_node_list_db::redis_node_list_db(::_pbi::ConstantInitialized)
    : _impl_(::_pbi::ConstantInitialized()) {}
struct redis_node_list_dbDefaultTypeInternal {
  PROTOBUF_CONSTEXPR redis_node_list_dbDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~redis_node_list_dbDefaultTypeInternal() {}
  union {
    redis_node_list_db _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 redis_node_list_dbDefaultTypeInternal _redis_node_list_db_default_instance_;

inline constexpr login_node_list_db::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : login_info_{},
        _cached_size_{0} {}

template <typename>
PROTOBUF_CONSTEXPR login_node_list_db::login_node_list_db(::_pbi::ConstantInitialized)
    : _impl_(::_pbi::ConstantInitialized()) {}
struct login_node_list_dbDefaultTypeInternal {
  PROTOBUF_CONSTEXPR login_node_list_dbDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~login_node_list_dbDefaultTypeInternal() {}
  union {
    login_node_list_db _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 login_node_list_dbDefaultTypeInternal _login_node_list_db_default_instance_;

inline constexpr gate_node_list_db::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : gate_info_{},
        _cached_size_{0} {}

template <typename>
PROTOBUF_CONSTEXPR gate_node_list_db::gate_node_list_db(::_pbi::ConstantInitialized)
    : _impl_(::_pbi::ConstantInitialized()) {}
struct gate_node_list_dbDefaultTypeInternal {
  PROTOBUF_CONSTEXPR gate_node_list_dbDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~gate_node_list_dbDefaultTypeInternal() {}
  union {
    gate_node_list_db _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 gate_node_list_dbDefaultTypeInternal _gate_node_list_db_default_instance_;

inline constexpr game_node_list_db::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : game_info_{},
        _cached_size_{0} {}

template <typename>
PROTOBUF_CONSTEXPR game_node_list_db::game_node_list_db(::_pbi::ConstantInitialized)
    : _impl_(::_pbi::ConstantInitialized()) {}
struct game_node_list_dbDefaultTypeInternal {
  PROTOBUF_CONSTEXPR game_node_list_dbDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~game_node_list_dbDefaultTypeInternal() {}
  union {
    game_node_list_db _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 game_node_list_dbDefaultTypeInternal _game_node_list_db_default_instance_;

inline constexpr centre_node_list_db::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : centre_info_{},
        _cached_size_{0} {}

template <typename>
PROTOBUF_CONSTEXPR centre_node_list_db::centre_node_list_db(::_pbi::ConstantInitialized)
    : _impl_(::_pbi::ConstantInitialized()) {}
struct centre_node_list_dbDefaultTypeInternal {
  PROTOBUF_CONSTEXPR centre_node_list_dbDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~centre_node_list_dbDefaultTypeInternal() {}
  union {
    centre_node_list_db _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 centre_node_list_dbDefaultTypeInternal _centre_node_list_db_default_instance_;

inline constexpr nodes_info_data::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        database_info_{nullptr},
        login_info_{nullptr},
        centre_info_{nullptr},
        gate_info_{nullptr},
        game_info_{nullptr},
        redis_info_{nullptr} {}

template <typename>
PROTOBUF_CONSTEXPR nodes_info_data::nodes_info_data(::_pbi::ConstantInitialized)
    : _impl_(::_pbi::ConstantInitialized()) {}
struct nodes_info_dataDefaultTypeInternal {
  PROTOBUF_CONSTEXPR nodes_info_dataDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~nodes_info_dataDefaultTypeInternal() {}
  union {
    nodes_info_data _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 nodes_info_dataDefaultTypeInternal _nodes_info_data_default_instance_;

inline constexpr NodeInfoResponse::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        info_{nullptr},
        node_id_{0u} {}

template <typename>
PROTOBUF_CONSTEXPR NodeInfoResponse::NodeInfoResponse(::_pbi::ConstantInitialized)
    : _impl_(::_pbi::ConstantInitialized()) {}
struct NodeInfoResponseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR NodeInfoResponseDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~NodeInfoResponseDefaultTypeInternal() {}
  union {
    NodeInfoResponse _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 NodeInfoResponseDefaultTypeInternal _NodeInfoResponse_default_instance_;
static ::_pb::Metadata file_level_metadata_proto_2fcommon_2fdeploy_5fservice_2eproto[19];
static constexpr const ::_pb::EnumDescriptor**
    file_level_enum_descriptors_proto_2fcommon_2fdeploy_5fservice_2eproto = nullptr;
static constexpr const ::_pb::ServiceDescriptor**
    file_level_service_descriptors_proto_2fcommon_2fdeploy_5fservice_2eproto = nullptr;
const ::uint32_t
    TableStruct_proto_2fcommon_2fdeploy_5fservice_2eproto::offsets[] ABSL_ATTRIBUTE_SECTION_VARIABLE(
        protodesc_cold) = {
        ~0u,  // no _has_bits_
        PROTOBUF_FIELD_OFFSET(::database_node_db, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::database_node_db, _impl_.id_),
        PROTOBUF_FIELD_OFFSET(::database_node_db, _impl_.addr_),
        PROTOBUF_FIELD_OFFSET(::database_node_db, _impl_.zone_id_),
        ~0u,  // no _has_bits_
        PROTOBUF_FIELD_OFFSET(::login_node_list_db, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::login_node_list_db, _impl_.login_info_),
        ~0u,  // no _has_bits_
        PROTOBUF_FIELD_OFFSET(::centre_node_list_db, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::centre_node_list_db, _impl_.centre_info_),
        ~0u,  // no _has_bits_
        PROTOBUF_FIELD_OFFSET(::gate_node_list_db, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::gate_node_list_db, _impl_.gate_info_),
        ~0u,  // no _has_bits_
        PROTOBUF_FIELD_OFFSET(::game_node_list_db, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::game_node_list_db, _impl_.game_info_),
        ~0u,  // no _has_bits_
        PROTOBUF_FIELD_OFFSET(::redis_node_list_db, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::redis_node_list_db, _impl_.redis_info_),
        PROTOBUF_FIELD_OFFSET(::nodes_info_data, _impl_._has_bits_),
        PROTOBUF_FIELD_OFFSET(::nodes_info_data, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::nodes_info_data, _impl_.database_info_),
        PROTOBUF_FIELD_OFFSET(::nodes_info_data, _impl_.login_info_),
        PROTOBUF_FIELD_OFFSET(::nodes_info_data, _impl_.centre_info_),
        PROTOBUF_FIELD_OFFSET(::nodes_info_data, _impl_.gate_info_),
        PROTOBUF_FIELD_OFFSET(::nodes_info_data, _impl_.game_info_),
        PROTOBUF_FIELD_OFFSET(::nodes_info_data, _impl_.redis_info_),
        0,
        1,
        2,
        3,
        4,
        5,
        ~0u,  // no _has_bits_
        PROTOBUF_FIELD_OFFSET(::login_node_db, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::login_node_db, _impl_.id_),
        PROTOBUF_FIELD_OFFSET(::login_node_db, _impl_.addr_),
        PROTOBUF_FIELD_OFFSET(::login_node_db, _impl_.zone_id_),
        ~0u,  // no _has_bits_
        PROTOBUF_FIELD_OFFSET(::centre_node_db, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::centre_node_db, _impl_.id_),
        PROTOBUF_FIELD_OFFSET(::centre_node_db, _impl_.ip_),
        PROTOBUF_FIELD_OFFSET(::centre_node_db, _impl_.port_),
        PROTOBUF_FIELD_OFFSET(::centre_node_db, _impl_.zone_id_),
        ~0u,  // no _has_bits_
        PROTOBUF_FIELD_OFFSET(::lobby_node_db, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::lobby_node_db, _impl_.id_),
        PROTOBUF_FIELD_OFFSET(::lobby_node_db, _impl_.ip_),
        PROTOBUF_FIELD_OFFSET(::lobby_node_db, _impl_.port_),
        ~0u,  // no _has_bits_
        PROTOBUF_FIELD_OFFSET(::redis_node_db, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::redis_node_db, _impl_.id_),
        PROTOBUF_FIELD_OFFSET(::redis_node_db, _impl_.ip_),
        PROTOBUF_FIELD_OFFSET(::redis_node_db, _impl_.port_),
        PROTOBUF_FIELD_OFFSET(::redis_node_db, _impl_.zone_id_),
        ~0u,  // no _has_bits_
        PROTOBUF_FIELD_OFFSET(::game_node_db, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::game_node_db, _impl_.id_),
        PROTOBUF_FIELD_OFFSET(::game_node_db, _impl_.ip_),
        PROTOBUF_FIELD_OFFSET(::game_node_db, _impl_.port_),
        PROTOBUF_FIELD_OFFSET(::game_node_db, _impl_.zone_id_),
        ~0u,  // no _has_bits_
        PROTOBUF_FIELD_OFFSET(::gate_node_db, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::gate_node_db, _impl_.id_),
        PROTOBUF_FIELD_OFFSET(::gate_node_db, _impl_.ip_),
        PROTOBUF_FIELD_OFFSET(::gate_node_db, _impl_.port_),
        PROTOBUF_FIELD_OFFSET(::gate_node_db, _impl_.zone_id_),
        ~0u,  // no _has_bits_
        PROTOBUF_FIELD_OFFSET(::NodeInfoRequest, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::NodeInfoRequest, _impl_.zone_id_),
        PROTOBUF_FIELD_OFFSET(::NodeInfoRequest, _impl_.node_type_),
        PROTOBUF_FIELD_OFFSET(::NodeInfoResponse, _impl_._has_bits_),
        PROTOBUF_FIELD_OFFSET(::NodeInfoResponse, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::NodeInfoResponse, _impl_.info_),
        PROTOBUF_FIELD_OFFSET(::NodeInfoResponse, _impl_.node_id_),
        0,
        ~0u,
        ~0u,  // no _has_bits_
        PROTOBUF_FIELD_OFFSET(::GetIDRequest, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::GetIDRequest, _impl_.client_name_),
        PROTOBUF_FIELD_OFFSET(::GetIDRequest, _impl_.server_type_),
        ~0u,  // no _has_bits_
        PROTOBUF_FIELD_OFFSET(::GetIDResponse, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::GetIDResponse, _impl_.id_),
        ~0u,  // no _has_bits_
        PROTOBUF_FIELD_OFFSET(::ReleaseIDRequest, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::ReleaseIDRequest, _impl_.id_),
        PROTOBUF_FIELD_OFFSET(::ReleaseIDRequest, _impl_.server_type_),
        ~0u,  // no _has_bits_
        PROTOBUF_FIELD_OFFSET(::ReleaseIDResponse, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::ReleaseIDResponse, _impl_.success_),
};

static const ::_pbi::MigrationSchema
    schemas[] ABSL_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
        {0, -1, -1, sizeof(::database_node_db)},
        {11, -1, -1, sizeof(::login_node_list_db)},
        {20, -1, -1, sizeof(::centre_node_list_db)},
        {29, -1, -1, sizeof(::gate_node_list_db)},
        {38, -1, -1, sizeof(::game_node_list_db)},
        {47, -1, -1, sizeof(::redis_node_list_db)},
        {56, 70, -1, sizeof(::nodes_info_data)},
        {76, -1, -1, sizeof(::login_node_db)},
        {87, -1, -1, sizeof(::centre_node_db)},
        {99, -1, -1, sizeof(::lobby_node_db)},
        {110, -1, -1, sizeof(::redis_node_db)},
        {122, -1, -1, sizeof(::game_node_db)},
        {134, -1, -1, sizeof(::gate_node_db)},
        {146, -1, -1, sizeof(::NodeInfoRequest)},
        {156, 166, -1, sizeof(::NodeInfoResponse)},
        {168, -1, -1, sizeof(::GetIDRequest)},
        {178, -1, -1, sizeof(::GetIDResponse)},
        {187, -1, -1, sizeof(::ReleaseIDRequest)},
        {197, -1, -1, sizeof(::ReleaseIDResponse)},
};
static const ::_pb::Message* const file_default_instances[] = {
    &::_database_node_db_default_instance_._instance,
    &::_login_node_list_db_default_instance_._instance,
    &::_centre_node_list_db_default_instance_._instance,
    &::_gate_node_list_db_default_instance_._instance,
    &::_game_node_list_db_default_instance_._instance,
    &::_redis_node_list_db_default_instance_._instance,
    &::_nodes_info_data_default_instance_._instance,
    &::_login_node_db_default_instance_._instance,
    &::_centre_node_db_default_instance_._instance,
    &::_lobby_node_db_default_instance_._instance,
    &::_redis_node_db_default_instance_._instance,
    &::_game_node_db_default_instance_._instance,
    &::_gate_node_db_default_instance_._instance,
    &::_NodeInfoRequest_default_instance_._instance,
    &::_NodeInfoResponse_default_instance_._instance,
    &::_GetIDRequest_default_instance_._instance,
    &::_GetIDResponse_default_instance_._instance,
    &::_ReleaseIDRequest_default_instance_._instance,
    &::_ReleaseIDResponse_default_instance_._instance,
};
const char descriptor_table_protodef_proto_2fcommon_2fdeploy_5fservice_2eproto[] ABSL_ATTRIBUTE_SECTION_VARIABLE(
    protodesc_cold) = {
    "\n!proto/common/deploy_service.proto\032\032pro"
    "to/common/db_base.proto\032\031proto/common/co"
    "mmon.proto\"_\n\020database_node_db\022\n\n\002id\030\001 \001"
    "(\r\022\014\n\004addr\030\002 \001(\t\022\017\n\007zone_id\030\003 \001(\r: \212\265\030\020d"
    "atabase_node_db\222\265\030\002id\262\265\030\002id\"8\n\022login_nod"
    "e_list_db\022\"\n\nlogin_info\030\001 \003(\0132\016.login_no"
    "de_db\";\n\023centre_node_list_db\022$\n\013centre_i"
    "nfo\030\001 \003(\0132\017.centre_node_db\"5\n\021gate_node_"
    "list_db\022 \n\tgate_info\030\001 \003(\0132\r.gate_node_d"
    "b\"5\n\021game_node_list_db\022 \n\tgame_info\030\001 \003("
    "\0132\r.game_node_db\"8\n\022redis_node_list_db\022\""
    "\n\nredis_info\030\001 \003(\0132\016.redis_node_db\"\206\002\n\017n"
    "odes_info_data\022(\n\rdatabase_info\030\001 \001(\0132\021."
    "database_node_db\022\'\n\nlogin_info\030\002 \001(\0132\023.l"
    "ogin_node_list_db\022)\n\013centre_info\030\003 \001(\0132\024"
    ".centre_node_list_db\022%\n\tgate_info\030\004 \001(\0132"
    "\022.gate_node_list_db\022%\n\tgame_info\030\005 \001(\0132\022"
    ".game_node_list_db\022\'\n\nredis_info\030\006 \001(\0132\023"
    ".redis_node_list_db\"Y\n\rlogin_node_db\022\n\n\002"
    "id\030\001 \001(\r\022\014\n\004addr\030\002 \001(\t\022\017\n\007zone_id\030\003 \001(\r:"
    "\035\212\265\030\rlogin_node_db\222\265\030\002id\262\265\030\002id\"g\n\016centre"
    "_node_db\022\n\n\002id\030\001 \001(\r\022\n\n\002ip\030\002 \001(\t\022\014\n\004port"
    "\030\003 \001(\r\022\017\n\007zone_id\030\004 \001(\r:\036\212\265\030\016centre_node"
    "_db\222\265\030\002id\262\265\030\002id\"T\n\rlobby_node_db\022\n\n\002id\030\001"
    " \001(\r\022\n\n\002ip\030\002 \001(\t\022\014\n\004port\030\003 \001(\r:\035\212\265\030\rlobb"
    "y_node_db\222\265\030\002id\262\265\030\002id\"e\n\rredis_node_db\022\n"
    "\n\002id\030\001 \001(\r\022\n\n\002ip\030\002 \001(\t\022\014\n\004port\030\003 \001(\r\022\017\n\007"
    "zone_id\030\004 \001(\r:\035\212\265\030\rredis_node_db\222\265\030\002id\262\265"
    "\030\002id\"c\n\014game_node_db\022\n\n\002id\030\001 \001(\r\022\n\n\002ip\030\002"
    " \001(\t\022\014\n\004port\030\003 \001(\r\022\017\n\007zone_id\030\004 \001(\r:\034\212\265\030"
    "\014game_node_db\222\265\030\002id\262\265\030\002id\"c\n\014gate_node_d"
    "b\022\n\n\002id\030\001 \001(\r\022\n\n\002ip\030\002 \001(\t\022\014\n\004port\030\003 \001(\r\022"
    "\017\n\007zone_id\030\004 \001(\r:\034\212\265\030\014gate_node_db\222\265\030\002id"
    "\262\265\030\002id\"5\n\017NodeInfoRequest\022\017\n\007zone_id\030\001 \001"
    "(\r\022\021\n\tnode_type\030\002 \001(\r\"C\n\020NodeInfoRespons"
    "e\022\036\n\004info\030\001 \001(\0132\020.nodes_info_data\022\017\n\007nod"
    "e_id\030\002 \001(\r\"8\n\014GetIDRequest\022\023\n\013client_nam"
    "e\030\001 \001(\t\022\023\n\013server_type\030\002 \001(\t\"\033\n\rGetIDRes"
    "ponse\022\n\n\002id\030\001 \001(\t\"3\n\020ReleaseIDRequest\022\n\n"
    "\002id\030\001 \001(\t\022\023\n\013server_type\030\002 \001(\t\"$\n\021Releas"
    "eIDResponse\022\017\n\007success\030\001 \001(\0102\237\001\n\rDeployS"
    "ervice\0222\n\013GetNodeInfo\022\020.NodeInfoRequest\032"
    "\021.NodeInfoResponse\022&\n\005GetID\022\r.GetIDReque"
    "st\032\016.GetIDResponse\0222\n\tReleaseID\022\021.Releas"
    "eIDRequest\032\022.ReleaseIDResponseB\tZ\007pb/gam"
    "eb\006proto3"
};
static const ::_pbi::DescriptorTable* const descriptor_table_proto_2fcommon_2fdeploy_5fservice_2eproto_deps[2] =
    {
        &::descriptor_table_proto_2fcommon_2fcommon_2eproto,
        &::descriptor_table_proto_2fcommon_2fdb_5fbase_2eproto,
};
static ::absl::once_flag descriptor_table_proto_2fcommon_2fdeploy_5fservice_2eproto_once;
const ::_pbi::DescriptorTable descriptor_table_proto_2fcommon_2fdeploy_5fservice_2eproto = {
    false,
    false,
    1809,
    descriptor_table_protodef_proto_2fcommon_2fdeploy_5fservice_2eproto,
    "proto/common/deploy_service.proto",
    &descriptor_table_proto_2fcommon_2fdeploy_5fservice_2eproto_once,
    descriptor_table_proto_2fcommon_2fdeploy_5fservice_2eproto_deps,
    2,
    19,
    schemas,
    file_default_instances,
    TableStruct_proto_2fcommon_2fdeploy_5fservice_2eproto::offsets,
    file_level_metadata_proto_2fcommon_2fdeploy_5fservice_2eproto,
    file_level_enum_descriptors_proto_2fcommon_2fdeploy_5fservice_2eproto,
    file_level_service_descriptors_proto_2fcommon_2fdeploy_5fservice_2eproto,
};

// This function exists to be marked as weak.
// It can significantly speed up compilation by breaking up LLVM's SCC
// in the .pb.cc translation units. Large translation units see a
// reduction of more than 35% of walltime for optimized builds. Without
// the weak attribute all the messages in the file, including all the
// vtables and everything they use become part of the same SCC through
// a cycle like:
// GetMetadata -> descriptor table -> default instances ->
//   vtables -> GetMetadata
// By adding a weak function here we break the connection from the
// individual vtables back into the descriptor table.
PROTOBUF_ATTRIBUTE_WEAK const ::_pbi::DescriptorTable* descriptor_table_proto_2fcommon_2fdeploy_5fservice_2eproto_getter() {
  return &descriptor_table_proto_2fcommon_2fdeploy_5fservice_2eproto;
}
// ===================================================================

class database_node_db::_Internal {
 public:
};

database_node_db::database_node_db(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:database_node_db)
}
inline PROTOBUF_NDEBUG_INLINE database_node_db::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from)
      : addr_(arena, from.addr_),
        _cached_size_{0} {}

database_node_db::database_node_db(
    ::google::protobuf::Arena* arena,
    const database_node_db& from)
    : ::google::protobuf::Message(arena) {
  database_node_db* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_);
  ::memcpy(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, id_),
           reinterpret_cast<const char *>(&from._impl_) +
               offsetof(Impl_, id_),
           offsetof(Impl_, zone_id_) -
               offsetof(Impl_, id_) +
               sizeof(Impl_::zone_id_));

  // @@protoc_insertion_point(copy_constructor:database_node_db)
}
inline PROTOBUF_NDEBUG_INLINE database_node_db::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : addr_(arena),
        _cached_size_{0} {}

inline void database_node_db::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, id_),
           0,
           offsetof(Impl_, zone_id_) -
               offsetof(Impl_, id_) +
               sizeof(Impl_::zone_id_));
}
database_node_db::~database_node_db() {
  // @@protoc_insertion_point(destructor:database_node_db)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void database_node_db::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  _impl_.addr_.Destroy();
  _impl_.~Impl_();
}

const ::google::protobuf::MessageLite::ClassData*
database_node_db::GetClassData() const {
  PROTOBUF_CONSTINIT static const ::google::protobuf::MessageLite::
      ClassDataFull _data_ = {
          {
              nullptr,  // OnDemandRegisterArenaDtor
              PROTOBUF_FIELD_OFFSET(database_node_db, _impl_._cached_size_),
              false,
          },
          &database_node_db::MergeImpl,
          &database_node_db::kDescriptorMethods,
      };
  return &_data_;
}
PROTOBUF_NOINLINE void database_node_db::Clear() {
// @@protoc_insertion_point(message_clear_start:database_node_db)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.addr_.ClearToEmpty();
  ::memset(&_impl_.id_, 0, static_cast<::size_t>(
      reinterpret_cast<char*>(&_impl_.zone_id_) -
      reinterpret_cast<char*>(&_impl_.id_)) + sizeof(_impl_.zone_id_));
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* database_node_db::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<2, 3, 0, 29, 2> database_node_db::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    3, 24,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967288,  // skipmap
    offsetof(decltype(_table_), field_entries),
    3,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    &_database_node_db_default_instance_._instance,
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::database_node_db>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
    // uint32 id = 1;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(database_node_db, _impl_.id_), 63>(),
     {8, 63, 0, PROTOBUF_FIELD_OFFSET(database_node_db, _impl_.id_)}},
    // string addr = 2;
    {::_pbi::TcParser::FastUS1,
     {18, 63, 0, PROTOBUF_FIELD_OFFSET(database_node_db, _impl_.addr_)}},
    // uint32 zone_id = 3;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(database_node_db, _impl_.zone_id_), 63>(),
     {24, 63, 0, PROTOBUF_FIELD_OFFSET(database_node_db, _impl_.zone_id_)}},
  }}, {{
    65535, 65535
  }}, {{
    // uint32 id = 1;
    {PROTOBUF_FIELD_OFFSET(database_node_db, _impl_.id_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUInt32)},
    // string addr = 2;
    {PROTOBUF_FIELD_OFFSET(database_node_db, _impl_.addr_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // uint32 zone_id = 3;
    {PROTOBUF_FIELD_OFFSET(database_node_db, _impl_.zone_id_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUInt32)},
  }},
  // no aux_entries
  {{
    "\20\0\4\0\0\0\0\0"
    "database_node_db"
    "addr"
  }},
};

::uint8_t* database_node_db::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:database_node_db)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  // uint32 id = 1;
  if (this->_internal_id() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt32ToArray(
        1, this->_internal_id(), target);
  }

  // string addr = 2;
  if (!this->_internal_addr().empty()) {
    const std::string& _s = this->_internal_addr();
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
        _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "database_node_db.addr");
    target = stream->WriteStringMaybeAliased(2, _s, target);
  }

  // uint32 zone_id = 3;
  if (this->_internal_zone_id() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt32ToArray(
        3, this->_internal_zone_id(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:database_node_db)
  return target;
}

::size_t database_node_db::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:database_node_db)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string addr = 2;
  if (!this->_internal_addr().empty()) {
    total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                    this->_internal_addr());
  }

  // uint32 id = 1;
  if (this->_internal_id() != 0) {
    total_size += ::_pbi::WireFormatLite::UInt32SizePlusOne(
        this->_internal_id());
  }

  // uint32 zone_id = 3;
  if (this->_internal_zone_id() != 0) {
    total_size += ::_pbi::WireFormatLite::UInt32SizePlusOne(
        this->_internal_zone_id());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}


void database_node_db::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<database_node_db*>(&to_msg);
  auto& from = static_cast<const database_node_db&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:database_node_db)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_addr().empty()) {
    _this->_internal_set_addr(from._internal_addr());
  }
  if (from._internal_id() != 0) {
    _this->_impl_.id_ = from._impl_.id_;
  }
  if (from._internal_zone_id() != 0) {
    _this->_impl_.zone_id_ = from._impl_.zone_id_;
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void database_node_db::CopyFrom(const database_node_db& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:database_node_db)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool database_node_db::IsInitialized() const {
  return true;
}

void database_node_db::InternalSwap(database_node_db* PROTOBUF_RESTRICT other) {
  using std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.addr_, &other->_impl_.addr_, arena);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(database_node_db, _impl_.zone_id_)
      + sizeof(database_node_db::_impl_.zone_id_)
      - PROTOBUF_FIELD_OFFSET(database_node_db, _impl_.id_)>(
          reinterpret_cast<char*>(&_impl_.id_),
          reinterpret_cast<char*>(&other->_impl_.id_));
}

::google::protobuf::Metadata database_node_db::GetMetadata() const {
  return ::_pbi::AssignDescriptors(&descriptor_table_proto_2fcommon_2fdeploy_5fservice_2eproto_getter,
                                   &descriptor_table_proto_2fcommon_2fdeploy_5fservice_2eproto_once,
                                   file_level_metadata_proto_2fcommon_2fdeploy_5fservice_2eproto[0]);
}
// ===================================================================

class login_node_list_db::_Internal {
 public:
};

login_node_list_db::login_node_list_db(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:login_node_list_db)
}
inline PROTOBUF_NDEBUG_INLINE login_node_list_db::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from)
      : login_info_{visibility, arena, from.login_info_},
        _cached_size_{0} {}

login_node_list_db::login_node_list_db(
    ::google::protobuf::Arena* arena,
    const login_node_list_db& from)
    : ::google::protobuf::Message(arena) {
  login_node_list_db* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_);

  // @@protoc_insertion_point(copy_constructor:login_node_list_db)
}
inline PROTOBUF_NDEBUG_INLINE login_node_list_db::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : login_info_{visibility, arena},
        _cached_size_{0} {}

inline void login_node_list_db::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
}
login_node_list_db::~login_node_list_db() {
  // @@protoc_insertion_point(destructor:login_node_list_db)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void login_node_list_db::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  _impl_.~Impl_();
}

const ::google::protobuf::MessageLite::ClassData*
login_node_list_db::GetClassData() const {
  PROTOBUF_CONSTINIT static const ::google::protobuf::MessageLite::
      ClassDataFull _data_ = {
          {
              nullptr,  // OnDemandRegisterArenaDtor
              PROTOBUF_FIELD_OFFSET(login_node_list_db, _impl_._cached_size_),
              false,
          },
          &login_node_list_db::MergeImpl,
          &login_node_list_db::kDescriptorMethods,
      };
  return &_data_;
}
PROTOBUF_NOINLINE void login_node_list_db::Clear() {
// @@protoc_insertion_point(message_clear_start:login_node_list_db)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.login_info_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* login_node_list_db::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<0, 1, 1, 0, 2> login_node_list_db::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    1, 0,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967294,  // skipmap
    offsetof(decltype(_table_), field_entries),
    1,  // num_field_entries
    1,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    &_login_node_list_db_default_instance_._instance,
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::login_node_list_db>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // repeated .login_node_db login_info = 1;
    {::_pbi::TcParser::FastMtR1,
     {10, 63, 0, PROTOBUF_FIELD_OFFSET(login_node_list_db, _impl_.login_info_)}},
  }}, {{
    65535, 65535
  }}, {{
    // repeated .login_node_db login_info = 1;
    {PROTOBUF_FIELD_OFFSET(login_node_list_db, _impl_.login_info_), 0, 0,
    (0 | ::_fl::kFcRepeated | ::_fl::kMessage | ::_fl::kTvTable)},
  }}, {{
    {::_pbi::TcParser::GetTable<::login_node_db>()},
  }}, {{
  }},
};

::uint8_t* login_node_list_db::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:login_node_list_db)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  // repeated .login_node_db login_info = 1;
  for (unsigned i = 0, n = static_cast<unsigned>(
                           this->_internal_login_info_size());
       i < n; i++) {
    const auto& repfield = this->_internal_login_info().Get(i);
    target =
        ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
            1, repfield, repfield.GetCachedSize(),
            target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:login_node_list_db)
  return target;
}

::size_t login_node_list_db::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:login_node_list_db)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated .login_node_db login_info = 1;
  total_size += 1UL * this->_internal_login_info_size();
  for (const auto& msg : this->_internal_login_info()) {
    total_size += ::google::protobuf::internal::WireFormatLite::MessageSize(msg);
  }
  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}


void login_node_list_db::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<login_node_list_db*>(&to_msg);
  auto& from = static_cast<const login_node_list_db&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:login_node_list_db)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_internal_mutable_login_info()->MergeFrom(
      from._internal_login_info());
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void login_node_list_db::CopyFrom(const login_node_list_db& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:login_node_list_db)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool login_node_list_db::IsInitialized() const {
  return true;
}

void login_node_list_db::InternalSwap(login_node_list_db* PROTOBUF_RESTRICT other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  _impl_.login_info_.InternalSwap(&other->_impl_.login_info_);
}

::google::protobuf::Metadata login_node_list_db::GetMetadata() const {
  return ::_pbi::AssignDescriptors(&descriptor_table_proto_2fcommon_2fdeploy_5fservice_2eproto_getter,
                                   &descriptor_table_proto_2fcommon_2fdeploy_5fservice_2eproto_once,
                                   file_level_metadata_proto_2fcommon_2fdeploy_5fservice_2eproto[1]);
}
// ===================================================================

class centre_node_list_db::_Internal {
 public:
};

centre_node_list_db::centre_node_list_db(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:centre_node_list_db)
}
inline PROTOBUF_NDEBUG_INLINE centre_node_list_db::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from)
      : centre_info_{visibility, arena, from.centre_info_},
        _cached_size_{0} {}

centre_node_list_db::centre_node_list_db(
    ::google::protobuf::Arena* arena,
    const centre_node_list_db& from)
    : ::google::protobuf::Message(arena) {
  centre_node_list_db* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_);

  // @@protoc_insertion_point(copy_constructor:centre_node_list_db)
}
inline PROTOBUF_NDEBUG_INLINE centre_node_list_db::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : centre_info_{visibility, arena},
        _cached_size_{0} {}

inline void centre_node_list_db::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
}
centre_node_list_db::~centre_node_list_db() {
  // @@protoc_insertion_point(destructor:centre_node_list_db)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void centre_node_list_db::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  _impl_.~Impl_();
}

const ::google::protobuf::MessageLite::ClassData*
centre_node_list_db::GetClassData() const {
  PROTOBUF_CONSTINIT static const ::google::protobuf::MessageLite::
      ClassDataFull _data_ = {
          {
              nullptr,  // OnDemandRegisterArenaDtor
              PROTOBUF_FIELD_OFFSET(centre_node_list_db, _impl_._cached_size_),
              false,
          },
          &centre_node_list_db::MergeImpl,
          &centre_node_list_db::kDescriptorMethods,
      };
  return &_data_;
}
PROTOBUF_NOINLINE void centre_node_list_db::Clear() {
// @@protoc_insertion_point(message_clear_start:centre_node_list_db)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.centre_info_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* centre_node_list_db::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<0, 1, 1, 0, 2> centre_node_list_db::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    1, 0,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967294,  // skipmap
    offsetof(decltype(_table_), field_entries),
    1,  // num_field_entries
    1,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    &_centre_node_list_db_default_instance_._instance,
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::centre_node_list_db>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // repeated .centre_node_db centre_info = 1;
    {::_pbi::TcParser::FastMtR1,
     {10, 63, 0, PROTOBUF_FIELD_OFFSET(centre_node_list_db, _impl_.centre_info_)}},
  }}, {{
    65535, 65535
  }}, {{
    // repeated .centre_node_db centre_info = 1;
    {PROTOBUF_FIELD_OFFSET(centre_node_list_db, _impl_.centre_info_), 0, 0,
    (0 | ::_fl::kFcRepeated | ::_fl::kMessage | ::_fl::kTvTable)},
  }}, {{
    {::_pbi::TcParser::GetTable<::centre_node_db>()},
  }}, {{
  }},
};

::uint8_t* centre_node_list_db::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:centre_node_list_db)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  // repeated .centre_node_db centre_info = 1;
  for (unsigned i = 0, n = static_cast<unsigned>(
                           this->_internal_centre_info_size());
       i < n; i++) {
    const auto& repfield = this->_internal_centre_info().Get(i);
    target =
        ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
            1, repfield, repfield.GetCachedSize(),
            target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:centre_node_list_db)
  return target;
}

::size_t centre_node_list_db::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:centre_node_list_db)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated .centre_node_db centre_info = 1;
  total_size += 1UL * this->_internal_centre_info_size();
  for (const auto& msg : this->_internal_centre_info()) {
    total_size += ::google::protobuf::internal::WireFormatLite::MessageSize(msg);
  }
  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}


void centre_node_list_db::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<centre_node_list_db*>(&to_msg);
  auto& from = static_cast<const centre_node_list_db&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:centre_node_list_db)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_internal_mutable_centre_info()->MergeFrom(
      from._internal_centre_info());
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void centre_node_list_db::CopyFrom(const centre_node_list_db& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:centre_node_list_db)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool centre_node_list_db::IsInitialized() const {
  return true;
}

void centre_node_list_db::InternalSwap(centre_node_list_db* PROTOBUF_RESTRICT other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  _impl_.centre_info_.InternalSwap(&other->_impl_.centre_info_);
}

::google::protobuf::Metadata centre_node_list_db::GetMetadata() const {
  return ::_pbi::AssignDescriptors(&descriptor_table_proto_2fcommon_2fdeploy_5fservice_2eproto_getter,
                                   &descriptor_table_proto_2fcommon_2fdeploy_5fservice_2eproto_once,
                                   file_level_metadata_proto_2fcommon_2fdeploy_5fservice_2eproto[2]);
}
// ===================================================================

class gate_node_list_db::_Internal {
 public:
};

gate_node_list_db::gate_node_list_db(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:gate_node_list_db)
}
inline PROTOBUF_NDEBUG_INLINE gate_node_list_db::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from)
      : gate_info_{visibility, arena, from.gate_info_},
        _cached_size_{0} {}

gate_node_list_db::gate_node_list_db(
    ::google::protobuf::Arena* arena,
    const gate_node_list_db& from)
    : ::google::protobuf::Message(arena) {
  gate_node_list_db* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_);

  // @@protoc_insertion_point(copy_constructor:gate_node_list_db)
}
inline PROTOBUF_NDEBUG_INLINE gate_node_list_db::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : gate_info_{visibility, arena},
        _cached_size_{0} {}

inline void gate_node_list_db::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
}
gate_node_list_db::~gate_node_list_db() {
  // @@protoc_insertion_point(destructor:gate_node_list_db)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void gate_node_list_db::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  _impl_.~Impl_();
}

const ::google::protobuf::MessageLite::ClassData*
gate_node_list_db::GetClassData() const {
  PROTOBUF_CONSTINIT static const ::google::protobuf::MessageLite::
      ClassDataFull _data_ = {
          {
              nullptr,  // OnDemandRegisterArenaDtor
              PROTOBUF_FIELD_OFFSET(gate_node_list_db, _impl_._cached_size_),
              false,
          },
          &gate_node_list_db::MergeImpl,
          &gate_node_list_db::kDescriptorMethods,
      };
  return &_data_;
}
PROTOBUF_NOINLINE void gate_node_list_db::Clear() {
// @@protoc_insertion_point(message_clear_start:gate_node_list_db)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.gate_info_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* gate_node_list_db::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<0, 1, 1, 0, 2> gate_node_list_db::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    1, 0,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967294,  // skipmap
    offsetof(decltype(_table_), field_entries),
    1,  // num_field_entries
    1,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    &_gate_node_list_db_default_instance_._instance,
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::gate_node_list_db>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // repeated .gate_node_db gate_info = 1;
    {::_pbi::TcParser::FastMtR1,
     {10, 63, 0, PROTOBUF_FIELD_OFFSET(gate_node_list_db, _impl_.gate_info_)}},
  }}, {{
    65535, 65535
  }}, {{
    // repeated .gate_node_db gate_info = 1;
    {PROTOBUF_FIELD_OFFSET(gate_node_list_db, _impl_.gate_info_), 0, 0,
    (0 | ::_fl::kFcRepeated | ::_fl::kMessage | ::_fl::kTvTable)},
  }}, {{
    {::_pbi::TcParser::GetTable<::gate_node_db>()},
  }}, {{
  }},
};

::uint8_t* gate_node_list_db::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:gate_node_list_db)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  // repeated .gate_node_db gate_info = 1;
  for (unsigned i = 0, n = static_cast<unsigned>(
                           this->_internal_gate_info_size());
       i < n; i++) {
    const auto& repfield = this->_internal_gate_info().Get(i);
    target =
        ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
            1, repfield, repfield.GetCachedSize(),
            target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:gate_node_list_db)
  return target;
}

::size_t gate_node_list_db::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:gate_node_list_db)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated .gate_node_db gate_info = 1;
  total_size += 1UL * this->_internal_gate_info_size();
  for (const auto& msg : this->_internal_gate_info()) {
    total_size += ::google::protobuf::internal::WireFormatLite::MessageSize(msg);
  }
  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}


void gate_node_list_db::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<gate_node_list_db*>(&to_msg);
  auto& from = static_cast<const gate_node_list_db&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:gate_node_list_db)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_internal_mutable_gate_info()->MergeFrom(
      from._internal_gate_info());
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void gate_node_list_db::CopyFrom(const gate_node_list_db& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:gate_node_list_db)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool gate_node_list_db::IsInitialized() const {
  return true;
}

void gate_node_list_db::InternalSwap(gate_node_list_db* PROTOBUF_RESTRICT other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  _impl_.gate_info_.InternalSwap(&other->_impl_.gate_info_);
}

::google::protobuf::Metadata gate_node_list_db::GetMetadata() const {
  return ::_pbi::AssignDescriptors(&descriptor_table_proto_2fcommon_2fdeploy_5fservice_2eproto_getter,
                                   &descriptor_table_proto_2fcommon_2fdeploy_5fservice_2eproto_once,
                                   file_level_metadata_proto_2fcommon_2fdeploy_5fservice_2eproto[3]);
}
// ===================================================================

class game_node_list_db::_Internal {
 public:
};

game_node_list_db::game_node_list_db(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:game_node_list_db)
}
inline PROTOBUF_NDEBUG_INLINE game_node_list_db::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from)
      : game_info_{visibility, arena, from.game_info_},
        _cached_size_{0} {}

game_node_list_db::game_node_list_db(
    ::google::protobuf::Arena* arena,
    const game_node_list_db& from)
    : ::google::protobuf::Message(arena) {
  game_node_list_db* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_);

  // @@protoc_insertion_point(copy_constructor:game_node_list_db)
}
inline PROTOBUF_NDEBUG_INLINE game_node_list_db::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : game_info_{visibility, arena},
        _cached_size_{0} {}

inline void game_node_list_db::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
}
game_node_list_db::~game_node_list_db() {
  // @@protoc_insertion_point(destructor:game_node_list_db)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void game_node_list_db::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  _impl_.~Impl_();
}

const ::google::protobuf::MessageLite::ClassData*
game_node_list_db::GetClassData() const {
  PROTOBUF_CONSTINIT static const ::google::protobuf::MessageLite::
      ClassDataFull _data_ = {
          {
              nullptr,  // OnDemandRegisterArenaDtor
              PROTOBUF_FIELD_OFFSET(game_node_list_db, _impl_._cached_size_),
              false,
          },
          &game_node_list_db::MergeImpl,
          &game_node_list_db::kDescriptorMethods,
      };
  return &_data_;
}
PROTOBUF_NOINLINE void game_node_list_db::Clear() {
// @@protoc_insertion_point(message_clear_start:game_node_list_db)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.game_info_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* game_node_list_db::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<0, 1, 1, 0, 2> game_node_list_db::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    1, 0,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967294,  // skipmap
    offsetof(decltype(_table_), field_entries),
    1,  // num_field_entries
    1,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    &_game_node_list_db_default_instance_._instance,
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::game_node_list_db>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // repeated .game_node_db game_info = 1;
    {::_pbi::TcParser::FastMtR1,
     {10, 63, 0, PROTOBUF_FIELD_OFFSET(game_node_list_db, _impl_.game_info_)}},
  }}, {{
    65535, 65535
  }}, {{
    // repeated .game_node_db game_info = 1;
    {PROTOBUF_FIELD_OFFSET(game_node_list_db, _impl_.game_info_), 0, 0,
    (0 | ::_fl::kFcRepeated | ::_fl::kMessage | ::_fl::kTvTable)},
  }}, {{
    {::_pbi::TcParser::GetTable<::game_node_db>()},
  }}, {{
  }},
};

::uint8_t* game_node_list_db::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:game_node_list_db)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  // repeated .game_node_db game_info = 1;
  for (unsigned i = 0, n = static_cast<unsigned>(
                           this->_internal_game_info_size());
       i < n; i++) {
    const auto& repfield = this->_internal_game_info().Get(i);
    target =
        ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
            1, repfield, repfield.GetCachedSize(),
            target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:game_node_list_db)
  return target;
}

::size_t game_node_list_db::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:game_node_list_db)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated .game_node_db game_info = 1;
  total_size += 1UL * this->_internal_game_info_size();
  for (const auto& msg : this->_internal_game_info()) {
    total_size += ::google::protobuf::internal::WireFormatLite::MessageSize(msg);
  }
  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}


void game_node_list_db::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<game_node_list_db*>(&to_msg);
  auto& from = static_cast<const game_node_list_db&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:game_node_list_db)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_internal_mutable_game_info()->MergeFrom(
      from._internal_game_info());
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void game_node_list_db::CopyFrom(const game_node_list_db& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:game_node_list_db)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool game_node_list_db::IsInitialized() const {
  return true;
}

void game_node_list_db::InternalSwap(game_node_list_db* PROTOBUF_RESTRICT other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  _impl_.game_info_.InternalSwap(&other->_impl_.game_info_);
}

::google::protobuf::Metadata game_node_list_db::GetMetadata() const {
  return ::_pbi::AssignDescriptors(&descriptor_table_proto_2fcommon_2fdeploy_5fservice_2eproto_getter,
                                   &descriptor_table_proto_2fcommon_2fdeploy_5fservice_2eproto_once,
                                   file_level_metadata_proto_2fcommon_2fdeploy_5fservice_2eproto[4]);
}
// ===================================================================

class redis_node_list_db::_Internal {
 public:
};

redis_node_list_db::redis_node_list_db(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:redis_node_list_db)
}
inline PROTOBUF_NDEBUG_INLINE redis_node_list_db::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from)
      : redis_info_{visibility, arena, from.redis_info_},
        _cached_size_{0} {}

redis_node_list_db::redis_node_list_db(
    ::google::protobuf::Arena* arena,
    const redis_node_list_db& from)
    : ::google::protobuf::Message(arena) {
  redis_node_list_db* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_);

  // @@protoc_insertion_point(copy_constructor:redis_node_list_db)
}
inline PROTOBUF_NDEBUG_INLINE redis_node_list_db::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : redis_info_{visibility, arena},
        _cached_size_{0} {}

inline void redis_node_list_db::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
}
redis_node_list_db::~redis_node_list_db() {
  // @@protoc_insertion_point(destructor:redis_node_list_db)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void redis_node_list_db::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  _impl_.~Impl_();
}

const ::google::protobuf::MessageLite::ClassData*
redis_node_list_db::GetClassData() const {
  PROTOBUF_CONSTINIT static const ::google::protobuf::MessageLite::
      ClassDataFull _data_ = {
          {
              nullptr,  // OnDemandRegisterArenaDtor
              PROTOBUF_FIELD_OFFSET(redis_node_list_db, _impl_._cached_size_),
              false,
          },
          &redis_node_list_db::MergeImpl,
          &redis_node_list_db::kDescriptorMethods,
      };
  return &_data_;
}
PROTOBUF_NOINLINE void redis_node_list_db::Clear() {
// @@protoc_insertion_point(message_clear_start:redis_node_list_db)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.redis_info_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* redis_node_list_db::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<0, 1, 1, 0, 2> redis_node_list_db::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    1, 0,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967294,  // skipmap
    offsetof(decltype(_table_), field_entries),
    1,  // num_field_entries
    1,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    &_redis_node_list_db_default_instance_._instance,
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::redis_node_list_db>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // repeated .redis_node_db redis_info = 1;
    {::_pbi::TcParser::FastMtR1,
     {10, 63, 0, PROTOBUF_FIELD_OFFSET(redis_node_list_db, _impl_.redis_info_)}},
  }}, {{
    65535, 65535
  }}, {{
    // repeated .redis_node_db redis_info = 1;
    {PROTOBUF_FIELD_OFFSET(redis_node_list_db, _impl_.redis_info_), 0, 0,
    (0 | ::_fl::kFcRepeated | ::_fl::kMessage | ::_fl::kTvTable)},
  }}, {{
    {::_pbi::TcParser::GetTable<::redis_node_db>()},
  }}, {{
  }},
};

::uint8_t* redis_node_list_db::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:redis_node_list_db)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  // repeated .redis_node_db redis_info = 1;
  for (unsigned i = 0, n = static_cast<unsigned>(
                           this->_internal_redis_info_size());
       i < n; i++) {
    const auto& repfield = this->_internal_redis_info().Get(i);
    target =
        ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
            1, repfield, repfield.GetCachedSize(),
            target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:redis_node_list_db)
  return target;
}

::size_t redis_node_list_db::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:redis_node_list_db)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated .redis_node_db redis_info = 1;
  total_size += 1UL * this->_internal_redis_info_size();
  for (const auto& msg : this->_internal_redis_info()) {
    total_size += ::google::protobuf::internal::WireFormatLite::MessageSize(msg);
  }
  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}


void redis_node_list_db::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<redis_node_list_db*>(&to_msg);
  auto& from = static_cast<const redis_node_list_db&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:redis_node_list_db)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_internal_mutable_redis_info()->MergeFrom(
      from._internal_redis_info());
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void redis_node_list_db::CopyFrom(const redis_node_list_db& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:redis_node_list_db)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool redis_node_list_db::IsInitialized() const {
  return true;
}

void redis_node_list_db::InternalSwap(redis_node_list_db* PROTOBUF_RESTRICT other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  _impl_.redis_info_.InternalSwap(&other->_impl_.redis_info_);
}

::google::protobuf::Metadata redis_node_list_db::GetMetadata() const {
  return ::_pbi::AssignDescriptors(&descriptor_table_proto_2fcommon_2fdeploy_5fservice_2eproto_getter,
                                   &descriptor_table_proto_2fcommon_2fdeploy_5fservice_2eproto_once,
                                   file_level_metadata_proto_2fcommon_2fdeploy_5fservice_2eproto[5]);
}
// ===================================================================

class nodes_info_data::_Internal {
 public:
  using HasBits = decltype(std::declval<nodes_info_data>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
    8 * PROTOBUF_FIELD_OFFSET(nodes_info_data, _impl_._has_bits_);
};

nodes_info_data::nodes_info_data(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:nodes_info_data)
}
inline PROTOBUF_NDEBUG_INLINE nodes_info_data::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from)
      : _has_bits_{from._has_bits_},
        _cached_size_{0} {}

nodes_info_data::nodes_info_data(
    ::google::protobuf::Arena* arena,
    const nodes_info_data& from)
    : ::google::protobuf::Message(arena) {
  nodes_info_data* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_);
  ::uint32_t cached_has_bits = _impl_._has_bits_[0];
  _impl_.database_info_ = (cached_has_bits & 0x00000001u) ? ::google::protobuf::Message::CopyConstruct<::database_node_db>(
                              arena, *from._impl_.database_info_)
                        : nullptr;
  _impl_.login_info_ = (cached_has_bits & 0x00000002u) ? ::google::protobuf::Message::CopyConstruct<::login_node_list_db>(
                              arena, *from._impl_.login_info_)
                        : nullptr;
  _impl_.centre_info_ = (cached_has_bits & 0x00000004u) ? ::google::protobuf::Message::CopyConstruct<::centre_node_list_db>(
                              arena, *from._impl_.centre_info_)
                        : nullptr;
  _impl_.gate_info_ = (cached_has_bits & 0x00000008u) ? ::google::protobuf::Message::CopyConstruct<::gate_node_list_db>(
                              arena, *from._impl_.gate_info_)
                        : nullptr;
  _impl_.game_info_ = (cached_has_bits & 0x00000010u) ? ::google::protobuf::Message::CopyConstruct<::game_node_list_db>(
                              arena, *from._impl_.game_info_)
                        : nullptr;
  _impl_.redis_info_ = (cached_has_bits & 0x00000020u) ? ::google::protobuf::Message::CopyConstruct<::redis_node_list_db>(
                              arena, *from._impl_.redis_info_)
                        : nullptr;

  // @@protoc_insertion_point(copy_constructor:nodes_info_data)
}
inline PROTOBUF_NDEBUG_INLINE nodes_info_data::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0} {}

inline void nodes_info_data::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, database_info_),
           0,
           offsetof(Impl_, redis_info_) -
               offsetof(Impl_, database_info_) +
               sizeof(Impl_::redis_info_));
}
nodes_info_data::~nodes_info_data() {
  // @@protoc_insertion_point(destructor:nodes_info_data)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void nodes_info_data::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  delete _impl_.database_info_;
  delete _impl_.login_info_;
  delete _impl_.centre_info_;
  delete _impl_.gate_info_;
  delete _impl_.game_info_;
  delete _impl_.redis_info_;
  _impl_.~Impl_();
}

const ::google::protobuf::MessageLite::ClassData*
nodes_info_data::GetClassData() const {
  PROTOBUF_CONSTINIT static const ::google::protobuf::MessageLite::
      ClassDataFull _data_ = {
          {
              nullptr,  // OnDemandRegisterArenaDtor
              PROTOBUF_FIELD_OFFSET(nodes_info_data, _impl_._cached_size_),
              false,
          },
          &nodes_info_data::MergeImpl,
          &nodes_info_data::kDescriptorMethods,
      };
  return &_data_;
}
PROTOBUF_NOINLINE void nodes_info_data::Clear() {
// @@protoc_insertion_point(message_clear_start:nodes_info_data)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x0000003fu) {
    if (cached_has_bits & 0x00000001u) {
      ABSL_DCHECK(_impl_.database_info_ != nullptr);
      _impl_.database_info_->Clear();
    }
    if (cached_has_bits & 0x00000002u) {
      ABSL_DCHECK(_impl_.login_info_ != nullptr);
      _impl_.login_info_->Clear();
    }
    if (cached_has_bits & 0x00000004u) {
      ABSL_DCHECK(_impl_.centre_info_ != nullptr);
      _impl_.centre_info_->Clear();
    }
    if (cached_has_bits & 0x00000008u) {
      ABSL_DCHECK(_impl_.gate_info_ != nullptr);
      _impl_.gate_info_->Clear();
    }
    if (cached_has_bits & 0x00000010u) {
      ABSL_DCHECK(_impl_.game_info_ != nullptr);
      _impl_.game_info_->Clear();
    }
    if (cached_has_bits & 0x00000020u) {
      ABSL_DCHECK(_impl_.redis_info_ != nullptr);
      _impl_.redis_info_->Clear();
    }
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* nodes_info_data::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<3, 6, 6, 0, 2> nodes_info_data::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(nodes_info_data, _impl_._has_bits_),
    0, // no _extensions_
    6, 56,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967232,  // skipmap
    offsetof(decltype(_table_), field_entries),
    6,  // num_field_entries
    6,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    &_nodes_info_data_default_instance_._instance,
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::nodes_info_data>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
    // .database_node_db database_info = 1;
    {::_pbi::TcParser::FastMtS1,
     {10, 0, 0, PROTOBUF_FIELD_OFFSET(nodes_info_data, _impl_.database_info_)}},
    // .login_node_list_db login_info = 2;
    {::_pbi::TcParser::FastMtS1,
     {18, 1, 1, PROTOBUF_FIELD_OFFSET(nodes_info_data, _impl_.login_info_)}},
    // .centre_node_list_db centre_info = 3;
    {::_pbi::TcParser::FastMtS1,
     {26, 2, 2, PROTOBUF_FIELD_OFFSET(nodes_info_data, _impl_.centre_info_)}},
    // .gate_node_list_db gate_info = 4;
    {::_pbi::TcParser::FastMtS1,
     {34, 3, 3, PROTOBUF_FIELD_OFFSET(nodes_info_data, _impl_.gate_info_)}},
    // .game_node_list_db game_info = 5;
    {::_pbi::TcParser::FastMtS1,
     {42, 4, 4, PROTOBUF_FIELD_OFFSET(nodes_info_data, _impl_.game_info_)}},
    // .redis_node_list_db redis_info = 6;
    {::_pbi::TcParser::FastMtS1,
     {50, 5, 5, PROTOBUF_FIELD_OFFSET(nodes_info_data, _impl_.redis_info_)}},
    {::_pbi::TcParser::MiniParse, {}},
  }}, {{
    65535, 65535
  }}, {{
    // .database_node_db database_info = 1;
    {PROTOBUF_FIELD_OFFSET(nodes_info_data, _impl_.database_info_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
    // .login_node_list_db login_info = 2;
    {PROTOBUF_FIELD_OFFSET(nodes_info_data, _impl_.login_info_), _Internal::kHasBitsOffset + 1, 1,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
    // .centre_node_list_db centre_info = 3;
    {PROTOBUF_FIELD_OFFSET(nodes_info_data, _impl_.centre_info_), _Internal::kHasBitsOffset + 2, 2,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
    // .gate_node_list_db gate_info = 4;
    {PROTOBUF_FIELD_OFFSET(nodes_info_data, _impl_.gate_info_), _Internal::kHasBitsOffset + 3, 3,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
    // .game_node_list_db game_info = 5;
    {PROTOBUF_FIELD_OFFSET(nodes_info_data, _impl_.game_info_), _Internal::kHasBitsOffset + 4, 4,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
    // .redis_node_list_db redis_info = 6;
    {PROTOBUF_FIELD_OFFSET(nodes_info_data, _impl_.redis_info_), _Internal::kHasBitsOffset + 5, 5,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
  }}, {{
    {::_pbi::TcParser::GetTable<::database_node_db>()},
    {::_pbi::TcParser::GetTable<::login_node_list_db>()},
    {::_pbi::TcParser::GetTable<::centre_node_list_db>()},
    {::_pbi::TcParser::GetTable<::gate_node_list_db>()},
    {::_pbi::TcParser::GetTable<::game_node_list_db>()},
    {::_pbi::TcParser::GetTable<::redis_node_list_db>()},
  }}, {{
  }},
};

::uint8_t* nodes_info_data::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:nodes_info_data)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  // .database_node_db database_info = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
        1, *_impl_.database_info_, _impl_.database_info_->GetCachedSize(), target, stream);
  }

  // .login_node_list_db login_info = 2;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
        2, *_impl_.login_info_, _impl_.login_info_->GetCachedSize(), target, stream);
  }

  // .centre_node_list_db centre_info = 3;
  if (cached_has_bits & 0x00000004u) {
    target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
        3, *_impl_.centre_info_, _impl_.centre_info_->GetCachedSize(), target, stream);
  }

  // .gate_node_list_db gate_info = 4;
  if (cached_has_bits & 0x00000008u) {
    target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
        4, *_impl_.gate_info_, _impl_.gate_info_->GetCachedSize(), target, stream);
  }

  // .game_node_list_db game_info = 5;
  if (cached_has_bits & 0x00000010u) {
    target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
        5, *_impl_.game_info_, _impl_.game_info_->GetCachedSize(), target, stream);
  }

  // .redis_node_list_db redis_info = 6;
  if (cached_has_bits & 0x00000020u) {
    target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
        6, *_impl_.redis_info_, _impl_.redis_info_->GetCachedSize(), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:nodes_info_data)
  return target;
}

::size_t nodes_info_data::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:nodes_info_data)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x0000003fu) {
    // .database_node_db database_info = 1;
    if (cached_has_bits & 0x00000001u) {
      total_size +=
          1 + ::google::protobuf::internal::WireFormatLite::MessageSize(*_impl_.database_info_);
    }

    // .login_node_list_db login_info = 2;
    if (cached_has_bits & 0x00000002u) {
      total_size +=
          1 + ::google::protobuf::internal::WireFormatLite::MessageSize(*_impl_.login_info_);
    }

    // .centre_node_list_db centre_info = 3;
    if (cached_has_bits & 0x00000004u) {
      total_size +=
          1 + ::google::protobuf::internal::WireFormatLite::MessageSize(*_impl_.centre_info_);
    }

    // .gate_node_list_db gate_info = 4;
    if (cached_has_bits & 0x00000008u) {
      total_size +=
          1 + ::google::protobuf::internal::WireFormatLite::MessageSize(*_impl_.gate_info_);
    }

    // .game_node_list_db game_info = 5;
    if (cached_has_bits & 0x00000010u) {
      total_size +=
          1 + ::google::protobuf::internal::WireFormatLite::MessageSize(*_impl_.game_info_);
    }

    // .redis_node_list_db redis_info = 6;
    if (cached_has_bits & 0x00000020u) {
      total_size +=
          1 + ::google::protobuf::internal::WireFormatLite::MessageSize(*_impl_.redis_info_);
    }

  }
  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}


void nodes_info_data::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<nodes_info_data*>(&to_msg);
  auto& from = static_cast<const nodes_info_data&>(from_msg);
  ::google::protobuf::Arena* arena = _this->GetArena();
  // @@protoc_insertion_point(class_specific_merge_from_start:nodes_info_data)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._impl_._has_bits_[0];
  if (cached_has_bits & 0x0000003fu) {
    if (cached_has_bits & 0x00000001u) {
      ABSL_DCHECK(from._impl_.database_info_ != nullptr);
      if (_this->_impl_.database_info_ == nullptr) {
        _this->_impl_.database_info_ =
            ::google::protobuf::Message::CopyConstruct<::database_node_db>(arena, *from._impl_.database_info_);
      } else {
        _this->_impl_.database_info_->MergeFrom(*from._impl_.database_info_);
      }
    }
    if (cached_has_bits & 0x00000002u) {
      ABSL_DCHECK(from._impl_.login_info_ != nullptr);
      if (_this->_impl_.login_info_ == nullptr) {
        _this->_impl_.login_info_ =
            ::google::protobuf::Message::CopyConstruct<::login_node_list_db>(arena, *from._impl_.login_info_);
      } else {
        _this->_impl_.login_info_->MergeFrom(*from._impl_.login_info_);
      }
    }
    if (cached_has_bits & 0x00000004u) {
      ABSL_DCHECK(from._impl_.centre_info_ != nullptr);
      if (_this->_impl_.centre_info_ == nullptr) {
        _this->_impl_.centre_info_ =
            ::google::protobuf::Message::CopyConstruct<::centre_node_list_db>(arena, *from._impl_.centre_info_);
      } else {
        _this->_impl_.centre_info_->MergeFrom(*from._impl_.centre_info_);
      }
    }
    if (cached_has_bits & 0x00000008u) {
      ABSL_DCHECK(from._impl_.gate_info_ != nullptr);
      if (_this->_impl_.gate_info_ == nullptr) {
        _this->_impl_.gate_info_ =
            ::google::protobuf::Message::CopyConstruct<::gate_node_list_db>(arena, *from._impl_.gate_info_);
      } else {
        _this->_impl_.gate_info_->MergeFrom(*from._impl_.gate_info_);
      }
    }
    if (cached_has_bits & 0x00000010u) {
      ABSL_DCHECK(from._impl_.game_info_ != nullptr);
      if (_this->_impl_.game_info_ == nullptr) {
        _this->_impl_.game_info_ =
            ::google::protobuf::Message::CopyConstruct<::game_node_list_db>(arena, *from._impl_.game_info_);
      } else {
        _this->_impl_.game_info_->MergeFrom(*from._impl_.game_info_);
      }
    }
    if (cached_has_bits & 0x00000020u) {
      ABSL_DCHECK(from._impl_.redis_info_ != nullptr);
      if (_this->_impl_.redis_info_ == nullptr) {
        _this->_impl_.redis_info_ =
            ::google::protobuf::Message::CopyConstruct<::redis_node_list_db>(arena, *from._impl_.redis_info_);
      } else {
        _this->_impl_.redis_info_->MergeFrom(*from._impl_.redis_info_);
      }
    }
  }
  _this->_impl_._has_bits_[0] |= cached_has_bits;
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void nodes_info_data::CopyFrom(const nodes_info_data& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:nodes_info_data)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool nodes_info_data::IsInitialized() const {
  return true;
}

void nodes_info_data::InternalSwap(nodes_info_data* PROTOBUF_RESTRICT other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(nodes_info_data, _impl_.redis_info_)
      + sizeof(nodes_info_data::_impl_.redis_info_)
      - PROTOBUF_FIELD_OFFSET(nodes_info_data, _impl_.database_info_)>(
          reinterpret_cast<char*>(&_impl_.database_info_),
          reinterpret_cast<char*>(&other->_impl_.database_info_));
}

::google::protobuf::Metadata nodes_info_data::GetMetadata() const {
  return ::_pbi::AssignDescriptors(&descriptor_table_proto_2fcommon_2fdeploy_5fservice_2eproto_getter,
                                   &descriptor_table_proto_2fcommon_2fdeploy_5fservice_2eproto_once,
                                   file_level_metadata_proto_2fcommon_2fdeploy_5fservice_2eproto[6]);
}
// ===================================================================

class login_node_db::_Internal {
 public:
};

login_node_db::login_node_db(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:login_node_db)
}
inline PROTOBUF_NDEBUG_INLINE login_node_db::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from)
      : addr_(arena, from.addr_),
        _cached_size_{0} {}

login_node_db::login_node_db(
    ::google::protobuf::Arena* arena,
    const login_node_db& from)
    : ::google::protobuf::Message(arena) {
  login_node_db* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_);
  ::memcpy(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, id_),
           reinterpret_cast<const char *>(&from._impl_) +
               offsetof(Impl_, id_),
           offsetof(Impl_, zone_id_) -
               offsetof(Impl_, id_) +
               sizeof(Impl_::zone_id_));

  // @@protoc_insertion_point(copy_constructor:login_node_db)
}
inline PROTOBUF_NDEBUG_INLINE login_node_db::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : addr_(arena),
        _cached_size_{0} {}

inline void login_node_db::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, id_),
           0,
           offsetof(Impl_, zone_id_) -
               offsetof(Impl_, id_) +
               sizeof(Impl_::zone_id_));
}
login_node_db::~login_node_db() {
  // @@protoc_insertion_point(destructor:login_node_db)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void login_node_db::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  _impl_.addr_.Destroy();
  _impl_.~Impl_();
}

const ::google::protobuf::MessageLite::ClassData*
login_node_db::GetClassData() const {
  PROTOBUF_CONSTINIT static const ::google::protobuf::MessageLite::
      ClassDataFull _data_ = {
          {
              nullptr,  // OnDemandRegisterArenaDtor
              PROTOBUF_FIELD_OFFSET(login_node_db, _impl_._cached_size_),
              false,
          },
          &login_node_db::MergeImpl,
          &login_node_db::kDescriptorMethods,
      };
  return &_data_;
}
PROTOBUF_NOINLINE void login_node_db::Clear() {
// @@protoc_insertion_point(message_clear_start:login_node_db)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.addr_.ClearToEmpty();
  ::memset(&_impl_.id_, 0, static_cast<::size_t>(
      reinterpret_cast<char*>(&_impl_.zone_id_) -
      reinterpret_cast<char*>(&_impl_.id_)) + sizeof(_impl_.zone_id_));
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* login_node_db::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<2, 3, 0, 26, 2> login_node_db::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    3, 24,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967288,  // skipmap
    offsetof(decltype(_table_), field_entries),
    3,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    &_login_node_db_default_instance_._instance,
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::login_node_db>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
    // uint32 id = 1;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(login_node_db, _impl_.id_), 63>(),
     {8, 63, 0, PROTOBUF_FIELD_OFFSET(login_node_db, _impl_.id_)}},
    // string addr = 2;
    {::_pbi::TcParser::FastUS1,
     {18, 63, 0, PROTOBUF_FIELD_OFFSET(login_node_db, _impl_.addr_)}},
    // uint32 zone_id = 3;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(login_node_db, _impl_.zone_id_), 63>(),
     {24, 63, 0, PROTOBUF_FIELD_OFFSET(login_node_db, _impl_.zone_id_)}},
  }}, {{
    65535, 65535
  }}, {{
    // uint32 id = 1;
    {PROTOBUF_FIELD_OFFSET(login_node_db, _impl_.id_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUInt32)},
    // string addr = 2;
    {PROTOBUF_FIELD_OFFSET(login_node_db, _impl_.addr_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // uint32 zone_id = 3;
    {PROTOBUF_FIELD_OFFSET(login_node_db, _impl_.zone_id_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUInt32)},
  }},
  // no aux_entries
  {{
    "\15\0\4\0\0\0\0\0"
    "login_node_db"
    "addr"
  }},
};

::uint8_t* login_node_db::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:login_node_db)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  // uint32 id = 1;
  if (this->_internal_id() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt32ToArray(
        1, this->_internal_id(), target);
  }

  // string addr = 2;
  if (!this->_internal_addr().empty()) {
    const std::string& _s = this->_internal_addr();
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
        _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "login_node_db.addr");
    target = stream->WriteStringMaybeAliased(2, _s, target);
  }

  // uint32 zone_id = 3;
  if (this->_internal_zone_id() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt32ToArray(
        3, this->_internal_zone_id(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:login_node_db)
  return target;
}

::size_t login_node_db::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:login_node_db)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string addr = 2;
  if (!this->_internal_addr().empty()) {
    total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                    this->_internal_addr());
  }

  // uint32 id = 1;
  if (this->_internal_id() != 0) {
    total_size += ::_pbi::WireFormatLite::UInt32SizePlusOne(
        this->_internal_id());
  }

  // uint32 zone_id = 3;
  if (this->_internal_zone_id() != 0) {
    total_size += ::_pbi::WireFormatLite::UInt32SizePlusOne(
        this->_internal_zone_id());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}


void login_node_db::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<login_node_db*>(&to_msg);
  auto& from = static_cast<const login_node_db&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:login_node_db)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_addr().empty()) {
    _this->_internal_set_addr(from._internal_addr());
  }
  if (from._internal_id() != 0) {
    _this->_impl_.id_ = from._impl_.id_;
  }
  if (from._internal_zone_id() != 0) {
    _this->_impl_.zone_id_ = from._impl_.zone_id_;
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void login_node_db::CopyFrom(const login_node_db& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:login_node_db)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool login_node_db::IsInitialized() const {
  return true;
}

void login_node_db::InternalSwap(login_node_db* PROTOBUF_RESTRICT other) {
  using std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.addr_, &other->_impl_.addr_, arena);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(login_node_db, _impl_.zone_id_)
      + sizeof(login_node_db::_impl_.zone_id_)
      - PROTOBUF_FIELD_OFFSET(login_node_db, _impl_.id_)>(
          reinterpret_cast<char*>(&_impl_.id_),
          reinterpret_cast<char*>(&other->_impl_.id_));
}

::google::protobuf::Metadata login_node_db::GetMetadata() const {
  return ::_pbi::AssignDescriptors(&descriptor_table_proto_2fcommon_2fdeploy_5fservice_2eproto_getter,
                                   &descriptor_table_proto_2fcommon_2fdeploy_5fservice_2eproto_once,
                                   file_level_metadata_proto_2fcommon_2fdeploy_5fservice_2eproto[7]);
}
// ===================================================================

class centre_node_db::_Internal {
 public:
};

centre_node_db::centre_node_db(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:centre_node_db)
}
inline PROTOBUF_NDEBUG_INLINE centre_node_db::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from)
      : ip_(arena, from.ip_),
        _cached_size_{0} {}

centre_node_db::centre_node_db(
    ::google::protobuf::Arena* arena,
    const centre_node_db& from)
    : ::google::protobuf::Message(arena) {
  centre_node_db* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_);
  ::memcpy(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, id_),
           reinterpret_cast<const char *>(&from._impl_) +
               offsetof(Impl_, id_),
           offsetof(Impl_, zone_id_) -
               offsetof(Impl_, id_) +
               sizeof(Impl_::zone_id_));

  // @@protoc_insertion_point(copy_constructor:centre_node_db)
}
inline PROTOBUF_NDEBUG_INLINE centre_node_db::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : ip_(arena),
        _cached_size_{0} {}

inline void centre_node_db::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, id_),
           0,
           offsetof(Impl_, zone_id_) -
               offsetof(Impl_, id_) +
               sizeof(Impl_::zone_id_));
}
centre_node_db::~centre_node_db() {
  // @@protoc_insertion_point(destructor:centre_node_db)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void centre_node_db::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  _impl_.ip_.Destroy();
  _impl_.~Impl_();
}

const ::google::protobuf::MessageLite::ClassData*
centre_node_db::GetClassData() const {
  PROTOBUF_CONSTINIT static const ::google::protobuf::MessageLite::
      ClassDataFull _data_ = {
          {
              nullptr,  // OnDemandRegisterArenaDtor
              PROTOBUF_FIELD_OFFSET(centre_node_db, _impl_._cached_size_),
              false,
          },
          &centre_node_db::MergeImpl,
          &centre_node_db::kDescriptorMethods,
      };
  return &_data_;
}
PROTOBUF_NOINLINE void centre_node_db::Clear() {
// @@protoc_insertion_point(message_clear_start:centre_node_db)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.ip_.ClearToEmpty();
  ::memset(&_impl_.id_, 0, static_cast<::size_t>(
      reinterpret_cast<char*>(&_impl_.zone_id_) -
      reinterpret_cast<char*>(&_impl_.id_)) + sizeof(_impl_.zone_id_));
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* centre_node_db::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<2, 4, 0, 25, 2> centre_node_db::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    4, 24,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967280,  // skipmap
    offsetof(decltype(_table_), field_entries),
    4,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    &_centre_node_db_default_instance_._instance,
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::centre_node_db>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // uint32 zone_id = 4;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(centre_node_db, _impl_.zone_id_), 63>(),
     {32, 63, 0, PROTOBUF_FIELD_OFFSET(centre_node_db, _impl_.zone_id_)}},
    // uint32 id = 1;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(centre_node_db, _impl_.id_), 63>(),
     {8, 63, 0, PROTOBUF_FIELD_OFFSET(centre_node_db, _impl_.id_)}},
    // string ip = 2;
    {::_pbi::TcParser::FastUS1,
     {18, 63, 0, PROTOBUF_FIELD_OFFSET(centre_node_db, _impl_.ip_)}},
    // uint32 port = 3;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(centre_node_db, _impl_.port_), 63>(),
     {24, 63, 0, PROTOBUF_FIELD_OFFSET(centre_node_db, _impl_.port_)}},
  }}, {{
    65535, 65535
  }}, {{
    // uint32 id = 1;
    {PROTOBUF_FIELD_OFFSET(centre_node_db, _impl_.id_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUInt32)},
    // string ip = 2;
    {PROTOBUF_FIELD_OFFSET(centre_node_db, _impl_.ip_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // uint32 port = 3;
    {PROTOBUF_FIELD_OFFSET(centre_node_db, _impl_.port_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUInt32)},
    // uint32 zone_id = 4;
    {PROTOBUF_FIELD_OFFSET(centre_node_db, _impl_.zone_id_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUInt32)},
  }},
  // no aux_entries
  {{
    "\16\0\2\0\0\0\0\0"
    "centre_node_db"
    "ip"
  }},
};

::uint8_t* centre_node_db::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:centre_node_db)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  // uint32 id = 1;
  if (this->_internal_id() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt32ToArray(
        1, this->_internal_id(), target);
  }

  // string ip = 2;
  if (!this->_internal_ip().empty()) {
    const std::string& _s = this->_internal_ip();
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
        _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "centre_node_db.ip");
    target = stream->WriteStringMaybeAliased(2, _s, target);
  }

  // uint32 port = 3;
  if (this->_internal_port() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt32ToArray(
        3, this->_internal_port(), target);
  }

  // uint32 zone_id = 4;
  if (this->_internal_zone_id() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt32ToArray(
        4, this->_internal_zone_id(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:centre_node_db)
  return target;
}

::size_t centre_node_db::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:centre_node_db)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string ip = 2;
  if (!this->_internal_ip().empty()) {
    total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                    this->_internal_ip());
  }

  // uint32 id = 1;
  if (this->_internal_id() != 0) {
    total_size += ::_pbi::WireFormatLite::UInt32SizePlusOne(
        this->_internal_id());
  }

  // uint32 port = 3;
  if (this->_internal_port() != 0) {
    total_size += ::_pbi::WireFormatLite::UInt32SizePlusOne(
        this->_internal_port());
  }

  // uint32 zone_id = 4;
  if (this->_internal_zone_id() != 0) {
    total_size += ::_pbi::WireFormatLite::UInt32SizePlusOne(
        this->_internal_zone_id());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}


void centre_node_db::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<centre_node_db*>(&to_msg);
  auto& from = static_cast<const centre_node_db&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:centre_node_db)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_ip().empty()) {
    _this->_internal_set_ip(from._internal_ip());
  }
  if (from._internal_id() != 0) {
    _this->_impl_.id_ = from._impl_.id_;
  }
  if (from._internal_port() != 0) {
    _this->_impl_.port_ = from._impl_.port_;
  }
  if (from._internal_zone_id() != 0) {
    _this->_impl_.zone_id_ = from._impl_.zone_id_;
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void centre_node_db::CopyFrom(const centre_node_db& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:centre_node_db)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool centre_node_db::IsInitialized() const {
  return true;
}

void centre_node_db::InternalSwap(centre_node_db* PROTOBUF_RESTRICT other) {
  using std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.ip_, &other->_impl_.ip_, arena);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(centre_node_db, _impl_.zone_id_)
      + sizeof(centre_node_db::_impl_.zone_id_)
      - PROTOBUF_FIELD_OFFSET(centre_node_db, _impl_.id_)>(
          reinterpret_cast<char*>(&_impl_.id_),
          reinterpret_cast<char*>(&other->_impl_.id_));
}

::google::protobuf::Metadata centre_node_db::GetMetadata() const {
  return ::_pbi::AssignDescriptors(&descriptor_table_proto_2fcommon_2fdeploy_5fservice_2eproto_getter,
                                   &descriptor_table_proto_2fcommon_2fdeploy_5fservice_2eproto_once,
                                   file_level_metadata_proto_2fcommon_2fdeploy_5fservice_2eproto[8]);
}
// ===================================================================

class lobby_node_db::_Internal {
 public:
};

lobby_node_db::lobby_node_db(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:lobby_node_db)
}
inline PROTOBUF_NDEBUG_INLINE lobby_node_db::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from)
      : ip_(arena, from.ip_),
        _cached_size_{0} {}

lobby_node_db::lobby_node_db(
    ::google::protobuf::Arena* arena,
    const lobby_node_db& from)
    : ::google::protobuf::Message(arena) {
  lobby_node_db* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_);
  ::memcpy(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, id_),
           reinterpret_cast<const char *>(&from._impl_) +
               offsetof(Impl_, id_),
           offsetof(Impl_, port_) -
               offsetof(Impl_, id_) +
               sizeof(Impl_::port_));

  // @@protoc_insertion_point(copy_constructor:lobby_node_db)
}
inline PROTOBUF_NDEBUG_INLINE lobby_node_db::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : ip_(arena),
        _cached_size_{0} {}

inline void lobby_node_db::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, id_),
           0,
           offsetof(Impl_, port_) -
               offsetof(Impl_, id_) +
               sizeof(Impl_::port_));
}
lobby_node_db::~lobby_node_db() {
  // @@protoc_insertion_point(destructor:lobby_node_db)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void lobby_node_db::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  _impl_.ip_.Destroy();
  _impl_.~Impl_();
}

const ::google::protobuf::MessageLite::ClassData*
lobby_node_db::GetClassData() const {
  PROTOBUF_CONSTINIT static const ::google::protobuf::MessageLite::
      ClassDataFull _data_ = {
          {
              nullptr,  // OnDemandRegisterArenaDtor
              PROTOBUF_FIELD_OFFSET(lobby_node_db, _impl_._cached_size_),
              false,
          },
          &lobby_node_db::MergeImpl,
          &lobby_node_db::kDescriptorMethods,
      };
  return &_data_;
}
PROTOBUF_NOINLINE void lobby_node_db::Clear() {
// @@protoc_insertion_point(message_clear_start:lobby_node_db)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.ip_.ClearToEmpty();
  ::memset(&_impl_.id_, 0, static_cast<::size_t>(
      reinterpret_cast<char*>(&_impl_.port_) -
      reinterpret_cast<char*>(&_impl_.id_)) + sizeof(_impl_.port_));
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* lobby_node_db::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<2, 3, 0, 24, 2> lobby_node_db::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    3, 24,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967288,  // skipmap
    offsetof(decltype(_table_), field_entries),
    3,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    &_lobby_node_db_default_instance_._instance,
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::lobby_node_db>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
    // uint32 id = 1;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(lobby_node_db, _impl_.id_), 63>(),
     {8, 63, 0, PROTOBUF_FIELD_OFFSET(lobby_node_db, _impl_.id_)}},
    // string ip = 2;
    {::_pbi::TcParser::FastUS1,
     {18, 63, 0, PROTOBUF_FIELD_OFFSET(lobby_node_db, _impl_.ip_)}},
    // uint32 port = 3;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(lobby_node_db, _impl_.port_), 63>(),
     {24, 63, 0, PROTOBUF_FIELD_OFFSET(lobby_node_db, _impl_.port_)}},
  }}, {{
    65535, 65535
  }}, {{
    // uint32 id = 1;
    {PROTOBUF_FIELD_OFFSET(lobby_node_db, _impl_.id_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUInt32)},
    // string ip = 2;
    {PROTOBUF_FIELD_OFFSET(lobby_node_db, _impl_.ip_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // uint32 port = 3;
    {PROTOBUF_FIELD_OFFSET(lobby_node_db, _impl_.port_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUInt32)},
  }},
  // no aux_entries
  {{
    "\15\0\2\0\0\0\0\0"
    "lobby_node_db"
    "ip"
  }},
};

::uint8_t* lobby_node_db::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:lobby_node_db)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  // uint32 id = 1;
  if (this->_internal_id() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt32ToArray(
        1, this->_internal_id(), target);
  }

  // string ip = 2;
  if (!this->_internal_ip().empty()) {
    const std::string& _s = this->_internal_ip();
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
        _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "lobby_node_db.ip");
    target = stream->WriteStringMaybeAliased(2, _s, target);
  }

  // uint32 port = 3;
  if (this->_internal_port() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt32ToArray(
        3, this->_internal_port(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:lobby_node_db)
  return target;
}

::size_t lobby_node_db::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:lobby_node_db)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string ip = 2;
  if (!this->_internal_ip().empty()) {
    total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                    this->_internal_ip());
  }

  // uint32 id = 1;
  if (this->_internal_id() != 0) {
    total_size += ::_pbi::WireFormatLite::UInt32SizePlusOne(
        this->_internal_id());
  }

  // uint32 port = 3;
  if (this->_internal_port() != 0) {
    total_size += ::_pbi::WireFormatLite::UInt32SizePlusOne(
        this->_internal_port());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}


void lobby_node_db::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<lobby_node_db*>(&to_msg);
  auto& from = static_cast<const lobby_node_db&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:lobby_node_db)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_ip().empty()) {
    _this->_internal_set_ip(from._internal_ip());
  }
  if (from._internal_id() != 0) {
    _this->_impl_.id_ = from._impl_.id_;
  }
  if (from._internal_port() != 0) {
    _this->_impl_.port_ = from._impl_.port_;
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void lobby_node_db::CopyFrom(const lobby_node_db& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:lobby_node_db)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool lobby_node_db::IsInitialized() const {
  return true;
}

void lobby_node_db::InternalSwap(lobby_node_db* PROTOBUF_RESTRICT other) {
  using std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.ip_, &other->_impl_.ip_, arena);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(lobby_node_db, _impl_.port_)
      + sizeof(lobby_node_db::_impl_.port_)
      - PROTOBUF_FIELD_OFFSET(lobby_node_db, _impl_.id_)>(
          reinterpret_cast<char*>(&_impl_.id_),
          reinterpret_cast<char*>(&other->_impl_.id_));
}

::google::protobuf::Metadata lobby_node_db::GetMetadata() const {
  return ::_pbi::AssignDescriptors(&descriptor_table_proto_2fcommon_2fdeploy_5fservice_2eproto_getter,
                                   &descriptor_table_proto_2fcommon_2fdeploy_5fservice_2eproto_once,
                                   file_level_metadata_proto_2fcommon_2fdeploy_5fservice_2eproto[9]);
}
// ===================================================================

class redis_node_db::_Internal {
 public:
};

redis_node_db::redis_node_db(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:redis_node_db)
}
inline PROTOBUF_NDEBUG_INLINE redis_node_db::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from)
      : ip_(arena, from.ip_),
        _cached_size_{0} {}

redis_node_db::redis_node_db(
    ::google::protobuf::Arena* arena,
    const redis_node_db& from)
    : ::google::protobuf::Message(arena) {
  redis_node_db* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_);
  ::memcpy(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, id_),
           reinterpret_cast<const char *>(&from._impl_) +
               offsetof(Impl_, id_),
           offsetof(Impl_, zone_id_) -
               offsetof(Impl_, id_) +
               sizeof(Impl_::zone_id_));

  // @@protoc_insertion_point(copy_constructor:redis_node_db)
}
inline PROTOBUF_NDEBUG_INLINE redis_node_db::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : ip_(arena),
        _cached_size_{0} {}

inline void redis_node_db::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, id_),
           0,
           offsetof(Impl_, zone_id_) -
               offsetof(Impl_, id_) +
               sizeof(Impl_::zone_id_));
}
redis_node_db::~redis_node_db() {
  // @@protoc_insertion_point(destructor:redis_node_db)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void redis_node_db::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  _impl_.ip_.Destroy();
  _impl_.~Impl_();
}

const ::google::protobuf::MessageLite::ClassData*
redis_node_db::GetClassData() const {
  PROTOBUF_CONSTINIT static const ::google::protobuf::MessageLite::
      ClassDataFull _data_ = {
          {
              nullptr,  // OnDemandRegisterArenaDtor
              PROTOBUF_FIELD_OFFSET(redis_node_db, _impl_._cached_size_),
              false,
          },
          &redis_node_db::MergeImpl,
          &redis_node_db::kDescriptorMethods,
      };
  return &_data_;
}
PROTOBUF_NOINLINE void redis_node_db::Clear() {
// @@protoc_insertion_point(message_clear_start:redis_node_db)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.ip_.ClearToEmpty();
  ::memset(&_impl_.id_, 0, static_cast<::size_t>(
      reinterpret_cast<char*>(&_impl_.zone_id_) -
      reinterpret_cast<char*>(&_impl_.id_)) + sizeof(_impl_.zone_id_));
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* redis_node_db::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<2, 4, 0, 24, 2> redis_node_db::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    4, 24,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967280,  // skipmap
    offsetof(decltype(_table_), field_entries),
    4,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    &_redis_node_db_default_instance_._instance,
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::redis_node_db>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // uint32 zone_id = 4;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(redis_node_db, _impl_.zone_id_), 63>(),
     {32, 63, 0, PROTOBUF_FIELD_OFFSET(redis_node_db, _impl_.zone_id_)}},
    // uint32 id = 1;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(redis_node_db, _impl_.id_), 63>(),
     {8, 63, 0, PROTOBUF_FIELD_OFFSET(redis_node_db, _impl_.id_)}},
    // string ip = 2;
    {::_pbi::TcParser::FastUS1,
     {18, 63, 0, PROTOBUF_FIELD_OFFSET(redis_node_db, _impl_.ip_)}},
    // uint32 port = 3;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(redis_node_db, _impl_.port_), 63>(),
     {24, 63, 0, PROTOBUF_FIELD_OFFSET(redis_node_db, _impl_.port_)}},
  }}, {{
    65535, 65535
  }}, {{
    // uint32 id = 1;
    {PROTOBUF_FIELD_OFFSET(redis_node_db, _impl_.id_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUInt32)},
    // string ip = 2;
    {PROTOBUF_FIELD_OFFSET(redis_node_db, _impl_.ip_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // uint32 port = 3;
    {PROTOBUF_FIELD_OFFSET(redis_node_db, _impl_.port_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUInt32)},
    // uint32 zone_id = 4;
    {PROTOBUF_FIELD_OFFSET(redis_node_db, _impl_.zone_id_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUInt32)},
  }},
  // no aux_entries
  {{
    "\15\0\2\0\0\0\0\0"
    "redis_node_db"
    "ip"
  }},
};

::uint8_t* redis_node_db::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:redis_node_db)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  // uint32 id = 1;
  if (this->_internal_id() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt32ToArray(
        1, this->_internal_id(), target);
  }

  // string ip = 2;
  if (!this->_internal_ip().empty()) {
    const std::string& _s = this->_internal_ip();
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
        _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "redis_node_db.ip");
    target = stream->WriteStringMaybeAliased(2, _s, target);
  }

  // uint32 port = 3;
  if (this->_internal_port() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt32ToArray(
        3, this->_internal_port(), target);
  }

  // uint32 zone_id = 4;
  if (this->_internal_zone_id() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt32ToArray(
        4, this->_internal_zone_id(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:redis_node_db)
  return target;
}

::size_t redis_node_db::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:redis_node_db)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string ip = 2;
  if (!this->_internal_ip().empty()) {
    total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                    this->_internal_ip());
  }

  // uint32 id = 1;
  if (this->_internal_id() != 0) {
    total_size += ::_pbi::WireFormatLite::UInt32SizePlusOne(
        this->_internal_id());
  }

  // uint32 port = 3;
  if (this->_internal_port() != 0) {
    total_size += ::_pbi::WireFormatLite::UInt32SizePlusOne(
        this->_internal_port());
  }

  // uint32 zone_id = 4;
  if (this->_internal_zone_id() != 0) {
    total_size += ::_pbi::WireFormatLite::UInt32SizePlusOne(
        this->_internal_zone_id());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}


void redis_node_db::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<redis_node_db*>(&to_msg);
  auto& from = static_cast<const redis_node_db&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:redis_node_db)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_ip().empty()) {
    _this->_internal_set_ip(from._internal_ip());
  }
  if (from._internal_id() != 0) {
    _this->_impl_.id_ = from._impl_.id_;
  }
  if (from._internal_port() != 0) {
    _this->_impl_.port_ = from._impl_.port_;
  }
  if (from._internal_zone_id() != 0) {
    _this->_impl_.zone_id_ = from._impl_.zone_id_;
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void redis_node_db::CopyFrom(const redis_node_db& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:redis_node_db)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool redis_node_db::IsInitialized() const {
  return true;
}

void redis_node_db::InternalSwap(redis_node_db* PROTOBUF_RESTRICT other) {
  using std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.ip_, &other->_impl_.ip_, arena);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(redis_node_db, _impl_.zone_id_)
      + sizeof(redis_node_db::_impl_.zone_id_)
      - PROTOBUF_FIELD_OFFSET(redis_node_db, _impl_.id_)>(
          reinterpret_cast<char*>(&_impl_.id_),
          reinterpret_cast<char*>(&other->_impl_.id_));
}

::google::protobuf::Metadata redis_node_db::GetMetadata() const {
  return ::_pbi::AssignDescriptors(&descriptor_table_proto_2fcommon_2fdeploy_5fservice_2eproto_getter,
                                   &descriptor_table_proto_2fcommon_2fdeploy_5fservice_2eproto_once,
                                   file_level_metadata_proto_2fcommon_2fdeploy_5fservice_2eproto[10]);
}
// ===================================================================

class game_node_db::_Internal {
 public:
};

game_node_db::game_node_db(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:game_node_db)
}
inline PROTOBUF_NDEBUG_INLINE game_node_db::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from)
      : ip_(arena, from.ip_),
        _cached_size_{0} {}

game_node_db::game_node_db(
    ::google::protobuf::Arena* arena,
    const game_node_db& from)
    : ::google::protobuf::Message(arena) {
  game_node_db* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_);
  ::memcpy(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, id_),
           reinterpret_cast<const char *>(&from._impl_) +
               offsetof(Impl_, id_),
           offsetof(Impl_, zone_id_) -
               offsetof(Impl_, id_) +
               sizeof(Impl_::zone_id_));

  // @@protoc_insertion_point(copy_constructor:game_node_db)
}
inline PROTOBUF_NDEBUG_INLINE game_node_db::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : ip_(arena),
        _cached_size_{0} {}

inline void game_node_db::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, id_),
           0,
           offsetof(Impl_, zone_id_) -
               offsetof(Impl_, id_) +
               sizeof(Impl_::zone_id_));
}
game_node_db::~game_node_db() {
  // @@protoc_insertion_point(destructor:game_node_db)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void game_node_db::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  _impl_.ip_.Destroy();
  _impl_.~Impl_();
}

const ::google::protobuf::MessageLite::ClassData*
game_node_db::GetClassData() const {
  PROTOBUF_CONSTINIT static const ::google::protobuf::MessageLite::
      ClassDataFull _data_ = {
          {
              nullptr,  // OnDemandRegisterArenaDtor
              PROTOBUF_FIELD_OFFSET(game_node_db, _impl_._cached_size_),
              false,
          },
          &game_node_db::MergeImpl,
          &game_node_db::kDescriptorMethods,
      };
  return &_data_;
}
PROTOBUF_NOINLINE void game_node_db::Clear() {
// @@protoc_insertion_point(message_clear_start:game_node_db)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.ip_.ClearToEmpty();
  ::memset(&_impl_.id_, 0, static_cast<::size_t>(
      reinterpret_cast<char*>(&_impl_.zone_id_) -
      reinterpret_cast<char*>(&_impl_.id_)) + sizeof(_impl_.zone_id_));
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* game_node_db::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<2, 4, 0, 23, 2> game_node_db::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    4, 24,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967280,  // skipmap
    offsetof(decltype(_table_), field_entries),
    4,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    &_game_node_db_default_instance_._instance,
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::game_node_db>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // uint32 zone_id = 4;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(game_node_db, _impl_.zone_id_), 63>(),
     {32, 63, 0, PROTOBUF_FIELD_OFFSET(game_node_db, _impl_.zone_id_)}},
    // uint32 id = 1;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(game_node_db, _impl_.id_), 63>(),
     {8, 63, 0, PROTOBUF_FIELD_OFFSET(game_node_db, _impl_.id_)}},
    // string ip = 2;
    {::_pbi::TcParser::FastUS1,
     {18, 63, 0, PROTOBUF_FIELD_OFFSET(game_node_db, _impl_.ip_)}},
    // uint32 port = 3;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(game_node_db, _impl_.port_), 63>(),
     {24, 63, 0, PROTOBUF_FIELD_OFFSET(game_node_db, _impl_.port_)}},
  }}, {{
    65535, 65535
  }}, {{
    // uint32 id = 1;
    {PROTOBUF_FIELD_OFFSET(game_node_db, _impl_.id_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUInt32)},
    // string ip = 2;
    {PROTOBUF_FIELD_OFFSET(game_node_db, _impl_.ip_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // uint32 port = 3;
    {PROTOBUF_FIELD_OFFSET(game_node_db, _impl_.port_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUInt32)},
    // uint32 zone_id = 4;
    {PROTOBUF_FIELD_OFFSET(game_node_db, _impl_.zone_id_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUInt32)},
  }},
  // no aux_entries
  {{
    "\14\0\2\0\0\0\0\0"
    "game_node_db"
    "ip"
  }},
};

::uint8_t* game_node_db::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:game_node_db)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  // uint32 id = 1;
  if (this->_internal_id() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt32ToArray(
        1, this->_internal_id(), target);
  }

  // string ip = 2;
  if (!this->_internal_ip().empty()) {
    const std::string& _s = this->_internal_ip();
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
        _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "game_node_db.ip");
    target = stream->WriteStringMaybeAliased(2, _s, target);
  }

  // uint32 port = 3;
  if (this->_internal_port() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt32ToArray(
        3, this->_internal_port(), target);
  }

  // uint32 zone_id = 4;
  if (this->_internal_zone_id() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt32ToArray(
        4, this->_internal_zone_id(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:game_node_db)
  return target;
}

::size_t game_node_db::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:game_node_db)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string ip = 2;
  if (!this->_internal_ip().empty()) {
    total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                    this->_internal_ip());
  }

  // uint32 id = 1;
  if (this->_internal_id() != 0) {
    total_size += ::_pbi::WireFormatLite::UInt32SizePlusOne(
        this->_internal_id());
  }

  // uint32 port = 3;
  if (this->_internal_port() != 0) {
    total_size += ::_pbi::WireFormatLite::UInt32SizePlusOne(
        this->_internal_port());
  }

  // uint32 zone_id = 4;
  if (this->_internal_zone_id() != 0) {
    total_size += ::_pbi::WireFormatLite::UInt32SizePlusOne(
        this->_internal_zone_id());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}


void game_node_db::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<game_node_db*>(&to_msg);
  auto& from = static_cast<const game_node_db&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:game_node_db)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_ip().empty()) {
    _this->_internal_set_ip(from._internal_ip());
  }
  if (from._internal_id() != 0) {
    _this->_impl_.id_ = from._impl_.id_;
  }
  if (from._internal_port() != 0) {
    _this->_impl_.port_ = from._impl_.port_;
  }
  if (from._internal_zone_id() != 0) {
    _this->_impl_.zone_id_ = from._impl_.zone_id_;
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void game_node_db::CopyFrom(const game_node_db& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:game_node_db)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool game_node_db::IsInitialized() const {
  return true;
}

void game_node_db::InternalSwap(game_node_db* PROTOBUF_RESTRICT other) {
  using std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.ip_, &other->_impl_.ip_, arena);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(game_node_db, _impl_.zone_id_)
      + sizeof(game_node_db::_impl_.zone_id_)
      - PROTOBUF_FIELD_OFFSET(game_node_db, _impl_.id_)>(
          reinterpret_cast<char*>(&_impl_.id_),
          reinterpret_cast<char*>(&other->_impl_.id_));
}

::google::protobuf::Metadata game_node_db::GetMetadata() const {
  return ::_pbi::AssignDescriptors(&descriptor_table_proto_2fcommon_2fdeploy_5fservice_2eproto_getter,
                                   &descriptor_table_proto_2fcommon_2fdeploy_5fservice_2eproto_once,
                                   file_level_metadata_proto_2fcommon_2fdeploy_5fservice_2eproto[11]);
}
// ===================================================================

class gate_node_db::_Internal {
 public:
};

gate_node_db::gate_node_db(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:gate_node_db)
}
inline PROTOBUF_NDEBUG_INLINE gate_node_db::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from)
      : ip_(arena, from.ip_),
        _cached_size_{0} {}

gate_node_db::gate_node_db(
    ::google::protobuf::Arena* arena,
    const gate_node_db& from)
    : ::google::protobuf::Message(arena) {
  gate_node_db* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_);
  ::memcpy(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, id_),
           reinterpret_cast<const char *>(&from._impl_) +
               offsetof(Impl_, id_),
           offsetof(Impl_, zone_id_) -
               offsetof(Impl_, id_) +
               sizeof(Impl_::zone_id_));

  // @@protoc_insertion_point(copy_constructor:gate_node_db)
}
inline PROTOBUF_NDEBUG_INLINE gate_node_db::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : ip_(arena),
        _cached_size_{0} {}

inline void gate_node_db::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, id_),
           0,
           offsetof(Impl_, zone_id_) -
               offsetof(Impl_, id_) +
               sizeof(Impl_::zone_id_));
}
gate_node_db::~gate_node_db() {
  // @@protoc_insertion_point(destructor:gate_node_db)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void gate_node_db::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  _impl_.ip_.Destroy();
  _impl_.~Impl_();
}

const ::google::protobuf::MessageLite::ClassData*
gate_node_db::GetClassData() const {
  PROTOBUF_CONSTINIT static const ::google::protobuf::MessageLite::
      ClassDataFull _data_ = {
          {
              nullptr,  // OnDemandRegisterArenaDtor
              PROTOBUF_FIELD_OFFSET(gate_node_db, _impl_._cached_size_),
              false,
          },
          &gate_node_db::MergeImpl,
          &gate_node_db::kDescriptorMethods,
      };
  return &_data_;
}
PROTOBUF_NOINLINE void gate_node_db::Clear() {
// @@protoc_insertion_point(message_clear_start:gate_node_db)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.ip_.ClearToEmpty();
  ::memset(&_impl_.id_, 0, static_cast<::size_t>(
      reinterpret_cast<char*>(&_impl_.zone_id_) -
      reinterpret_cast<char*>(&_impl_.id_)) + sizeof(_impl_.zone_id_));
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* gate_node_db::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<2, 4, 0, 23, 2> gate_node_db::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    4, 24,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967280,  // skipmap
    offsetof(decltype(_table_), field_entries),
    4,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    &_gate_node_db_default_instance_._instance,
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::gate_node_db>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // uint32 zone_id = 4;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(gate_node_db, _impl_.zone_id_), 63>(),
     {32, 63, 0, PROTOBUF_FIELD_OFFSET(gate_node_db, _impl_.zone_id_)}},
    // uint32 id = 1;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(gate_node_db, _impl_.id_), 63>(),
     {8, 63, 0, PROTOBUF_FIELD_OFFSET(gate_node_db, _impl_.id_)}},
    // string ip = 2;
    {::_pbi::TcParser::FastUS1,
     {18, 63, 0, PROTOBUF_FIELD_OFFSET(gate_node_db, _impl_.ip_)}},
    // uint32 port = 3;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(gate_node_db, _impl_.port_), 63>(),
     {24, 63, 0, PROTOBUF_FIELD_OFFSET(gate_node_db, _impl_.port_)}},
  }}, {{
    65535, 65535
  }}, {{
    // uint32 id = 1;
    {PROTOBUF_FIELD_OFFSET(gate_node_db, _impl_.id_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUInt32)},
    // string ip = 2;
    {PROTOBUF_FIELD_OFFSET(gate_node_db, _impl_.ip_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // uint32 port = 3;
    {PROTOBUF_FIELD_OFFSET(gate_node_db, _impl_.port_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUInt32)},
    // uint32 zone_id = 4;
    {PROTOBUF_FIELD_OFFSET(gate_node_db, _impl_.zone_id_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUInt32)},
  }},
  // no aux_entries
  {{
    "\14\0\2\0\0\0\0\0"
    "gate_node_db"
    "ip"
  }},
};

::uint8_t* gate_node_db::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:gate_node_db)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  // uint32 id = 1;
  if (this->_internal_id() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt32ToArray(
        1, this->_internal_id(), target);
  }

  // string ip = 2;
  if (!this->_internal_ip().empty()) {
    const std::string& _s = this->_internal_ip();
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
        _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "gate_node_db.ip");
    target = stream->WriteStringMaybeAliased(2, _s, target);
  }

  // uint32 port = 3;
  if (this->_internal_port() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt32ToArray(
        3, this->_internal_port(), target);
  }

  // uint32 zone_id = 4;
  if (this->_internal_zone_id() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt32ToArray(
        4, this->_internal_zone_id(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:gate_node_db)
  return target;
}

::size_t gate_node_db::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:gate_node_db)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string ip = 2;
  if (!this->_internal_ip().empty()) {
    total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                    this->_internal_ip());
  }

  // uint32 id = 1;
  if (this->_internal_id() != 0) {
    total_size += ::_pbi::WireFormatLite::UInt32SizePlusOne(
        this->_internal_id());
  }

  // uint32 port = 3;
  if (this->_internal_port() != 0) {
    total_size += ::_pbi::WireFormatLite::UInt32SizePlusOne(
        this->_internal_port());
  }

  // uint32 zone_id = 4;
  if (this->_internal_zone_id() != 0) {
    total_size += ::_pbi::WireFormatLite::UInt32SizePlusOne(
        this->_internal_zone_id());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}


void gate_node_db::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<gate_node_db*>(&to_msg);
  auto& from = static_cast<const gate_node_db&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:gate_node_db)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_ip().empty()) {
    _this->_internal_set_ip(from._internal_ip());
  }
  if (from._internal_id() != 0) {
    _this->_impl_.id_ = from._impl_.id_;
  }
  if (from._internal_port() != 0) {
    _this->_impl_.port_ = from._impl_.port_;
  }
  if (from._internal_zone_id() != 0) {
    _this->_impl_.zone_id_ = from._impl_.zone_id_;
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void gate_node_db::CopyFrom(const gate_node_db& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:gate_node_db)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool gate_node_db::IsInitialized() const {
  return true;
}

void gate_node_db::InternalSwap(gate_node_db* PROTOBUF_RESTRICT other) {
  using std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.ip_, &other->_impl_.ip_, arena);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(gate_node_db, _impl_.zone_id_)
      + sizeof(gate_node_db::_impl_.zone_id_)
      - PROTOBUF_FIELD_OFFSET(gate_node_db, _impl_.id_)>(
          reinterpret_cast<char*>(&_impl_.id_),
          reinterpret_cast<char*>(&other->_impl_.id_));
}

::google::protobuf::Metadata gate_node_db::GetMetadata() const {
  return ::_pbi::AssignDescriptors(&descriptor_table_proto_2fcommon_2fdeploy_5fservice_2eproto_getter,
                                   &descriptor_table_proto_2fcommon_2fdeploy_5fservice_2eproto_once,
                                   file_level_metadata_proto_2fcommon_2fdeploy_5fservice_2eproto[12]);
}
// ===================================================================

class NodeInfoRequest::_Internal {
 public:
};

NodeInfoRequest::NodeInfoRequest(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:NodeInfoRequest)
}
NodeInfoRequest::NodeInfoRequest(
    ::google::protobuf::Arena* arena, const NodeInfoRequest& from)
    : NodeInfoRequest(arena) {
  MergeFrom(from);
}
inline PROTOBUF_NDEBUG_INLINE NodeInfoRequest::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0} {}

inline void NodeInfoRequest::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, zone_id_),
           0,
           offsetof(Impl_, node_type_) -
               offsetof(Impl_, zone_id_) +
               sizeof(Impl_::node_type_));
}
NodeInfoRequest::~NodeInfoRequest() {
  // @@protoc_insertion_point(destructor:NodeInfoRequest)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void NodeInfoRequest::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  _impl_.~Impl_();
}

const ::google::protobuf::MessageLite::ClassData*
NodeInfoRequest::GetClassData() const {
  PROTOBUF_CONSTINIT static const ::google::protobuf::MessageLite::
      ClassDataFull _data_ = {
          {
              nullptr,  // OnDemandRegisterArenaDtor
              PROTOBUF_FIELD_OFFSET(NodeInfoRequest, _impl_._cached_size_),
              false,
          },
          &NodeInfoRequest::MergeImpl,
          &NodeInfoRequest::kDescriptorMethods,
      };
  return &_data_;
}
PROTOBUF_NOINLINE void NodeInfoRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:NodeInfoRequest)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&_impl_.zone_id_, 0, static_cast<::size_t>(
      reinterpret_cast<char*>(&_impl_.node_type_) -
      reinterpret_cast<char*>(&_impl_.zone_id_)) + sizeof(_impl_.node_type_));
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* NodeInfoRequest::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<1, 2, 0, 0, 2> NodeInfoRequest::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    2, 8,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967292,  // skipmap
    offsetof(decltype(_table_), field_entries),
    2,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    &_NodeInfoRequest_default_instance_._instance,
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::NodeInfoRequest>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // uint32 node_type = 2;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(NodeInfoRequest, _impl_.node_type_), 63>(),
     {16, 63, 0, PROTOBUF_FIELD_OFFSET(NodeInfoRequest, _impl_.node_type_)}},
    // uint32 zone_id = 1;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(NodeInfoRequest, _impl_.zone_id_), 63>(),
     {8, 63, 0, PROTOBUF_FIELD_OFFSET(NodeInfoRequest, _impl_.zone_id_)}},
  }}, {{
    65535, 65535
  }}, {{
    // uint32 zone_id = 1;
    {PROTOBUF_FIELD_OFFSET(NodeInfoRequest, _impl_.zone_id_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUInt32)},
    // uint32 node_type = 2;
    {PROTOBUF_FIELD_OFFSET(NodeInfoRequest, _impl_.node_type_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUInt32)},
  }},
  // no aux_entries
  {{
  }},
};

::uint8_t* NodeInfoRequest::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:NodeInfoRequest)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  // uint32 zone_id = 1;
  if (this->_internal_zone_id() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt32ToArray(
        1, this->_internal_zone_id(), target);
  }

  // uint32 node_type = 2;
  if (this->_internal_node_type() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt32ToArray(
        2, this->_internal_node_type(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:NodeInfoRequest)
  return target;
}

::size_t NodeInfoRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:NodeInfoRequest)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // uint32 zone_id = 1;
  if (this->_internal_zone_id() != 0) {
    total_size += ::_pbi::WireFormatLite::UInt32SizePlusOne(
        this->_internal_zone_id());
  }

  // uint32 node_type = 2;
  if (this->_internal_node_type() != 0) {
    total_size += ::_pbi::WireFormatLite::UInt32SizePlusOne(
        this->_internal_node_type());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}


void NodeInfoRequest::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<NodeInfoRequest*>(&to_msg);
  auto& from = static_cast<const NodeInfoRequest&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:NodeInfoRequest)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_zone_id() != 0) {
    _this->_impl_.zone_id_ = from._impl_.zone_id_;
  }
  if (from._internal_node_type() != 0) {
    _this->_impl_.node_type_ = from._impl_.node_type_;
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void NodeInfoRequest::CopyFrom(const NodeInfoRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:NodeInfoRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool NodeInfoRequest::IsInitialized() const {
  return true;
}

void NodeInfoRequest::InternalSwap(NodeInfoRequest* PROTOBUF_RESTRICT other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(NodeInfoRequest, _impl_.node_type_)
      + sizeof(NodeInfoRequest::_impl_.node_type_)
      - PROTOBUF_FIELD_OFFSET(NodeInfoRequest, _impl_.zone_id_)>(
          reinterpret_cast<char*>(&_impl_.zone_id_),
          reinterpret_cast<char*>(&other->_impl_.zone_id_));
}

::google::protobuf::Metadata NodeInfoRequest::GetMetadata() const {
  return ::_pbi::AssignDescriptors(&descriptor_table_proto_2fcommon_2fdeploy_5fservice_2eproto_getter,
                                   &descriptor_table_proto_2fcommon_2fdeploy_5fservice_2eproto_once,
                                   file_level_metadata_proto_2fcommon_2fdeploy_5fservice_2eproto[13]);
}
// ===================================================================

class NodeInfoResponse::_Internal {
 public:
  using HasBits = decltype(std::declval<NodeInfoResponse>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
    8 * PROTOBUF_FIELD_OFFSET(NodeInfoResponse, _impl_._has_bits_);
};

NodeInfoResponse::NodeInfoResponse(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:NodeInfoResponse)
}
inline PROTOBUF_NDEBUG_INLINE NodeInfoResponse::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from)
      : _has_bits_{from._has_bits_},
        _cached_size_{0} {}

NodeInfoResponse::NodeInfoResponse(
    ::google::protobuf::Arena* arena,
    const NodeInfoResponse& from)
    : ::google::protobuf::Message(arena) {
  NodeInfoResponse* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_);
  ::uint32_t cached_has_bits = _impl_._has_bits_[0];
  _impl_.info_ = (cached_has_bits & 0x00000001u) ? ::google::protobuf::Message::CopyConstruct<::nodes_info_data>(
                              arena, *from._impl_.info_)
                        : nullptr;
  _impl_.node_id_ = from._impl_.node_id_;

  // @@protoc_insertion_point(copy_constructor:NodeInfoResponse)
}
inline PROTOBUF_NDEBUG_INLINE NodeInfoResponse::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0} {}

inline void NodeInfoResponse::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, info_),
           0,
           offsetof(Impl_, node_id_) -
               offsetof(Impl_, info_) +
               sizeof(Impl_::node_id_));
}
NodeInfoResponse::~NodeInfoResponse() {
  // @@protoc_insertion_point(destructor:NodeInfoResponse)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void NodeInfoResponse::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  delete _impl_.info_;
  _impl_.~Impl_();
}

const ::google::protobuf::MessageLite::ClassData*
NodeInfoResponse::GetClassData() const {
  PROTOBUF_CONSTINIT static const ::google::protobuf::MessageLite::
      ClassDataFull _data_ = {
          {
              nullptr,  // OnDemandRegisterArenaDtor
              PROTOBUF_FIELD_OFFSET(NodeInfoResponse, _impl_._cached_size_),
              false,
          },
          &NodeInfoResponse::MergeImpl,
          &NodeInfoResponse::kDescriptorMethods,
      };
  return &_data_;
}
PROTOBUF_NOINLINE void NodeInfoResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:NodeInfoResponse)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    ABSL_DCHECK(_impl_.info_ != nullptr);
    _impl_.info_->Clear();
  }
  _impl_.node_id_ = 0u;
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* NodeInfoResponse::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<1, 2, 1, 0, 2> NodeInfoResponse::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(NodeInfoResponse, _impl_._has_bits_),
    0, // no _extensions_
    2, 8,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967292,  // skipmap
    offsetof(decltype(_table_), field_entries),
    2,  // num_field_entries
    1,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    &_NodeInfoResponse_default_instance_._instance,
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::NodeInfoResponse>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // uint32 node_id = 2;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(NodeInfoResponse, _impl_.node_id_), 63>(),
     {16, 63, 0, PROTOBUF_FIELD_OFFSET(NodeInfoResponse, _impl_.node_id_)}},
    // .nodes_info_data info = 1;
    {::_pbi::TcParser::FastMtS1,
     {10, 0, 0, PROTOBUF_FIELD_OFFSET(NodeInfoResponse, _impl_.info_)}},
  }}, {{
    65535, 65535
  }}, {{
    // .nodes_info_data info = 1;
    {PROTOBUF_FIELD_OFFSET(NodeInfoResponse, _impl_.info_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
    // uint32 node_id = 2;
    {PROTOBUF_FIELD_OFFSET(NodeInfoResponse, _impl_.node_id_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUInt32)},
  }}, {{
    {::_pbi::TcParser::GetTable<::nodes_info_data>()},
  }}, {{
  }},
};

::uint8_t* NodeInfoResponse::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:NodeInfoResponse)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  // .nodes_info_data info = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
        1, *_impl_.info_, _impl_.info_->GetCachedSize(), target, stream);
  }

  // uint32 node_id = 2;
  if (this->_internal_node_id() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt32ToArray(
        2, this->_internal_node_id(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:NodeInfoResponse)
  return target;
}

::size_t NodeInfoResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:NodeInfoResponse)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // .nodes_info_data info = 1;
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    total_size +=
        1 + ::google::protobuf::internal::WireFormatLite::MessageSize(*_impl_.info_);
  }

  // uint32 node_id = 2;
  if (this->_internal_node_id() != 0) {
    total_size += ::_pbi::WireFormatLite::UInt32SizePlusOne(
        this->_internal_node_id());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}


void NodeInfoResponse::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<NodeInfoResponse*>(&to_msg);
  auto& from = static_cast<const NodeInfoResponse&>(from_msg);
  ::google::protobuf::Arena* arena = _this->GetArena();
  // @@protoc_insertion_point(class_specific_merge_from_start:NodeInfoResponse)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    ABSL_DCHECK(from._impl_.info_ != nullptr);
    if (_this->_impl_.info_ == nullptr) {
      _this->_impl_.info_ =
          ::google::protobuf::Message::CopyConstruct<::nodes_info_data>(arena, *from._impl_.info_);
    } else {
      _this->_impl_.info_->MergeFrom(*from._impl_.info_);
    }
  }
  if (from._internal_node_id() != 0) {
    _this->_impl_.node_id_ = from._impl_.node_id_;
  }
  _this->_impl_._has_bits_[0] |= cached_has_bits;
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void NodeInfoResponse::CopyFrom(const NodeInfoResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:NodeInfoResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool NodeInfoResponse::IsInitialized() const {
  return true;
}

void NodeInfoResponse::InternalSwap(NodeInfoResponse* PROTOBUF_RESTRICT other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(NodeInfoResponse, _impl_.node_id_)
      + sizeof(NodeInfoResponse::_impl_.node_id_)
      - PROTOBUF_FIELD_OFFSET(NodeInfoResponse, _impl_.info_)>(
          reinterpret_cast<char*>(&_impl_.info_),
          reinterpret_cast<char*>(&other->_impl_.info_));
}

::google::protobuf::Metadata NodeInfoResponse::GetMetadata() const {
  return ::_pbi::AssignDescriptors(&descriptor_table_proto_2fcommon_2fdeploy_5fservice_2eproto_getter,
                                   &descriptor_table_proto_2fcommon_2fdeploy_5fservice_2eproto_once,
                                   file_level_metadata_proto_2fcommon_2fdeploy_5fservice_2eproto[14]);
}
// ===================================================================

class GetIDRequest::_Internal {
 public:
};

GetIDRequest::GetIDRequest(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:GetIDRequest)
}
inline PROTOBUF_NDEBUG_INLINE GetIDRequest::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from)
      : client_name_(arena, from.client_name_),
        server_type_(arena, from.server_type_),
        _cached_size_{0} {}

GetIDRequest::GetIDRequest(
    ::google::protobuf::Arena* arena,
    const GetIDRequest& from)
    : ::google::protobuf::Message(arena) {
  GetIDRequest* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_);

  // @@protoc_insertion_point(copy_constructor:GetIDRequest)
}
inline PROTOBUF_NDEBUG_INLINE GetIDRequest::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : client_name_(arena),
        server_type_(arena),
        _cached_size_{0} {}

inline void GetIDRequest::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
}
GetIDRequest::~GetIDRequest() {
  // @@protoc_insertion_point(destructor:GetIDRequest)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void GetIDRequest::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  _impl_.client_name_.Destroy();
  _impl_.server_type_.Destroy();
  _impl_.~Impl_();
}

const ::google::protobuf::MessageLite::ClassData*
GetIDRequest::GetClassData() const {
  PROTOBUF_CONSTINIT static const ::google::protobuf::MessageLite::
      ClassDataFull _data_ = {
          {
              nullptr,  // OnDemandRegisterArenaDtor
              PROTOBUF_FIELD_OFFSET(GetIDRequest, _impl_._cached_size_),
              false,
          },
          &GetIDRequest::MergeImpl,
          &GetIDRequest::kDescriptorMethods,
      };
  return &_data_;
}
PROTOBUF_NOINLINE void GetIDRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:GetIDRequest)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.client_name_.ClearToEmpty();
  _impl_.server_type_.ClearToEmpty();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* GetIDRequest::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<1, 2, 0, 43, 2> GetIDRequest::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    2, 8,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967292,  // skipmap
    offsetof(decltype(_table_), field_entries),
    2,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    &_GetIDRequest_default_instance_._instance,
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::GetIDRequest>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // string server_type = 2;
    {::_pbi::TcParser::FastUS1,
     {18, 63, 0, PROTOBUF_FIELD_OFFSET(GetIDRequest, _impl_.server_type_)}},
    // string client_name = 1;
    {::_pbi::TcParser::FastUS1,
     {10, 63, 0, PROTOBUF_FIELD_OFFSET(GetIDRequest, _impl_.client_name_)}},
  }}, {{
    65535, 65535
  }}, {{
    // string client_name = 1;
    {PROTOBUF_FIELD_OFFSET(GetIDRequest, _impl_.client_name_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // string server_type = 2;
    {PROTOBUF_FIELD_OFFSET(GetIDRequest, _impl_.server_type_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
  }},
  // no aux_entries
  {{
    "\14\13\13\0\0\0\0\0"
    "GetIDRequest"
    "client_name"
    "server_type"
  }},
};

::uint8_t* GetIDRequest::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:GetIDRequest)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  // string client_name = 1;
  if (!this->_internal_client_name().empty()) {
    const std::string& _s = this->_internal_client_name();
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
        _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "GetIDRequest.client_name");
    target = stream->WriteStringMaybeAliased(1, _s, target);
  }

  // string server_type = 2;
  if (!this->_internal_server_type().empty()) {
    const std::string& _s = this->_internal_server_type();
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
        _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "GetIDRequest.server_type");
    target = stream->WriteStringMaybeAliased(2, _s, target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:GetIDRequest)
  return target;
}

::size_t GetIDRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:GetIDRequest)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string client_name = 1;
  if (!this->_internal_client_name().empty()) {
    total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                    this->_internal_client_name());
  }

  // string server_type = 2;
  if (!this->_internal_server_type().empty()) {
    total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                    this->_internal_server_type());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}


void GetIDRequest::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<GetIDRequest*>(&to_msg);
  auto& from = static_cast<const GetIDRequest&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:GetIDRequest)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_client_name().empty()) {
    _this->_internal_set_client_name(from._internal_client_name());
  }
  if (!from._internal_server_type().empty()) {
    _this->_internal_set_server_type(from._internal_server_type());
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void GetIDRequest::CopyFrom(const GetIDRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:GetIDRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool GetIDRequest::IsInitialized() const {
  return true;
}

void GetIDRequest::InternalSwap(GetIDRequest* PROTOBUF_RESTRICT other) {
  using std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.client_name_, &other->_impl_.client_name_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.server_type_, &other->_impl_.server_type_, arena);
}

::google::protobuf::Metadata GetIDRequest::GetMetadata() const {
  return ::_pbi::AssignDescriptors(&descriptor_table_proto_2fcommon_2fdeploy_5fservice_2eproto_getter,
                                   &descriptor_table_proto_2fcommon_2fdeploy_5fservice_2eproto_once,
                                   file_level_metadata_proto_2fcommon_2fdeploy_5fservice_2eproto[15]);
}
// ===================================================================

class GetIDResponse::_Internal {
 public:
};

GetIDResponse::GetIDResponse(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:GetIDResponse)
}
inline PROTOBUF_NDEBUG_INLINE GetIDResponse::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from)
      : id_(arena, from.id_),
        _cached_size_{0} {}

GetIDResponse::GetIDResponse(
    ::google::protobuf::Arena* arena,
    const GetIDResponse& from)
    : ::google::protobuf::Message(arena) {
  GetIDResponse* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_);

  // @@protoc_insertion_point(copy_constructor:GetIDResponse)
}
inline PROTOBUF_NDEBUG_INLINE GetIDResponse::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : id_(arena),
        _cached_size_{0} {}

inline void GetIDResponse::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
}
GetIDResponse::~GetIDResponse() {
  // @@protoc_insertion_point(destructor:GetIDResponse)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void GetIDResponse::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  _impl_.id_.Destroy();
  _impl_.~Impl_();
}

const ::google::protobuf::MessageLite::ClassData*
GetIDResponse::GetClassData() const {
  PROTOBUF_CONSTINIT static const ::google::protobuf::MessageLite::
      ClassDataFull _data_ = {
          {
              nullptr,  // OnDemandRegisterArenaDtor
              PROTOBUF_FIELD_OFFSET(GetIDResponse, _impl_._cached_size_),
              false,
          },
          &GetIDResponse::MergeImpl,
          &GetIDResponse::kDescriptorMethods,
      };
  return &_data_;
}
PROTOBUF_NOINLINE void GetIDResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:GetIDResponse)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.id_.ClearToEmpty();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* GetIDResponse::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<0, 1, 0, 24, 2> GetIDResponse::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    1, 0,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967294,  // skipmap
    offsetof(decltype(_table_), field_entries),
    1,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    &_GetIDResponse_default_instance_._instance,
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::GetIDResponse>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // string id = 1;
    {::_pbi::TcParser::FastUS1,
     {10, 63, 0, PROTOBUF_FIELD_OFFSET(GetIDResponse, _impl_.id_)}},
  }}, {{
    65535, 65535
  }}, {{
    // string id = 1;
    {PROTOBUF_FIELD_OFFSET(GetIDResponse, _impl_.id_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
  }},
  // no aux_entries
  {{
    "\15\2\0\0\0\0\0\0"
    "GetIDResponse"
    "id"
  }},
};

::uint8_t* GetIDResponse::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:GetIDResponse)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  // string id = 1;
  if (!this->_internal_id().empty()) {
    const std::string& _s = this->_internal_id();
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
        _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "GetIDResponse.id");
    target = stream->WriteStringMaybeAliased(1, _s, target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:GetIDResponse)
  return target;
}

::size_t GetIDResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:GetIDResponse)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string id = 1;
  if (!this->_internal_id().empty()) {
    total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                    this->_internal_id());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}


void GetIDResponse::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<GetIDResponse*>(&to_msg);
  auto& from = static_cast<const GetIDResponse&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:GetIDResponse)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_id().empty()) {
    _this->_internal_set_id(from._internal_id());
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void GetIDResponse::CopyFrom(const GetIDResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:GetIDResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool GetIDResponse::IsInitialized() const {
  return true;
}

void GetIDResponse::InternalSwap(GetIDResponse* PROTOBUF_RESTRICT other) {
  using std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.id_, &other->_impl_.id_, arena);
}

::google::protobuf::Metadata GetIDResponse::GetMetadata() const {
  return ::_pbi::AssignDescriptors(&descriptor_table_proto_2fcommon_2fdeploy_5fservice_2eproto_getter,
                                   &descriptor_table_proto_2fcommon_2fdeploy_5fservice_2eproto_once,
                                   file_level_metadata_proto_2fcommon_2fdeploy_5fservice_2eproto[16]);
}
// ===================================================================

class ReleaseIDRequest::_Internal {
 public:
};

ReleaseIDRequest::ReleaseIDRequest(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:ReleaseIDRequest)
}
inline PROTOBUF_NDEBUG_INLINE ReleaseIDRequest::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from)
      : id_(arena, from.id_),
        server_type_(arena, from.server_type_),
        _cached_size_{0} {}

ReleaseIDRequest::ReleaseIDRequest(
    ::google::protobuf::Arena* arena,
    const ReleaseIDRequest& from)
    : ::google::protobuf::Message(arena) {
  ReleaseIDRequest* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_);

  // @@protoc_insertion_point(copy_constructor:ReleaseIDRequest)
}
inline PROTOBUF_NDEBUG_INLINE ReleaseIDRequest::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : id_(arena),
        server_type_(arena),
        _cached_size_{0} {}

inline void ReleaseIDRequest::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
}
ReleaseIDRequest::~ReleaseIDRequest() {
  // @@protoc_insertion_point(destructor:ReleaseIDRequest)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void ReleaseIDRequest::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  _impl_.id_.Destroy();
  _impl_.server_type_.Destroy();
  _impl_.~Impl_();
}

const ::google::protobuf::MessageLite::ClassData*
ReleaseIDRequest::GetClassData() const {
  PROTOBUF_CONSTINIT static const ::google::protobuf::MessageLite::
      ClassDataFull _data_ = {
          {
              nullptr,  // OnDemandRegisterArenaDtor
              PROTOBUF_FIELD_OFFSET(ReleaseIDRequest, _impl_._cached_size_),
              false,
          },
          &ReleaseIDRequest::MergeImpl,
          &ReleaseIDRequest::kDescriptorMethods,
      };
  return &_data_;
}
PROTOBUF_NOINLINE void ReleaseIDRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:ReleaseIDRequest)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.id_.ClearToEmpty();
  _impl_.server_type_.ClearToEmpty();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* ReleaseIDRequest::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<1, 2, 0, 38, 2> ReleaseIDRequest::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    2, 8,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967292,  // skipmap
    offsetof(decltype(_table_), field_entries),
    2,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    &_ReleaseIDRequest_default_instance_._instance,
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::ReleaseIDRequest>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // string server_type = 2;
    {::_pbi::TcParser::FastUS1,
     {18, 63, 0, PROTOBUF_FIELD_OFFSET(ReleaseIDRequest, _impl_.server_type_)}},
    // string id = 1;
    {::_pbi::TcParser::FastUS1,
     {10, 63, 0, PROTOBUF_FIELD_OFFSET(ReleaseIDRequest, _impl_.id_)}},
  }}, {{
    65535, 65535
  }}, {{
    // string id = 1;
    {PROTOBUF_FIELD_OFFSET(ReleaseIDRequest, _impl_.id_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // string server_type = 2;
    {PROTOBUF_FIELD_OFFSET(ReleaseIDRequest, _impl_.server_type_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
  }},
  // no aux_entries
  {{
    "\20\2\13\0\0\0\0\0"
    "ReleaseIDRequest"
    "id"
    "server_type"
  }},
};

::uint8_t* ReleaseIDRequest::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:ReleaseIDRequest)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  // string id = 1;
  if (!this->_internal_id().empty()) {
    const std::string& _s = this->_internal_id();
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
        _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "ReleaseIDRequest.id");
    target = stream->WriteStringMaybeAliased(1, _s, target);
  }

  // string server_type = 2;
  if (!this->_internal_server_type().empty()) {
    const std::string& _s = this->_internal_server_type();
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
        _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "ReleaseIDRequest.server_type");
    target = stream->WriteStringMaybeAliased(2, _s, target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:ReleaseIDRequest)
  return target;
}

::size_t ReleaseIDRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:ReleaseIDRequest)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string id = 1;
  if (!this->_internal_id().empty()) {
    total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                    this->_internal_id());
  }

  // string server_type = 2;
  if (!this->_internal_server_type().empty()) {
    total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                    this->_internal_server_type());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}


void ReleaseIDRequest::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<ReleaseIDRequest*>(&to_msg);
  auto& from = static_cast<const ReleaseIDRequest&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:ReleaseIDRequest)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_id().empty()) {
    _this->_internal_set_id(from._internal_id());
  }
  if (!from._internal_server_type().empty()) {
    _this->_internal_set_server_type(from._internal_server_type());
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void ReleaseIDRequest::CopyFrom(const ReleaseIDRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:ReleaseIDRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool ReleaseIDRequest::IsInitialized() const {
  return true;
}

void ReleaseIDRequest::InternalSwap(ReleaseIDRequest* PROTOBUF_RESTRICT other) {
  using std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.id_, &other->_impl_.id_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.server_type_, &other->_impl_.server_type_, arena);
}

::google::protobuf::Metadata ReleaseIDRequest::GetMetadata() const {
  return ::_pbi::AssignDescriptors(&descriptor_table_proto_2fcommon_2fdeploy_5fservice_2eproto_getter,
                                   &descriptor_table_proto_2fcommon_2fdeploy_5fservice_2eproto_once,
                                   file_level_metadata_proto_2fcommon_2fdeploy_5fservice_2eproto[17]);
}
// ===================================================================

class ReleaseIDResponse::_Internal {
 public:
};

ReleaseIDResponse::ReleaseIDResponse(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:ReleaseIDResponse)
}
ReleaseIDResponse::ReleaseIDResponse(
    ::google::protobuf::Arena* arena, const ReleaseIDResponse& from)
    : ReleaseIDResponse(arena) {
  MergeFrom(from);
}
inline PROTOBUF_NDEBUG_INLINE ReleaseIDResponse::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0} {}

inline void ReleaseIDResponse::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  _impl_.success_ = {};
}
ReleaseIDResponse::~ReleaseIDResponse() {
  // @@protoc_insertion_point(destructor:ReleaseIDResponse)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void ReleaseIDResponse::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  _impl_.~Impl_();
}

const ::google::protobuf::MessageLite::ClassData*
ReleaseIDResponse::GetClassData() const {
  PROTOBUF_CONSTINIT static const ::google::protobuf::MessageLite::
      ClassDataFull _data_ = {
          {
              nullptr,  // OnDemandRegisterArenaDtor
              PROTOBUF_FIELD_OFFSET(ReleaseIDResponse, _impl_._cached_size_),
              false,
          },
          &ReleaseIDResponse::MergeImpl,
          &ReleaseIDResponse::kDescriptorMethods,
      };
  return &_data_;
}
PROTOBUF_NOINLINE void ReleaseIDResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:ReleaseIDResponse)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.success_ = false;
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* ReleaseIDResponse::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<0, 1, 0, 0, 2> ReleaseIDResponse::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    1, 0,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967294,  // skipmap
    offsetof(decltype(_table_), field_entries),
    1,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    &_ReleaseIDResponse_default_instance_._instance,
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::ReleaseIDResponse>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // bool success = 1;
    {::_pbi::TcParser::SingularVarintNoZag1<bool, offsetof(ReleaseIDResponse, _impl_.success_), 63>(),
     {8, 63, 0, PROTOBUF_FIELD_OFFSET(ReleaseIDResponse, _impl_.success_)}},
  }}, {{
    65535, 65535
  }}, {{
    // bool success = 1;
    {PROTOBUF_FIELD_OFFSET(ReleaseIDResponse, _impl_.success_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kBool)},
  }},
  // no aux_entries
  {{
  }},
};

::uint8_t* ReleaseIDResponse::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:ReleaseIDResponse)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  // bool success = 1;
  if (this->_internal_success() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteBoolToArray(
        1, this->_internal_success(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:ReleaseIDResponse)
  return target;
}

::size_t ReleaseIDResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:ReleaseIDResponse)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // bool success = 1;
  if (this->_internal_success() != 0) {
    total_size += 2;
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}


void ReleaseIDResponse::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<ReleaseIDResponse*>(&to_msg);
  auto& from = static_cast<const ReleaseIDResponse&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:ReleaseIDResponse)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_success() != 0) {
    _this->_impl_.success_ = from._impl_.success_;
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void ReleaseIDResponse::CopyFrom(const ReleaseIDResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:ReleaseIDResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool ReleaseIDResponse::IsInitialized() const {
  return true;
}

void ReleaseIDResponse::InternalSwap(ReleaseIDResponse* PROTOBUF_RESTRICT other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
        swap(_impl_.success_, other->_impl_.success_);
}

::google::protobuf::Metadata ReleaseIDResponse::GetMetadata() const {
  return ::_pbi::AssignDescriptors(&descriptor_table_proto_2fcommon_2fdeploy_5fservice_2eproto_getter,
                                   &descriptor_table_proto_2fcommon_2fdeploy_5fservice_2eproto_once,
                                   file_level_metadata_proto_2fcommon_2fdeploy_5fservice_2eproto[18]);
}
// @@protoc_insertion_point(namespace_scope)
namespace google {
namespace protobuf {
}  // namespace protobuf
}  // namespace google
// @@protoc_insertion_point(global_scope)
PROTOBUF_ATTRIBUTE_INIT_PRIORITY2
static ::std::false_type _static_init_ PROTOBUF_UNUSED =
    (::_pbi::AddDescriptors(&descriptor_table_proto_2fcommon_2fdeploy_5fservice_2eproto),
     ::std::false_type{});
#include "google/protobuf/port_undef.inc"
