// Generated by the protocol buffer compiler.  DO NOT EDIT!
// NO CHECKED-IN PROTOBUF GENCODE
// source: proto/common/config.proto
// Protobuf C++ Version: 5.29.0

#include "proto/common/config.pb.h"

#include <algorithm>
#include <type_traits>
#include "google/protobuf/io/coded_stream.h"
#include "google/protobuf/generated_message_tctable_impl.h"
#include "google/protobuf/extension_set.h"
#include "google/protobuf/generated_message_util.h"
#include "google/protobuf/wire_format_lite.h"
#include "google/protobuf/descriptor.h"
#include "google/protobuf/generated_message_reflection.h"
#include "google/protobuf/reflection_ops.h"
#include "google/protobuf/wire_format.h"
// @@protoc_insertion_point(includes)

// Must be included last.
#include "google/protobuf/port_def.inc"
PROTOBUF_PRAGMA_INIT_SEG
namespace _pb = ::google::protobuf;
namespace _pbi = ::google::protobuf::internal;
namespace _fl = ::google::protobuf::internal::field_layout;

inline constexpr ServiceConfig::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : name_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        url_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        _cached_size_{0} {}

template <typename>
PROTOBUF_CONSTEXPR ServiceConfig::ServiceConfig(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct ServiceConfigDefaultTypeInternal {
  PROTOBUF_CONSTEXPR ServiceConfigDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~ServiceConfigDefaultTypeInternal() {}
  union {
    ServiceConfig _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 ServiceConfigDefaultTypeInternal _ServiceConfig_default_instance_;

inline constexpr GameConfig::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : scene_node_type_{0u},
        zone_id_{0u},
        _cached_size_{0} {}

template <typename>
PROTOBUF_CONSTEXPR GameConfig::GameConfig(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct GameConfigDefaultTypeInternal {
  PROTOBUF_CONSTEXPR GameConfigDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~GameConfigDefaultTypeInternal() {}
  union {
    GameConfig _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 GameConfigDefaultTypeInternal _GameConfig_default_instance_;

inline constexpr BaseDeployConfig::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : etcd_hosts_{},
        services_{},
        service_discovery_prefixes_{},
        deployservice_prefix_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        log_level_{0u},
        lease_renew_interval_{0u},
        node_ttl_seconds_{0u},
        _cached_size_{0} {}

template <typename>
PROTOBUF_CONSTEXPR BaseDeployConfig::BaseDeployConfig(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct BaseDeployConfigDefaultTypeInternal {
  PROTOBUF_CONSTEXPR BaseDeployConfigDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~BaseDeployConfigDefaultTypeInternal() {}
  union {
    BaseDeployConfig _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 BaseDeployConfigDefaultTypeInternal _BaseDeployConfig_default_instance_;
static constexpr const ::_pb::EnumDescriptor**
    file_level_enum_descriptors_proto_2fcommon_2fconfig_2eproto = nullptr;
static constexpr const ::_pb::ServiceDescriptor**
    file_level_service_descriptors_proto_2fcommon_2fconfig_2eproto = nullptr;
const ::uint32_t
    TableStruct_proto_2fcommon_2fconfig_2eproto::offsets[] ABSL_ATTRIBUTE_SECTION_VARIABLE(
        protodesc_cold) = {
        ~0u,  // no _has_bits_
        PROTOBUF_FIELD_OFFSET(::ServiceConfig, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::ServiceConfig, _impl_.name_),
        PROTOBUF_FIELD_OFFSET(::ServiceConfig, _impl_.url_),
        ~0u,  // no _has_bits_
        PROTOBUF_FIELD_OFFSET(::BaseDeployConfig, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::BaseDeployConfig, _impl_.etcd_hosts_),
        PROTOBUF_FIELD_OFFSET(::BaseDeployConfig, _impl_.log_level_),
        PROTOBUF_FIELD_OFFSET(::BaseDeployConfig, _impl_.services_),
        PROTOBUF_FIELD_OFFSET(::BaseDeployConfig, _impl_.service_discovery_prefixes_),
        PROTOBUF_FIELD_OFFSET(::BaseDeployConfig, _impl_.lease_renew_interval_),
        PROTOBUF_FIELD_OFFSET(::BaseDeployConfig, _impl_.deployservice_prefix_),
        PROTOBUF_FIELD_OFFSET(::BaseDeployConfig, _impl_.node_ttl_seconds_),
        ~0u,  // no _has_bits_
        PROTOBUF_FIELD_OFFSET(::GameConfig, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::GameConfig, _impl_.scene_node_type_),
        PROTOBUF_FIELD_OFFSET(::GameConfig, _impl_.zone_id_),
};

static const ::_pbi::MigrationSchema
    schemas[] ABSL_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
        {0, -1, -1, sizeof(::ServiceConfig)},
        {10, -1, -1, sizeof(::BaseDeployConfig)},
        {25, -1, -1, sizeof(::GameConfig)},
};
static const ::_pb::Message* const file_default_instances[] = {
    &::_ServiceConfig_default_instance_._instance,
    &::_BaseDeployConfig_default_instance_._instance,
    &::_GameConfig_default_instance_._instance,
};
const char descriptor_table_protodef_proto_2fcommon_2fconfig_2eproto[] ABSL_ATTRIBUTE_SECTION_VARIABLE(
    protodesc_cold) = {
    "\n\031proto/common/config.proto\"*\n\rServiceCo"
    "nfig\022\014\n\004name\030\001 \001(\t\022\013\n\003url\030\002 \001(\t\"\325\001\n\020Base"
    "DeployConfig\022\022\n\netcd_hosts\030\001 \003(\t\022\021\n\tlog_"
    "level\030\002 \001(\r\022 \n\010services\030\003 \003(\0132\016.ServiceC"
    "onfig\022\"\n\032service_discovery_prefixes\030\004 \003("
    "\t\022\034\n\024lease_renew_interval\030\005 \001(\r\022\034\n\024deplo"
    "yservice_prefix\030\006 \001(\t\022\030\n\020node_ttl_second"
    "s\030\007 \001(\r\"6\n\nGameConfig\022\027\n\017scene_node_type"
    "\030\001 \001(\r\022\017\n\007zone_id\030\002 \001(\rB\tZ\007pb/gameb\006prot"
    "o3"
};
static ::absl::once_flag descriptor_table_proto_2fcommon_2fconfig_2eproto_once;
PROTOBUF_CONSTINIT const ::_pbi::DescriptorTable descriptor_table_proto_2fcommon_2fconfig_2eproto = {
    false,
    false,
    362,
    descriptor_table_protodef_proto_2fcommon_2fconfig_2eproto,
    "proto/common/config.proto",
    &descriptor_table_proto_2fcommon_2fconfig_2eproto_once,
    nullptr,
    0,
    3,
    schemas,
    file_default_instances,
    TableStruct_proto_2fcommon_2fconfig_2eproto::offsets,
    file_level_enum_descriptors_proto_2fcommon_2fconfig_2eproto,
    file_level_service_descriptors_proto_2fcommon_2fconfig_2eproto,
};
// ===================================================================

class ServiceConfig::_Internal {
 public:
};

ServiceConfig::ServiceConfig(::google::protobuf::Arena* arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:ServiceConfig)
}
inline PROTOBUF_NDEBUG_INLINE ServiceConfig::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from, const ::ServiceConfig& from_msg)
      : name_(arena, from.name_),
        url_(arena, from.url_),
        _cached_size_{0} {}

ServiceConfig::ServiceConfig(
    ::google::protobuf::Arena* arena,
    const ServiceConfig& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  ServiceConfig* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);

  // @@protoc_insertion_point(copy_constructor:ServiceConfig)
}
inline PROTOBUF_NDEBUG_INLINE ServiceConfig::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : name_(arena),
        url_(arena),
        _cached_size_{0} {}

inline void ServiceConfig::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
}
ServiceConfig::~ServiceConfig() {
  // @@protoc_insertion_point(destructor:ServiceConfig)
  SharedDtor(*this);
}
inline void ServiceConfig::SharedDtor(MessageLite& self) {
  ServiceConfig& this_ = static_cast<ServiceConfig&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  this_._impl_.name_.Destroy();
  this_._impl_.url_.Destroy();
  this_._impl_.~Impl_();
}

inline void* ServiceConfig::PlacementNew_(const void*, void* mem,
                                        ::google::protobuf::Arena* arena) {
  return ::new (mem) ServiceConfig(arena);
}
constexpr auto ServiceConfig::InternalNewImpl_() {
  return ::google::protobuf::internal::MessageCreator::CopyInit(sizeof(ServiceConfig),
                                            alignof(ServiceConfig));
}
PROTOBUF_CONSTINIT
PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::google::protobuf::internal::ClassDataFull ServiceConfig::_class_data_ = {
    ::google::protobuf::internal::ClassData{
        &_ServiceConfig_default_instance_._instance,
        &_table_.header,
        nullptr,  // OnDemandRegisterArenaDtor
        nullptr,  // IsInitialized
        &ServiceConfig::MergeImpl,
        ::google::protobuf::Message::GetNewImpl<ServiceConfig>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
        &ServiceConfig::SharedDtor,
        ::google::protobuf::Message::GetClearImpl<ServiceConfig>(), &ServiceConfig::ByteSizeLong,
            &ServiceConfig::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
        PROTOBUF_FIELD_OFFSET(ServiceConfig, _impl_._cached_size_),
        false,
    },
    &ServiceConfig::kDescriptorMethods,
    &descriptor_table_proto_2fcommon_2fconfig_2eproto,
    nullptr,  // tracker
};
const ::google::protobuf::internal::ClassData* ServiceConfig::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_class_data_.tc_table);
  return _class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<1, 2, 0, 29, 2> ServiceConfig::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    2, 8,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967292,  // skipmap
    offsetof(decltype(_table_), field_entries),
    2,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    _class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::ServiceConfig>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // string url = 2;
    {::_pbi::TcParser::FastUS1,
     {18, 63, 0, PROTOBUF_FIELD_OFFSET(ServiceConfig, _impl_.url_)}},
    // string name = 1;
    {::_pbi::TcParser::FastUS1,
     {10, 63, 0, PROTOBUF_FIELD_OFFSET(ServiceConfig, _impl_.name_)}},
  }}, {{
    65535, 65535
  }}, {{
    // string name = 1;
    {PROTOBUF_FIELD_OFFSET(ServiceConfig, _impl_.name_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // string url = 2;
    {PROTOBUF_FIELD_OFFSET(ServiceConfig, _impl_.url_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
  }},
  // no aux_entries
  {{
    "\15\4\3\0\0\0\0\0"
    "ServiceConfig"
    "name"
    "url"
  }},
};

PROTOBUF_NOINLINE void ServiceConfig::Clear() {
// @@protoc_insertion_point(message_clear_start:ServiceConfig)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.name_.ClearToEmpty();
  _impl_.url_.ClearToEmpty();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::uint8_t* ServiceConfig::_InternalSerialize(
            const MessageLite& base, ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) {
          const ServiceConfig& this_ = static_cast<const ServiceConfig&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::uint8_t* ServiceConfig::_InternalSerialize(
            ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) const {
          const ServiceConfig& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(serialize_to_array_start:ServiceConfig)
          ::uint32_t cached_has_bits = 0;
          (void)cached_has_bits;

          // string name = 1;
          if (!this_._internal_name().empty()) {
            const std::string& _s = this_._internal_name();
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "ServiceConfig.name");
            target = stream->WriteStringMaybeAliased(1, _s, target);
          }

          // string url = 2;
          if (!this_._internal_url().empty()) {
            const std::string& _s = this_._internal_url();
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "ServiceConfig.url");
            target = stream->WriteStringMaybeAliased(2, _s, target);
          }

          if (PROTOBUF_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
            target =
                ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
                    this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
          }
          // @@protoc_insertion_point(serialize_to_array_end:ServiceConfig)
          return target;
        }

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::size_t ServiceConfig::ByteSizeLong(const MessageLite& base) {
          const ServiceConfig& this_ = static_cast<const ServiceConfig&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::size_t ServiceConfig::ByteSizeLong() const {
          const ServiceConfig& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(message_byte_size_start:ServiceConfig)
          ::size_t total_size = 0;

          ::uint32_t cached_has_bits = 0;
          // Prevent compiler warnings about cached_has_bits being unused
          (void)cached_has_bits;

          ::_pbi::Prefetch5LinesFrom7Lines(&this_);
           {
            // string name = 1;
            if (!this_._internal_name().empty()) {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                              this_._internal_name());
            }
            // string url = 2;
            if (!this_._internal_url().empty()) {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                              this_._internal_url());
            }
          }
          return this_.MaybeComputeUnknownFieldsSize(total_size,
                                                     &this_._impl_._cached_size_);
        }

void ServiceConfig::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<ServiceConfig*>(&to_msg);
  auto& from = static_cast<const ServiceConfig&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:ServiceConfig)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_name().empty()) {
    _this->_internal_set_name(from._internal_name());
  }
  if (!from._internal_url().empty()) {
    _this->_internal_set_url(from._internal_url());
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void ServiceConfig::CopyFrom(const ServiceConfig& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:ServiceConfig)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void ServiceConfig::InternalSwap(ServiceConfig* PROTOBUF_RESTRICT other) {
  using std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.name_, &other->_impl_.name_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.url_, &other->_impl_.url_, arena);
}

::google::protobuf::Metadata ServiceConfig::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class BaseDeployConfig::_Internal {
 public:
};

BaseDeployConfig::BaseDeployConfig(::google::protobuf::Arena* arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:BaseDeployConfig)
}
inline PROTOBUF_NDEBUG_INLINE BaseDeployConfig::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from, const ::BaseDeployConfig& from_msg)
      : etcd_hosts_{visibility, arena, from.etcd_hosts_},
        services_{visibility, arena, from.services_},
        service_discovery_prefixes_{visibility, arena, from.service_discovery_prefixes_},
        deployservice_prefix_(arena, from.deployservice_prefix_),
        _cached_size_{0} {}

BaseDeployConfig::BaseDeployConfig(
    ::google::protobuf::Arena* arena,
    const BaseDeployConfig& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  BaseDeployConfig* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);
  ::memcpy(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, log_level_),
           reinterpret_cast<const char *>(&from._impl_) +
               offsetof(Impl_, log_level_),
           offsetof(Impl_, node_ttl_seconds_) -
               offsetof(Impl_, log_level_) +
               sizeof(Impl_::node_ttl_seconds_));

  // @@protoc_insertion_point(copy_constructor:BaseDeployConfig)
}
inline PROTOBUF_NDEBUG_INLINE BaseDeployConfig::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : etcd_hosts_{visibility, arena},
        services_{visibility, arena},
        service_discovery_prefixes_{visibility, arena},
        deployservice_prefix_(arena),
        _cached_size_{0} {}

inline void BaseDeployConfig::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, log_level_),
           0,
           offsetof(Impl_, node_ttl_seconds_) -
               offsetof(Impl_, log_level_) +
               sizeof(Impl_::node_ttl_seconds_));
}
BaseDeployConfig::~BaseDeployConfig() {
  // @@protoc_insertion_point(destructor:BaseDeployConfig)
  SharedDtor(*this);
}
inline void BaseDeployConfig::SharedDtor(MessageLite& self) {
  BaseDeployConfig& this_ = static_cast<BaseDeployConfig&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  this_._impl_.deployservice_prefix_.Destroy();
  this_._impl_.~Impl_();
}

inline void* BaseDeployConfig::PlacementNew_(const void*, void* mem,
                                        ::google::protobuf::Arena* arena) {
  return ::new (mem) BaseDeployConfig(arena);
}
constexpr auto BaseDeployConfig::InternalNewImpl_() {
  constexpr auto arena_bits = ::google::protobuf::internal::EncodePlacementArenaOffsets({
      PROTOBUF_FIELD_OFFSET(BaseDeployConfig, _impl_.etcd_hosts_) +
          decltype(BaseDeployConfig::_impl_.etcd_hosts_)::
              InternalGetArenaOffset(
                  ::google::protobuf::Message::internal_visibility()),
      PROTOBUF_FIELD_OFFSET(BaseDeployConfig, _impl_.services_) +
          decltype(BaseDeployConfig::_impl_.services_)::
              InternalGetArenaOffset(
                  ::google::protobuf::Message::internal_visibility()),
      PROTOBUF_FIELD_OFFSET(BaseDeployConfig, _impl_.service_discovery_prefixes_) +
          decltype(BaseDeployConfig::_impl_.service_discovery_prefixes_)::
              InternalGetArenaOffset(
                  ::google::protobuf::Message::internal_visibility()),
  });
  if (arena_bits.has_value()) {
    return ::google::protobuf::internal::MessageCreator::CopyInit(
        sizeof(BaseDeployConfig), alignof(BaseDeployConfig), *arena_bits);
  } else {
    return ::google::protobuf::internal::MessageCreator(&BaseDeployConfig::PlacementNew_,
                                 sizeof(BaseDeployConfig),
                                 alignof(BaseDeployConfig));
  }
}
PROTOBUF_CONSTINIT
PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::google::protobuf::internal::ClassDataFull BaseDeployConfig::_class_data_ = {
    ::google::protobuf::internal::ClassData{
        &_BaseDeployConfig_default_instance_._instance,
        &_table_.header,
        nullptr,  // OnDemandRegisterArenaDtor
        nullptr,  // IsInitialized
        &BaseDeployConfig::MergeImpl,
        ::google::protobuf::Message::GetNewImpl<BaseDeployConfig>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
        &BaseDeployConfig::SharedDtor,
        ::google::protobuf::Message::GetClearImpl<BaseDeployConfig>(), &BaseDeployConfig::ByteSizeLong,
            &BaseDeployConfig::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
        PROTOBUF_FIELD_OFFSET(BaseDeployConfig, _impl_._cached_size_),
        false,
    },
    &BaseDeployConfig::kDescriptorMethods,
    &descriptor_table_proto_2fcommon_2fconfig_2eproto,
    nullptr,  // tracker
};
const ::google::protobuf::internal::ClassData* BaseDeployConfig::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_class_data_.tc_table);
  return _class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<3, 7, 1, 81, 2> BaseDeployConfig::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    7, 56,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967168,  // skipmap
    offsetof(decltype(_table_), field_entries),
    7,  // num_field_entries
    1,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    _class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::BaseDeployConfig>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
    // repeated string etcd_hosts = 1;
    {::_pbi::TcParser::FastUR1,
     {10, 63, 0, PROTOBUF_FIELD_OFFSET(BaseDeployConfig, _impl_.etcd_hosts_)}},
    // uint32 log_level = 2;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(BaseDeployConfig, _impl_.log_level_), 63>(),
     {16, 63, 0, PROTOBUF_FIELD_OFFSET(BaseDeployConfig, _impl_.log_level_)}},
    // repeated .ServiceConfig services = 3;
    {::_pbi::TcParser::FastMtR1,
     {26, 63, 0, PROTOBUF_FIELD_OFFSET(BaseDeployConfig, _impl_.services_)}},
    // repeated string service_discovery_prefixes = 4;
    {::_pbi::TcParser::FastUR1,
     {34, 63, 0, PROTOBUF_FIELD_OFFSET(BaseDeployConfig, _impl_.service_discovery_prefixes_)}},
    // uint32 lease_renew_interval = 5;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(BaseDeployConfig, _impl_.lease_renew_interval_), 63>(),
     {40, 63, 0, PROTOBUF_FIELD_OFFSET(BaseDeployConfig, _impl_.lease_renew_interval_)}},
    // string deployservice_prefix = 6;
    {::_pbi::TcParser::FastUS1,
     {50, 63, 0, PROTOBUF_FIELD_OFFSET(BaseDeployConfig, _impl_.deployservice_prefix_)}},
    // uint32 node_ttl_seconds = 7;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(BaseDeployConfig, _impl_.node_ttl_seconds_), 63>(),
     {56, 63, 0, PROTOBUF_FIELD_OFFSET(BaseDeployConfig, _impl_.node_ttl_seconds_)}},
  }}, {{
    65535, 65535
  }}, {{
    // repeated string etcd_hosts = 1;
    {PROTOBUF_FIELD_OFFSET(BaseDeployConfig, _impl_.etcd_hosts_), 0, 0,
    (0 | ::_fl::kFcRepeated | ::_fl::kUtf8String | ::_fl::kRepSString)},
    // uint32 log_level = 2;
    {PROTOBUF_FIELD_OFFSET(BaseDeployConfig, _impl_.log_level_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUInt32)},
    // repeated .ServiceConfig services = 3;
    {PROTOBUF_FIELD_OFFSET(BaseDeployConfig, _impl_.services_), 0, 0,
    (0 | ::_fl::kFcRepeated | ::_fl::kMessage | ::_fl::kTvTable)},
    // repeated string service_discovery_prefixes = 4;
    {PROTOBUF_FIELD_OFFSET(BaseDeployConfig, _impl_.service_discovery_prefixes_), 0, 0,
    (0 | ::_fl::kFcRepeated | ::_fl::kUtf8String | ::_fl::kRepSString)},
    // uint32 lease_renew_interval = 5;
    {PROTOBUF_FIELD_OFFSET(BaseDeployConfig, _impl_.lease_renew_interval_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUInt32)},
    // string deployservice_prefix = 6;
    {PROTOBUF_FIELD_OFFSET(BaseDeployConfig, _impl_.deployservice_prefix_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // uint32 node_ttl_seconds = 7;
    {PROTOBUF_FIELD_OFFSET(BaseDeployConfig, _impl_.node_ttl_seconds_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUInt32)},
  }}, {{
    {::_pbi::TcParser::GetTable<::ServiceConfig>()},
  }}, {{
    "\20\12\0\0\32\0\24\0"
    "BaseDeployConfig"
    "etcd_hosts"
    "service_discovery_prefixes"
    "deployservice_prefix"
  }},
};

PROTOBUF_NOINLINE void BaseDeployConfig::Clear() {
// @@protoc_insertion_point(message_clear_start:BaseDeployConfig)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.etcd_hosts_.Clear();
  _impl_.services_.Clear();
  _impl_.service_discovery_prefixes_.Clear();
  _impl_.deployservice_prefix_.ClearToEmpty();
  ::memset(&_impl_.log_level_, 0, static_cast<::size_t>(
      reinterpret_cast<char*>(&_impl_.node_ttl_seconds_) -
      reinterpret_cast<char*>(&_impl_.log_level_)) + sizeof(_impl_.node_ttl_seconds_));
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::uint8_t* BaseDeployConfig::_InternalSerialize(
            const MessageLite& base, ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) {
          const BaseDeployConfig& this_ = static_cast<const BaseDeployConfig&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::uint8_t* BaseDeployConfig::_InternalSerialize(
            ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) const {
          const BaseDeployConfig& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(serialize_to_array_start:BaseDeployConfig)
          ::uint32_t cached_has_bits = 0;
          (void)cached_has_bits;

          // repeated string etcd_hosts = 1;
          for (int i = 0, n = this_._internal_etcd_hosts_size(); i < n; ++i) {
            const auto& s = this_._internal_etcd_hosts().Get(i);
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                s.data(), static_cast<int>(s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "BaseDeployConfig.etcd_hosts");
            target = stream->WriteString(1, s, target);
          }

          // uint32 log_level = 2;
          if (this_._internal_log_level() != 0) {
            target = stream->EnsureSpace(target);
            target = ::_pbi::WireFormatLite::WriteUInt32ToArray(
                2, this_._internal_log_level(), target);
          }

          // repeated .ServiceConfig services = 3;
          for (unsigned i = 0, n = static_cast<unsigned>(
                                   this_._internal_services_size());
               i < n; i++) {
            const auto& repfield = this_._internal_services().Get(i);
            target =
                ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
                    3, repfield, repfield.GetCachedSize(),
                    target, stream);
          }

          // repeated string service_discovery_prefixes = 4;
          for (int i = 0, n = this_._internal_service_discovery_prefixes_size(); i < n; ++i) {
            const auto& s = this_._internal_service_discovery_prefixes().Get(i);
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                s.data(), static_cast<int>(s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "BaseDeployConfig.service_discovery_prefixes");
            target = stream->WriteString(4, s, target);
          }

          // uint32 lease_renew_interval = 5;
          if (this_._internal_lease_renew_interval() != 0) {
            target = stream->EnsureSpace(target);
            target = ::_pbi::WireFormatLite::WriteUInt32ToArray(
                5, this_._internal_lease_renew_interval(), target);
          }

          // string deployservice_prefix = 6;
          if (!this_._internal_deployservice_prefix().empty()) {
            const std::string& _s = this_._internal_deployservice_prefix();
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "BaseDeployConfig.deployservice_prefix");
            target = stream->WriteStringMaybeAliased(6, _s, target);
          }

          // uint32 node_ttl_seconds = 7;
          if (this_._internal_node_ttl_seconds() != 0) {
            target = stream->EnsureSpace(target);
            target = ::_pbi::WireFormatLite::WriteUInt32ToArray(
                7, this_._internal_node_ttl_seconds(), target);
          }

          if (PROTOBUF_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
            target =
                ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
                    this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
          }
          // @@protoc_insertion_point(serialize_to_array_end:BaseDeployConfig)
          return target;
        }

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::size_t BaseDeployConfig::ByteSizeLong(const MessageLite& base) {
          const BaseDeployConfig& this_ = static_cast<const BaseDeployConfig&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::size_t BaseDeployConfig::ByteSizeLong() const {
          const BaseDeployConfig& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(message_byte_size_start:BaseDeployConfig)
          ::size_t total_size = 0;

          ::uint32_t cached_has_bits = 0;
          // Prevent compiler warnings about cached_has_bits being unused
          (void)cached_has_bits;

          ::_pbi::Prefetch5LinesFrom7Lines(&this_);
           {
            // repeated string etcd_hosts = 1;
            {
              total_size +=
                  1 * ::google::protobuf::internal::FromIntSize(this_._internal_etcd_hosts().size());
              for (int i = 0, n = this_._internal_etcd_hosts().size(); i < n; ++i) {
                total_size += ::google::protobuf::internal::WireFormatLite::StringSize(
                    this_._internal_etcd_hosts().Get(i));
              }
            }
            // repeated .ServiceConfig services = 3;
            {
              total_size += 1UL * this_._internal_services_size();
              for (const auto& msg : this_._internal_services()) {
                total_size += ::google::protobuf::internal::WireFormatLite::MessageSize(msg);
              }
            }
            // repeated string service_discovery_prefixes = 4;
            {
              total_size +=
                  1 * ::google::protobuf::internal::FromIntSize(this_._internal_service_discovery_prefixes().size());
              for (int i = 0, n = this_._internal_service_discovery_prefixes().size(); i < n; ++i) {
                total_size += ::google::protobuf::internal::WireFormatLite::StringSize(
                    this_._internal_service_discovery_prefixes().Get(i));
              }
            }
          }
           {
            // string deployservice_prefix = 6;
            if (!this_._internal_deployservice_prefix().empty()) {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                              this_._internal_deployservice_prefix());
            }
            // uint32 log_level = 2;
            if (this_._internal_log_level() != 0) {
              total_size += ::_pbi::WireFormatLite::UInt32SizePlusOne(
                  this_._internal_log_level());
            }
            // uint32 lease_renew_interval = 5;
            if (this_._internal_lease_renew_interval() != 0) {
              total_size += ::_pbi::WireFormatLite::UInt32SizePlusOne(
                  this_._internal_lease_renew_interval());
            }
            // uint32 node_ttl_seconds = 7;
            if (this_._internal_node_ttl_seconds() != 0) {
              total_size += ::_pbi::WireFormatLite::UInt32SizePlusOne(
                  this_._internal_node_ttl_seconds());
            }
          }
          return this_.MaybeComputeUnknownFieldsSize(total_size,
                                                     &this_._impl_._cached_size_);
        }

void BaseDeployConfig::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<BaseDeployConfig*>(&to_msg);
  auto& from = static_cast<const BaseDeployConfig&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:BaseDeployConfig)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_internal_mutable_etcd_hosts()->MergeFrom(from._internal_etcd_hosts());
  _this->_internal_mutable_services()->MergeFrom(
      from._internal_services());
  _this->_internal_mutable_service_discovery_prefixes()->MergeFrom(from._internal_service_discovery_prefixes());
  if (!from._internal_deployservice_prefix().empty()) {
    _this->_internal_set_deployservice_prefix(from._internal_deployservice_prefix());
  }
  if (from._internal_log_level() != 0) {
    _this->_impl_.log_level_ = from._impl_.log_level_;
  }
  if (from._internal_lease_renew_interval() != 0) {
    _this->_impl_.lease_renew_interval_ = from._impl_.lease_renew_interval_;
  }
  if (from._internal_node_ttl_seconds() != 0) {
    _this->_impl_.node_ttl_seconds_ = from._impl_.node_ttl_seconds_;
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void BaseDeployConfig::CopyFrom(const BaseDeployConfig& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:BaseDeployConfig)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void BaseDeployConfig::InternalSwap(BaseDeployConfig* PROTOBUF_RESTRICT other) {
  using std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  _impl_.etcd_hosts_.InternalSwap(&other->_impl_.etcd_hosts_);
  _impl_.services_.InternalSwap(&other->_impl_.services_);
  _impl_.service_discovery_prefixes_.InternalSwap(&other->_impl_.service_discovery_prefixes_);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.deployservice_prefix_, &other->_impl_.deployservice_prefix_, arena);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(BaseDeployConfig, _impl_.node_ttl_seconds_)
      + sizeof(BaseDeployConfig::_impl_.node_ttl_seconds_)
      - PROTOBUF_FIELD_OFFSET(BaseDeployConfig, _impl_.log_level_)>(
          reinterpret_cast<char*>(&_impl_.log_level_),
          reinterpret_cast<char*>(&other->_impl_.log_level_));
}

::google::protobuf::Metadata BaseDeployConfig::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class GameConfig::_Internal {
 public:
};

GameConfig::GameConfig(::google::protobuf::Arena* arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:GameConfig)
}
GameConfig::GameConfig(
    ::google::protobuf::Arena* arena, const GameConfig& from)
    : GameConfig(arena) {
  MergeFrom(from);
}
inline PROTOBUF_NDEBUG_INLINE GameConfig::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0} {}

inline void GameConfig::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, scene_node_type_),
           0,
           offsetof(Impl_, zone_id_) -
               offsetof(Impl_, scene_node_type_) +
               sizeof(Impl_::zone_id_));
}
GameConfig::~GameConfig() {
  // @@protoc_insertion_point(destructor:GameConfig)
  SharedDtor(*this);
}
inline void GameConfig::SharedDtor(MessageLite& self) {
  GameConfig& this_ = static_cast<GameConfig&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  this_._impl_.~Impl_();
}

inline void* GameConfig::PlacementNew_(const void*, void* mem,
                                        ::google::protobuf::Arena* arena) {
  return ::new (mem) GameConfig(arena);
}
constexpr auto GameConfig::InternalNewImpl_() {
  return ::google::protobuf::internal::MessageCreator::ZeroInit(sizeof(GameConfig),
                                            alignof(GameConfig));
}
PROTOBUF_CONSTINIT
PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::google::protobuf::internal::ClassDataFull GameConfig::_class_data_ = {
    ::google::protobuf::internal::ClassData{
        &_GameConfig_default_instance_._instance,
        &_table_.header,
        nullptr,  // OnDemandRegisterArenaDtor
        nullptr,  // IsInitialized
        &GameConfig::MergeImpl,
        ::google::protobuf::Message::GetNewImpl<GameConfig>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
        &GameConfig::SharedDtor,
        ::google::protobuf::Message::GetClearImpl<GameConfig>(), &GameConfig::ByteSizeLong,
            &GameConfig::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
        PROTOBUF_FIELD_OFFSET(GameConfig, _impl_._cached_size_),
        false,
    },
    &GameConfig::kDescriptorMethods,
    &descriptor_table_proto_2fcommon_2fconfig_2eproto,
    nullptr,  // tracker
};
const ::google::protobuf::internal::ClassData* GameConfig::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_class_data_.tc_table);
  return _class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<1, 2, 0, 0, 2> GameConfig::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    2, 8,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967292,  // skipmap
    offsetof(decltype(_table_), field_entries),
    2,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    _class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::GameConfig>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // uint32 zone_id = 2;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(GameConfig, _impl_.zone_id_), 63>(),
     {16, 63, 0, PROTOBUF_FIELD_OFFSET(GameConfig, _impl_.zone_id_)}},
    // uint32 scene_node_type = 1;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(GameConfig, _impl_.scene_node_type_), 63>(),
     {8, 63, 0, PROTOBUF_FIELD_OFFSET(GameConfig, _impl_.scene_node_type_)}},
  }}, {{
    65535, 65535
  }}, {{
    // uint32 scene_node_type = 1;
    {PROTOBUF_FIELD_OFFSET(GameConfig, _impl_.scene_node_type_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUInt32)},
    // uint32 zone_id = 2;
    {PROTOBUF_FIELD_OFFSET(GameConfig, _impl_.zone_id_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUInt32)},
  }},
  // no aux_entries
  {{
  }},
};

PROTOBUF_NOINLINE void GameConfig::Clear() {
// @@protoc_insertion_point(message_clear_start:GameConfig)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&_impl_.scene_node_type_, 0, static_cast<::size_t>(
      reinterpret_cast<char*>(&_impl_.zone_id_) -
      reinterpret_cast<char*>(&_impl_.scene_node_type_)) + sizeof(_impl_.zone_id_));
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::uint8_t* GameConfig::_InternalSerialize(
            const MessageLite& base, ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) {
          const GameConfig& this_ = static_cast<const GameConfig&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::uint8_t* GameConfig::_InternalSerialize(
            ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) const {
          const GameConfig& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(serialize_to_array_start:GameConfig)
          ::uint32_t cached_has_bits = 0;
          (void)cached_has_bits;

          // uint32 scene_node_type = 1;
          if (this_._internal_scene_node_type() != 0) {
            target = stream->EnsureSpace(target);
            target = ::_pbi::WireFormatLite::WriteUInt32ToArray(
                1, this_._internal_scene_node_type(), target);
          }

          // uint32 zone_id = 2;
          if (this_._internal_zone_id() != 0) {
            target = stream->EnsureSpace(target);
            target = ::_pbi::WireFormatLite::WriteUInt32ToArray(
                2, this_._internal_zone_id(), target);
          }

          if (PROTOBUF_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
            target =
                ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
                    this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
          }
          // @@protoc_insertion_point(serialize_to_array_end:GameConfig)
          return target;
        }

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::size_t GameConfig::ByteSizeLong(const MessageLite& base) {
          const GameConfig& this_ = static_cast<const GameConfig&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::size_t GameConfig::ByteSizeLong() const {
          const GameConfig& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(message_byte_size_start:GameConfig)
          ::size_t total_size = 0;

          ::uint32_t cached_has_bits = 0;
          // Prevent compiler warnings about cached_has_bits being unused
          (void)cached_has_bits;

          ::_pbi::Prefetch5LinesFrom7Lines(&this_);
           {
            // uint32 scene_node_type = 1;
            if (this_._internal_scene_node_type() != 0) {
              total_size += ::_pbi::WireFormatLite::UInt32SizePlusOne(
                  this_._internal_scene_node_type());
            }
            // uint32 zone_id = 2;
            if (this_._internal_zone_id() != 0) {
              total_size += ::_pbi::WireFormatLite::UInt32SizePlusOne(
                  this_._internal_zone_id());
            }
          }
          return this_.MaybeComputeUnknownFieldsSize(total_size,
                                                     &this_._impl_._cached_size_);
        }

void GameConfig::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<GameConfig*>(&to_msg);
  auto& from = static_cast<const GameConfig&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:GameConfig)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_scene_node_type() != 0) {
    _this->_impl_.scene_node_type_ = from._impl_.scene_node_type_;
  }
  if (from._internal_zone_id() != 0) {
    _this->_impl_.zone_id_ = from._impl_.zone_id_;
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void GameConfig::CopyFrom(const GameConfig& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:GameConfig)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void GameConfig::InternalSwap(GameConfig* PROTOBUF_RESTRICT other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(GameConfig, _impl_.zone_id_)
      + sizeof(GameConfig::_impl_.zone_id_)
      - PROTOBUF_FIELD_OFFSET(GameConfig, _impl_.scene_node_type_)>(
          reinterpret_cast<char*>(&_impl_.scene_node_type_),
          reinterpret_cast<char*>(&other->_impl_.scene_node_type_));
}

::google::protobuf::Metadata GameConfig::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// @@protoc_insertion_point(namespace_scope)
namespace google {
namespace protobuf {
}  // namespace protobuf
}  // namespace google
// @@protoc_insertion_point(global_scope)
PROTOBUF_ATTRIBUTE_INIT_PRIORITY2 static ::std::false_type
    _static_init2_ PROTOBUF_UNUSED =
        (::_pbi::AddDescriptors(&descriptor_table_proto_2fcommon_2fconfig_2eproto),
         ::std::false_type{});
#include "google/protobuf/port_undef.inc"
