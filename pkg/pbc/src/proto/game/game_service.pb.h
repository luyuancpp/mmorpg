// Generated by the protocol buffer compiler.  DO NOT EDIT!
// NO CHECKED-IN PROTOBUF GENCODE
// source: proto/game/game_service.proto
// Protobuf C++ Version: 5.29.0

#ifndef proto_2fgame_2fgame_5fservice_2eproto_2epb_2eh
#define proto_2fgame_2fgame_5fservice_2eproto_2epb_2eh

#include <limits>
#include <string>
#include <type_traits>
#include <utility>

#include "google/protobuf/runtime_version.h"
#if PROTOBUF_VERSION != 5029000
#error "Protobuf C++ gencode is built with an incompatible version of"
#error "Protobuf C++ headers/runtime. See"
#error "https://protobuf.dev/support/cross-version-runtime-guarantee/#cpp"
#endif
#include "google/protobuf/io/coded_stream.h"
#include "google/protobuf/arena.h"
#include "google/protobuf/arenastring.h"
#include "google/protobuf/generated_message_tctable_decl.h"
#include "google/protobuf/generated_message_util.h"
#include "google/protobuf/metadata_lite.h"
#include "google/protobuf/generated_message_reflection.h"
#include "google/protobuf/message.h"
#include "google/protobuf/message_lite.h"
#include "google/protobuf/repeated_field.h"  // IWYU pragma: export
#include "google/protobuf/extension_set.h"  // IWYU pragma: export
#include "google/protobuf/service.h"
#include "google/protobuf/unknown_field_set.h"
#include "proto/common/empty.pb.h"
#include "proto/common/common.pb.h"
#include "proto/common/common_message.pb.h"
// @@protoc_insertion_point(includes)

// Must be included last.
#include "google/protobuf/port_def.inc"

#define PROTOBUF_INTERNAL_EXPORT_proto_2fgame_2fgame_5fservice_2eproto

namespace google {
namespace protobuf {
namespace internal {
template <typename T>
::absl::string_view GetAnyMessageName();
}  // namespace internal
}  // namespace protobuf
}  // namespace google

// Internal implementation detail -- do not use these members.
struct TableStruct_proto_2fgame_2fgame_5fservice_2eproto {
  static const ::uint32_t offsets[];
};
extern const ::google::protobuf::internal::DescriptorTable
    descriptor_table_proto_2fgame_2fgame_5fservice_2eproto;
class Centre2GsEnterSceneRequest;
struct Centre2GsEnterSceneRequestDefaultTypeInternal;
extern Centre2GsEnterSceneRequestDefaultTypeInternal _Centre2GsEnterSceneRequest_default_instance_;
class ClientSendMessageToPlayerRequest;
struct ClientSendMessageToPlayerRequestDefaultTypeInternal;
extern ClientSendMessageToPlayerRequestDefaultTypeInternal _ClientSendMessageToPlayerRequest_default_instance_;
class ClientSendMessageToPlayerResponse;
struct ClientSendMessageToPlayerResponseDefaultTypeInternal;
extern ClientSendMessageToPlayerResponseDefaultTypeInternal _ClientSendMessageToPlayerResponse_default_instance_;
class CreateSceneRequest;
struct CreateSceneRequestDefaultTypeInternal;
extern CreateSceneRequestDefaultTypeInternal _CreateSceneRequest_default_instance_;
class CreateSceneResponse;
struct CreateSceneResponseDefaultTypeInternal;
extern CreateSceneResponseDefaultTypeInternal _CreateSceneResponse_default_instance_;
class GameNodeConnectRequest;
struct GameNodeConnectRequestDefaultTypeInternal;
extern GameNodeConnectRequestDefaultTypeInternal _GameNodeConnectRequest_default_instance_;
class PlayerEnterGameNodeRequest;
struct PlayerEnterGameNodeRequestDefaultTypeInternal;
extern PlayerEnterGameNodeRequestDefaultTypeInternal _PlayerEnterGameNodeRequest_default_instance_;
class RegisterPlayerSessionRequest;
struct RegisterPlayerSessionRequestDefaultTypeInternal;
extern RegisterPlayerSessionRequestDefaultTypeInternal _RegisterPlayerSessionRequest_default_instance_;
class SessionDisconnectRequest;
struct SessionDisconnectRequestDefaultTypeInternal;
extern SessionDisconnectRequestDefaultTypeInternal _SessionDisconnectRequest_default_instance_;
namespace google {
namespace protobuf {
}  // namespace protobuf
}  // namespace google


// ===================================================================


// -------------------------------------------------------------------

class SessionDisconnectRequest final
    : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:SessionDisconnectRequest) */ {
 public:
  inline SessionDisconnectRequest() : SessionDisconnectRequest(nullptr) {}
  ~SessionDisconnectRequest() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(SessionDisconnectRequest* msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(SessionDisconnectRequest));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR SessionDisconnectRequest(
      ::google::protobuf::internal::ConstantInitialized);

  inline SessionDisconnectRequest(const SessionDisconnectRequest& from) : SessionDisconnectRequest(nullptr, from) {}
  inline SessionDisconnectRequest(SessionDisconnectRequest&& from) noexcept
      : SessionDisconnectRequest(nullptr, std::move(from)) {}
  inline SessionDisconnectRequest& operator=(const SessionDisconnectRequest& from) {
    CopyFrom(from);
    return *this;
  }
  inline SessionDisconnectRequest& operator=(SessionDisconnectRequest&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const SessionDisconnectRequest& default_instance() {
    return *internal_default_instance();
  }
  static inline const SessionDisconnectRequest* internal_default_instance() {
    return reinterpret_cast<const SessionDisconnectRequest*>(
        &_SessionDisconnectRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 3;
  friend void swap(SessionDisconnectRequest& a, SessionDisconnectRequest& b) { a.Swap(&b); }
  inline void Swap(SessionDisconnectRequest* other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(SessionDisconnectRequest* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  SessionDisconnectRequest* New(::google::protobuf::Arena* arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<SessionDisconnectRequest>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const SessionDisconnectRequest& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const SessionDisconnectRequest& from) { SessionDisconnectRequest::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(SessionDisconnectRequest* other);
 private:
  template <typename T>
  friend ::absl::string_view(
      ::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "SessionDisconnectRequest"; }

 protected:
  explicit SessionDisconnectRequest(::google::protobuf::Arena* arena);
  SessionDisconnectRequest(::google::protobuf::Arena* arena, const SessionDisconnectRequest& from);
  SessionDisconnectRequest(::google::protobuf::Arena* arena, SessionDisconnectRequest&& from) noexcept
      : SessionDisconnectRequest(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* GetClassData() const PROTOBUF_FINAL;
  static void* PlacementNew_(const void*, void* mem,
                             ::google::protobuf::Arena* arena);
  static constexpr auto InternalNewImpl_();
  static const ::google::protobuf::internal::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kPlayerIdFieldNumber = 1,
  };
  // uint64 player_id = 1;
  void clear_player_id() ;
  ::uint64_t player_id() const;
  void set_player_id(::uint64_t value);

  private:
  ::uint64_t _internal_player_id() const;
  void _internal_set_player_id(::uint64_t value);

  public:
  // @@protoc_insertion_point(class_scope:SessionDisconnectRequest)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      0, 1, 0,
      0, 2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const SessionDisconnectRequest& from_msg);
    ::uint64_t player_id_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_proto_2fgame_2fgame_5fservice_2eproto;
};
// -------------------------------------------------------------------

class RegisterPlayerSessionRequest final
    : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:RegisterPlayerSessionRequest) */ {
 public:
  inline RegisterPlayerSessionRequest() : RegisterPlayerSessionRequest(nullptr) {}
  ~RegisterPlayerSessionRequest() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(RegisterPlayerSessionRequest* msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(RegisterPlayerSessionRequest));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR RegisterPlayerSessionRequest(
      ::google::protobuf::internal::ConstantInitialized);

  inline RegisterPlayerSessionRequest(const RegisterPlayerSessionRequest& from) : RegisterPlayerSessionRequest(nullptr, from) {}
  inline RegisterPlayerSessionRequest(RegisterPlayerSessionRequest&& from) noexcept
      : RegisterPlayerSessionRequest(nullptr, std::move(from)) {}
  inline RegisterPlayerSessionRequest& operator=(const RegisterPlayerSessionRequest& from) {
    CopyFrom(from);
    return *this;
  }
  inline RegisterPlayerSessionRequest& operator=(RegisterPlayerSessionRequest&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const RegisterPlayerSessionRequest& default_instance() {
    return *internal_default_instance();
  }
  static inline const RegisterPlayerSessionRequest* internal_default_instance() {
    return reinterpret_cast<const RegisterPlayerSessionRequest*>(
        &_RegisterPlayerSessionRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 5;
  friend void swap(RegisterPlayerSessionRequest& a, RegisterPlayerSessionRequest& b) { a.Swap(&b); }
  inline void Swap(RegisterPlayerSessionRequest* other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(RegisterPlayerSessionRequest* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  RegisterPlayerSessionRequest* New(::google::protobuf::Arena* arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<RegisterPlayerSessionRequest>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const RegisterPlayerSessionRequest& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const RegisterPlayerSessionRequest& from) { RegisterPlayerSessionRequest::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(RegisterPlayerSessionRequest* other);
 private:
  template <typename T>
  friend ::absl::string_view(
      ::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "RegisterPlayerSessionRequest"; }

 protected:
  explicit RegisterPlayerSessionRequest(::google::protobuf::Arena* arena);
  RegisterPlayerSessionRequest(::google::protobuf::Arena* arena, const RegisterPlayerSessionRequest& from);
  RegisterPlayerSessionRequest(::google::protobuf::Arena* arena, RegisterPlayerSessionRequest&& from) noexcept
      : RegisterPlayerSessionRequest(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* GetClassData() const PROTOBUF_FINAL;
  static void* PlacementNew_(const void*, void* mem,
                             ::google::protobuf::Arena* arena);
  static constexpr auto InternalNewImpl_();
  static const ::google::protobuf::internal::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kSessionIdFieldNumber = 1,
    kPlayerIdFieldNumber = 2,
  };
  // uint64 session_id = 1;
  void clear_session_id() ;
  ::uint64_t session_id() const;
  void set_session_id(::uint64_t value);

  private:
  ::uint64_t _internal_session_id() const;
  void _internal_set_session_id(::uint64_t value);

  public:
  // uint64 player_id = 2;
  void clear_player_id() ;
  ::uint64_t player_id() const;
  void set_player_id(::uint64_t value);

  private:
  ::uint64_t _internal_player_id() const;
  void _internal_set_player_id(::uint64_t value);

  public:
  // @@protoc_insertion_point(class_scope:RegisterPlayerSessionRequest)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      1, 2, 0,
      0, 2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const RegisterPlayerSessionRequest& from_msg);
    ::uint64_t session_id_;
    ::uint64_t player_id_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_proto_2fgame_2fgame_5fservice_2eproto;
};
// -------------------------------------------------------------------

class PlayerEnterGameNodeRequest final
    : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:PlayerEnterGameNodeRequest) */ {
 public:
  inline PlayerEnterGameNodeRequest() : PlayerEnterGameNodeRequest(nullptr) {}
  ~PlayerEnterGameNodeRequest() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(PlayerEnterGameNodeRequest* msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(PlayerEnterGameNodeRequest));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR PlayerEnterGameNodeRequest(
      ::google::protobuf::internal::ConstantInitialized);

  inline PlayerEnterGameNodeRequest(const PlayerEnterGameNodeRequest& from) : PlayerEnterGameNodeRequest(nullptr, from) {}
  inline PlayerEnterGameNodeRequest(PlayerEnterGameNodeRequest&& from) noexcept
      : PlayerEnterGameNodeRequest(nullptr, std::move(from)) {}
  inline PlayerEnterGameNodeRequest& operator=(const PlayerEnterGameNodeRequest& from) {
    CopyFrom(from);
    return *this;
  }
  inline PlayerEnterGameNodeRequest& operator=(PlayerEnterGameNodeRequest&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const PlayerEnterGameNodeRequest& default_instance() {
    return *internal_default_instance();
  }
  static inline const PlayerEnterGameNodeRequest* internal_default_instance() {
    return reinterpret_cast<const PlayerEnterGameNodeRequest*>(
        &_PlayerEnterGameNodeRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 0;
  friend void swap(PlayerEnterGameNodeRequest& a, PlayerEnterGameNodeRequest& b) { a.Swap(&b); }
  inline void Swap(PlayerEnterGameNodeRequest* other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(PlayerEnterGameNodeRequest* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  PlayerEnterGameNodeRequest* New(::google::protobuf::Arena* arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<PlayerEnterGameNodeRequest>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const PlayerEnterGameNodeRequest& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const PlayerEnterGameNodeRequest& from) { PlayerEnterGameNodeRequest::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(PlayerEnterGameNodeRequest* other);
 private:
  template <typename T>
  friend ::absl::string_view(
      ::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "PlayerEnterGameNodeRequest"; }

 protected:
  explicit PlayerEnterGameNodeRequest(::google::protobuf::Arena* arena);
  PlayerEnterGameNodeRequest(::google::protobuf::Arena* arena, const PlayerEnterGameNodeRequest& from);
  PlayerEnterGameNodeRequest(::google::protobuf::Arena* arena, PlayerEnterGameNodeRequest&& from) noexcept
      : PlayerEnterGameNodeRequest(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* GetClassData() const PROTOBUF_FINAL;
  static void* PlacementNew_(const void*, void* mem,
                             ::google::protobuf::Arena* arena);
  static constexpr auto InternalNewImpl_();
  static const ::google::protobuf::internal::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kPlayerIdFieldNumber = 1,
    kSessionIdFieldNumber = 2,
    kCentreNodeIdFieldNumber = 3,
  };
  // uint64 player_id = 1;
  void clear_player_id() ;
  ::uint64_t player_id() const;
  void set_player_id(::uint64_t value);

  private:
  ::uint64_t _internal_player_id() const;
  void _internal_set_player_id(::uint64_t value);

  public:
  // uint64 session_id = 2;
  void clear_session_id() ;
  ::uint64_t session_id() const;
  void set_session_id(::uint64_t value);

  private:
  ::uint64_t _internal_session_id() const;
  void _internal_set_session_id(::uint64_t value);

  public:
  // uint32 centre_node_id = 3;
  void clear_centre_node_id() ;
  ::uint32_t centre_node_id() const;
  void set_centre_node_id(::uint32_t value);

  private:
  ::uint32_t _internal_centre_node_id() const;
  void _internal_set_centre_node_id(::uint32_t value);

  public:
  // @@protoc_insertion_point(class_scope:PlayerEnterGameNodeRequest)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      2, 3, 0,
      0, 2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const PlayerEnterGameNodeRequest& from_msg);
    ::uint64_t player_id_;
    ::uint64_t session_id_;
    ::uint32_t centre_node_id_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_proto_2fgame_2fgame_5fservice_2eproto;
};
// -------------------------------------------------------------------

class CreateSceneRequest final
    : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:CreateSceneRequest) */ {
 public:
  inline CreateSceneRequest() : CreateSceneRequest(nullptr) {}
  ~CreateSceneRequest() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(CreateSceneRequest* msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(CreateSceneRequest));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR CreateSceneRequest(
      ::google::protobuf::internal::ConstantInitialized);

  inline CreateSceneRequest(const CreateSceneRequest& from) : CreateSceneRequest(nullptr, from) {}
  inline CreateSceneRequest(CreateSceneRequest&& from) noexcept
      : CreateSceneRequest(nullptr, std::move(from)) {}
  inline CreateSceneRequest& operator=(const CreateSceneRequest& from) {
    CopyFrom(from);
    return *this;
  }
  inline CreateSceneRequest& operator=(CreateSceneRequest&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const CreateSceneRequest& default_instance() {
    return *internal_default_instance();
  }
  static inline const CreateSceneRequest* internal_default_instance() {
    return reinterpret_cast<const CreateSceneRequest*>(
        &_CreateSceneRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 7;
  friend void swap(CreateSceneRequest& a, CreateSceneRequest& b) { a.Swap(&b); }
  inline void Swap(CreateSceneRequest* other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(CreateSceneRequest* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  CreateSceneRequest* New(::google::protobuf::Arena* arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<CreateSceneRequest>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const CreateSceneRequest& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const CreateSceneRequest& from) { CreateSceneRequest::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(CreateSceneRequest* other);
 private:
  template <typename T>
  friend ::absl::string_view(
      ::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "CreateSceneRequest"; }

 protected:
  explicit CreateSceneRequest(::google::protobuf::Arena* arena);
  CreateSceneRequest(::google::protobuf::Arena* arena, const CreateSceneRequest& from);
  CreateSceneRequest(::google::protobuf::Arena* arena, CreateSceneRequest&& from) noexcept
      : CreateSceneRequest(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* GetClassData() const PROTOBUF_FINAL;
  static void* PlacementNew_(const void*, void* mem,
                             ::google::protobuf::Arena* arena);
  static constexpr auto InternalNewImpl_();
  static const ::google::protobuf::internal::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kConfigIdFieldNumber = 1,
  };
  // uint32 config_id = 1;
  void clear_config_id() ;
  ::uint32_t config_id() const;
  void set_config_id(::uint32_t value);

  private:
  ::uint32_t _internal_config_id() const;
  void _internal_set_config_id(::uint32_t value);

  public:
  // @@protoc_insertion_point(class_scope:CreateSceneRequest)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      0, 1, 0,
      0, 2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const CreateSceneRequest& from_msg);
    ::uint32_t config_id_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_proto_2fgame_2fgame_5fservice_2eproto;
};
// -------------------------------------------------------------------

class Centre2GsEnterSceneRequest final
    : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:Centre2GsEnterSceneRequest) */ {
 public:
  inline Centre2GsEnterSceneRequest() : Centre2GsEnterSceneRequest(nullptr) {}
  ~Centre2GsEnterSceneRequest() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(Centre2GsEnterSceneRequest* msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(Centre2GsEnterSceneRequest));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR Centre2GsEnterSceneRequest(
      ::google::protobuf::internal::ConstantInitialized);

  inline Centre2GsEnterSceneRequest(const Centre2GsEnterSceneRequest& from) : Centre2GsEnterSceneRequest(nullptr, from) {}
  inline Centre2GsEnterSceneRequest(Centre2GsEnterSceneRequest&& from) noexcept
      : Centre2GsEnterSceneRequest(nullptr, std::move(from)) {}
  inline Centre2GsEnterSceneRequest& operator=(const Centre2GsEnterSceneRequest& from) {
    CopyFrom(from);
    return *this;
  }
  inline Centre2GsEnterSceneRequest& operator=(Centre2GsEnterSceneRequest&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const Centre2GsEnterSceneRequest& default_instance() {
    return *internal_default_instance();
  }
  static inline const Centre2GsEnterSceneRequest* internal_default_instance() {
    return reinterpret_cast<const Centre2GsEnterSceneRequest*>(
        &_Centre2GsEnterSceneRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 6;
  friend void swap(Centre2GsEnterSceneRequest& a, Centre2GsEnterSceneRequest& b) { a.Swap(&b); }
  inline void Swap(Centre2GsEnterSceneRequest* other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(Centre2GsEnterSceneRequest* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  Centre2GsEnterSceneRequest* New(::google::protobuf::Arena* arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<Centre2GsEnterSceneRequest>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const Centre2GsEnterSceneRequest& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const Centre2GsEnterSceneRequest& from) { Centre2GsEnterSceneRequest::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(Centre2GsEnterSceneRequest* other);
 private:
  template <typename T>
  friend ::absl::string_view(
      ::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "Centre2GsEnterSceneRequest"; }

 protected:
  explicit Centre2GsEnterSceneRequest(::google::protobuf::Arena* arena);
  Centre2GsEnterSceneRequest(::google::protobuf::Arena* arena, const Centre2GsEnterSceneRequest& from);
  Centre2GsEnterSceneRequest(::google::protobuf::Arena* arena, Centre2GsEnterSceneRequest&& from) noexcept
      : Centre2GsEnterSceneRequest(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* GetClassData() const PROTOBUF_FINAL;
  static void* PlacementNew_(const void*, void* mem,
                             ::google::protobuf::Arena* arena);
  static constexpr auto InternalNewImpl_();
  static const ::google::protobuf::internal::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kPlayerIdFieldNumber = 1,
    kSceneIdFieldNumber = 2,
  };
  // uint64 player_id = 1;
  void clear_player_id() ;
  ::uint64_t player_id() const;
  void set_player_id(::uint64_t value);

  private:
  ::uint64_t _internal_player_id() const;
  void _internal_set_player_id(::uint64_t value);

  public:
  // uint64 scene_id = 2;
  void clear_scene_id() ;
  ::uint64_t scene_id() const;
  void set_scene_id(::uint64_t value);

  private:
  ::uint64_t _internal_scene_id() const;
  void _internal_set_scene_id(::uint64_t value);

  public:
  // @@protoc_insertion_point(class_scope:Centre2GsEnterSceneRequest)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      1, 2, 0,
      0, 2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const Centre2GsEnterSceneRequest& from_msg);
    ::uint64_t player_id_;
    ::uint64_t scene_id_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_proto_2fgame_2fgame_5fservice_2eproto;
};
// -------------------------------------------------------------------

class GameNodeConnectRequest final
    : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:GameNodeConnectRequest) */ {
 public:
  inline GameNodeConnectRequest() : GameNodeConnectRequest(nullptr) {}
  ~GameNodeConnectRequest() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(GameNodeConnectRequest* msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(GameNodeConnectRequest));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR GameNodeConnectRequest(
      ::google::protobuf::internal::ConstantInitialized);

  inline GameNodeConnectRequest(const GameNodeConnectRequest& from) : GameNodeConnectRequest(nullptr, from) {}
  inline GameNodeConnectRequest(GameNodeConnectRequest&& from) noexcept
      : GameNodeConnectRequest(nullptr, std::move(from)) {}
  inline GameNodeConnectRequest& operator=(const GameNodeConnectRequest& from) {
    CopyFrom(from);
    return *this;
  }
  inline GameNodeConnectRequest& operator=(GameNodeConnectRequest&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const GameNodeConnectRequest& default_instance() {
    return *internal_default_instance();
  }
  static inline const GameNodeConnectRequest* internal_default_instance() {
    return reinterpret_cast<const GameNodeConnectRequest*>(
        &_GameNodeConnectRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 4;
  friend void swap(GameNodeConnectRequest& a, GameNodeConnectRequest& b) { a.Swap(&b); }
  inline void Swap(GameNodeConnectRequest* other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(GameNodeConnectRequest* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  GameNodeConnectRequest* New(::google::protobuf::Arena* arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<GameNodeConnectRequest>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const GameNodeConnectRequest& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const GameNodeConnectRequest& from) { GameNodeConnectRequest::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(GameNodeConnectRequest* other);
 private:
  template <typename T>
  friend ::absl::string_view(
      ::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "GameNodeConnectRequest"; }

 protected:
  explicit GameNodeConnectRequest(::google::protobuf::Arena* arena);
  GameNodeConnectRequest(::google::protobuf::Arena* arena, const GameNodeConnectRequest& from);
  GameNodeConnectRequest(::google::protobuf::Arena* arena, GameNodeConnectRequest&& from) noexcept
      : GameNodeConnectRequest(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* GetClassData() const PROTOBUF_FINAL;
  static void* PlacementNew_(const void*, void* mem,
                             ::google::protobuf::Arena* arena);
  static constexpr auto InternalNewImpl_();
  static const ::google::protobuf::internal::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kRpcClientFieldNumber = 1,
    kGateNodeIdFieldNumber = 2,
  };
  // .NetworkAddress rpc_client = 1;
  bool has_rpc_client() const;
  void clear_rpc_client() ;
  const ::NetworkAddress& rpc_client() const;
  PROTOBUF_NODISCARD ::NetworkAddress* release_rpc_client();
  ::NetworkAddress* mutable_rpc_client();
  void set_allocated_rpc_client(::NetworkAddress* value);
  void unsafe_arena_set_allocated_rpc_client(::NetworkAddress* value);
  ::NetworkAddress* unsafe_arena_release_rpc_client();

  private:
  const ::NetworkAddress& _internal_rpc_client() const;
  ::NetworkAddress* _internal_mutable_rpc_client();

  public:
  // uint32 gate_node_id = 2;
  void clear_gate_node_id() ;
  ::uint32_t gate_node_id() const;
  void set_gate_node_id(::uint32_t value);

  private:
  ::uint32_t _internal_gate_node_id() const;
  void _internal_set_gate_node_id(::uint32_t value);

  public:
  // @@protoc_insertion_point(class_scope:GameNodeConnectRequest)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      1, 2, 1,
      0, 2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const GameNodeConnectRequest& from_msg);
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    ::NetworkAddress* rpc_client_;
    ::uint32_t gate_node_id_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_proto_2fgame_2fgame_5fservice_2eproto;
};
// -------------------------------------------------------------------

class CreateSceneResponse final
    : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:CreateSceneResponse) */ {
 public:
  inline CreateSceneResponse() : CreateSceneResponse(nullptr) {}
  ~CreateSceneResponse() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(CreateSceneResponse* msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(CreateSceneResponse));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR CreateSceneResponse(
      ::google::protobuf::internal::ConstantInitialized);

  inline CreateSceneResponse(const CreateSceneResponse& from) : CreateSceneResponse(nullptr, from) {}
  inline CreateSceneResponse(CreateSceneResponse&& from) noexcept
      : CreateSceneResponse(nullptr, std::move(from)) {}
  inline CreateSceneResponse& operator=(const CreateSceneResponse& from) {
    CopyFrom(from);
    return *this;
  }
  inline CreateSceneResponse& operator=(CreateSceneResponse&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const CreateSceneResponse& default_instance() {
    return *internal_default_instance();
  }
  static inline const CreateSceneResponse* internal_default_instance() {
    return reinterpret_cast<const CreateSceneResponse*>(
        &_CreateSceneResponse_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 8;
  friend void swap(CreateSceneResponse& a, CreateSceneResponse& b) { a.Swap(&b); }
  inline void Swap(CreateSceneResponse* other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(CreateSceneResponse* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  CreateSceneResponse* New(::google::protobuf::Arena* arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<CreateSceneResponse>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const CreateSceneResponse& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const CreateSceneResponse& from) { CreateSceneResponse::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(CreateSceneResponse* other);
 private:
  template <typename T>
  friend ::absl::string_view(
      ::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "CreateSceneResponse"; }

 protected:
  explicit CreateSceneResponse(::google::protobuf::Arena* arena);
  CreateSceneResponse(::google::protobuf::Arena* arena, const CreateSceneResponse& from);
  CreateSceneResponse(::google::protobuf::Arena* arena, CreateSceneResponse&& from) noexcept
      : CreateSceneResponse(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* GetClassData() const PROTOBUF_FINAL;
  static void* PlacementNew_(const void*, void* mem,
                             ::google::protobuf::Arena* arena);
  static constexpr auto InternalNewImpl_();
  static const ::google::protobuf::internal::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kSceneInfoFieldNumber = 1,
  };
  // .SceneInfoPBComponent scene_info = 1;
  bool has_scene_info() const;
  void clear_scene_info() ;
  const ::SceneInfoPBComponent& scene_info() const;
  PROTOBUF_NODISCARD ::SceneInfoPBComponent* release_scene_info();
  ::SceneInfoPBComponent* mutable_scene_info();
  void set_allocated_scene_info(::SceneInfoPBComponent* value);
  void unsafe_arena_set_allocated_scene_info(::SceneInfoPBComponent* value);
  ::SceneInfoPBComponent* unsafe_arena_release_scene_info();

  private:
  const ::SceneInfoPBComponent& _internal_scene_info() const;
  ::SceneInfoPBComponent* _internal_mutable_scene_info();

  public:
  // @@protoc_insertion_point(class_scope:CreateSceneResponse)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      0, 1, 1,
      0, 2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const CreateSceneResponse& from_msg);
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    ::SceneInfoPBComponent* scene_info_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_proto_2fgame_2fgame_5fservice_2eproto;
};
// -------------------------------------------------------------------

class ClientSendMessageToPlayerResponse final
    : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:ClientSendMessageToPlayerResponse) */ {
 public:
  inline ClientSendMessageToPlayerResponse() : ClientSendMessageToPlayerResponse(nullptr) {}
  ~ClientSendMessageToPlayerResponse() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(ClientSendMessageToPlayerResponse* msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(ClientSendMessageToPlayerResponse));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR ClientSendMessageToPlayerResponse(
      ::google::protobuf::internal::ConstantInitialized);

  inline ClientSendMessageToPlayerResponse(const ClientSendMessageToPlayerResponse& from) : ClientSendMessageToPlayerResponse(nullptr, from) {}
  inline ClientSendMessageToPlayerResponse(ClientSendMessageToPlayerResponse&& from) noexcept
      : ClientSendMessageToPlayerResponse(nullptr, std::move(from)) {}
  inline ClientSendMessageToPlayerResponse& operator=(const ClientSendMessageToPlayerResponse& from) {
    CopyFrom(from);
    return *this;
  }
  inline ClientSendMessageToPlayerResponse& operator=(ClientSendMessageToPlayerResponse&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const ClientSendMessageToPlayerResponse& default_instance() {
    return *internal_default_instance();
  }
  static inline const ClientSendMessageToPlayerResponse* internal_default_instance() {
    return reinterpret_cast<const ClientSendMessageToPlayerResponse*>(
        &_ClientSendMessageToPlayerResponse_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 2;
  friend void swap(ClientSendMessageToPlayerResponse& a, ClientSendMessageToPlayerResponse& b) { a.Swap(&b); }
  inline void Swap(ClientSendMessageToPlayerResponse* other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(ClientSendMessageToPlayerResponse* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  ClientSendMessageToPlayerResponse* New(::google::protobuf::Arena* arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<ClientSendMessageToPlayerResponse>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const ClientSendMessageToPlayerResponse& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const ClientSendMessageToPlayerResponse& from) { ClientSendMessageToPlayerResponse::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(ClientSendMessageToPlayerResponse* other);
 private:
  template <typename T>
  friend ::absl::string_view(
      ::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "ClientSendMessageToPlayerResponse"; }

 protected:
  explicit ClientSendMessageToPlayerResponse(::google::protobuf::Arena* arena);
  ClientSendMessageToPlayerResponse(::google::protobuf::Arena* arena, const ClientSendMessageToPlayerResponse& from);
  ClientSendMessageToPlayerResponse(::google::protobuf::Arena* arena, ClientSendMessageToPlayerResponse&& from) noexcept
      : ClientSendMessageToPlayerResponse(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* GetClassData() const PROTOBUF_FINAL;
  static void* PlacementNew_(const void*, void* mem,
                             ::google::protobuf::Arena* arena);
  static constexpr auto InternalNewImpl_();
  static const ::google::protobuf::internal::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kMessageContentFieldNumber = 1,
    kSessionIdFieldNumber = 2,
  };
  // .MessageContent message_content = 1;
  bool has_message_content() const;
  void clear_message_content() ;
  const ::MessageContent& message_content() const;
  PROTOBUF_NODISCARD ::MessageContent* release_message_content();
  ::MessageContent* mutable_message_content();
  void set_allocated_message_content(::MessageContent* value);
  void unsafe_arena_set_allocated_message_content(::MessageContent* value);
  ::MessageContent* unsafe_arena_release_message_content();

  private:
  const ::MessageContent& _internal_message_content() const;
  ::MessageContent* _internal_mutable_message_content();

  public:
  // uint64 session_id = 2;
  void clear_session_id() ;
  ::uint64_t session_id() const;
  void set_session_id(::uint64_t value);

  private:
  ::uint64_t _internal_session_id() const;
  void _internal_set_session_id(::uint64_t value);

  public:
  // @@protoc_insertion_point(class_scope:ClientSendMessageToPlayerResponse)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      1, 2, 1,
      0, 2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const ClientSendMessageToPlayerResponse& from_msg);
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    ::MessageContent* message_content_;
    ::uint64_t session_id_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_proto_2fgame_2fgame_5fservice_2eproto;
};
// -------------------------------------------------------------------

class ClientSendMessageToPlayerRequest final
    : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:ClientSendMessageToPlayerRequest) */ {
 public:
  inline ClientSendMessageToPlayerRequest() : ClientSendMessageToPlayerRequest(nullptr) {}
  ~ClientSendMessageToPlayerRequest() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(ClientSendMessageToPlayerRequest* msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(ClientSendMessageToPlayerRequest));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR ClientSendMessageToPlayerRequest(
      ::google::protobuf::internal::ConstantInitialized);

  inline ClientSendMessageToPlayerRequest(const ClientSendMessageToPlayerRequest& from) : ClientSendMessageToPlayerRequest(nullptr, from) {}
  inline ClientSendMessageToPlayerRequest(ClientSendMessageToPlayerRequest&& from) noexcept
      : ClientSendMessageToPlayerRequest(nullptr, std::move(from)) {}
  inline ClientSendMessageToPlayerRequest& operator=(const ClientSendMessageToPlayerRequest& from) {
    CopyFrom(from);
    return *this;
  }
  inline ClientSendMessageToPlayerRequest& operator=(ClientSendMessageToPlayerRequest&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const ClientSendMessageToPlayerRequest& default_instance() {
    return *internal_default_instance();
  }
  static inline const ClientSendMessageToPlayerRequest* internal_default_instance() {
    return reinterpret_cast<const ClientSendMessageToPlayerRequest*>(
        &_ClientSendMessageToPlayerRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 1;
  friend void swap(ClientSendMessageToPlayerRequest& a, ClientSendMessageToPlayerRequest& b) { a.Swap(&b); }
  inline void Swap(ClientSendMessageToPlayerRequest* other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(ClientSendMessageToPlayerRequest* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  ClientSendMessageToPlayerRequest* New(::google::protobuf::Arena* arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<ClientSendMessageToPlayerRequest>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const ClientSendMessageToPlayerRequest& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const ClientSendMessageToPlayerRequest& from) { ClientSendMessageToPlayerRequest::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(ClientSendMessageToPlayerRequest* other);
 private:
  template <typename T>
  friend ::absl::string_view(
      ::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "ClientSendMessageToPlayerRequest"; }

 protected:
  explicit ClientSendMessageToPlayerRequest(::google::protobuf::Arena* arena);
  ClientSendMessageToPlayerRequest(::google::protobuf::Arena* arena, const ClientSendMessageToPlayerRequest& from);
  ClientSendMessageToPlayerRequest(::google::protobuf::Arena* arena, ClientSendMessageToPlayerRequest&& from) noexcept
      : ClientSendMessageToPlayerRequest(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* GetClassData() const PROTOBUF_FINAL;
  static void* PlacementNew_(const void*, void* mem,
                             ::google::protobuf::Arena* arena);
  static constexpr auto InternalNewImpl_();
  static const ::google::protobuf::internal::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kMessageContentFieldNumber = 1,
    kSessionIdFieldNumber = 2,
  };
  // .MessageContent message_content = 1;
  bool has_message_content() const;
  void clear_message_content() ;
  const ::MessageContent& message_content() const;
  PROTOBUF_NODISCARD ::MessageContent* release_message_content();
  ::MessageContent* mutable_message_content();
  void set_allocated_message_content(::MessageContent* value);
  void unsafe_arena_set_allocated_message_content(::MessageContent* value);
  ::MessageContent* unsafe_arena_release_message_content();

  private:
  const ::MessageContent& _internal_message_content() const;
  ::MessageContent* _internal_mutable_message_content();

  public:
  // uint64 session_id = 2;
  void clear_session_id() ;
  ::uint64_t session_id() const;
  void set_session_id(::uint64_t value);

  private:
  ::uint64_t _internal_session_id() const;
  void _internal_set_session_id(::uint64_t value);

  public:
  // @@protoc_insertion_point(class_scope:ClientSendMessageToPlayerRequest)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      1, 2, 1,
      0, 2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const ClientSendMessageToPlayerRequest& from_msg);
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    ::MessageContent* message_content_;
    ::uint64_t session_id_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_proto_2fgame_2fgame_5fservice_2eproto;
};

// ===================================================================


// -------------------------------------------------------------------

class GameService_Stub;
class GameService : public ::google::protobuf::Service {
 protected:
  GameService() = default;

 public:
  using Stub = GameService_Stub;

  GameService(const GameService&) = delete;
  GameService& operator=(const GameService&) = delete;
  virtual ~GameService() = default;

  static const ::google::protobuf::ServiceDescriptor* descriptor();

  virtual void PlayerEnterGameNode(::google::protobuf::RpcController* controller,
                        const ::PlayerEnterGameNodeRequest* request,
                        ::Empty* response,
                        ::google::protobuf::Closure* done);
  virtual void SendMessageToPlayer(::google::protobuf::RpcController* controller,
                        const ::NodeRouteMessageRequest* request,
                        ::NodeRouteMessageResponse* response,
                        ::google::protobuf::Closure* done);
  virtual void ClientSendMessageToPlayer(::google::protobuf::RpcController* controller,
                        const ::ClientSendMessageToPlayerRequest* request,
                        ::ClientSendMessageToPlayerResponse* response,
                        ::google::protobuf::Closure* done);
  virtual void CentreSendToPlayerViaGameNode(::google::protobuf::RpcController* controller,
                        const ::NodeRouteMessageRequest* request,
                        ::Empty* response,
                        ::google::protobuf::Closure* done);
  virtual void InvokePlayerService(::google::protobuf::RpcController* controller,
                        const ::NodeRouteMessageRequest* request,
                        ::NodeRouteMessageResponse* response,
                        ::google::protobuf::Closure* done);
  virtual void RouteNodeStringMsg(::google::protobuf::RpcController* controller,
                        const ::RouteMessageRequest* request,
                        ::RouteMessageResponse* response,
                        ::google::protobuf::Closure* done);
  virtual void RoutePlayerStringMsg(::google::protobuf::RpcController* controller,
                        const ::RoutePlayerMessageRequest* request,
                        ::RoutePlayerMessageResponse* response,
                        ::google::protobuf::Closure* done);
  virtual void UpdateSessionDetail(::google::protobuf::RpcController* controller,
                        const ::RegisterPlayerSessionRequest* request,
                        ::Empty* response,
                        ::google::protobuf::Closure* done);
  virtual void EnterScene(::google::protobuf::RpcController* controller,
                        const ::Centre2GsEnterSceneRequest* request,
                        ::Empty* response,
                        ::google::protobuf::Closure* done);
  virtual void CreateScene(::google::protobuf::RpcController* controller,
                        const ::CreateSceneRequest* request,
                        ::CreateSceneResponse* response,
                        ::google::protobuf::Closure* done);
  virtual void RegisterNodeSession(::google::protobuf::RpcController* controller,
                        const ::RegisterNodeSessionRequest* request,
                        ::RegisterNodeSessionResponse* response,
                        ::google::protobuf::Closure* done);

  // implements Service ----------------------------------------------
  const ::google::protobuf::ServiceDescriptor* GetDescriptor() override;

  void CallMethod(const ::google::protobuf::MethodDescriptor* method,
                  ::google::protobuf::RpcController* controller,
                  const ::google::protobuf::Message* request,
                  ::google::protobuf::Message* response,
                  ::google::protobuf::Closure* done) override;

  const ::google::protobuf::Message& GetRequestPrototype(
      const ::google::protobuf::MethodDescriptor* method) const override;

  const ::google::protobuf::Message& GetResponsePrototype(
      const ::google::protobuf::MethodDescriptor* method) const override;
};

class GameService_Stub final : public GameService {
 public:
  GameService_Stub(::google::protobuf::RpcChannel* channel);
  GameService_Stub(::google::protobuf::RpcChannel* channel,
                   ::google::protobuf::Service::ChannelOwnership ownership);

  GameService_Stub(const GameService_Stub&) = delete;
  GameService_Stub& operator=(const GameService_Stub&) = delete;

  ~GameService_Stub() override;

  inline ::google::protobuf::RpcChannel* channel() { return channel_; }

  // implements GameService ------------------------------------------
  void PlayerEnterGameNode(::google::protobuf::RpcController* controller,
                        const ::PlayerEnterGameNodeRequest* request,
                        ::Empty* response,
                        ::google::protobuf::Closure* done) override;
  void SendMessageToPlayer(::google::protobuf::RpcController* controller,
                        const ::NodeRouteMessageRequest* request,
                        ::NodeRouteMessageResponse* response,
                        ::google::protobuf::Closure* done) override;
  void ClientSendMessageToPlayer(::google::protobuf::RpcController* controller,
                        const ::ClientSendMessageToPlayerRequest* request,
                        ::ClientSendMessageToPlayerResponse* response,
                        ::google::protobuf::Closure* done) override;
  void CentreSendToPlayerViaGameNode(::google::protobuf::RpcController* controller,
                        const ::NodeRouteMessageRequest* request,
                        ::Empty* response,
                        ::google::protobuf::Closure* done) override;
  void InvokePlayerService(::google::protobuf::RpcController* controller,
                        const ::NodeRouteMessageRequest* request,
                        ::NodeRouteMessageResponse* response,
                        ::google::protobuf::Closure* done) override;
  void RouteNodeStringMsg(::google::protobuf::RpcController* controller,
                        const ::RouteMessageRequest* request,
                        ::RouteMessageResponse* response,
                        ::google::protobuf::Closure* done) override;
  void RoutePlayerStringMsg(::google::protobuf::RpcController* controller,
                        const ::RoutePlayerMessageRequest* request,
                        ::RoutePlayerMessageResponse* response,
                        ::google::protobuf::Closure* done) override;
  void UpdateSessionDetail(::google::protobuf::RpcController* controller,
                        const ::RegisterPlayerSessionRequest* request,
                        ::Empty* response,
                        ::google::protobuf::Closure* done) override;
  void EnterScene(::google::protobuf::RpcController* controller,
                        const ::Centre2GsEnterSceneRequest* request,
                        ::Empty* response,
                        ::google::protobuf::Closure* done) override;
  void CreateScene(::google::protobuf::RpcController* controller,
                        const ::CreateSceneRequest* request,
                        ::CreateSceneResponse* response,
                        ::google::protobuf::Closure* done) override;
  void RegisterNodeSession(::google::protobuf::RpcController* controller,
                        const ::RegisterNodeSessionRequest* request,
                        ::RegisterNodeSessionResponse* response,
                        ::google::protobuf::Closure* done) override;

 private:
  ::google::protobuf::RpcChannel* channel_;
  bool owns_channel_;
};
// ===================================================================



// ===================================================================


#ifdef __GNUC__
#pragma GCC diagnostic push
#pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif  // __GNUC__
// -------------------------------------------------------------------

// PlayerEnterGameNodeRequest

// uint64 player_id = 1;
inline void PlayerEnterGameNodeRequest::clear_player_id() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.player_id_ = ::uint64_t{0u};
}
inline ::uint64_t PlayerEnterGameNodeRequest::player_id() const {
  // @@protoc_insertion_point(field_get:PlayerEnterGameNodeRequest.player_id)
  return _internal_player_id();
}
inline void PlayerEnterGameNodeRequest::set_player_id(::uint64_t value) {
  _internal_set_player_id(value);
  // @@protoc_insertion_point(field_set:PlayerEnterGameNodeRequest.player_id)
}
inline ::uint64_t PlayerEnterGameNodeRequest::_internal_player_id() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.player_id_;
}
inline void PlayerEnterGameNodeRequest::_internal_set_player_id(::uint64_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.player_id_ = value;
}

// uint64 session_id = 2;
inline void PlayerEnterGameNodeRequest::clear_session_id() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.session_id_ = ::uint64_t{0u};
}
inline ::uint64_t PlayerEnterGameNodeRequest::session_id() const {
  // @@protoc_insertion_point(field_get:PlayerEnterGameNodeRequest.session_id)
  return _internal_session_id();
}
inline void PlayerEnterGameNodeRequest::set_session_id(::uint64_t value) {
  _internal_set_session_id(value);
  // @@protoc_insertion_point(field_set:PlayerEnterGameNodeRequest.session_id)
}
inline ::uint64_t PlayerEnterGameNodeRequest::_internal_session_id() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.session_id_;
}
inline void PlayerEnterGameNodeRequest::_internal_set_session_id(::uint64_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.session_id_ = value;
}

// uint32 centre_node_id = 3;
inline void PlayerEnterGameNodeRequest::clear_centre_node_id() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.centre_node_id_ = 0u;
}
inline ::uint32_t PlayerEnterGameNodeRequest::centre_node_id() const {
  // @@protoc_insertion_point(field_get:PlayerEnterGameNodeRequest.centre_node_id)
  return _internal_centre_node_id();
}
inline void PlayerEnterGameNodeRequest::set_centre_node_id(::uint32_t value) {
  _internal_set_centre_node_id(value);
  // @@protoc_insertion_point(field_set:PlayerEnterGameNodeRequest.centre_node_id)
}
inline ::uint32_t PlayerEnterGameNodeRequest::_internal_centre_node_id() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.centre_node_id_;
}
inline void PlayerEnterGameNodeRequest::_internal_set_centre_node_id(::uint32_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.centre_node_id_ = value;
}

// -------------------------------------------------------------------

// ClientSendMessageToPlayerRequest

// .MessageContent message_content = 1;
inline bool ClientSendMessageToPlayerRequest::has_message_content() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.message_content_ != nullptr);
  return value;
}
inline const ::MessageContent& ClientSendMessageToPlayerRequest::_internal_message_content() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  const ::MessageContent* p = _impl_.message_content_;
  return p != nullptr ? *p : reinterpret_cast<const ::MessageContent&>(::_MessageContent_default_instance_);
}
inline const ::MessageContent& ClientSendMessageToPlayerRequest::message_content() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:ClientSendMessageToPlayerRequest.message_content)
  return _internal_message_content();
}
inline void ClientSendMessageToPlayerRequest::unsafe_arena_set_allocated_message_content(::MessageContent* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.message_content_);
  }
  _impl_.message_content_ = reinterpret_cast<::MessageContent*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:ClientSendMessageToPlayerRequest.message_content)
}
inline ::MessageContent* ClientSendMessageToPlayerRequest::release_message_content() {
  ::google::protobuf::internal::TSanWrite(&_impl_);

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::MessageContent* released = _impl_.message_content_;
  _impl_.message_content_ = nullptr;
  if (::google::protobuf::internal::DebugHardenForceCopyInRelease()) {
    auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    if (GetArena() == nullptr) {
      delete old;
    }
  } else {
    if (GetArena() != nullptr) {
      released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    }
  }
  return released;
}
inline ::MessageContent* ClientSendMessageToPlayerRequest::unsafe_arena_release_message_content() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:ClientSendMessageToPlayerRequest.message_content)

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::MessageContent* temp = _impl_.message_content_;
  _impl_.message_content_ = nullptr;
  return temp;
}
inline ::MessageContent* ClientSendMessageToPlayerRequest::_internal_mutable_message_content() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.message_content_ == nullptr) {
    auto* p = ::google::protobuf::Message::DefaultConstruct<::MessageContent>(GetArena());
    _impl_.message_content_ = reinterpret_cast<::MessageContent*>(p);
  }
  return _impl_.message_content_;
}
inline ::MessageContent* ClientSendMessageToPlayerRequest::mutable_message_content() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  _impl_._has_bits_[0] |= 0x00000001u;
  ::MessageContent* _msg = _internal_mutable_message_content();
  // @@protoc_insertion_point(field_mutable:ClientSendMessageToPlayerRequest.message_content)
  return _msg;
}
inline void ClientSendMessageToPlayerRequest::set_allocated_message_content(::MessageContent* value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (message_arena == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.message_content_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = reinterpret_cast<::google::protobuf::MessageLite*>(value)->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }

  _impl_.message_content_ = reinterpret_cast<::MessageContent*>(value);
  // @@protoc_insertion_point(field_set_allocated:ClientSendMessageToPlayerRequest.message_content)
}

// uint64 session_id = 2;
inline void ClientSendMessageToPlayerRequest::clear_session_id() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.session_id_ = ::uint64_t{0u};
}
inline ::uint64_t ClientSendMessageToPlayerRequest::session_id() const {
  // @@protoc_insertion_point(field_get:ClientSendMessageToPlayerRequest.session_id)
  return _internal_session_id();
}
inline void ClientSendMessageToPlayerRequest::set_session_id(::uint64_t value) {
  _internal_set_session_id(value);
  // @@protoc_insertion_point(field_set:ClientSendMessageToPlayerRequest.session_id)
}
inline ::uint64_t ClientSendMessageToPlayerRequest::_internal_session_id() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.session_id_;
}
inline void ClientSendMessageToPlayerRequest::_internal_set_session_id(::uint64_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.session_id_ = value;
}

// -------------------------------------------------------------------

// ClientSendMessageToPlayerResponse

// .MessageContent message_content = 1;
inline bool ClientSendMessageToPlayerResponse::has_message_content() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.message_content_ != nullptr);
  return value;
}
inline const ::MessageContent& ClientSendMessageToPlayerResponse::_internal_message_content() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  const ::MessageContent* p = _impl_.message_content_;
  return p != nullptr ? *p : reinterpret_cast<const ::MessageContent&>(::_MessageContent_default_instance_);
}
inline const ::MessageContent& ClientSendMessageToPlayerResponse::message_content() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:ClientSendMessageToPlayerResponse.message_content)
  return _internal_message_content();
}
inline void ClientSendMessageToPlayerResponse::unsafe_arena_set_allocated_message_content(::MessageContent* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.message_content_);
  }
  _impl_.message_content_ = reinterpret_cast<::MessageContent*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:ClientSendMessageToPlayerResponse.message_content)
}
inline ::MessageContent* ClientSendMessageToPlayerResponse::release_message_content() {
  ::google::protobuf::internal::TSanWrite(&_impl_);

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::MessageContent* released = _impl_.message_content_;
  _impl_.message_content_ = nullptr;
  if (::google::protobuf::internal::DebugHardenForceCopyInRelease()) {
    auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    if (GetArena() == nullptr) {
      delete old;
    }
  } else {
    if (GetArena() != nullptr) {
      released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    }
  }
  return released;
}
inline ::MessageContent* ClientSendMessageToPlayerResponse::unsafe_arena_release_message_content() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:ClientSendMessageToPlayerResponse.message_content)

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::MessageContent* temp = _impl_.message_content_;
  _impl_.message_content_ = nullptr;
  return temp;
}
inline ::MessageContent* ClientSendMessageToPlayerResponse::_internal_mutable_message_content() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.message_content_ == nullptr) {
    auto* p = ::google::protobuf::Message::DefaultConstruct<::MessageContent>(GetArena());
    _impl_.message_content_ = reinterpret_cast<::MessageContent*>(p);
  }
  return _impl_.message_content_;
}
inline ::MessageContent* ClientSendMessageToPlayerResponse::mutable_message_content() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  _impl_._has_bits_[0] |= 0x00000001u;
  ::MessageContent* _msg = _internal_mutable_message_content();
  // @@protoc_insertion_point(field_mutable:ClientSendMessageToPlayerResponse.message_content)
  return _msg;
}
inline void ClientSendMessageToPlayerResponse::set_allocated_message_content(::MessageContent* value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (message_arena == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.message_content_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = reinterpret_cast<::google::protobuf::MessageLite*>(value)->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }

  _impl_.message_content_ = reinterpret_cast<::MessageContent*>(value);
  // @@protoc_insertion_point(field_set_allocated:ClientSendMessageToPlayerResponse.message_content)
}

// uint64 session_id = 2;
inline void ClientSendMessageToPlayerResponse::clear_session_id() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.session_id_ = ::uint64_t{0u};
}
inline ::uint64_t ClientSendMessageToPlayerResponse::session_id() const {
  // @@protoc_insertion_point(field_get:ClientSendMessageToPlayerResponse.session_id)
  return _internal_session_id();
}
inline void ClientSendMessageToPlayerResponse::set_session_id(::uint64_t value) {
  _internal_set_session_id(value);
  // @@protoc_insertion_point(field_set:ClientSendMessageToPlayerResponse.session_id)
}
inline ::uint64_t ClientSendMessageToPlayerResponse::_internal_session_id() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.session_id_;
}
inline void ClientSendMessageToPlayerResponse::_internal_set_session_id(::uint64_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.session_id_ = value;
}

// -------------------------------------------------------------------

// SessionDisconnectRequest

// uint64 player_id = 1;
inline void SessionDisconnectRequest::clear_player_id() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.player_id_ = ::uint64_t{0u};
}
inline ::uint64_t SessionDisconnectRequest::player_id() const {
  // @@protoc_insertion_point(field_get:SessionDisconnectRequest.player_id)
  return _internal_player_id();
}
inline void SessionDisconnectRequest::set_player_id(::uint64_t value) {
  _internal_set_player_id(value);
  // @@protoc_insertion_point(field_set:SessionDisconnectRequest.player_id)
}
inline ::uint64_t SessionDisconnectRequest::_internal_player_id() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.player_id_;
}
inline void SessionDisconnectRequest::_internal_set_player_id(::uint64_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.player_id_ = value;
}

// -------------------------------------------------------------------

// GameNodeConnectRequest

// .NetworkAddress rpc_client = 1;
inline bool GameNodeConnectRequest::has_rpc_client() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.rpc_client_ != nullptr);
  return value;
}
inline const ::NetworkAddress& GameNodeConnectRequest::_internal_rpc_client() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  const ::NetworkAddress* p = _impl_.rpc_client_;
  return p != nullptr ? *p : reinterpret_cast<const ::NetworkAddress&>(::_NetworkAddress_default_instance_);
}
inline const ::NetworkAddress& GameNodeConnectRequest::rpc_client() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:GameNodeConnectRequest.rpc_client)
  return _internal_rpc_client();
}
inline void GameNodeConnectRequest::unsafe_arena_set_allocated_rpc_client(::NetworkAddress* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.rpc_client_);
  }
  _impl_.rpc_client_ = reinterpret_cast<::NetworkAddress*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:GameNodeConnectRequest.rpc_client)
}
inline ::NetworkAddress* GameNodeConnectRequest::release_rpc_client() {
  ::google::protobuf::internal::TSanWrite(&_impl_);

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::NetworkAddress* released = _impl_.rpc_client_;
  _impl_.rpc_client_ = nullptr;
  if (::google::protobuf::internal::DebugHardenForceCopyInRelease()) {
    auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    if (GetArena() == nullptr) {
      delete old;
    }
  } else {
    if (GetArena() != nullptr) {
      released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    }
  }
  return released;
}
inline ::NetworkAddress* GameNodeConnectRequest::unsafe_arena_release_rpc_client() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:GameNodeConnectRequest.rpc_client)

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::NetworkAddress* temp = _impl_.rpc_client_;
  _impl_.rpc_client_ = nullptr;
  return temp;
}
inline ::NetworkAddress* GameNodeConnectRequest::_internal_mutable_rpc_client() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.rpc_client_ == nullptr) {
    auto* p = ::google::protobuf::Message::DefaultConstruct<::NetworkAddress>(GetArena());
    _impl_.rpc_client_ = reinterpret_cast<::NetworkAddress*>(p);
  }
  return _impl_.rpc_client_;
}
inline ::NetworkAddress* GameNodeConnectRequest::mutable_rpc_client() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  _impl_._has_bits_[0] |= 0x00000001u;
  ::NetworkAddress* _msg = _internal_mutable_rpc_client();
  // @@protoc_insertion_point(field_mutable:GameNodeConnectRequest.rpc_client)
  return _msg;
}
inline void GameNodeConnectRequest::set_allocated_rpc_client(::NetworkAddress* value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (message_arena == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.rpc_client_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = reinterpret_cast<::google::protobuf::MessageLite*>(value)->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }

  _impl_.rpc_client_ = reinterpret_cast<::NetworkAddress*>(value);
  // @@protoc_insertion_point(field_set_allocated:GameNodeConnectRequest.rpc_client)
}

// uint32 gate_node_id = 2;
inline void GameNodeConnectRequest::clear_gate_node_id() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.gate_node_id_ = 0u;
}
inline ::uint32_t GameNodeConnectRequest::gate_node_id() const {
  // @@protoc_insertion_point(field_get:GameNodeConnectRequest.gate_node_id)
  return _internal_gate_node_id();
}
inline void GameNodeConnectRequest::set_gate_node_id(::uint32_t value) {
  _internal_set_gate_node_id(value);
  // @@protoc_insertion_point(field_set:GameNodeConnectRequest.gate_node_id)
}
inline ::uint32_t GameNodeConnectRequest::_internal_gate_node_id() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.gate_node_id_;
}
inline void GameNodeConnectRequest::_internal_set_gate_node_id(::uint32_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.gate_node_id_ = value;
}

// -------------------------------------------------------------------

// RegisterPlayerSessionRequest

// uint64 session_id = 1;
inline void RegisterPlayerSessionRequest::clear_session_id() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.session_id_ = ::uint64_t{0u};
}
inline ::uint64_t RegisterPlayerSessionRequest::session_id() const {
  // @@protoc_insertion_point(field_get:RegisterPlayerSessionRequest.session_id)
  return _internal_session_id();
}
inline void RegisterPlayerSessionRequest::set_session_id(::uint64_t value) {
  _internal_set_session_id(value);
  // @@protoc_insertion_point(field_set:RegisterPlayerSessionRequest.session_id)
}
inline ::uint64_t RegisterPlayerSessionRequest::_internal_session_id() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.session_id_;
}
inline void RegisterPlayerSessionRequest::_internal_set_session_id(::uint64_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.session_id_ = value;
}

// uint64 player_id = 2;
inline void RegisterPlayerSessionRequest::clear_player_id() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.player_id_ = ::uint64_t{0u};
}
inline ::uint64_t RegisterPlayerSessionRequest::player_id() const {
  // @@protoc_insertion_point(field_get:RegisterPlayerSessionRequest.player_id)
  return _internal_player_id();
}
inline void RegisterPlayerSessionRequest::set_player_id(::uint64_t value) {
  _internal_set_player_id(value);
  // @@protoc_insertion_point(field_set:RegisterPlayerSessionRequest.player_id)
}
inline ::uint64_t RegisterPlayerSessionRequest::_internal_player_id() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.player_id_;
}
inline void RegisterPlayerSessionRequest::_internal_set_player_id(::uint64_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.player_id_ = value;
}

// -------------------------------------------------------------------

// Centre2GsEnterSceneRequest

// uint64 player_id = 1;
inline void Centre2GsEnterSceneRequest::clear_player_id() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.player_id_ = ::uint64_t{0u};
}
inline ::uint64_t Centre2GsEnterSceneRequest::player_id() const {
  // @@protoc_insertion_point(field_get:Centre2GsEnterSceneRequest.player_id)
  return _internal_player_id();
}
inline void Centre2GsEnterSceneRequest::set_player_id(::uint64_t value) {
  _internal_set_player_id(value);
  // @@protoc_insertion_point(field_set:Centre2GsEnterSceneRequest.player_id)
}
inline ::uint64_t Centre2GsEnterSceneRequest::_internal_player_id() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.player_id_;
}
inline void Centre2GsEnterSceneRequest::_internal_set_player_id(::uint64_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.player_id_ = value;
}

// uint64 scene_id = 2;
inline void Centre2GsEnterSceneRequest::clear_scene_id() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.scene_id_ = ::uint64_t{0u};
}
inline ::uint64_t Centre2GsEnterSceneRequest::scene_id() const {
  // @@protoc_insertion_point(field_get:Centre2GsEnterSceneRequest.scene_id)
  return _internal_scene_id();
}
inline void Centre2GsEnterSceneRequest::set_scene_id(::uint64_t value) {
  _internal_set_scene_id(value);
  // @@protoc_insertion_point(field_set:Centre2GsEnterSceneRequest.scene_id)
}
inline ::uint64_t Centre2GsEnterSceneRequest::_internal_scene_id() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.scene_id_;
}
inline void Centre2GsEnterSceneRequest::_internal_set_scene_id(::uint64_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.scene_id_ = value;
}

// -------------------------------------------------------------------

// CreateSceneRequest

// uint32 config_id = 1;
inline void CreateSceneRequest::clear_config_id() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.config_id_ = 0u;
}
inline ::uint32_t CreateSceneRequest::config_id() const {
  // @@protoc_insertion_point(field_get:CreateSceneRequest.config_id)
  return _internal_config_id();
}
inline void CreateSceneRequest::set_config_id(::uint32_t value) {
  _internal_set_config_id(value);
  // @@protoc_insertion_point(field_set:CreateSceneRequest.config_id)
}
inline ::uint32_t CreateSceneRequest::_internal_config_id() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.config_id_;
}
inline void CreateSceneRequest::_internal_set_config_id(::uint32_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.config_id_ = value;
}

// -------------------------------------------------------------------

// CreateSceneResponse

// .SceneInfoPBComponent scene_info = 1;
inline bool CreateSceneResponse::has_scene_info() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.scene_info_ != nullptr);
  return value;
}
inline const ::SceneInfoPBComponent& CreateSceneResponse::_internal_scene_info() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  const ::SceneInfoPBComponent* p = _impl_.scene_info_;
  return p != nullptr ? *p : reinterpret_cast<const ::SceneInfoPBComponent&>(::_SceneInfoPBComponent_default_instance_);
}
inline const ::SceneInfoPBComponent& CreateSceneResponse::scene_info() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:CreateSceneResponse.scene_info)
  return _internal_scene_info();
}
inline void CreateSceneResponse::unsafe_arena_set_allocated_scene_info(::SceneInfoPBComponent* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.scene_info_);
  }
  _impl_.scene_info_ = reinterpret_cast<::SceneInfoPBComponent*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:CreateSceneResponse.scene_info)
}
inline ::SceneInfoPBComponent* CreateSceneResponse::release_scene_info() {
  ::google::protobuf::internal::TSanWrite(&_impl_);

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::SceneInfoPBComponent* released = _impl_.scene_info_;
  _impl_.scene_info_ = nullptr;
  if (::google::protobuf::internal::DebugHardenForceCopyInRelease()) {
    auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    if (GetArena() == nullptr) {
      delete old;
    }
  } else {
    if (GetArena() != nullptr) {
      released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    }
  }
  return released;
}
inline ::SceneInfoPBComponent* CreateSceneResponse::unsafe_arena_release_scene_info() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:CreateSceneResponse.scene_info)

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::SceneInfoPBComponent* temp = _impl_.scene_info_;
  _impl_.scene_info_ = nullptr;
  return temp;
}
inline ::SceneInfoPBComponent* CreateSceneResponse::_internal_mutable_scene_info() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.scene_info_ == nullptr) {
    auto* p = ::google::protobuf::Message::DefaultConstruct<::SceneInfoPBComponent>(GetArena());
    _impl_.scene_info_ = reinterpret_cast<::SceneInfoPBComponent*>(p);
  }
  return _impl_.scene_info_;
}
inline ::SceneInfoPBComponent* CreateSceneResponse::mutable_scene_info() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  _impl_._has_bits_[0] |= 0x00000001u;
  ::SceneInfoPBComponent* _msg = _internal_mutable_scene_info();
  // @@protoc_insertion_point(field_mutable:CreateSceneResponse.scene_info)
  return _msg;
}
inline void CreateSceneResponse::set_allocated_scene_info(::SceneInfoPBComponent* value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (message_arena == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.scene_info_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = reinterpret_cast<::google::protobuf::MessageLite*>(value)->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }

  _impl_.scene_info_ = reinterpret_cast<::SceneInfoPBComponent*>(value);
  // @@protoc_insertion_point(field_set_allocated:CreateSceneResponse.scene_info)
}

#ifdef __GNUC__
#pragma GCC diagnostic pop
#endif  // __GNUC__

// @@protoc_insertion_point(namespace_scope)


// @@protoc_insertion_point(global_scope)

#include "google/protobuf/port_undef.inc"

#endif  // proto_2fgame_2fgame_5fservice_2eproto_2epb_2eh
