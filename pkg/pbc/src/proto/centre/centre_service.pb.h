// Generated by the protocol buffer compiler.  DO NOT EDIT!
// NO CHECKED-IN PROTOBUF GENCODE
// source: proto/centre/centre_service.proto
// Protobuf C++ Version: 5.29.0

#ifndef proto_2fcentre_2fcentre_5fservice_2eproto_2epb_2eh
#define proto_2fcentre_2fcentre_5fservice_2eproto_2epb_2eh

#include <limits>
#include <string>
#include <type_traits>
#include <utility>

#include "google/protobuf/runtime_version.h"
#if PROTOBUF_VERSION != 5029000
#error "Protobuf C++ gencode is built with an incompatible version of"
#error "Protobuf C++ headers/runtime. See"
#error "https://protobuf.dev/support/cross-version-runtime-guarantee/#cpp"
#endif
#include "google/protobuf/io/coded_stream.h"
#include "google/protobuf/arena.h"
#include "google/protobuf/arenastring.h"
#include "google/protobuf/generated_message_bases.h"
#include "google/protobuf/generated_message_tctable_decl.h"
#include "google/protobuf/generated_message_util.h"
#include "google/protobuf/metadata_lite.h"
#include "google/protobuf/generated_message_reflection.h"
#include "google/protobuf/message.h"
#include "google/protobuf/message_lite.h"
#include "google/protobuf/repeated_field.h"  // IWYU pragma: export
#include "google/protobuf/extension_set.h"  // IWYU pragma: export
#include "google/protobuf/service.h"
#include "google/protobuf/unknown_field_set.h"
#include "proto/common/common.pb.h"
#include "proto/common/empty.pb.h"
#include "proto/common/session.pb.h"
#include "proto/common/message.pb.h"
#include "proto/common/tip.pb.h"
// @@protoc_insertion_point(includes)

// Must be included last.
#include "google/protobuf/port_def.inc"

#define PROTOBUF_INTERNAL_EXPORT_proto_2fcentre_2fcentre_5fservice_2eproto

namespace google {
namespace protobuf {
namespace internal {
template <typename T>
::absl::string_view GetAnyMessageName();
}  // namespace internal
}  // namespace protobuf
}  // namespace google

// Internal implementation detail -- do not use these members.
struct TableStruct_proto_2fcentre_2fcentre_5fservice_2eproto {
  static const ::uint32_t offsets[];
};
extern const ::google::protobuf::internal::DescriptorTable
    descriptor_table_proto_2fcentre_2fcentre_5fservice_2eproto;
class CentreEnterGameRequest;
struct CentreEnterGameRequestDefaultTypeInternal;
extern CentreEnterGameRequestDefaultTypeInternal _CentreEnterGameRequest_default_instance_;
class CentreLoginRequest;
struct CentreLoginRequestDefaultTypeInternal;
extern CentreLoginRequestDefaultTypeInternal _CentreLoginRequest_default_instance_;
class CentreLoginResponse;
struct CentreLoginResponseDefaultTypeInternal;
extern CentreLoginResponseDefaultTypeInternal _CentreLoginResponse_default_instance_;
class CentrePlayerGameNodeEntryRequest;
struct CentrePlayerGameNodeEntryRequestDefaultTypeInternal;
extern CentrePlayerGameNodeEntryRequestDefaultTypeInternal _CentrePlayerGameNodeEntryRequest_default_instance_;
class EnterGameNodeSuccessRequest;
struct EnterGameNodeSuccessRequestDefaultTypeInternal;
extern EnterGameNodeSuccessRequestDefaultTypeInternal _EnterGameNodeSuccessRequest_default_instance_;
class GateClientMessageRequest;
struct GateClientMessageRequestDefaultTypeInternal;
extern GateClientMessageRequestDefaultTypeInternal _GateClientMessageRequest_default_instance_;
class InitSceneNodeRequest;
struct InitSceneNodeRequestDefaultTypeInternal;
extern InitSceneNodeRequestDefaultTypeInternal _InitSceneNodeRequest_default_instance_;
class LoginNodeLeaveGameRequest;
struct LoginNodeLeaveGameRequestDefaultTypeInternal;
extern LoginNodeLeaveGameRequestDefaultTypeInternal _LoginNodeLeaveGameRequest_default_instance_;
namespace google {
namespace protobuf {
}  // namespace protobuf
}  // namespace google


// ===================================================================


// -------------------------------------------------------------------

class LoginNodeLeaveGameRequest final
    : public ::google::protobuf::internal::ZeroFieldsBase
/* @@protoc_insertion_point(class_definition:LoginNodeLeaveGameRequest) */ {
 public:
  inline LoginNodeLeaveGameRequest() : LoginNodeLeaveGameRequest(nullptr) {}

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(LoginNodeLeaveGameRequest* msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(LoginNodeLeaveGameRequest));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR LoginNodeLeaveGameRequest(
      ::google::protobuf::internal::ConstantInitialized);

  inline LoginNodeLeaveGameRequest(const LoginNodeLeaveGameRequest& from) : LoginNodeLeaveGameRequest(nullptr, from) {}
  inline LoginNodeLeaveGameRequest(LoginNodeLeaveGameRequest&& from) noexcept
      : LoginNodeLeaveGameRequest(nullptr, std::move(from)) {}
  inline LoginNodeLeaveGameRequest& operator=(const LoginNodeLeaveGameRequest& from) {
    CopyFrom(from);
    return *this;
  }
  inline LoginNodeLeaveGameRequest& operator=(LoginNodeLeaveGameRequest&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const LoginNodeLeaveGameRequest& default_instance() {
    return *internal_default_instance();
  }
  static inline const LoginNodeLeaveGameRequest* internal_default_instance() {
    return reinterpret_cast<const LoginNodeLeaveGameRequest*>(
        &_LoginNodeLeaveGameRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 1;
  friend void swap(LoginNodeLeaveGameRequest& a, LoginNodeLeaveGameRequest& b) { a.Swap(&b); }
  inline void Swap(LoginNodeLeaveGameRequest* other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(LoginNodeLeaveGameRequest* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  LoginNodeLeaveGameRequest* New(::google::protobuf::Arena* arena = nullptr) const {
    return ::google::protobuf::internal::ZeroFieldsBase::DefaultConstruct<LoginNodeLeaveGameRequest>(arena);
  }
  using ::google::protobuf::internal::ZeroFieldsBase::CopyFrom;
  inline void CopyFrom(const LoginNodeLeaveGameRequest& from) {
    ::google::protobuf::internal::ZeroFieldsBase::CopyImpl(*this, from);
  }
  using ::google::protobuf::internal::ZeroFieldsBase::MergeFrom;
  void MergeFrom(const LoginNodeLeaveGameRequest& from) {
    ::google::protobuf::internal::ZeroFieldsBase::MergeImpl(*this, from);
  }

  public:
  bool IsInitialized() const {
    return true;
  }
 private:
  template <typename T>
  friend ::absl::string_view(
      ::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "LoginNodeLeaveGameRequest"; }

 protected:
  explicit LoginNodeLeaveGameRequest(::google::protobuf::Arena* arena);
  LoginNodeLeaveGameRequest(::google::protobuf::Arena* arena, const LoginNodeLeaveGameRequest& from);
  LoginNodeLeaveGameRequest(::google::protobuf::Arena* arena, LoginNodeLeaveGameRequest&& from) noexcept
      : LoginNodeLeaveGameRequest(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* GetClassData() const PROTOBUF_FINAL;
  static void* PlacementNew_(const void*, void* mem,
                             ::google::protobuf::Arena* arena);
  static constexpr auto InternalNewImpl_();
  static const ::google::protobuf::internal::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  // @@protoc_insertion_point(class_scope:LoginNodeLeaveGameRequest)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      0, 0, 0,
      0, 2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const LoginNodeLeaveGameRequest& from_msg);
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  friend struct ::TableStruct_proto_2fcentre_2fcentre_5fservice_2eproto;
};
// -------------------------------------------------------------------

class InitSceneNodeRequest final
    : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:InitSceneNodeRequest) */ {
 public:
  inline InitSceneNodeRequest() : InitSceneNodeRequest(nullptr) {}
  ~InitSceneNodeRequest() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(InitSceneNodeRequest* msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(InitSceneNodeRequest));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR InitSceneNodeRequest(
      ::google::protobuf::internal::ConstantInitialized);

  inline InitSceneNodeRequest(const InitSceneNodeRequest& from) : InitSceneNodeRequest(nullptr, from) {}
  inline InitSceneNodeRequest(InitSceneNodeRequest&& from) noexcept
      : InitSceneNodeRequest(nullptr, std::move(from)) {}
  inline InitSceneNodeRequest& operator=(const InitSceneNodeRequest& from) {
    CopyFrom(from);
    return *this;
  }
  inline InitSceneNodeRequest& operator=(InitSceneNodeRequest&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const InitSceneNodeRequest& default_instance() {
    return *internal_default_instance();
  }
  static inline const InitSceneNodeRequest* internal_default_instance() {
    return reinterpret_cast<const InitSceneNodeRequest*>(
        &_InitSceneNodeRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 5;
  friend void swap(InitSceneNodeRequest& a, InitSceneNodeRequest& b) { a.Swap(&b); }
  inline void Swap(InitSceneNodeRequest* other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(InitSceneNodeRequest* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  InitSceneNodeRequest* New(::google::protobuf::Arena* arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<InitSceneNodeRequest>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const InitSceneNodeRequest& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const InitSceneNodeRequest& from) { InitSceneNodeRequest::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(InitSceneNodeRequest* other);
 private:
  template <typename T>
  friend ::absl::string_view(
      ::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "InitSceneNodeRequest"; }

 protected:
  explicit InitSceneNodeRequest(::google::protobuf::Arena* arena);
  InitSceneNodeRequest(::google::protobuf::Arena* arena, const InitSceneNodeRequest& from);
  InitSceneNodeRequest(::google::protobuf::Arena* arena, InitSceneNodeRequest&& from) noexcept
      : InitSceneNodeRequest(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* GetClassData() const PROTOBUF_FINAL;
  static void* PlacementNew_(const void*, void* mem,
                             ::google::protobuf::Arena* arena);
  static constexpr auto InternalNewImpl_();
  static const ::google::protobuf::internal::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kNodeIdFieldNumber = 1,
    kSceneNodeTypeFieldNumber = 2,
  };
  // uint32 node_id = 1;
  void clear_node_id() ;
  ::uint32_t node_id() const;
  void set_node_id(::uint32_t value);

  private:
  ::uint32_t _internal_node_id() const;
  void _internal_set_node_id(::uint32_t value);

  public:
  // uint32 scene_node_type = 2;
  void clear_scene_node_type() ;
  ::uint32_t scene_node_type() const;
  void set_scene_node_type(::uint32_t value);

  private:
  ::uint32_t _internal_scene_node_type() const;
  void _internal_set_scene_node_type(::uint32_t value);

  public:
  // @@protoc_insertion_point(class_scope:InitSceneNodeRequest)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      1, 2, 0,
      0, 2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const InitSceneNodeRequest& from_msg);
    ::uint32_t node_id_;
    ::uint32_t scene_node_type_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_proto_2fcentre_2fcentre_5fservice_2eproto;
};
// -------------------------------------------------------------------

class EnterGameNodeSuccessRequest final
    : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:EnterGameNodeSuccessRequest) */ {
 public:
  inline EnterGameNodeSuccessRequest() : EnterGameNodeSuccessRequest(nullptr) {}
  ~EnterGameNodeSuccessRequest() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(EnterGameNodeSuccessRequest* msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(EnterGameNodeSuccessRequest));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR EnterGameNodeSuccessRequest(
      ::google::protobuf::internal::ConstantInitialized);

  inline EnterGameNodeSuccessRequest(const EnterGameNodeSuccessRequest& from) : EnterGameNodeSuccessRequest(nullptr, from) {}
  inline EnterGameNodeSuccessRequest(EnterGameNodeSuccessRequest&& from) noexcept
      : EnterGameNodeSuccessRequest(nullptr, std::move(from)) {}
  inline EnterGameNodeSuccessRequest& operator=(const EnterGameNodeSuccessRequest& from) {
    CopyFrom(from);
    return *this;
  }
  inline EnterGameNodeSuccessRequest& operator=(EnterGameNodeSuccessRequest&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const EnterGameNodeSuccessRequest& default_instance() {
    return *internal_default_instance();
  }
  static inline const EnterGameNodeSuccessRequest* internal_default_instance() {
    return reinterpret_cast<const EnterGameNodeSuccessRequest*>(
        &_EnterGameNodeSuccessRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 2;
  friend void swap(EnterGameNodeSuccessRequest& a, EnterGameNodeSuccessRequest& b) { a.Swap(&b); }
  inline void Swap(EnterGameNodeSuccessRequest* other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(EnterGameNodeSuccessRequest* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  EnterGameNodeSuccessRequest* New(::google::protobuf::Arena* arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<EnterGameNodeSuccessRequest>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const EnterGameNodeSuccessRequest& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const EnterGameNodeSuccessRequest& from) { EnterGameNodeSuccessRequest::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(EnterGameNodeSuccessRequest* other);
 private:
  template <typename T>
  friend ::absl::string_view(
      ::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "EnterGameNodeSuccessRequest"; }

 protected:
  explicit EnterGameNodeSuccessRequest(::google::protobuf::Arena* arena);
  EnterGameNodeSuccessRequest(::google::protobuf::Arena* arena, const EnterGameNodeSuccessRequest& from);
  EnterGameNodeSuccessRequest(::google::protobuf::Arena* arena, EnterGameNodeSuccessRequest&& from) noexcept
      : EnterGameNodeSuccessRequest(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* GetClassData() const PROTOBUF_FINAL;
  static void* PlacementNew_(const void*, void* mem,
                             ::google::protobuf::Arena* arena);
  static constexpr auto InternalNewImpl_();
  static const ::google::protobuf::internal::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kPlayerIdFieldNumber = 1,
    kSceneNodeIdFieldNumber = 2,
  };
  // uint64 player_id = 1;
  void clear_player_id() ;
  ::uint64_t player_id() const;
  void set_player_id(::uint64_t value);

  private:
  ::uint64_t _internal_player_id() const;
  void _internal_set_player_id(::uint64_t value);

  public:
  // uint32 scene_node_id = 2;
  void clear_scene_node_id() ;
  ::uint32_t scene_node_id() const;
  void set_scene_node_id(::uint32_t value);

  private:
  ::uint32_t _internal_scene_node_id() const;
  void _internal_set_scene_node_id(::uint32_t value);

  public:
  // @@protoc_insertion_point(class_scope:EnterGameNodeSuccessRequest)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      1, 2, 0,
      0, 2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const EnterGameNodeSuccessRequest& from_msg);
    ::uint64_t player_id_;
    ::uint32_t scene_node_id_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_proto_2fcentre_2fcentre_5fservice_2eproto;
};
// -------------------------------------------------------------------

class CentreLoginRequest final
    : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:CentreLoginRequest) */ {
 public:
  inline CentreLoginRequest() : CentreLoginRequest(nullptr) {}
  ~CentreLoginRequest() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(CentreLoginRequest* msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(CentreLoginRequest));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR CentreLoginRequest(
      ::google::protobuf::internal::ConstantInitialized);

  inline CentreLoginRequest(const CentreLoginRequest& from) : CentreLoginRequest(nullptr, from) {}
  inline CentreLoginRequest(CentreLoginRequest&& from) noexcept
      : CentreLoginRequest(nullptr, std::move(from)) {}
  inline CentreLoginRequest& operator=(const CentreLoginRequest& from) {
    CopyFrom(from);
    return *this;
  }
  inline CentreLoginRequest& operator=(CentreLoginRequest&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const CentreLoginRequest& default_instance() {
    return *internal_default_instance();
  }
  static inline const CentreLoginRequest* internal_default_instance() {
    return reinterpret_cast<const CentreLoginRequest*>(
        &_CentreLoginRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 6;
  friend void swap(CentreLoginRequest& a, CentreLoginRequest& b) { a.Swap(&b); }
  inline void Swap(CentreLoginRequest* other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(CentreLoginRequest* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  CentreLoginRequest* New(::google::protobuf::Arena* arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<CentreLoginRequest>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const CentreLoginRequest& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const CentreLoginRequest& from) { CentreLoginRequest::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(CentreLoginRequest* other);
 private:
  template <typename T>
  friend ::absl::string_view(
      ::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "CentreLoginRequest"; }

 protected:
  explicit CentreLoginRequest(::google::protobuf::Arena* arena);
  CentreLoginRequest(::google::protobuf::Arena* arena, const CentreLoginRequest& from);
  CentreLoginRequest(::google::protobuf::Arena* arena, CentreLoginRequest&& from) noexcept
      : CentreLoginRequest(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* GetClassData() const PROTOBUF_FINAL;
  static void* PlacementNew_(const void*, void* mem,
                             ::google::protobuf::Arena* arena);
  static constexpr auto InternalNewImpl_();
  static const ::google::protobuf::internal::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kAccountFieldNumber = 1,
    kPasswordFieldNumber = 2,
  };
  // string account = 1;
  void clear_account() ;
  const std::string& account() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_account(Arg_&& arg, Args_... args);
  std::string* mutable_account();
  PROTOBUF_NODISCARD std::string* release_account();
  void set_allocated_account(std::string* value);

  private:
  const std::string& _internal_account() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_account(
      const std::string& value);
  std::string* _internal_mutable_account();

  public:
  // string password = 2;
  void clear_password() ;
  const std::string& password() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_password(Arg_&& arg, Args_... args);
  std::string* mutable_password();
  PROTOBUF_NODISCARD std::string* release_password();
  void set_allocated_password(std::string* value);

  private:
  const std::string& _internal_password() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_password(
      const std::string& value);
  std::string* _internal_mutable_password();

  public:
  // @@protoc_insertion_point(class_scope:CentreLoginRequest)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      1, 2, 0,
      42, 2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const CentreLoginRequest& from_msg);
    ::google::protobuf::internal::ArenaStringPtr account_;
    ::google::protobuf::internal::ArenaStringPtr password_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_proto_2fcentre_2fcentre_5fservice_2eproto;
};
// -------------------------------------------------------------------

class CentreEnterGameRequest final
    : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:CentreEnterGameRequest) */ {
 public:
  inline CentreEnterGameRequest() : CentreEnterGameRequest(nullptr) {}
  ~CentreEnterGameRequest() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(CentreEnterGameRequest* msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(CentreEnterGameRequest));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR CentreEnterGameRequest(
      ::google::protobuf::internal::ConstantInitialized);

  inline CentreEnterGameRequest(const CentreEnterGameRequest& from) : CentreEnterGameRequest(nullptr, from) {}
  inline CentreEnterGameRequest(CentreEnterGameRequest&& from) noexcept
      : CentreEnterGameRequest(nullptr, std::move(from)) {}
  inline CentreEnterGameRequest& operator=(const CentreEnterGameRequest& from) {
    CopyFrom(from);
    return *this;
  }
  inline CentreEnterGameRequest& operator=(CentreEnterGameRequest&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const CentreEnterGameRequest& default_instance() {
    return *internal_default_instance();
  }
  static inline const CentreEnterGameRequest* internal_default_instance() {
    return reinterpret_cast<const CentreEnterGameRequest*>(
        &_CentreEnterGameRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 3;
  friend void swap(CentreEnterGameRequest& a, CentreEnterGameRequest& b) { a.Swap(&b); }
  inline void Swap(CentreEnterGameRequest* other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(CentreEnterGameRequest* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  CentreEnterGameRequest* New(::google::protobuf::Arena* arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<CentreEnterGameRequest>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const CentreEnterGameRequest& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const CentreEnterGameRequest& from) { CentreEnterGameRequest::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(CentreEnterGameRequest* other);
 private:
  template <typename T>
  friend ::absl::string_view(
      ::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "CentreEnterGameRequest"; }

 protected:
  explicit CentreEnterGameRequest(::google::protobuf::Arena* arena);
  CentreEnterGameRequest(::google::protobuf::Arena* arena, const CentreEnterGameRequest& from);
  CentreEnterGameRequest(::google::protobuf::Arena* arena, CentreEnterGameRequest&& from) noexcept
      : CentreEnterGameRequest(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* GetClassData() const PROTOBUF_FINAL;
  static void* PlacementNew_(const void*, void* mem,
                             ::google::protobuf::Arena* arena);
  static constexpr auto InternalNewImpl_();
  static const ::google::protobuf::internal::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kPlayerIdFieldNumber = 1,
  };
  // uint64 player_id = 1;
  void clear_player_id() ;
  ::uint64_t player_id() const;
  void set_player_id(::uint64_t value);

  private:
  ::uint64_t _internal_player_id() const;
  void _internal_set_player_id(::uint64_t value);

  public:
  // @@protoc_insertion_point(class_scope:CentreEnterGameRequest)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      0, 1, 0,
      0, 2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const CentreEnterGameRequest& from_msg);
    ::uint64_t player_id_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_proto_2fcentre_2fcentre_5fservice_2eproto;
};
// -------------------------------------------------------------------

class GateClientMessageRequest final
    : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:GateClientMessageRequest) */ {
 public:
  inline GateClientMessageRequest() : GateClientMessageRequest(nullptr) {}
  ~GateClientMessageRequest() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(GateClientMessageRequest* msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(GateClientMessageRequest));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR GateClientMessageRequest(
      ::google::protobuf::internal::ConstantInitialized);

  inline GateClientMessageRequest(const GateClientMessageRequest& from) : GateClientMessageRequest(nullptr, from) {}
  inline GateClientMessageRequest(GateClientMessageRequest&& from) noexcept
      : GateClientMessageRequest(nullptr, std::move(from)) {}
  inline GateClientMessageRequest& operator=(const GateClientMessageRequest& from) {
    CopyFrom(from);
    return *this;
  }
  inline GateClientMessageRequest& operator=(GateClientMessageRequest&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const GateClientMessageRequest& default_instance() {
    return *internal_default_instance();
  }
  static inline const GateClientMessageRequest* internal_default_instance() {
    return reinterpret_cast<const GateClientMessageRequest*>(
        &_GateClientMessageRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 0;
  friend void swap(GateClientMessageRequest& a, GateClientMessageRequest& b) { a.Swap(&b); }
  inline void Swap(GateClientMessageRequest* other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(GateClientMessageRequest* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  GateClientMessageRequest* New(::google::protobuf::Arena* arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<GateClientMessageRequest>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const GateClientMessageRequest& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const GateClientMessageRequest& from) { GateClientMessageRequest::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(GateClientMessageRequest* other);
 private:
  template <typename T>
  friend ::absl::string_view(
      ::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "GateClientMessageRequest"; }

 protected:
  explicit GateClientMessageRequest(::google::protobuf::Arena* arena);
  GateClientMessageRequest(::google::protobuf::Arena* arena, const GateClientMessageRequest& from);
  GateClientMessageRequest(::google::protobuf::Arena* arena, GateClientMessageRequest&& from) noexcept
      : GateClientMessageRequest(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* GetClassData() const PROTOBUF_FINAL;
  static void* PlacementNew_(const void*, void* mem,
                             ::google::protobuf::Arena* arena);
  static constexpr auto InternalNewImpl_();
  static const ::google::protobuf::internal::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kRpcClientFieldNumber = 1,
  };
  // .NetworkAddress rpc_client = 1;
  bool has_rpc_client() const;
  void clear_rpc_client() ;
  const ::NetworkAddress& rpc_client() const;
  PROTOBUF_NODISCARD ::NetworkAddress* release_rpc_client();
  ::NetworkAddress* mutable_rpc_client();
  void set_allocated_rpc_client(::NetworkAddress* value);
  void unsafe_arena_set_allocated_rpc_client(::NetworkAddress* value);
  ::NetworkAddress* unsafe_arena_release_rpc_client();

  private:
  const ::NetworkAddress& _internal_rpc_client() const;
  ::NetworkAddress* _internal_mutable_rpc_client();

  public:
  // @@protoc_insertion_point(class_scope:GateClientMessageRequest)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      0, 1, 1,
      0, 2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const GateClientMessageRequest& from_msg);
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    ::NetworkAddress* rpc_client_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_proto_2fcentre_2fcentre_5fservice_2eproto;
};
// -------------------------------------------------------------------

class CentrePlayerGameNodeEntryRequest final
    : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:CentrePlayerGameNodeEntryRequest) */ {
 public:
  inline CentrePlayerGameNodeEntryRequest() : CentrePlayerGameNodeEntryRequest(nullptr) {}
  ~CentrePlayerGameNodeEntryRequest() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(CentrePlayerGameNodeEntryRequest* msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(CentrePlayerGameNodeEntryRequest));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR CentrePlayerGameNodeEntryRequest(
      ::google::protobuf::internal::ConstantInitialized);

  inline CentrePlayerGameNodeEntryRequest(const CentrePlayerGameNodeEntryRequest& from) : CentrePlayerGameNodeEntryRequest(nullptr, from) {}
  inline CentrePlayerGameNodeEntryRequest(CentrePlayerGameNodeEntryRequest&& from) noexcept
      : CentrePlayerGameNodeEntryRequest(nullptr, std::move(from)) {}
  inline CentrePlayerGameNodeEntryRequest& operator=(const CentrePlayerGameNodeEntryRequest& from) {
    CopyFrom(from);
    return *this;
  }
  inline CentrePlayerGameNodeEntryRequest& operator=(CentrePlayerGameNodeEntryRequest&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const CentrePlayerGameNodeEntryRequest& default_instance() {
    return *internal_default_instance();
  }
  static inline const CentrePlayerGameNodeEntryRequest* internal_default_instance() {
    return reinterpret_cast<const CentrePlayerGameNodeEntryRequest*>(
        &_CentrePlayerGameNodeEntryRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 4;
  friend void swap(CentrePlayerGameNodeEntryRequest& a, CentrePlayerGameNodeEntryRequest& b) { a.Swap(&b); }
  inline void Swap(CentrePlayerGameNodeEntryRequest* other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(CentrePlayerGameNodeEntryRequest* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  CentrePlayerGameNodeEntryRequest* New(::google::protobuf::Arena* arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<CentrePlayerGameNodeEntryRequest>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const CentrePlayerGameNodeEntryRequest& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const CentrePlayerGameNodeEntryRequest& from) { CentrePlayerGameNodeEntryRequest::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(CentrePlayerGameNodeEntryRequest* other);
 private:
  template <typename T>
  friend ::absl::string_view(
      ::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "CentrePlayerGameNodeEntryRequest"; }

 protected:
  explicit CentrePlayerGameNodeEntryRequest(::google::protobuf::Arena* arena);
  CentrePlayerGameNodeEntryRequest(::google::protobuf::Arena* arena, const CentrePlayerGameNodeEntryRequest& from);
  CentrePlayerGameNodeEntryRequest(::google::protobuf::Arena* arena, CentrePlayerGameNodeEntryRequest&& from) noexcept
      : CentrePlayerGameNodeEntryRequest(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* GetClassData() const PROTOBUF_FINAL;
  static void* PlacementNew_(const void*, void* mem,
                             ::google::protobuf::Arena* arena);
  static constexpr auto InternalNewImpl_();
  static const ::google::protobuf::internal::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kClientMsgBodyFieldNumber = 1,
    kSessionInfoFieldNumber = 2,
  };
  // .CentreEnterGameRequest client_msg_body = 1;
  bool has_client_msg_body() const;
  void clear_client_msg_body() ;
  const ::CentreEnterGameRequest& client_msg_body() const;
  PROTOBUF_NODISCARD ::CentreEnterGameRequest* release_client_msg_body();
  ::CentreEnterGameRequest* mutable_client_msg_body();
  void set_allocated_client_msg_body(::CentreEnterGameRequest* value);
  void unsafe_arena_set_allocated_client_msg_body(::CentreEnterGameRequest* value);
  ::CentreEnterGameRequest* unsafe_arena_release_client_msg_body();

  private:
  const ::CentreEnterGameRequest& _internal_client_msg_body() const;
  ::CentreEnterGameRequest* _internal_mutable_client_msg_body();

  public:
  // .SessionDetails session_info = 2;
  bool has_session_info() const;
  void clear_session_info() ;
  const ::SessionDetails& session_info() const;
  PROTOBUF_NODISCARD ::SessionDetails* release_session_info();
  ::SessionDetails* mutable_session_info();
  void set_allocated_session_info(::SessionDetails* value);
  void unsafe_arena_set_allocated_session_info(::SessionDetails* value);
  ::SessionDetails* unsafe_arena_release_session_info();

  private:
  const ::SessionDetails& _internal_session_info() const;
  ::SessionDetails* _internal_mutable_session_info();

  public:
  // @@protoc_insertion_point(class_scope:CentrePlayerGameNodeEntryRequest)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      1, 2, 2,
      0, 2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const CentrePlayerGameNodeEntryRequest& from_msg);
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    ::CentreEnterGameRequest* client_msg_body_;
    ::SessionDetails* session_info_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_proto_2fcentre_2fcentre_5fservice_2eproto;
};
// -------------------------------------------------------------------

class CentreLoginResponse final
    : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:CentreLoginResponse) */ {
 public:
  inline CentreLoginResponse() : CentreLoginResponse(nullptr) {}
  ~CentreLoginResponse() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(CentreLoginResponse* msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(CentreLoginResponse));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR CentreLoginResponse(
      ::google::protobuf::internal::ConstantInitialized);

  inline CentreLoginResponse(const CentreLoginResponse& from) : CentreLoginResponse(nullptr, from) {}
  inline CentreLoginResponse(CentreLoginResponse&& from) noexcept
      : CentreLoginResponse(nullptr, std::move(from)) {}
  inline CentreLoginResponse& operator=(const CentreLoginResponse& from) {
    CopyFrom(from);
    return *this;
  }
  inline CentreLoginResponse& operator=(CentreLoginResponse&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const CentreLoginResponse& default_instance() {
    return *internal_default_instance();
  }
  static inline const CentreLoginResponse* internal_default_instance() {
    return reinterpret_cast<const CentreLoginResponse*>(
        &_CentreLoginResponse_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 7;
  friend void swap(CentreLoginResponse& a, CentreLoginResponse& b) { a.Swap(&b); }
  inline void Swap(CentreLoginResponse* other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(CentreLoginResponse* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  CentreLoginResponse* New(::google::protobuf::Arena* arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<CentreLoginResponse>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const CentreLoginResponse& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const CentreLoginResponse& from) { CentreLoginResponse::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(CentreLoginResponse* other);
 private:
  template <typename T>
  friend ::absl::string_view(
      ::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "CentreLoginResponse"; }

 protected:
  explicit CentreLoginResponse(::google::protobuf::Arena* arena);
  CentreLoginResponse(::google::protobuf::Arena* arena, const CentreLoginResponse& from);
  CentreLoginResponse(::google::protobuf::Arena* arena, CentreLoginResponse&& from) noexcept
      : CentreLoginResponse(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* GetClassData() const PROTOBUF_FINAL;
  static void* PlacementNew_(const void*, void* mem,
                             ::google::protobuf::Arena* arena);
  static constexpr auto InternalNewImpl_();
  static const ::google::protobuf::internal::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kErrorMessageFieldNumber = 1,
  };
  // .TipInfoMessage error_message = 1;
  bool has_error_message() const;
  void clear_error_message() ;
  const ::TipInfoMessage& error_message() const;
  PROTOBUF_NODISCARD ::TipInfoMessage* release_error_message();
  ::TipInfoMessage* mutable_error_message();
  void set_allocated_error_message(::TipInfoMessage* value);
  void unsafe_arena_set_allocated_error_message(::TipInfoMessage* value);
  ::TipInfoMessage* unsafe_arena_release_error_message();

  private:
  const ::TipInfoMessage& _internal_error_message() const;
  ::TipInfoMessage* _internal_mutable_error_message();

  public:
  // @@protoc_insertion_point(class_scope:CentreLoginResponse)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      0, 1, 1,
      0, 2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const CentreLoginResponse& from_msg);
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    ::TipInfoMessage* error_message_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_proto_2fcentre_2fcentre_5fservice_2eproto;
};

// ===================================================================


// -------------------------------------------------------------------

class Centre_Stub;
class Centre : public ::google::protobuf::Service {
 protected:
  Centre() = default;

 public:
  using Stub = Centre_Stub;

  Centre(const Centre&) = delete;
  Centre& operator=(const Centre&) = delete;
  virtual ~Centre() = default;

  static const ::google::protobuf::ServiceDescriptor* descriptor();

  virtual void GatePlayerService(::google::protobuf::RpcController* controller,
                        const ::GateClientMessageRequest* request,
                        ::Empty* response,
                        ::google::protobuf::Closure* done);
  virtual void GateSessionDisconnect(::google::protobuf::RpcController* controller,
                        const ::GateSessionDisconnectRequest* request,
                        ::Empty* response,
                        ::google::protobuf::Closure* done);
  virtual void LoginNodeAccountLogin(::google::protobuf::RpcController* controller,
                        const ::CentreLoginRequest* request,
                        ::CentreLoginResponse* response,
                        ::google::protobuf::Closure* done);
  virtual void LoginNodeEnterGame(::google::protobuf::RpcController* controller,
                        const ::CentrePlayerGameNodeEntryRequest* request,
                        ::Empty* response,
                        ::google::protobuf::Closure* done);
  virtual void LoginNodeLeaveGame(::google::protobuf::RpcController* controller,
                        const ::LoginNodeLeaveGameRequest* request,
                        ::Empty* response,
                        ::google::protobuf::Closure* done);
  virtual void LoginNodeSessionDisconnect(::google::protobuf::RpcController* controller,
                        const ::GateSessionDisconnectRequest* request,
                        ::Empty* response,
                        ::google::protobuf::Closure* done);
  virtual void PlayerService(::google::protobuf::RpcController* controller,
                        const ::NodeRouteMessageRequest* request,
                        ::NodeRouteMessageResponse* response,
                        ::google::protobuf::Closure* done);
  virtual void EnterGsSucceed(::google::protobuf::RpcController* controller,
                        const ::EnterGameNodeSuccessRequest* request,
                        ::Empty* response,
                        ::google::protobuf::Closure* done);
  virtual void RouteNodeStringMsg(::google::protobuf::RpcController* controller,
                        const ::RouteMessageRequest* request,
                        ::RouteMessageResponse* response,
                        ::google::protobuf::Closure* done);
  virtual void RoutePlayerStringMsg(::google::protobuf::RpcController* controller,
                        const ::RoutePlayerMessageRequest* request,
                        ::RoutePlayerMessageResponse* response,
                        ::google::protobuf::Closure* done);
  virtual void InitSceneNode(::google::protobuf::RpcController* controller,
                        const ::InitSceneNodeRequest* request,
                        ::Empty* response,
                        ::google::protobuf::Closure* done);
  virtual void RegisterNodeSession(::google::protobuf::RpcController* controller,
                        const ::RegisterNodeSessionRequest* request,
                        ::RegisterNodeSessionResponse* response,
                        ::google::protobuf::Closure* done);

  // implements Service ----------------------------------------------
  const ::google::protobuf::ServiceDescriptor* GetDescriptor() override;

  void CallMethod(const ::google::protobuf::MethodDescriptor* method,
                  ::google::protobuf::RpcController* controller,
                  const ::google::protobuf::Message* request,
                  ::google::protobuf::Message* response,
                  ::google::protobuf::Closure* done) override;

  const ::google::protobuf::Message& GetRequestPrototype(
      const ::google::protobuf::MethodDescriptor* method) const override;

  const ::google::protobuf::Message& GetResponsePrototype(
      const ::google::protobuf::MethodDescriptor* method) const override;
};

class Centre_Stub final : public Centre {
 public:
  Centre_Stub(::google::protobuf::RpcChannel* channel);
  Centre_Stub(::google::protobuf::RpcChannel* channel,
                   ::google::protobuf::Service::ChannelOwnership ownership);

  Centre_Stub(const Centre_Stub&) = delete;
  Centre_Stub& operator=(const Centre_Stub&) = delete;

  ~Centre_Stub() override;

  inline ::google::protobuf::RpcChannel* channel() { return channel_; }

  // implements Centre ------------------------------------------
  void GatePlayerService(::google::protobuf::RpcController* controller,
                        const ::GateClientMessageRequest* request,
                        ::Empty* response,
                        ::google::protobuf::Closure* done) override;
  void GateSessionDisconnect(::google::protobuf::RpcController* controller,
                        const ::GateSessionDisconnectRequest* request,
                        ::Empty* response,
                        ::google::protobuf::Closure* done) override;
  void LoginNodeAccountLogin(::google::protobuf::RpcController* controller,
                        const ::CentreLoginRequest* request,
                        ::CentreLoginResponse* response,
                        ::google::protobuf::Closure* done) override;
  void LoginNodeEnterGame(::google::protobuf::RpcController* controller,
                        const ::CentrePlayerGameNodeEntryRequest* request,
                        ::Empty* response,
                        ::google::protobuf::Closure* done) override;
  void LoginNodeLeaveGame(::google::protobuf::RpcController* controller,
                        const ::LoginNodeLeaveGameRequest* request,
                        ::Empty* response,
                        ::google::protobuf::Closure* done) override;
  void LoginNodeSessionDisconnect(::google::protobuf::RpcController* controller,
                        const ::GateSessionDisconnectRequest* request,
                        ::Empty* response,
                        ::google::protobuf::Closure* done) override;
  void PlayerService(::google::protobuf::RpcController* controller,
                        const ::NodeRouteMessageRequest* request,
                        ::NodeRouteMessageResponse* response,
                        ::google::protobuf::Closure* done) override;
  void EnterGsSucceed(::google::protobuf::RpcController* controller,
                        const ::EnterGameNodeSuccessRequest* request,
                        ::Empty* response,
                        ::google::protobuf::Closure* done) override;
  void RouteNodeStringMsg(::google::protobuf::RpcController* controller,
                        const ::RouteMessageRequest* request,
                        ::RouteMessageResponse* response,
                        ::google::protobuf::Closure* done) override;
  void RoutePlayerStringMsg(::google::protobuf::RpcController* controller,
                        const ::RoutePlayerMessageRequest* request,
                        ::RoutePlayerMessageResponse* response,
                        ::google::protobuf::Closure* done) override;
  void InitSceneNode(::google::protobuf::RpcController* controller,
                        const ::InitSceneNodeRequest* request,
                        ::Empty* response,
                        ::google::protobuf::Closure* done) override;
  void RegisterNodeSession(::google::protobuf::RpcController* controller,
                        const ::RegisterNodeSessionRequest* request,
                        ::RegisterNodeSessionResponse* response,
                        ::google::protobuf::Closure* done) override;

 private:
  ::google::protobuf::RpcChannel* channel_;
  bool owns_channel_;
};
// ===================================================================



// ===================================================================


#ifdef __GNUC__
#pragma GCC diagnostic push
#pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif  // __GNUC__
// -------------------------------------------------------------------

// GateClientMessageRequest

// .NetworkAddress rpc_client = 1;
inline bool GateClientMessageRequest::has_rpc_client() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.rpc_client_ != nullptr);
  return value;
}
inline const ::NetworkAddress& GateClientMessageRequest::_internal_rpc_client() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  const ::NetworkAddress* p = _impl_.rpc_client_;
  return p != nullptr ? *p : reinterpret_cast<const ::NetworkAddress&>(::_NetworkAddress_default_instance_);
}
inline const ::NetworkAddress& GateClientMessageRequest::rpc_client() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:GateClientMessageRequest.rpc_client)
  return _internal_rpc_client();
}
inline void GateClientMessageRequest::unsafe_arena_set_allocated_rpc_client(::NetworkAddress* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.rpc_client_);
  }
  _impl_.rpc_client_ = reinterpret_cast<::NetworkAddress*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:GateClientMessageRequest.rpc_client)
}
inline ::NetworkAddress* GateClientMessageRequest::release_rpc_client() {
  ::google::protobuf::internal::TSanWrite(&_impl_);

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::NetworkAddress* released = _impl_.rpc_client_;
  _impl_.rpc_client_ = nullptr;
  if (::google::protobuf::internal::DebugHardenForceCopyInRelease()) {
    auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    if (GetArena() == nullptr) {
      delete old;
    }
  } else {
    if (GetArena() != nullptr) {
      released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    }
  }
  return released;
}
inline ::NetworkAddress* GateClientMessageRequest::unsafe_arena_release_rpc_client() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:GateClientMessageRequest.rpc_client)

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::NetworkAddress* temp = _impl_.rpc_client_;
  _impl_.rpc_client_ = nullptr;
  return temp;
}
inline ::NetworkAddress* GateClientMessageRequest::_internal_mutable_rpc_client() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.rpc_client_ == nullptr) {
    auto* p = ::google::protobuf::Message::DefaultConstruct<::NetworkAddress>(GetArena());
    _impl_.rpc_client_ = reinterpret_cast<::NetworkAddress*>(p);
  }
  return _impl_.rpc_client_;
}
inline ::NetworkAddress* GateClientMessageRequest::mutable_rpc_client() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  _impl_._has_bits_[0] |= 0x00000001u;
  ::NetworkAddress* _msg = _internal_mutable_rpc_client();
  // @@protoc_insertion_point(field_mutable:GateClientMessageRequest.rpc_client)
  return _msg;
}
inline void GateClientMessageRequest::set_allocated_rpc_client(::NetworkAddress* value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (message_arena == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.rpc_client_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = reinterpret_cast<::google::protobuf::MessageLite*>(value)->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }

  _impl_.rpc_client_ = reinterpret_cast<::NetworkAddress*>(value);
  // @@protoc_insertion_point(field_set_allocated:GateClientMessageRequest.rpc_client)
}

// -------------------------------------------------------------------

// LoginNodeLeaveGameRequest

// -------------------------------------------------------------------

// EnterGameNodeSuccessRequest

// uint64 player_id = 1;
inline void EnterGameNodeSuccessRequest::clear_player_id() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.player_id_ = ::uint64_t{0u};
}
inline ::uint64_t EnterGameNodeSuccessRequest::player_id() const {
  // @@protoc_insertion_point(field_get:EnterGameNodeSuccessRequest.player_id)
  return _internal_player_id();
}
inline void EnterGameNodeSuccessRequest::set_player_id(::uint64_t value) {
  _internal_set_player_id(value);
  // @@protoc_insertion_point(field_set:EnterGameNodeSuccessRequest.player_id)
}
inline ::uint64_t EnterGameNodeSuccessRequest::_internal_player_id() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.player_id_;
}
inline void EnterGameNodeSuccessRequest::_internal_set_player_id(::uint64_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.player_id_ = value;
}

// uint32 scene_node_id = 2;
inline void EnterGameNodeSuccessRequest::clear_scene_node_id() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.scene_node_id_ = 0u;
}
inline ::uint32_t EnterGameNodeSuccessRequest::scene_node_id() const {
  // @@protoc_insertion_point(field_get:EnterGameNodeSuccessRequest.scene_node_id)
  return _internal_scene_node_id();
}
inline void EnterGameNodeSuccessRequest::set_scene_node_id(::uint32_t value) {
  _internal_set_scene_node_id(value);
  // @@protoc_insertion_point(field_set:EnterGameNodeSuccessRequest.scene_node_id)
}
inline ::uint32_t EnterGameNodeSuccessRequest::_internal_scene_node_id() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.scene_node_id_;
}
inline void EnterGameNodeSuccessRequest::_internal_set_scene_node_id(::uint32_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.scene_node_id_ = value;
}

// -------------------------------------------------------------------

// CentreEnterGameRequest

// uint64 player_id = 1;
inline void CentreEnterGameRequest::clear_player_id() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.player_id_ = ::uint64_t{0u};
}
inline ::uint64_t CentreEnterGameRequest::player_id() const {
  // @@protoc_insertion_point(field_get:CentreEnterGameRequest.player_id)
  return _internal_player_id();
}
inline void CentreEnterGameRequest::set_player_id(::uint64_t value) {
  _internal_set_player_id(value);
  // @@protoc_insertion_point(field_set:CentreEnterGameRequest.player_id)
}
inline ::uint64_t CentreEnterGameRequest::_internal_player_id() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.player_id_;
}
inline void CentreEnterGameRequest::_internal_set_player_id(::uint64_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.player_id_ = value;
}

// -------------------------------------------------------------------

// CentrePlayerGameNodeEntryRequest

// .CentreEnterGameRequest client_msg_body = 1;
inline bool CentrePlayerGameNodeEntryRequest::has_client_msg_body() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.client_msg_body_ != nullptr);
  return value;
}
inline void CentrePlayerGameNodeEntryRequest::clear_client_msg_body() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.client_msg_body_ != nullptr) _impl_.client_msg_body_->Clear();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
inline const ::CentreEnterGameRequest& CentrePlayerGameNodeEntryRequest::_internal_client_msg_body() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  const ::CentreEnterGameRequest* p = _impl_.client_msg_body_;
  return p != nullptr ? *p : reinterpret_cast<const ::CentreEnterGameRequest&>(::_CentreEnterGameRequest_default_instance_);
}
inline const ::CentreEnterGameRequest& CentrePlayerGameNodeEntryRequest::client_msg_body() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:CentrePlayerGameNodeEntryRequest.client_msg_body)
  return _internal_client_msg_body();
}
inline void CentrePlayerGameNodeEntryRequest::unsafe_arena_set_allocated_client_msg_body(::CentreEnterGameRequest* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.client_msg_body_);
  }
  _impl_.client_msg_body_ = reinterpret_cast<::CentreEnterGameRequest*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:CentrePlayerGameNodeEntryRequest.client_msg_body)
}
inline ::CentreEnterGameRequest* CentrePlayerGameNodeEntryRequest::release_client_msg_body() {
  ::google::protobuf::internal::TSanWrite(&_impl_);

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::CentreEnterGameRequest* released = _impl_.client_msg_body_;
  _impl_.client_msg_body_ = nullptr;
  if (::google::protobuf::internal::DebugHardenForceCopyInRelease()) {
    auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    if (GetArena() == nullptr) {
      delete old;
    }
  } else {
    if (GetArena() != nullptr) {
      released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    }
  }
  return released;
}
inline ::CentreEnterGameRequest* CentrePlayerGameNodeEntryRequest::unsafe_arena_release_client_msg_body() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:CentrePlayerGameNodeEntryRequest.client_msg_body)

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::CentreEnterGameRequest* temp = _impl_.client_msg_body_;
  _impl_.client_msg_body_ = nullptr;
  return temp;
}
inline ::CentreEnterGameRequest* CentrePlayerGameNodeEntryRequest::_internal_mutable_client_msg_body() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.client_msg_body_ == nullptr) {
    auto* p = ::google::protobuf::Message::DefaultConstruct<::CentreEnterGameRequest>(GetArena());
    _impl_.client_msg_body_ = reinterpret_cast<::CentreEnterGameRequest*>(p);
  }
  return _impl_.client_msg_body_;
}
inline ::CentreEnterGameRequest* CentrePlayerGameNodeEntryRequest::mutable_client_msg_body() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  _impl_._has_bits_[0] |= 0x00000001u;
  ::CentreEnterGameRequest* _msg = _internal_mutable_client_msg_body();
  // @@protoc_insertion_point(field_mutable:CentrePlayerGameNodeEntryRequest.client_msg_body)
  return _msg;
}
inline void CentrePlayerGameNodeEntryRequest::set_allocated_client_msg_body(::CentreEnterGameRequest* value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (message_arena == nullptr) {
    delete (_impl_.client_msg_body_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = (value)->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }

  _impl_.client_msg_body_ = reinterpret_cast<::CentreEnterGameRequest*>(value);
  // @@protoc_insertion_point(field_set_allocated:CentrePlayerGameNodeEntryRequest.client_msg_body)
}

// .SessionDetails session_info = 2;
inline bool CentrePlayerGameNodeEntryRequest::has_session_info() const {
  bool value = (_impl_._has_bits_[0] & 0x00000002u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.session_info_ != nullptr);
  return value;
}
inline const ::SessionDetails& CentrePlayerGameNodeEntryRequest::_internal_session_info() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  const ::SessionDetails* p = _impl_.session_info_;
  return p != nullptr ? *p : reinterpret_cast<const ::SessionDetails&>(::_SessionDetails_default_instance_);
}
inline const ::SessionDetails& CentrePlayerGameNodeEntryRequest::session_info() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:CentrePlayerGameNodeEntryRequest.session_info)
  return _internal_session_info();
}
inline void CentrePlayerGameNodeEntryRequest::unsafe_arena_set_allocated_session_info(::SessionDetails* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.session_info_);
  }
  _impl_.session_info_ = reinterpret_cast<::SessionDetails*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000002u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000002u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:CentrePlayerGameNodeEntryRequest.session_info)
}
inline ::SessionDetails* CentrePlayerGameNodeEntryRequest::release_session_info() {
  ::google::protobuf::internal::TSanWrite(&_impl_);

  _impl_._has_bits_[0] &= ~0x00000002u;
  ::SessionDetails* released = _impl_.session_info_;
  _impl_.session_info_ = nullptr;
  if (::google::protobuf::internal::DebugHardenForceCopyInRelease()) {
    auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    if (GetArena() == nullptr) {
      delete old;
    }
  } else {
    if (GetArena() != nullptr) {
      released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    }
  }
  return released;
}
inline ::SessionDetails* CentrePlayerGameNodeEntryRequest::unsafe_arena_release_session_info() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:CentrePlayerGameNodeEntryRequest.session_info)

  _impl_._has_bits_[0] &= ~0x00000002u;
  ::SessionDetails* temp = _impl_.session_info_;
  _impl_.session_info_ = nullptr;
  return temp;
}
inline ::SessionDetails* CentrePlayerGameNodeEntryRequest::_internal_mutable_session_info() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.session_info_ == nullptr) {
    auto* p = ::google::protobuf::Message::DefaultConstruct<::SessionDetails>(GetArena());
    _impl_.session_info_ = reinterpret_cast<::SessionDetails*>(p);
  }
  return _impl_.session_info_;
}
inline ::SessionDetails* CentrePlayerGameNodeEntryRequest::mutable_session_info() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  _impl_._has_bits_[0] |= 0x00000002u;
  ::SessionDetails* _msg = _internal_mutable_session_info();
  // @@protoc_insertion_point(field_mutable:CentrePlayerGameNodeEntryRequest.session_info)
  return _msg;
}
inline void CentrePlayerGameNodeEntryRequest::set_allocated_session_info(::SessionDetails* value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (message_arena == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.session_info_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = reinterpret_cast<::google::protobuf::MessageLite*>(value)->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000002u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000002u;
  }

  _impl_.session_info_ = reinterpret_cast<::SessionDetails*>(value);
  // @@protoc_insertion_point(field_set_allocated:CentrePlayerGameNodeEntryRequest.session_info)
}

// -------------------------------------------------------------------

// InitSceneNodeRequest

// uint32 node_id = 1;
inline void InitSceneNodeRequest::clear_node_id() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.node_id_ = 0u;
}
inline ::uint32_t InitSceneNodeRequest::node_id() const {
  // @@protoc_insertion_point(field_get:InitSceneNodeRequest.node_id)
  return _internal_node_id();
}
inline void InitSceneNodeRequest::set_node_id(::uint32_t value) {
  _internal_set_node_id(value);
  // @@protoc_insertion_point(field_set:InitSceneNodeRequest.node_id)
}
inline ::uint32_t InitSceneNodeRequest::_internal_node_id() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.node_id_;
}
inline void InitSceneNodeRequest::_internal_set_node_id(::uint32_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.node_id_ = value;
}

// uint32 scene_node_type = 2;
inline void InitSceneNodeRequest::clear_scene_node_type() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.scene_node_type_ = 0u;
}
inline ::uint32_t InitSceneNodeRequest::scene_node_type() const {
  // @@protoc_insertion_point(field_get:InitSceneNodeRequest.scene_node_type)
  return _internal_scene_node_type();
}
inline void InitSceneNodeRequest::set_scene_node_type(::uint32_t value) {
  _internal_set_scene_node_type(value);
  // @@protoc_insertion_point(field_set:InitSceneNodeRequest.scene_node_type)
}
inline ::uint32_t InitSceneNodeRequest::_internal_scene_node_type() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.scene_node_type_;
}
inline void InitSceneNodeRequest::_internal_set_scene_node_type(::uint32_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.scene_node_type_ = value;
}

// -------------------------------------------------------------------

// CentreLoginRequest

// string account = 1;
inline void CentreLoginRequest::clear_account() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.account_.ClearToEmpty();
}
inline const std::string& CentreLoginRequest::account() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:CentreLoginRequest.account)
  return _internal_account();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void CentreLoginRequest::set_account(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.account_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:CentreLoginRequest.account)
}
inline std::string* CentreLoginRequest::mutable_account() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_account();
  // @@protoc_insertion_point(field_mutable:CentreLoginRequest.account)
  return _s;
}
inline const std::string& CentreLoginRequest::_internal_account() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.account_.Get();
}
inline void CentreLoginRequest::_internal_set_account(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.account_.Set(value, GetArena());
}
inline std::string* CentreLoginRequest::_internal_mutable_account() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.account_.Mutable( GetArena());
}
inline std::string* CentreLoginRequest::release_account() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:CentreLoginRequest.account)
  return _impl_.account_.Release();
}
inline void CentreLoginRequest::set_allocated_account(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.account_.SetAllocated(value, GetArena());
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString() && _impl_.account_.IsDefault()) {
    _impl_.account_.Set("", GetArena());
  }
  // @@protoc_insertion_point(field_set_allocated:CentreLoginRequest.account)
}

// string password = 2;
inline void CentreLoginRequest::clear_password() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.password_.ClearToEmpty();
}
inline const std::string& CentreLoginRequest::password() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:CentreLoginRequest.password)
  return _internal_password();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void CentreLoginRequest::set_password(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.password_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:CentreLoginRequest.password)
}
inline std::string* CentreLoginRequest::mutable_password() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_password();
  // @@protoc_insertion_point(field_mutable:CentreLoginRequest.password)
  return _s;
}
inline const std::string& CentreLoginRequest::_internal_password() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.password_.Get();
}
inline void CentreLoginRequest::_internal_set_password(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.password_.Set(value, GetArena());
}
inline std::string* CentreLoginRequest::_internal_mutable_password() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.password_.Mutable( GetArena());
}
inline std::string* CentreLoginRequest::release_password() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:CentreLoginRequest.password)
  return _impl_.password_.Release();
}
inline void CentreLoginRequest::set_allocated_password(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.password_.SetAllocated(value, GetArena());
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString() && _impl_.password_.IsDefault()) {
    _impl_.password_.Set("", GetArena());
  }
  // @@protoc_insertion_point(field_set_allocated:CentreLoginRequest.password)
}

// -------------------------------------------------------------------

// CentreLoginResponse

// .TipInfoMessage error_message = 1;
inline bool CentreLoginResponse::has_error_message() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.error_message_ != nullptr);
  return value;
}
inline const ::TipInfoMessage& CentreLoginResponse::_internal_error_message() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  const ::TipInfoMessage* p = _impl_.error_message_;
  return p != nullptr ? *p : reinterpret_cast<const ::TipInfoMessage&>(::_TipInfoMessage_default_instance_);
}
inline const ::TipInfoMessage& CentreLoginResponse::error_message() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:CentreLoginResponse.error_message)
  return _internal_error_message();
}
inline void CentreLoginResponse::unsafe_arena_set_allocated_error_message(::TipInfoMessage* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.error_message_);
  }
  _impl_.error_message_ = reinterpret_cast<::TipInfoMessage*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:CentreLoginResponse.error_message)
}
inline ::TipInfoMessage* CentreLoginResponse::release_error_message() {
  ::google::protobuf::internal::TSanWrite(&_impl_);

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::TipInfoMessage* released = _impl_.error_message_;
  _impl_.error_message_ = nullptr;
  if (::google::protobuf::internal::DebugHardenForceCopyInRelease()) {
    auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    if (GetArena() == nullptr) {
      delete old;
    }
  } else {
    if (GetArena() != nullptr) {
      released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    }
  }
  return released;
}
inline ::TipInfoMessage* CentreLoginResponse::unsafe_arena_release_error_message() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:CentreLoginResponse.error_message)

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::TipInfoMessage* temp = _impl_.error_message_;
  _impl_.error_message_ = nullptr;
  return temp;
}
inline ::TipInfoMessage* CentreLoginResponse::_internal_mutable_error_message() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.error_message_ == nullptr) {
    auto* p = ::google::protobuf::Message::DefaultConstruct<::TipInfoMessage>(GetArena());
    _impl_.error_message_ = reinterpret_cast<::TipInfoMessage*>(p);
  }
  return _impl_.error_message_;
}
inline ::TipInfoMessage* CentreLoginResponse::mutable_error_message() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  _impl_._has_bits_[0] |= 0x00000001u;
  ::TipInfoMessage* _msg = _internal_mutable_error_message();
  // @@protoc_insertion_point(field_mutable:CentreLoginResponse.error_message)
  return _msg;
}
inline void CentreLoginResponse::set_allocated_error_message(::TipInfoMessage* value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (message_arena == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.error_message_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = reinterpret_cast<::google::protobuf::MessageLite*>(value)->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }

  _impl_.error_message_ = reinterpret_cast<::TipInfoMessage*>(value);
  // @@protoc_insertion_point(field_set_allocated:CentreLoginResponse.error_message)
}

#ifdef __GNUC__
#pragma GCC diagnostic pop
#endif  // __GNUC__

// @@protoc_insertion_point(namespace_scope)


// @@protoc_insertion_point(global_scope)

#include "google/protobuf/port_undef.inc"

#endif  // proto_2fcentre_2fcentre_5fservice_2eproto_2epb_2eh
