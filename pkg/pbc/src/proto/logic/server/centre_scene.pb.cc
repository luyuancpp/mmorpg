// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: logic/server/centre_scene.proto
// Protobuf C++ Version: 5.26.1

#include "logic/server/centre_scene.pb.h"

#include <algorithm>
#include "google/protobuf/io/coded_stream.h"
#include "google/protobuf/extension_set.h"
#include "google/protobuf/wire_format_lite.h"
#include "google/protobuf/descriptor.h"
#include "google/protobuf/generated_message_reflection.h"
#include "google/protobuf/reflection_ops.h"
#include "google/protobuf/wire_format.h"
#include "google/protobuf/generated_message_tctable_impl.h"
// @@protoc_insertion_point(includes)

// Must be included last.
#include "google/protobuf/port_def.inc"
PROTOBUF_PRAGMA_INIT_SEG
namespace _pb = ::google::protobuf;
namespace _pbi = ::google::protobuf::internal;
namespace _fl = ::google::protobuf::internal::field_layout;

inline constexpr UnRegisterSceneRequest::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : game_node_id_{0u},
        scene_{0u},
        reason_{0u},
        _cached_size_{0} {}

template <typename>
PROTOBUF_CONSTEXPR UnRegisterSceneRequest::UnRegisterSceneRequest(::_pbi::ConstantInitialized)
    : _impl_(::_pbi::ConstantInitialized()) {}
struct UnRegisterSceneRequestDefaultTypeInternal {
  PROTOBUF_CONSTEXPR UnRegisterSceneRequestDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~UnRegisterSceneRequestDefaultTypeInternal() {}
  union {
    UnRegisterSceneRequest _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 UnRegisterSceneRequestDefaultTypeInternal _UnRegisterSceneRequest_default_instance_;
      template <typename>
PROTOBUF_CONSTEXPR RegisterSceneResponse::RegisterSceneResponse(::_pbi::ConstantInitialized) {}
struct RegisterSceneResponseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR RegisterSceneResponseDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~RegisterSceneResponseDefaultTypeInternal() {}
  union {
    RegisterSceneResponse _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 RegisterSceneResponseDefaultTypeInternal _RegisterSceneResponse_default_instance_;

inline constexpr RegisterSceneRequest::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : scenes_info_{},
        game_node_id_{0u},
        _cached_size_{0} {}

template <typename>
PROTOBUF_CONSTEXPR RegisterSceneRequest::RegisterSceneRequest(::_pbi::ConstantInitialized)
    : _impl_(::_pbi::ConstantInitialized()) {}
struct RegisterSceneRequestDefaultTypeInternal {
  PROTOBUF_CONSTEXPR RegisterSceneRequestDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~RegisterSceneRequestDefaultTypeInternal() {}
  union {
    RegisterSceneRequest _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 RegisterSceneRequestDefaultTypeInternal _RegisterSceneRequest_default_instance_;
static ::_pb::Metadata file_level_metadata_logic_2fserver_2fcentre_5fscene_2eproto[3];
static constexpr const ::_pb::EnumDescriptor**
    file_level_enum_descriptors_logic_2fserver_2fcentre_5fscene_2eproto = nullptr;
static const ::_pb::ServiceDescriptor*
    file_level_service_descriptors_logic_2fserver_2fcentre_5fscene_2eproto[1];
const ::uint32_t
    TableStruct_logic_2fserver_2fcentre_5fscene_2eproto::offsets[] ABSL_ATTRIBUTE_SECTION_VARIABLE(
        protodesc_cold) = {
        ~0u,  // no _has_bits_
        PROTOBUF_FIELD_OFFSET(::RegisterSceneRequest, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::RegisterSceneRequest, _impl_.game_node_id_),
        PROTOBUF_FIELD_OFFSET(::RegisterSceneRequest, _impl_.scenes_info_),
        ~0u,  // no _has_bits_
        PROTOBUF_FIELD_OFFSET(::RegisterSceneResponse, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        ~0u,  // no _has_bits_
        PROTOBUF_FIELD_OFFSET(::UnRegisterSceneRequest, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::UnRegisterSceneRequest, _impl_.game_node_id_),
        PROTOBUF_FIELD_OFFSET(::UnRegisterSceneRequest, _impl_.scene_),
        PROTOBUF_FIELD_OFFSET(::UnRegisterSceneRequest, _impl_.reason_),
};

static const ::_pbi::MigrationSchema
    schemas[] ABSL_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
        {0, -1, -1, sizeof(::RegisterSceneRequest)},
        {10, -1, -1, sizeof(::RegisterSceneResponse)},
        {18, -1, -1, sizeof(::UnRegisterSceneRequest)},
};
static const ::_pb::Message* const file_default_instances[] = {
    &::_RegisterSceneRequest_default_instance_._instance,
    &::_RegisterSceneResponse_default_instance_._instance,
    &::_UnRegisterSceneRequest_default_instance_._instance,
};
const char descriptor_table_protodef_logic_2fserver_2fcentre_5fscene_2eproto[] ABSL_ATTRIBUTE_SECTION_VARIABLE(
    protodesc_cold) = {
    "\n\037logic/server/centre_scene.proto\032\022commo"
    "n/empty.proto\032 logic/component/scene_com"
    "p.proto\"X\n\024RegisterSceneRequest\022\024\n\014game_"
    "node_id\030\001 \001(\r\022*\n\013scenes_info\030\002 \003(\0132\025.Sce"
    "neInfoPBComponent\"\027\n\025RegisterSceneRespon"
    "se\"M\n\026UnRegisterSceneRequest\022\024\n\014game_nod"
    "e_id\030\001 \001(\r\022\r\n\005scene\030\002 \001(\r\022\016\n\006reason\030\003 \001("
    "\r2\210\001\n\022CentreSceneService\022>\n\rRegisterScen"
    "e\022\025.RegisterSceneRequest\032\026.RegisterScene"
    "Response\0222\n\017UnRegisterScene\022\027.UnRegister"
    "SceneRequest\032\006.EmptyB\014Z\007pb/game\200\001\001b\006prot"
    "o3"
};
static const ::_pbi::DescriptorTable* const descriptor_table_logic_2fserver_2fcentre_5fscene_2eproto_deps[2] =
    {
        &::descriptor_table_common_2fempty_2eproto,
        &::descriptor_table_logic_2fcomponent_2fscene_5fcomp_2eproto,
};
static ::absl::once_flag descriptor_table_logic_2fserver_2fcentre_5fscene_2eproto_once;
const ::_pbi::DescriptorTable descriptor_table_logic_2fserver_2fcentre_5fscene_2eproto = {
    false,
    false,
    442,
    descriptor_table_protodef_logic_2fserver_2fcentre_5fscene_2eproto,
    "logic/server/centre_scene.proto",
    &descriptor_table_logic_2fserver_2fcentre_5fscene_2eproto_once,
    descriptor_table_logic_2fserver_2fcentre_5fscene_2eproto_deps,
    2,
    3,
    schemas,
    file_default_instances,
    TableStruct_logic_2fserver_2fcentre_5fscene_2eproto::offsets,
    file_level_metadata_logic_2fserver_2fcentre_5fscene_2eproto,
    file_level_enum_descriptors_logic_2fserver_2fcentre_5fscene_2eproto,
    file_level_service_descriptors_logic_2fserver_2fcentre_5fscene_2eproto,
};

// This function exists to be marked as weak.
// It can significantly speed up compilation by breaking up LLVM's SCC
// in the .pb.cc translation units. Large translation units see a
// reduction of more than 35% of walltime for optimized builds. Without
// the weak attribute all the messages in the file, including all the
// vtables and everything they use become part of the same SCC through
// a cycle like:
// GetMetadata -> descriptor table -> default instances ->
//   vtables -> GetMetadata
// By adding a weak function here we break the connection from the
// individual vtables back into the descriptor table.
PROTOBUF_ATTRIBUTE_WEAK const ::_pbi::DescriptorTable* descriptor_table_logic_2fserver_2fcentre_5fscene_2eproto_getter() {
  return &descriptor_table_logic_2fserver_2fcentre_5fscene_2eproto;
}
// ===================================================================

class RegisterSceneRequest::_Internal {
 public:
};

void RegisterSceneRequest::clear_scenes_info() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.scenes_info_.Clear();
}
RegisterSceneRequest::RegisterSceneRequest(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:RegisterSceneRequest)
}
inline PROTOBUF_NDEBUG_INLINE RegisterSceneRequest::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from)
      : scenes_info_{visibility, arena, from.scenes_info_},
        _cached_size_{0} {}

RegisterSceneRequest::RegisterSceneRequest(
    ::google::protobuf::Arena* arena,
    const RegisterSceneRequest& from)
    : ::google::protobuf::Message(arena) {
  RegisterSceneRequest* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_);
  _impl_.game_node_id_ = from._impl_.game_node_id_;

  // @@protoc_insertion_point(copy_constructor:RegisterSceneRequest)
}
inline PROTOBUF_NDEBUG_INLINE RegisterSceneRequest::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : scenes_info_{visibility, arena},
        _cached_size_{0} {}

inline void RegisterSceneRequest::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  _impl_.game_node_id_ = {};
}
RegisterSceneRequest::~RegisterSceneRequest() {
  // @@protoc_insertion_point(destructor:RegisterSceneRequest)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void RegisterSceneRequest::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  _impl_.~Impl_();
}

const ::google::protobuf::MessageLite::ClassData*
RegisterSceneRequest::GetClassData() const {
  PROTOBUF_CONSTINIT static const ::google::protobuf::MessageLite::
      ClassDataFull _data_ = {
          {
              nullptr,  // OnDemandRegisterArenaDtor
              PROTOBUF_FIELD_OFFSET(RegisterSceneRequest, _impl_._cached_size_),
              false,
          },
          &RegisterSceneRequest::MergeImpl,
          &RegisterSceneRequest::kDescriptorMethods,
      };
  return &_data_;
}
PROTOBUF_NOINLINE void RegisterSceneRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:RegisterSceneRequest)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.scenes_info_.Clear();
  _impl_.game_node_id_ = 0u;
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* RegisterSceneRequest::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<1, 2, 1, 0, 2> RegisterSceneRequest::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    2, 8,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967292,  // skipmap
    offsetof(decltype(_table_), field_entries),
    2,  // num_field_entries
    1,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    &_RegisterSceneRequest_default_instance_._instance,
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::RegisterSceneRequest>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // repeated .SceneInfoPBComponent scenes_info = 2;
    {::_pbi::TcParser::FastMtR1,
     {18, 63, 0, PROTOBUF_FIELD_OFFSET(RegisterSceneRequest, _impl_.scenes_info_)}},
    // uint32 game_node_id = 1;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(RegisterSceneRequest, _impl_.game_node_id_), 63>(),
     {8, 63, 0, PROTOBUF_FIELD_OFFSET(RegisterSceneRequest, _impl_.game_node_id_)}},
  }}, {{
    65535, 65535
  }}, {{
    // uint32 game_node_id = 1;
    {PROTOBUF_FIELD_OFFSET(RegisterSceneRequest, _impl_.game_node_id_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUInt32)},
    // repeated .SceneInfoPBComponent scenes_info = 2;
    {PROTOBUF_FIELD_OFFSET(RegisterSceneRequest, _impl_.scenes_info_), 0, 0,
    (0 | ::_fl::kFcRepeated | ::_fl::kMessage | ::_fl::kTvTable)},
  }}, {{
    {::_pbi::TcParser::GetTable<::SceneInfoPBComponent>()},
  }}, {{
  }},
};

::uint8_t* RegisterSceneRequest::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:RegisterSceneRequest)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  // uint32 game_node_id = 1;
  if (this->_internal_game_node_id() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt32ToArray(
        1, this->_internal_game_node_id(), target);
  }

  // repeated .SceneInfoPBComponent scenes_info = 2;
  for (unsigned i = 0, n = static_cast<unsigned>(
                           this->_internal_scenes_info_size());
       i < n; i++) {
    const auto& repfield = this->_internal_scenes_info().Get(i);
    target =
        ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
            2, repfield, repfield.GetCachedSize(),
            target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:RegisterSceneRequest)
  return target;
}

::size_t RegisterSceneRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:RegisterSceneRequest)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated .SceneInfoPBComponent scenes_info = 2;
  total_size += 1UL * this->_internal_scenes_info_size();
  for (const auto& msg : this->_internal_scenes_info()) {
    total_size += ::google::protobuf::internal::WireFormatLite::MessageSize(msg);
  }
  // uint32 game_node_id = 1;
  if (this->_internal_game_node_id() != 0) {
    total_size += ::_pbi::WireFormatLite::UInt32SizePlusOne(
        this->_internal_game_node_id());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}


void RegisterSceneRequest::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<RegisterSceneRequest*>(&to_msg);
  auto& from = static_cast<const RegisterSceneRequest&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:RegisterSceneRequest)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_internal_mutable_scenes_info()->MergeFrom(
      from._internal_scenes_info());
  if (from._internal_game_node_id() != 0) {
    _this->_impl_.game_node_id_ = from._impl_.game_node_id_;
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void RegisterSceneRequest::CopyFrom(const RegisterSceneRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:RegisterSceneRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool RegisterSceneRequest::IsInitialized() const {
  return true;
}

void RegisterSceneRequest::InternalSwap(RegisterSceneRequest* PROTOBUF_RESTRICT other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  _impl_.scenes_info_.InternalSwap(&other->_impl_.scenes_info_);
        swap(_impl_.game_node_id_, other->_impl_.game_node_id_);
}

::google::protobuf::Metadata RegisterSceneRequest::GetMetadata() const {
  return ::_pbi::AssignDescriptors(&descriptor_table_logic_2fserver_2fcentre_5fscene_2eproto_getter,
                                   &descriptor_table_logic_2fserver_2fcentre_5fscene_2eproto_once,
                                   file_level_metadata_logic_2fserver_2fcentre_5fscene_2eproto[0]);
}
// ===================================================================

class RegisterSceneResponse::_Internal {
 public:
};

RegisterSceneResponse::RegisterSceneResponse(::google::protobuf::Arena* arena)
    : ::google::protobuf::internal::ZeroFieldsBase(arena) {
  // @@protoc_insertion_point(arena_constructor:RegisterSceneResponse)
}
RegisterSceneResponse::RegisterSceneResponse(
    ::google::protobuf::Arena* arena,
    const RegisterSceneResponse& from)
    : ::google::protobuf::internal::ZeroFieldsBase(arena) {
  RegisterSceneResponse* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);

  // @@protoc_insertion_point(copy_constructor:RegisterSceneResponse)
}









::google::protobuf::Metadata RegisterSceneResponse::GetMetadata() const {
  return ::_pbi::AssignDescriptors(&descriptor_table_logic_2fserver_2fcentre_5fscene_2eproto_getter,
                                   &descriptor_table_logic_2fserver_2fcentre_5fscene_2eproto_once,
                                   file_level_metadata_logic_2fserver_2fcentre_5fscene_2eproto[1]);
}
// ===================================================================

class UnRegisterSceneRequest::_Internal {
 public:
};

UnRegisterSceneRequest::UnRegisterSceneRequest(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:UnRegisterSceneRequest)
}
UnRegisterSceneRequest::UnRegisterSceneRequest(
    ::google::protobuf::Arena* arena, const UnRegisterSceneRequest& from)
    : UnRegisterSceneRequest(arena) {
  MergeFrom(from);
}
inline PROTOBUF_NDEBUG_INLINE UnRegisterSceneRequest::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0} {}

inline void UnRegisterSceneRequest::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, game_node_id_),
           0,
           offsetof(Impl_, reason_) -
               offsetof(Impl_, game_node_id_) +
               sizeof(Impl_::reason_));
}
UnRegisterSceneRequest::~UnRegisterSceneRequest() {
  // @@protoc_insertion_point(destructor:UnRegisterSceneRequest)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void UnRegisterSceneRequest::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  _impl_.~Impl_();
}

const ::google::protobuf::MessageLite::ClassData*
UnRegisterSceneRequest::GetClassData() const {
  PROTOBUF_CONSTINIT static const ::google::protobuf::MessageLite::
      ClassDataFull _data_ = {
          {
              nullptr,  // OnDemandRegisterArenaDtor
              PROTOBUF_FIELD_OFFSET(UnRegisterSceneRequest, _impl_._cached_size_),
              false,
          },
          &UnRegisterSceneRequest::MergeImpl,
          &UnRegisterSceneRequest::kDescriptorMethods,
      };
  return &_data_;
}
PROTOBUF_NOINLINE void UnRegisterSceneRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:UnRegisterSceneRequest)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&_impl_.game_node_id_, 0, static_cast<::size_t>(
      reinterpret_cast<char*>(&_impl_.reason_) -
      reinterpret_cast<char*>(&_impl_.game_node_id_)) + sizeof(_impl_.reason_));
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* UnRegisterSceneRequest::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<2, 3, 0, 0, 2> UnRegisterSceneRequest::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    3, 24,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967288,  // skipmap
    offsetof(decltype(_table_), field_entries),
    3,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    &_UnRegisterSceneRequest_default_instance_._instance,
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::UnRegisterSceneRequest>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
    // uint32 game_node_id = 1;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(UnRegisterSceneRequest, _impl_.game_node_id_), 63>(),
     {8, 63, 0, PROTOBUF_FIELD_OFFSET(UnRegisterSceneRequest, _impl_.game_node_id_)}},
    // uint32 scene = 2;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(UnRegisterSceneRequest, _impl_.scene_), 63>(),
     {16, 63, 0, PROTOBUF_FIELD_OFFSET(UnRegisterSceneRequest, _impl_.scene_)}},
    // uint32 reason = 3;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(UnRegisterSceneRequest, _impl_.reason_), 63>(),
     {24, 63, 0, PROTOBUF_FIELD_OFFSET(UnRegisterSceneRequest, _impl_.reason_)}},
  }}, {{
    65535, 65535
  }}, {{
    // uint32 game_node_id = 1;
    {PROTOBUF_FIELD_OFFSET(UnRegisterSceneRequest, _impl_.game_node_id_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUInt32)},
    // uint32 scene = 2;
    {PROTOBUF_FIELD_OFFSET(UnRegisterSceneRequest, _impl_.scene_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUInt32)},
    // uint32 reason = 3;
    {PROTOBUF_FIELD_OFFSET(UnRegisterSceneRequest, _impl_.reason_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUInt32)},
  }},
  // no aux_entries
  {{
  }},
};

::uint8_t* UnRegisterSceneRequest::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:UnRegisterSceneRequest)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  // uint32 game_node_id = 1;
  if (this->_internal_game_node_id() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt32ToArray(
        1, this->_internal_game_node_id(), target);
  }

  // uint32 scene = 2;
  if (this->_internal_scene() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt32ToArray(
        2, this->_internal_scene(), target);
  }

  // uint32 reason = 3;
  if (this->_internal_reason() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt32ToArray(
        3, this->_internal_reason(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:UnRegisterSceneRequest)
  return target;
}

::size_t UnRegisterSceneRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:UnRegisterSceneRequest)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // uint32 game_node_id = 1;
  if (this->_internal_game_node_id() != 0) {
    total_size += ::_pbi::WireFormatLite::UInt32SizePlusOne(
        this->_internal_game_node_id());
  }

  // uint32 scene = 2;
  if (this->_internal_scene() != 0) {
    total_size += ::_pbi::WireFormatLite::UInt32SizePlusOne(
        this->_internal_scene());
  }

  // uint32 reason = 3;
  if (this->_internal_reason() != 0) {
    total_size += ::_pbi::WireFormatLite::UInt32SizePlusOne(
        this->_internal_reason());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}


void UnRegisterSceneRequest::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<UnRegisterSceneRequest*>(&to_msg);
  auto& from = static_cast<const UnRegisterSceneRequest&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:UnRegisterSceneRequest)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_game_node_id() != 0) {
    _this->_impl_.game_node_id_ = from._impl_.game_node_id_;
  }
  if (from._internal_scene() != 0) {
    _this->_impl_.scene_ = from._impl_.scene_;
  }
  if (from._internal_reason() != 0) {
    _this->_impl_.reason_ = from._impl_.reason_;
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void UnRegisterSceneRequest::CopyFrom(const UnRegisterSceneRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:UnRegisterSceneRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool UnRegisterSceneRequest::IsInitialized() const {
  return true;
}

void UnRegisterSceneRequest::InternalSwap(UnRegisterSceneRequest* PROTOBUF_RESTRICT other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(UnRegisterSceneRequest, _impl_.reason_)
      + sizeof(UnRegisterSceneRequest::_impl_.reason_)
      - PROTOBUF_FIELD_OFFSET(UnRegisterSceneRequest, _impl_.game_node_id_)>(
          reinterpret_cast<char*>(&_impl_.game_node_id_),
          reinterpret_cast<char*>(&other->_impl_.game_node_id_));
}

::google::protobuf::Metadata UnRegisterSceneRequest::GetMetadata() const {
  return ::_pbi::AssignDescriptors(&descriptor_table_logic_2fserver_2fcentre_5fscene_2eproto_getter,
                                   &descriptor_table_logic_2fserver_2fcentre_5fscene_2eproto_once,
                                   file_level_metadata_logic_2fserver_2fcentre_5fscene_2eproto[2]);
}
// ===================================================================

const ::google::protobuf::ServiceDescriptor* CentreSceneService::descriptor() {
  ::google::protobuf::internal::AssignDescriptors(&descriptor_table_logic_2fserver_2fcentre_5fscene_2eproto);
  return file_level_service_descriptors_logic_2fserver_2fcentre_5fscene_2eproto[0];
}

const ::google::protobuf::ServiceDescriptor* CentreSceneService::GetDescriptor() {
  return descriptor();
}

void CentreSceneService::RegisterScene(::google::protobuf::RpcController* controller,
                         const ::RegisterSceneRequest*, ::RegisterSceneResponse*, ::google::protobuf::Closure* done) {
  controller->SetFailed("Method RegisterScene() not implemented.");
  done->Run();
}
void CentreSceneService::UnRegisterScene(::google::protobuf::RpcController* controller,
                         const ::UnRegisterSceneRequest*, ::Empty*, ::google::protobuf::Closure* done) {
  controller->SetFailed("Method UnRegisterScene() not implemented.");
  done->Run();
}

void CentreSceneService::CallMethod(
    const ::google::protobuf::MethodDescriptor* method,
    ::google::protobuf::RpcController* controller,
    const ::google::protobuf::Message* request,
    ::google::protobuf::Message* response, ::google::protobuf::Closure* done) {
  ABSL_DCHECK_EQ(method->service(), file_level_service_descriptors_logic_2fserver_2fcentre_5fscene_2eproto[0]);
  switch (method->index()) {
    case 0:
      RegisterScene(controller,
             ::google::protobuf::internal::DownCast<const ::RegisterSceneRequest*>(request),
             ::google::protobuf::internal::DownCast<::RegisterSceneResponse*>(response), done);
      break;
    case 1:
      UnRegisterScene(controller,
             ::google::protobuf::internal::DownCast<const ::UnRegisterSceneRequest*>(request),
             ::google::protobuf::internal::DownCast<::Empty*>(response), done);
      break;

    default:
      ABSL_LOG(FATAL) << "Bad method index; this should never happen.";
      break;
  }
}

const ::google::protobuf::Message& CentreSceneService::GetRequestPrototype(
    const ::google::protobuf::MethodDescriptor* method) const {
  ABSL_DCHECK_EQ(method->service(), descriptor());
  switch (method->index()) {
    case 0:
      return ::RegisterSceneRequest::default_instance();
    case 1:
      return ::UnRegisterSceneRequest::default_instance();

    default:
      ABSL_LOG(FATAL) << "Bad method index; this should never happen.";
      return *::google::protobuf::MessageFactory::generated_factory()
                  ->GetPrototype(method->input_type());
  }
}

const ::google::protobuf::Message& CentreSceneService::GetResponsePrototype(
    const ::google::protobuf::MethodDescriptor* method) const {
  ABSL_DCHECK_EQ(method->service(), descriptor());
  switch (method->index()) {
    case 0:
      return ::RegisterSceneResponse::default_instance();
    case 1:
      return ::Empty::default_instance();

    default:
      ABSL_LOG(FATAL) << "Bad method index; this should never happen.";
      return *::google::protobuf::MessageFactory::generated_factory()
                  ->GetPrototype(method->output_type());
  }
}

CentreSceneService_Stub::CentreSceneService_Stub(::google::protobuf::RpcChannel* channel)
    : channel_(channel), owns_channel_(false) {}

CentreSceneService_Stub::CentreSceneService_Stub(
    ::google::protobuf::RpcChannel* channel,
    ::google::protobuf::Service::ChannelOwnership ownership)
    : channel_(channel),
      owns_channel_(ownership ==
                    ::google::protobuf::Service::STUB_OWNS_CHANNEL) {}

CentreSceneService_Stub::~CentreSceneService_Stub() {
  if (owns_channel_) delete channel_;
}

void CentreSceneService_Stub::RegisterScene(::google::protobuf::RpcController* controller,
                              const ::RegisterSceneRequest* request,
                              ::RegisterSceneResponse* response, ::google::protobuf::Closure* done) {
  channel_->CallMethod(descriptor()->method(0), controller,
                       request, response, done);
}
void CentreSceneService_Stub::UnRegisterScene(::google::protobuf::RpcController* controller,
                              const ::UnRegisterSceneRequest* request,
                              ::Empty* response, ::google::protobuf::Closure* done) {
  channel_->CallMethod(descriptor()->method(1), controller,
                       request, response, done);
}
// @@protoc_insertion_point(namespace_scope)
namespace google {
namespace protobuf {
}  // namespace protobuf
}  // namespace google
// @@protoc_insertion_point(global_scope)
PROTOBUF_ATTRIBUTE_INIT_PRIORITY2
static ::std::false_type _static_init_ PROTOBUF_UNUSED =
    (::_pbi::AddDescriptors(&descriptor_table_logic_2fserver_2fcentre_5fscene_2eproto),
     ::std::false_type{});
#include "google/protobuf/port_undef.inc"
