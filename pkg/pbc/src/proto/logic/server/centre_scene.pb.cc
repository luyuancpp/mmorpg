// Generated by the protocol buffer compiler.  DO NOT EDIT!
// NO CHECKED-IN PROTOBUF GENCODE
// source: proto/logic/server/centre_scene.proto
// Protobuf C++ Version: 5.29.0

#include "proto/logic/server/centre_scene.pb.h"

#include <algorithm>
#include <type_traits>
#include "google/protobuf/io/coded_stream.h"
#include "google/protobuf/generated_message_tctable_impl.h"
#include "google/protobuf/extension_set.h"
#include "google/protobuf/generated_message_util.h"
#include "google/protobuf/wire_format_lite.h"
#include "google/protobuf/descriptor.h"
#include "google/protobuf/generated_message_reflection.h"
#include "google/protobuf/reflection_ops.h"
#include "google/protobuf/wire_format.h"
// @@protoc_insertion_point(includes)

// Must be included last.
#include "google/protobuf/port_def.inc"
PROTOBUF_PRAGMA_INIT_SEG
namespace _pb = ::google::protobuf;
namespace _pbi = ::google::protobuf::internal;
namespace _fl = ::google::protobuf::internal::field_layout;

inline constexpr UnRegisterSceneRequest::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : scene_node_id_{0u},
        scene_{0u},
        reason_{0u},
        _cached_size_{0} {}

template <typename>
PROTOBUF_CONSTEXPR UnRegisterSceneRequest::UnRegisterSceneRequest(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct UnRegisterSceneRequestDefaultTypeInternal {
  PROTOBUF_CONSTEXPR UnRegisterSceneRequestDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~UnRegisterSceneRequestDefaultTypeInternal() {}
  union {
    UnRegisterSceneRequest _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 UnRegisterSceneRequestDefaultTypeInternal _UnRegisterSceneRequest_default_instance_;
              template <typename>
PROTOBUF_CONSTEXPR RegisterSceneResponse::RegisterSceneResponse(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::internal::ZeroFieldsBase(_class_data_.base()){}
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::internal::ZeroFieldsBase() {
}
#endif  // PROTOBUF_CUSTOM_VTABLE
struct RegisterSceneResponseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR RegisterSceneResponseDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~RegisterSceneResponseDefaultTypeInternal() {}
  union {
    RegisterSceneResponse _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 RegisterSceneResponseDefaultTypeInternal _RegisterSceneResponse_default_instance_;

inline constexpr RegisterSceneRequest::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : scenes_info_{},
        scene_node_id_{0u},
        _cached_size_{0} {}

template <typename>
PROTOBUF_CONSTEXPR RegisterSceneRequest::RegisterSceneRequest(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct RegisterSceneRequestDefaultTypeInternal {
  PROTOBUF_CONSTEXPR RegisterSceneRequestDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~RegisterSceneRequestDefaultTypeInternal() {}
  union {
    RegisterSceneRequest _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 RegisterSceneRequestDefaultTypeInternal _RegisterSceneRequest_default_instance_;
static constexpr const ::_pb::EnumDescriptor**
    file_level_enum_descriptors_proto_2flogic_2fserver_2fcentre_5fscene_2eproto = nullptr;
static const ::_pb::ServiceDescriptor*
    file_level_service_descriptors_proto_2flogic_2fserver_2fcentre_5fscene_2eproto[1];
const ::uint32_t
    TableStruct_proto_2flogic_2fserver_2fcentre_5fscene_2eproto::offsets[] ABSL_ATTRIBUTE_SECTION_VARIABLE(
        protodesc_cold) = {
        ~0u,  // no _has_bits_
        PROTOBUF_FIELD_OFFSET(::RegisterSceneRequest, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::RegisterSceneRequest, _impl_.scene_node_id_),
        PROTOBUF_FIELD_OFFSET(::RegisterSceneRequest, _impl_.scenes_info_),
        ~0u,  // no _has_bits_
        PROTOBUF_FIELD_OFFSET(::RegisterSceneResponse, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        ~0u,  // no _has_bits_
        PROTOBUF_FIELD_OFFSET(::UnRegisterSceneRequest, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::UnRegisterSceneRequest, _impl_.scene_node_id_),
        PROTOBUF_FIELD_OFFSET(::UnRegisterSceneRequest, _impl_.scene_),
        PROTOBUF_FIELD_OFFSET(::UnRegisterSceneRequest, _impl_.reason_),
};

static const ::_pbi::MigrationSchema
    schemas[] ABSL_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
        {0, -1, -1, sizeof(::RegisterSceneRequest)},
        {10, -1, -1, sizeof(::RegisterSceneResponse)},
        {18, -1, -1, sizeof(::UnRegisterSceneRequest)},
};
static const ::_pb::Message* const file_default_instances[] = {
    &::_RegisterSceneRequest_default_instance_._instance,
    &::_RegisterSceneResponse_default_instance_._instance,
    &::_UnRegisterSceneRequest_default_instance_._instance,
};
const char descriptor_table_protodef_proto_2flogic_2fserver_2fcentre_5fscene_2eproto[] ABSL_ATTRIBUTE_SECTION_VARIABLE(
    protodesc_cold) = {
    "\n%proto/logic/server/centre_scene.proto\032"
    "\030proto/common/empty.proto\032\031proto/common/"
    "common.proto\"Y\n\024RegisterSceneRequest\022\025\n\r"
    "scene_node_id\030\001 \001(\r\022*\n\013scenes_info\030\002 \003(\013"
    "2\025.SceneInfoPBComponent\"\027\n\025RegisterScene"
    "Response\"N\n\026UnRegisterSceneRequest\022\025\n\rsc"
    "ene_node_id\030\001 \001(\r\022\r\n\005scene\030\002 \001(\r\022\016\n\006reas"
    "on\030\003 \001(\r2\210\001\n\022CentreSceneService\022>\n\rRegis"
    "terScene\022\025.RegisterSceneRequest\032\026.Regist"
    "erSceneResponse\0222\n\017UnRegisterScene\022\027.UnR"
    "egisterSceneRequest\032\006.EmptyB\014Z\007pb/game\200\001"
    "\001b\006proto3"
};
static const ::_pbi::DescriptorTable* const descriptor_table_proto_2flogic_2fserver_2fcentre_5fscene_2eproto_deps[2] =
    {
        &::descriptor_table_proto_2fcommon_2fcommon_2eproto,
        &::descriptor_table_proto_2fcommon_2fempty_2eproto,
};
static ::absl::once_flag descriptor_table_proto_2flogic_2fserver_2fcentre_5fscene_2eproto_once;
PROTOBUF_CONSTINIT const ::_pbi::DescriptorTable descriptor_table_proto_2flogic_2fserver_2fcentre_5fscene_2eproto = {
    false,
    false,
    449,
    descriptor_table_protodef_proto_2flogic_2fserver_2fcentre_5fscene_2eproto,
    "proto/logic/server/centre_scene.proto",
    &descriptor_table_proto_2flogic_2fserver_2fcentre_5fscene_2eproto_once,
    descriptor_table_proto_2flogic_2fserver_2fcentre_5fscene_2eproto_deps,
    2,
    3,
    schemas,
    file_default_instances,
    TableStruct_proto_2flogic_2fserver_2fcentre_5fscene_2eproto::offsets,
    file_level_enum_descriptors_proto_2flogic_2fserver_2fcentre_5fscene_2eproto,
    file_level_service_descriptors_proto_2flogic_2fserver_2fcentre_5fscene_2eproto,
};
// ===================================================================

class RegisterSceneRequest::_Internal {
 public:
};

void RegisterSceneRequest::clear_scenes_info() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.scenes_info_.Clear();
}
RegisterSceneRequest::RegisterSceneRequest(::google::protobuf::Arena* arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:RegisterSceneRequest)
}
inline PROTOBUF_NDEBUG_INLINE RegisterSceneRequest::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from, const ::RegisterSceneRequest& from_msg)
      : scenes_info_{visibility, arena, from.scenes_info_},
        _cached_size_{0} {}

RegisterSceneRequest::RegisterSceneRequest(
    ::google::protobuf::Arena* arena,
    const RegisterSceneRequest& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  RegisterSceneRequest* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);
  _impl_.scene_node_id_ = from._impl_.scene_node_id_;

  // @@protoc_insertion_point(copy_constructor:RegisterSceneRequest)
}
inline PROTOBUF_NDEBUG_INLINE RegisterSceneRequest::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : scenes_info_{visibility, arena},
        _cached_size_{0} {}

inline void RegisterSceneRequest::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  _impl_.scene_node_id_ = {};
}
RegisterSceneRequest::~RegisterSceneRequest() {
  // @@protoc_insertion_point(destructor:RegisterSceneRequest)
  SharedDtor(*this);
}
inline void RegisterSceneRequest::SharedDtor(MessageLite& self) {
  RegisterSceneRequest& this_ = static_cast<RegisterSceneRequest&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  this_._impl_.~Impl_();
}

inline void* RegisterSceneRequest::PlacementNew_(const void*, void* mem,
                                        ::google::protobuf::Arena* arena) {
  return ::new (mem) RegisterSceneRequest(arena);
}
constexpr auto RegisterSceneRequest::InternalNewImpl_() {
  constexpr auto arena_bits = ::google::protobuf::internal::EncodePlacementArenaOffsets({
      PROTOBUF_FIELD_OFFSET(RegisterSceneRequest, _impl_.scenes_info_) +
          decltype(RegisterSceneRequest::_impl_.scenes_info_)::
              InternalGetArenaOffset(
                  ::google::protobuf::Message::internal_visibility()),
  });
  if (arena_bits.has_value()) {
    return ::google::protobuf::internal::MessageCreator::ZeroInit(
        sizeof(RegisterSceneRequest), alignof(RegisterSceneRequest), *arena_bits);
  } else {
    return ::google::protobuf::internal::MessageCreator(&RegisterSceneRequest::PlacementNew_,
                                 sizeof(RegisterSceneRequest),
                                 alignof(RegisterSceneRequest));
  }
}
PROTOBUF_CONSTINIT
PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::google::protobuf::internal::ClassDataFull RegisterSceneRequest::_class_data_ = {
    ::google::protobuf::internal::ClassData{
        &_RegisterSceneRequest_default_instance_._instance,
        &_table_.header,
        nullptr,  // OnDemandRegisterArenaDtor
        nullptr,  // IsInitialized
        &RegisterSceneRequest::MergeImpl,
        ::google::protobuf::Message::GetNewImpl<RegisterSceneRequest>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
        &RegisterSceneRequest::SharedDtor,
        ::google::protobuf::Message::GetClearImpl<RegisterSceneRequest>(), &RegisterSceneRequest::ByteSizeLong,
            &RegisterSceneRequest::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
        PROTOBUF_FIELD_OFFSET(RegisterSceneRequest, _impl_._cached_size_),
        false,
    },
    &RegisterSceneRequest::kDescriptorMethods,
    &descriptor_table_proto_2flogic_2fserver_2fcentre_5fscene_2eproto,
    nullptr,  // tracker
};
const ::google::protobuf::internal::ClassData* RegisterSceneRequest::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_class_data_.tc_table);
  return _class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<1, 2, 1, 0, 2> RegisterSceneRequest::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    2, 8,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967292,  // skipmap
    offsetof(decltype(_table_), field_entries),
    2,  // num_field_entries
    1,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    _class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::RegisterSceneRequest>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // repeated .SceneInfoPBComponent scenes_info = 2;
    {::_pbi::TcParser::FastMtR1,
     {18, 63, 0, PROTOBUF_FIELD_OFFSET(RegisterSceneRequest, _impl_.scenes_info_)}},
    // uint32 scene_node_id = 1;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(RegisterSceneRequest, _impl_.scene_node_id_), 63>(),
     {8, 63, 0, PROTOBUF_FIELD_OFFSET(RegisterSceneRequest, _impl_.scene_node_id_)}},
  }}, {{
    65535, 65535
  }}, {{
    // uint32 scene_node_id = 1;
    {PROTOBUF_FIELD_OFFSET(RegisterSceneRequest, _impl_.scene_node_id_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUInt32)},
    // repeated .SceneInfoPBComponent scenes_info = 2;
    {PROTOBUF_FIELD_OFFSET(RegisterSceneRequest, _impl_.scenes_info_), 0, 0,
    (0 | ::_fl::kFcRepeated | ::_fl::kMessage | ::_fl::kTvTable)},
  }}, {{
    {::_pbi::TcParser::GetTable<::SceneInfoPBComponent>()},
  }}, {{
  }},
};

PROTOBUF_NOINLINE void RegisterSceneRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:RegisterSceneRequest)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.scenes_info_.Clear();
  _impl_.scene_node_id_ = 0u;
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::uint8_t* RegisterSceneRequest::_InternalSerialize(
            const MessageLite& base, ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) {
          const RegisterSceneRequest& this_ = static_cast<const RegisterSceneRequest&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::uint8_t* RegisterSceneRequest::_InternalSerialize(
            ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) const {
          const RegisterSceneRequest& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(serialize_to_array_start:RegisterSceneRequest)
          ::uint32_t cached_has_bits = 0;
          (void)cached_has_bits;

          // uint32 scene_node_id = 1;
          if (this_._internal_scene_node_id() != 0) {
            target = stream->EnsureSpace(target);
            target = ::_pbi::WireFormatLite::WriteUInt32ToArray(
                1, this_._internal_scene_node_id(), target);
          }

          // repeated .SceneInfoPBComponent scenes_info = 2;
          for (unsigned i = 0, n = static_cast<unsigned>(
                                   this_._internal_scenes_info_size());
               i < n; i++) {
            const auto& repfield = this_._internal_scenes_info().Get(i);
            target =
                ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
                    2, repfield, repfield.GetCachedSize(),
                    target, stream);
          }

          if (PROTOBUF_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
            target =
                ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
                    this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
          }
          // @@protoc_insertion_point(serialize_to_array_end:RegisterSceneRequest)
          return target;
        }

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::size_t RegisterSceneRequest::ByteSizeLong(const MessageLite& base) {
          const RegisterSceneRequest& this_ = static_cast<const RegisterSceneRequest&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::size_t RegisterSceneRequest::ByteSizeLong() const {
          const RegisterSceneRequest& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(message_byte_size_start:RegisterSceneRequest)
          ::size_t total_size = 0;

          ::uint32_t cached_has_bits = 0;
          // Prevent compiler warnings about cached_has_bits being unused
          (void)cached_has_bits;

          ::_pbi::Prefetch5LinesFrom7Lines(&this_);
           {
            // repeated .SceneInfoPBComponent scenes_info = 2;
            {
              total_size += 1UL * this_._internal_scenes_info_size();
              for (const auto& msg : this_._internal_scenes_info()) {
                total_size += ::google::protobuf::internal::WireFormatLite::MessageSize(msg);
              }
            }
          }
           {
            // uint32 scene_node_id = 1;
            if (this_._internal_scene_node_id() != 0) {
              total_size += ::_pbi::WireFormatLite::UInt32SizePlusOne(
                  this_._internal_scene_node_id());
            }
          }
          return this_.MaybeComputeUnknownFieldsSize(total_size,
                                                     &this_._impl_._cached_size_);
        }

void RegisterSceneRequest::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<RegisterSceneRequest*>(&to_msg);
  auto& from = static_cast<const RegisterSceneRequest&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:RegisterSceneRequest)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_internal_mutable_scenes_info()->MergeFrom(
      from._internal_scenes_info());
  if (from._internal_scene_node_id() != 0) {
    _this->_impl_.scene_node_id_ = from._impl_.scene_node_id_;
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void RegisterSceneRequest::CopyFrom(const RegisterSceneRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:RegisterSceneRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void RegisterSceneRequest::InternalSwap(RegisterSceneRequest* PROTOBUF_RESTRICT other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  _impl_.scenes_info_.InternalSwap(&other->_impl_.scenes_info_);
        swap(_impl_.scene_node_id_, other->_impl_.scene_node_id_);
}

::google::protobuf::Metadata RegisterSceneRequest::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class RegisterSceneResponse::_Internal {
 public:
};

RegisterSceneResponse::RegisterSceneResponse(::google::protobuf::Arena* arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::internal::ZeroFieldsBase(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::internal::ZeroFieldsBase(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  // @@protoc_insertion_point(arena_constructor:RegisterSceneResponse)
}
RegisterSceneResponse::RegisterSceneResponse(
    ::google::protobuf::Arena* arena,
    const RegisterSceneResponse& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::internal::ZeroFieldsBase(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::internal::ZeroFieldsBase(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  RegisterSceneResponse* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);

  // @@protoc_insertion_point(copy_constructor:RegisterSceneResponse)
}

inline void* RegisterSceneResponse::PlacementNew_(const void*, void* mem,
                                        ::google::protobuf::Arena* arena) {
  return ::new (mem) RegisterSceneResponse(arena);
}
constexpr auto RegisterSceneResponse::InternalNewImpl_() {
  return ::google::protobuf::internal::MessageCreator::ZeroInit(sizeof(RegisterSceneResponse),
                                            alignof(RegisterSceneResponse));
}
PROTOBUF_CONSTINIT
PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::google::protobuf::internal::ClassDataFull RegisterSceneResponse::_class_data_ = {
    ::google::protobuf::internal::ClassData{
        &_RegisterSceneResponse_default_instance_._instance,
        &_table_.header,
        nullptr,  // OnDemandRegisterArenaDtor
        nullptr,  // IsInitialized
        &RegisterSceneResponse::MergeImpl,
        ::google::protobuf::internal::ZeroFieldsBase::GetNewImpl<RegisterSceneResponse>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
        &RegisterSceneResponse::SharedDtor,
        ::google::protobuf::internal::ZeroFieldsBase::GetClearImpl<RegisterSceneResponse>(), &RegisterSceneResponse::ByteSizeLong,
            &RegisterSceneResponse::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
        PROTOBUF_FIELD_OFFSET(RegisterSceneResponse, _impl_._cached_size_),
        false,
    },
    &RegisterSceneResponse::kDescriptorMethods,
    &descriptor_table_proto_2flogic_2fserver_2fcentre_5fscene_2eproto,
    nullptr,  // tracker
};
const ::google::protobuf::internal::ClassData* RegisterSceneResponse::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_class_data_.tc_table);
  return _class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<0, 0, 0, 0, 2> RegisterSceneResponse::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    0, 0,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967295,  // skipmap
    offsetof(decltype(_table_), field_names),  // no field_entries
    0,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    _class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::RegisterSceneResponse>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
  }}, {{
    65535, 65535
  }},
  // no field_entries, or aux_entries
  {{
  }},
};








::google::protobuf::Metadata RegisterSceneResponse::GetMetadata() const {
  return ::google::protobuf::internal::ZeroFieldsBase::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class UnRegisterSceneRequest::_Internal {
 public:
};

UnRegisterSceneRequest::UnRegisterSceneRequest(::google::protobuf::Arena* arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:UnRegisterSceneRequest)
}
UnRegisterSceneRequest::UnRegisterSceneRequest(
    ::google::protobuf::Arena* arena, const UnRegisterSceneRequest& from)
    : UnRegisterSceneRequest(arena) {
  MergeFrom(from);
}
inline PROTOBUF_NDEBUG_INLINE UnRegisterSceneRequest::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0} {}

inline void UnRegisterSceneRequest::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, scene_node_id_),
           0,
           offsetof(Impl_, reason_) -
               offsetof(Impl_, scene_node_id_) +
               sizeof(Impl_::reason_));
}
UnRegisterSceneRequest::~UnRegisterSceneRequest() {
  // @@protoc_insertion_point(destructor:UnRegisterSceneRequest)
  SharedDtor(*this);
}
inline void UnRegisterSceneRequest::SharedDtor(MessageLite& self) {
  UnRegisterSceneRequest& this_ = static_cast<UnRegisterSceneRequest&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  this_._impl_.~Impl_();
}

inline void* UnRegisterSceneRequest::PlacementNew_(const void*, void* mem,
                                        ::google::protobuf::Arena* arena) {
  return ::new (mem) UnRegisterSceneRequest(arena);
}
constexpr auto UnRegisterSceneRequest::InternalNewImpl_() {
  return ::google::protobuf::internal::MessageCreator::ZeroInit(sizeof(UnRegisterSceneRequest),
                                            alignof(UnRegisterSceneRequest));
}
PROTOBUF_CONSTINIT
PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::google::protobuf::internal::ClassDataFull UnRegisterSceneRequest::_class_data_ = {
    ::google::protobuf::internal::ClassData{
        &_UnRegisterSceneRequest_default_instance_._instance,
        &_table_.header,
        nullptr,  // OnDemandRegisterArenaDtor
        nullptr,  // IsInitialized
        &UnRegisterSceneRequest::MergeImpl,
        ::google::protobuf::Message::GetNewImpl<UnRegisterSceneRequest>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
        &UnRegisterSceneRequest::SharedDtor,
        ::google::protobuf::Message::GetClearImpl<UnRegisterSceneRequest>(), &UnRegisterSceneRequest::ByteSizeLong,
            &UnRegisterSceneRequest::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
        PROTOBUF_FIELD_OFFSET(UnRegisterSceneRequest, _impl_._cached_size_),
        false,
    },
    &UnRegisterSceneRequest::kDescriptorMethods,
    &descriptor_table_proto_2flogic_2fserver_2fcentre_5fscene_2eproto,
    nullptr,  // tracker
};
const ::google::protobuf::internal::ClassData* UnRegisterSceneRequest::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_class_data_.tc_table);
  return _class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<2, 3, 0, 0, 2> UnRegisterSceneRequest::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    3, 24,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967288,  // skipmap
    offsetof(decltype(_table_), field_entries),
    3,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    _class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::UnRegisterSceneRequest>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
    // uint32 scene_node_id = 1;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(UnRegisterSceneRequest, _impl_.scene_node_id_), 63>(),
     {8, 63, 0, PROTOBUF_FIELD_OFFSET(UnRegisterSceneRequest, _impl_.scene_node_id_)}},
    // uint32 scene = 2;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(UnRegisterSceneRequest, _impl_.scene_), 63>(),
     {16, 63, 0, PROTOBUF_FIELD_OFFSET(UnRegisterSceneRequest, _impl_.scene_)}},
    // uint32 reason = 3;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(UnRegisterSceneRequest, _impl_.reason_), 63>(),
     {24, 63, 0, PROTOBUF_FIELD_OFFSET(UnRegisterSceneRequest, _impl_.reason_)}},
  }}, {{
    65535, 65535
  }}, {{
    // uint32 scene_node_id = 1;
    {PROTOBUF_FIELD_OFFSET(UnRegisterSceneRequest, _impl_.scene_node_id_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUInt32)},
    // uint32 scene = 2;
    {PROTOBUF_FIELD_OFFSET(UnRegisterSceneRequest, _impl_.scene_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUInt32)},
    // uint32 reason = 3;
    {PROTOBUF_FIELD_OFFSET(UnRegisterSceneRequest, _impl_.reason_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUInt32)},
  }},
  // no aux_entries
  {{
  }},
};

PROTOBUF_NOINLINE void UnRegisterSceneRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:UnRegisterSceneRequest)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&_impl_.scene_node_id_, 0, static_cast<::size_t>(
      reinterpret_cast<char*>(&_impl_.reason_) -
      reinterpret_cast<char*>(&_impl_.scene_node_id_)) + sizeof(_impl_.reason_));
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::uint8_t* UnRegisterSceneRequest::_InternalSerialize(
            const MessageLite& base, ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) {
          const UnRegisterSceneRequest& this_ = static_cast<const UnRegisterSceneRequest&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::uint8_t* UnRegisterSceneRequest::_InternalSerialize(
            ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) const {
          const UnRegisterSceneRequest& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(serialize_to_array_start:UnRegisterSceneRequest)
          ::uint32_t cached_has_bits = 0;
          (void)cached_has_bits;

          // uint32 scene_node_id = 1;
          if (this_._internal_scene_node_id() != 0) {
            target = stream->EnsureSpace(target);
            target = ::_pbi::WireFormatLite::WriteUInt32ToArray(
                1, this_._internal_scene_node_id(), target);
          }

          // uint32 scene = 2;
          if (this_._internal_scene() != 0) {
            target = stream->EnsureSpace(target);
            target = ::_pbi::WireFormatLite::WriteUInt32ToArray(
                2, this_._internal_scene(), target);
          }

          // uint32 reason = 3;
          if (this_._internal_reason() != 0) {
            target = stream->EnsureSpace(target);
            target = ::_pbi::WireFormatLite::WriteUInt32ToArray(
                3, this_._internal_reason(), target);
          }

          if (PROTOBUF_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
            target =
                ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
                    this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
          }
          // @@protoc_insertion_point(serialize_to_array_end:UnRegisterSceneRequest)
          return target;
        }

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::size_t UnRegisterSceneRequest::ByteSizeLong(const MessageLite& base) {
          const UnRegisterSceneRequest& this_ = static_cast<const UnRegisterSceneRequest&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::size_t UnRegisterSceneRequest::ByteSizeLong() const {
          const UnRegisterSceneRequest& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(message_byte_size_start:UnRegisterSceneRequest)
          ::size_t total_size = 0;

          ::uint32_t cached_has_bits = 0;
          // Prevent compiler warnings about cached_has_bits being unused
          (void)cached_has_bits;

          ::_pbi::Prefetch5LinesFrom7Lines(&this_);
           {
            // uint32 scene_node_id = 1;
            if (this_._internal_scene_node_id() != 0) {
              total_size += ::_pbi::WireFormatLite::UInt32SizePlusOne(
                  this_._internal_scene_node_id());
            }
            // uint32 scene = 2;
            if (this_._internal_scene() != 0) {
              total_size += ::_pbi::WireFormatLite::UInt32SizePlusOne(
                  this_._internal_scene());
            }
            // uint32 reason = 3;
            if (this_._internal_reason() != 0) {
              total_size += ::_pbi::WireFormatLite::UInt32SizePlusOne(
                  this_._internal_reason());
            }
          }
          return this_.MaybeComputeUnknownFieldsSize(total_size,
                                                     &this_._impl_._cached_size_);
        }

void UnRegisterSceneRequest::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<UnRegisterSceneRequest*>(&to_msg);
  auto& from = static_cast<const UnRegisterSceneRequest&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:UnRegisterSceneRequest)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_scene_node_id() != 0) {
    _this->_impl_.scene_node_id_ = from._impl_.scene_node_id_;
  }
  if (from._internal_scene() != 0) {
    _this->_impl_.scene_ = from._impl_.scene_;
  }
  if (from._internal_reason() != 0) {
    _this->_impl_.reason_ = from._impl_.reason_;
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void UnRegisterSceneRequest::CopyFrom(const UnRegisterSceneRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:UnRegisterSceneRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void UnRegisterSceneRequest::InternalSwap(UnRegisterSceneRequest* PROTOBUF_RESTRICT other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(UnRegisterSceneRequest, _impl_.reason_)
      + sizeof(UnRegisterSceneRequest::_impl_.reason_)
      - PROTOBUF_FIELD_OFFSET(UnRegisterSceneRequest, _impl_.scene_node_id_)>(
          reinterpret_cast<char*>(&_impl_.scene_node_id_),
          reinterpret_cast<char*>(&other->_impl_.scene_node_id_));
}

::google::protobuf::Metadata UnRegisterSceneRequest::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

const ::google::protobuf::ServiceDescriptor* CentreSceneService::descriptor() {
  ::google::protobuf::internal::AssignDescriptors(&descriptor_table_proto_2flogic_2fserver_2fcentre_5fscene_2eproto);
  return file_level_service_descriptors_proto_2flogic_2fserver_2fcentre_5fscene_2eproto[0];
}

const ::google::protobuf::ServiceDescriptor* CentreSceneService::GetDescriptor() {
  return descriptor();
}

void CentreSceneService::RegisterScene(::google::protobuf::RpcController* controller,
                         const ::RegisterSceneRequest*, ::RegisterSceneResponse*, ::google::protobuf::Closure* done) {
  controller->SetFailed("Method RegisterScene() not implemented.");
  done->Run();
}
void CentreSceneService::UnRegisterScene(::google::protobuf::RpcController* controller,
                         const ::UnRegisterSceneRequest*, ::Empty*, ::google::protobuf::Closure* done) {
  controller->SetFailed("Method UnRegisterScene() not implemented.");
  done->Run();
}

void CentreSceneService::CallMethod(
    const ::google::protobuf::MethodDescriptor* method,
    ::google::protobuf::RpcController* controller,
    const ::google::protobuf::Message* request,
    ::google::protobuf::Message* response, ::google::protobuf::Closure* done) {
  ABSL_DCHECK_EQ(method->service(), file_level_service_descriptors_proto_2flogic_2fserver_2fcentre_5fscene_2eproto[0]);
  switch (method->index()) {
    case 0:
      this->RegisterScene(controller,
                   ::google::protobuf::DownCastMessage<::RegisterSceneRequest>(request),
                   ::google::protobuf::DownCastMessage<::RegisterSceneResponse>(response),
                   done);
      break;
    case 1:
      this->UnRegisterScene(controller,
                   ::google::protobuf::DownCastMessage<::UnRegisterSceneRequest>(request),
                   ::google::protobuf::DownCastMessage<::Empty>(response),
                   done);
      break;

    default:
      ABSL_LOG(FATAL) << "Bad method index; this should never happen.";
      break;
  }
}

const ::google::protobuf::Message& CentreSceneService::GetRequestPrototype(
    const ::google::protobuf::MethodDescriptor* method) const {
  ABSL_DCHECK_EQ(method->service(), descriptor());
  switch (method->index()) {
    case 0:
      return ::RegisterSceneRequest::default_instance();
    case 1:
      return ::UnRegisterSceneRequest::default_instance();

    default:
      ABSL_LOG(FATAL) << "Bad method index; this should never happen.";
      return *::google::protobuf::MessageFactory::generated_factory()
                  ->GetPrototype(method->input_type());
  }
}

const ::google::protobuf::Message& CentreSceneService::GetResponsePrototype(
    const ::google::protobuf::MethodDescriptor* method) const {
  ABSL_DCHECK_EQ(method->service(), descriptor());
  switch (method->index()) {
    case 0:
      return ::RegisterSceneResponse::default_instance();
    case 1:
      return ::Empty::default_instance();

    default:
      ABSL_LOG(FATAL) << "Bad method index; this should never happen.";
      return *::google::protobuf::MessageFactory::generated_factory()
                  ->GetPrototype(method->output_type());
  }
}

CentreSceneService_Stub::CentreSceneService_Stub(::google::protobuf::RpcChannel* channel)
    : channel_(channel), owns_channel_(false) {}

CentreSceneService_Stub::CentreSceneService_Stub(
    ::google::protobuf::RpcChannel* channel,
    ::google::protobuf::Service::ChannelOwnership ownership)
    : channel_(channel),
      owns_channel_(ownership ==
                    ::google::protobuf::Service::STUB_OWNS_CHANNEL) {}

CentreSceneService_Stub::~CentreSceneService_Stub() {
  if (owns_channel_) delete channel_;
}

void CentreSceneService_Stub::RegisterScene(::google::protobuf::RpcController* controller,
                              const ::RegisterSceneRequest* request,
                              ::RegisterSceneResponse* response, ::google::protobuf::Closure* done) {
  channel_->CallMethod(descriptor()->method(0), controller,
                       request, response, done);
}
void CentreSceneService_Stub::UnRegisterScene(::google::protobuf::RpcController* controller,
                              const ::UnRegisterSceneRequest* request,
                              ::Empty* response, ::google::protobuf::Closure* done) {
  channel_->CallMethod(descriptor()->method(1), controller,
                       request, response, done);
}
// @@protoc_insertion_point(namespace_scope)
namespace google {
namespace protobuf {
}  // namespace protobuf
}  // namespace google
// @@protoc_insertion_point(global_scope)
PROTOBUF_ATTRIBUTE_INIT_PRIORITY2 static ::std::false_type
    _static_init2_ PROTOBUF_UNUSED =
        (::_pbi::AddDescriptors(&descriptor_table_proto_2flogic_2fserver_2fcentre_5fscene_2eproto),
         ::std::false_type{});
#include "google/protobuf/port_undef.inc"
