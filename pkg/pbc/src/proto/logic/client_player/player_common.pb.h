// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: proto/logic/client_player/player_common.proto
// Protobuf C++ Version: 5.26.1

#ifndef GOOGLE_PROTOBUF_INCLUDED_proto_2flogic_2fclient_5fplayer_2fplayer_5fcommon_2eproto_2epb_2eh
#define GOOGLE_PROTOBUF_INCLUDED_proto_2flogic_2fclient_5fplayer_2fplayer_5fcommon_2eproto_2epb_2eh

#include <limits>
#include <string>
#include <type_traits>
#include <utility>

#include "google/protobuf/port_def.inc"
#if PROTOBUF_VERSION != 5026001
#error "Protobuf C++ gencode is built with an incompatible version of"
#error "Protobuf C++ headers/runtime. See"
#error "https://protobuf.dev/support/cross-version-runtime-guarantee/#cpp"
#endif
#include "google/protobuf/port_undef.inc"
#include "google/protobuf/io/coded_stream.h"
#include "google/protobuf/arena.h"
#include "google/protobuf/arenastring.h"
#include "google/protobuf/generated_message_tctable_decl.h"
#include "google/protobuf/generated_message_util.h"
#include "google/protobuf/metadata_lite.h"
#include "google/protobuf/generated_message_reflection.h"
#include "google/protobuf/repeated_field.h"  // IWYU pragma: export
#include "google/protobuf/extension_set.h"  // IWYU pragma: export
#include "google/protobuf/service.h"
#include "proto/common/tip.pb.h"
#include "proto/common/common.pb.h"
#include "proto/common/empty.pb.h"
// @@protoc_insertion_point(includes)

// Must be included last.
#include "google/protobuf/port_def.inc"

#define PROTOBUF_INTERNAL_EXPORT_proto_2flogic_2fclient_5fplayer_2fplayer_5fcommon_2eproto

namespace google {
namespace protobuf {
namespace internal {
class AnyMetadata;
}  // namespace internal
}  // namespace protobuf
}  // namespace google

// Internal implementation detail -- do not use these members.
struct TableStruct_proto_2flogic_2fclient_5fplayer_2fplayer_5fcommon_2eproto {
  static const ::uint32_t offsets[];
};
extern const ::google::protobuf::internal::DescriptorTable
    descriptor_table_proto_2flogic_2fclient_5fplayer_2fplayer_5fcommon_2eproto;
namespace google {
namespace protobuf {
}  // namespace protobuf
}  // namespace google


// ===================================================================



// ===================================================================


// -------------------------------------------------------------------

class PlayerClientCommonService_Stub;
class PlayerClientCommonService : public ::google::protobuf::Service {
 protected:
  PlayerClientCommonService() = default;

 public:
  using Stub = PlayerClientCommonService_Stub;

  PlayerClientCommonService(const PlayerClientCommonService&) = delete;
  PlayerClientCommonService& operator=(const PlayerClientCommonService&) = delete;
  virtual ~PlayerClientCommonService() = default;

  static const ::google::protobuf::ServiceDescriptor* descriptor();

  virtual void SendTipToClient(::google::protobuf::RpcController* controller,
                        const ::TipInfoMessage* request,
                        ::Empty* response,
                        ::google::protobuf::Closure* done);
  virtual void KickPlayer(::google::protobuf::RpcController* controller,
                        const ::TipInfoMessage* request,
                        ::Empty* response,
                        ::google::protobuf::Closure* done);

  // implements Service ----------------------------------------------
  const ::google::protobuf::ServiceDescriptor* GetDescriptor() override;

  void CallMethod(const ::google::protobuf::MethodDescriptor* method,
                  ::google::protobuf::RpcController* controller,
                  const ::google::protobuf::Message* request,
                  ::google::protobuf::Message* response,
                  ::google::protobuf::Closure* done) override;

  const ::google::protobuf::Message& GetRequestPrototype(
      const ::google::protobuf::MethodDescriptor* method) const override;

  const ::google::protobuf::Message& GetResponsePrototype(
      const ::google::protobuf::MethodDescriptor* method) const override;
};

class PlayerClientCommonService_Stub final : public PlayerClientCommonService {
 public:
  PlayerClientCommonService_Stub(::google::protobuf::RpcChannel* channel);
  PlayerClientCommonService_Stub(::google::protobuf::RpcChannel* channel,
                   ::google::protobuf::Service::ChannelOwnership ownership);

  PlayerClientCommonService_Stub(const PlayerClientCommonService_Stub&) = delete;
  PlayerClientCommonService_Stub& operator=(const PlayerClientCommonService_Stub&) = delete;

  ~PlayerClientCommonService_Stub() override;

  inline ::google::protobuf::RpcChannel* channel() { return channel_; }

  // implements PlayerClientCommonService ------------------------------------------
  void SendTipToClient(::google::protobuf::RpcController* controller,
                        const ::TipInfoMessage* request,
                        ::Empty* response,
                        ::google::protobuf::Closure* done) override;
  void KickPlayer(::google::protobuf::RpcController* controller,
                        const ::TipInfoMessage* request,
                        ::Empty* response,
                        ::google::protobuf::Closure* done) override;

 private:
  ::google::protobuf::RpcChannel* channel_;
  bool owns_channel_;
};
// ===================================================================



// ===================================================================


#ifdef __GNUC__
#pragma GCC diagnostic push
#pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif  // __GNUC__
#ifdef __GNUC__
#pragma GCC diagnostic pop
#endif  // __GNUC__

// @@protoc_insertion_point(namespace_scope)


// @@protoc_insertion_point(global_scope)

#include "google/protobuf/port_undef.inc"

#endif  // GOOGLE_PROTOBUF_INCLUDED_proto_2flogic_2fclient_5fplayer_2fplayer_5fcommon_2eproto_2epb_2eh
