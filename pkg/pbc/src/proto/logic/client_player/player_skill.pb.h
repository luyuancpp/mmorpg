// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: logic/client_player/player_skill.proto
// Protobuf C++ Version: 5.26.1

#ifndef GOOGLE_PROTOBUF_INCLUDED_logic_2fclient_5fplayer_2fplayer_5fskill_2eproto_2epb_2eh
#define GOOGLE_PROTOBUF_INCLUDED_logic_2fclient_5fplayer_2fplayer_5fskill_2eproto_2epb_2eh

#include <limits>
#include <string>
#include <type_traits>
#include <utility>

#include "google/protobuf/port_def.inc"
#if PROTOBUF_VERSION != 5026001
#error "Protobuf C++ gencode is built with an incompatible version of"
#error "Protobuf C++ headers/runtime. See"
#error "https://protobuf.dev/support/cross-version-runtime-guarantee/#cpp"
#endif
#include "google/protobuf/port_undef.inc"
#include "google/protobuf/io/coded_stream.h"
#include "google/protobuf/arena.h"
#include "google/protobuf/arenastring.h"
#include "google/protobuf/generated_message_tctable_decl.h"
#include "google/protobuf/generated_message_util.h"
#include "google/protobuf/metadata_lite.h"
#include "google/protobuf/generated_message_reflection.h"
#include "google/protobuf/message.h"
#include "google/protobuf/repeated_field.h"  // IWYU pragma: export
#include "google/protobuf/extension_set.h"  // IWYU pragma: export
#include "google/protobuf/service.h"
#include "google/protobuf/unknown_field_set.h"
#include "common/tip.pb.h"
#include "common/comp.pb.h"
#include "common/empty.pb.h"
#include "logic/component/skill_comp.pb.h"
#include "logic/component/actor_comp.pb.h"
// @@protoc_insertion_point(includes)

// Must be included last.
#include "google/protobuf/port_def.inc"

#define PROTOBUF_INTERNAL_EXPORT_logic_2fclient_5fplayer_2fplayer_5fskill_2eproto

namespace google {
namespace protobuf {
namespace internal {
class AnyMetadata;
}  // namespace internal
}  // namespace protobuf
}  // namespace google

// Internal implementation detail -- do not use these members.
struct TableStruct_logic_2fclient_5fplayer_2fplayer_5fskill_2eproto {
  static const ::uint32_t offsets[];
};
extern const ::google::protobuf::internal::DescriptorTable
    descriptor_table_logic_2fclient_5fplayer_2fplayer_5fskill_2eproto;
class SkillInterruptedS2C;
struct SkillInterruptedS2CDefaultTypeInternal;
extern SkillInterruptedS2CDefaultTypeInternal _SkillInterruptedS2C_default_instance_;
class SkillUsedS2C;
struct SkillUsedS2CDefaultTypeInternal;
extern SkillUsedS2CDefaultTypeInternal _SkillUsedS2C_default_instance_;
class UseSkillRequest;
struct UseSkillRequestDefaultTypeInternal;
extern UseSkillRequestDefaultTypeInternal _UseSkillRequest_default_instance_;
class UseSkillResponse;
struct UseSkillResponseDefaultTypeInternal;
extern UseSkillResponseDefaultTypeInternal _UseSkillResponse_default_instance_;
namespace google {
namespace protobuf {
}  // namespace protobuf
}  // namespace google


// ===================================================================


// -------------------------------------------------------------------

class SkillInterruptedS2C final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:SkillInterruptedS2C) */ {
 public:
  inline SkillInterruptedS2C() : SkillInterruptedS2C(nullptr) {}
  ~SkillInterruptedS2C() override;
  template <typename = void>
  explicit PROTOBUF_CONSTEXPR SkillInterruptedS2C(
      ::google::protobuf::internal::ConstantInitialized);

  inline SkillInterruptedS2C(const SkillInterruptedS2C& from) : SkillInterruptedS2C(nullptr, from) {}
  inline SkillInterruptedS2C(SkillInterruptedS2C&& from) noexcept
      : SkillInterruptedS2C(nullptr, std::move(from)) {}
  inline SkillInterruptedS2C& operator=(const SkillInterruptedS2C& from) {
    CopyFrom(from);
    return *this;
  }
  inline SkillInterruptedS2C& operator=(SkillInterruptedS2C&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
#ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
#endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const SkillInterruptedS2C& default_instance() {
    return *internal_default_instance();
  }
  static inline const SkillInterruptedS2C* internal_default_instance() {
    return reinterpret_cast<const SkillInterruptedS2C*>(
        &_SkillInterruptedS2C_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 2;
  friend void swap(SkillInterruptedS2C& a, SkillInterruptedS2C& b) { a.Swap(&b); }
  inline void Swap(SkillInterruptedS2C* other) {
    if (other == this) return;
#ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr && GetArena() == other->GetArena()) {
#else   // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
#endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(SkillInterruptedS2C* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  SkillInterruptedS2C* New(::google::protobuf::Arena* arena = nullptr) const final {
    return ::google::protobuf::Message::DefaultConstruct<SkillInterruptedS2C>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const SkillInterruptedS2C& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const SkillInterruptedS2C& from) { SkillInterruptedS2C::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  ::size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::google::protobuf::internal::ParseContext* ctx) final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(SkillInterruptedS2C* other);
 private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() { return "SkillInterruptedS2C"; }

 protected:
  explicit SkillInterruptedS2C(::google::protobuf::Arena* arena);
  SkillInterruptedS2C(::google::protobuf::Arena* arena, const SkillInterruptedS2C& from);
  SkillInterruptedS2C(::google::protobuf::Arena* arena, SkillInterruptedS2C&& from) noexcept
      : SkillInterruptedS2C(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::MessageLite::ClassData* GetClassData()
      const final;

 public:
  ::google::protobuf::Metadata GetMetadata() const final;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kEntityFieldNumber = 1,
    kTargetEntityFieldNumber = 2,
    kSkillTableIdFieldNumber = 3,
    kReasonCodeFieldNumber = 4,
  };
  // uint64 entity = 1;
  void clear_entity() ;
  ::uint64_t entity() const;
  void set_entity(::uint64_t value);

  private:
  ::uint64_t _internal_entity() const;
  void _internal_set_entity(::uint64_t value);

  public:
  // uint64 target_entity = 2;
  void clear_target_entity() ;
  ::uint64_t target_entity() const;
  void set_target_entity(::uint64_t value);

  private:
  ::uint64_t _internal_target_entity() const;
  void _internal_set_target_entity(::uint64_t value);

  public:
  // uint32 skill_table_id = 3;
  void clear_skill_table_id() ;
  ::uint32_t skill_table_id() const;
  void set_skill_table_id(::uint32_t value);

  private:
  ::uint32_t _internal_skill_table_id() const;
  void _internal_set_skill_table_id(::uint32_t value);

  public:
  // uint32 reason_code = 4;
  void clear_reason_code() ;
  ::uint32_t reason_code() const;
  void set_reason_code(::uint32_t value);

  private:
  ::uint32_t _internal_reason_code() const;
  void _internal_set_reason_code(::uint32_t value);

  public:
  // @@protoc_insertion_point(class_scope:SkillInterruptedS2C)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      2, 4, 0,
      0, 2>
      _table_;
  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from);
    ::uint64_t entity_;
    ::uint64_t target_entity_;
    ::uint32_t skill_table_id_;
    ::uint32_t reason_code_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_logic_2fclient_5fplayer_2fplayer_5fskill_2eproto;
};
// -------------------------------------------------------------------

class UseSkillResponse final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:UseSkillResponse) */ {
 public:
  inline UseSkillResponse() : UseSkillResponse(nullptr) {}
  ~UseSkillResponse() override;
  template <typename = void>
  explicit PROTOBUF_CONSTEXPR UseSkillResponse(
      ::google::protobuf::internal::ConstantInitialized);

  inline UseSkillResponse(const UseSkillResponse& from) : UseSkillResponse(nullptr, from) {}
  inline UseSkillResponse(UseSkillResponse&& from) noexcept
      : UseSkillResponse(nullptr, std::move(from)) {}
  inline UseSkillResponse& operator=(const UseSkillResponse& from) {
    CopyFrom(from);
    return *this;
  }
  inline UseSkillResponse& operator=(UseSkillResponse&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
#ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
#endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const UseSkillResponse& default_instance() {
    return *internal_default_instance();
  }
  static inline const UseSkillResponse* internal_default_instance() {
    return reinterpret_cast<const UseSkillResponse*>(
        &_UseSkillResponse_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 1;
  friend void swap(UseSkillResponse& a, UseSkillResponse& b) { a.Swap(&b); }
  inline void Swap(UseSkillResponse* other) {
    if (other == this) return;
#ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr && GetArena() == other->GetArena()) {
#else   // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
#endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(UseSkillResponse* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  UseSkillResponse* New(::google::protobuf::Arena* arena = nullptr) const final {
    return ::google::protobuf::Message::DefaultConstruct<UseSkillResponse>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const UseSkillResponse& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const UseSkillResponse& from) { UseSkillResponse::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  ::size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::google::protobuf::internal::ParseContext* ctx) final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(UseSkillResponse* other);
 private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() { return "UseSkillResponse"; }

 protected:
  explicit UseSkillResponse(::google::protobuf::Arena* arena);
  UseSkillResponse(::google::protobuf::Arena* arena, const UseSkillResponse& from);
  UseSkillResponse(::google::protobuf::Arena* arena, UseSkillResponse&& from) noexcept
      : UseSkillResponse(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::MessageLite::ClassData* GetClassData()
      const final;

 public:
  ::google::protobuf::Metadata GetMetadata() const final;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kErrorMessageFieldNumber = 1,
  };
  // .TipInfoMessage error_message = 1;
  bool has_error_message() const;
  void clear_error_message() ;
  const ::TipInfoMessage& error_message() const;
  PROTOBUF_NODISCARD ::TipInfoMessage* release_error_message();
  ::TipInfoMessage* mutable_error_message();
  void set_allocated_error_message(::TipInfoMessage* value);
  void unsafe_arena_set_allocated_error_message(::TipInfoMessage* value);
  ::TipInfoMessage* unsafe_arena_release_error_message();

  private:
  const ::TipInfoMessage& _internal_error_message() const;
  ::TipInfoMessage* _internal_mutable_error_message();

  public:
  // @@protoc_insertion_point(class_scope:UseSkillResponse)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      0, 1, 1,
      0, 2>
      _table_;
  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from);
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    ::TipInfoMessage* error_message_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_logic_2fclient_5fplayer_2fplayer_5fskill_2eproto;
};
// -------------------------------------------------------------------

class UseSkillRequest final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:UseSkillRequest) */ {
 public:
  inline UseSkillRequest() : UseSkillRequest(nullptr) {}
  ~UseSkillRequest() override;
  template <typename = void>
  explicit PROTOBUF_CONSTEXPR UseSkillRequest(
      ::google::protobuf::internal::ConstantInitialized);

  inline UseSkillRequest(const UseSkillRequest& from) : UseSkillRequest(nullptr, from) {}
  inline UseSkillRequest(UseSkillRequest&& from) noexcept
      : UseSkillRequest(nullptr, std::move(from)) {}
  inline UseSkillRequest& operator=(const UseSkillRequest& from) {
    CopyFrom(from);
    return *this;
  }
  inline UseSkillRequest& operator=(UseSkillRequest&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
#ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
#endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const UseSkillRequest& default_instance() {
    return *internal_default_instance();
  }
  static inline const UseSkillRequest* internal_default_instance() {
    return reinterpret_cast<const UseSkillRequest*>(
        &_UseSkillRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 0;
  friend void swap(UseSkillRequest& a, UseSkillRequest& b) { a.Swap(&b); }
  inline void Swap(UseSkillRequest* other) {
    if (other == this) return;
#ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr && GetArena() == other->GetArena()) {
#else   // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
#endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(UseSkillRequest* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  UseSkillRequest* New(::google::protobuf::Arena* arena = nullptr) const final {
    return ::google::protobuf::Message::DefaultConstruct<UseSkillRequest>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const UseSkillRequest& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const UseSkillRequest& from) { UseSkillRequest::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  ::size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::google::protobuf::internal::ParseContext* ctx) final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(UseSkillRequest* other);
 private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() { return "UseSkillRequest"; }

 protected:
  explicit UseSkillRequest(::google::protobuf::Arena* arena);
  UseSkillRequest(::google::protobuf::Arena* arena, const UseSkillRequest& from);
  UseSkillRequest(::google::protobuf::Arena* arena, UseSkillRequest&& from) noexcept
      : UseSkillRequest(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::MessageLite::ClassData* GetClassData()
      const final;

 public:
  ::google::protobuf::Metadata GetMetadata() const final;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kPositionFieldNumber = 3,
    kRotationFieldNumber = 4,
    kTargetIdFieldNumber = 2,
    kSkillTableIdFieldNumber = 1,
  };
  // .Vector3 position = 3;
  bool has_position() const;
  void clear_position() ;
  const ::Vector3& position() const;
  PROTOBUF_NODISCARD ::Vector3* release_position();
  ::Vector3* mutable_position();
  void set_allocated_position(::Vector3* value);
  void unsafe_arena_set_allocated_position(::Vector3* value);
  ::Vector3* unsafe_arena_release_position();

  private:
  const ::Vector3& _internal_position() const;
  ::Vector3* _internal_mutable_position();

  public:
  // .Rotation rotation = 4;
  bool has_rotation() const;
  void clear_rotation() ;
  const ::Rotation& rotation() const;
  PROTOBUF_NODISCARD ::Rotation* release_rotation();
  ::Rotation* mutable_rotation();
  void set_allocated_rotation(::Rotation* value);
  void unsafe_arena_set_allocated_rotation(::Rotation* value);
  ::Rotation* unsafe_arena_release_rotation();

  private:
  const ::Rotation& _internal_rotation() const;
  ::Rotation* _internal_mutable_rotation();

  public:
  // uint64 target_id = 2;
  void clear_target_id() ;
  ::uint64_t target_id() const;
  void set_target_id(::uint64_t value);

  private:
  ::uint64_t _internal_target_id() const;
  void _internal_set_target_id(::uint64_t value);

  public:
  // uint32 skill_table_id = 1;
  void clear_skill_table_id() ;
  ::uint32_t skill_table_id() const;
  void set_skill_table_id(::uint32_t value);

  private:
  ::uint32_t _internal_skill_table_id() const;
  void _internal_set_skill_table_id(::uint32_t value);

  public:
  // @@protoc_insertion_point(class_scope:UseSkillRequest)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      2, 4, 2,
      0, 2>
      _table_;
  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from);
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    ::Vector3* position_;
    ::Rotation* rotation_;
    ::uint64_t target_id_;
    ::uint32_t skill_table_id_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_logic_2fclient_5fplayer_2fplayer_5fskill_2eproto;
};
// -------------------------------------------------------------------

class SkillUsedS2C final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:SkillUsedS2C) */ {
 public:
  inline SkillUsedS2C() : SkillUsedS2C(nullptr) {}
  ~SkillUsedS2C() override;
  template <typename = void>
  explicit PROTOBUF_CONSTEXPR SkillUsedS2C(
      ::google::protobuf::internal::ConstantInitialized);

  inline SkillUsedS2C(const SkillUsedS2C& from) : SkillUsedS2C(nullptr, from) {}
  inline SkillUsedS2C(SkillUsedS2C&& from) noexcept
      : SkillUsedS2C(nullptr, std::move(from)) {}
  inline SkillUsedS2C& operator=(const SkillUsedS2C& from) {
    CopyFrom(from);
    return *this;
  }
  inline SkillUsedS2C& operator=(SkillUsedS2C&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
#ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
#endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const SkillUsedS2C& default_instance() {
    return *internal_default_instance();
  }
  static inline const SkillUsedS2C* internal_default_instance() {
    return reinterpret_cast<const SkillUsedS2C*>(
        &_SkillUsedS2C_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 3;
  friend void swap(SkillUsedS2C& a, SkillUsedS2C& b) { a.Swap(&b); }
  inline void Swap(SkillUsedS2C* other) {
    if (other == this) return;
#ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr && GetArena() == other->GetArena()) {
#else   // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
#endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(SkillUsedS2C* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  SkillUsedS2C* New(::google::protobuf::Arena* arena = nullptr) const final {
    return ::google::protobuf::Message::DefaultConstruct<SkillUsedS2C>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const SkillUsedS2C& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const SkillUsedS2C& from) { SkillUsedS2C::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  ::size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::google::protobuf::internal::ParseContext* ctx) final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(SkillUsedS2C* other);
 private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() { return "SkillUsedS2C"; }

 protected:
  explicit SkillUsedS2C(::google::protobuf::Arena* arena);
  SkillUsedS2C(::google::protobuf::Arena* arena, const SkillUsedS2C& from);
  SkillUsedS2C(::google::protobuf::Arena* arena, SkillUsedS2C&& from) noexcept
      : SkillUsedS2C(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::MessageLite::ClassData* GetClassData()
      const final;

 public:
  ::google::protobuf::Metadata GetMetadata() const final;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kTargetEntityFieldNumber = 2,
    kPositionFieldNumber = 4,
    kEntityFieldNumber = 1,
    kTimeStampFieldNumber = 5,
    kSkillTableIdFieldNumber = 3,
  };
  // repeated uint64 target_entity = 2;
  int target_entity_size() const;
  private:
  int _internal_target_entity_size() const;

  public:
  void clear_target_entity() ;
  ::uint64_t target_entity(int index) const;
  void set_target_entity(int index, ::uint64_t value);
  void add_target_entity(::uint64_t value);
  const ::google::protobuf::RepeatedField<::uint64_t>& target_entity() const;
  ::google::protobuf::RepeatedField<::uint64_t>* mutable_target_entity();

  private:
  const ::google::protobuf::RepeatedField<::uint64_t>& _internal_target_entity() const;
  ::google::protobuf::RepeatedField<::uint64_t>* _internal_mutable_target_entity();

  public:
  // .Vector3 position = 4;
  bool has_position() const;
  void clear_position() ;
  const ::Vector3& position() const;
  PROTOBUF_NODISCARD ::Vector3* release_position();
  ::Vector3* mutable_position();
  void set_allocated_position(::Vector3* value);
  void unsafe_arena_set_allocated_position(::Vector3* value);
  ::Vector3* unsafe_arena_release_position();

  private:
  const ::Vector3& _internal_position() const;
  ::Vector3* _internal_mutable_position();

  public:
  // uint64 entity = 1;
  void clear_entity() ;
  ::uint64_t entity() const;
  void set_entity(::uint64_t value);

  private:
  ::uint64_t _internal_entity() const;
  void _internal_set_entity(::uint64_t value);

  public:
  // uint64 time_stamp = 5;
  void clear_time_stamp() ;
  ::uint64_t time_stamp() const;
  void set_time_stamp(::uint64_t value);

  private:
  ::uint64_t _internal_time_stamp() const;
  void _internal_set_time_stamp(::uint64_t value);

  public:
  // uint32 skill_table_id = 3;
  void clear_skill_table_id() ;
  ::uint32_t skill_table_id() const;
  void set_skill_table_id(::uint32_t value);

  private:
  ::uint32_t _internal_skill_table_id() const;
  void _internal_set_skill_table_id(::uint32_t value);

  public:
  // @@protoc_insertion_point(class_scope:SkillUsedS2C)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      3, 5, 1,
      0, 2>
      _table_;
  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from);
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    ::google::protobuf::RepeatedField<::uint64_t> target_entity_;
    mutable ::google::protobuf::internal::CachedSize _target_entity_cached_byte_size_;
    ::Vector3* position_;
    ::uint64_t entity_;
    ::uint64_t time_stamp_;
    ::uint32_t skill_table_id_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_logic_2fclient_5fplayer_2fplayer_5fskill_2eproto;
};

// ===================================================================


// -------------------------------------------------------------------

class PlayerSkillService_Stub;
class PlayerSkillService : public ::google::protobuf::Service {
 protected:
  PlayerSkillService() = default;

 public:
  using Stub = PlayerSkillService_Stub;

  PlayerSkillService(const PlayerSkillService&) = delete;
  PlayerSkillService& operator=(const PlayerSkillService&) = delete;
  virtual ~PlayerSkillService() = default;

  static const ::google::protobuf::ServiceDescriptor* descriptor();

  virtual void UseSkill(::google::protobuf::RpcController* controller,
                        const ::UseSkillRequest* request,
                        ::UseSkillResponse* response,
                        ::google::protobuf::Closure* done);
  virtual void NotifySkillUsed(::google::protobuf::RpcController* controller,
                        const ::SkillUsedS2C* request,
                        ::Empty* response,
                        ::google::protobuf::Closure* done);
  virtual void NotifySkillInterrupted(::google::protobuf::RpcController* controller,
                        const ::SkillInterruptedS2C* request,
                        ::Empty* response,
                        ::google::protobuf::Closure* done);

  // implements Service ----------------------------------------------
  const ::google::protobuf::ServiceDescriptor* GetDescriptor() override;

  void CallMethod(const ::google::protobuf::MethodDescriptor* method,
                  ::google::protobuf::RpcController* controller,
                  const ::google::protobuf::Message* request,
                  ::google::protobuf::Message* response,
                  ::google::protobuf::Closure* done) override;

  const ::google::protobuf::Message& GetRequestPrototype(
      const ::google::protobuf::MethodDescriptor* method) const override;

  const ::google::protobuf::Message& GetResponsePrototype(
      const ::google::protobuf::MethodDescriptor* method) const override;
};

class PlayerSkillService_Stub final : public PlayerSkillService {
 public:
  PlayerSkillService_Stub(::google::protobuf::RpcChannel* channel);
  PlayerSkillService_Stub(::google::protobuf::RpcChannel* channel,
                   ::google::protobuf::Service::ChannelOwnership ownership);

  PlayerSkillService_Stub(const PlayerSkillService_Stub&) = delete;
  PlayerSkillService_Stub& operator=(const PlayerSkillService_Stub&) = delete;

  ~PlayerSkillService_Stub() override;

  inline ::google::protobuf::RpcChannel* channel() { return channel_; }

  // implements PlayerSkillService ------------------------------------------
  void UseSkill(::google::protobuf::RpcController* controller,
                        const ::UseSkillRequest* request,
                        ::UseSkillResponse* response,
                        ::google::protobuf::Closure* done) override;
  void NotifySkillUsed(::google::protobuf::RpcController* controller,
                        const ::SkillUsedS2C* request,
                        ::Empty* response,
                        ::google::protobuf::Closure* done) override;
  void NotifySkillInterrupted(::google::protobuf::RpcController* controller,
                        const ::SkillInterruptedS2C* request,
                        ::Empty* response,
                        ::google::protobuf::Closure* done) override;

 private:
  ::google::protobuf::RpcChannel* channel_;
  bool owns_channel_;
};
// ===================================================================



// ===================================================================


#ifdef __GNUC__
#pragma GCC diagnostic push
#pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif  // __GNUC__
// -------------------------------------------------------------------

// UseSkillRequest

// uint32 skill_table_id = 1;
inline void UseSkillRequest::clear_skill_table_id() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.skill_table_id_ = 0u;
}
inline ::uint32_t UseSkillRequest::skill_table_id() const {
  // @@protoc_insertion_point(field_get:UseSkillRequest.skill_table_id)
  return _internal_skill_table_id();
}
inline void UseSkillRequest::set_skill_table_id(::uint32_t value) {
  _internal_set_skill_table_id(value);
  // @@protoc_insertion_point(field_set:UseSkillRequest.skill_table_id)
}
inline ::uint32_t UseSkillRequest::_internal_skill_table_id() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.skill_table_id_;
}
inline void UseSkillRequest::_internal_set_skill_table_id(::uint32_t value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.skill_table_id_ = value;
}

// uint64 target_id = 2;
inline void UseSkillRequest::clear_target_id() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.target_id_ = ::uint64_t{0u};
}
inline ::uint64_t UseSkillRequest::target_id() const {
  // @@protoc_insertion_point(field_get:UseSkillRequest.target_id)
  return _internal_target_id();
}
inline void UseSkillRequest::set_target_id(::uint64_t value) {
  _internal_set_target_id(value);
  // @@protoc_insertion_point(field_set:UseSkillRequest.target_id)
}
inline ::uint64_t UseSkillRequest::_internal_target_id() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.target_id_;
}
inline void UseSkillRequest::_internal_set_target_id(::uint64_t value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.target_id_ = value;
}

// .Vector3 position = 3;
inline bool UseSkillRequest::has_position() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.position_ != nullptr);
  return value;
}
inline const ::Vector3& UseSkillRequest::_internal_position() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  const ::Vector3* p = _impl_.position_;
  return p != nullptr ? *p : reinterpret_cast<const ::Vector3&>(::_Vector3_default_instance_);
}
inline const ::Vector3& UseSkillRequest::position() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:UseSkillRequest.position)
  return _internal_position();
}
inline void UseSkillRequest::unsafe_arena_set_allocated_position(::Vector3* value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.position_);
  }
  _impl_.position_ = reinterpret_cast<::Vector3*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:UseSkillRequest.position)
}
inline ::Vector3* UseSkillRequest::release_position() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::Vector3* released = _impl_.position_;
  _impl_.position_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
  auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
  released = ::google::protobuf::internal::DuplicateIfNonNull(released);
  if (GetArena() == nullptr) {
    delete old;
  }
#else   // PROTOBUF_FORCE_COPY_IN_RELEASE
  if (GetArena() != nullptr) {
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
  }
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
  return released;
}
inline ::Vector3* UseSkillRequest::unsafe_arena_release_position() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  // @@protoc_insertion_point(field_release:UseSkillRequest.position)

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::Vector3* temp = _impl_.position_;
  _impl_.position_ = nullptr;
  return temp;
}
inline ::Vector3* UseSkillRequest::_internal_mutable_position() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  if (_impl_.position_ == nullptr) {
    auto* p = ::google::protobuf::Message::DefaultConstruct<::Vector3>(GetArena());
    _impl_.position_ = reinterpret_cast<::Vector3*>(p);
  }
  return _impl_.position_;
}
inline ::Vector3* UseSkillRequest::mutable_position() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  _impl_._has_bits_[0] |= 0x00000001u;
  ::Vector3* _msg = _internal_mutable_position();
  // @@protoc_insertion_point(field_mutable:UseSkillRequest.position)
  return _msg;
}
inline void UseSkillRequest::set_allocated_position(::Vector3* value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  if (message_arena == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.position_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = reinterpret_cast<::google::protobuf::MessageLite*>(value)->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }

  _impl_.position_ = reinterpret_cast<::Vector3*>(value);
  // @@protoc_insertion_point(field_set_allocated:UseSkillRequest.position)
}

// .Rotation rotation = 4;
inline bool UseSkillRequest::has_rotation() const {
  bool value = (_impl_._has_bits_[0] & 0x00000002u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.rotation_ != nullptr);
  return value;
}
inline const ::Rotation& UseSkillRequest::_internal_rotation() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  const ::Rotation* p = _impl_.rotation_;
  return p != nullptr ? *p : reinterpret_cast<const ::Rotation&>(::_Rotation_default_instance_);
}
inline const ::Rotation& UseSkillRequest::rotation() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:UseSkillRequest.rotation)
  return _internal_rotation();
}
inline void UseSkillRequest::unsafe_arena_set_allocated_rotation(::Rotation* value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.rotation_);
  }
  _impl_.rotation_ = reinterpret_cast<::Rotation*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000002u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000002u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:UseSkillRequest.rotation)
}
inline ::Rotation* UseSkillRequest::release_rotation() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);

  _impl_._has_bits_[0] &= ~0x00000002u;
  ::Rotation* released = _impl_.rotation_;
  _impl_.rotation_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
  auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
  released = ::google::protobuf::internal::DuplicateIfNonNull(released);
  if (GetArena() == nullptr) {
    delete old;
  }
#else   // PROTOBUF_FORCE_COPY_IN_RELEASE
  if (GetArena() != nullptr) {
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
  }
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
  return released;
}
inline ::Rotation* UseSkillRequest::unsafe_arena_release_rotation() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  // @@protoc_insertion_point(field_release:UseSkillRequest.rotation)

  _impl_._has_bits_[0] &= ~0x00000002u;
  ::Rotation* temp = _impl_.rotation_;
  _impl_.rotation_ = nullptr;
  return temp;
}
inline ::Rotation* UseSkillRequest::_internal_mutable_rotation() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  if (_impl_.rotation_ == nullptr) {
    auto* p = ::google::protobuf::Message::DefaultConstruct<::Rotation>(GetArena());
    _impl_.rotation_ = reinterpret_cast<::Rotation*>(p);
  }
  return _impl_.rotation_;
}
inline ::Rotation* UseSkillRequest::mutable_rotation() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  _impl_._has_bits_[0] |= 0x00000002u;
  ::Rotation* _msg = _internal_mutable_rotation();
  // @@protoc_insertion_point(field_mutable:UseSkillRequest.rotation)
  return _msg;
}
inline void UseSkillRequest::set_allocated_rotation(::Rotation* value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  if (message_arena == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.rotation_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = reinterpret_cast<::google::protobuf::MessageLite*>(value)->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000002u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000002u;
  }

  _impl_.rotation_ = reinterpret_cast<::Rotation*>(value);
  // @@protoc_insertion_point(field_set_allocated:UseSkillRequest.rotation)
}

// -------------------------------------------------------------------

// UseSkillResponse

// .TipInfoMessage error_message = 1;
inline bool UseSkillResponse::has_error_message() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.error_message_ != nullptr);
  return value;
}
inline const ::TipInfoMessage& UseSkillResponse::_internal_error_message() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  const ::TipInfoMessage* p = _impl_.error_message_;
  return p != nullptr ? *p : reinterpret_cast<const ::TipInfoMessage&>(::_TipInfoMessage_default_instance_);
}
inline const ::TipInfoMessage& UseSkillResponse::error_message() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:UseSkillResponse.error_message)
  return _internal_error_message();
}
inline void UseSkillResponse::unsafe_arena_set_allocated_error_message(::TipInfoMessage* value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.error_message_);
  }
  _impl_.error_message_ = reinterpret_cast<::TipInfoMessage*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:UseSkillResponse.error_message)
}
inline ::TipInfoMessage* UseSkillResponse::release_error_message() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::TipInfoMessage* released = _impl_.error_message_;
  _impl_.error_message_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
  auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
  released = ::google::protobuf::internal::DuplicateIfNonNull(released);
  if (GetArena() == nullptr) {
    delete old;
  }
#else   // PROTOBUF_FORCE_COPY_IN_RELEASE
  if (GetArena() != nullptr) {
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
  }
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
  return released;
}
inline ::TipInfoMessage* UseSkillResponse::unsafe_arena_release_error_message() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  // @@protoc_insertion_point(field_release:UseSkillResponse.error_message)

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::TipInfoMessage* temp = _impl_.error_message_;
  _impl_.error_message_ = nullptr;
  return temp;
}
inline ::TipInfoMessage* UseSkillResponse::_internal_mutable_error_message() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  if (_impl_.error_message_ == nullptr) {
    auto* p = ::google::protobuf::Message::DefaultConstruct<::TipInfoMessage>(GetArena());
    _impl_.error_message_ = reinterpret_cast<::TipInfoMessage*>(p);
  }
  return _impl_.error_message_;
}
inline ::TipInfoMessage* UseSkillResponse::mutable_error_message() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  _impl_._has_bits_[0] |= 0x00000001u;
  ::TipInfoMessage* _msg = _internal_mutable_error_message();
  // @@protoc_insertion_point(field_mutable:UseSkillResponse.error_message)
  return _msg;
}
inline void UseSkillResponse::set_allocated_error_message(::TipInfoMessage* value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  if (message_arena == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.error_message_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = reinterpret_cast<::google::protobuf::MessageLite*>(value)->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }

  _impl_.error_message_ = reinterpret_cast<::TipInfoMessage*>(value);
  // @@protoc_insertion_point(field_set_allocated:UseSkillResponse.error_message)
}

// -------------------------------------------------------------------

// SkillInterruptedS2C

// uint64 entity = 1;
inline void SkillInterruptedS2C::clear_entity() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.entity_ = ::uint64_t{0u};
}
inline ::uint64_t SkillInterruptedS2C::entity() const {
  // @@protoc_insertion_point(field_get:SkillInterruptedS2C.entity)
  return _internal_entity();
}
inline void SkillInterruptedS2C::set_entity(::uint64_t value) {
  _internal_set_entity(value);
  // @@protoc_insertion_point(field_set:SkillInterruptedS2C.entity)
}
inline ::uint64_t SkillInterruptedS2C::_internal_entity() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.entity_;
}
inline void SkillInterruptedS2C::_internal_set_entity(::uint64_t value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.entity_ = value;
}

// uint64 target_entity = 2;
inline void SkillInterruptedS2C::clear_target_entity() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.target_entity_ = ::uint64_t{0u};
}
inline ::uint64_t SkillInterruptedS2C::target_entity() const {
  // @@protoc_insertion_point(field_get:SkillInterruptedS2C.target_entity)
  return _internal_target_entity();
}
inline void SkillInterruptedS2C::set_target_entity(::uint64_t value) {
  _internal_set_target_entity(value);
  // @@protoc_insertion_point(field_set:SkillInterruptedS2C.target_entity)
}
inline ::uint64_t SkillInterruptedS2C::_internal_target_entity() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.target_entity_;
}
inline void SkillInterruptedS2C::_internal_set_target_entity(::uint64_t value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.target_entity_ = value;
}

// uint32 skill_table_id = 3;
inline void SkillInterruptedS2C::clear_skill_table_id() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.skill_table_id_ = 0u;
}
inline ::uint32_t SkillInterruptedS2C::skill_table_id() const {
  // @@protoc_insertion_point(field_get:SkillInterruptedS2C.skill_table_id)
  return _internal_skill_table_id();
}
inline void SkillInterruptedS2C::set_skill_table_id(::uint32_t value) {
  _internal_set_skill_table_id(value);
  // @@protoc_insertion_point(field_set:SkillInterruptedS2C.skill_table_id)
}
inline ::uint32_t SkillInterruptedS2C::_internal_skill_table_id() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.skill_table_id_;
}
inline void SkillInterruptedS2C::_internal_set_skill_table_id(::uint32_t value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.skill_table_id_ = value;
}

// uint32 reason_code = 4;
inline void SkillInterruptedS2C::clear_reason_code() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.reason_code_ = 0u;
}
inline ::uint32_t SkillInterruptedS2C::reason_code() const {
  // @@protoc_insertion_point(field_get:SkillInterruptedS2C.reason_code)
  return _internal_reason_code();
}
inline void SkillInterruptedS2C::set_reason_code(::uint32_t value) {
  _internal_set_reason_code(value);
  // @@protoc_insertion_point(field_set:SkillInterruptedS2C.reason_code)
}
inline ::uint32_t SkillInterruptedS2C::_internal_reason_code() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.reason_code_;
}
inline void SkillInterruptedS2C::_internal_set_reason_code(::uint32_t value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.reason_code_ = value;
}

// -------------------------------------------------------------------

// SkillUsedS2C

// uint64 entity = 1;
inline void SkillUsedS2C::clear_entity() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.entity_ = ::uint64_t{0u};
}
inline ::uint64_t SkillUsedS2C::entity() const {
  // @@protoc_insertion_point(field_get:SkillUsedS2C.entity)
  return _internal_entity();
}
inline void SkillUsedS2C::set_entity(::uint64_t value) {
  _internal_set_entity(value);
  // @@protoc_insertion_point(field_set:SkillUsedS2C.entity)
}
inline ::uint64_t SkillUsedS2C::_internal_entity() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.entity_;
}
inline void SkillUsedS2C::_internal_set_entity(::uint64_t value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.entity_ = value;
}

// repeated uint64 target_entity = 2;
inline int SkillUsedS2C::_internal_target_entity_size() const {
  return _internal_target_entity().size();
}
inline int SkillUsedS2C::target_entity_size() const {
  return _internal_target_entity_size();
}
inline void SkillUsedS2C::clear_target_entity() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.target_entity_.Clear();
}
inline ::uint64_t SkillUsedS2C::target_entity(int index) const {
  // @@protoc_insertion_point(field_get:SkillUsedS2C.target_entity)
  return _internal_target_entity().Get(index);
}
inline void SkillUsedS2C::set_target_entity(int index, ::uint64_t value) {
  _internal_mutable_target_entity()->Set(index, value);
  // @@protoc_insertion_point(field_set:SkillUsedS2C.target_entity)
}
inline void SkillUsedS2C::add_target_entity(::uint64_t value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _internal_mutable_target_entity()->Add(value);
  // @@protoc_insertion_point(field_add:SkillUsedS2C.target_entity)
}
inline const ::google::protobuf::RepeatedField<::uint64_t>& SkillUsedS2C::target_entity() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_list:SkillUsedS2C.target_entity)
  return _internal_target_entity();
}
inline ::google::protobuf::RepeatedField<::uint64_t>* SkillUsedS2C::mutable_target_entity()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable_list:SkillUsedS2C.target_entity)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  return _internal_mutable_target_entity();
}
inline const ::google::protobuf::RepeatedField<::uint64_t>&
SkillUsedS2C::_internal_target_entity() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.target_entity_;
}
inline ::google::protobuf::RepeatedField<::uint64_t>* SkillUsedS2C::_internal_mutable_target_entity() {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return &_impl_.target_entity_;
}

// uint32 skill_table_id = 3;
inline void SkillUsedS2C::clear_skill_table_id() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.skill_table_id_ = 0u;
}
inline ::uint32_t SkillUsedS2C::skill_table_id() const {
  // @@protoc_insertion_point(field_get:SkillUsedS2C.skill_table_id)
  return _internal_skill_table_id();
}
inline void SkillUsedS2C::set_skill_table_id(::uint32_t value) {
  _internal_set_skill_table_id(value);
  // @@protoc_insertion_point(field_set:SkillUsedS2C.skill_table_id)
}
inline ::uint32_t SkillUsedS2C::_internal_skill_table_id() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.skill_table_id_;
}
inline void SkillUsedS2C::_internal_set_skill_table_id(::uint32_t value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.skill_table_id_ = value;
}

// .Vector3 position = 4;
inline bool SkillUsedS2C::has_position() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.position_ != nullptr);
  return value;
}
inline const ::Vector3& SkillUsedS2C::_internal_position() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  const ::Vector3* p = _impl_.position_;
  return p != nullptr ? *p : reinterpret_cast<const ::Vector3&>(::_Vector3_default_instance_);
}
inline const ::Vector3& SkillUsedS2C::position() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:SkillUsedS2C.position)
  return _internal_position();
}
inline void SkillUsedS2C::unsafe_arena_set_allocated_position(::Vector3* value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.position_);
  }
  _impl_.position_ = reinterpret_cast<::Vector3*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:SkillUsedS2C.position)
}
inline ::Vector3* SkillUsedS2C::release_position() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::Vector3* released = _impl_.position_;
  _impl_.position_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
  auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
  released = ::google::protobuf::internal::DuplicateIfNonNull(released);
  if (GetArena() == nullptr) {
    delete old;
  }
#else   // PROTOBUF_FORCE_COPY_IN_RELEASE
  if (GetArena() != nullptr) {
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
  }
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
  return released;
}
inline ::Vector3* SkillUsedS2C::unsafe_arena_release_position() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  // @@protoc_insertion_point(field_release:SkillUsedS2C.position)

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::Vector3* temp = _impl_.position_;
  _impl_.position_ = nullptr;
  return temp;
}
inline ::Vector3* SkillUsedS2C::_internal_mutable_position() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  if (_impl_.position_ == nullptr) {
    auto* p = ::google::protobuf::Message::DefaultConstruct<::Vector3>(GetArena());
    _impl_.position_ = reinterpret_cast<::Vector3*>(p);
  }
  return _impl_.position_;
}
inline ::Vector3* SkillUsedS2C::mutable_position() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  _impl_._has_bits_[0] |= 0x00000001u;
  ::Vector3* _msg = _internal_mutable_position();
  // @@protoc_insertion_point(field_mutable:SkillUsedS2C.position)
  return _msg;
}
inline void SkillUsedS2C::set_allocated_position(::Vector3* value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  if (message_arena == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.position_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = reinterpret_cast<::google::protobuf::MessageLite*>(value)->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }

  _impl_.position_ = reinterpret_cast<::Vector3*>(value);
  // @@protoc_insertion_point(field_set_allocated:SkillUsedS2C.position)
}

// uint64 time_stamp = 5;
inline void SkillUsedS2C::clear_time_stamp() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.time_stamp_ = ::uint64_t{0u};
}
inline ::uint64_t SkillUsedS2C::time_stamp() const {
  // @@protoc_insertion_point(field_get:SkillUsedS2C.time_stamp)
  return _internal_time_stamp();
}
inline void SkillUsedS2C::set_time_stamp(::uint64_t value) {
  _internal_set_time_stamp(value);
  // @@protoc_insertion_point(field_set:SkillUsedS2C.time_stamp)
}
inline ::uint64_t SkillUsedS2C::_internal_time_stamp() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.time_stamp_;
}
inline void SkillUsedS2C::_internal_set_time_stamp(::uint64_t value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.time_stamp_ = value;
}

#ifdef __GNUC__
#pragma GCC diagnostic pop
#endif  // __GNUC__

// @@protoc_insertion_point(namespace_scope)


// @@protoc_insertion_point(global_scope)

#include "google/protobuf/port_undef.inc"

#endif  // GOOGLE_PROTOBUF_INCLUDED_logic_2fclient_5fplayer_2fplayer_5fskill_2eproto_2epb_2eh
