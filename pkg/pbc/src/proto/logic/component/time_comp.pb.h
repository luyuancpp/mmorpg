// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: logic/component/time_comp.proto
// Protobuf C++ Version: 5.26.1

#ifndef GOOGLE_PROTOBUF_INCLUDED_logic_2fcomponent_2ftime_5fcomp_2eproto_2epb_2eh
#define GOOGLE_PROTOBUF_INCLUDED_logic_2fcomponent_2ftime_5fcomp_2eproto_2epb_2eh

#include <limits>
#include <string>
#include <type_traits>
#include <utility>

#include "google/protobuf/port_def.inc"
#if PROTOBUF_VERSION != 5026001
#error "Protobuf C++ gencode is built with an incompatible version of"
#error "Protobuf C++ headers/runtime. See"
#error "https://protobuf.dev/support/cross-version-runtime-guarantee/#cpp"
#endif
#include "google/protobuf/port_undef.inc"
#include "google/protobuf/io/coded_stream.h"
#include "google/protobuf/arena.h"
#include "google/protobuf/arenastring.h"
#include "google/protobuf/generated_message_tctable_decl.h"
#include "google/protobuf/generated_message_util.h"
#include "google/protobuf/metadata_lite.h"
#include "google/protobuf/generated_message_reflection.h"
#include "google/protobuf/message.h"
#include "google/protobuf/repeated_field.h"  // IWYU pragma: export
#include "google/protobuf/extension_set.h"  // IWYU pragma: export
#include "google/protobuf/map.h"  // IWYU pragma: export
#include "google/protobuf/map_entry.h"
#include "google/protobuf/map_field_inl.h"
#include "google/protobuf/unknown_field_set.h"
// @@protoc_insertion_point(includes)

// Must be included last.
#include "google/protobuf/port_def.inc"

#define PROTOBUF_INTERNAL_EXPORT_logic_2fcomponent_2ftime_5fcomp_2eproto

namespace google {
namespace protobuf {
namespace internal {
class AnyMetadata;
}  // namespace internal
}  // namespace protobuf
}  // namespace google

// Internal implementation detail -- do not use these members.
struct TableStruct_logic_2fcomponent_2ftime_5fcomp_2eproto {
  static const ::uint32_t offsets[];
};
extern const ::google::protobuf::internal::DescriptorTable
    descriptor_table_logic_2fcomponent_2ftime_5fcomp_2eproto;
class CooldownTimeComp;
struct CooldownTimeCompDefaultTypeInternal;
extern CooldownTimeCompDefaultTypeInternal _CooldownTimeComp_default_instance_;
class CooldownTimeListComp;
struct CooldownTimeListCompDefaultTypeInternal;
extern CooldownTimeListCompDefaultTypeInternal _CooldownTimeListComp_default_instance_;
class CooldownTimeListComp_CooldownListEntry_DoNotUse;
struct CooldownTimeListComp_CooldownListEntry_DoNotUseDefaultTypeInternal;
extern CooldownTimeListComp_CooldownListEntry_DoNotUseDefaultTypeInternal _CooldownTimeListComp_CooldownListEntry_DoNotUse_default_instance_;
class TimeMeterComp;
struct TimeMeterCompDefaultTypeInternal;
extern TimeMeterCompDefaultTypeInternal _TimeMeterComp_default_instance_;
namespace google {
namespace protobuf {
}  // namespace protobuf
}  // namespace google


// ===================================================================


// -------------------------------------------------------------------

class TimeMeterComp final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:TimeMeterComp) */ {
 public:
  inline TimeMeterComp() : TimeMeterComp(nullptr) {}
  ~TimeMeterComp() override;
  template <typename = void>
  explicit PROTOBUF_CONSTEXPR TimeMeterComp(
      ::google::protobuf::internal::ConstantInitialized);

  inline TimeMeterComp(const TimeMeterComp& from) : TimeMeterComp(nullptr, from) {}
  inline TimeMeterComp(TimeMeterComp&& from) noexcept
      : TimeMeterComp(nullptr, std::move(from)) {}
  inline TimeMeterComp& operator=(const TimeMeterComp& from) {
    CopyFrom(from);
    return *this;
  }
  inline TimeMeterComp& operator=(TimeMeterComp&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
#ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
#endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const TimeMeterComp& default_instance() {
    return *internal_default_instance();
  }
  static inline const TimeMeterComp* internal_default_instance() {
    return reinterpret_cast<const TimeMeterComp*>(
        &_TimeMeterComp_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 0;
  friend void swap(TimeMeterComp& a, TimeMeterComp& b) { a.Swap(&b); }
  inline void Swap(TimeMeterComp* other) {
    if (other == this) return;
#ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr && GetArena() == other->GetArena()) {
#else   // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
#endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(TimeMeterComp* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  TimeMeterComp* New(::google::protobuf::Arena* arena = nullptr) const final {
    return ::google::protobuf::Message::DefaultConstruct<TimeMeterComp>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const TimeMeterComp& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const TimeMeterComp& from) { TimeMeterComp::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  ::size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::google::protobuf::internal::ParseContext* ctx) final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(TimeMeterComp* other);
 private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() { return "TimeMeterComp"; }

 protected:
  explicit TimeMeterComp(::google::protobuf::Arena* arena);
  TimeMeterComp(::google::protobuf::Arena* arena, const TimeMeterComp& from);
  TimeMeterComp(::google::protobuf::Arena* arena, TimeMeterComp&& from) noexcept
      : TimeMeterComp(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::MessageLite::ClassData* GetClassData()
      const final;

 public:
  ::google::protobuf::Metadata GetMetadata() const final;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kStartFieldNumber = 1,
    kDurationFieldNumber = 2,
  };
  // uint64 start = 1;
  void clear_start() ;
  ::uint64_t start() const;
  void set_start(::uint64_t value);

  private:
  ::uint64_t _internal_start() const;
  void _internal_set_start(::uint64_t value);

  public:
  // uint64 duration = 2;
  void clear_duration() ;
  ::uint64_t duration() const;
  void set_duration(::uint64_t value);

  private:
  ::uint64_t _internal_duration() const;
  void _internal_set_duration(::uint64_t value);

  public:
  // @@protoc_insertion_point(class_scope:TimeMeterComp)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      1, 2, 0,
      0, 2>
      _table_;
  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from);
    ::uint64_t start_;
    ::uint64_t duration_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_logic_2fcomponent_2ftime_5fcomp_2eproto;
};
// -------------------------------------------------------------------

class CooldownTimeComp final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:CooldownTimeComp) */ {
 public:
  inline CooldownTimeComp() : CooldownTimeComp(nullptr) {}
  ~CooldownTimeComp() override;
  template <typename = void>
  explicit PROTOBUF_CONSTEXPR CooldownTimeComp(
      ::google::protobuf::internal::ConstantInitialized);

  inline CooldownTimeComp(const CooldownTimeComp& from) : CooldownTimeComp(nullptr, from) {}
  inline CooldownTimeComp(CooldownTimeComp&& from) noexcept
      : CooldownTimeComp(nullptr, std::move(from)) {}
  inline CooldownTimeComp& operator=(const CooldownTimeComp& from) {
    CopyFrom(from);
    return *this;
  }
  inline CooldownTimeComp& operator=(CooldownTimeComp&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
#ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
#endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const CooldownTimeComp& default_instance() {
    return *internal_default_instance();
  }
  static inline const CooldownTimeComp* internal_default_instance() {
    return reinterpret_cast<const CooldownTimeComp*>(
        &_CooldownTimeComp_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 1;
  friend void swap(CooldownTimeComp& a, CooldownTimeComp& b) { a.Swap(&b); }
  inline void Swap(CooldownTimeComp* other) {
    if (other == this) return;
#ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr && GetArena() == other->GetArena()) {
#else   // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
#endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(CooldownTimeComp* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  CooldownTimeComp* New(::google::protobuf::Arena* arena = nullptr) const final {
    return ::google::protobuf::Message::DefaultConstruct<CooldownTimeComp>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const CooldownTimeComp& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const CooldownTimeComp& from) { CooldownTimeComp::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  ::size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::google::protobuf::internal::ParseContext* ctx) final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(CooldownTimeComp* other);
 private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() { return "CooldownTimeComp"; }

 protected:
  explicit CooldownTimeComp(::google::protobuf::Arena* arena);
  CooldownTimeComp(::google::protobuf::Arena* arena, const CooldownTimeComp& from);
  CooldownTimeComp(::google::protobuf::Arena* arena, CooldownTimeComp&& from) noexcept
      : CooldownTimeComp(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::MessageLite::ClassData* GetClassData()
      const final;

 public:
  ::google::protobuf::Metadata GetMetadata() const final;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kStartFieldNumber = 1,
    kCooldownTableIdFieldNumber = 2,
  };
  // uint64 start = 1;
  void clear_start() ;
  ::uint64_t start() const;
  void set_start(::uint64_t value);

  private:
  ::uint64_t _internal_start() const;
  void _internal_set_start(::uint64_t value);

  public:
  // uint32 cooldown_table_id = 2;
  void clear_cooldown_table_id() ;
  ::uint32_t cooldown_table_id() const;
  void set_cooldown_table_id(::uint32_t value);

  private:
  ::uint32_t _internal_cooldown_table_id() const;
  void _internal_set_cooldown_table_id(::uint32_t value);

  public:
  // @@protoc_insertion_point(class_scope:CooldownTimeComp)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      1, 2, 0,
      0, 2>
      _table_;
  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from);
    ::uint64_t start_;
    ::uint32_t cooldown_table_id_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_logic_2fcomponent_2ftime_5fcomp_2eproto;
};
// -------------------------------------------------------------------

class CooldownTimeListComp_CooldownListEntry_DoNotUse final
    : public ::google::protobuf::internal::MapEntry<
          CooldownTimeListComp_CooldownListEntry_DoNotUse, ::uint32_t, ::CooldownTimeComp,
          ::google::protobuf::internal::WireFormatLite::TYPE_UINT32,
          ::google::protobuf::internal::WireFormatLite::TYPE_MESSAGE> {
 public:
  using SuperType = ::google::protobuf::internal::MapEntry<
      CooldownTimeListComp_CooldownListEntry_DoNotUse, ::uint32_t, ::CooldownTimeComp,
      ::google::protobuf::internal::WireFormatLite::TYPE_UINT32,
      ::google::protobuf::internal::WireFormatLite::TYPE_MESSAGE>;
  CooldownTimeListComp_CooldownListEntry_DoNotUse();
  template <typename = void>
  explicit PROTOBUF_CONSTEXPR CooldownTimeListComp_CooldownListEntry_DoNotUse(
      ::google::protobuf::internal::ConstantInitialized);
  explicit CooldownTimeListComp_CooldownListEntry_DoNotUse(::google::protobuf::Arena* arena);
  static const CooldownTimeListComp_CooldownListEntry_DoNotUse* internal_default_instance() {
    return reinterpret_cast<const CooldownTimeListComp_CooldownListEntry_DoNotUse*>(
        &_CooldownTimeListComp_CooldownListEntry_DoNotUse_default_instance_);
  }
  static bool ValidateKey(void*) { return true; }
  static bool ValidateValue(void*) { return true; }
  ::google::protobuf::Metadata GetMetadata() const final;
  friend struct ::TableStruct_logic_2fcomponent_2ftime_5fcomp_2eproto;
};
// -------------------------------------------------------------------

class CooldownTimeListComp final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:CooldownTimeListComp) */ {
 public:
  inline CooldownTimeListComp() : CooldownTimeListComp(nullptr) {}
  ~CooldownTimeListComp() override;
  template <typename = void>
  explicit PROTOBUF_CONSTEXPR CooldownTimeListComp(
      ::google::protobuf::internal::ConstantInitialized);

  inline CooldownTimeListComp(const CooldownTimeListComp& from) : CooldownTimeListComp(nullptr, from) {}
  inline CooldownTimeListComp(CooldownTimeListComp&& from) noexcept
      : CooldownTimeListComp(nullptr, std::move(from)) {}
  inline CooldownTimeListComp& operator=(const CooldownTimeListComp& from) {
    CopyFrom(from);
    return *this;
  }
  inline CooldownTimeListComp& operator=(CooldownTimeListComp&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
#ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
#endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const CooldownTimeListComp& default_instance() {
    return *internal_default_instance();
  }
  static inline const CooldownTimeListComp* internal_default_instance() {
    return reinterpret_cast<const CooldownTimeListComp*>(
        &_CooldownTimeListComp_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 3;
  friend void swap(CooldownTimeListComp& a, CooldownTimeListComp& b) { a.Swap(&b); }
  inline void Swap(CooldownTimeListComp* other) {
    if (other == this) return;
#ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr && GetArena() == other->GetArena()) {
#else   // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
#endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(CooldownTimeListComp* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  CooldownTimeListComp* New(::google::protobuf::Arena* arena = nullptr) const final {
    return ::google::protobuf::Message::DefaultConstruct<CooldownTimeListComp>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const CooldownTimeListComp& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const CooldownTimeListComp& from) { CooldownTimeListComp::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  ::size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::google::protobuf::internal::ParseContext* ctx) final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(CooldownTimeListComp* other);
 private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() { return "CooldownTimeListComp"; }

 protected:
  explicit CooldownTimeListComp(::google::protobuf::Arena* arena);
  CooldownTimeListComp(::google::protobuf::Arena* arena, const CooldownTimeListComp& from);
  CooldownTimeListComp(::google::protobuf::Arena* arena, CooldownTimeListComp&& from) noexcept
      : CooldownTimeListComp(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::MessageLite::ClassData* GetClassData()
      const final;

 public:
  ::google::protobuf::Metadata GetMetadata() const final;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kCooldownListFieldNumber = 1,
  };
  // map<uint32, .CooldownTimeComp> cooldown_list = 1;
  int cooldown_list_size() const;
  private:
  int _internal_cooldown_list_size() const;

  public:
  void clear_cooldown_list() ;
  const ::google::protobuf::Map<::uint32_t, ::CooldownTimeComp>& cooldown_list() const;
  ::google::protobuf::Map<::uint32_t, ::CooldownTimeComp>* mutable_cooldown_list();

  private:
  const ::google::protobuf::Map<::uint32_t, ::CooldownTimeComp>& _internal_cooldown_list() const;
  ::google::protobuf::Map<::uint32_t, ::CooldownTimeComp>* _internal_mutable_cooldown_list();

  public:
  // @@protoc_insertion_point(class_scope:CooldownTimeListComp)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      0, 1, 2,
      0, 2>
      _table_;
  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from);
    ::google::protobuf::internal::MapField<CooldownTimeListComp_CooldownListEntry_DoNotUse, ::uint32_t, ::CooldownTimeComp,
                      ::google::protobuf::internal::WireFormatLite::TYPE_UINT32,
                      ::google::protobuf::internal::WireFormatLite::TYPE_MESSAGE>
        cooldown_list_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_logic_2fcomponent_2ftime_5fcomp_2eproto;
};

// ===================================================================




// ===================================================================


#ifdef __GNUC__
#pragma GCC diagnostic push
#pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif  // __GNUC__
// -------------------------------------------------------------------

// TimeMeterComp

// uint64 start = 1;
inline void TimeMeterComp::clear_start() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.start_ = ::uint64_t{0u};
}
inline ::uint64_t TimeMeterComp::start() const {
  // @@protoc_insertion_point(field_get:TimeMeterComp.start)
  return _internal_start();
}
inline void TimeMeterComp::set_start(::uint64_t value) {
  _internal_set_start(value);
  // @@protoc_insertion_point(field_set:TimeMeterComp.start)
}
inline ::uint64_t TimeMeterComp::_internal_start() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.start_;
}
inline void TimeMeterComp::_internal_set_start(::uint64_t value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.start_ = value;
}

// uint64 duration = 2;
inline void TimeMeterComp::clear_duration() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.duration_ = ::uint64_t{0u};
}
inline ::uint64_t TimeMeterComp::duration() const {
  // @@protoc_insertion_point(field_get:TimeMeterComp.duration)
  return _internal_duration();
}
inline void TimeMeterComp::set_duration(::uint64_t value) {
  _internal_set_duration(value);
  // @@protoc_insertion_point(field_set:TimeMeterComp.duration)
}
inline ::uint64_t TimeMeterComp::_internal_duration() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.duration_;
}
inline void TimeMeterComp::_internal_set_duration(::uint64_t value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.duration_ = value;
}

// -------------------------------------------------------------------

// CooldownTimeComp

// uint64 start = 1;
inline void CooldownTimeComp::clear_start() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.start_ = ::uint64_t{0u};
}
inline ::uint64_t CooldownTimeComp::start() const {
  // @@protoc_insertion_point(field_get:CooldownTimeComp.start)
  return _internal_start();
}
inline void CooldownTimeComp::set_start(::uint64_t value) {
  _internal_set_start(value);
  // @@protoc_insertion_point(field_set:CooldownTimeComp.start)
}
inline ::uint64_t CooldownTimeComp::_internal_start() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.start_;
}
inline void CooldownTimeComp::_internal_set_start(::uint64_t value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.start_ = value;
}

// uint32 cooldown_table_id = 2;
inline void CooldownTimeComp::clear_cooldown_table_id() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.cooldown_table_id_ = 0u;
}
inline ::uint32_t CooldownTimeComp::cooldown_table_id() const {
  // @@protoc_insertion_point(field_get:CooldownTimeComp.cooldown_table_id)
  return _internal_cooldown_table_id();
}
inline void CooldownTimeComp::set_cooldown_table_id(::uint32_t value) {
  _internal_set_cooldown_table_id(value);
  // @@protoc_insertion_point(field_set:CooldownTimeComp.cooldown_table_id)
}
inline ::uint32_t CooldownTimeComp::_internal_cooldown_table_id() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.cooldown_table_id_;
}
inline void CooldownTimeComp::_internal_set_cooldown_table_id(::uint32_t value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.cooldown_table_id_ = value;
}

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// CooldownTimeListComp

// map<uint32, .CooldownTimeComp> cooldown_list = 1;
inline int CooldownTimeListComp::_internal_cooldown_list_size() const {
  return _internal_cooldown_list().size();
}
inline int CooldownTimeListComp::cooldown_list_size() const {
  return _internal_cooldown_list_size();
}
inline void CooldownTimeListComp::clear_cooldown_list() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.cooldown_list_.Clear();
}
inline const ::google::protobuf::Map<::uint32_t, ::CooldownTimeComp>& CooldownTimeListComp::_internal_cooldown_list() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.cooldown_list_.GetMap();
}
inline const ::google::protobuf::Map<::uint32_t, ::CooldownTimeComp>& CooldownTimeListComp::cooldown_list() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_map:CooldownTimeListComp.cooldown_list)
  return _internal_cooldown_list();
}
inline ::google::protobuf::Map<::uint32_t, ::CooldownTimeComp>* CooldownTimeListComp::_internal_mutable_cooldown_list() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  return _impl_.cooldown_list_.MutableMap();
}
inline ::google::protobuf::Map<::uint32_t, ::CooldownTimeComp>* CooldownTimeListComp::mutable_cooldown_list() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable_map:CooldownTimeListComp.cooldown_list)
  return _internal_mutable_cooldown_list();
}

#ifdef __GNUC__
#pragma GCC diagnostic pop
#endif  // __GNUC__

// @@protoc_insertion_point(namespace_scope)


// @@protoc_insertion_point(global_scope)

#include "google/protobuf/port_undef.inc"

#endif  // GOOGLE_PROTOBUF_INCLUDED_logic_2fcomponent_2ftime_5fcomp_2eproto_2epb_2eh
