// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: logic/component/actor_comp.proto
// Protobuf C++ Version: 5.26.1

#include "logic/component/actor_comp.pb.h"

#include <algorithm>
#include "google/protobuf/io/coded_stream.h"
#include "google/protobuf/extension_set.h"
#include "google/protobuf/wire_format_lite.h"
#include "google/protobuf/descriptor.h"
#include "google/protobuf/generated_message_reflection.h"
#include "google/protobuf/reflection_ops.h"
#include "google/protobuf/wire_format.h"
#include "google/protobuf/generated_message_tctable_impl.h"
// @@protoc_insertion_point(includes)

// Must be included last.
#include "google/protobuf/port_def.inc"
PROTOBUF_PRAGMA_INIT_SEG
namespace _pb = ::google::protobuf;
namespace _pbi = ::google::protobuf::internal;
namespace _fl = ::google::protobuf::internal::field_layout;

inline constexpr ViewRadius::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : radius_{0},
        _cached_size_{0} {}

template <typename>
PROTOBUF_CONSTEXPR ViewRadius::ViewRadius(::_pbi::ConstantInitialized)
    : _impl_(::_pbi::ConstantInitialized()) {}
struct ViewRadiusDefaultTypeInternal {
  PROTOBUF_CONSTEXPR ViewRadiusDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~ViewRadiusDefaultTypeInternal() {}
  union {
    ViewRadius _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 ViewRadiusDefaultTypeInternal _ViewRadius_default_instance_;

inline constexpr Velocity::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : x_{0},
        y_{0},
        z_{0},
        _cached_size_{0} {}

template <typename>
PROTOBUF_CONSTEXPR Velocity::Velocity(::_pbi::ConstantInitialized)
    : _impl_(::_pbi::ConstantInitialized()) {}
struct VelocityDefaultTypeInternal {
  PROTOBUF_CONSTEXPR VelocityDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~VelocityDefaultTypeInternal() {}
  union {
    Velocity _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 VelocityDefaultTypeInternal _Velocity_default_instance_;

inline constexpr Scale::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : x_{0},
        y_{0},
        z_{0},
        _cached_size_{0} {}

template <typename>
PROTOBUF_CONSTEXPR Scale::Scale(::_pbi::ConstantInitialized)
    : _impl_(::_pbi::ConstantInitialized()) {}
struct ScaleDefaultTypeInternal {
  PROTOBUF_CONSTEXPR ScaleDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~ScaleDefaultTypeInternal() {}
  union {
    Scale _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 ScaleDefaultTypeInternal _Scale_default_instance_;

inline constexpr Rotation::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : x_{0},
        y_{0},
        z_{0},
        _cached_size_{0} {}

template <typename>
PROTOBUF_CONSTEXPR Rotation::Rotation(::_pbi::ConstantInitialized)
    : _impl_(::_pbi::ConstantInitialized()) {}
struct RotationDefaultTypeInternal {
  PROTOBUF_CONSTEXPR RotationDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~RotationDefaultTypeInternal() {}
  union {
    Rotation _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 RotationDefaultTypeInternal _Rotation_default_instance_;

inline constexpr Location::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : x_{0},
        y_{0},
        z_{0},
        _cached_size_{0} {}

template <typename>
PROTOBUF_CONSTEXPR Location::Location(::_pbi::ConstantInitialized)
    : _impl_(::_pbi::ConstantInitialized()) {}
struct LocationDefaultTypeInternal {
  PROTOBUF_CONSTEXPR LocationDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~LocationDefaultTypeInternal() {}
  union {
    Location _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 LocationDefaultTypeInternal _Location_default_instance_;

inline constexpr LevelPbComponent::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : level_{0u},
        _cached_size_{0} {}

template <typename>
PROTOBUF_CONSTEXPR LevelPbComponent::LevelPbComponent(::_pbi::ConstantInitialized)
    : _impl_(::_pbi::ConstantInitialized()) {}
struct LevelPbComponentDefaultTypeInternal {
  PROTOBUF_CONSTEXPR LevelPbComponentDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~LevelPbComponentDefaultTypeInternal() {}
  union {
    LevelPbComponent _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 LevelPbComponentDefaultTypeInternal _LevelPbComponent_default_instance_;

inline constexpr BaseAttributesPbComponent::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : strength_{::uint64_t{0u}},
        stamina_{::uint64_t{0u}},
        health_{::uint64_t{0u}},
        mana_{::uint64_t{0u}},
        critchance_{::uint64_t{0u}},
        armor_{::uint64_t{0u}},
        resistance_{::uint64_t{0u}},
        _cached_size_{0} {}

template <typename>
PROTOBUF_CONSTEXPR BaseAttributesPbComponent::BaseAttributesPbComponent(::_pbi::ConstantInitialized)
    : _impl_(::_pbi::ConstantInitialized()) {}
struct BaseAttributesPbComponentDefaultTypeInternal {
  PROTOBUF_CONSTEXPR BaseAttributesPbComponentDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~BaseAttributesPbComponentDefaultTypeInternal() {}
  union {
    BaseAttributesPbComponent _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 BaseAttributesPbComponentDefaultTypeInternal _BaseAttributesPbComponent_default_instance_;
      template <typename>
PROTOBUF_CONSTEXPR ActorStatePbComponent_StateListEntry_DoNotUse::ActorStatePbComponent_StateListEntry_DoNotUse(::_pbi::ConstantInitialized) {}
struct ActorStatePbComponent_StateListEntry_DoNotUseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR ActorStatePbComponent_StateListEntry_DoNotUseDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~ActorStatePbComponent_StateListEntry_DoNotUseDefaultTypeInternal() {}
  union {
    ActorStatePbComponent_StateListEntry_DoNotUse _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 ActorStatePbComponent_StateListEntry_DoNotUseDefaultTypeInternal _ActorStatePbComponent_StateListEntry_DoNotUse_default_instance_;

inline constexpr Acceleration::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : x_{0},
        y_{0},
        z_{0},
        _cached_size_{0} {}

template <typename>
PROTOBUF_CONSTEXPR Acceleration::Acceleration(::_pbi::ConstantInitialized)
    : _impl_(::_pbi::ConstantInitialized()) {}
struct AccelerationDefaultTypeInternal {
  PROTOBUF_CONSTEXPR AccelerationDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~AccelerationDefaultTypeInternal() {}
  union {
    Acceleration _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 AccelerationDefaultTypeInternal _Acceleration_default_instance_;

inline constexpr Transform::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        location_{nullptr},
        rotation_{nullptr},
        scale_{nullptr} {}

template <typename>
PROTOBUF_CONSTEXPR Transform::Transform(::_pbi::ConstantInitialized)
    : _impl_(::_pbi::ConstantInitialized()) {}
struct TransformDefaultTypeInternal {
  PROTOBUF_CONSTEXPR TransformDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~TransformDefaultTypeInternal() {}
  union {
    Transform _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 TransformDefaultTypeInternal _Transform_default_instance_;

inline constexpr ActorStatePbComponent::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : state_list_{},
        _cached_size_{0} {}

template <typename>
PROTOBUF_CONSTEXPR ActorStatePbComponent::ActorStatePbComponent(::_pbi::ConstantInitialized)
    : _impl_(::_pbi::ConstantInitialized()) {}
struct ActorStatePbComponentDefaultTypeInternal {
  PROTOBUF_CONSTEXPR ActorStatePbComponentDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~ActorStatePbComponentDefaultTypeInternal() {}
  union {
    ActorStatePbComponent _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 ActorStatePbComponentDefaultTypeInternal _ActorStatePbComponent_default_instance_;
static ::_pb::Metadata file_level_metadata_logic_2fcomponent_2factor_5fcomp_2eproto[11];
static constexpr const ::_pb::EnumDescriptor**
    file_level_enum_descriptors_logic_2fcomponent_2factor_5fcomp_2eproto = nullptr;
static constexpr const ::_pb::ServiceDescriptor**
    file_level_service_descriptors_logic_2fcomponent_2factor_5fcomp_2eproto = nullptr;
const ::uint32_t
    TableStruct_logic_2fcomponent_2factor_5fcomp_2eproto::offsets[] ABSL_ATTRIBUTE_SECTION_VARIABLE(
        protodesc_cold) = {
        ~0u,  // no _has_bits_
        PROTOBUF_FIELD_OFFSET(::Location, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::Location, _impl_.x_),
        PROTOBUF_FIELD_OFFSET(::Location, _impl_.y_),
        PROTOBUF_FIELD_OFFSET(::Location, _impl_.z_),
        ~0u,  // no _has_bits_
        PROTOBUF_FIELD_OFFSET(::Rotation, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::Rotation, _impl_.x_),
        PROTOBUF_FIELD_OFFSET(::Rotation, _impl_.y_),
        PROTOBUF_FIELD_OFFSET(::Rotation, _impl_.z_),
        ~0u,  // no _has_bits_
        PROTOBUF_FIELD_OFFSET(::Scale, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::Scale, _impl_.x_),
        PROTOBUF_FIELD_OFFSET(::Scale, _impl_.y_),
        PROTOBUF_FIELD_OFFSET(::Scale, _impl_.z_),
        PROTOBUF_FIELD_OFFSET(::Transform, _impl_._has_bits_),
        PROTOBUF_FIELD_OFFSET(::Transform, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::Transform, _impl_.location_),
        PROTOBUF_FIELD_OFFSET(::Transform, _impl_.rotation_),
        PROTOBUF_FIELD_OFFSET(::Transform, _impl_.scale_),
        0,
        1,
        2,
        ~0u,  // no _has_bits_
        PROTOBUF_FIELD_OFFSET(::Velocity, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::Velocity, _impl_.x_),
        PROTOBUF_FIELD_OFFSET(::Velocity, _impl_.y_),
        PROTOBUF_FIELD_OFFSET(::Velocity, _impl_.z_),
        ~0u,  // no _has_bits_
        PROTOBUF_FIELD_OFFSET(::Acceleration, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::Acceleration, _impl_.x_),
        PROTOBUF_FIELD_OFFSET(::Acceleration, _impl_.y_),
        PROTOBUF_FIELD_OFFSET(::Acceleration, _impl_.z_),
        ~0u,  // no _has_bits_
        PROTOBUF_FIELD_OFFSET(::ViewRadius, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::ViewRadius, _impl_.radius_),
        ~0u,  // no _has_bits_
        PROTOBUF_FIELD_OFFSET(::BaseAttributesPbComponent, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::BaseAttributesPbComponent, _impl_.strength_),
        PROTOBUF_FIELD_OFFSET(::BaseAttributesPbComponent, _impl_.stamina_),
        PROTOBUF_FIELD_OFFSET(::BaseAttributesPbComponent, _impl_.health_),
        PROTOBUF_FIELD_OFFSET(::BaseAttributesPbComponent, _impl_.mana_),
        PROTOBUF_FIELD_OFFSET(::BaseAttributesPbComponent, _impl_.critchance_),
        PROTOBUF_FIELD_OFFSET(::BaseAttributesPbComponent, _impl_.armor_),
        PROTOBUF_FIELD_OFFSET(::BaseAttributesPbComponent, _impl_.resistance_),
        ~0u,  // no _has_bits_
        PROTOBUF_FIELD_OFFSET(::LevelPbComponent, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::LevelPbComponent, _impl_.level_),
        PROTOBUF_FIELD_OFFSET(::ActorStatePbComponent_StateListEntry_DoNotUse, _has_bits_),
        PROTOBUF_FIELD_OFFSET(::ActorStatePbComponent_StateListEntry_DoNotUse, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::ActorStatePbComponent_StateListEntry_DoNotUse, key_),
        PROTOBUF_FIELD_OFFSET(::ActorStatePbComponent_StateListEntry_DoNotUse, value_),
        0,
        1,
        ~0u,  // no _has_bits_
        PROTOBUF_FIELD_OFFSET(::ActorStatePbComponent, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::ActorStatePbComponent, _impl_.state_list_),
};

static const ::_pbi::MigrationSchema
    schemas[] ABSL_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
        {0, -1, -1, sizeof(::Location)},
        {11, -1, -1, sizeof(::Rotation)},
        {22, -1, -1, sizeof(::Scale)},
        {33, 44, -1, sizeof(::Transform)},
        {47, -1, -1, sizeof(::Velocity)},
        {58, -1, -1, sizeof(::Acceleration)},
        {69, -1, -1, sizeof(::ViewRadius)},
        {78, -1, -1, sizeof(::BaseAttributesPbComponent)},
        {93, -1, -1, sizeof(::LevelPbComponent)},
        {102, 112, -1, sizeof(::ActorStatePbComponent_StateListEntry_DoNotUse)},
        {114, -1, -1, sizeof(::ActorStatePbComponent)},
};
static const ::_pb::Message* const file_default_instances[] = {
    &::_Location_default_instance_._instance,
    &::_Rotation_default_instance_._instance,
    &::_Scale_default_instance_._instance,
    &::_Transform_default_instance_._instance,
    &::_Velocity_default_instance_._instance,
    &::_Acceleration_default_instance_._instance,
    &::_ViewRadius_default_instance_._instance,
    &::_BaseAttributesPbComponent_default_instance_._instance,
    &::_LevelPbComponent_default_instance_._instance,
    &::_ActorStatePbComponent_StateListEntry_DoNotUse_default_instance_._instance,
    &::_ActorStatePbComponent_default_instance_._instance,
};
const char descriptor_table_protodef_logic_2fcomponent_2factor_5fcomp_2eproto[] ABSL_ATTRIBUTE_SECTION_VARIABLE(
    protodesc_cold) = {
    "\n logic/component/actor_comp.proto\032\021comm"
    "on/comp.proto\"+\n\010Location\022\t\n\001x\030\001 \001(\001\022\t\n\001"
    "y\030\002 \001(\001\022\t\n\001z\030\003 \001(\001\"+\n\010Rotation\022\t\n\001x\030\001 \001("
    "\001\022\t\n\001y\030\002 \001(\001\022\t\n\001z\030\003 \001(\001\"(\n\005Scale\022\t\n\001x\030\001 "
    "\001(\001\022\t\n\001y\030\002 \001(\001\022\t\n\001z\030\003 \001(\001\"[\n\tTransform\022\032"
    "\n\010location\030\001 \001(\0132\010.Vector3\022\033\n\010rotation\030\002"
    " \001(\0132\t.Rotation\022\025\n\005scale\030\003 \001(\0132\006.Scale\"+"
    "\n\010Velocity\022\t\n\001x\030\001 \001(\001\022\t\n\001y\030\002 \001(\001\022\t\n\001z\030\003 "
    "\001(\001\"/\n\014Acceleration\022\t\n\001x\030\001 \001(\001\022\t\n\001y\030\002 \001("
    "\001\022\t\n\001z\030\003 \001(\001\"\034\n\nViewRadius\022\016\n\006radius\030\001 \001"
    "(\001\"\223\001\n\031BaseAttributesPbComponent\022\020\n\010stre"
    "ngth\030\001 \001(\004\022\017\n\007stamina\030\002 \001(\004\022\016\n\006health\030\003 "
    "\001(\004\022\014\n\004mana\030\004 \001(\004\022\022\n\ncritchance\030\005 \001(\004\022\r\n"
    "\005armor\030\006 \001(\004\022\022\n\nresistance\030\007 \001(\004\"!\n\020Leve"
    "lPbComponent\022\r\n\005level\030\001 \001(\r\"\204\001\n\025ActorSta"
    "tePbComponent\0229\n\nstate_list\030\001 \003(\0132%.Acto"
    "rStatePbComponent.StateListEntry\0320\n\016Stat"
    "eListEntry\022\013\n\003key\030\001 \001(\r\022\r\n\005value\030\002 \001(\010:\002"
    "8\001B\tZ\007pb/gameb\006proto3"
};
static const ::_pbi::DescriptorTable* const descriptor_table_logic_2fcomponent_2factor_5fcomp_2eproto_deps[1] =
    {
        &::descriptor_table_common_2fcomp_2eproto,
};
static ::absl::once_flag descriptor_table_logic_2fcomponent_2factor_5fcomp_2eproto_once;
const ::_pbi::DescriptorTable descriptor_table_logic_2fcomponent_2factor_5fcomp_2eproto = {
    false,
    false,
    741,
    descriptor_table_protodef_logic_2fcomponent_2factor_5fcomp_2eproto,
    "logic/component/actor_comp.proto",
    &descriptor_table_logic_2fcomponent_2factor_5fcomp_2eproto_once,
    descriptor_table_logic_2fcomponent_2factor_5fcomp_2eproto_deps,
    1,
    11,
    schemas,
    file_default_instances,
    TableStruct_logic_2fcomponent_2factor_5fcomp_2eproto::offsets,
    file_level_metadata_logic_2fcomponent_2factor_5fcomp_2eproto,
    file_level_enum_descriptors_logic_2fcomponent_2factor_5fcomp_2eproto,
    file_level_service_descriptors_logic_2fcomponent_2factor_5fcomp_2eproto,
};

// This function exists to be marked as weak.
// It can significantly speed up compilation by breaking up LLVM's SCC
// in the .pb.cc translation units. Large translation units see a
// reduction of more than 35% of walltime for optimized builds. Without
// the weak attribute all the messages in the file, including all the
// vtables and everything they use become part of the same SCC through
// a cycle like:
// GetMetadata -> descriptor table -> default instances ->
//   vtables -> GetMetadata
// By adding a weak function here we break the connection from the
// individual vtables back into the descriptor table.
PROTOBUF_ATTRIBUTE_WEAK const ::_pbi::DescriptorTable* descriptor_table_logic_2fcomponent_2factor_5fcomp_2eproto_getter() {
  return &descriptor_table_logic_2fcomponent_2factor_5fcomp_2eproto;
}
// ===================================================================

class Location::_Internal {
 public:
};

Location::Location(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:Location)
}
Location::Location(
    ::google::protobuf::Arena* arena, const Location& from)
    : Location(arena) {
  MergeFrom(from);
}
inline PROTOBUF_NDEBUG_INLINE Location::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0} {}

inline void Location::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, x_),
           0,
           offsetof(Impl_, z_) -
               offsetof(Impl_, x_) +
               sizeof(Impl_::z_));
}
Location::~Location() {
  // @@protoc_insertion_point(destructor:Location)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void Location::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  _impl_.~Impl_();
}

const ::google::protobuf::MessageLite::ClassData*
Location::GetClassData() const {
  PROTOBUF_CONSTINIT static const ::google::protobuf::MessageLite::
      ClassDataFull _data_ = {
          {
              nullptr,  // OnDemandRegisterArenaDtor
              PROTOBUF_FIELD_OFFSET(Location, _impl_._cached_size_),
              false,
          },
          &Location::MergeImpl,
          &Location::kDescriptorMethods,
      };
  return &_data_;
}
PROTOBUF_NOINLINE void Location::Clear() {
// @@protoc_insertion_point(message_clear_start:Location)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&_impl_.x_, 0, static_cast<::size_t>(
      reinterpret_cast<char*>(&_impl_.z_) -
      reinterpret_cast<char*>(&_impl_.x_)) + sizeof(_impl_.z_));
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* Location::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<2, 3, 0, 0, 2> Location::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    3, 24,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967288,  // skipmap
    offsetof(decltype(_table_), field_entries),
    3,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    &_Location_default_instance_._instance,
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::Location>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
    // double x = 1;
    {::_pbi::TcParser::FastF64S1,
     {9, 63, 0, PROTOBUF_FIELD_OFFSET(Location, _impl_.x_)}},
    // double y = 2;
    {::_pbi::TcParser::FastF64S1,
     {17, 63, 0, PROTOBUF_FIELD_OFFSET(Location, _impl_.y_)}},
    // double z = 3;
    {::_pbi::TcParser::FastF64S1,
     {25, 63, 0, PROTOBUF_FIELD_OFFSET(Location, _impl_.z_)}},
  }}, {{
    65535, 65535
  }}, {{
    // double x = 1;
    {PROTOBUF_FIELD_OFFSET(Location, _impl_.x_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kDouble)},
    // double y = 2;
    {PROTOBUF_FIELD_OFFSET(Location, _impl_.y_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kDouble)},
    // double z = 3;
    {PROTOBUF_FIELD_OFFSET(Location, _impl_.z_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kDouble)},
  }},
  // no aux_entries
  {{
  }},
};

::uint8_t* Location::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:Location)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  // double x = 1;
  static_assert(sizeof(::uint64_t) == sizeof(double),
                "Code assumes ::uint64_t and double are the same size.");
  double tmp_x = this->_internal_x();
  ::uint64_t raw_x;
  memcpy(&raw_x, &tmp_x, sizeof(tmp_x));
  if (raw_x != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteDoubleToArray(
        1, this->_internal_x(), target);
  }

  // double y = 2;
  static_assert(sizeof(::uint64_t) == sizeof(double),
                "Code assumes ::uint64_t and double are the same size.");
  double tmp_y = this->_internal_y();
  ::uint64_t raw_y;
  memcpy(&raw_y, &tmp_y, sizeof(tmp_y));
  if (raw_y != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteDoubleToArray(
        2, this->_internal_y(), target);
  }

  // double z = 3;
  static_assert(sizeof(::uint64_t) == sizeof(double),
                "Code assumes ::uint64_t and double are the same size.");
  double tmp_z = this->_internal_z();
  ::uint64_t raw_z;
  memcpy(&raw_z, &tmp_z, sizeof(tmp_z));
  if (raw_z != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteDoubleToArray(
        3, this->_internal_z(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:Location)
  return target;
}

::size_t Location::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:Location)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // double x = 1;
  static_assert(sizeof(::uint64_t) == sizeof(double),
                "Code assumes ::uint64_t and double are the same size.");
  double tmp_x = this->_internal_x();
  ::uint64_t raw_x;
  memcpy(&raw_x, &tmp_x, sizeof(tmp_x));
  if (raw_x != 0) {
    total_size += 9;
  }

  // double y = 2;
  static_assert(sizeof(::uint64_t) == sizeof(double),
                "Code assumes ::uint64_t and double are the same size.");
  double tmp_y = this->_internal_y();
  ::uint64_t raw_y;
  memcpy(&raw_y, &tmp_y, sizeof(tmp_y));
  if (raw_y != 0) {
    total_size += 9;
  }

  // double z = 3;
  static_assert(sizeof(::uint64_t) == sizeof(double),
                "Code assumes ::uint64_t and double are the same size.");
  double tmp_z = this->_internal_z();
  ::uint64_t raw_z;
  memcpy(&raw_z, &tmp_z, sizeof(tmp_z));
  if (raw_z != 0) {
    total_size += 9;
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}


void Location::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<Location*>(&to_msg);
  auto& from = static_cast<const Location&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:Location)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  static_assert(sizeof(::uint64_t) == sizeof(double),
                "Code assumes ::uint64_t and double are the same size.");
  double tmp_x = from._internal_x();
  ::uint64_t raw_x;
  memcpy(&raw_x, &tmp_x, sizeof(tmp_x));
  if (raw_x != 0) {
    _this->_impl_.x_ = from._impl_.x_;
  }
  static_assert(sizeof(::uint64_t) == sizeof(double),
                "Code assumes ::uint64_t and double are the same size.");
  double tmp_y = from._internal_y();
  ::uint64_t raw_y;
  memcpy(&raw_y, &tmp_y, sizeof(tmp_y));
  if (raw_y != 0) {
    _this->_impl_.y_ = from._impl_.y_;
  }
  static_assert(sizeof(::uint64_t) == sizeof(double),
                "Code assumes ::uint64_t and double are the same size.");
  double tmp_z = from._internal_z();
  ::uint64_t raw_z;
  memcpy(&raw_z, &tmp_z, sizeof(tmp_z));
  if (raw_z != 0) {
    _this->_impl_.z_ = from._impl_.z_;
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void Location::CopyFrom(const Location& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:Location)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool Location::IsInitialized() const {
  return true;
}

void Location::InternalSwap(Location* PROTOBUF_RESTRICT other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(Location, _impl_.z_)
      + sizeof(Location::_impl_.z_)
      - PROTOBUF_FIELD_OFFSET(Location, _impl_.x_)>(
          reinterpret_cast<char*>(&_impl_.x_),
          reinterpret_cast<char*>(&other->_impl_.x_));
}

::google::protobuf::Metadata Location::GetMetadata() const {
  return ::_pbi::AssignDescriptors(&descriptor_table_logic_2fcomponent_2factor_5fcomp_2eproto_getter,
                                   &descriptor_table_logic_2fcomponent_2factor_5fcomp_2eproto_once,
                                   file_level_metadata_logic_2fcomponent_2factor_5fcomp_2eproto[0]);
}
// ===================================================================

class Rotation::_Internal {
 public:
};

Rotation::Rotation(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:Rotation)
}
Rotation::Rotation(
    ::google::protobuf::Arena* arena, const Rotation& from)
    : Rotation(arena) {
  MergeFrom(from);
}
inline PROTOBUF_NDEBUG_INLINE Rotation::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0} {}

inline void Rotation::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, x_),
           0,
           offsetof(Impl_, z_) -
               offsetof(Impl_, x_) +
               sizeof(Impl_::z_));
}
Rotation::~Rotation() {
  // @@protoc_insertion_point(destructor:Rotation)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void Rotation::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  _impl_.~Impl_();
}

const ::google::protobuf::MessageLite::ClassData*
Rotation::GetClassData() const {
  PROTOBUF_CONSTINIT static const ::google::protobuf::MessageLite::
      ClassDataFull _data_ = {
          {
              nullptr,  // OnDemandRegisterArenaDtor
              PROTOBUF_FIELD_OFFSET(Rotation, _impl_._cached_size_),
              false,
          },
          &Rotation::MergeImpl,
          &Rotation::kDescriptorMethods,
      };
  return &_data_;
}
PROTOBUF_NOINLINE void Rotation::Clear() {
// @@protoc_insertion_point(message_clear_start:Rotation)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&_impl_.x_, 0, static_cast<::size_t>(
      reinterpret_cast<char*>(&_impl_.z_) -
      reinterpret_cast<char*>(&_impl_.x_)) + sizeof(_impl_.z_));
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* Rotation::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<2, 3, 0, 0, 2> Rotation::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    3, 24,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967288,  // skipmap
    offsetof(decltype(_table_), field_entries),
    3,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    &_Rotation_default_instance_._instance,
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::Rotation>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
    // double x = 1;
    {::_pbi::TcParser::FastF64S1,
     {9, 63, 0, PROTOBUF_FIELD_OFFSET(Rotation, _impl_.x_)}},
    // double y = 2;
    {::_pbi::TcParser::FastF64S1,
     {17, 63, 0, PROTOBUF_FIELD_OFFSET(Rotation, _impl_.y_)}},
    // double z = 3;
    {::_pbi::TcParser::FastF64S1,
     {25, 63, 0, PROTOBUF_FIELD_OFFSET(Rotation, _impl_.z_)}},
  }}, {{
    65535, 65535
  }}, {{
    // double x = 1;
    {PROTOBUF_FIELD_OFFSET(Rotation, _impl_.x_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kDouble)},
    // double y = 2;
    {PROTOBUF_FIELD_OFFSET(Rotation, _impl_.y_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kDouble)},
    // double z = 3;
    {PROTOBUF_FIELD_OFFSET(Rotation, _impl_.z_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kDouble)},
  }},
  // no aux_entries
  {{
  }},
};

::uint8_t* Rotation::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:Rotation)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  // double x = 1;
  static_assert(sizeof(::uint64_t) == sizeof(double),
                "Code assumes ::uint64_t and double are the same size.");
  double tmp_x = this->_internal_x();
  ::uint64_t raw_x;
  memcpy(&raw_x, &tmp_x, sizeof(tmp_x));
  if (raw_x != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteDoubleToArray(
        1, this->_internal_x(), target);
  }

  // double y = 2;
  static_assert(sizeof(::uint64_t) == sizeof(double),
                "Code assumes ::uint64_t and double are the same size.");
  double tmp_y = this->_internal_y();
  ::uint64_t raw_y;
  memcpy(&raw_y, &tmp_y, sizeof(tmp_y));
  if (raw_y != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteDoubleToArray(
        2, this->_internal_y(), target);
  }

  // double z = 3;
  static_assert(sizeof(::uint64_t) == sizeof(double),
                "Code assumes ::uint64_t and double are the same size.");
  double tmp_z = this->_internal_z();
  ::uint64_t raw_z;
  memcpy(&raw_z, &tmp_z, sizeof(tmp_z));
  if (raw_z != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteDoubleToArray(
        3, this->_internal_z(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:Rotation)
  return target;
}

::size_t Rotation::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:Rotation)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // double x = 1;
  static_assert(sizeof(::uint64_t) == sizeof(double),
                "Code assumes ::uint64_t and double are the same size.");
  double tmp_x = this->_internal_x();
  ::uint64_t raw_x;
  memcpy(&raw_x, &tmp_x, sizeof(tmp_x));
  if (raw_x != 0) {
    total_size += 9;
  }

  // double y = 2;
  static_assert(sizeof(::uint64_t) == sizeof(double),
                "Code assumes ::uint64_t and double are the same size.");
  double tmp_y = this->_internal_y();
  ::uint64_t raw_y;
  memcpy(&raw_y, &tmp_y, sizeof(tmp_y));
  if (raw_y != 0) {
    total_size += 9;
  }

  // double z = 3;
  static_assert(sizeof(::uint64_t) == sizeof(double),
                "Code assumes ::uint64_t and double are the same size.");
  double tmp_z = this->_internal_z();
  ::uint64_t raw_z;
  memcpy(&raw_z, &tmp_z, sizeof(tmp_z));
  if (raw_z != 0) {
    total_size += 9;
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}


void Rotation::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<Rotation*>(&to_msg);
  auto& from = static_cast<const Rotation&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:Rotation)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  static_assert(sizeof(::uint64_t) == sizeof(double),
                "Code assumes ::uint64_t and double are the same size.");
  double tmp_x = from._internal_x();
  ::uint64_t raw_x;
  memcpy(&raw_x, &tmp_x, sizeof(tmp_x));
  if (raw_x != 0) {
    _this->_impl_.x_ = from._impl_.x_;
  }
  static_assert(sizeof(::uint64_t) == sizeof(double),
                "Code assumes ::uint64_t and double are the same size.");
  double tmp_y = from._internal_y();
  ::uint64_t raw_y;
  memcpy(&raw_y, &tmp_y, sizeof(tmp_y));
  if (raw_y != 0) {
    _this->_impl_.y_ = from._impl_.y_;
  }
  static_assert(sizeof(::uint64_t) == sizeof(double),
                "Code assumes ::uint64_t and double are the same size.");
  double tmp_z = from._internal_z();
  ::uint64_t raw_z;
  memcpy(&raw_z, &tmp_z, sizeof(tmp_z));
  if (raw_z != 0) {
    _this->_impl_.z_ = from._impl_.z_;
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void Rotation::CopyFrom(const Rotation& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:Rotation)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool Rotation::IsInitialized() const {
  return true;
}

void Rotation::InternalSwap(Rotation* PROTOBUF_RESTRICT other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(Rotation, _impl_.z_)
      + sizeof(Rotation::_impl_.z_)
      - PROTOBUF_FIELD_OFFSET(Rotation, _impl_.x_)>(
          reinterpret_cast<char*>(&_impl_.x_),
          reinterpret_cast<char*>(&other->_impl_.x_));
}

::google::protobuf::Metadata Rotation::GetMetadata() const {
  return ::_pbi::AssignDescriptors(&descriptor_table_logic_2fcomponent_2factor_5fcomp_2eproto_getter,
                                   &descriptor_table_logic_2fcomponent_2factor_5fcomp_2eproto_once,
                                   file_level_metadata_logic_2fcomponent_2factor_5fcomp_2eproto[1]);
}
// ===================================================================

class Scale::_Internal {
 public:
};

Scale::Scale(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:Scale)
}
Scale::Scale(
    ::google::protobuf::Arena* arena, const Scale& from)
    : Scale(arena) {
  MergeFrom(from);
}
inline PROTOBUF_NDEBUG_INLINE Scale::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0} {}

inline void Scale::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, x_),
           0,
           offsetof(Impl_, z_) -
               offsetof(Impl_, x_) +
               sizeof(Impl_::z_));
}
Scale::~Scale() {
  // @@protoc_insertion_point(destructor:Scale)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void Scale::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  _impl_.~Impl_();
}

const ::google::protobuf::MessageLite::ClassData*
Scale::GetClassData() const {
  PROTOBUF_CONSTINIT static const ::google::protobuf::MessageLite::
      ClassDataFull _data_ = {
          {
              nullptr,  // OnDemandRegisterArenaDtor
              PROTOBUF_FIELD_OFFSET(Scale, _impl_._cached_size_),
              false,
          },
          &Scale::MergeImpl,
          &Scale::kDescriptorMethods,
      };
  return &_data_;
}
PROTOBUF_NOINLINE void Scale::Clear() {
// @@protoc_insertion_point(message_clear_start:Scale)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&_impl_.x_, 0, static_cast<::size_t>(
      reinterpret_cast<char*>(&_impl_.z_) -
      reinterpret_cast<char*>(&_impl_.x_)) + sizeof(_impl_.z_));
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* Scale::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<2, 3, 0, 0, 2> Scale::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    3, 24,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967288,  // skipmap
    offsetof(decltype(_table_), field_entries),
    3,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    &_Scale_default_instance_._instance,
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::Scale>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
    // double x = 1;
    {::_pbi::TcParser::FastF64S1,
     {9, 63, 0, PROTOBUF_FIELD_OFFSET(Scale, _impl_.x_)}},
    // double y = 2;
    {::_pbi::TcParser::FastF64S1,
     {17, 63, 0, PROTOBUF_FIELD_OFFSET(Scale, _impl_.y_)}},
    // double z = 3;
    {::_pbi::TcParser::FastF64S1,
     {25, 63, 0, PROTOBUF_FIELD_OFFSET(Scale, _impl_.z_)}},
  }}, {{
    65535, 65535
  }}, {{
    // double x = 1;
    {PROTOBUF_FIELD_OFFSET(Scale, _impl_.x_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kDouble)},
    // double y = 2;
    {PROTOBUF_FIELD_OFFSET(Scale, _impl_.y_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kDouble)},
    // double z = 3;
    {PROTOBUF_FIELD_OFFSET(Scale, _impl_.z_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kDouble)},
  }},
  // no aux_entries
  {{
  }},
};

::uint8_t* Scale::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:Scale)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  // double x = 1;
  static_assert(sizeof(::uint64_t) == sizeof(double),
                "Code assumes ::uint64_t and double are the same size.");
  double tmp_x = this->_internal_x();
  ::uint64_t raw_x;
  memcpy(&raw_x, &tmp_x, sizeof(tmp_x));
  if (raw_x != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteDoubleToArray(
        1, this->_internal_x(), target);
  }

  // double y = 2;
  static_assert(sizeof(::uint64_t) == sizeof(double),
                "Code assumes ::uint64_t and double are the same size.");
  double tmp_y = this->_internal_y();
  ::uint64_t raw_y;
  memcpy(&raw_y, &tmp_y, sizeof(tmp_y));
  if (raw_y != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteDoubleToArray(
        2, this->_internal_y(), target);
  }

  // double z = 3;
  static_assert(sizeof(::uint64_t) == sizeof(double),
                "Code assumes ::uint64_t and double are the same size.");
  double tmp_z = this->_internal_z();
  ::uint64_t raw_z;
  memcpy(&raw_z, &tmp_z, sizeof(tmp_z));
  if (raw_z != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteDoubleToArray(
        3, this->_internal_z(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:Scale)
  return target;
}

::size_t Scale::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:Scale)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // double x = 1;
  static_assert(sizeof(::uint64_t) == sizeof(double),
                "Code assumes ::uint64_t and double are the same size.");
  double tmp_x = this->_internal_x();
  ::uint64_t raw_x;
  memcpy(&raw_x, &tmp_x, sizeof(tmp_x));
  if (raw_x != 0) {
    total_size += 9;
  }

  // double y = 2;
  static_assert(sizeof(::uint64_t) == sizeof(double),
                "Code assumes ::uint64_t and double are the same size.");
  double tmp_y = this->_internal_y();
  ::uint64_t raw_y;
  memcpy(&raw_y, &tmp_y, sizeof(tmp_y));
  if (raw_y != 0) {
    total_size += 9;
  }

  // double z = 3;
  static_assert(sizeof(::uint64_t) == sizeof(double),
                "Code assumes ::uint64_t and double are the same size.");
  double tmp_z = this->_internal_z();
  ::uint64_t raw_z;
  memcpy(&raw_z, &tmp_z, sizeof(tmp_z));
  if (raw_z != 0) {
    total_size += 9;
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}


void Scale::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<Scale*>(&to_msg);
  auto& from = static_cast<const Scale&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:Scale)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  static_assert(sizeof(::uint64_t) == sizeof(double),
                "Code assumes ::uint64_t and double are the same size.");
  double tmp_x = from._internal_x();
  ::uint64_t raw_x;
  memcpy(&raw_x, &tmp_x, sizeof(tmp_x));
  if (raw_x != 0) {
    _this->_impl_.x_ = from._impl_.x_;
  }
  static_assert(sizeof(::uint64_t) == sizeof(double),
                "Code assumes ::uint64_t and double are the same size.");
  double tmp_y = from._internal_y();
  ::uint64_t raw_y;
  memcpy(&raw_y, &tmp_y, sizeof(tmp_y));
  if (raw_y != 0) {
    _this->_impl_.y_ = from._impl_.y_;
  }
  static_assert(sizeof(::uint64_t) == sizeof(double),
                "Code assumes ::uint64_t and double are the same size.");
  double tmp_z = from._internal_z();
  ::uint64_t raw_z;
  memcpy(&raw_z, &tmp_z, sizeof(tmp_z));
  if (raw_z != 0) {
    _this->_impl_.z_ = from._impl_.z_;
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void Scale::CopyFrom(const Scale& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:Scale)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool Scale::IsInitialized() const {
  return true;
}

void Scale::InternalSwap(Scale* PROTOBUF_RESTRICT other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(Scale, _impl_.z_)
      + sizeof(Scale::_impl_.z_)
      - PROTOBUF_FIELD_OFFSET(Scale, _impl_.x_)>(
          reinterpret_cast<char*>(&_impl_.x_),
          reinterpret_cast<char*>(&other->_impl_.x_));
}

::google::protobuf::Metadata Scale::GetMetadata() const {
  return ::_pbi::AssignDescriptors(&descriptor_table_logic_2fcomponent_2factor_5fcomp_2eproto_getter,
                                   &descriptor_table_logic_2fcomponent_2factor_5fcomp_2eproto_once,
                                   file_level_metadata_logic_2fcomponent_2factor_5fcomp_2eproto[2]);
}
// ===================================================================

class Transform::_Internal {
 public:
  using HasBits = decltype(std::declval<Transform>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
    8 * PROTOBUF_FIELD_OFFSET(Transform, _impl_._has_bits_);
};

void Transform::clear_location() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  if (_impl_.location_ != nullptr) _impl_.location_->Clear();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
Transform::Transform(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:Transform)
}
inline PROTOBUF_NDEBUG_INLINE Transform::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from)
      : _has_bits_{from._has_bits_},
        _cached_size_{0} {}

Transform::Transform(
    ::google::protobuf::Arena* arena,
    const Transform& from)
    : ::google::protobuf::Message(arena) {
  Transform* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_);
  ::uint32_t cached_has_bits = _impl_._has_bits_[0];
  _impl_.location_ = (cached_has_bits & 0x00000001u) ? ::google::protobuf::Message::CopyConstruct<::Vector3>(
                              arena, *from._impl_.location_)
                        : nullptr;
  _impl_.rotation_ = (cached_has_bits & 0x00000002u) ? ::google::protobuf::Message::CopyConstruct<::Rotation>(
                              arena, *from._impl_.rotation_)
                        : nullptr;
  _impl_.scale_ = (cached_has_bits & 0x00000004u) ? ::google::protobuf::Message::CopyConstruct<::Scale>(
                              arena, *from._impl_.scale_)
                        : nullptr;

  // @@protoc_insertion_point(copy_constructor:Transform)
}
inline PROTOBUF_NDEBUG_INLINE Transform::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0} {}

inline void Transform::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, location_),
           0,
           offsetof(Impl_, scale_) -
               offsetof(Impl_, location_) +
               sizeof(Impl_::scale_));
}
Transform::~Transform() {
  // @@protoc_insertion_point(destructor:Transform)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void Transform::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  delete _impl_.location_;
  delete _impl_.rotation_;
  delete _impl_.scale_;
  _impl_.~Impl_();
}

const ::google::protobuf::MessageLite::ClassData*
Transform::GetClassData() const {
  PROTOBUF_CONSTINIT static const ::google::protobuf::MessageLite::
      ClassDataFull _data_ = {
          {
              nullptr,  // OnDemandRegisterArenaDtor
              PROTOBUF_FIELD_OFFSET(Transform, _impl_._cached_size_),
              false,
          },
          &Transform::MergeImpl,
          &Transform::kDescriptorMethods,
      };
  return &_data_;
}
PROTOBUF_NOINLINE void Transform::Clear() {
// @@protoc_insertion_point(message_clear_start:Transform)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000007u) {
    if (cached_has_bits & 0x00000001u) {
      ABSL_DCHECK(_impl_.location_ != nullptr);
      _impl_.location_->Clear();
    }
    if (cached_has_bits & 0x00000002u) {
      ABSL_DCHECK(_impl_.rotation_ != nullptr);
      _impl_.rotation_->Clear();
    }
    if (cached_has_bits & 0x00000004u) {
      ABSL_DCHECK(_impl_.scale_ != nullptr);
      _impl_.scale_->Clear();
    }
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* Transform::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<2, 3, 3, 0, 2> Transform::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(Transform, _impl_._has_bits_),
    0, // no _extensions_
    3, 24,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967288,  // skipmap
    offsetof(decltype(_table_), field_entries),
    3,  // num_field_entries
    3,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    &_Transform_default_instance_._instance,
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::Transform>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
    // .Vector3 location = 1;
    {::_pbi::TcParser::FastMtS1,
     {10, 0, 0, PROTOBUF_FIELD_OFFSET(Transform, _impl_.location_)}},
    // .Rotation rotation = 2;
    {::_pbi::TcParser::FastMtS1,
     {18, 1, 1, PROTOBUF_FIELD_OFFSET(Transform, _impl_.rotation_)}},
    // .Scale scale = 3;
    {::_pbi::TcParser::FastMtS1,
     {26, 2, 2, PROTOBUF_FIELD_OFFSET(Transform, _impl_.scale_)}},
  }}, {{
    65535, 65535
  }}, {{
    // .Vector3 location = 1;
    {PROTOBUF_FIELD_OFFSET(Transform, _impl_.location_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
    // .Rotation rotation = 2;
    {PROTOBUF_FIELD_OFFSET(Transform, _impl_.rotation_), _Internal::kHasBitsOffset + 1, 1,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
    // .Scale scale = 3;
    {PROTOBUF_FIELD_OFFSET(Transform, _impl_.scale_), _Internal::kHasBitsOffset + 2, 2,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
  }}, {{
    {::_pbi::TcParser::GetTable<::Vector3>()},
    {::_pbi::TcParser::GetTable<::Rotation>()},
    {::_pbi::TcParser::GetTable<::Scale>()},
  }}, {{
  }},
};

::uint8_t* Transform::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:Transform)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  // .Vector3 location = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
        1, *_impl_.location_, _impl_.location_->GetCachedSize(), target, stream);
  }

  // .Rotation rotation = 2;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
        2, *_impl_.rotation_, _impl_.rotation_->GetCachedSize(), target, stream);
  }

  // .Scale scale = 3;
  if (cached_has_bits & 0x00000004u) {
    target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
        3, *_impl_.scale_, _impl_.scale_->GetCachedSize(), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:Transform)
  return target;
}

::size_t Transform::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:Transform)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000007u) {
    // .Vector3 location = 1;
    if (cached_has_bits & 0x00000001u) {
      total_size +=
          1 + ::google::protobuf::internal::WireFormatLite::MessageSize(*_impl_.location_);
    }

    // .Rotation rotation = 2;
    if (cached_has_bits & 0x00000002u) {
      total_size +=
          1 + ::google::protobuf::internal::WireFormatLite::MessageSize(*_impl_.rotation_);
    }

    // .Scale scale = 3;
    if (cached_has_bits & 0x00000004u) {
      total_size +=
          1 + ::google::protobuf::internal::WireFormatLite::MessageSize(*_impl_.scale_);
    }

  }
  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}


void Transform::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<Transform*>(&to_msg);
  auto& from = static_cast<const Transform&>(from_msg);
  ::google::protobuf::Arena* arena = _this->GetArena();
  // @@protoc_insertion_point(class_specific_merge_from_start:Transform)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._impl_._has_bits_[0];
  if (cached_has_bits & 0x00000007u) {
    if (cached_has_bits & 0x00000001u) {
      ABSL_DCHECK(from._impl_.location_ != nullptr);
      if (_this->_impl_.location_ == nullptr) {
        _this->_impl_.location_ =
            ::google::protobuf::Message::CopyConstruct<::Vector3>(arena, *from._impl_.location_);
      } else {
        _this->_impl_.location_->MergeFrom(*from._impl_.location_);
      }
    }
    if (cached_has_bits & 0x00000002u) {
      ABSL_DCHECK(from._impl_.rotation_ != nullptr);
      if (_this->_impl_.rotation_ == nullptr) {
        _this->_impl_.rotation_ =
            ::google::protobuf::Message::CopyConstruct<::Rotation>(arena, *from._impl_.rotation_);
      } else {
        _this->_impl_.rotation_->MergeFrom(*from._impl_.rotation_);
      }
    }
    if (cached_has_bits & 0x00000004u) {
      ABSL_DCHECK(from._impl_.scale_ != nullptr);
      if (_this->_impl_.scale_ == nullptr) {
        _this->_impl_.scale_ =
            ::google::protobuf::Message::CopyConstruct<::Scale>(arena, *from._impl_.scale_);
      } else {
        _this->_impl_.scale_->MergeFrom(*from._impl_.scale_);
      }
    }
  }
  _this->_impl_._has_bits_[0] |= cached_has_bits;
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void Transform::CopyFrom(const Transform& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:Transform)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool Transform::IsInitialized() const {
  return true;
}

void Transform::InternalSwap(Transform* PROTOBUF_RESTRICT other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(Transform, _impl_.scale_)
      + sizeof(Transform::_impl_.scale_)
      - PROTOBUF_FIELD_OFFSET(Transform, _impl_.location_)>(
          reinterpret_cast<char*>(&_impl_.location_),
          reinterpret_cast<char*>(&other->_impl_.location_));
}

::google::protobuf::Metadata Transform::GetMetadata() const {
  return ::_pbi::AssignDescriptors(&descriptor_table_logic_2fcomponent_2factor_5fcomp_2eproto_getter,
                                   &descriptor_table_logic_2fcomponent_2factor_5fcomp_2eproto_once,
                                   file_level_metadata_logic_2fcomponent_2factor_5fcomp_2eproto[3]);
}
// ===================================================================

class Velocity::_Internal {
 public:
};

Velocity::Velocity(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:Velocity)
}
Velocity::Velocity(
    ::google::protobuf::Arena* arena, const Velocity& from)
    : Velocity(arena) {
  MergeFrom(from);
}
inline PROTOBUF_NDEBUG_INLINE Velocity::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0} {}

inline void Velocity::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, x_),
           0,
           offsetof(Impl_, z_) -
               offsetof(Impl_, x_) +
               sizeof(Impl_::z_));
}
Velocity::~Velocity() {
  // @@protoc_insertion_point(destructor:Velocity)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void Velocity::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  _impl_.~Impl_();
}

const ::google::protobuf::MessageLite::ClassData*
Velocity::GetClassData() const {
  PROTOBUF_CONSTINIT static const ::google::protobuf::MessageLite::
      ClassDataFull _data_ = {
          {
              nullptr,  // OnDemandRegisterArenaDtor
              PROTOBUF_FIELD_OFFSET(Velocity, _impl_._cached_size_),
              false,
          },
          &Velocity::MergeImpl,
          &Velocity::kDescriptorMethods,
      };
  return &_data_;
}
PROTOBUF_NOINLINE void Velocity::Clear() {
// @@protoc_insertion_point(message_clear_start:Velocity)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&_impl_.x_, 0, static_cast<::size_t>(
      reinterpret_cast<char*>(&_impl_.z_) -
      reinterpret_cast<char*>(&_impl_.x_)) + sizeof(_impl_.z_));
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* Velocity::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<2, 3, 0, 0, 2> Velocity::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    3, 24,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967288,  // skipmap
    offsetof(decltype(_table_), field_entries),
    3,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    &_Velocity_default_instance_._instance,
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::Velocity>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
    // double x = 1;
    {::_pbi::TcParser::FastF64S1,
     {9, 63, 0, PROTOBUF_FIELD_OFFSET(Velocity, _impl_.x_)}},
    // double y = 2;
    {::_pbi::TcParser::FastF64S1,
     {17, 63, 0, PROTOBUF_FIELD_OFFSET(Velocity, _impl_.y_)}},
    // double z = 3;
    {::_pbi::TcParser::FastF64S1,
     {25, 63, 0, PROTOBUF_FIELD_OFFSET(Velocity, _impl_.z_)}},
  }}, {{
    65535, 65535
  }}, {{
    // double x = 1;
    {PROTOBUF_FIELD_OFFSET(Velocity, _impl_.x_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kDouble)},
    // double y = 2;
    {PROTOBUF_FIELD_OFFSET(Velocity, _impl_.y_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kDouble)},
    // double z = 3;
    {PROTOBUF_FIELD_OFFSET(Velocity, _impl_.z_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kDouble)},
  }},
  // no aux_entries
  {{
  }},
};

::uint8_t* Velocity::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:Velocity)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  // double x = 1;
  static_assert(sizeof(::uint64_t) == sizeof(double),
                "Code assumes ::uint64_t and double are the same size.");
  double tmp_x = this->_internal_x();
  ::uint64_t raw_x;
  memcpy(&raw_x, &tmp_x, sizeof(tmp_x));
  if (raw_x != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteDoubleToArray(
        1, this->_internal_x(), target);
  }

  // double y = 2;
  static_assert(sizeof(::uint64_t) == sizeof(double),
                "Code assumes ::uint64_t and double are the same size.");
  double tmp_y = this->_internal_y();
  ::uint64_t raw_y;
  memcpy(&raw_y, &tmp_y, sizeof(tmp_y));
  if (raw_y != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteDoubleToArray(
        2, this->_internal_y(), target);
  }

  // double z = 3;
  static_assert(sizeof(::uint64_t) == sizeof(double),
                "Code assumes ::uint64_t and double are the same size.");
  double tmp_z = this->_internal_z();
  ::uint64_t raw_z;
  memcpy(&raw_z, &tmp_z, sizeof(tmp_z));
  if (raw_z != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteDoubleToArray(
        3, this->_internal_z(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:Velocity)
  return target;
}

::size_t Velocity::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:Velocity)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // double x = 1;
  static_assert(sizeof(::uint64_t) == sizeof(double),
                "Code assumes ::uint64_t and double are the same size.");
  double tmp_x = this->_internal_x();
  ::uint64_t raw_x;
  memcpy(&raw_x, &tmp_x, sizeof(tmp_x));
  if (raw_x != 0) {
    total_size += 9;
  }

  // double y = 2;
  static_assert(sizeof(::uint64_t) == sizeof(double),
                "Code assumes ::uint64_t and double are the same size.");
  double tmp_y = this->_internal_y();
  ::uint64_t raw_y;
  memcpy(&raw_y, &tmp_y, sizeof(tmp_y));
  if (raw_y != 0) {
    total_size += 9;
  }

  // double z = 3;
  static_assert(sizeof(::uint64_t) == sizeof(double),
                "Code assumes ::uint64_t and double are the same size.");
  double tmp_z = this->_internal_z();
  ::uint64_t raw_z;
  memcpy(&raw_z, &tmp_z, sizeof(tmp_z));
  if (raw_z != 0) {
    total_size += 9;
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}


void Velocity::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<Velocity*>(&to_msg);
  auto& from = static_cast<const Velocity&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:Velocity)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  static_assert(sizeof(::uint64_t) == sizeof(double),
                "Code assumes ::uint64_t and double are the same size.");
  double tmp_x = from._internal_x();
  ::uint64_t raw_x;
  memcpy(&raw_x, &tmp_x, sizeof(tmp_x));
  if (raw_x != 0) {
    _this->_impl_.x_ = from._impl_.x_;
  }
  static_assert(sizeof(::uint64_t) == sizeof(double),
                "Code assumes ::uint64_t and double are the same size.");
  double tmp_y = from._internal_y();
  ::uint64_t raw_y;
  memcpy(&raw_y, &tmp_y, sizeof(tmp_y));
  if (raw_y != 0) {
    _this->_impl_.y_ = from._impl_.y_;
  }
  static_assert(sizeof(::uint64_t) == sizeof(double),
                "Code assumes ::uint64_t and double are the same size.");
  double tmp_z = from._internal_z();
  ::uint64_t raw_z;
  memcpy(&raw_z, &tmp_z, sizeof(tmp_z));
  if (raw_z != 0) {
    _this->_impl_.z_ = from._impl_.z_;
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void Velocity::CopyFrom(const Velocity& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:Velocity)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool Velocity::IsInitialized() const {
  return true;
}

void Velocity::InternalSwap(Velocity* PROTOBUF_RESTRICT other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(Velocity, _impl_.z_)
      + sizeof(Velocity::_impl_.z_)
      - PROTOBUF_FIELD_OFFSET(Velocity, _impl_.x_)>(
          reinterpret_cast<char*>(&_impl_.x_),
          reinterpret_cast<char*>(&other->_impl_.x_));
}

::google::protobuf::Metadata Velocity::GetMetadata() const {
  return ::_pbi::AssignDescriptors(&descriptor_table_logic_2fcomponent_2factor_5fcomp_2eproto_getter,
                                   &descriptor_table_logic_2fcomponent_2factor_5fcomp_2eproto_once,
                                   file_level_metadata_logic_2fcomponent_2factor_5fcomp_2eproto[4]);
}
// ===================================================================

class Acceleration::_Internal {
 public:
};

Acceleration::Acceleration(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:Acceleration)
}
Acceleration::Acceleration(
    ::google::protobuf::Arena* arena, const Acceleration& from)
    : Acceleration(arena) {
  MergeFrom(from);
}
inline PROTOBUF_NDEBUG_INLINE Acceleration::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0} {}

inline void Acceleration::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, x_),
           0,
           offsetof(Impl_, z_) -
               offsetof(Impl_, x_) +
               sizeof(Impl_::z_));
}
Acceleration::~Acceleration() {
  // @@protoc_insertion_point(destructor:Acceleration)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void Acceleration::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  _impl_.~Impl_();
}

const ::google::protobuf::MessageLite::ClassData*
Acceleration::GetClassData() const {
  PROTOBUF_CONSTINIT static const ::google::protobuf::MessageLite::
      ClassDataFull _data_ = {
          {
              nullptr,  // OnDemandRegisterArenaDtor
              PROTOBUF_FIELD_OFFSET(Acceleration, _impl_._cached_size_),
              false,
          },
          &Acceleration::MergeImpl,
          &Acceleration::kDescriptorMethods,
      };
  return &_data_;
}
PROTOBUF_NOINLINE void Acceleration::Clear() {
// @@protoc_insertion_point(message_clear_start:Acceleration)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&_impl_.x_, 0, static_cast<::size_t>(
      reinterpret_cast<char*>(&_impl_.z_) -
      reinterpret_cast<char*>(&_impl_.x_)) + sizeof(_impl_.z_));
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* Acceleration::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<2, 3, 0, 0, 2> Acceleration::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    3, 24,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967288,  // skipmap
    offsetof(decltype(_table_), field_entries),
    3,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    &_Acceleration_default_instance_._instance,
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::Acceleration>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
    // double x = 1;
    {::_pbi::TcParser::FastF64S1,
     {9, 63, 0, PROTOBUF_FIELD_OFFSET(Acceleration, _impl_.x_)}},
    // double y = 2;
    {::_pbi::TcParser::FastF64S1,
     {17, 63, 0, PROTOBUF_FIELD_OFFSET(Acceleration, _impl_.y_)}},
    // double z = 3;
    {::_pbi::TcParser::FastF64S1,
     {25, 63, 0, PROTOBUF_FIELD_OFFSET(Acceleration, _impl_.z_)}},
  }}, {{
    65535, 65535
  }}, {{
    // double x = 1;
    {PROTOBUF_FIELD_OFFSET(Acceleration, _impl_.x_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kDouble)},
    // double y = 2;
    {PROTOBUF_FIELD_OFFSET(Acceleration, _impl_.y_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kDouble)},
    // double z = 3;
    {PROTOBUF_FIELD_OFFSET(Acceleration, _impl_.z_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kDouble)},
  }},
  // no aux_entries
  {{
  }},
};

::uint8_t* Acceleration::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:Acceleration)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  // double x = 1;
  static_assert(sizeof(::uint64_t) == sizeof(double),
                "Code assumes ::uint64_t and double are the same size.");
  double tmp_x = this->_internal_x();
  ::uint64_t raw_x;
  memcpy(&raw_x, &tmp_x, sizeof(tmp_x));
  if (raw_x != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteDoubleToArray(
        1, this->_internal_x(), target);
  }

  // double y = 2;
  static_assert(sizeof(::uint64_t) == sizeof(double),
                "Code assumes ::uint64_t and double are the same size.");
  double tmp_y = this->_internal_y();
  ::uint64_t raw_y;
  memcpy(&raw_y, &tmp_y, sizeof(tmp_y));
  if (raw_y != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteDoubleToArray(
        2, this->_internal_y(), target);
  }

  // double z = 3;
  static_assert(sizeof(::uint64_t) == sizeof(double),
                "Code assumes ::uint64_t and double are the same size.");
  double tmp_z = this->_internal_z();
  ::uint64_t raw_z;
  memcpy(&raw_z, &tmp_z, sizeof(tmp_z));
  if (raw_z != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteDoubleToArray(
        3, this->_internal_z(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:Acceleration)
  return target;
}

::size_t Acceleration::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:Acceleration)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // double x = 1;
  static_assert(sizeof(::uint64_t) == sizeof(double),
                "Code assumes ::uint64_t and double are the same size.");
  double tmp_x = this->_internal_x();
  ::uint64_t raw_x;
  memcpy(&raw_x, &tmp_x, sizeof(tmp_x));
  if (raw_x != 0) {
    total_size += 9;
  }

  // double y = 2;
  static_assert(sizeof(::uint64_t) == sizeof(double),
                "Code assumes ::uint64_t and double are the same size.");
  double tmp_y = this->_internal_y();
  ::uint64_t raw_y;
  memcpy(&raw_y, &tmp_y, sizeof(tmp_y));
  if (raw_y != 0) {
    total_size += 9;
  }

  // double z = 3;
  static_assert(sizeof(::uint64_t) == sizeof(double),
                "Code assumes ::uint64_t and double are the same size.");
  double tmp_z = this->_internal_z();
  ::uint64_t raw_z;
  memcpy(&raw_z, &tmp_z, sizeof(tmp_z));
  if (raw_z != 0) {
    total_size += 9;
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}


void Acceleration::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<Acceleration*>(&to_msg);
  auto& from = static_cast<const Acceleration&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:Acceleration)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  static_assert(sizeof(::uint64_t) == sizeof(double),
                "Code assumes ::uint64_t and double are the same size.");
  double tmp_x = from._internal_x();
  ::uint64_t raw_x;
  memcpy(&raw_x, &tmp_x, sizeof(tmp_x));
  if (raw_x != 0) {
    _this->_impl_.x_ = from._impl_.x_;
  }
  static_assert(sizeof(::uint64_t) == sizeof(double),
                "Code assumes ::uint64_t and double are the same size.");
  double tmp_y = from._internal_y();
  ::uint64_t raw_y;
  memcpy(&raw_y, &tmp_y, sizeof(tmp_y));
  if (raw_y != 0) {
    _this->_impl_.y_ = from._impl_.y_;
  }
  static_assert(sizeof(::uint64_t) == sizeof(double),
                "Code assumes ::uint64_t and double are the same size.");
  double tmp_z = from._internal_z();
  ::uint64_t raw_z;
  memcpy(&raw_z, &tmp_z, sizeof(tmp_z));
  if (raw_z != 0) {
    _this->_impl_.z_ = from._impl_.z_;
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void Acceleration::CopyFrom(const Acceleration& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:Acceleration)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool Acceleration::IsInitialized() const {
  return true;
}

void Acceleration::InternalSwap(Acceleration* PROTOBUF_RESTRICT other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(Acceleration, _impl_.z_)
      + sizeof(Acceleration::_impl_.z_)
      - PROTOBUF_FIELD_OFFSET(Acceleration, _impl_.x_)>(
          reinterpret_cast<char*>(&_impl_.x_),
          reinterpret_cast<char*>(&other->_impl_.x_));
}

::google::protobuf::Metadata Acceleration::GetMetadata() const {
  return ::_pbi::AssignDescriptors(&descriptor_table_logic_2fcomponent_2factor_5fcomp_2eproto_getter,
                                   &descriptor_table_logic_2fcomponent_2factor_5fcomp_2eproto_once,
                                   file_level_metadata_logic_2fcomponent_2factor_5fcomp_2eproto[5]);
}
// ===================================================================

class ViewRadius::_Internal {
 public:
};

ViewRadius::ViewRadius(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:ViewRadius)
}
ViewRadius::ViewRadius(
    ::google::protobuf::Arena* arena, const ViewRadius& from)
    : ViewRadius(arena) {
  MergeFrom(from);
}
inline PROTOBUF_NDEBUG_INLINE ViewRadius::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0} {}

inline void ViewRadius::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  _impl_.radius_ = {};
}
ViewRadius::~ViewRadius() {
  // @@protoc_insertion_point(destructor:ViewRadius)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void ViewRadius::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  _impl_.~Impl_();
}

const ::google::protobuf::MessageLite::ClassData*
ViewRadius::GetClassData() const {
  PROTOBUF_CONSTINIT static const ::google::protobuf::MessageLite::
      ClassDataFull _data_ = {
          {
              nullptr,  // OnDemandRegisterArenaDtor
              PROTOBUF_FIELD_OFFSET(ViewRadius, _impl_._cached_size_),
              false,
          },
          &ViewRadius::MergeImpl,
          &ViewRadius::kDescriptorMethods,
      };
  return &_data_;
}
PROTOBUF_NOINLINE void ViewRadius::Clear() {
// @@protoc_insertion_point(message_clear_start:ViewRadius)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.radius_ = 0;
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* ViewRadius::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<0, 1, 0, 0, 2> ViewRadius::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    1, 0,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967294,  // skipmap
    offsetof(decltype(_table_), field_entries),
    1,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    &_ViewRadius_default_instance_._instance,
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::ViewRadius>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // double radius = 1;
    {::_pbi::TcParser::FastF64S1,
     {9, 63, 0, PROTOBUF_FIELD_OFFSET(ViewRadius, _impl_.radius_)}},
  }}, {{
    65535, 65535
  }}, {{
    // double radius = 1;
    {PROTOBUF_FIELD_OFFSET(ViewRadius, _impl_.radius_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kDouble)},
  }},
  // no aux_entries
  {{
  }},
};

::uint8_t* ViewRadius::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:ViewRadius)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  // double radius = 1;
  static_assert(sizeof(::uint64_t) == sizeof(double),
                "Code assumes ::uint64_t and double are the same size.");
  double tmp_radius = this->_internal_radius();
  ::uint64_t raw_radius;
  memcpy(&raw_radius, &tmp_radius, sizeof(tmp_radius));
  if (raw_radius != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteDoubleToArray(
        1, this->_internal_radius(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:ViewRadius)
  return target;
}

::size_t ViewRadius::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:ViewRadius)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // double radius = 1;
  static_assert(sizeof(::uint64_t) == sizeof(double),
                "Code assumes ::uint64_t and double are the same size.");
  double tmp_radius = this->_internal_radius();
  ::uint64_t raw_radius;
  memcpy(&raw_radius, &tmp_radius, sizeof(tmp_radius));
  if (raw_radius != 0) {
    total_size += 9;
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}


void ViewRadius::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<ViewRadius*>(&to_msg);
  auto& from = static_cast<const ViewRadius&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:ViewRadius)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  static_assert(sizeof(::uint64_t) == sizeof(double),
                "Code assumes ::uint64_t and double are the same size.");
  double tmp_radius = from._internal_radius();
  ::uint64_t raw_radius;
  memcpy(&raw_radius, &tmp_radius, sizeof(tmp_radius));
  if (raw_radius != 0) {
    _this->_impl_.radius_ = from._impl_.radius_;
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void ViewRadius::CopyFrom(const ViewRadius& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:ViewRadius)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool ViewRadius::IsInitialized() const {
  return true;
}

void ViewRadius::InternalSwap(ViewRadius* PROTOBUF_RESTRICT other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
        swap(_impl_.radius_, other->_impl_.radius_);
}

::google::protobuf::Metadata ViewRadius::GetMetadata() const {
  return ::_pbi::AssignDescriptors(&descriptor_table_logic_2fcomponent_2factor_5fcomp_2eproto_getter,
                                   &descriptor_table_logic_2fcomponent_2factor_5fcomp_2eproto_once,
                                   file_level_metadata_logic_2fcomponent_2factor_5fcomp_2eproto[6]);
}
// ===================================================================

class BaseAttributesPbComponent::_Internal {
 public:
};

BaseAttributesPbComponent::BaseAttributesPbComponent(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:BaseAttributesPbComponent)
}
BaseAttributesPbComponent::BaseAttributesPbComponent(
    ::google::protobuf::Arena* arena, const BaseAttributesPbComponent& from)
    : BaseAttributesPbComponent(arena) {
  MergeFrom(from);
}
inline PROTOBUF_NDEBUG_INLINE BaseAttributesPbComponent::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0} {}

inline void BaseAttributesPbComponent::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, strength_),
           0,
           offsetof(Impl_, resistance_) -
               offsetof(Impl_, strength_) +
               sizeof(Impl_::resistance_));
}
BaseAttributesPbComponent::~BaseAttributesPbComponent() {
  // @@protoc_insertion_point(destructor:BaseAttributesPbComponent)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void BaseAttributesPbComponent::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  _impl_.~Impl_();
}

const ::google::protobuf::MessageLite::ClassData*
BaseAttributesPbComponent::GetClassData() const {
  PROTOBUF_CONSTINIT static const ::google::protobuf::MessageLite::
      ClassDataFull _data_ = {
          {
              nullptr,  // OnDemandRegisterArenaDtor
              PROTOBUF_FIELD_OFFSET(BaseAttributesPbComponent, _impl_._cached_size_),
              false,
          },
          &BaseAttributesPbComponent::MergeImpl,
          &BaseAttributesPbComponent::kDescriptorMethods,
      };
  return &_data_;
}
PROTOBUF_NOINLINE void BaseAttributesPbComponent::Clear() {
// @@protoc_insertion_point(message_clear_start:BaseAttributesPbComponent)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&_impl_.strength_, 0, static_cast<::size_t>(
      reinterpret_cast<char*>(&_impl_.resistance_) -
      reinterpret_cast<char*>(&_impl_.strength_)) + sizeof(_impl_.resistance_));
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* BaseAttributesPbComponent::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<3, 7, 0, 0, 2> BaseAttributesPbComponent::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    7, 56,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967168,  // skipmap
    offsetof(decltype(_table_), field_entries),
    7,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    &_BaseAttributesPbComponent_default_instance_._instance,
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::BaseAttributesPbComponent>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
    // uint64 strength = 1;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint64_t, offsetof(BaseAttributesPbComponent, _impl_.strength_), 63>(),
     {8, 63, 0, PROTOBUF_FIELD_OFFSET(BaseAttributesPbComponent, _impl_.strength_)}},
    // uint64 stamina = 2;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint64_t, offsetof(BaseAttributesPbComponent, _impl_.stamina_), 63>(),
     {16, 63, 0, PROTOBUF_FIELD_OFFSET(BaseAttributesPbComponent, _impl_.stamina_)}},
    // uint64 health = 3;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint64_t, offsetof(BaseAttributesPbComponent, _impl_.health_), 63>(),
     {24, 63, 0, PROTOBUF_FIELD_OFFSET(BaseAttributesPbComponent, _impl_.health_)}},
    // uint64 mana = 4;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint64_t, offsetof(BaseAttributesPbComponent, _impl_.mana_), 63>(),
     {32, 63, 0, PROTOBUF_FIELD_OFFSET(BaseAttributesPbComponent, _impl_.mana_)}},
    // uint64 critchance = 5;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint64_t, offsetof(BaseAttributesPbComponent, _impl_.critchance_), 63>(),
     {40, 63, 0, PROTOBUF_FIELD_OFFSET(BaseAttributesPbComponent, _impl_.critchance_)}},
    // uint64 armor = 6;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint64_t, offsetof(BaseAttributesPbComponent, _impl_.armor_), 63>(),
     {48, 63, 0, PROTOBUF_FIELD_OFFSET(BaseAttributesPbComponent, _impl_.armor_)}},
    // uint64 resistance = 7;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint64_t, offsetof(BaseAttributesPbComponent, _impl_.resistance_), 63>(),
     {56, 63, 0, PROTOBUF_FIELD_OFFSET(BaseAttributesPbComponent, _impl_.resistance_)}},
  }}, {{
    65535, 65535
  }}, {{
    // uint64 strength = 1;
    {PROTOBUF_FIELD_OFFSET(BaseAttributesPbComponent, _impl_.strength_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUInt64)},
    // uint64 stamina = 2;
    {PROTOBUF_FIELD_OFFSET(BaseAttributesPbComponent, _impl_.stamina_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUInt64)},
    // uint64 health = 3;
    {PROTOBUF_FIELD_OFFSET(BaseAttributesPbComponent, _impl_.health_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUInt64)},
    // uint64 mana = 4;
    {PROTOBUF_FIELD_OFFSET(BaseAttributesPbComponent, _impl_.mana_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUInt64)},
    // uint64 critchance = 5;
    {PROTOBUF_FIELD_OFFSET(BaseAttributesPbComponent, _impl_.critchance_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUInt64)},
    // uint64 armor = 6;
    {PROTOBUF_FIELD_OFFSET(BaseAttributesPbComponent, _impl_.armor_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUInt64)},
    // uint64 resistance = 7;
    {PROTOBUF_FIELD_OFFSET(BaseAttributesPbComponent, _impl_.resistance_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUInt64)},
  }},
  // no aux_entries
  {{
  }},
};

::uint8_t* BaseAttributesPbComponent::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:BaseAttributesPbComponent)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  // uint64 strength = 1;
  if (this->_internal_strength() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt64ToArray(
        1, this->_internal_strength(), target);
  }

  // uint64 stamina = 2;
  if (this->_internal_stamina() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt64ToArray(
        2, this->_internal_stamina(), target);
  }

  // uint64 health = 3;
  if (this->_internal_health() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt64ToArray(
        3, this->_internal_health(), target);
  }

  // uint64 mana = 4;
  if (this->_internal_mana() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt64ToArray(
        4, this->_internal_mana(), target);
  }

  // uint64 critchance = 5;
  if (this->_internal_critchance() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt64ToArray(
        5, this->_internal_critchance(), target);
  }

  // uint64 armor = 6;
  if (this->_internal_armor() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt64ToArray(
        6, this->_internal_armor(), target);
  }

  // uint64 resistance = 7;
  if (this->_internal_resistance() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt64ToArray(
        7, this->_internal_resistance(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:BaseAttributesPbComponent)
  return target;
}

::size_t BaseAttributesPbComponent::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:BaseAttributesPbComponent)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // uint64 strength = 1;
  if (this->_internal_strength() != 0) {
    total_size += ::_pbi::WireFormatLite::UInt64SizePlusOne(
        this->_internal_strength());
  }

  // uint64 stamina = 2;
  if (this->_internal_stamina() != 0) {
    total_size += ::_pbi::WireFormatLite::UInt64SizePlusOne(
        this->_internal_stamina());
  }

  // uint64 health = 3;
  if (this->_internal_health() != 0) {
    total_size += ::_pbi::WireFormatLite::UInt64SizePlusOne(
        this->_internal_health());
  }

  // uint64 mana = 4;
  if (this->_internal_mana() != 0) {
    total_size += ::_pbi::WireFormatLite::UInt64SizePlusOne(
        this->_internal_mana());
  }

  // uint64 critchance = 5;
  if (this->_internal_critchance() != 0) {
    total_size += ::_pbi::WireFormatLite::UInt64SizePlusOne(
        this->_internal_critchance());
  }

  // uint64 armor = 6;
  if (this->_internal_armor() != 0) {
    total_size += ::_pbi::WireFormatLite::UInt64SizePlusOne(
        this->_internal_armor());
  }

  // uint64 resistance = 7;
  if (this->_internal_resistance() != 0) {
    total_size += ::_pbi::WireFormatLite::UInt64SizePlusOne(
        this->_internal_resistance());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}


void BaseAttributesPbComponent::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<BaseAttributesPbComponent*>(&to_msg);
  auto& from = static_cast<const BaseAttributesPbComponent&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:BaseAttributesPbComponent)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_strength() != 0) {
    _this->_impl_.strength_ = from._impl_.strength_;
  }
  if (from._internal_stamina() != 0) {
    _this->_impl_.stamina_ = from._impl_.stamina_;
  }
  if (from._internal_health() != 0) {
    _this->_impl_.health_ = from._impl_.health_;
  }
  if (from._internal_mana() != 0) {
    _this->_impl_.mana_ = from._impl_.mana_;
  }
  if (from._internal_critchance() != 0) {
    _this->_impl_.critchance_ = from._impl_.critchance_;
  }
  if (from._internal_armor() != 0) {
    _this->_impl_.armor_ = from._impl_.armor_;
  }
  if (from._internal_resistance() != 0) {
    _this->_impl_.resistance_ = from._impl_.resistance_;
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void BaseAttributesPbComponent::CopyFrom(const BaseAttributesPbComponent& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:BaseAttributesPbComponent)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool BaseAttributesPbComponent::IsInitialized() const {
  return true;
}

void BaseAttributesPbComponent::InternalSwap(BaseAttributesPbComponent* PROTOBUF_RESTRICT other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(BaseAttributesPbComponent, _impl_.resistance_)
      + sizeof(BaseAttributesPbComponent::_impl_.resistance_)
      - PROTOBUF_FIELD_OFFSET(BaseAttributesPbComponent, _impl_.strength_)>(
          reinterpret_cast<char*>(&_impl_.strength_),
          reinterpret_cast<char*>(&other->_impl_.strength_));
}

::google::protobuf::Metadata BaseAttributesPbComponent::GetMetadata() const {
  return ::_pbi::AssignDescriptors(&descriptor_table_logic_2fcomponent_2factor_5fcomp_2eproto_getter,
                                   &descriptor_table_logic_2fcomponent_2factor_5fcomp_2eproto_once,
                                   file_level_metadata_logic_2fcomponent_2factor_5fcomp_2eproto[7]);
}
// ===================================================================

class LevelPbComponent::_Internal {
 public:
};

LevelPbComponent::LevelPbComponent(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:LevelPbComponent)
}
LevelPbComponent::LevelPbComponent(
    ::google::protobuf::Arena* arena, const LevelPbComponent& from)
    : LevelPbComponent(arena) {
  MergeFrom(from);
}
inline PROTOBUF_NDEBUG_INLINE LevelPbComponent::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0} {}

inline void LevelPbComponent::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  _impl_.level_ = {};
}
LevelPbComponent::~LevelPbComponent() {
  // @@protoc_insertion_point(destructor:LevelPbComponent)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void LevelPbComponent::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  _impl_.~Impl_();
}

const ::google::protobuf::MessageLite::ClassData*
LevelPbComponent::GetClassData() const {
  PROTOBUF_CONSTINIT static const ::google::protobuf::MessageLite::
      ClassDataFull _data_ = {
          {
              nullptr,  // OnDemandRegisterArenaDtor
              PROTOBUF_FIELD_OFFSET(LevelPbComponent, _impl_._cached_size_),
              false,
          },
          &LevelPbComponent::MergeImpl,
          &LevelPbComponent::kDescriptorMethods,
      };
  return &_data_;
}
PROTOBUF_NOINLINE void LevelPbComponent::Clear() {
// @@protoc_insertion_point(message_clear_start:LevelPbComponent)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.level_ = 0u;
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* LevelPbComponent::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<0, 1, 0, 0, 2> LevelPbComponent::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    1, 0,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967294,  // skipmap
    offsetof(decltype(_table_), field_entries),
    1,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    &_LevelPbComponent_default_instance_._instance,
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::LevelPbComponent>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // uint32 level = 1;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(LevelPbComponent, _impl_.level_), 63>(),
     {8, 63, 0, PROTOBUF_FIELD_OFFSET(LevelPbComponent, _impl_.level_)}},
  }}, {{
    65535, 65535
  }}, {{
    // uint32 level = 1;
    {PROTOBUF_FIELD_OFFSET(LevelPbComponent, _impl_.level_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUInt32)},
  }},
  // no aux_entries
  {{
  }},
};

::uint8_t* LevelPbComponent::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:LevelPbComponent)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  // uint32 level = 1;
  if (this->_internal_level() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt32ToArray(
        1, this->_internal_level(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:LevelPbComponent)
  return target;
}

::size_t LevelPbComponent::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:LevelPbComponent)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // uint32 level = 1;
  if (this->_internal_level() != 0) {
    total_size += ::_pbi::WireFormatLite::UInt32SizePlusOne(
        this->_internal_level());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}


void LevelPbComponent::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<LevelPbComponent*>(&to_msg);
  auto& from = static_cast<const LevelPbComponent&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:LevelPbComponent)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_level() != 0) {
    _this->_impl_.level_ = from._impl_.level_;
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void LevelPbComponent::CopyFrom(const LevelPbComponent& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:LevelPbComponent)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool LevelPbComponent::IsInitialized() const {
  return true;
}

void LevelPbComponent::InternalSwap(LevelPbComponent* PROTOBUF_RESTRICT other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
        swap(_impl_.level_, other->_impl_.level_);
}

::google::protobuf::Metadata LevelPbComponent::GetMetadata() const {
  return ::_pbi::AssignDescriptors(&descriptor_table_logic_2fcomponent_2factor_5fcomp_2eproto_getter,
                                   &descriptor_table_logic_2fcomponent_2factor_5fcomp_2eproto_once,
                                   file_level_metadata_logic_2fcomponent_2factor_5fcomp_2eproto[8]);
}
// ===================================================================

ActorStatePbComponent_StateListEntry_DoNotUse::ActorStatePbComponent_StateListEntry_DoNotUse() {}
ActorStatePbComponent_StateListEntry_DoNotUse::ActorStatePbComponent_StateListEntry_DoNotUse(::google::protobuf::Arena* arena)
    : SuperType(arena) {}
::google::protobuf::Metadata ActorStatePbComponent_StateListEntry_DoNotUse::GetMetadata() const {
  return ::_pbi::AssignDescriptors(&descriptor_table_logic_2fcomponent_2factor_5fcomp_2eproto_getter,
                                   &descriptor_table_logic_2fcomponent_2factor_5fcomp_2eproto_once,
                                   file_level_metadata_logic_2fcomponent_2factor_5fcomp_2eproto[9]);
}
// ===================================================================

class ActorStatePbComponent::_Internal {
 public:
};

ActorStatePbComponent::ActorStatePbComponent(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:ActorStatePbComponent)
}
inline PROTOBUF_NDEBUG_INLINE ActorStatePbComponent::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from)
      : state_list_{visibility, arena, from.state_list_},
        _cached_size_{0} {}

ActorStatePbComponent::ActorStatePbComponent(
    ::google::protobuf::Arena* arena,
    const ActorStatePbComponent& from)
    : ::google::protobuf::Message(arena) {
  ActorStatePbComponent* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_);

  // @@protoc_insertion_point(copy_constructor:ActorStatePbComponent)
}
inline PROTOBUF_NDEBUG_INLINE ActorStatePbComponent::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : state_list_{visibility, arena},
        _cached_size_{0} {}

inline void ActorStatePbComponent::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
}
ActorStatePbComponent::~ActorStatePbComponent() {
  // @@protoc_insertion_point(destructor:ActorStatePbComponent)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void ActorStatePbComponent::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  _impl_.~Impl_();
}

const ::google::protobuf::MessageLite::ClassData*
ActorStatePbComponent::GetClassData() const {
  PROTOBUF_CONSTINIT static const ::google::protobuf::MessageLite::
      ClassDataFull _data_ = {
          {
              nullptr,  // OnDemandRegisterArenaDtor
              PROTOBUF_FIELD_OFFSET(ActorStatePbComponent, _impl_._cached_size_),
              false,
          },
          &ActorStatePbComponent::MergeImpl,
          &ActorStatePbComponent::kDescriptorMethods,
      };
  return &_data_;
}
PROTOBUF_NOINLINE void ActorStatePbComponent::Clear() {
// @@protoc_insertion_point(message_clear_start:ActorStatePbComponent)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.state_list_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* ActorStatePbComponent::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<0, 1, 1, 0, 2> ActorStatePbComponent::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    1, 0,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967294,  // skipmap
    offsetof(decltype(_table_), field_entries),
    1,  // num_field_entries
    1,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    &_ActorStatePbComponent_default_instance_._instance,
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::ActorStatePbComponent>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
  }}, {{
    65535, 65535
  }}, {{
    // map<uint32, bool> state_list = 1;
    {PROTOBUF_FIELD_OFFSET(ActorStatePbComponent, _impl_.state_list_), 0, 0,
    (0 | ::_fl::kFcRepeated | ::_fl::kMap)},
  }}, {{
    {::_pbi::TcParser::GetMapAuxInfo<
        decltype(ActorStatePbComponent()._impl_.state_list_)>(
        0, 0, 0, 13,
        8)},
  }}, {{
  }},
};

::uint8_t* ActorStatePbComponent::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:ActorStatePbComponent)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  // map<uint32, bool> state_list = 1;
  if (!_internal_state_list().empty()) {
    using MapType = ::google::protobuf::Map<::uint32_t, bool>;
    using WireHelper = _pbi::MapEntryFuncs<::uint32_t, bool,
                                   _pbi::WireFormatLite::TYPE_UINT32,
                                   _pbi::WireFormatLite::TYPE_BOOL>;
    const auto& field = _internal_state_list();

    if (stream->IsSerializationDeterministic() && field.size() > 1) {
      for (const auto& entry : ::google::protobuf::internal::MapSorterFlat<MapType>(field)) {
        target = WireHelper::InternalSerialize(
            1, entry.first, entry.second, target, stream);
      }
    } else {
      for (const auto& entry : field) {
        target = WireHelper::InternalSerialize(
            1, entry.first, entry.second, target, stream);
      }
    }
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:ActorStatePbComponent)
  return target;
}

::size_t ActorStatePbComponent::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:ActorStatePbComponent)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // map<uint32, bool> state_list = 1;
  total_size += 1 * ::google::protobuf::internal::FromIntSize(_internal_state_list_size());
  for (const auto& entry : _internal_state_list()) {
    total_size += _pbi::MapEntryFuncs<::uint32_t, bool,
                                   _pbi::WireFormatLite::TYPE_UINT32,
                                   _pbi::WireFormatLite::TYPE_BOOL>::ByteSizeLong(entry.first, entry.second);
  }
  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}


void ActorStatePbComponent::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<ActorStatePbComponent*>(&to_msg);
  auto& from = static_cast<const ActorStatePbComponent&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:ActorStatePbComponent)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_impl_.state_list_.MergeFrom(from._impl_.state_list_);
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void ActorStatePbComponent::CopyFrom(const ActorStatePbComponent& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:ActorStatePbComponent)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool ActorStatePbComponent::IsInitialized() const {
  return true;
}

void ActorStatePbComponent::InternalSwap(ActorStatePbComponent* PROTOBUF_RESTRICT other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  _impl_.state_list_.InternalSwap(&other->_impl_.state_list_);
}

::google::protobuf::Metadata ActorStatePbComponent::GetMetadata() const {
  return ::_pbi::AssignDescriptors(&descriptor_table_logic_2fcomponent_2factor_5fcomp_2eproto_getter,
                                   &descriptor_table_logic_2fcomponent_2factor_5fcomp_2eproto_once,
                                   file_level_metadata_logic_2fcomponent_2factor_5fcomp_2eproto[10]);
}
// @@protoc_insertion_point(namespace_scope)
namespace google {
namespace protobuf {
}  // namespace protobuf
}  // namespace google
// @@protoc_insertion_point(global_scope)
PROTOBUF_ATTRIBUTE_INIT_PRIORITY2
static ::std::false_type _static_init_ PROTOBUF_UNUSED =
    (::_pbi::AddDescriptors(&descriptor_table_logic_2fcomponent_2factor_5fcomp_2eproto),
     ::std::false_type{});
#include "google/protobuf/port_undef.inc"
