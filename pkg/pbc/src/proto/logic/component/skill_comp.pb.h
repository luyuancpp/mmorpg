// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: logic/component/skill_comp.proto
// Protobuf C++ Version: 5.26.1

#ifndef GOOGLE_PROTOBUF_INCLUDED_logic_2fcomponent_2fskill_5fcomp_2eproto_2epb_2eh
#define GOOGLE_PROTOBUF_INCLUDED_logic_2fcomponent_2fskill_5fcomp_2eproto_2epb_2eh

#include <limits>
#include <string>
#include <type_traits>
#include <utility>

#include "google/protobuf/port_def.inc"
#if PROTOBUF_VERSION != 5026001
#error "Protobuf C++ gencode is built with an incompatible version of"
#error "Protobuf C++ headers/runtime. See"
#error "https://protobuf.dev/support/cross-version-runtime-guarantee/#cpp"
#endif
#include "google/protobuf/port_undef.inc"
#include "google/protobuf/io/coded_stream.h"
#include "google/protobuf/arena.h"
#include "google/protobuf/arenastring.h"
#include "google/protobuf/generated_message_tctable_decl.h"
#include "google/protobuf/generated_message_util.h"
#include "google/protobuf/metadata_lite.h"
#include "google/protobuf/generated_message_reflection.h"
#include "google/protobuf/message.h"
#include "google/protobuf/repeated_field.h"  // IWYU pragma: export
#include "google/protobuf/extension_set.h"  // IWYU pragma: export
#include "google/protobuf/map.h"  // IWYU pragma: export
#include "google/protobuf/map_entry.h"
#include "google/protobuf/map_field_inl.h"
#include "google/protobuf/unknown_field_set.h"
#include "logic/component/actor_comp.pb.h"
// @@protoc_insertion_point(includes)

// Must be included last.
#include "google/protobuf/port_def.inc"

#define PROTOBUF_INTERNAL_EXPORT_logic_2fcomponent_2fskill_5fcomp_2eproto

namespace google {
namespace protobuf {
namespace internal {
class AnyMetadata;
}  // namespace internal
}  // namespace protobuf
}  // namespace google

// Internal implementation detail -- do not use these members.
struct TableStruct_logic_2fcomponent_2fskill_5fcomp_2eproto {
  static const ::uint32_t offsets[];
};
extern const ::google::protobuf::internal::DescriptorTable
    descriptor_table_logic_2fcomponent_2fskill_5fcomp_2eproto;
class SkillContextPBComp;
struct SkillContextPBCompDefaultTypeInternal;
extern SkillContextPBCompDefaultTypeInternal _SkillContextPBComp_default_instance_;
class SkillContextPBComp_AdditionalDataEntry_DoNotUse;
struct SkillContextPBComp_AdditionalDataEntry_DoNotUseDefaultTypeInternal;
extern SkillContextPBComp_AdditionalDataEntry_DoNotUseDefaultTypeInternal _SkillContextPBComp_AdditionalDataEntry_DoNotUse_default_instance_;
class SkillPBComp;
struct SkillPBCompDefaultTypeInternal;
extern SkillPBCompDefaultTypeInternal _SkillPBComp_default_instance_;
namespace google {
namespace protobuf {
}  // namespace protobuf
}  // namespace google


// ===================================================================


// -------------------------------------------------------------------

class SkillPBComp final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:SkillPBComp) */ {
 public:
  inline SkillPBComp() : SkillPBComp(nullptr) {}
  ~SkillPBComp() override;
  template <typename = void>
  explicit PROTOBUF_CONSTEXPR SkillPBComp(
      ::google::protobuf::internal::ConstantInitialized);

  inline SkillPBComp(const SkillPBComp& from) : SkillPBComp(nullptr, from) {}
  inline SkillPBComp(SkillPBComp&& from) noexcept
      : SkillPBComp(nullptr, std::move(from)) {}
  inline SkillPBComp& operator=(const SkillPBComp& from) {
    CopyFrom(from);
    return *this;
  }
  inline SkillPBComp& operator=(SkillPBComp&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
#ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
#endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const SkillPBComp& default_instance() {
    return *internal_default_instance();
  }
  static inline const SkillPBComp* internal_default_instance() {
    return reinterpret_cast<const SkillPBComp*>(
        &_SkillPBComp_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 0;
  friend void swap(SkillPBComp& a, SkillPBComp& b) { a.Swap(&b); }
  inline void Swap(SkillPBComp* other) {
    if (other == this) return;
#ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr && GetArena() == other->GetArena()) {
#else   // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
#endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(SkillPBComp* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  SkillPBComp* New(::google::protobuf::Arena* arena = nullptr) const final {
    return ::google::protobuf::Message::DefaultConstruct<SkillPBComp>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const SkillPBComp& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const SkillPBComp& from) { SkillPBComp::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  ::size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::google::protobuf::internal::ParseContext* ctx) final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(SkillPBComp* other);
 private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() { return "SkillPBComp"; }

 protected:
  explicit SkillPBComp(::google::protobuf::Arena* arena);
  SkillPBComp(::google::protobuf::Arena* arena, const SkillPBComp& from);
  SkillPBComp(::google::protobuf::Arena* arena, SkillPBComp&& from) noexcept
      : SkillPBComp(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::MessageLite::ClassData* GetClassData()
      const final;

 public:
  ::google::protobuf::Metadata GetMetadata() const final;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kSkillTableIdFieldNumber = 1,
  };
  // uint64 skill_table_id = 1;
  void clear_skill_table_id() ;
  ::uint64_t skill_table_id() const;
  void set_skill_table_id(::uint64_t value);

  private:
  ::uint64_t _internal_skill_table_id() const;
  void _internal_set_skill_table_id(::uint64_t value);

  public:
  // @@protoc_insertion_point(class_scope:SkillPBComp)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      0, 1, 0,
      0, 2>
      _table_;
  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from);
    ::uint64_t skill_table_id_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_logic_2fcomponent_2fskill_5fcomp_2eproto;
};
// -------------------------------------------------------------------

class SkillContextPBComp_AdditionalDataEntry_DoNotUse final
    : public ::google::protobuf::internal::MapEntry<
          SkillContextPBComp_AdditionalDataEntry_DoNotUse, std::string, ::uint32_t,
          ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
          ::google::protobuf::internal::WireFormatLite::TYPE_UINT32> {
 public:
  using SuperType = ::google::protobuf::internal::MapEntry<
      SkillContextPBComp_AdditionalDataEntry_DoNotUse, std::string, ::uint32_t,
      ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
      ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>;
  SkillContextPBComp_AdditionalDataEntry_DoNotUse();
  template <typename = void>
  explicit PROTOBUF_CONSTEXPR SkillContextPBComp_AdditionalDataEntry_DoNotUse(
      ::google::protobuf::internal::ConstantInitialized);
  explicit SkillContextPBComp_AdditionalDataEntry_DoNotUse(::google::protobuf::Arena* arena);
  static const SkillContextPBComp_AdditionalDataEntry_DoNotUse* internal_default_instance() {
    return reinterpret_cast<const SkillContextPBComp_AdditionalDataEntry_DoNotUse*>(
        &_SkillContextPBComp_AdditionalDataEntry_DoNotUse_default_instance_);
  }
  static bool ValidateKey(std::string* s) {
    return ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(s->data(), static_cast<int>(s->size()), ::google::protobuf::internal::WireFormatLite::PARSE, "SkillContextPBComp.AdditionalDataEntry.key");
 }
  static bool ValidateValue(void*) { return true; }
  ::google::protobuf::Metadata GetMetadata() const final;
  friend struct ::TableStruct_logic_2fcomponent_2fskill_5fcomp_2eproto;
};
// -------------------------------------------------------------------

class SkillContextPBComp final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:SkillContextPBComp) */ {
 public:
  inline SkillContextPBComp() : SkillContextPBComp(nullptr) {}
  ~SkillContextPBComp() override;
  template <typename = void>
  explicit PROTOBUF_CONSTEXPR SkillContextPBComp(
      ::google::protobuf::internal::ConstantInitialized);

  inline SkillContextPBComp(const SkillContextPBComp& from) : SkillContextPBComp(nullptr, from) {}
  inline SkillContextPBComp(SkillContextPBComp&& from) noexcept
      : SkillContextPBComp(nullptr, std::move(from)) {}
  inline SkillContextPBComp& operator=(const SkillContextPBComp& from) {
    CopyFrom(from);
    return *this;
  }
  inline SkillContextPBComp& operator=(SkillContextPBComp&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
#ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
#endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const SkillContextPBComp& default_instance() {
    return *internal_default_instance();
  }
  static inline const SkillContextPBComp* internal_default_instance() {
    return reinterpret_cast<const SkillContextPBComp*>(
        &_SkillContextPBComp_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 2;
  friend void swap(SkillContextPBComp& a, SkillContextPBComp& b) { a.Swap(&b); }
  inline void Swap(SkillContextPBComp* other) {
    if (other == this) return;
#ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr && GetArena() == other->GetArena()) {
#else   // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
#endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(SkillContextPBComp* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  SkillContextPBComp* New(::google::protobuf::Arena* arena = nullptr) const final {
    return ::google::protobuf::Message::DefaultConstruct<SkillContextPBComp>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const SkillContextPBComp& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const SkillContextPBComp& from) { SkillContextPBComp::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  ::size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::google::protobuf::internal::ParseContext* ctx) final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(SkillContextPBComp* other);
 private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() { return "SkillContextPBComp"; }

 protected:
  explicit SkillContextPBComp(::google::protobuf::Arena* arena);
  SkillContextPBComp(::google::protobuf::Arena* arena, const SkillContextPBComp& from);
  SkillContextPBComp(::google::protobuf::Arena* arena, SkillContextPBComp&& from) noexcept
      : SkillContextPBComp(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::MessageLite::ClassData* GetClassData()
      const final;

 public:
  ::google::protobuf::Metadata GetMetadata() const final;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kAdditionalDataFieldNumber = 8,
    kStateFieldNumber = 7,
    kCastPositionFieldNumber = 5,
    kCasterFieldNumber = 1,
    kTargetFieldNumber = 2,
    kSkillIdFieldNumber = 3,
    kSkillTableIdFieldNumber = 4,
    kCastTimeFieldNumber = 6,
  };
  // map<string, uint32> additionalData = 8;
  int additionaldata_size() const;
  private:
  int _internal_additionaldata_size() const;

  public:
  void clear_additionaldata() ;
  const ::google::protobuf::Map<std::string, ::uint32_t>& additionaldata() const;
  ::google::protobuf::Map<std::string, ::uint32_t>* mutable_additionaldata();

  private:
  const ::google::protobuf::Map<std::string, ::uint32_t>& _internal_additionaldata() const;
  ::google::protobuf::Map<std::string, ::uint32_t>* _internal_mutable_additionaldata();

  public:
  // string state = 7;
  void clear_state() ;
  const std::string& state() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_state(Arg_&& arg, Args_... args);
  std::string* mutable_state();
  PROTOBUF_NODISCARD std::string* release_state();
  void set_allocated_state(std::string* value);

  private:
  const std::string& _internal_state() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_state(
      const std::string& value);
  std::string* _internal_mutable_state();

  public:
  // .Transform castPosition = 5;
  bool has_castposition() const;
  void clear_castposition() ;
  const ::Transform& castposition() const;
  PROTOBUF_NODISCARD ::Transform* release_castposition();
  ::Transform* mutable_castposition();
  void set_allocated_castposition(::Transform* value);
  void unsafe_arena_set_allocated_castposition(::Transform* value);
  ::Transform* unsafe_arena_release_castposition();

  private:
  const ::Transform& _internal_castposition() const;
  ::Transform* _internal_mutable_castposition();

  public:
  // uint64 caster = 1;
  void clear_caster() ;
  ::uint64_t caster() const;
  void set_caster(::uint64_t value);

  private:
  ::uint64_t _internal_caster() const;
  void _internal_set_caster(::uint64_t value);

  public:
  // uint64 target = 2;
  void clear_target() ;
  ::uint64_t target() const;
  void set_target(::uint64_t value);

  private:
  ::uint64_t _internal_target() const;
  void _internal_set_target(::uint64_t value);

  public:
  // uint32 SkillId = 3;
  void clear_skillid() ;
  ::uint32_t skillid() const;
  void set_skillid(::uint32_t value);

  private:
  ::uint32_t _internal_skillid() const;
  void _internal_set_skillid(::uint32_t value);

  public:
  // uint32 skillTableId = 4;
  void clear_skilltableid() ;
  ::uint32_t skilltableid() const;
  void set_skilltableid(::uint32_t value);

  private:
  ::uint32_t _internal_skilltableid() const;
  void _internal_set_skilltableid(::uint32_t value);

  public:
  // uint64 castTime = 6;
  void clear_casttime() ;
  ::uint64_t casttime() const;
  void set_casttime(::uint64_t value);

  private:
  ::uint64_t _internal_casttime() const;
  void _internal_set_casttime(::uint64_t value);

  public:
  // @@protoc_insertion_point(class_scope:SkillContextPBComp)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      3, 8, 2,
      54, 2>
      _table_;
  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from);
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    ::google::protobuf::internal::MapField<SkillContextPBComp_AdditionalDataEntry_DoNotUse, std::string, ::uint32_t,
                      ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
                      ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>
        additionaldata_;
    ::google::protobuf::internal::ArenaStringPtr state_;
    ::Transform* castposition_;
    ::uint64_t caster_;
    ::uint64_t target_;
    ::uint32_t skillid_;
    ::uint32_t skilltableid_;
    ::uint64_t casttime_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_logic_2fcomponent_2fskill_5fcomp_2eproto;
};

// ===================================================================




// ===================================================================


#ifdef __GNUC__
#pragma GCC diagnostic push
#pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif  // __GNUC__
// -------------------------------------------------------------------

// SkillPBComp

// uint64 skill_table_id = 1;
inline void SkillPBComp::clear_skill_table_id() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.skill_table_id_ = ::uint64_t{0u};
}
inline ::uint64_t SkillPBComp::skill_table_id() const {
  // @@protoc_insertion_point(field_get:SkillPBComp.skill_table_id)
  return _internal_skill_table_id();
}
inline void SkillPBComp::set_skill_table_id(::uint64_t value) {
  _internal_set_skill_table_id(value);
  // @@protoc_insertion_point(field_set:SkillPBComp.skill_table_id)
}
inline ::uint64_t SkillPBComp::_internal_skill_table_id() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.skill_table_id_;
}
inline void SkillPBComp::_internal_set_skill_table_id(::uint64_t value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.skill_table_id_ = value;
}

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// SkillContextPBComp

// uint64 caster = 1;
inline void SkillContextPBComp::clear_caster() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.caster_ = ::uint64_t{0u};
}
inline ::uint64_t SkillContextPBComp::caster() const {
  // @@protoc_insertion_point(field_get:SkillContextPBComp.caster)
  return _internal_caster();
}
inline void SkillContextPBComp::set_caster(::uint64_t value) {
  _internal_set_caster(value);
  // @@protoc_insertion_point(field_set:SkillContextPBComp.caster)
}
inline ::uint64_t SkillContextPBComp::_internal_caster() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.caster_;
}
inline void SkillContextPBComp::_internal_set_caster(::uint64_t value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.caster_ = value;
}

// uint64 target = 2;
inline void SkillContextPBComp::clear_target() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.target_ = ::uint64_t{0u};
}
inline ::uint64_t SkillContextPBComp::target() const {
  // @@protoc_insertion_point(field_get:SkillContextPBComp.target)
  return _internal_target();
}
inline void SkillContextPBComp::set_target(::uint64_t value) {
  _internal_set_target(value);
  // @@protoc_insertion_point(field_set:SkillContextPBComp.target)
}
inline ::uint64_t SkillContextPBComp::_internal_target() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.target_;
}
inline void SkillContextPBComp::_internal_set_target(::uint64_t value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.target_ = value;
}

// uint32 SkillId = 3;
inline void SkillContextPBComp::clear_skillid() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.skillid_ = 0u;
}
inline ::uint32_t SkillContextPBComp::skillid() const {
  // @@protoc_insertion_point(field_get:SkillContextPBComp.SkillId)
  return _internal_skillid();
}
inline void SkillContextPBComp::set_skillid(::uint32_t value) {
  _internal_set_skillid(value);
  // @@protoc_insertion_point(field_set:SkillContextPBComp.SkillId)
}
inline ::uint32_t SkillContextPBComp::_internal_skillid() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.skillid_;
}
inline void SkillContextPBComp::_internal_set_skillid(::uint32_t value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.skillid_ = value;
}

// uint32 skillTableId = 4;
inline void SkillContextPBComp::clear_skilltableid() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.skilltableid_ = 0u;
}
inline ::uint32_t SkillContextPBComp::skilltableid() const {
  // @@protoc_insertion_point(field_get:SkillContextPBComp.skillTableId)
  return _internal_skilltableid();
}
inline void SkillContextPBComp::set_skilltableid(::uint32_t value) {
  _internal_set_skilltableid(value);
  // @@protoc_insertion_point(field_set:SkillContextPBComp.skillTableId)
}
inline ::uint32_t SkillContextPBComp::_internal_skilltableid() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.skilltableid_;
}
inline void SkillContextPBComp::_internal_set_skilltableid(::uint32_t value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.skilltableid_ = value;
}

// .Transform castPosition = 5;
inline bool SkillContextPBComp::has_castposition() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.castposition_ != nullptr);
  return value;
}
inline const ::Transform& SkillContextPBComp::_internal_castposition() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  const ::Transform* p = _impl_.castposition_;
  return p != nullptr ? *p : reinterpret_cast<const ::Transform&>(::_Transform_default_instance_);
}
inline const ::Transform& SkillContextPBComp::castposition() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:SkillContextPBComp.castPosition)
  return _internal_castposition();
}
inline void SkillContextPBComp::unsafe_arena_set_allocated_castposition(::Transform* value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.castposition_);
  }
  _impl_.castposition_ = reinterpret_cast<::Transform*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:SkillContextPBComp.castPosition)
}
inline ::Transform* SkillContextPBComp::release_castposition() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::Transform* released = _impl_.castposition_;
  _impl_.castposition_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
  auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
  released = ::google::protobuf::internal::DuplicateIfNonNull(released);
  if (GetArena() == nullptr) {
    delete old;
  }
#else   // PROTOBUF_FORCE_COPY_IN_RELEASE
  if (GetArena() != nullptr) {
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
  }
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
  return released;
}
inline ::Transform* SkillContextPBComp::unsafe_arena_release_castposition() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  // @@protoc_insertion_point(field_release:SkillContextPBComp.castPosition)

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::Transform* temp = _impl_.castposition_;
  _impl_.castposition_ = nullptr;
  return temp;
}
inline ::Transform* SkillContextPBComp::_internal_mutable_castposition() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  if (_impl_.castposition_ == nullptr) {
    auto* p = ::google::protobuf::Message::DefaultConstruct<::Transform>(GetArena());
    _impl_.castposition_ = reinterpret_cast<::Transform*>(p);
  }
  return _impl_.castposition_;
}
inline ::Transform* SkillContextPBComp::mutable_castposition() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  _impl_._has_bits_[0] |= 0x00000001u;
  ::Transform* _msg = _internal_mutable_castposition();
  // @@protoc_insertion_point(field_mutable:SkillContextPBComp.castPosition)
  return _msg;
}
inline void SkillContextPBComp::set_allocated_castposition(::Transform* value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  if (message_arena == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.castposition_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = reinterpret_cast<::google::protobuf::MessageLite*>(value)->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }

  _impl_.castposition_ = reinterpret_cast<::Transform*>(value);
  // @@protoc_insertion_point(field_set_allocated:SkillContextPBComp.castPosition)
}

// uint64 castTime = 6;
inline void SkillContextPBComp::clear_casttime() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.casttime_ = ::uint64_t{0u};
}
inline ::uint64_t SkillContextPBComp::casttime() const {
  // @@protoc_insertion_point(field_get:SkillContextPBComp.castTime)
  return _internal_casttime();
}
inline void SkillContextPBComp::set_casttime(::uint64_t value) {
  _internal_set_casttime(value);
  // @@protoc_insertion_point(field_set:SkillContextPBComp.castTime)
}
inline ::uint64_t SkillContextPBComp::_internal_casttime() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.casttime_;
}
inline void SkillContextPBComp::_internal_set_casttime(::uint64_t value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.casttime_ = value;
}

// string state = 7;
inline void SkillContextPBComp::clear_state() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.state_.ClearToEmpty();
}
inline const std::string& SkillContextPBComp::state() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:SkillContextPBComp.state)
  return _internal_state();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void SkillContextPBComp::set_state(Arg_&& arg,
                                                     Args_... args) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.state_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:SkillContextPBComp.state)
}
inline std::string* SkillContextPBComp::mutable_state() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_state();
  // @@protoc_insertion_point(field_mutable:SkillContextPBComp.state)
  return _s;
}
inline const std::string& SkillContextPBComp::_internal_state() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.state_.Get();
}
inline void SkillContextPBComp::_internal_set_state(const std::string& value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.state_.Set(value, GetArena());
}
inline std::string* SkillContextPBComp::_internal_mutable_state() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  return _impl_.state_.Mutable( GetArena());
}
inline std::string* SkillContextPBComp::release_state() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  // @@protoc_insertion_point(field_release:SkillContextPBComp.state)
  return _impl_.state_.Release();
}
inline void SkillContextPBComp::set_allocated_state(std::string* value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.state_.SetAllocated(value, GetArena());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.state_.IsDefault()) {
          _impl_.state_.Set("", GetArena());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:SkillContextPBComp.state)
}

// map<string, uint32> additionalData = 8;
inline int SkillContextPBComp::_internal_additionaldata_size() const {
  return _internal_additionaldata().size();
}
inline int SkillContextPBComp::additionaldata_size() const {
  return _internal_additionaldata_size();
}
inline void SkillContextPBComp::clear_additionaldata() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.additionaldata_.Clear();
}
inline const ::google::protobuf::Map<std::string, ::uint32_t>& SkillContextPBComp::_internal_additionaldata() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.additionaldata_.GetMap();
}
inline const ::google::protobuf::Map<std::string, ::uint32_t>& SkillContextPBComp::additionaldata() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_map:SkillContextPBComp.additionalData)
  return _internal_additionaldata();
}
inline ::google::protobuf::Map<std::string, ::uint32_t>* SkillContextPBComp::_internal_mutable_additionaldata() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  return _impl_.additionaldata_.MutableMap();
}
inline ::google::protobuf::Map<std::string, ::uint32_t>* SkillContextPBComp::mutable_additionaldata() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable_map:SkillContextPBComp.additionalData)
  return _internal_mutable_additionaldata();
}

#ifdef __GNUC__
#pragma GCC diagnostic pop
#endif  // __GNUC__

// @@protoc_insertion_point(namespace_scope)


// @@protoc_insertion_point(global_scope)

#include "google/protobuf/port_undef.inc"

#endif  // GOOGLE_PROTOBUF_INCLUDED_logic_2fcomponent_2fskill_5fcomp_2eproto_2epb_2eh
