// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: logic/component/actor_comp.proto
// Protobuf C++ Version: 5.26.1

#ifndef GOOGLE_PROTOBUF_INCLUDED_logic_2fcomponent_2factor_5fcomp_2eproto_2epb_2eh
#define GOOGLE_PROTOBUF_INCLUDED_logic_2fcomponent_2factor_5fcomp_2eproto_2epb_2eh

#include <limits>
#include <string>
#include <type_traits>
#include <utility>

#include "google/protobuf/port_def.inc"
#if PROTOBUF_VERSION != 5026001
#error "Protobuf C++ gencode is built with an incompatible version of"
#error "Protobuf C++ headers/runtime. See"
#error "https://protobuf.dev/support/cross-version-runtime-guarantee/#cpp"
#endif
#include "google/protobuf/port_undef.inc"
#include "google/protobuf/io/coded_stream.h"
#include "google/protobuf/arena.h"
#include "google/protobuf/arenastring.h"
#include "google/protobuf/generated_message_tctable_decl.h"
#include "google/protobuf/generated_message_util.h"
#include "google/protobuf/metadata_lite.h"
#include "google/protobuf/generated_message_reflection.h"
#include "google/protobuf/message.h"
#include "google/protobuf/repeated_field.h"  // IWYU pragma: export
#include "google/protobuf/extension_set.h"  // IWYU pragma: export
#include "google/protobuf/unknown_field_set.h"
#include "common/comp.pb.h"
// @@protoc_insertion_point(includes)

// Must be included last.
#include "google/protobuf/port_def.inc"

#define PROTOBUF_INTERNAL_EXPORT_logic_2fcomponent_2factor_5fcomp_2eproto

namespace google {
namespace protobuf {
namespace internal {
class AnyMetadata;
}  // namespace internal
}  // namespace protobuf
}  // namespace google

// Internal implementation detail -- do not use these members.
struct TableStruct_logic_2fcomponent_2factor_5fcomp_2eproto {
  static const ::uint32_t offsets[];
};
extern const ::google::protobuf::internal::DescriptorTable
    descriptor_table_logic_2fcomponent_2factor_5fcomp_2eproto;
class Acceleration;
struct AccelerationDefaultTypeInternal;
extern AccelerationDefaultTypeInternal _Acceleration_default_instance_;
class BaseAttributesPBComponent;
struct BaseAttributesPBComponentDefaultTypeInternal;
extern BaseAttributesPBComponentDefaultTypeInternal _BaseAttributesPBComponent_default_instance_;
class LevelComponent;
struct LevelComponentDefaultTypeInternal;
extern LevelComponentDefaultTypeInternal _LevelComponent_default_instance_;
class Location;
struct LocationDefaultTypeInternal;
extern LocationDefaultTypeInternal _Location_default_instance_;
class Rotation;
struct RotationDefaultTypeInternal;
extern RotationDefaultTypeInternal _Rotation_default_instance_;
class Scale;
struct ScaleDefaultTypeInternal;
extern ScaleDefaultTypeInternal _Scale_default_instance_;
class Transform;
struct TransformDefaultTypeInternal;
extern TransformDefaultTypeInternal _Transform_default_instance_;
class Velocity;
struct VelocityDefaultTypeInternal;
extern VelocityDefaultTypeInternal _Velocity_default_instance_;
class ViewRadius;
struct ViewRadiusDefaultTypeInternal;
extern ViewRadiusDefaultTypeInternal _ViewRadius_default_instance_;
namespace google {
namespace protobuf {
}  // namespace protobuf
}  // namespace google


// ===================================================================


// -------------------------------------------------------------------

class ViewRadius final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:ViewRadius) */ {
 public:
  inline ViewRadius() : ViewRadius(nullptr) {}
  ~ViewRadius() override;
  template <typename = void>
  explicit PROTOBUF_CONSTEXPR ViewRadius(
      ::google::protobuf::internal::ConstantInitialized);

  inline ViewRadius(const ViewRadius& from) : ViewRadius(nullptr, from) {}
  inline ViewRadius(ViewRadius&& from) noexcept
      : ViewRadius(nullptr, std::move(from)) {}
  inline ViewRadius& operator=(const ViewRadius& from) {
    CopyFrom(from);
    return *this;
  }
  inline ViewRadius& operator=(ViewRadius&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
#ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
#endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const ViewRadius& default_instance() {
    return *internal_default_instance();
  }
  static inline const ViewRadius* internal_default_instance() {
    return reinterpret_cast<const ViewRadius*>(
        &_ViewRadius_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 6;
  friend void swap(ViewRadius& a, ViewRadius& b) { a.Swap(&b); }
  inline void Swap(ViewRadius* other) {
    if (other == this) return;
#ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr && GetArena() == other->GetArena()) {
#else   // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
#endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(ViewRadius* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  ViewRadius* New(::google::protobuf::Arena* arena = nullptr) const final {
    return ::google::protobuf::Message::DefaultConstruct<ViewRadius>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const ViewRadius& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const ViewRadius& from) { ViewRadius::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  ::size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::google::protobuf::internal::ParseContext* ctx) final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(ViewRadius* other);
 private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() { return "ViewRadius"; }

 protected:
  explicit ViewRadius(::google::protobuf::Arena* arena);
  ViewRadius(::google::protobuf::Arena* arena, const ViewRadius& from);
  ViewRadius(::google::protobuf::Arena* arena, ViewRadius&& from) noexcept
      : ViewRadius(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::MessageLite::ClassData* GetClassData()
      const final;

 public:
  ::google::protobuf::Metadata GetMetadata() const final;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kRadiusFieldNumber = 1,
  };
  // double radius = 1;
  void clear_radius() ;
  double radius() const;
  void set_radius(double value);

  private:
  double _internal_radius() const;
  void _internal_set_radius(double value);

  public:
  // @@protoc_insertion_point(class_scope:ViewRadius)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      0, 1, 0,
      0, 2>
      _table_;
  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from);
    double radius_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_logic_2fcomponent_2factor_5fcomp_2eproto;
};
// -------------------------------------------------------------------

class Velocity final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:Velocity) */ {
 public:
  inline Velocity() : Velocity(nullptr) {}
  ~Velocity() override;
  template <typename = void>
  explicit PROTOBUF_CONSTEXPR Velocity(
      ::google::protobuf::internal::ConstantInitialized);

  inline Velocity(const Velocity& from) : Velocity(nullptr, from) {}
  inline Velocity(Velocity&& from) noexcept
      : Velocity(nullptr, std::move(from)) {}
  inline Velocity& operator=(const Velocity& from) {
    CopyFrom(from);
    return *this;
  }
  inline Velocity& operator=(Velocity&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
#ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
#endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const Velocity& default_instance() {
    return *internal_default_instance();
  }
  static inline const Velocity* internal_default_instance() {
    return reinterpret_cast<const Velocity*>(
        &_Velocity_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 4;
  friend void swap(Velocity& a, Velocity& b) { a.Swap(&b); }
  inline void Swap(Velocity* other) {
    if (other == this) return;
#ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr && GetArena() == other->GetArena()) {
#else   // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
#endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(Velocity* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  Velocity* New(::google::protobuf::Arena* arena = nullptr) const final {
    return ::google::protobuf::Message::DefaultConstruct<Velocity>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const Velocity& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const Velocity& from) { Velocity::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  ::size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::google::protobuf::internal::ParseContext* ctx) final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(Velocity* other);
 private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() { return "Velocity"; }

 protected:
  explicit Velocity(::google::protobuf::Arena* arena);
  Velocity(::google::protobuf::Arena* arena, const Velocity& from);
  Velocity(::google::protobuf::Arena* arena, Velocity&& from) noexcept
      : Velocity(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::MessageLite::ClassData* GetClassData()
      const final;

 public:
  ::google::protobuf::Metadata GetMetadata() const final;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kXFieldNumber = 1,
    kYFieldNumber = 2,
    kZFieldNumber = 3,
  };
  // double x = 1;
  void clear_x() ;
  double x() const;
  void set_x(double value);

  private:
  double _internal_x() const;
  void _internal_set_x(double value);

  public:
  // double y = 2;
  void clear_y() ;
  double y() const;
  void set_y(double value);

  private:
  double _internal_y() const;
  void _internal_set_y(double value);

  public:
  // double z = 3;
  void clear_z() ;
  double z() const;
  void set_z(double value);

  private:
  double _internal_z() const;
  void _internal_set_z(double value);

  public:
  // @@protoc_insertion_point(class_scope:Velocity)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      2, 3, 0,
      0, 2>
      _table_;
  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from);
    double x_;
    double y_;
    double z_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_logic_2fcomponent_2factor_5fcomp_2eproto;
};
// -------------------------------------------------------------------

class Scale final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:Scale) */ {
 public:
  inline Scale() : Scale(nullptr) {}
  ~Scale() override;
  template <typename = void>
  explicit PROTOBUF_CONSTEXPR Scale(
      ::google::protobuf::internal::ConstantInitialized);

  inline Scale(const Scale& from) : Scale(nullptr, from) {}
  inline Scale(Scale&& from) noexcept
      : Scale(nullptr, std::move(from)) {}
  inline Scale& operator=(const Scale& from) {
    CopyFrom(from);
    return *this;
  }
  inline Scale& operator=(Scale&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
#ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
#endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const Scale& default_instance() {
    return *internal_default_instance();
  }
  static inline const Scale* internal_default_instance() {
    return reinterpret_cast<const Scale*>(
        &_Scale_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 2;
  friend void swap(Scale& a, Scale& b) { a.Swap(&b); }
  inline void Swap(Scale* other) {
    if (other == this) return;
#ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr && GetArena() == other->GetArena()) {
#else   // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
#endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(Scale* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  Scale* New(::google::protobuf::Arena* arena = nullptr) const final {
    return ::google::protobuf::Message::DefaultConstruct<Scale>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const Scale& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const Scale& from) { Scale::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  ::size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::google::protobuf::internal::ParseContext* ctx) final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(Scale* other);
 private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() { return "Scale"; }

 protected:
  explicit Scale(::google::protobuf::Arena* arena);
  Scale(::google::protobuf::Arena* arena, const Scale& from);
  Scale(::google::protobuf::Arena* arena, Scale&& from) noexcept
      : Scale(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::MessageLite::ClassData* GetClassData()
      const final;

 public:
  ::google::protobuf::Metadata GetMetadata() const final;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kXFieldNumber = 1,
    kYFieldNumber = 2,
    kZFieldNumber = 3,
  };
  // double x = 1;
  void clear_x() ;
  double x() const;
  void set_x(double value);

  private:
  double _internal_x() const;
  void _internal_set_x(double value);

  public:
  // double y = 2;
  void clear_y() ;
  double y() const;
  void set_y(double value);

  private:
  double _internal_y() const;
  void _internal_set_y(double value);

  public:
  // double z = 3;
  void clear_z() ;
  double z() const;
  void set_z(double value);

  private:
  double _internal_z() const;
  void _internal_set_z(double value);

  public:
  // @@protoc_insertion_point(class_scope:Scale)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      2, 3, 0,
      0, 2>
      _table_;
  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from);
    double x_;
    double y_;
    double z_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_logic_2fcomponent_2factor_5fcomp_2eproto;
};
// -------------------------------------------------------------------

class Rotation final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:Rotation) */ {
 public:
  inline Rotation() : Rotation(nullptr) {}
  ~Rotation() override;
  template <typename = void>
  explicit PROTOBUF_CONSTEXPR Rotation(
      ::google::protobuf::internal::ConstantInitialized);

  inline Rotation(const Rotation& from) : Rotation(nullptr, from) {}
  inline Rotation(Rotation&& from) noexcept
      : Rotation(nullptr, std::move(from)) {}
  inline Rotation& operator=(const Rotation& from) {
    CopyFrom(from);
    return *this;
  }
  inline Rotation& operator=(Rotation&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
#ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
#endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const Rotation& default_instance() {
    return *internal_default_instance();
  }
  static inline const Rotation* internal_default_instance() {
    return reinterpret_cast<const Rotation*>(
        &_Rotation_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 1;
  friend void swap(Rotation& a, Rotation& b) { a.Swap(&b); }
  inline void Swap(Rotation* other) {
    if (other == this) return;
#ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr && GetArena() == other->GetArena()) {
#else   // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
#endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(Rotation* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  Rotation* New(::google::protobuf::Arena* arena = nullptr) const final {
    return ::google::protobuf::Message::DefaultConstruct<Rotation>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const Rotation& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const Rotation& from) { Rotation::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  ::size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::google::protobuf::internal::ParseContext* ctx) final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(Rotation* other);
 private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() { return "Rotation"; }

 protected:
  explicit Rotation(::google::protobuf::Arena* arena);
  Rotation(::google::protobuf::Arena* arena, const Rotation& from);
  Rotation(::google::protobuf::Arena* arena, Rotation&& from) noexcept
      : Rotation(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::MessageLite::ClassData* GetClassData()
      const final;

 public:
  ::google::protobuf::Metadata GetMetadata() const final;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kXFieldNumber = 1,
    kYFieldNumber = 2,
    kZFieldNumber = 3,
  };
  // double x = 1;
  void clear_x() ;
  double x() const;
  void set_x(double value);

  private:
  double _internal_x() const;
  void _internal_set_x(double value);

  public:
  // double y = 2;
  void clear_y() ;
  double y() const;
  void set_y(double value);

  private:
  double _internal_y() const;
  void _internal_set_y(double value);

  public:
  // double z = 3;
  void clear_z() ;
  double z() const;
  void set_z(double value);

  private:
  double _internal_z() const;
  void _internal_set_z(double value);

  public:
  // @@protoc_insertion_point(class_scope:Rotation)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      2, 3, 0,
      0, 2>
      _table_;
  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from);
    double x_;
    double y_;
    double z_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_logic_2fcomponent_2factor_5fcomp_2eproto;
};
// -------------------------------------------------------------------

class Location final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:Location) */ {
 public:
  inline Location() : Location(nullptr) {}
  ~Location() override;
  template <typename = void>
  explicit PROTOBUF_CONSTEXPR Location(
      ::google::protobuf::internal::ConstantInitialized);

  inline Location(const Location& from) : Location(nullptr, from) {}
  inline Location(Location&& from) noexcept
      : Location(nullptr, std::move(from)) {}
  inline Location& operator=(const Location& from) {
    CopyFrom(from);
    return *this;
  }
  inline Location& operator=(Location&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
#ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
#endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const Location& default_instance() {
    return *internal_default_instance();
  }
  static inline const Location* internal_default_instance() {
    return reinterpret_cast<const Location*>(
        &_Location_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 0;
  friend void swap(Location& a, Location& b) { a.Swap(&b); }
  inline void Swap(Location* other) {
    if (other == this) return;
#ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr && GetArena() == other->GetArena()) {
#else   // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
#endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(Location* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  Location* New(::google::protobuf::Arena* arena = nullptr) const final {
    return ::google::protobuf::Message::DefaultConstruct<Location>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const Location& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const Location& from) { Location::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  ::size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::google::protobuf::internal::ParseContext* ctx) final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(Location* other);
 private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() { return "Location"; }

 protected:
  explicit Location(::google::protobuf::Arena* arena);
  Location(::google::protobuf::Arena* arena, const Location& from);
  Location(::google::protobuf::Arena* arena, Location&& from) noexcept
      : Location(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::MessageLite::ClassData* GetClassData()
      const final;

 public:
  ::google::protobuf::Metadata GetMetadata() const final;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kXFieldNumber = 1,
    kYFieldNumber = 2,
    kZFieldNumber = 3,
  };
  // double x = 1;
  void clear_x() ;
  double x() const;
  void set_x(double value);

  private:
  double _internal_x() const;
  void _internal_set_x(double value);

  public:
  // double y = 2;
  void clear_y() ;
  double y() const;
  void set_y(double value);

  private:
  double _internal_y() const;
  void _internal_set_y(double value);

  public:
  // double z = 3;
  void clear_z() ;
  double z() const;
  void set_z(double value);

  private:
  double _internal_z() const;
  void _internal_set_z(double value);

  public:
  // @@protoc_insertion_point(class_scope:Location)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      2, 3, 0,
      0, 2>
      _table_;
  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from);
    double x_;
    double y_;
    double z_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_logic_2fcomponent_2factor_5fcomp_2eproto;
};
// -------------------------------------------------------------------

class LevelComponent final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:LevelComponent) */ {
 public:
  inline LevelComponent() : LevelComponent(nullptr) {}
  ~LevelComponent() override;
  template <typename = void>
  explicit PROTOBUF_CONSTEXPR LevelComponent(
      ::google::protobuf::internal::ConstantInitialized);

  inline LevelComponent(const LevelComponent& from) : LevelComponent(nullptr, from) {}
  inline LevelComponent(LevelComponent&& from) noexcept
      : LevelComponent(nullptr, std::move(from)) {}
  inline LevelComponent& operator=(const LevelComponent& from) {
    CopyFrom(from);
    return *this;
  }
  inline LevelComponent& operator=(LevelComponent&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
#ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
#endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const LevelComponent& default_instance() {
    return *internal_default_instance();
  }
  static inline const LevelComponent* internal_default_instance() {
    return reinterpret_cast<const LevelComponent*>(
        &_LevelComponent_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 8;
  friend void swap(LevelComponent& a, LevelComponent& b) { a.Swap(&b); }
  inline void Swap(LevelComponent* other) {
    if (other == this) return;
#ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr && GetArena() == other->GetArena()) {
#else   // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
#endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(LevelComponent* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  LevelComponent* New(::google::protobuf::Arena* arena = nullptr) const final {
    return ::google::protobuf::Message::DefaultConstruct<LevelComponent>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const LevelComponent& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const LevelComponent& from) { LevelComponent::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  ::size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::google::protobuf::internal::ParseContext* ctx) final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(LevelComponent* other);
 private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() { return "LevelComponent"; }

 protected:
  explicit LevelComponent(::google::protobuf::Arena* arena);
  LevelComponent(::google::protobuf::Arena* arena, const LevelComponent& from);
  LevelComponent(::google::protobuf::Arena* arena, LevelComponent&& from) noexcept
      : LevelComponent(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::MessageLite::ClassData* GetClassData()
      const final;

 public:
  ::google::protobuf::Metadata GetMetadata() const final;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kLevelFieldNumber = 1,
  };
  // uint32 level = 1;
  void clear_level() ;
  ::uint32_t level() const;
  void set_level(::uint32_t value);

  private:
  ::uint32_t _internal_level() const;
  void _internal_set_level(::uint32_t value);

  public:
  // @@protoc_insertion_point(class_scope:LevelComponent)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      0, 1, 0,
      0, 2>
      _table_;
  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from);
    ::uint32_t level_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_logic_2fcomponent_2factor_5fcomp_2eproto;
};
// -------------------------------------------------------------------

class BaseAttributesPBComponent final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:BaseAttributesPBComponent) */ {
 public:
  inline BaseAttributesPBComponent() : BaseAttributesPBComponent(nullptr) {}
  ~BaseAttributesPBComponent() override;
  template <typename = void>
  explicit PROTOBUF_CONSTEXPR BaseAttributesPBComponent(
      ::google::protobuf::internal::ConstantInitialized);

  inline BaseAttributesPBComponent(const BaseAttributesPBComponent& from) : BaseAttributesPBComponent(nullptr, from) {}
  inline BaseAttributesPBComponent(BaseAttributesPBComponent&& from) noexcept
      : BaseAttributesPBComponent(nullptr, std::move(from)) {}
  inline BaseAttributesPBComponent& operator=(const BaseAttributesPBComponent& from) {
    CopyFrom(from);
    return *this;
  }
  inline BaseAttributesPBComponent& operator=(BaseAttributesPBComponent&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
#ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
#endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const BaseAttributesPBComponent& default_instance() {
    return *internal_default_instance();
  }
  static inline const BaseAttributesPBComponent* internal_default_instance() {
    return reinterpret_cast<const BaseAttributesPBComponent*>(
        &_BaseAttributesPBComponent_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 7;
  friend void swap(BaseAttributesPBComponent& a, BaseAttributesPBComponent& b) { a.Swap(&b); }
  inline void Swap(BaseAttributesPBComponent* other) {
    if (other == this) return;
#ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr && GetArena() == other->GetArena()) {
#else   // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
#endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(BaseAttributesPBComponent* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  BaseAttributesPBComponent* New(::google::protobuf::Arena* arena = nullptr) const final {
    return ::google::protobuf::Message::DefaultConstruct<BaseAttributesPBComponent>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const BaseAttributesPBComponent& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const BaseAttributesPBComponent& from) { BaseAttributesPBComponent::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  ::size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::google::protobuf::internal::ParseContext* ctx) final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(BaseAttributesPBComponent* other);
 private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() { return "BaseAttributesPBComponent"; }

 protected:
  explicit BaseAttributesPBComponent(::google::protobuf::Arena* arena);
  BaseAttributesPBComponent(::google::protobuf::Arena* arena, const BaseAttributesPBComponent& from);
  BaseAttributesPBComponent(::google::protobuf::Arena* arena, BaseAttributesPBComponent&& from) noexcept
      : BaseAttributesPBComponent(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::MessageLite::ClassData* GetClassData()
      const final;

 public:
  ::google::protobuf::Metadata GetMetadata() const final;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kStrengthFieldNumber = 1,
    kStaminaFieldNumber = 2,
    kHealthFieldNumber = 3,
    kManaFieldNumber = 4,
  };
  // uint64 strength = 1;
  void clear_strength() ;
  ::uint64_t strength() const;
  void set_strength(::uint64_t value);

  private:
  ::uint64_t _internal_strength() const;
  void _internal_set_strength(::uint64_t value);

  public:
  // uint64 stamina = 2;
  void clear_stamina() ;
  ::uint64_t stamina() const;
  void set_stamina(::uint64_t value);

  private:
  ::uint64_t _internal_stamina() const;
  void _internal_set_stamina(::uint64_t value);

  public:
  // uint64 health = 3;
  void clear_health() ;
  ::uint64_t health() const;
  void set_health(::uint64_t value);

  private:
  ::uint64_t _internal_health() const;
  void _internal_set_health(::uint64_t value);

  public:
  // uint64 mana = 4;
  void clear_mana() ;
  ::uint64_t mana() const;
  void set_mana(::uint64_t value);

  private:
  ::uint64_t _internal_mana() const;
  void _internal_set_mana(::uint64_t value);

  public:
  // @@protoc_insertion_point(class_scope:BaseAttributesPBComponent)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      2, 4, 0,
      0, 2>
      _table_;
  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from);
    ::uint64_t strength_;
    ::uint64_t stamina_;
    ::uint64_t health_;
    ::uint64_t mana_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_logic_2fcomponent_2factor_5fcomp_2eproto;
};
// -------------------------------------------------------------------

class Acceleration final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:Acceleration) */ {
 public:
  inline Acceleration() : Acceleration(nullptr) {}
  ~Acceleration() override;
  template <typename = void>
  explicit PROTOBUF_CONSTEXPR Acceleration(
      ::google::protobuf::internal::ConstantInitialized);

  inline Acceleration(const Acceleration& from) : Acceleration(nullptr, from) {}
  inline Acceleration(Acceleration&& from) noexcept
      : Acceleration(nullptr, std::move(from)) {}
  inline Acceleration& operator=(const Acceleration& from) {
    CopyFrom(from);
    return *this;
  }
  inline Acceleration& operator=(Acceleration&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
#ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
#endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const Acceleration& default_instance() {
    return *internal_default_instance();
  }
  static inline const Acceleration* internal_default_instance() {
    return reinterpret_cast<const Acceleration*>(
        &_Acceleration_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 5;
  friend void swap(Acceleration& a, Acceleration& b) { a.Swap(&b); }
  inline void Swap(Acceleration* other) {
    if (other == this) return;
#ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr && GetArena() == other->GetArena()) {
#else   // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
#endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(Acceleration* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  Acceleration* New(::google::protobuf::Arena* arena = nullptr) const final {
    return ::google::protobuf::Message::DefaultConstruct<Acceleration>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const Acceleration& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const Acceleration& from) { Acceleration::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  ::size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::google::protobuf::internal::ParseContext* ctx) final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(Acceleration* other);
 private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() { return "Acceleration"; }

 protected:
  explicit Acceleration(::google::protobuf::Arena* arena);
  Acceleration(::google::protobuf::Arena* arena, const Acceleration& from);
  Acceleration(::google::protobuf::Arena* arena, Acceleration&& from) noexcept
      : Acceleration(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::MessageLite::ClassData* GetClassData()
      const final;

 public:
  ::google::protobuf::Metadata GetMetadata() const final;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kXFieldNumber = 1,
    kYFieldNumber = 2,
    kZFieldNumber = 3,
  };
  // double x = 1;
  void clear_x() ;
  double x() const;
  void set_x(double value);

  private:
  double _internal_x() const;
  void _internal_set_x(double value);

  public:
  // double y = 2;
  void clear_y() ;
  double y() const;
  void set_y(double value);

  private:
  double _internal_y() const;
  void _internal_set_y(double value);

  public:
  // double z = 3;
  void clear_z() ;
  double z() const;
  void set_z(double value);

  private:
  double _internal_z() const;
  void _internal_set_z(double value);

  public:
  // @@protoc_insertion_point(class_scope:Acceleration)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      2, 3, 0,
      0, 2>
      _table_;
  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from);
    double x_;
    double y_;
    double z_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_logic_2fcomponent_2factor_5fcomp_2eproto;
};
// -------------------------------------------------------------------

class Transform final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:Transform) */ {
 public:
  inline Transform() : Transform(nullptr) {}
  ~Transform() override;
  template <typename = void>
  explicit PROTOBUF_CONSTEXPR Transform(
      ::google::protobuf::internal::ConstantInitialized);

  inline Transform(const Transform& from) : Transform(nullptr, from) {}
  inline Transform(Transform&& from) noexcept
      : Transform(nullptr, std::move(from)) {}
  inline Transform& operator=(const Transform& from) {
    CopyFrom(from);
    return *this;
  }
  inline Transform& operator=(Transform&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
#ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
#endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const Transform& default_instance() {
    return *internal_default_instance();
  }
  static inline const Transform* internal_default_instance() {
    return reinterpret_cast<const Transform*>(
        &_Transform_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 3;
  friend void swap(Transform& a, Transform& b) { a.Swap(&b); }
  inline void Swap(Transform* other) {
    if (other == this) return;
#ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr && GetArena() == other->GetArena()) {
#else   // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
#endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(Transform* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  Transform* New(::google::protobuf::Arena* arena = nullptr) const final {
    return ::google::protobuf::Message::DefaultConstruct<Transform>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const Transform& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const Transform& from) { Transform::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  ::size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::google::protobuf::internal::ParseContext* ctx) final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(Transform* other);
 private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() { return "Transform"; }

 protected:
  explicit Transform(::google::protobuf::Arena* arena);
  Transform(::google::protobuf::Arena* arena, const Transform& from);
  Transform(::google::protobuf::Arena* arena, Transform&& from) noexcept
      : Transform(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::MessageLite::ClassData* GetClassData()
      const final;

 public:
  ::google::protobuf::Metadata GetMetadata() const final;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kLocationFieldNumber = 1,
    kRotationFieldNumber = 2,
    kScaleFieldNumber = 3,
  };
  // .Vector3 location = 1;
  bool has_location() const;
  void clear_location() ;
  const ::Vector3& location() const;
  PROTOBUF_NODISCARD ::Vector3* release_location();
  ::Vector3* mutable_location();
  void set_allocated_location(::Vector3* value);
  void unsafe_arena_set_allocated_location(::Vector3* value);
  ::Vector3* unsafe_arena_release_location();

  private:
  const ::Vector3& _internal_location() const;
  ::Vector3* _internal_mutable_location();

  public:
  // .Rotation rotation = 2;
  bool has_rotation() const;
  void clear_rotation() ;
  const ::Rotation& rotation() const;
  PROTOBUF_NODISCARD ::Rotation* release_rotation();
  ::Rotation* mutable_rotation();
  void set_allocated_rotation(::Rotation* value);
  void unsafe_arena_set_allocated_rotation(::Rotation* value);
  ::Rotation* unsafe_arena_release_rotation();

  private:
  const ::Rotation& _internal_rotation() const;
  ::Rotation* _internal_mutable_rotation();

  public:
  // .Scale scale = 3;
  bool has_scale() const;
  void clear_scale() ;
  const ::Scale& scale() const;
  PROTOBUF_NODISCARD ::Scale* release_scale();
  ::Scale* mutable_scale();
  void set_allocated_scale(::Scale* value);
  void unsafe_arena_set_allocated_scale(::Scale* value);
  ::Scale* unsafe_arena_release_scale();

  private:
  const ::Scale& _internal_scale() const;
  ::Scale* _internal_mutable_scale();

  public:
  // @@protoc_insertion_point(class_scope:Transform)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      2, 3, 3,
      0, 2>
      _table_;
  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from);
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    ::Vector3* location_;
    ::Rotation* rotation_;
    ::Scale* scale_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_logic_2fcomponent_2factor_5fcomp_2eproto;
};

// ===================================================================




// ===================================================================


#ifdef __GNUC__
#pragma GCC diagnostic push
#pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif  // __GNUC__
// -------------------------------------------------------------------

// Location

// double x = 1;
inline void Location::clear_x() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.x_ = 0;
}
inline double Location::x() const {
  // @@protoc_insertion_point(field_get:Location.x)
  return _internal_x();
}
inline void Location::set_x(double value) {
  _internal_set_x(value);
  // @@protoc_insertion_point(field_set:Location.x)
}
inline double Location::_internal_x() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.x_;
}
inline void Location::_internal_set_x(double value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.x_ = value;
}

// double y = 2;
inline void Location::clear_y() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.y_ = 0;
}
inline double Location::y() const {
  // @@protoc_insertion_point(field_get:Location.y)
  return _internal_y();
}
inline void Location::set_y(double value) {
  _internal_set_y(value);
  // @@protoc_insertion_point(field_set:Location.y)
}
inline double Location::_internal_y() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.y_;
}
inline void Location::_internal_set_y(double value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.y_ = value;
}

// double z = 3;
inline void Location::clear_z() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.z_ = 0;
}
inline double Location::z() const {
  // @@protoc_insertion_point(field_get:Location.z)
  return _internal_z();
}
inline void Location::set_z(double value) {
  _internal_set_z(value);
  // @@protoc_insertion_point(field_set:Location.z)
}
inline double Location::_internal_z() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.z_;
}
inline void Location::_internal_set_z(double value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.z_ = value;
}

// -------------------------------------------------------------------

// Rotation

// double x = 1;
inline void Rotation::clear_x() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.x_ = 0;
}
inline double Rotation::x() const {
  // @@protoc_insertion_point(field_get:Rotation.x)
  return _internal_x();
}
inline void Rotation::set_x(double value) {
  _internal_set_x(value);
  // @@protoc_insertion_point(field_set:Rotation.x)
}
inline double Rotation::_internal_x() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.x_;
}
inline void Rotation::_internal_set_x(double value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.x_ = value;
}

// double y = 2;
inline void Rotation::clear_y() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.y_ = 0;
}
inline double Rotation::y() const {
  // @@protoc_insertion_point(field_get:Rotation.y)
  return _internal_y();
}
inline void Rotation::set_y(double value) {
  _internal_set_y(value);
  // @@protoc_insertion_point(field_set:Rotation.y)
}
inline double Rotation::_internal_y() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.y_;
}
inline void Rotation::_internal_set_y(double value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.y_ = value;
}

// double z = 3;
inline void Rotation::clear_z() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.z_ = 0;
}
inline double Rotation::z() const {
  // @@protoc_insertion_point(field_get:Rotation.z)
  return _internal_z();
}
inline void Rotation::set_z(double value) {
  _internal_set_z(value);
  // @@protoc_insertion_point(field_set:Rotation.z)
}
inline double Rotation::_internal_z() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.z_;
}
inline void Rotation::_internal_set_z(double value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.z_ = value;
}

// -------------------------------------------------------------------

// Scale

// double x = 1;
inline void Scale::clear_x() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.x_ = 0;
}
inline double Scale::x() const {
  // @@protoc_insertion_point(field_get:Scale.x)
  return _internal_x();
}
inline void Scale::set_x(double value) {
  _internal_set_x(value);
  // @@protoc_insertion_point(field_set:Scale.x)
}
inline double Scale::_internal_x() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.x_;
}
inline void Scale::_internal_set_x(double value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.x_ = value;
}

// double y = 2;
inline void Scale::clear_y() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.y_ = 0;
}
inline double Scale::y() const {
  // @@protoc_insertion_point(field_get:Scale.y)
  return _internal_y();
}
inline void Scale::set_y(double value) {
  _internal_set_y(value);
  // @@protoc_insertion_point(field_set:Scale.y)
}
inline double Scale::_internal_y() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.y_;
}
inline void Scale::_internal_set_y(double value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.y_ = value;
}

// double z = 3;
inline void Scale::clear_z() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.z_ = 0;
}
inline double Scale::z() const {
  // @@protoc_insertion_point(field_get:Scale.z)
  return _internal_z();
}
inline void Scale::set_z(double value) {
  _internal_set_z(value);
  // @@protoc_insertion_point(field_set:Scale.z)
}
inline double Scale::_internal_z() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.z_;
}
inline void Scale::_internal_set_z(double value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.z_ = value;
}

// -------------------------------------------------------------------

// Transform

// .Vector3 location = 1;
inline bool Transform::has_location() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.location_ != nullptr);
  return value;
}
inline const ::Vector3& Transform::_internal_location() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  const ::Vector3* p = _impl_.location_;
  return p != nullptr ? *p : reinterpret_cast<const ::Vector3&>(::_Vector3_default_instance_);
}
inline const ::Vector3& Transform::location() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:Transform.location)
  return _internal_location();
}
inline void Transform::unsafe_arena_set_allocated_location(::Vector3* value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.location_);
  }
  _impl_.location_ = reinterpret_cast<::Vector3*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:Transform.location)
}
inline ::Vector3* Transform::release_location() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::Vector3* released = _impl_.location_;
  _impl_.location_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
  auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
  released = ::google::protobuf::internal::DuplicateIfNonNull(released);
  if (GetArena() == nullptr) {
    delete old;
  }
#else   // PROTOBUF_FORCE_COPY_IN_RELEASE
  if (GetArena() != nullptr) {
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
  }
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
  return released;
}
inline ::Vector3* Transform::unsafe_arena_release_location() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  // @@protoc_insertion_point(field_release:Transform.location)

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::Vector3* temp = _impl_.location_;
  _impl_.location_ = nullptr;
  return temp;
}
inline ::Vector3* Transform::_internal_mutable_location() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  if (_impl_.location_ == nullptr) {
    auto* p = ::google::protobuf::Message::DefaultConstruct<::Vector3>(GetArena());
    _impl_.location_ = reinterpret_cast<::Vector3*>(p);
  }
  return _impl_.location_;
}
inline ::Vector3* Transform::mutable_location() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  _impl_._has_bits_[0] |= 0x00000001u;
  ::Vector3* _msg = _internal_mutable_location();
  // @@protoc_insertion_point(field_mutable:Transform.location)
  return _msg;
}
inline void Transform::set_allocated_location(::Vector3* value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  if (message_arena == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.location_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = reinterpret_cast<::google::protobuf::MessageLite*>(value)->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }

  _impl_.location_ = reinterpret_cast<::Vector3*>(value);
  // @@protoc_insertion_point(field_set_allocated:Transform.location)
}

// .Rotation rotation = 2;
inline bool Transform::has_rotation() const {
  bool value = (_impl_._has_bits_[0] & 0x00000002u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.rotation_ != nullptr);
  return value;
}
inline void Transform::clear_rotation() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  if (_impl_.rotation_ != nullptr) _impl_.rotation_->Clear();
  _impl_._has_bits_[0] &= ~0x00000002u;
}
inline const ::Rotation& Transform::_internal_rotation() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  const ::Rotation* p = _impl_.rotation_;
  return p != nullptr ? *p : reinterpret_cast<const ::Rotation&>(::_Rotation_default_instance_);
}
inline const ::Rotation& Transform::rotation() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:Transform.rotation)
  return _internal_rotation();
}
inline void Transform::unsafe_arena_set_allocated_rotation(::Rotation* value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.rotation_);
  }
  _impl_.rotation_ = reinterpret_cast<::Rotation*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000002u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000002u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:Transform.rotation)
}
inline ::Rotation* Transform::release_rotation() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);

  _impl_._has_bits_[0] &= ~0x00000002u;
  ::Rotation* released = _impl_.rotation_;
  _impl_.rotation_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
  auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
  released = ::google::protobuf::internal::DuplicateIfNonNull(released);
  if (GetArena() == nullptr) {
    delete old;
  }
#else   // PROTOBUF_FORCE_COPY_IN_RELEASE
  if (GetArena() != nullptr) {
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
  }
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
  return released;
}
inline ::Rotation* Transform::unsafe_arena_release_rotation() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  // @@protoc_insertion_point(field_release:Transform.rotation)

  _impl_._has_bits_[0] &= ~0x00000002u;
  ::Rotation* temp = _impl_.rotation_;
  _impl_.rotation_ = nullptr;
  return temp;
}
inline ::Rotation* Transform::_internal_mutable_rotation() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  if (_impl_.rotation_ == nullptr) {
    auto* p = ::google::protobuf::Message::DefaultConstruct<::Rotation>(GetArena());
    _impl_.rotation_ = reinterpret_cast<::Rotation*>(p);
  }
  return _impl_.rotation_;
}
inline ::Rotation* Transform::mutable_rotation() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  _impl_._has_bits_[0] |= 0x00000002u;
  ::Rotation* _msg = _internal_mutable_rotation();
  // @@protoc_insertion_point(field_mutable:Transform.rotation)
  return _msg;
}
inline void Transform::set_allocated_rotation(::Rotation* value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  if (message_arena == nullptr) {
    delete (_impl_.rotation_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = (value)->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000002u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000002u;
  }

  _impl_.rotation_ = reinterpret_cast<::Rotation*>(value);
  // @@protoc_insertion_point(field_set_allocated:Transform.rotation)
}

// .Scale scale = 3;
inline bool Transform::has_scale() const {
  bool value = (_impl_._has_bits_[0] & 0x00000004u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.scale_ != nullptr);
  return value;
}
inline void Transform::clear_scale() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  if (_impl_.scale_ != nullptr) _impl_.scale_->Clear();
  _impl_._has_bits_[0] &= ~0x00000004u;
}
inline const ::Scale& Transform::_internal_scale() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  const ::Scale* p = _impl_.scale_;
  return p != nullptr ? *p : reinterpret_cast<const ::Scale&>(::_Scale_default_instance_);
}
inline const ::Scale& Transform::scale() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:Transform.scale)
  return _internal_scale();
}
inline void Transform::unsafe_arena_set_allocated_scale(::Scale* value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.scale_);
  }
  _impl_.scale_ = reinterpret_cast<::Scale*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000004u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000004u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:Transform.scale)
}
inline ::Scale* Transform::release_scale() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);

  _impl_._has_bits_[0] &= ~0x00000004u;
  ::Scale* released = _impl_.scale_;
  _impl_.scale_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
  auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
  released = ::google::protobuf::internal::DuplicateIfNonNull(released);
  if (GetArena() == nullptr) {
    delete old;
  }
#else   // PROTOBUF_FORCE_COPY_IN_RELEASE
  if (GetArena() != nullptr) {
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
  }
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
  return released;
}
inline ::Scale* Transform::unsafe_arena_release_scale() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  // @@protoc_insertion_point(field_release:Transform.scale)

  _impl_._has_bits_[0] &= ~0x00000004u;
  ::Scale* temp = _impl_.scale_;
  _impl_.scale_ = nullptr;
  return temp;
}
inline ::Scale* Transform::_internal_mutable_scale() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  if (_impl_.scale_ == nullptr) {
    auto* p = ::google::protobuf::Message::DefaultConstruct<::Scale>(GetArena());
    _impl_.scale_ = reinterpret_cast<::Scale*>(p);
  }
  return _impl_.scale_;
}
inline ::Scale* Transform::mutable_scale() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  _impl_._has_bits_[0] |= 0x00000004u;
  ::Scale* _msg = _internal_mutable_scale();
  // @@protoc_insertion_point(field_mutable:Transform.scale)
  return _msg;
}
inline void Transform::set_allocated_scale(::Scale* value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  if (message_arena == nullptr) {
    delete (_impl_.scale_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = (value)->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000004u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000004u;
  }

  _impl_.scale_ = reinterpret_cast<::Scale*>(value);
  // @@protoc_insertion_point(field_set_allocated:Transform.scale)
}

// -------------------------------------------------------------------

// Velocity

// double x = 1;
inline void Velocity::clear_x() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.x_ = 0;
}
inline double Velocity::x() const {
  // @@protoc_insertion_point(field_get:Velocity.x)
  return _internal_x();
}
inline void Velocity::set_x(double value) {
  _internal_set_x(value);
  // @@protoc_insertion_point(field_set:Velocity.x)
}
inline double Velocity::_internal_x() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.x_;
}
inline void Velocity::_internal_set_x(double value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.x_ = value;
}

// double y = 2;
inline void Velocity::clear_y() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.y_ = 0;
}
inline double Velocity::y() const {
  // @@protoc_insertion_point(field_get:Velocity.y)
  return _internal_y();
}
inline void Velocity::set_y(double value) {
  _internal_set_y(value);
  // @@protoc_insertion_point(field_set:Velocity.y)
}
inline double Velocity::_internal_y() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.y_;
}
inline void Velocity::_internal_set_y(double value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.y_ = value;
}

// double z = 3;
inline void Velocity::clear_z() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.z_ = 0;
}
inline double Velocity::z() const {
  // @@protoc_insertion_point(field_get:Velocity.z)
  return _internal_z();
}
inline void Velocity::set_z(double value) {
  _internal_set_z(value);
  // @@protoc_insertion_point(field_set:Velocity.z)
}
inline double Velocity::_internal_z() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.z_;
}
inline void Velocity::_internal_set_z(double value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.z_ = value;
}

// -------------------------------------------------------------------

// Acceleration

// double x = 1;
inline void Acceleration::clear_x() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.x_ = 0;
}
inline double Acceleration::x() const {
  // @@protoc_insertion_point(field_get:Acceleration.x)
  return _internal_x();
}
inline void Acceleration::set_x(double value) {
  _internal_set_x(value);
  // @@protoc_insertion_point(field_set:Acceleration.x)
}
inline double Acceleration::_internal_x() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.x_;
}
inline void Acceleration::_internal_set_x(double value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.x_ = value;
}

// double y = 2;
inline void Acceleration::clear_y() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.y_ = 0;
}
inline double Acceleration::y() const {
  // @@protoc_insertion_point(field_get:Acceleration.y)
  return _internal_y();
}
inline void Acceleration::set_y(double value) {
  _internal_set_y(value);
  // @@protoc_insertion_point(field_set:Acceleration.y)
}
inline double Acceleration::_internal_y() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.y_;
}
inline void Acceleration::_internal_set_y(double value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.y_ = value;
}

// double z = 3;
inline void Acceleration::clear_z() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.z_ = 0;
}
inline double Acceleration::z() const {
  // @@protoc_insertion_point(field_get:Acceleration.z)
  return _internal_z();
}
inline void Acceleration::set_z(double value) {
  _internal_set_z(value);
  // @@protoc_insertion_point(field_set:Acceleration.z)
}
inline double Acceleration::_internal_z() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.z_;
}
inline void Acceleration::_internal_set_z(double value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.z_ = value;
}

// -------------------------------------------------------------------

// ViewRadius

// double radius = 1;
inline void ViewRadius::clear_radius() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.radius_ = 0;
}
inline double ViewRadius::radius() const {
  // @@protoc_insertion_point(field_get:ViewRadius.radius)
  return _internal_radius();
}
inline void ViewRadius::set_radius(double value) {
  _internal_set_radius(value);
  // @@protoc_insertion_point(field_set:ViewRadius.radius)
}
inline double ViewRadius::_internal_radius() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.radius_;
}
inline void ViewRadius::_internal_set_radius(double value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.radius_ = value;
}

// -------------------------------------------------------------------

// BaseAttributesPBComponent

// uint64 strength = 1;
inline void BaseAttributesPBComponent::clear_strength() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.strength_ = ::uint64_t{0u};
}
inline ::uint64_t BaseAttributesPBComponent::strength() const {
  // @@protoc_insertion_point(field_get:BaseAttributesPBComponent.strength)
  return _internal_strength();
}
inline void BaseAttributesPBComponent::set_strength(::uint64_t value) {
  _internal_set_strength(value);
  // @@protoc_insertion_point(field_set:BaseAttributesPBComponent.strength)
}
inline ::uint64_t BaseAttributesPBComponent::_internal_strength() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.strength_;
}
inline void BaseAttributesPBComponent::_internal_set_strength(::uint64_t value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.strength_ = value;
}

// uint64 stamina = 2;
inline void BaseAttributesPBComponent::clear_stamina() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.stamina_ = ::uint64_t{0u};
}
inline ::uint64_t BaseAttributesPBComponent::stamina() const {
  // @@protoc_insertion_point(field_get:BaseAttributesPBComponent.stamina)
  return _internal_stamina();
}
inline void BaseAttributesPBComponent::set_stamina(::uint64_t value) {
  _internal_set_stamina(value);
  // @@protoc_insertion_point(field_set:BaseAttributesPBComponent.stamina)
}
inline ::uint64_t BaseAttributesPBComponent::_internal_stamina() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.stamina_;
}
inline void BaseAttributesPBComponent::_internal_set_stamina(::uint64_t value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.stamina_ = value;
}

// uint64 health = 3;
inline void BaseAttributesPBComponent::clear_health() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.health_ = ::uint64_t{0u};
}
inline ::uint64_t BaseAttributesPBComponent::health() const {
  // @@protoc_insertion_point(field_get:BaseAttributesPBComponent.health)
  return _internal_health();
}
inline void BaseAttributesPBComponent::set_health(::uint64_t value) {
  _internal_set_health(value);
  // @@protoc_insertion_point(field_set:BaseAttributesPBComponent.health)
}
inline ::uint64_t BaseAttributesPBComponent::_internal_health() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.health_;
}
inline void BaseAttributesPBComponent::_internal_set_health(::uint64_t value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.health_ = value;
}

// uint64 mana = 4;
inline void BaseAttributesPBComponent::clear_mana() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.mana_ = ::uint64_t{0u};
}
inline ::uint64_t BaseAttributesPBComponent::mana() const {
  // @@protoc_insertion_point(field_get:BaseAttributesPBComponent.mana)
  return _internal_mana();
}
inline void BaseAttributesPBComponent::set_mana(::uint64_t value) {
  _internal_set_mana(value);
  // @@protoc_insertion_point(field_set:BaseAttributesPBComponent.mana)
}
inline ::uint64_t BaseAttributesPBComponent::_internal_mana() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.mana_;
}
inline void BaseAttributesPBComponent::_internal_set_mana(::uint64_t value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.mana_ = value;
}

// -------------------------------------------------------------------

// LevelComponent

// uint32 level = 1;
inline void LevelComponent::clear_level() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.level_ = 0u;
}
inline ::uint32_t LevelComponent::level() const {
  // @@protoc_insertion_point(field_get:LevelComponent.level)
  return _internal_level();
}
inline void LevelComponent::set_level(::uint32_t value) {
  _internal_set_level(value);
  // @@protoc_insertion_point(field_set:LevelComponent.level)
}
inline ::uint32_t LevelComponent::_internal_level() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.level_;
}
inline void LevelComponent::_internal_set_level(::uint32_t value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.level_ = value;
}

#ifdef __GNUC__
#pragma GCC diagnostic pop
#endif  // __GNUC__

// @@protoc_insertion_point(namespace_scope)


// @@protoc_insertion_point(global_scope)

#include "google/protobuf/port_undef.inc"

#endif  // GOOGLE_PROTOBUF_INCLUDED_logic_2fcomponent_2factor_5fcomp_2eproto_2epb_2eh
