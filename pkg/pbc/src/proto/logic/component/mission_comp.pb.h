// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: logic/component/mission_comp.proto
// Protobuf C++ Version: 5.26.1

#ifndef GOOGLE_PROTOBUF_INCLUDED_logic_2fcomponent_2fmission_5fcomp_2eproto_2epb_2eh
#define GOOGLE_PROTOBUF_INCLUDED_logic_2fcomponent_2fmission_5fcomp_2eproto_2epb_2eh

#include <limits>
#include <string>
#include <type_traits>
#include <utility>

#include "google/protobuf/port_def.inc"
#if PROTOBUF_VERSION != 5026001
#error "Protobuf C++ gencode is built with an incompatible version of"
#error "Protobuf C++ headers/runtime. See"
#error "https://protobuf.dev/support/cross-version-runtime-guarantee/#cpp"
#endif
#include "google/protobuf/port_undef.inc"
#include "google/protobuf/io/coded_stream.h"
#include "google/protobuf/arena.h"
#include "google/protobuf/arenastring.h"
#include "google/protobuf/generated_message_tctable_decl.h"
#include "google/protobuf/generated_message_util.h"
#include "google/protobuf/metadata_lite.h"
#include "google/protobuf/generated_message_reflection.h"
#include "google/protobuf/message.h"
#include "google/protobuf/repeated_field.h"  // IWYU pragma: export
#include "google/protobuf/extension_set.h"  // IWYU pragma: export
#include "google/protobuf/map.h"  // IWYU pragma: export
#include "google/protobuf/map_entry.h"
#include "google/protobuf/map_field_inl.h"
#include "google/protobuf/generated_enum_reflection.h"
#include "google/protobuf/unknown_field_set.h"
// @@protoc_insertion_point(includes)

// Must be included last.
#include "google/protobuf/port_def.inc"

#define PROTOBUF_INTERNAL_EXPORT_logic_2fcomponent_2fmission_5fcomp_2eproto

namespace google {
namespace protobuf {
namespace internal {
class AnyMetadata;
}  // namespace internal
}  // namespace protobuf
}  // namespace google

// Internal implementation detail -- do not use these members.
struct TableStruct_logic_2fcomponent_2fmission_5fcomp_2eproto {
  static const ::uint32_t offsets[];
};
extern const ::google::protobuf::internal::DescriptorTable
    descriptor_table_logic_2fcomponent_2fmission_5fcomp_2eproto;
class MissionListPBComp;
struct MissionListPBCompDefaultTypeInternal;
extern MissionListPBCompDefaultTypeInternal _MissionListPBComp_default_instance_;
class MissionListPBComp_CompleteMissionsEntry_DoNotUse;
struct MissionListPBComp_CompleteMissionsEntry_DoNotUseDefaultTypeInternal;
extern MissionListPBComp_CompleteMissionsEntry_DoNotUseDefaultTypeInternal _MissionListPBComp_CompleteMissionsEntry_DoNotUse_default_instance_;
class MissionListPBComp_MissionBeginTimeEntry_DoNotUse;
struct MissionListPBComp_MissionBeginTimeEntry_DoNotUseDefaultTypeInternal;
extern MissionListPBComp_MissionBeginTimeEntry_DoNotUseDefaultTypeInternal _MissionListPBComp_MissionBeginTimeEntry_DoNotUse_default_instance_;
class MissionListPBComp_MissionsEntry_DoNotUse;
struct MissionListPBComp_MissionsEntry_DoNotUseDefaultTypeInternal;
extern MissionListPBComp_MissionsEntry_DoNotUseDefaultTypeInternal _MissionListPBComp_MissionsEntry_DoNotUse_default_instance_;
class MissionPBComp;
struct MissionPBCompDefaultTypeInternal;
extern MissionPBCompDefaultTypeInternal _MissionPBComp_default_instance_;
class RewardListPBComp;
struct RewardListPBCompDefaultTypeInternal;
extern RewardListPBCompDefaultTypeInternal _RewardListPBComp_default_instance_;
class RewardListPBComp_CanRewardMissionIdEntry_DoNotUse;
struct RewardListPBComp_CanRewardMissionIdEntry_DoNotUseDefaultTypeInternal;
extern RewardListPBComp_CanRewardMissionIdEntry_DoNotUseDefaultTypeInternal _RewardListPBComp_CanRewardMissionIdEntry_DoNotUse_default_instance_;
namespace google {
namespace protobuf {
}  // namespace protobuf
}  // namespace google

enum MissionPBComp_eMissionStatus : int {
  MissionPBComp_eMissionStatus_E_MISSION_NORMAL = 0,
  MissionPBComp_eMissionStatus_E_MISSION_ACHIEVEMENT = 1,
  MissionPBComp_eMissionStatus_E_MISSION_COMPLETE = 2,
  MissionPBComp_eMissionStatus_E_MISSION_TIME_OUT = 3,
  MissionPBComp_eMissionStatus_E_MISSION_FAILD = 4,
  MissionPBComp_eMissionStatus_MissionPBComp_eMissionStatus_INT_MIN_SENTINEL_DO_NOT_USE_ =
      std::numeric_limits<::int32_t>::min(),
  MissionPBComp_eMissionStatus_MissionPBComp_eMissionStatus_INT_MAX_SENTINEL_DO_NOT_USE_ =
      std::numeric_limits<::int32_t>::max(),
};

bool MissionPBComp_eMissionStatus_IsValid(int value);
extern const uint32_t MissionPBComp_eMissionStatus_internal_data_[];
constexpr MissionPBComp_eMissionStatus MissionPBComp_eMissionStatus_eMissionStatus_MIN = static_cast<MissionPBComp_eMissionStatus>(0);
constexpr MissionPBComp_eMissionStatus MissionPBComp_eMissionStatus_eMissionStatus_MAX = static_cast<MissionPBComp_eMissionStatus>(4);
constexpr int MissionPBComp_eMissionStatus_eMissionStatus_ARRAYSIZE = 4 + 1;
const ::google::protobuf::EnumDescriptor*
MissionPBComp_eMissionStatus_descriptor();
template <typename T>
const std::string& MissionPBComp_eMissionStatus_Name(T value) {
  static_assert(std::is_same<T, MissionPBComp_eMissionStatus>::value ||
                    std::is_integral<T>::value,
                "Incorrect type passed to eMissionStatus_Name().");
  return MissionPBComp_eMissionStatus_Name(static_cast<MissionPBComp_eMissionStatus>(value));
}
template <>
inline const std::string& MissionPBComp_eMissionStatus_Name(MissionPBComp_eMissionStatus value) {
  return ::google::protobuf::internal::NameOfDenseEnum<MissionPBComp_eMissionStatus_descriptor,
                                                 0, 4>(
      static_cast<int>(value));
}
inline bool MissionPBComp_eMissionStatus_Parse(absl::string_view name, MissionPBComp_eMissionStatus* value) {
  return ::google::protobuf::internal::ParseNamedEnum<MissionPBComp_eMissionStatus>(
      MissionPBComp_eMissionStatus_descriptor(), name, value);
}
enum MissionListPBComp_eMissionType : int {
  MissionListPBComp_eMissionType_kPlayerMission = 0,
  MissionListPBComp_eMissionType_kPlayerAchievment = 1,
  MissionListPBComp_eMissionType_kPlayerDailyActivity = 2,
  MissionListPBComp_eMissionType_kPlayerMissionSize = 3,
  MissionListPBComp_eMissionType_MissionListPBComp_eMissionType_INT_MIN_SENTINEL_DO_NOT_USE_ =
      std::numeric_limits<::int32_t>::min(),
  MissionListPBComp_eMissionType_MissionListPBComp_eMissionType_INT_MAX_SENTINEL_DO_NOT_USE_ =
      std::numeric_limits<::int32_t>::max(),
};

bool MissionListPBComp_eMissionType_IsValid(int value);
extern const uint32_t MissionListPBComp_eMissionType_internal_data_[];
constexpr MissionListPBComp_eMissionType MissionListPBComp_eMissionType_eMissionType_MIN = static_cast<MissionListPBComp_eMissionType>(0);
constexpr MissionListPBComp_eMissionType MissionListPBComp_eMissionType_eMissionType_MAX = static_cast<MissionListPBComp_eMissionType>(3);
constexpr int MissionListPBComp_eMissionType_eMissionType_ARRAYSIZE = 3 + 1;
const ::google::protobuf::EnumDescriptor*
MissionListPBComp_eMissionType_descriptor();
template <typename T>
const std::string& MissionListPBComp_eMissionType_Name(T value) {
  static_assert(std::is_same<T, MissionListPBComp_eMissionType>::value ||
                    std::is_integral<T>::value,
                "Incorrect type passed to eMissionType_Name().");
  return MissionListPBComp_eMissionType_Name(static_cast<MissionListPBComp_eMissionType>(value));
}
template <>
inline const std::string& MissionListPBComp_eMissionType_Name(MissionListPBComp_eMissionType value) {
  return ::google::protobuf::internal::NameOfDenseEnum<MissionListPBComp_eMissionType_descriptor,
                                                 0, 3>(
      static_cast<int>(value));
}
inline bool MissionListPBComp_eMissionType_Parse(absl::string_view name, MissionListPBComp_eMissionType* value) {
  return ::google::protobuf::internal::ParseNamedEnum<MissionListPBComp_eMissionType>(
      MissionListPBComp_eMissionType_descriptor(), name, value);
}

// ===================================================================


// -------------------------------------------------------------------

class RewardListPBComp_CanRewardMissionIdEntry_DoNotUse final
    : public ::google::protobuf::internal::MapEntry<
          RewardListPBComp_CanRewardMissionIdEntry_DoNotUse, ::uint32_t, bool,
          ::google::protobuf::internal::WireFormatLite::TYPE_UINT32,
          ::google::protobuf::internal::WireFormatLite::TYPE_BOOL> {
 public:
  using SuperType = ::google::protobuf::internal::MapEntry<
      RewardListPBComp_CanRewardMissionIdEntry_DoNotUse, ::uint32_t, bool,
      ::google::protobuf::internal::WireFormatLite::TYPE_UINT32,
      ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>;
  RewardListPBComp_CanRewardMissionIdEntry_DoNotUse();
  template <typename = void>
  explicit PROTOBUF_CONSTEXPR RewardListPBComp_CanRewardMissionIdEntry_DoNotUse(
      ::google::protobuf::internal::ConstantInitialized);
  explicit RewardListPBComp_CanRewardMissionIdEntry_DoNotUse(::google::protobuf::Arena* arena);
  static const RewardListPBComp_CanRewardMissionIdEntry_DoNotUse* internal_default_instance() {
    return reinterpret_cast<const RewardListPBComp_CanRewardMissionIdEntry_DoNotUse*>(
        &_RewardListPBComp_CanRewardMissionIdEntry_DoNotUse_default_instance_);
  }
  static bool ValidateKey(void*) { return true; }
  static bool ValidateValue(void*) { return true; }
  ::google::protobuf::Metadata GetMetadata() const final;
  friend struct ::TableStruct_logic_2fcomponent_2fmission_5fcomp_2eproto;
};
// -------------------------------------------------------------------

class MissionPBComp final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:MissionPBComp) */ {
 public:
  inline MissionPBComp() : MissionPBComp(nullptr) {}
  ~MissionPBComp() override;
  template <typename = void>
  explicit PROTOBUF_CONSTEXPR MissionPBComp(
      ::google::protobuf::internal::ConstantInitialized);

  inline MissionPBComp(const MissionPBComp& from) : MissionPBComp(nullptr, from) {}
  inline MissionPBComp(MissionPBComp&& from) noexcept
      : MissionPBComp(nullptr, std::move(from)) {}
  inline MissionPBComp& operator=(const MissionPBComp& from) {
    CopyFrom(from);
    return *this;
  }
  inline MissionPBComp& operator=(MissionPBComp&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
#ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
#endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const MissionPBComp& default_instance() {
    return *internal_default_instance();
  }
  static inline const MissionPBComp* internal_default_instance() {
    return reinterpret_cast<const MissionPBComp*>(
        &_MissionPBComp_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 0;
  friend void swap(MissionPBComp& a, MissionPBComp& b) { a.Swap(&b); }
  inline void Swap(MissionPBComp* other) {
    if (other == this) return;
#ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr && GetArena() == other->GetArena()) {
#else   // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
#endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(MissionPBComp* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  MissionPBComp* New(::google::protobuf::Arena* arena = nullptr) const final {
    return ::google::protobuf::Message::DefaultConstruct<MissionPBComp>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const MissionPBComp& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const MissionPBComp& from) { MissionPBComp::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  ::size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::google::protobuf::internal::ParseContext* ctx) final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(MissionPBComp* other);
 private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() { return "MissionPBComp"; }

 protected:
  explicit MissionPBComp(::google::protobuf::Arena* arena);
  MissionPBComp(::google::protobuf::Arena* arena, const MissionPBComp& from);
  MissionPBComp(::google::protobuf::Arena* arena, MissionPBComp&& from) noexcept
      : MissionPBComp(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::MessageLite::ClassData* GetClassData()
      const final;

 public:
  ::google::protobuf::Metadata GetMetadata() const final;
  // nested types ----------------------------------------------------
  using eMissionStatus = MissionPBComp_eMissionStatus;
  static constexpr eMissionStatus E_MISSION_NORMAL = MissionPBComp_eMissionStatus_E_MISSION_NORMAL;
  static constexpr eMissionStatus E_MISSION_ACHIEVEMENT = MissionPBComp_eMissionStatus_E_MISSION_ACHIEVEMENT;
  static constexpr eMissionStatus E_MISSION_COMPLETE = MissionPBComp_eMissionStatus_E_MISSION_COMPLETE;
  static constexpr eMissionStatus E_MISSION_TIME_OUT = MissionPBComp_eMissionStatus_E_MISSION_TIME_OUT;
  static constexpr eMissionStatus E_MISSION_FAILD = MissionPBComp_eMissionStatus_E_MISSION_FAILD;
  static inline bool eMissionStatus_IsValid(int value) {
    return MissionPBComp_eMissionStatus_IsValid(value);
  }
  static constexpr eMissionStatus eMissionStatus_MIN = MissionPBComp_eMissionStatus_eMissionStatus_MIN;
  static constexpr eMissionStatus eMissionStatus_MAX = MissionPBComp_eMissionStatus_eMissionStatus_MAX;
  static constexpr int eMissionStatus_ARRAYSIZE = MissionPBComp_eMissionStatus_eMissionStatus_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor* eMissionStatus_descriptor() {
    return MissionPBComp_eMissionStatus_descriptor();
  }
  template <typename T>
  static inline const std::string& eMissionStatus_Name(T value) {
    return MissionPBComp_eMissionStatus_Name(value);
  }
  static inline bool eMissionStatus_Parse(absl::string_view name, eMissionStatus* value) {
    return MissionPBComp_eMissionStatus_Parse(name, value);
  }

  // accessors -------------------------------------------------------
  enum : int {
    kProgressFieldNumber = 3,
    kIdFieldNumber = 1,
    kStatusFieldNumber = 2,
  };
  // repeated uint32 progress = 3;
  int progress_size() const;
  private:
  int _internal_progress_size() const;

  public:
  void clear_progress() ;
  ::uint32_t progress(int index) const;
  void set_progress(int index, ::uint32_t value);
  void add_progress(::uint32_t value);
  const ::google::protobuf::RepeatedField<::uint32_t>& progress() const;
  ::google::protobuf::RepeatedField<::uint32_t>* mutable_progress();

  private:
  const ::google::protobuf::RepeatedField<::uint32_t>& _internal_progress() const;
  ::google::protobuf::RepeatedField<::uint32_t>* _internal_mutable_progress();

  public:
  // uint32 id = 1;
  void clear_id() ;
  ::uint32_t id() const;
  void set_id(::uint32_t value);

  private:
  ::uint32_t _internal_id() const;
  void _internal_set_id(::uint32_t value);

  public:
  // uint32 status = 2;
  void clear_status() ;
  ::uint32_t status() const;
  void set_status(::uint32_t value);

  private:
  ::uint32_t _internal_status() const;
  void _internal_set_status(::uint32_t value);

  public:
  // @@protoc_insertion_point(class_scope:MissionPBComp)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      2, 3, 0,
      0, 2>
      _table_;
  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from);
    ::google::protobuf::RepeatedField<::uint32_t> progress_;
    mutable ::google::protobuf::internal::CachedSize _progress_cached_byte_size_;
    ::uint32_t id_;
    ::uint32_t status_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_logic_2fcomponent_2fmission_5fcomp_2eproto;
};
// -------------------------------------------------------------------

class MissionListPBComp_MissionBeginTimeEntry_DoNotUse final
    : public ::google::protobuf::internal::MapEntry<
          MissionListPBComp_MissionBeginTimeEntry_DoNotUse, ::uint32_t, ::uint64_t,
          ::google::protobuf::internal::WireFormatLite::TYPE_UINT32,
          ::google::protobuf::internal::WireFormatLite::TYPE_UINT64> {
 public:
  using SuperType = ::google::protobuf::internal::MapEntry<
      MissionListPBComp_MissionBeginTimeEntry_DoNotUse, ::uint32_t, ::uint64_t,
      ::google::protobuf::internal::WireFormatLite::TYPE_UINT32,
      ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>;
  MissionListPBComp_MissionBeginTimeEntry_DoNotUse();
  template <typename = void>
  explicit PROTOBUF_CONSTEXPR MissionListPBComp_MissionBeginTimeEntry_DoNotUse(
      ::google::protobuf::internal::ConstantInitialized);
  explicit MissionListPBComp_MissionBeginTimeEntry_DoNotUse(::google::protobuf::Arena* arena);
  static const MissionListPBComp_MissionBeginTimeEntry_DoNotUse* internal_default_instance() {
    return reinterpret_cast<const MissionListPBComp_MissionBeginTimeEntry_DoNotUse*>(
        &_MissionListPBComp_MissionBeginTimeEntry_DoNotUse_default_instance_);
  }
  static bool ValidateKey(void*) { return true; }
  static bool ValidateValue(void*) { return true; }
  ::google::protobuf::Metadata GetMetadata() const final;
  friend struct ::TableStruct_logic_2fcomponent_2fmission_5fcomp_2eproto;
};
// -------------------------------------------------------------------

class MissionListPBComp_CompleteMissionsEntry_DoNotUse final
    : public ::google::protobuf::internal::MapEntry<
          MissionListPBComp_CompleteMissionsEntry_DoNotUse, ::uint32_t, bool,
          ::google::protobuf::internal::WireFormatLite::TYPE_UINT32,
          ::google::protobuf::internal::WireFormatLite::TYPE_BOOL> {
 public:
  using SuperType = ::google::protobuf::internal::MapEntry<
      MissionListPBComp_CompleteMissionsEntry_DoNotUse, ::uint32_t, bool,
      ::google::protobuf::internal::WireFormatLite::TYPE_UINT32,
      ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>;
  MissionListPBComp_CompleteMissionsEntry_DoNotUse();
  template <typename = void>
  explicit PROTOBUF_CONSTEXPR MissionListPBComp_CompleteMissionsEntry_DoNotUse(
      ::google::protobuf::internal::ConstantInitialized);
  explicit MissionListPBComp_CompleteMissionsEntry_DoNotUse(::google::protobuf::Arena* arena);
  static const MissionListPBComp_CompleteMissionsEntry_DoNotUse* internal_default_instance() {
    return reinterpret_cast<const MissionListPBComp_CompleteMissionsEntry_DoNotUse*>(
        &_MissionListPBComp_CompleteMissionsEntry_DoNotUse_default_instance_);
  }
  static bool ValidateKey(void*) { return true; }
  static bool ValidateValue(void*) { return true; }
  ::google::protobuf::Metadata GetMetadata() const final;
  friend struct ::TableStruct_logic_2fcomponent_2fmission_5fcomp_2eproto;
};
// -------------------------------------------------------------------

class RewardListPBComp final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:RewardListPBComp) */ {
 public:
  inline RewardListPBComp() : RewardListPBComp(nullptr) {}
  ~RewardListPBComp() override;
  template <typename = void>
  explicit PROTOBUF_CONSTEXPR RewardListPBComp(
      ::google::protobuf::internal::ConstantInitialized);

  inline RewardListPBComp(const RewardListPBComp& from) : RewardListPBComp(nullptr, from) {}
  inline RewardListPBComp(RewardListPBComp&& from) noexcept
      : RewardListPBComp(nullptr, std::move(from)) {}
  inline RewardListPBComp& operator=(const RewardListPBComp& from) {
    CopyFrom(from);
    return *this;
  }
  inline RewardListPBComp& operator=(RewardListPBComp&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
#ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
#endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const RewardListPBComp& default_instance() {
    return *internal_default_instance();
  }
  static inline const RewardListPBComp* internal_default_instance() {
    return reinterpret_cast<const RewardListPBComp*>(
        &_RewardListPBComp_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 6;
  friend void swap(RewardListPBComp& a, RewardListPBComp& b) { a.Swap(&b); }
  inline void Swap(RewardListPBComp* other) {
    if (other == this) return;
#ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr && GetArena() == other->GetArena()) {
#else   // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
#endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(RewardListPBComp* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  RewardListPBComp* New(::google::protobuf::Arena* arena = nullptr) const final {
    return ::google::protobuf::Message::DefaultConstruct<RewardListPBComp>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const RewardListPBComp& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const RewardListPBComp& from) { RewardListPBComp::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  ::size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::google::protobuf::internal::ParseContext* ctx) final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(RewardListPBComp* other);
 private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() { return "RewardListPBComp"; }

 protected:
  explicit RewardListPBComp(::google::protobuf::Arena* arena);
  RewardListPBComp(::google::protobuf::Arena* arena, const RewardListPBComp& from);
  RewardListPBComp(::google::protobuf::Arena* arena, RewardListPBComp&& from) noexcept
      : RewardListPBComp(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::MessageLite::ClassData* GetClassData()
      const final;

 public:
  ::google::protobuf::Metadata GetMetadata() const final;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kCanRewardMissionIdFieldNumber = 2,
  };
  // map<uint32, bool> can_reward_mission_id = 2;
  int can_reward_mission_id_size() const;
  private:
  int _internal_can_reward_mission_id_size() const;

  public:
  void clear_can_reward_mission_id() ;
  const ::google::protobuf::Map<::uint32_t, bool>& can_reward_mission_id() const;
  ::google::protobuf::Map<::uint32_t, bool>* mutable_can_reward_mission_id();

  private:
  const ::google::protobuf::Map<::uint32_t, bool>& _internal_can_reward_mission_id() const;
  ::google::protobuf::Map<::uint32_t, bool>* _internal_mutable_can_reward_mission_id();

  public:
  // @@protoc_insertion_point(class_scope:RewardListPBComp)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      0, 1, 1,
      0, 2>
      _table_;
  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from);
    ::google::protobuf::internal::MapField<RewardListPBComp_CanRewardMissionIdEntry_DoNotUse, ::uint32_t, bool,
                      ::google::protobuf::internal::WireFormatLite::TYPE_UINT32,
                      ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>
        can_reward_mission_id_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_logic_2fcomponent_2fmission_5fcomp_2eproto;
};
// -------------------------------------------------------------------

class MissionListPBComp_MissionsEntry_DoNotUse final
    : public ::google::protobuf::internal::MapEntry<
          MissionListPBComp_MissionsEntry_DoNotUse, ::uint32_t, ::MissionPBComp,
          ::google::protobuf::internal::WireFormatLite::TYPE_UINT32,
          ::google::protobuf::internal::WireFormatLite::TYPE_MESSAGE> {
 public:
  using SuperType = ::google::protobuf::internal::MapEntry<
      MissionListPBComp_MissionsEntry_DoNotUse, ::uint32_t, ::MissionPBComp,
      ::google::protobuf::internal::WireFormatLite::TYPE_UINT32,
      ::google::protobuf::internal::WireFormatLite::TYPE_MESSAGE>;
  MissionListPBComp_MissionsEntry_DoNotUse();
  template <typename = void>
  explicit PROTOBUF_CONSTEXPR MissionListPBComp_MissionsEntry_DoNotUse(
      ::google::protobuf::internal::ConstantInitialized);
  explicit MissionListPBComp_MissionsEntry_DoNotUse(::google::protobuf::Arena* arena);
  static const MissionListPBComp_MissionsEntry_DoNotUse* internal_default_instance() {
    return reinterpret_cast<const MissionListPBComp_MissionsEntry_DoNotUse*>(
        &_MissionListPBComp_MissionsEntry_DoNotUse_default_instance_);
  }
  static bool ValidateKey(void*) { return true; }
  static bool ValidateValue(void*) { return true; }
  ::google::protobuf::Metadata GetMetadata() const final;
  friend struct ::TableStruct_logic_2fcomponent_2fmission_5fcomp_2eproto;
};
// -------------------------------------------------------------------

class MissionListPBComp final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:MissionListPBComp) */ {
 public:
  inline MissionListPBComp() : MissionListPBComp(nullptr) {}
  ~MissionListPBComp() override;
  template <typename = void>
  explicit PROTOBUF_CONSTEXPR MissionListPBComp(
      ::google::protobuf::internal::ConstantInitialized);

  inline MissionListPBComp(const MissionListPBComp& from) : MissionListPBComp(nullptr, from) {}
  inline MissionListPBComp(MissionListPBComp&& from) noexcept
      : MissionListPBComp(nullptr, std::move(from)) {}
  inline MissionListPBComp& operator=(const MissionListPBComp& from) {
    CopyFrom(from);
    return *this;
  }
  inline MissionListPBComp& operator=(MissionListPBComp&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
#ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
#endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const MissionListPBComp& default_instance() {
    return *internal_default_instance();
  }
  static inline const MissionListPBComp* internal_default_instance() {
    return reinterpret_cast<const MissionListPBComp*>(
        &_MissionListPBComp_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 4;
  friend void swap(MissionListPBComp& a, MissionListPBComp& b) { a.Swap(&b); }
  inline void Swap(MissionListPBComp* other) {
    if (other == this) return;
#ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr && GetArena() == other->GetArena()) {
#else   // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
#endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(MissionListPBComp* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  MissionListPBComp* New(::google::protobuf::Arena* arena = nullptr) const final {
    return ::google::protobuf::Message::DefaultConstruct<MissionListPBComp>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const MissionListPBComp& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const MissionListPBComp& from) { MissionListPBComp::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  ::size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::google::protobuf::internal::ParseContext* ctx) final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(MissionListPBComp* other);
 private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() { return "MissionListPBComp"; }

 protected:
  explicit MissionListPBComp(::google::protobuf::Arena* arena);
  MissionListPBComp(::google::protobuf::Arena* arena, const MissionListPBComp& from);
  MissionListPBComp(::google::protobuf::Arena* arena, MissionListPBComp&& from) noexcept
      : MissionListPBComp(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::MessageLite::ClassData* GetClassData()
      const final;

 public:
  ::google::protobuf::Metadata GetMetadata() const final;
  // nested types ----------------------------------------------------
  using eMissionType = MissionListPBComp_eMissionType;
  static constexpr eMissionType kPlayerMission = MissionListPBComp_eMissionType_kPlayerMission;
  static constexpr eMissionType kPlayerAchievment = MissionListPBComp_eMissionType_kPlayerAchievment;
  static constexpr eMissionType kPlayerDailyActivity = MissionListPBComp_eMissionType_kPlayerDailyActivity;
  static constexpr eMissionType kPlayerMissionSize = MissionListPBComp_eMissionType_kPlayerMissionSize;
  static inline bool eMissionType_IsValid(int value) {
    return MissionListPBComp_eMissionType_IsValid(value);
  }
  static constexpr eMissionType eMissionType_MIN = MissionListPBComp_eMissionType_eMissionType_MIN;
  static constexpr eMissionType eMissionType_MAX = MissionListPBComp_eMissionType_eMissionType_MAX;
  static constexpr int eMissionType_ARRAYSIZE = MissionListPBComp_eMissionType_eMissionType_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor* eMissionType_descriptor() {
    return MissionListPBComp_eMissionType_descriptor();
  }
  template <typename T>
  static inline const std::string& eMissionType_Name(T value) {
    return MissionListPBComp_eMissionType_Name(value);
  }
  static inline bool eMissionType_Parse(absl::string_view name, eMissionType* value) {
    return MissionListPBComp_eMissionType_Parse(name, value);
  }

  // accessors -------------------------------------------------------
  enum : int {
    kMissionsFieldNumber = 1,
    kCompleteMissionsFieldNumber = 2,
    kMissionBeginTimeFieldNumber = 3,
    kTypeFieldNumber = 4,
  };
  // map<uint32, .MissionPBComp> missions = 1;
  int missions_size() const;
  private:
  int _internal_missions_size() const;

  public:
  void clear_missions() ;
  const ::google::protobuf::Map<::uint32_t, ::MissionPBComp>& missions() const;
  ::google::protobuf::Map<::uint32_t, ::MissionPBComp>* mutable_missions();

  private:
  const ::google::protobuf::Map<::uint32_t, ::MissionPBComp>& _internal_missions() const;
  ::google::protobuf::Map<::uint32_t, ::MissionPBComp>* _internal_mutable_missions();

  public:
  // map<uint32, bool> complete_missions = 2;
  int complete_missions_size() const;
  private:
  int _internal_complete_missions_size() const;

  public:
  void clear_complete_missions() ;
  const ::google::protobuf::Map<::uint32_t, bool>& complete_missions() const;
  ::google::protobuf::Map<::uint32_t, bool>* mutable_complete_missions();

  private:
  const ::google::protobuf::Map<::uint32_t, bool>& _internal_complete_missions() const;
  ::google::protobuf::Map<::uint32_t, bool>* _internal_mutable_complete_missions();

  public:
  // map<uint32, uint64> mission_begin_time = 3;
  int mission_begin_time_size() const;
  private:
  int _internal_mission_begin_time_size() const;

  public:
  void clear_mission_begin_time() ;
  const ::google::protobuf::Map<::uint32_t, ::uint64_t>& mission_begin_time() const;
  ::google::protobuf::Map<::uint32_t, ::uint64_t>* mutable_mission_begin_time();

  private:
  const ::google::protobuf::Map<::uint32_t, ::uint64_t>& _internal_mission_begin_time() const;
  ::google::protobuf::Map<::uint32_t, ::uint64_t>* _internal_mutable_mission_begin_time();

  public:
  // uint32 type = 4;
  void clear_type() ;
  ::uint32_t type() const;
  void set_type(::uint32_t value);

  private:
  ::uint32_t _internal_type() const;
  void _internal_set_type(::uint32_t value);

  public:
  // @@protoc_insertion_point(class_scope:MissionListPBComp)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      0, 4, 4,
      0, 2>
      _table_;
  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from);
    ::google::protobuf::internal::MapField<MissionListPBComp_MissionsEntry_DoNotUse, ::uint32_t, ::MissionPBComp,
                      ::google::protobuf::internal::WireFormatLite::TYPE_UINT32,
                      ::google::protobuf::internal::WireFormatLite::TYPE_MESSAGE>
        missions_;
    ::google::protobuf::internal::MapField<MissionListPBComp_CompleteMissionsEntry_DoNotUse, ::uint32_t, bool,
                      ::google::protobuf::internal::WireFormatLite::TYPE_UINT32,
                      ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>
        complete_missions_;
    ::google::protobuf::internal::MapField<MissionListPBComp_MissionBeginTimeEntry_DoNotUse, ::uint32_t, ::uint64_t,
                      ::google::protobuf::internal::WireFormatLite::TYPE_UINT32,
                      ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>
        mission_begin_time_;
    ::uint32_t type_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_logic_2fcomponent_2fmission_5fcomp_2eproto;
};

// ===================================================================




// ===================================================================


#ifdef __GNUC__
#pragma GCC diagnostic push
#pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif  // __GNUC__
// -------------------------------------------------------------------

// MissionPBComp

// uint32 id = 1;
inline void MissionPBComp::clear_id() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.id_ = 0u;
}
inline ::uint32_t MissionPBComp::id() const {
  // @@protoc_insertion_point(field_get:MissionPBComp.id)
  return _internal_id();
}
inline void MissionPBComp::set_id(::uint32_t value) {
  _internal_set_id(value);
  // @@protoc_insertion_point(field_set:MissionPBComp.id)
}
inline ::uint32_t MissionPBComp::_internal_id() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.id_;
}
inline void MissionPBComp::_internal_set_id(::uint32_t value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.id_ = value;
}

// uint32 status = 2;
inline void MissionPBComp::clear_status() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.status_ = 0u;
}
inline ::uint32_t MissionPBComp::status() const {
  // @@protoc_insertion_point(field_get:MissionPBComp.status)
  return _internal_status();
}
inline void MissionPBComp::set_status(::uint32_t value) {
  _internal_set_status(value);
  // @@protoc_insertion_point(field_set:MissionPBComp.status)
}
inline ::uint32_t MissionPBComp::_internal_status() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.status_;
}
inline void MissionPBComp::_internal_set_status(::uint32_t value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.status_ = value;
}

// repeated uint32 progress = 3;
inline int MissionPBComp::_internal_progress_size() const {
  return _internal_progress().size();
}
inline int MissionPBComp::progress_size() const {
  return _internal_progress_size();
}
inline void MissionPBComp::clear_progress() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.progress_.Clear();
}
inline ::uint32_t MissionPBComp::progress(int index) const {
  // @@protoc_insertion_point(field_get:MissionPBComp.progress)
  return _internal_progress().Get(index);
}
inline void MissionPBComp::set_progress(int index, ::uint32_t value) {
  _internal_mutable_progress()->Set(index, value);
  // @@protoc_insertion_point(field_set:MissionPBComp.progress)
}
inline void MissionPBComp::add_progress(::uint32_t value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _internal_mutable_progress()->Add(value);
  // @@protoc_insertion_point(field_add:MissionPBComp.progress)
}
inline const ::google::protobuf::RepeatedField<::uint32_t>& MissionPBComp::progress() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_list:MissionPBComp.progress)
  return _internal_progress();
}
inline ::google::protobuf::RepeatedField<::uint32_t>* MissionPBComp::mutable_progress()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable_list:MissionPBComp.progress)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  return _internal_mutable_progress();
}
inline const ::google::protobuf::RepeatedField<::uint32_t>&
MissionPBComp::_internal_progress() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.progress_;
}
inline ::google::protobuf::RepeatedField<::uint32_t>* MissionPBComp::_internal_mutable_progress() {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return &_impl_.progress_;
}

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// MissionListPBComp

// map<uint32, .MissionPBComp> missions = 1;
inline int MissionListPBComp::_internal_missions_size() const {
  return _internal_missions().size();
}
inline int MissionListPBComp::missions_size() const {
  return _internal_missions_size();
}
inline void MissionListPBComp::clear_missions() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.missions_.Clear();
}
inline const ::google::protobuf::Map<::uint32_t, ::MissionPBComp>& MissionListPBComp::_internal_missions() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.missions_.GetMap();
}
inline const ::google::protobuf::Map<::uint32_t, ::MissionPBComp>& MissionListPBComp::missions() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_map:MissionListPBComp.missions)
  return _internal_missions();
}
inline ::google::protobuf::Map<::uint32_t, ::MissionPBComp>* MissionListPBComp::_internal_mutable_missions() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  return _impl_.missions_.MutableMap();
}
inline ::google::protobuf::Map<::uint32_t, ::MissionPBComp>* MissionListPBComp::mutable_missions() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable_map:MissionListPBComp.missions)
  return _internal_mutable_missions();
}

// map<uint32, bool> complete_missions = 2;
inline int MissionListPBComp::_internal_complete_missions_size() const {
  return _internal_complete_missions().size();
}
inline int MissionListPBComp::complete_missions_size() const {
  return _internal_complete_missions_size();
}
inline void MissionListPBComp::clear_complete_missions() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.complete_missions_.Clear();
}
inline const ::google::protobuf::Map<::uint32_t, bool>& MissionListPBComp::_internal_complete_missions() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.complete_missions_.GetMap();
}
inline const ::google::protobuf::Map<::uint32_t, bool>& MissionListPBComp::complete_missions() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_map:MissionListPBComp.complete_missions)
  return _internal_complete_missions();
}
inline ::google::protobuf::Map<::uint32_t, bool>* MissionListPBComp::_internal_mutable_complete_missions() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  return _impl_.complete_missions_.MutableMap();
}
inline ::google::protobuf::Map<::uint32_t, bool>* MissionListPBComp::mutable_complete_missions() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable_map:MissionListPBComp.complete_missions)
  return _internal_mutable_complete_missions();
}

// map<uint32, uint64> mission_begin_time = 3;
inline int MissionListPBComp::_internal_mission_begin_time_size() const {
  return _internal_mission_begin_time().size();
}
inline int MissionListPBComp::mission_begin_time_size() const {
  return _internal_mission_begin_time_size();
}
inline void MissionListPBComp::clear_mission_begin_time() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.mission_begin_time_.Clear();
}
inline const ::google::protobuf::Map<::uint32_t, ::uint64_t>& MissionListPBComp::_internal_mission_begin_time() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.mission_begin_time_.GetMap();
}
inline const ::google::protobuf::Map<::uint32_t, ::uint64_t>& MissionListPBComp::mission_begin_time() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_map:MissionListPBComp.mission_begin_time)
  return _internal_mission_begin_time();
}
inline ::google::protobuf::Map<::uint32_t, ::uint64_t>* MissionListPBComp::_internal_mutable_mission_begin_time() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  return _impl_.mission_begin_time_.MutableMap();
}
inline ::google::protobuf::Map<::uint32_t, ::uint64_t>* MissionListPBComp::mutable_mission_begin_time() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable_map:MissionListPBComp.mission_begin_time)
  return _internal_mutable_mission_begin_time();
}

// uint32 type = 4;
inline void MissionListPBComp::clear_type() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.type_ = 0u;
}
inline ::uint32_t MissionListPBComp::type() const {
  // @@protoc_insertion_point(field_get:MissionListPBComp.type)
  return _internal_type();
}
inline void MissionListPBComp::set_type(::uint32_t value) {
  _internal_set_type(value);
  // @@protoc_insertion_point(field_set:MissionListPBComp.type)
}
inline ::uint32_t MissionListPBComp::_internal_type() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.type_;
}
inline void MissionListPBComp::_internal_set_type(::uint32_t value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.type_ = value;
}

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// RewardListPBComp

// map<uint32, bool> can_reward_mission_id = 2;
inline int RewardListPBComp::_internal_can_reward_mission_id_size() const {
  return _internal_can_reward_mission_id().size();
}
inline int RewardListPBComp::can_reward_mission_id_size() const {
  return _internal_can_reward_mission_id_size();
}
inline void RewardListPBComp::clear_can_reward_mission_id() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.can_reward_mission_id_.Clear();
}
inline const ::google::protobuf::Map<::uint32_t, bool>& RewardListPBComp::_internal_can_reward_mission_id() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.can_reward_mission_id_.GetMap();
}
inline const ::google::protobuf::Map<::uint32_t, bool>& RewardListPBComp::can_reward_mission_id() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_map:RewardListPBComp.can_reward_mission_id)
  return _internal_can_reward_mission_id();
}
inline ::google::protobuf::Map<::uint32_t, bool>* RewardListPBComp::_internal_mutable_can_reward_mission_id() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  return _impl_.can_reward_mission_id_.MutableMap();
}
inline ::google::protobuf::Map<::uint32_t, bool>* RewardListPBComp::mutable_can_reward_mission_id() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable_map:RewardListPBComp.can_reward_mission_id)
  return _internal_mutable_can_reward_mission_id();
}

#ifdef __GNUC__
#pragma GCC diagnostic pop
#endif  // __GNUC__

// @@protoc_insertion_point(namespace_scope)


namespace google {
namespace protobuf {

template <>
struct is_proto_enum<::MissionPBComp_eMissionStatus> : std::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor<::MissionPBComp_eMissionStatus>() {
  return ::MissionPBComp_eMissionStatus_descriptor();
}
template <>
struct is_proto_enum<::MissionListPBComp_eMissionType> : std::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor<::MissionListPBComp_eMissionType>() {
  return ::MissionListPBComp_eMissionType_descriptor();
}

}  // namespace protobuf
}  // namespace google

// @@protoc_insertion_point(global_scope)

#include "google/protobuf/port_undef.inc"

#endif  // GOOGLE_PROTOBUF_INCLUDED_logic_2fcomponent_2fmission_5fcomp_2eproto_2epb_2eh
