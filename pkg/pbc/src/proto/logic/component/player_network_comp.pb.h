// Generated by the protocol buffer compiler.  DO NOT EDIT!
// NO CHECKED-IN PROTOBUF GENCODE
// source: proto/logic/component/player_network_comp.proto
// Protobuf C++ Version: 5.29.0

#ifndef proto_2flogic_2fcomponent_2fplayer_5fnetwork_5fcomp_2eproto_2epb_2eh
#define proto_2flogic_2fcomponent_2fplayer_5fnetwork_5fcomp_2eproto_2epb_2eh

#include <limits>
#include <string>
#include <type_traits>
#include <utility>

#include "google/protobuf/runtime_version.h"
#if PROTOBUF_VERSION != 5029000
#error "Protobuf C++ gencode is built with an incompatible version of"
#error "Protobuf C++ headers/runtime. See"
#error "https://protobuf.dev/support/cross-version-runtime-guarantee/#cpp"
#endif
#include "google/protobuf/io/coded_stream.h"
#include "google/protobuf/arena.h"
#include "google/protobuf/arenastring.h"
#include "google/protobuf/generated_message_tctable_decl.h"
#include "google/protobuf/generated_message_util.h"
#include "google/protobuf/metadata_lite.h"
#include "google/protobuf/generated_message_reflection.h"
#include "google/protobuf/message.h"
#include "google/protobuf/message_lite.h"
#include "google/protobuf/repeated_field.h"  // IWYU pragma: export
#include "google/protobuf/extension_set.h"  // IWYU pragma: export
#include "google/protobuf/unknown_field_set.h"
// @@protoc_insertion_point(includes)

// Must be included last.
#include "google/protobuf/port_def.inc"

#define PROTOBUF_INTERNAL_EXPORT_proto_2flogic_2fcomponent_2fplayer_5fnetwork_5fcomp_2eproto

namespace google {
namespace protobuf {
namespace internal {
template <typename T>
::absl::string_view GetAnyMessageName();
}  // namespace internal
}  // namespace protobuf
}  // namespace google

// Internal implementation detail -- do not use these members.
struct TableStruct_proto_2flogic_2fcomponent_2fplayer_5fnetwork_5fcomp_2eproto {
  static const ::uint32_t offsets[];
};
extern const ::google::protobuf::internal::DescriptorTable
    descriptor_table_proto_2flogic_2fcomponent_2fplayer_5fnetwork_5fcomp_2eproto;
class PlayerSessionSnapshotPB;
struct PlayerSessionSnapshotPBDefaultTypeInternal;
extern PlayerSessionSnapshotPBDefaultTypeInternal _PlayerSessionSnapshotPB_default_instance_;
namespace google {
namespace protobuf {
}  // namespace protobuf
}  // namespace google


// ===================================================================


// -------------------------------------------------------------------

class PlayerSessionSnapshotPB final
    : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:PlayerSessionSnapshotPB) */ {
 public:
  inline PlayerSessionSnapshotPB() : PlayerSessionSnapshotPB(nullptr) {}
  ~PlayerSessionSnapshotPB() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(PlayerSessionSnapshotPB* msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(PlayerSessionSnapshotPB));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR PlayerSessionSnapshotPB(
      ::google::protobuf::internal::ConstantInitialized);

  inline PlayerSessionSnapshotPB(const PlayerSessionSnapshotPB& from) : PlayerSessionSnapshotPB(nullptr, from) {}
  inline PlayerSessionSnapshotPB(PlayerSessionSnapshotPB&& from) noexcept
      : PlayerSessionSnapshotPB(nullptr, std::move(from)) {}
  inline PlayerSessionSnapshotPB& operator=(const PlayerSessionSnapshotPB& from) {
    CopyFrom(from);
    return *this;
  }
  inline PlayerSessionSnapshotPB& operator=(PlayerSessionSnapshotPB&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const PlayerSessionSnapshotPB& default_instance() {
    return *internal_default_instance();
  }
  static inline const PlayerSessionSnapshotPB* internal_default_instance() {
    return reinterpret_cast<const PlayerSessionSnapshotPB*>(
        &_PlayerSessionSnapshotPB_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 0;
  friend void swap(PlayerSessionSnapshotPB& a, PlayerSessionSnapshotPB& b) { a.Swap(&b); }
  inline void Swap(PlayerSessionSnapshotPB* other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(PlayerSessionSnapshotPB* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  PlayerSessionSnapshotPB* New(::google::protobuf::Arena* arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<PlayerSessionSnapshotPB>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const PlayerSessionSnapshotPB& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const PlayerSessionSnapshotPB& from) { PlayerSessionSnapshotPB::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(PlayerSessionSnapshotPB* other);
 private:
  template <typename T>
  friend ::absl::string_view(
      ::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "PlayerSessionSnapshotPB"; }

 protected:
  explicit PlayerSessionSnapshotPB(::google::protobuf::Arena* arena);
  PlayerSessionSnapshotPB(::google::protobuf::Arena* arena, const PlayerSessionSnapshotPB& from);
  PlayerSessionSnapshotPB(::google::protobuf::Arena* arena, PlayerSessionSnapshotPB&& from) noexcept
      : PlayerSessionSnapshotPB(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* GetClassData() const PROTOBUF_FINAL;
  static void* PlacementNew_(const void*, void* mem,
                             ::google::protobuf::Arena* arena);
  static constexpr auto InternalNewImpl_();
  static const ::google::protobuf::internal::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kPlayerIdFieldNumber = 1,
    kGateSessionIdFieldNumber = 2,
    kSceneNodeIdFieldNumber = 3,
    kCentreNodeIdFieldNumber = 4,
  };
  // uint64 player_id = 1;
  void clear_player_id() ;
  ::uint64_t player_id() const;
  void set_player_id(::uint64_t value);

  private:
  ::uint64_t _internal_player_id() const;
  void _internal_set_player_id(::uint64_t value);

  public:
  // uint64 gate_session_id = 2;
  void clear_gate_session_id() ;
  ::uint64_t gate_session_id() const;
  void set_gate_session_id(::uint64_t value);

  private:
  ::uint64_t _internal_gate_session_id() const;
  void _internal_set_gate_session_id(::uint64_t value);

  public:
  // uint32 scene_node_id = 3;
  void clear_scene_node_id() ;
  ::uint32_t scene_node_id() const;
  void set_scene_node_id(::uint32_t value);

  private:
  ::uint32_t _internal_scene_node_id() const;
  void _internal_set_scene_node_id(::uint32_t value);

  public:
  // uint32 centre_node_id = 4;
  void clear_centre_node_id() ;
  ::uint32_t centre_node_id() const;
  void set_centre_node_id(::uint32_t value);

  private:
  ::uint32_t _internal_centre_node_id() const;
  void _internal_set_centre_node_id(::uint32_t value);

  public:
  // @@protoc_insertion_point(class_scope:PlayerSessionSnapshotPB)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      2, 4, 0,
      0, 2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const PlayerSessionSnapshotPB& from_msg);
    ::uint64_t player_id_;
    ::uint64_t gate_session_id_;
    ::uint32_t scene_node_id_;
    ::uint32_t centre_node_id_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_proto_2flogic_2fcomponent_2fplayer_5fnetwork_5fcomp_2eproto;
};

// ===================================================================




// ===================================================================


#ifdef __GNUC__
#pragma GCC diagnostic push
#pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif  // __GNUC__
// -------------------------------------------------------------------

// PlayerSessionSnapshotPB

// uint64 player_id = 1;
inline void PlayerSessionSnapshotPB::clear_player_id() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.player_id_ = ::uint64_t{0u};
}
inline ::uint64_t PlayerSessionSnapshotPB::player_id() const {
  // @@protoc_insertion_point(field_get:PlayerSessionSnapshotPB.player_id)
  return _internal_player_id();
}
inline void PlayerSessionSnapshotPB::set_player_id(::uint64_t value) {
  _internal_set_player_id(value);
  // @@protoc_insertion_point(field_set:PlayerSessionSnapshotPB.player_id)
}
inline ::uint64_t PlayerSessionSnapshotPB::_internal_player_id() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.player_id_;
}
inline void PlayerSessionSnapshotPB::_internal_set_player_id(::uint64_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.player_id_ = value;
}

// uint64 gate_session_id = 2;
inline void PlayerSessionSnapshotPB::clear_gate_session_id() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.gate_session_id_ = ::uint64_t{0u};
}
inline ::uint64_t PlayerSessionSnapshotPB::gate_session_id() const {
  // @@protoc_insertion_point(field_get:PlayerSessionSnapshotPB.gate_session_id)
  return _internal_gate_session_id();
}
inline void PlayerSessionSnapshotPB::set_gate_session_id(::uint64_t value) {
  _internal_set_gate_session_id(value);
  // @@protoc_insertion_point(field_set:PlayerSessionSnapshotPB.gate_session_id)
}
inline ::uint64_t PlayerSessionSnapshotPB::_internal_gate_session_id() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.gate_session_id_;
}
inline void PlayerSessionSnapshotPB::_internal_set_gate_session_id(::uint64_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.gate_session_id_ = value;
}

// uint32 scene_node_id = 3;
inline void PlayerSessionSnapshotPB::clear_scene_node_id() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.scene_node_id_ = 0u;
}
inline ::uint32_t PlayerSessionSnapshotPB::scene_node_id() const {
  // @@protoc_insertion_point(field_get:PlayerSessionSnapshotPB.scene_node_id)
  return _internal_scene_node_id();
}
inline void PlayerSessionSnapshotPB::set_scene_node_id(::uint32_t value) {
  _internal_set_scene_node_id(value);
  // @@protoc_insertion_point(field_set:PlayerSessionSnapshotPB.scene_node_id)
}
inline ::uint32_t PlayerSessionSnapshotPB::_internal_scene_node_id() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.scene_node_id_;
}
inline void PlayerSessionSnapshotPB::_internal_set_scene_node_id(::uint32_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.scene_node_id_ = value;
}

// uint32 centre_node_id = 4;
inline void PlayerSessionSnapshotPB::clear_centre_node_id() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.centre_node_id_ = 0u;
}
inline ::uint32_t PlayerSessionSnapshotPB::centre_node_id() const {
  // @@protoc_insertion_point(field_get:PlayerSessionSnapshotPB.centre_node_id)
  return _internal_centre_node_id();
}
inline void PlayerSessionSnapshotPB::set_centre_node_id(::uint32_t value) {
  _internal_set_centre_node_id(value);
  // @@protoc_insertion_point(field_set:PlayerSessionSnapshotPB.centre_node_id)
}
inline ::uint32_t PlayerSessionSnapshotPB::_internal_centre_node_id() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.centre_node_id_;
}
inline void PlayerSessionSnapshotPB::_internal_set_centre_node_id(::uint32_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.centre_node_id_ = value;
}

#ifdef __GNUC__
#pragma GCC diagnostic pop
#endif  // __GNUC__

// @@protoc_insertion_point(namespace_scope)


// @@protoc_insertion_point(global_scope)

#include "google/protobuf/port_undef.inc"

#endif  // proto_2flogic_2fcomponent_2fplayer_5fnetwork_5fcomp_2eproto_2epb_2eh
