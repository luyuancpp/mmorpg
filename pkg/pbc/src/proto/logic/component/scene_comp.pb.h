// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: logic/component/scene_comp.proto
// Protobuf C++ Version: 5.26.1

#ifndef GOOGLE_PROTOBUF_INCLUDED_logic_2fcomponent_2fscene_5fcomp_2eproto_2epb_2eh
#define GOOGLE_PROTOBUF_INCLUDED_logic_2fcomponent_2fscene_5fcomp_2eproto_2epb_2eh

#include <limits>
#include <string>
#include <type_traits>
#include <utility>

#include "google/protobuf/port_def.inc"
#if PROTOBUF_VERSION != 5026001
#error "Protobuf C++ gencode is built with an incompatible version of"
#error "Protobuf C++ headers/runtime. See"
#error "https://protobuf.dev/support/cross-version-runtime-guarantee/#cpp"
#endif
#include "google/protobuf/port_undef.inc"
#include "google/protobuf/io/coded_stream.h"
#include "google/protobuf/arena.h"
#include "google/protobuf/arenastring.h"
#include "google/protobuf/generated_message_tctable_decl.h"
#include "google/protobuf/generated_message_util.h"
#include "google/protobuf/metadata_lite.h"
#include "google/protobuf/generated_message_reflection.h"
#include "google/protobuf/message.h"
#include "google/protobuf/repeated_field.h"  // IWYU pragma: export
#include "google/protobuf/extension_set.h"  // IWYU pragma: export
#include "google/protobuf/map.h"  // IWYU pragma: export
#include "google/protobuf/map_entry.h"
#include "google/protobuf/map_field_inl.h"
#include "google/protobuf/generated_enum_reflection.h"
#include "google/protobuf/unknown_field_set.h"
// @@protoc_insertion_point(includes)

// Must be included last.
#include "google/protobuf/port_def.inc"

#define PROTOBUF_INTERNAL_EXPORT_logic_2fcomponent_2fscene_5fcomp_2eproto

namespace google {
namespace protobuf {
namespace internal {
class AnyMetadata;
}  // namespace internal
}  // namespace protobuf
}  // namespace google

// Internal implementation detail -- do not use these members.
struct TableStruct_logic_2fcomponent_2fscene_5fcomp_2eproto {
  static const ::uint32_t offsets[];
};
extern const ::google::protobuf::internal::DescriptorTable
    descriptor_table_logic_2fcomponent_2fscene_5fcomp_2eproto;
class CentreChangeSceneInfoPBComp;
struct CentreChangeSceneInfoPBCompDefaultTypeInternal;
extern CentreChangeSceneInfoPBCompDefaultTypeInternal _CentreChangeSceneInfoPBComp_default_instance_;
class SceneInfoPBComp;
struct SceneInfoPBCompDefaultTypeInternal;
extern SceneInfoPBCompDefaultTypeInternal _SceneInfoPBComp_default_instance_;
class SceneInfoPBComp_CreatorsEntry_DoNotUse;
struct SceneInfoPBComp_CreatorsEntry_DoNotUseDefaultTypeInternal;
extern SceneInfoPBComp_CreatorsEntry_DoNotUseDefaultTypeInternal _SceneInfoPBComp_CreatorsEntry_DoNotUse_default_instance_;
namespace google {
namespace protobuf {
}  // namespace protobuf
}  // namespace google

enum CentreChangeSceneInfoPBComp_eChangeGsStatus : int {
  CentreChangeSceneInfoPBComp_eChangeGsStatus_eLeaveGsScene = 0,
  CentreChangeSceneInfoPBComp_eChangeGsStatus_eEnterGsSceneSucceed = 1,
  CentreChangeSceneInfoPBComp_eChangeGsStatus_eGateEnterGsSceneSucceed = 2,
  CentreChangeSceneInfoPBComp_eChangeGsStatus_CentreChangeSceneInfoPBComp_eChangeGsStatus_INT_MIN_SENTINEL_DO_NOT_USE_ =
      std::numeric_limits<::int32_t>::min(),
  CentreChangeSceneInfoPBComp_eChangeGsStatus_CentreChangeSceneInfoPBComp_eChangeGsStatus_INT_MAX_SENTINEL_DO_NOT_USE_ =
      std::numeric_limits<::int32_t>::max(),
};

bool CentreChangeSceneInfoPBComp_eChangeGsStatus_IsValid(int value);
extern const uint32_t CentreChangeSceneInfoPBComp_eChangeGsStatus_internal_data_[];
constexpr CentreChangeSceneInfoPBComp_eChangeGsStatus CentreChangeSceneInfoPBComp_eChangeGsStatus_eChangeGsStatus_MIN = static_cast<CentreChangeSceneInfoPBComp_eChangeGsStatus>(0);
constexpr CentreChangeSceneInfoPBComp_eChangeGsStatus CentreChangeSceneInfoPBComp_eChangeGsStatus_eChangeGsStatus_MAX = static_cast<CentreChangeSceneInfoPBComp_eChangeGsStatus>(2);
constexpr int CentreChangeSceneInfoPBComp_eChangeGsStatus_eChangeGsStatus_ARRAYSIZE = 2 + 1;
const ::google::protobuf::EnumDescriptor*
CentreChangeSceneInfoPBComp_eChangeGsStatus_descriptor();
template <typename T>
const std::string& CentreChangeSceneInfoPBComp_eChangeGsStatus_Name(T value) {
  static_assert(std::is_same<T, CentreChangeSceneInfoPBComp_eChangeGsStatus>::value ||
                    std::is_integral<T>::value,
                "Incorrect type passed to eChangeGsStatus_Name().");
  return CentreChangeSceneInfoPBComp_eChangeGsStatus_Name(static_cast<CentreChangeSceneInfoPBComp_eChangeGsStatus>(value));
}
template <>
inline const std::string& CentreChangeSceneInfoPBComp_eChangeGsStatus_Name(CentreChangeSceneInfoPBComp_eChangeGsStatus value) {
  return ::google::protobuf::internal::NameOfDenseEnum<CentreChangeSceneInfoPBComp_eChangeGsStatus_descriptor,
                                                 0, 2>(
      static_cast<int>(value));
}
inline bool CentreChangeSceneInfoPBComp_eChangeGsStatus_Parse(absl::string_view name, CentreChangeSceneInfoPBComp_eChangeGsStatus* value) {
  return ::google::protobuf::internal::ParseNamedEnum<CentreChangeSceneInfoPBComp_eChangeGsStatus>(
      CentreChangeSceneInfoPBComp_eChangeGsStatus_descriptor(), name, value);
}
enum CentreChangeSceneInfoPBComp_eChangeGsType : int {
  CentreChangeSceneInfoPBComp_eChangeGsType_eSameGs = 0,
  CentreChangeSceneInfoPBComp_eChangeGsType_eDifferentGs = 1,
  CentreChangeSceneInfoPBComp_eChangeGsType_CentreChangeSceneInfoPBComp_eChangeGsType_INT_MIN_SENTINEL_DO_NOT_USE_ =
      std::numeric_limits<::int32_t>::min(),
  CentreChangeSceneInfoPBComp_eChangeGsType_CentreChangeSceneInfoPBComp_eChangeGsType_INT_MAX_SENTINEL_DO_NOT_USE_ =
      std::numeric_limits<::int32_t>::max(),
};

bool CentreChangeSceneInfoPBComp_eChangeGsType_IsValid(int value);
extern const uint32_t CentreChangeSceneInfoPBComp_eChangeGsType_internal_data_[];
constexpr CentreChangeSceneInfoPBComp_eChangeGsType CentreChangeSceneInfoPBComp_eChangeGsType_eChangeGsType_MIN = static_cast<CentreChangeSceneInfoPBComp_eChangeGsType>(0);
constexpr CentreChangeSceneInfoPBComp_eChangeGsType CentreChangeSceneInfoPBComp_eChangeGsType_eChangeGsType_MAX = static_cast<CentreChangeSceneInfoPBComp_eChangeGsType>(1);
constexpr int CentreChangeSceneInfoPBComp_eChangeGsType_eChangeGsType_ARRAYSIZE = 1 + 1;
const ::google::protobuf::EnumDescriptor*
CentreChangeSceneInfoPBComp_eChangeGsType_descriptor();
template <typename T>
const std::string& CentreChangeSceneInfoPBComp_eChangeGsType_Name(T value) {
  static_assert(std::is_same<T, CentreChangeSceneInfoPBComp_eChangeGsType>::value ||
                    std::is_integral<T>::value,
                "Incorrect type passed to eChangeGsType_Name().");
  return CentreChangeSceneInfoPBComp_eChangeGsType_Name(static_cast<CentreChangeSceneInfoPBComp_eChangeGsType>(value));
}
template <>
inline const std::string& CentreChangeSceneInfoPBComp_eChangeGsType_Name(CentreChangeSceneInfoPBComp_eChangeGsType value) {
  return ::google::protobuf::internal::NameOfDenseEnum<CentreChangeSceneInfoPBComp_eChangeGsType_descriptor,
                                                 0, 1>(
      static_cast<int>(value));
}
inline bool CentreChangeSceneInfoPBComp_eChangeGsType_Parse(absl::string_view name, CentreChangeSceneInfoPBComp_eChangeGsType* value) {
  return ::google::protobuf::internal::ParseNamedEnum<CentreChangeSceneInfoPBComp_eChangeGsType>(
      CentreChangeSceneInfoPBComp_eChangeGsType_descriptor(), name, value);
}

// ===================================================================


// -------------------------------------------------------------------

class SceneInfoPBComp_CreatorsEntry_DoNotUse final
    : public ::google::protobuf::internal::MapEntry<
          SceneInfoPBComp_CreatorsEntry_DoNotUse, ::uint64_t, bool,
          ::google::protobuf::internal::WireFormatLite::TYPE_UINT64,
          ::google::protobuf::internal::WireFormatLite::TYPE_BOOL> {
 public:
  using SuperType = ::google::protobuf::internal::MapEntry<
      SceneInfoPBComp_CreatorsEntry_DoNotUse, ::uint64_t, bool,
      ::google::protobuf::internal::WireFormatLite::TYPE_UINT64,
      ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>;
  SceneInfoPBComp_CreatorsEntry_DoNotUse();
  template <typename = void>
  explicit PROTOBUF_CONSTEXPR SceneInfoPBComp_CreatorsEntry_DoNotUse(
      ::google::protobuf::internal::ConstantInitialized);
  explicit SceneInfoPBComp_CreatorsEntry_DoNotUse(::google::protobuf::Arena* arena);
  static const SceneInfoPBComp_CreatorsEntry_DoNotUse* internal_default_instance() {
    return reinterpret_cast<const SceneInfoPBComp_CreatorsEntry_DoNotUse*>(
        &_SceneInfoPBComp_CreatorsEntry_DoNotUse_default_instance_);
  }
  static bool ValidateKey(void*) { return true; }
  static bool ValidateValue(void*) { return true; }
  ::google::protobuf::Metadata GetMetadata() const final;
  friend struct ::TableStruct_logic_2fcomponent_2fscene_5fcomp_2eproto;
};
// -------------------------------------------------------------------

class CentreChangeSceneInfoPBComp final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:CentreChangeSceneInfoPBComp) */ {
 public:
  inline CentreChangeSceneInfoPBComp() : CentreChangeSceneInfoPBComp(nullptr) {}
  ~CentreChangeSceneInfoPBComp() override;
  template <typename = void>
  explicit PROTOBUF_CONSTEXPR CentreChangeSceneInfoPBComp(
      ::google::protobuf::internal::ConstantInitialized);

  inline CentreChangeSceneInfoPBComp(const CentreChangeSceneInfoPBComp& from) : CentreChangeSceneInfoPBComp(nullptr, from) {}
  inline CentreChangeSceneInfoPBComp(CentreChangeSceneInfoPBComp&& from) noexcept
      : CentreChangeSceneInfoPBComp(nullptr, std::move(from)) {}
  inline CentreChangeSceneInfoPBComp& operator=(const CentreChangeSceneInfoPBComp& from) {
    CopyFrom(from);
    return *this;
  }
  inline CentreChangeSceneInfoPBComp& operator=(CentreChangeSceneInfoPBComp&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
#ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
#endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const CentreChangeSceneInfoPBComp& default_instance() {
    return *internal_default_instance();
  }
  static inline const CentreChangeSceneInfoPBComp* internal_default_instance() {
    return reinterpret_cast<const CentreChangeSceneInfoPBComp*>(
        &_CentreChangeSceneInfoPBComp_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 2;
  friend void swap(CentreChangeSceneInfoPBComp& a, CentreChangeSceneInfoPBComp& b) { a.Swap(&b); }
  inline void Swap(CentreChangeSceneInfoPBComp* other) {
    if (other == this) return;
#ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr && GetArena() == other->GetArena()) {
#else   // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
#endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(CentreChangeSceneInfoPBComp* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  CentreChangeSceneInfoPBComp* New(::google::protobuf::Arena* arena = nullptr) const final {
    return ::google::protobuf::Message::DefaultConstruct<CentreChangeSceneInfoPBComp>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const CentreChangeSceneInfoPBComp& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const CentreChangeSceneInfoPBComp& from) { CentreChangeSceneInfoPBComp::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  ::size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::google::protobuf::internal::ParseContext* ctx) final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(CentreChangeSceneInfoPBComp* other);
 private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() { return "CentreChangeSceneInfoPBComp"; }

 protected:
  explicit CentreChangeSceneInfoPBComp(::google::protobuf::Arena* arena);
  CentreChangeSceneInfoPBComp(::google::protobuf::Arena* arena, const CentreChangeSceneInfoPBComp& from);
  CentreChangeSceneInfoPBComp(::google::protobuf::Arena* arena, CentreChangeSceneInfoPBComp&& from) noexcept
      : CentreChangeSceneInfoPBComp(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::MessageLite::ClassData* GetClassData()
      const final;

 public:
  ::google::protobuf::Metadata GetMetadata() const final;
  // nested types ----------------------------------------------------
  using eChangeGsStatus = CentreChangeSceneInfoPBComp_eChangeGsStatus;
  static constexpr eChangeGsStatus eLeaveGsScene = CentreChangeSceneInfoPBComp_eChangeGsStatus_eLeaveGsScene;
  static constexpr eChangeGsStatus eEnterGsSceneSucceed = CentreChangeSceneInfoPBComp_eChangeGsStatus_eEnterGsSceneSucceed;
  static constexpr eChangeGsStatus eGateEnterGsSceneSucceed = CentreChangeSceneInfoPBComp_eChangeGsStatus_eGateEnterGsSceneSucceed;
  static inline bool eChangeGsStatus_IsValid(int value) {
    return CentreChangeSceneInfoPBComp_eChangeGsStatus_IsValid(value);
  }
  static constexpr eChangeGsStatus eChangeGsStatus_MIN = CentreChangeSceneInfoPBComp_eChangeGsStatus_eChangeGsStatus_MIN;
  static constexpr eChangeGsStatus eChangeGsStatus_MAX = CentreChangeSceneInfoPBComp_eChangeGsStatus_eChangeGsStatus_MAX;
  static constexpr int eChangeGsStatus_ARRAYSIZE = CentreChangeSceneInfoPBComp_eChangeGsStatus_eChangeGsStatus_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor* eChangeGsStatus_descriptor() {
    return CentreChangeSceneInfoPBComp_eChangeGsStatus_descriptor();
  }
  template <typename T>
  static inline const std::string& eChangeGsStatus_Name(T value) {
    return CentreChangeSceneInfoPBComp_eChangeGsStatus_Name(value);
  }
  static inline bool eChangeGsStatus_Parse(absl::string_view name, eChangeGsStatus* value) {
    return CentreChangeSceneInfoPBComp_eChangeGsStatus_Parse(name, value);
  }
  using eChangeGsType = CentreChangeSceneInfoPBComp_eChangeGsType;
  static constexpr eChangeGsType eSameGs = CentreChangeSceneInfoPBComp_eChangeGsType_eSameGs;
  static constexpr eChangeGsType eDifferentGs = CentreChangeSceneInfoPBComp_eChangeGsType_eDifferentGs;
  static inline bool eChangeGsType_IsValid(int value) {
    return CentreChangeSceneInfoPBComp_eChangeGsType_IsValid(value);
  }
  static constexpr eChangeGsType eChangeGsType_MIN = CentreChangeSceneInfoPBComp_eChangeGsType_eChangeGsType_MIN;
  static constexpr eChangeGsType eChangeGsType_MAX = CentreChangeSceneInfoPBComp_eChangeGsType_eChangeGsType_MAX;
  static constexpr int eChangeGsType_ARRAYSIZE = CentreChangeSceneInfoPBComp_eChangeGsType_eChangeGsType_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor* eChangeGsType_descriptor() {
    return CentreChangeSceneInfoPBComp_eChangeGsType_descriptor();
  }
  template <typename T>
  static inline const std::string& eChangeGsType_Name(T value) {
    return CentreChangeSceneInfoPBComp_eChangeGsType_Name(value);
  }
  static inline bool eChangeGsType_Parse(absl::string_view name, eChangeGsType* value) {
    return CentreChangeSceneInfoPBComp_eChangeGsType_Parse(name, value);
  }

  // accessors -------------------------------------------------------
  enum : int {
    kSceneConfidFieldNumber = 1,
    kGuidFieldNumber = 2,
    kDungenConfidFieldNumber = 3,
    kMirrorConfidFieldNumber = 4,
    kChangeSequenceFieldNumber = 5,
    kChangeGsTypeFieldNumber = 6,
    kChangeTimeFieldNumber = 8,
    kChangeGsStatusFieldNumber = 7,
    kIgnoreFullFieldNumber = 9,
    kProcessingFieldNumber = 10,
  };
  // uint32 scene_confid = 1;
  void clear_scene_confid() ;
  ::uint32_t scene_confid() const;
  void set_scene_confid(::uint32_t value);

  private:
  ::uint32_t _internal_scene_confid() const;
  void _internal_set_scene_confid(::uint32_t value);

  public:
  // uint32 guid = 2;
  void clear_guid() ;
  ::uint32_t guid() const;
  void set_guid(::uint32_t value);

  private:
  ::uint32_t _internal_guid() const;
  void _internal_set_guid(::uint32_t value);

  public:
  // uint32 dungen_confid = 3;
  void clear_dungen_confid() ;
  ::uint32_t dungen_confid() const;
  void set_dungen_confid(::uint32_t value);

  private:
  ::uint32_t _internal_dungen_confid() const;
  void _internal_set_dungen_confid(::uint32_t value);

  public:
  // uint32 mirror_confid = 4;
  void clear_mirror_confid() ;
  ::uint32_t mirror_confid() const;
  void set_mirror_confid(::uint32_t value);

  private:
  ::uint32_t _internal_mirror_confid() const;
  void _internal_set_mirror_confid(::uint32_t value);

  public:
  // uint32 change_sequence = 5;
  void clear_change_sequence() ;
  ::uint32_t change_sequence() const;
  void set_change_sequence(::uint32_t value);

  private:
  ::uint32_t _internal_change_sequence() const;
  void _internal_set_change_sequence(::uint32_t value);

  public:
  // uint32 change_gs_type = 6;
  void clear_change_gs_type() ;
  ::uint32_t change_gs_type() const;
  void set_change_gs_type(::uint32_t value);

  private:
  ::uint32_t _internal_change_gs_type() const;
  void _internal_set_change_gs_type(::uint32_t value);

  public:
  // uint64 change_time = 8;
  void clear_change_time() ;
  ::uint64_t change_time() const;
  void set_change_time(::uint64_t value);

  private:
  ::uint64_t _internal_change_time() const;
  void _internal_set_change_time(::uint64_t value);

  public:
  // uint32 change_gs_status = 7;
  void clear_change_gs_status() ;
  ::uint32_t change_gs_status() const;
  void set_change_gs_status(::uint32_t value);

  private:
  ::uint32_t _internal_change_gs_status() const;
  void _internal_set_change_gs_status(::uint32_t value);

  public:
  // bool ignore_full = 9;
  void clear_ignore_full() ;
  bool ignore_full() const;
  void set_ignore_full(bool value);

  private:
  bool _internal_ignore_full() const;
  void _internal_set_ignore_full(bool value);

  public:
  // bool processing = 10;
  void clear_processing() ;
  bool processing() const;
  void set_processing(bool value);

  private:
  bool _internal_processing() const;
  void _internal_set_processing(bool value);

  public:
  // @@protoc_insertion_point(class_scope:CentreChangeSceneInfoPBComp)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      4, 10, 0,
      0, 2>
      _table_;
  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from);
    ::uint32_t scene_confid_;
    ::uint32_t guid_;
    ::uint32_t dungen_confid_;
    ::uint32_t mirror_confid_;
    ::uint32_t change_sequence_;
    ::uint32_t change_gs_type_;
    ::uint64_t change_time_;
    ::uint32_t change_gs_status_;
    bool ignore_full_;
    bool processing_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_logic_2fcomponent_2fscene_5fcomp_2eproto;
};
// -------------------------------------------------------------------

class SceneInfoPBComp final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:SceneInfoPBComp) */ {
 public:
  inline SceneInfoPBComp() : SceneInfoPBComp(nullptr) {}
  ~SceneInfoPBComp() override;
  template <typename = void>
  explicit PROTOBUF_CONSTEXPR SceneInfoPBComp(
      ::google::protobuf::internal::ConstantInitialized);

  inline SceneInfoPBComp(const SceneInfoPBComp& from) : SceneInfoPBComp(nullptr, from) {}
  inline SceneInfoPBComp(SceneInfoPBComp&& from) noexcept
      : SceneInfoPBComp(nullptr, std::move(from)) {}
  inline SceneInfoPBComp& operator=(const SceneInfoPBComp& from) {
    CopyFrom(from);
    return *this;
  }
  inline SceneInfoPBComp& operator=(SceneInfoPBComp&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
#ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
#endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const SceneInfoPBComp& default_instance() {
    return *internal_default_instance();
  }
  static inline const SceneInfoPBComp* internal_default_instance() {
    return reinterpret_cast<const SceneInfoPBComp*>(
        &_SceneInfoPBComp_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 1;
  friend void swap(SceneInfoPBComp& a, SceneInfoPBComp& b) { a.Swap(&b); }
  inline void Swap(SceneInfoPBComp* other) {
    if (other == this) return;
#ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr && GetArena() == other->GetArena()) {
#else   // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
#endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(SceneInfoPBComp* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  SceneInfoPBComp* New(::google::protobuf::Arena* arena = nullptr) const final {
    return ::google::protobuf::Message::DefaultConstruct<SceneInfoPBComp>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const SceneInfoPBComp& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const SceneInfoPBComp& from) { SceneInfoPBComp::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  ::size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::google::protobuf::internal::ParseContext* ctx) final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(SceneInfoPBComp* other);
 private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() { return "SceneInfoPBComp"; }

 protected:
  explicit SceneInfoPBComp(::google::protobuf::Arena* arena);
  SceneInfoPBComp(::google::protobuf::Arena* arena, const SceneInfoPBComp& from);
  SceneInfoPBComp(::google::protobuf::Arena* arena, SceneInfoPBComp&& from) noexcept
      : SceneInfoPBComp(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::MessageLite::ClassData* GetClassData()
      const final;

 public:
  ::google::protobuf::Metadata GetMetadata() const final;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kCreatorsFieldNumber = 5,
    kSceneConfidFieldNumber = 1,
    kGuidFieldNumber = 2,
    kMirrorConfidFieldNumber = 3,
    kDungenConfidFieldNumber = 4,
  };
  // map<uint64, bool> creators = 5;
  int creators_size() const;
  private:
  int _internal_creators_size() const;

  public:
  void clear_creators() ;
  const ::google::protobuf::Map<::uint64_t, bool>& creators() const;
  ::google::protobuf::Map<::uint64_t, bool>* mutable_creators();

  private:
  const ::google::protobuf::Map<::uint64_t, bool>& _internal_creators() const;
  ::google::protobuf::Map<::uint64_t, bool>* _internal_mutable_creators();

  public:
  // uint32 scene_confid = 1;
  void clear_scene_confid() ;
  ::uint32_t scene_confid() const;
  void set_scene_confid(::uint32_t value);

  private:
  ::uint32_t _internal_scene_confid() const;
  void _internal_set_scene_confid(::uint32_t value);

  public:
  // uint32 guid = 2;
  void clear_guid() ;
  ::uint32_t guid() const;
  void set_guid(::uint32_t value);

  private:
  ::uint32_t _internal_guid() const;
  void _internal_set_guid(::uint32_t value);

  public:
  // uint32 mirror_confid = 3;
  void clear_mirror_confid() ;
  ::uint32_t mirror_confid() const;
  void set_mirror_confid(::uint32_t value);

  private:
  ::uint32_t _internal_mirror_confid() const;
  void _internal_set_mirror_confid(::uint32_t value);

  public:
  // uint32 dungen_confid = 4;
  void clear_dungen_confid() ;
  ::uint32_t dungen_confid() const;
  void set_dungen_confid(::uint32_t value);

  private:
  ::uint32_t _internal_dungen_confid() const;
  void _internal_set_dungen_confid(::uint32_t value);

  public:
  // @@protoc_insertion_point(class_scope:SceneInfoPBComp)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      2, 5, 1,
      0, 2>
      _table_;
  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from);
    ::google::protobuf::internal::MapField<SceneInfoPBComp_CreatorsEntry_DoNotUse, ::uint64_t, bool,
                      ::google::protobuf::internal::WireFormatLite::TYPE_UINT64,
                      ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>
        creators_;
    ::uint32_t scene_confid_;
    ::uint32_t guid_;
    ::uint32_t mirror_confid_;
    ::uint32_t dungen_confid_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_logic_2fcomponent_2fscene_5fcomp_2eproto;
};

// ===================================================================




// ===================================================================


#ifdef __GNUC__
#pragma GCC diagnostic push
#pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif  // __GNUC__
// -------------------------------------------------------------------

// -------------------------------------------------------------------

// SceneInfoPBComp

// uint32 scene_confid = 1;
inline void SceneInfoPBComp::clear_scene_confid() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.scene_confid_ = 0u;
}
inline ::uint32_t SceneInfoPBComp::scene_confid() const {
  // @@protoc_insertion_point(field_get:SceneInfoPBComp.scene_confid)
  return _internal_scene_confid();
}
inline void SceneInfoPBComp::set_scene_confid(::uint32_t value) {
  _internal_set_scene_confid(value);
  // @@protoc_insertion_point(field_set:SceneInfoPBComp.scene_confid)
}
inline ::uint32_t SceneInfoPBComp::_internal_scene_confid() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.scene_confid_;
}
inline void SceneInfoPBComp::_internal_set_scene_confid(::uint32_t value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.scene_confid_ = value;
}

// uint32 guid = 2;
inline void SceneInfoPBComp::clear_guid() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.guid_ = 0u;
}
inline ::uint32_t SceneInfoPBComp::guid() const {
  // @@protoc_insertion_point(field_get:SceneInfoPBComp.guid)
  return _internal_guid();
}
inline void SceneInfoPBComp::set_guid(::uint32_t value) {
  _internal_set_guid(value);
  // @@protoc_insertion_point(field_set:SceneInfoPBComp.guid)
}
inline ::uint32_t SceneInfoPBComp::_internal_guid() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.guid_;
}
inline void SceneInfoPBComp::_internal_set_guid(::uint32_t value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.guid_ = value;
}

// uint32 mirror_confid = 3;
inline void SceneInfoPBComp::clear_mirror_confid() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.mirror_confid_ = 0u;
}
inline ::uint32_t SceneInfoPBComp::mirror_confid() const {
  // @@protoc_insertion_point(field_get:SceneInfoPBComp.mirror_confid)
  return _internal_mirror_confid();
}
inline void SceneInfoPBComp::set_mirror_confid(::uint32_t value) {
  _internal_set_mirror_confid(value);
  // @@protoc_insertion_point(field_set:SceneInfoPBComp.mirror_confid)
}
inline ::uint32_t SceneInfoPBComp::_internal_mirror_confid() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.mirror_confid_;
}
inline void SceneInfoPBComp::_internal_set_mirror_confid(::uint32_t value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.mirror_confid_ = value;
}

// uint32 dungen_confid = 4;
inline void SceneInfoPBComp::clear_dungen_confid() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.dungen_confid_ = 0u;
}
inline ::uint32_t SceneInfoPBComp::dungen_confid() const {
  // @@protoc_insertion_point(field_get:SceneInfoPBComp.dungen_confid)
  return _internal_dungen_confid();
}
inline void SceneInfoPBComp::set_dungen_confid(::uint32_t value) {
  _internal_set_dungen_confid(value);
  // @@protoc_insertion_point(field_set:SceneInfoPBComp.dungen_confid)
}
inline ::uint32_t SceneInfoPBComp::_internal_dungen_confid() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.dungen_confid_;
}
inline void SceneInfoPBComp::_internal_set_dungen_confid(::uint32_t value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.dungen_confid_ = value;
}

// map<uint64, bool> creators = 5;
inline int SceneInfoPBComp::_internal_creators_size() const {
  return _internal_creators().size();
}
inline int SceneInfoPBComp::creators_size() const {
  return _internal_creators_size();
}
inline void SceneInfoPBComp::clear_creators() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.creators_.Clear();
}
inline const ::google::protobuf::Map<::uint64_t, bool>& SceneInfoPBComp::_internal_creators() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.creators_.GetMap();
}
inline const ::google::protobuf::Map<::uint64_t, bool>& SceneInfoPBComp::creators() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_map:SceneInfoPBComp.creators)
  return _internal_creators();
}
inline ::google::protobuf::Map<::uint64_t, bool>* SceneInfoPBComp::_internal_mutable_creators() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  return _impl_.creators_.MutableMap();
}
inline ::google::protobuf::Map<::uint64_t, bool>* SceneInfoPBComp::mutable_creators() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable_map:SceneInfoPBComp.creators)
  return _internal_mutable_creators();
}

// -------------------------------------------------------------------

// CentreChangeSceneInfoPBComp

// uint32 scene_confid = 1;
inline void CentreChangeSceneInfoPBComp::clear_scene_confid() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.scene_confid_ = 0u;
}
inline ::uint32_t CentreChangeSceneInfoPBComp::scene_confid() const {
  // @@protoc_insertion_point(field_get:CentreChangeSceneInfoPBComp.scene_confid)
  return _internal_scene_confid();
}
inline void CentreChangeSceneInfoPBComp::set_scene_confid(::uint32_t value) {
  _internal_set_scene_confid(value);
  // @@protoc_insertion_point(field_set:CentreChangeSceneInfoPBComp.scene_confid)
}
inline ::uint32_t CentreChangeSceneInfoPBComp::_internal_scene_confid() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.scene_confid_;
}
inline void CentreChangeSceneInfoPBComp::_internal_set_scene_confid(::uint32_t value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.scene_confid_ = value;
}

// uint32 guid = 2;
inline void CentreChangeSceneInfoPBComp::clear_guid() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.guid_ = 0u;
}
inline ::uint32_t CentreChangeSceneInfoPBComp::guid() const {
  // @@protoc_insertion_point(field_get:CentreChangeSceneInfoPBComp.guid)
  return _internal_guid();
}
inline void CentreChangeSceneInfoPBComp::set_guid(::uint32_t value) {
  _internal_set_guid(value);
  // @@protoc_insertion_point(field_set:CentreChangeSceneInfoPBComp.guid)
}
inline ::uint32_t CentreChangeSceneInfoPBComp::_internal_guid() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.guid_;
}
inline void CentreChangeSceneInfoPBComp::_internal_set_guid(::uint32_t value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.guid_ = value;
}

// uint32 dungen_confid = 3;
inline void CentreChangeSceneInfoPBComp::clear_dungen_confid() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.dungen_confid_ = 0u;
}
inline ::uint32_t CentreChangeSceneInfoPBComp::dungen_confid() const {
  // @@protoc_insertion_point(field_get:CentreChangeSceneInfoPBComp.dungen_confid)
  return _internal_dungen_confid();
}
inline void CentreChangeSceneInfoPBComp::set_dungen_confid(::uint32_t value) {
  _internal_set_dungen_confid(value);
  // @@protoc_insertion_point(field_set:CentreChangeSceneInfoPBComp.dungen_confid)
}
inline ::uint32_t CentreChangeSceneInfoPBComp::_internal_dungen_confid() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.dungen_confid_;
}
inline void CentreChangeSceneInfoPBComp::_internal_set_dungen_confid(::uint32_t value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.dungen_confid_ = value;
}

// uint32 mirror_confid = 4;
inline void CentreChangeSceneInfoPBComp::clear_mirror_confid() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.mirror_confid_ = 0u;
}
inline ::uint32_t CentreChangeSceneInfoPBComp::mirror_confid() const {
  // @@protoc_insertion_point(field_get:CentreChangeSceneInfoPBComp.mirror_confid)
  return _internal_mirror_confid();
}
inline void CentreChangeSceneInfoPBComp::set_mirror_confid(::uint32_t value) {
  _internal_set_mirror_confid(value);
  // @@protoc_insertion_point(field_set:CentreChangeSceneInfoPBComp.mirror_confid)
}
inline ::uint32_t CentreChangeSceneInfoPBComp::_internal_mirror_confid() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.mirror_confid_;
}
inline void CentreChangeSceneInfoPBComp::_internal_set_mirror_confid(::uint32_t value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.mirror_confid_ = value;
}

// uint32 change_sequence = 5;
inline void CentreChangeSceneInfoPBComp::clear_change_sequence() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.change_sequence_ = 0u;
}
inline ::uint32_t CentreChangeSceneInfoPBComp::change_sequence() const {
  // @@protoc_insertion_point(field_get:CentreChangeSceneInfoPBComp.change_sequence)
  return _internal_change_sequence();
}
inline void CentreChangeSceneInfoPBComp::set_change_sequence(::uint32_t value) {
  _internal_set_change_sequence(value);
  // @@protoc_insertion_point(field_set:CentreChangeSceneInfoPBComp.change_sequence)
}
inline ::uint32_t CentreChangeSceneInfoPBComp::_internal_change_sequence() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.change_sequence_;
}
inline void CentreChangeSceneInfoPBComp::_internal_set_change_sequence(::uint32_t value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.change_sequence_ = value;
}

// uint32 change_gs_type = 6;
inline void CentreChangeSceneInfoPBComp::clear_change_gs_type() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.change_gs_type_ = 0u;
}
inline ::uint32_t CentreChangeSceneInfoPBComp::change_gs_type() const {
  // @@protoc_insertion_point(field_get:CentreChangeSceneInfoPBComp.change_gs_type)
  return _internal_change_gs_type();
}
inline void CentreChangeSceneInfoPBComp::set_change_gs_type(::uint32_t value) {
  _internal_set_change_gs_type(value);
  // @@protoc_insertion_point(field_set:CentreChangeSceneInfoPBComp.change_gs_type)
}
inline ::uint32_t CentreChangeSceneInfoPBComp::_internal_change_gs_type() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.change_gs_type_;
}
inline void CentreChangeSceneInfoPBComp::_internal_set_change_gs_type(::uint32_t value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.change_gs_type_ = value;
}

// uint32 change_gs_status = 7;
inline void CentreChangeSceneInfoPBComp::clear_change_gs_status() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.change_gs_status_ = 0u;
}
inline ::uint32_t CentreChangeSceneInfoPBComp::change_gs_status() const {
  // @@protoc_insertion_point(field_get:CentreChangeSceneInfoPBComp.change_gs_status)
  return _internal_change_gs_status();
}
inline void CentreChangeSceneInfoPBComp::set_change_gs_status(::uint32_t value) {
  _internal_set_change_gs_status(value);
  // @@protoc_insertion_point(field_set:CentreChangeSceneInfoPBComp.change_gs_status)
}
inline ::uint32_t CentreChangeSceneInfoPBComp::_internal_change_gs_status() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.change_gs_status_;
}
inline void CentreChangeSceneInfoPBComp::_internal_set_change_gs_status(::uint32_t value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.change_gs_status_ = value;
}

// uint64 change_time = 8;
inline void CentreChangeSceneInfoPBComp::clear_change_time() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.change_time_ = ::uint64_t{0u};
}
inline ::uint64_t CentreChangeSceneInfoPBComp::change_time() const {
  // @@protoc_insertion_point(field_get:CentreChangeSceneInfoPBComp.change_time)
  return _internal_change_time();
}
inline void CentreChangeSceneInfoPBComp::set_change_time(::uint64_t value) {
  _internal_set_change_time(value);
  // @@protoc_insertion_point(field_set:CentreChangeSceneInfoPBComp.change_time)
}
inline ::uint64_t CentreChangeSceneInfoPBComp::_internal_change_time() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.change_time_;
}
inline void CentreChangeSceneInfoPBComp::_internal_set_change_time(::uint64_t value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.change_time_ = value;
}

// bool ignore_full = 9;
inline void CentreChangeSceneInfoPBComp::clear_ignore_full() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.ignore_full_ = false;
}
inline bool CentreChangeSceneInfoPBComp::ignore_full() const {
  // @@protoc_insertion_point(field_get:CentreChangeSceneInfoPBComp.ignore_full)
  return _internal_ignore_full();
}
inline void CentreChangeSceneInfoPBComp::set_ignore_full(bool value) {
  _internal_set_ignore_full(value);
  // @@protoc_insertion_point(field_set:CentreChangeSceneInfoPBComp.ignore_full)
}
inline bool CentreChangeSceneInfoPBComp::_internal_ignore_full() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.ignore_full_;
}
inline void CentreChangeSceneInfoPBComp::_internal_set_ignore_full(bool value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.ignore_full_ = value;
}

// bool processing = 10;
inline void CentreChangeSceneInfoPBComp::clear_processing() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.processing_ = false;
}
inline bool CentreChangeSceneInfoPBComp::processing() const {
  // @@protoc_insertion_point(field_get:CentreChangeSceneInfoPBComp.processing)
  return _internal_processing();
}
inline void CentreChangeSceneInfoPBComp::set_processing(bool value) {
  _internal_set_processing(value);
  // @@protoc_insertion_point(field_set:CentreChangeSceneInfoPBComp.processing)
}
inline bool CentreChangeSceneInfoPBComp::_internal_processing() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.processing_;
}
inline void CentreChangeSceneInfoPBComp::_internal_set_processing(bool value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.processing_ = value;
}

#ifdef __GNUC__
#pragma GCC diagnostic pop
#endif  // __GNUC__

// @@protoc_insertion_point(namespace_scope)


namespace google {
namespace protobuf {

template <>
struct is_proto_enum<::CentreChangeSceneInfoPBComp_eChangeGsStatus> : std::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor<::CentreChangeSceneInfoPBComp_eChangeGsStatus>() {
  return ::CentreChangeSceneInfoPBComp_eChangeGsStatus_descriptor();
}
template <>
struct is_proto_enum<::CentreChangeSceneInfoPBComp_eChangeGsType> : std::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor<::CentreChangeSceneInfoPBComp_eChangeGsType>() {
  return ::CentreChangeSceneInfoPBComp_eChangeGsType_descriptor();
}

}  // namespace protobuf
}  // namespace google

// @@protoc_insertion_point(global_scope)

#include "google/protobuf/port_undef.inc"

#endif  // GOOGLE_PROTOBUF_INCLUDED_logic_2fcomponent_2fscene_5fcomp_2eproto_2epb_2eh
