// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: logic/event/buff_event.proto
// Protobuf C++ Version: 5.26.1

#ifndef GOOGLE_PROTOBUF_INCLUDED_logic_2fevent_2fbuff_5fevent_2eproto_2epb_2eh
#define GOOGLE_PROTOBUF_INCLUDED_logic_2fevent_2fbuff_5fevent_2eproto_2epb_2eh

#include <limits>
#include <string>
#include <type_traits>
#include <utility>

#include "google/protobuf/port_def.inc"
#if PROTOBUF_VERSION != 5026001
#error "Protobuf C++ gencode is built with an incompatible version of"
#error "Protobuf C++ headers/runtime. See"
#error "https://protobuf.dev/support/cross-version-runtime-guarantee/#cpp"
#endif
#include "google/protobuf/port_undef.inc"
#include "google/protobuf/io/coded_stream.h"
#include "google/protobuf/arena.h"
#include "google/protobuf/arenastring.h"
#include "google/protobuf/generated_message_tctable_decl.h"
#include "google/protobuf/generated_message_util.h"
#include "google/protobuf/metadata_lite.h"
#include "google/protobuf/generated_message_reflection.h"
#include "google/protobuf/message.h"
#include "google/protobuf/repeated_field.h"  // IWYU pragma: export
#include "google/protobuf/extension_set.h"  // IWYU pragma: export
#include "google/protobuf/unknown_field_set.h"
// @@protoc_insertion_point(includes)

// Must be included last.
#include "google/protobuf/port_def.inc"

#define PROTOBUF_INTERNAL_EXPORT_logic_2fevent_2fbuff_5fevent_2eproto

namespace google {
namespace protobuf {
namespace internal {
class AnyMetadata;
}  // namespace internal
}  // namespace protobuf
}  // namespace google

// Internal implementation detail -- do not use these members.
struct TableStruct_logic_2fevent_2fbuff_5fevent_2eproto {
  static const ::uint32_t offsets[];
};
extern const ::google::protobuf::internal::DescriptorTable
    descriptor_table_logic_2fevent_2fbuff_5fevent_2eproto;
class BeforeGiveDamageEvent;
struct BeforeGiveDamageEventDefaultTypeInternal;
extern BeforeGiveDamageEventDefaultTypeInternal _BeforeGiveDamageEvent_default_instance_;
class SkillExecutedEvent;
struct SkillExecutedEventDefaultTypeInternal;
extern SkillExecutedEventDefaultTypeInternal _SkillExecutedEvent_default_instance_;
namespace google {
namespace protobuf {
}  // namespace protobuf
}  // namespace google


// ===================================================================


// -------------------------------------------------------------------

class SkillExecutedEvent final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:SkillExecutedEvent) */ {
 public:
  inline SkillExecutedEvent() : SkillExecutedEvent(nullptr) {}
  ~SkillExecutedEvent() override;
  template <typename = void>
  explicit PROTOBUF_CONSTEXPR SkillExecutedEvent(
      ::google::protobuf::internal::ConstantInitialized);

  inline SkillExecutedEvent(const SkillExecutedEvent& from) : SkillExecutedEvent(nullptr, from) {}
  inline SkillExecutedEvent(SkillExecutedEvent&& from) noexcept
      : SkillExecutedEvent(nullptr, std::move(from)) {}
  inline SkillExecutedEvent& operator=(const SkillExecutedEvent& from) {
    CopyFrom(from);
    return *this;
  }
  inline SkillExecutedEvent& operator=(SkillExecutedEvent&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
#ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
#endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const SkillExecutedEvent& default_instance() {
    return *internal_default_instance();
  }
  static inline const SkillExecutedEvent* internal_default_instance() {
    return reinterpret_cast<const SkillExecutedEvent*>(
        &_SkillExecutedEvent_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 0;
  friend void swap(SkillExecutedEvent& a, SkillExecutedEvent& b) { a.Swap(&b); }
  inline void Swap(SkillExecutedEvent* other) {
    if (other == this) return;
#ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr && GetArena() == other->GetArena()) {
#else   // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
#endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(SkillExecutedEvent* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  SkillExecutedEvent* New(::google::protobuf::Arena* arena = nullptr) const final {
    return ::google::protobuf::Message::DefaultConstruct<SkillExecutedEvent>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const SkillExecutedEvent& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const SkillExecutedEvent& from) { SkillExecutedEvent::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  ::size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::google::protobuf::internal::ParseContext* ctx) final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(SkillExecutedEvent* other);
 private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() { return "SkillExecutedEvent"; }

 protected:
  explicit SkillExecutedEvent(::google::protobuf::Arena* arena);
  SkillExecutedEvent(::google::protobuf::Arena* arena, const SkillExecutedEvent& from);
  SkillExecutedEvent(::google::protobuf::Arena* arena, SkillExecutedEvent&& from) noexcept
      : SkillExecutedEvent(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::MessageLite::ClassData* GetClassData()
      const final;

 public:
  ::google::protobuf::Metadata GetMetadata() const final;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kSkillIdFieldNumber = 1,
    kCasterIdFieldNumber = 2,
  };
  // uint64 skill_id = 1;
  void clear_skill_id() ;
  ::uint64_t skill_id() const;
  void set_skill_id(::uint64_t value);

  private:
  ::uint64_t _internal_skill_id() const;
  void _internal_set_skill_id(::uint64_t value);

  public:
  // uint64 caster_id = 2;
  void clear_caster_id() ;
  ::uint64_t caster_id() const;
  void set_caster_id(::uint64_t value);

  private:
  ::uint64_t _internal_caster_id() const;
  void _internal_set_caster_id(::uint64_t value);

  public:
  // @@protoc_insertion_point(class_scope:SkillExecutedEvent)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      1, 2, 0,
      0, 2>
      _table_;
  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from);
    ::uint64_t skill_id_;
    ::uint64_t caster_id_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_logic_2fevent_2fbuff_5fevent_2eproto;
};
// -------------------------------------------------------------------

class BeforeGiveDamageEvent final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:BeforeGiveDamageEvent) */ {
 public:
  inline BeforeGiveDamageEvent() : BeforeGiveDamageEvent(nullptr) {}
  ~BeforeGiveDamageEvent() override;
  template <typename = void>
  explicit PROTOBUF_CONSTEXPR BeforeGiveDamageEvent(
      ::google::protobuf::internal::ConstantInitialized);

  inline BeforeGiveDamageEvent(const BeforeGiveDamageEvent& from) : BeforeGiveDamageEvent(nullptr, from) {}
  inline BeforeGiveDamageEvent(BeforeGiveDamageEvent&& from) noexcept
      : BeforeGiveDamageEvent(nullptr, std::move(from)) {}
  inline BeforeGiveDamageEvent& operator=(const BeforeGiveDamageEvent& from) {
    CopyFrom(from);
    return *this;
  }
  inline BeforeGiveDamageEvent& operator=(BeforeGiveDamageEvent&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
#ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
#endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const BeforeGiveDamageEvent& default_instance() {
    return *internal_default_instance();
  }
  static inline const BeforeGiveDamageEvent* internal_default_instance() {
    return reinterpret_cast<const BeforeGiveDamageEvent*>(
        &_BeforeGiveDamageEvent_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 1;
  friend void swap(BeforeGiveDamageEvent& a, BeforeGiveDamageEvent& b) { a.Swap(&b); }
  inline void Swap(BeforeGiveDamageEvent* other) {
    if (other == this) return;
#ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr && GetArena() == other->GetArena()) {
#else   // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
#endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(BeforeGiveDamageEvent* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  BeforeGiveDamageEvent* New(::google::protobuf::Arena* arena = nullptr) const final {
    return ::google::protobuf::Message::DefaultConstruct<BeforeGiveDamageEvent>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const BeforeGiveDamageEvent& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const BeforeGiveDamageEvent& from) { BeforeGiveDamageEvent::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  ::size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::google::protobuf::internal::ParseContext* ctx) final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(BeforeGiveDamageEvent* other);
 private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() { return "BeforeGiveDamageEvent"; }

 protected:
  explicit BeforeGiveDamageEvent(::google::protobuf::Arena* arena);
  BeforeGiveDamageEvent(::google::protobuf::Arena* arena, const BeforeGiveDamageEvent& from);
  BeforeGiveDamageEvent(::google::protobuf::Arena* arena, BeforeGiveDamageEvent&& from) noexcept
      : BeforeGiveDamageEvent(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::MessageLite::ClassData* GetClassData()
      const final;

 public:
  ::google::protobuf::Metadata GetMetadata() const final;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kSkillIddFieldNumber = 1,
    kAttackerIdFieldNumber = 2,
    kReceiverIdFieldNumber = 3,
    kDamageAmountFieldNumber = 4,
    kDamageFlagsFieldNumber = 5,
  };
  // uint64 skill_idd = 1;
  void clear_skill_idd() ;
  ::uint64_t skill_idd() const;
  void set_skill_idd(::uint64_t value);

  private:
  ::uint64_t _internal_skill_idd() const;
  void _internal_set_skill_idd(::uint64_t value);

  public:
  // uint64 attacker_id = 2;
  void clear_attacker_id() ;
  ::uint64_t attacker_id() const;
  void set_attacker_id(::uint64_t value);

  private:
  ::uint64_t _internal_attacker_id() const;
  void _internal_set_attacker_id(::uint64_t value);

  public:
  // uint64 receiver_id = 3;
  void clear_receiver_id() ;
  ::uint64_t receiver_id() const;
  void set_receiver_id(::uint64_t value);

  private:
  ::uint64_t _internal_receiver_id() const;
  void _internal_set_receiver_id(::uint64_t value);

  public:
  // double damage_amount = 4;
  void clear_damage_amount() ;
  double damage_amount() const;
  void set_damage_amount(double value);

  private:
  double _internal_damage_amount() const;
  void _internal_set_damage_amount(double value);

  public:
  // uint32 damage_flags = 5;
  void clear_damage_flags() ;
  ::uint32_t damage_flags() const;
  void set_damage_flags(::uint32_t value);

  private:
  ::uint32_t _internal_damage_flags() const;
  void _internal_set_damage_flags(::uint32_t value);

  public:
  // @@protoc_insertion_point(class_scope:BeforeGiveDamageEvent)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      3, 5, 0,
      0, 2>
      _table_;
  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from);
    ::uint64_t skill_idd_;
    ::uint64_t attacker_id_;
    ::uint64_t receiver_id_;
    double damage_amount_;
    ::uint32_t damage_flags_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_logic_2fevent_2fbuff_5fevent_2eproto;
};

// ===================================================================




// ===================================================================


#ifdef __GNUC__
#pragma GCC diagnostic push
#pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif  // __GNUC__
// -------------------------------------------------------------------

// SkillExecutedEvent

// uint64 skill_id = 1;
inline void SkillExecutedEvent::clear_skill_id() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.skill_id_ = ::uint64_t{0u};
}
inline ::uint64_t SkillExecutedEvent::skill_id() const {
  // @@protoc_insertion_point(field_get:SkillExecutedEvent.skill_id)
  return _internal_skill_id();
}
inline void SkillExecutedEvent::set_skill_id(::uint64_t value) {
  _internal_set_skill_id(value);
  // @@protoc_insertion_point(field_set:SkillExecutedEvent.skill_id)
}
inline ::uint64_t SkillExecutedEvent::_internal_skill_id() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.skill_id_;
}
inline void SkillExecutedEvent::_internal_set_skill_id(::uint64_t value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.skill_id_ = value;
}

// uint64 caster_id = 2;
inline void SkillExecutedEvent::clear_caster_id() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.caster_id_ = ::uint64_t{0u};
}
inline ::uint64_t SkillExecutedEvent::caster_id() const {
  // @@protoc_insertion_point(field_get:SkillExecutedEvent.caster_id)
  return _internal_caster_id();
}
inline void SkillExecutedEvent::set_caster_id(::uint64_t value) {
  _internal_set_caster_id(value);
  // @@protoc_insertion_point(field_set:SkillExecutedEvent.caster_id)
}
inline ::uint64_t SkillExecutedEvent::_internal_caster_id() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.caster_id_;
}
inline void SkillExecutedEvent::_internal_set_caster_id(::uint64_t value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.caster_id_ = value;
}

// -------------------------------------------------------------------

// BeforeGiveDamageEvent

// uint64 skill_idd = 1;
inline void BeforeGiveDamageEvent::clear_skill_idd() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.skill_idd_ = ::uint64_t{0u};
}
inline ::uint64_t BeforeGiveDamageEvent::skill_idd() const {
  // @@protoc_insertion_point(field_get:BeforeGiveDamageEvent.skill_idd)
  return _internal_skill_idd();
}
inline void BeforeGiveDamageEvent::set_skill_idd(::uint64_t value) {
  _internal_set_skill_idd(value);
  // @@protoc_insertion_point(field_set:BeforeGiveDamageEvent.skill_idd)
}
inline ::uint64_t BeforeGiveDamageEvent::_internal_skill_idd() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.skill_idd_;
}
inline void BeforeGiveDamageEvent::_internal_set_skill_idd(::uint64_t value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.skill_idd_ = value;
}

// uint64 attacker_id = 2;
inline void BeforeGiveDamageEvent::clear_attacker_id() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.attacker_id_ = ::uint64_t{0u};
}
inline ::uint64_t BeforeGiveDamageEvent::attacker_id() const {
  // @@protoc_insertion_point(field_get:BeforeGiveDamageEvent.attacker_id)
  return _internal_attacker_id();
}
inline void BeforeGiveDamageEvent::set_attacker_id(::uint64_t value) {
  _internal_set_attacker_id(value);
  // @@protoc_insertion_point(field_set:BeforeGiveDamageEvent.attacker_id)
}
inline ::uint64_t BeforeGiveDamageEvent::_internal_attacker_id() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.attacker_id_;
}
inline void BeforeGiveDamageEvent::_internal_set_attacker_id(::uint64_t value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.attacker_id_ = value;
}

// uint64 receiver_id = 3;
inline void BeforeGiveDamageEvent::clear_receiver_id() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.receiver_id_ = ::uint64_t{0u};
}
inline ::uint64_t BeforeGiveDamageEvent::receiver_id() const {
  // @@protoc_insertion_point(field_get:BeforeGiveDamageEvent.receiver_id)
  return _internal_receiver_id();
}
inline void BeforeGiveDamageEvent::set_receiver_id(::uint64_t value) {
  _internal_set_receiver_id(value);
  // @@protoc_insertion_point(field_set:BeforeGiveDamageEvent.receiver_id)
}
inline ::uint64_t BeforeGiveDamageEvent::_internal_receiver_id() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.receiver_id_;
}
inline void BeforeGiveDamageEvent::_internal_set_receiver_id(::uint64_t value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.receiver_id_ = value;
}

// double damage_amount = 4;
inline void BeforeGiveDamageEvent::clear_damage_amount() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.damage_amount_ = 0;
}
inline double BeforeGiveDamageEvent::damage_amount() const {
  // @@protoc_insertion_point(field_get:BeforeGiveDamageEvent.damage_amount)
  return _internal_damage_amount();
}
inline void BeforeGiveDamageEvent::set_damage_amount(double value) {
  _internal_set_damage_amount(value);
  // @@protoc_insertion_point(field_set:BeforeGiveDamageEvent.damage_amount)
}
inline double BeforeGiveDamageEvent::_internal_damage_amount() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.damage_amount_;
}
inline void BeforeGiveDamageEvent::_internal_set_damage_amount(double value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.damage_amount_ = value;
}

// uint32 damage_flags = 5;
inline void BeforeGiveDamageEvent::clear_damage_flags() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.damage_flags_ = 0u;
}
inline ::uint32_t BeforeGiveDamageEvent::damage_flags() const {
  // @@protoc_insertion_point(field_get:BeforeGiveDamageEvent.damage_flags)
  return _internal_damage_flags();
}
inline void BeforeGiveDamageEvent::set_damage_flags(::uint32_t value) {
  _internal_set_damage_flags(value);
  // @@protoc_insertion_point(field_set:BeforeGiveDamageEvent.damage_flags)
}
inline ::uint32_t BeforeGiveDamageEvent::_internal_damage_flags() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.damage_flags_;
}
inline void BeforeGiveDamageEvent::_internal_set_damage_flags(::uint32_t value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.damage_flags_ = value;
}

#ifdef __GNUC__
#pragma GCC diagnostic pop
#endif  // __GNUC__

// @@protoc_insertion_point(namespace_scope)


// @@protoc_insertion_point(global_scope)

#include "google/protobuf/port_undef.inc"

#endif  // GOOGLE_PROTOBUF_INCLUDED_logic_2fevent_2fbuff_5fevent_2eproto_2epb_2eh
