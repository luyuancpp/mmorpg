// Generated by the protocol buffer compiler.  DO NOT EDIT!
// NO CHECKED-IN PROTOBUF GENCODE
// source: proto/db/db_task.proto
// Protobuf C++ Version: 5.29.0

#include "proto/db/db_task.pb.h"

#include <algorithm>
#include <type_traits>
#include "google/protobuf/io/coded_stream.h"
#include "google/protobuf/generated_message_tctable_impl.h"
#include "google/protobuf/extension_set.h"
#include "google/protobuf/generated_message_util.h"
#include "google/protobuf/wire_format_lite.h"
#include "google/protobuf/descriptor.h"
#include "google/protobuf/generated_message_reflection.h"
#include "google/protobuf/reflection_ops.h"
#include "google/protobuf/wire_format.h"
// @@protoc_insertion_point(includes)

// Must be included last.
#include "google/protobuf/port_def.inc"
PROTOBUF_PRAGMA_INIT_SEG
namespace _pb = ::google::protobuf;
namespace _pbi = ::google::protobuf::internal;
namespace _fl = ::google::protobuf::internal::field_layout;
namespace taskpb {

inline constexpr DBTask::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : where_case_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        op_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        msg_type_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        body_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        key_{::uint64_t{0u}},
        _cached_size_{0} {}

template <typename>
PROTOBUF_CONSTEXPR DBTask::DBTask(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct DBTaskDefaultTypeInternal {
  PROTOBUF_CONSTEXPR DBTaskDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~DBTaskDefaultTypeInternal() {}
  union {
    DBTask _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 DBTaskDefaultTypeInternal _DBTask_default_instance_;
}  // namespace taskpb
static constexpr const ::_pb::EnumDescriptor**
    file_level_enum_descriptors_proto_2fdb_2fdb_5ftask_2eproto = nullptr;
static constexpr const ::_pb::ServiceDescriptor**
    file_level_service_descriptors_proto_2fdb_2fdb_5ftask_2eproto = nullptr;
const ::uint32_t
    TableStruct_proto_2fdb_2fdb_5ftask_2eproto::offsets[] ABSL_ATTRIBUTE_SECTION_VARIABLE(
        protodesc_cold) = {
        ~0u,  // no _has_bits_
        PROTOBUF_FIELD_OFFSET(::taskpb::DBTask, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::taskpb::DBTask, _impl_.key_),
        PROTOBUF_FIELD_OFFSET(::taskpb::DBTask, _impl_.where_case_),
        PROTOBUF_FIELD_OFFSET(::taskpb::DBTask, _impl_.op_),
        PROTOBUF_FIELD_OFFSET(::taskpb::DBTask, _impl_.msg_type_),
        PROTOBUF_FIELD_OFFSET(::taskpb::DBTask, _impl_.body_),
};

static const ::_pbi::MigrationSchema
    schemas[] ABSL_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
        {0, -1, -1, sizeof(::taskpb::DBTask)},
};
static const ::_pb::Message* const file_default_instances[] = {
    &::taskpb::_DBTask_default_instance_._instance,
};
const char descriptor_table_protodef_proto_2fdb_2fdb_5ftask_2eproto[] ABSL_ATTRIBUTE_SECTION_VARIABLE(
    protodesc_cold) = {
    "\n\026proto/db/db_task.proto\022\006taskpb\"U\n\006DBTa"
    "sk\022\013\n\003key\030\001 \001(\004\022\022\n\nwhere_case\030\002 \001(\t\022\n\n\002o"
    "p\030\003 \001(\t\022\020\n\010msg_type\030\004 \001(\t\022\014\n\004body\030\005 \001(\014B"
    "\013Z\tpb/taskpbb\006proto3"
};
static ::absl::once_flag descriptor_table_proto_2fdb_2fdb_5ftask_2eproto_once;
PROTOBUF_CONSTINIT const ::_pbi::DescriptorTable descriptor_table_proto_2fdb_2fdb_5ftask_2eproto = {
    false,
    false,
    140,
    descriptor_table_protodef_proto_2fdb_2fdb_5ftask_2eproto,
    "proto/db/db_task.proto",
    &descriptor_table_proto_2fdb_2fdb_5ftask_2eproto_once,
    nullptr,
    0,
    1,
    schemas,
    file_default_instances,
    TableStruct_proto_2fdb_2fdb_5ftask_2eproto::offsets,
    file_level_enum_descriptors_proto_2fdb_2fdb_5ftask_2eproto,
    file_level_service_descriptors_proto_2fdb_2fdb_5ftask_2eproto,
};
namespace taskpb {
// ===================================================================

class DBTask::_Internal {
 public:
};

DBTask::DBTask(::google::protobuf::Arena* arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:taskpb.DBTask)
}
inline PROTOBUF_NDEBUG_INLINE DBTask::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from, const ::taskpb::DBTask& from_msg)
      : where_case_(arena, from.where_case_),
        op_(arena, from.op_),
        msg_type_(arena, from.msg_type_),
        body_(arena, from.body_),
        _cached_size_{0} {}

DBTask::DBTask(
    ::google::protobuf::Arena* arena,
    const DBTask& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  DBTask* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);
  _impl_.key_ = from._impl_.key_;

  // @@protoc_insertion_point(copy_constructor:taskpb.DBTask)
}
inline PROTOBUF_NDEBUG_INLINE DBTask::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : where_case_(arena),
        op_(arena),
        msg_type_(arena),
        body_(arena),
        _cached_size_{0} {}

inline void DBTask::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  _impl_.key_ = {};
}
DBTask::~DBTask() {
  // @@protoc_insertion_point(destructor:taskpb.DBTask)
  SharedDtor(*this);
}
inline void DBTask::SharedDtor(MessageLite& self) {
  DBTask& this_ = static_cast<DBTask&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  this_._impl_.where_case_.Destroy();
  this_._impl_.op_.Destroy();
  this_._impl_.msg_type_.Destroy();
  this_._impl_.body_.Destroy();
  this_._impl_.~Impl_();
}

inline void* DBTask::PlacementNew_(const void*, void* mem,
                                        ::google::protobuf::Arena* arena) {
  return ::new (mem) DBTask(arena);
}
constexpr auto DBTask::InternalNewImpl_() {
  return ::google::protobuf::internal::MessageCreator::CopyInit(sizeof(DBTask),
                                            alignof(DBTask));
}
PROTOBUF_CONSTINIT
PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::google::protobuf::internal::ClassDataFull DBTask::_class_data_ = {
    ::google::protobuf::internal::ClassData{
        &_DBTask_default_instance_._instance,
        &_table_.header,
        nullptr,  // OnDemandRegisterArenaDtor
        nullptr,  // IsInitialized
        &DBTask::MergeImpl,
        ::google::protobuf::Message::GetNewImpl<DBTask>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
        &DBTask::SharedDtor,
        ::google::protobuf::Message::GetClearImpl<DBTask>(), &DBTask::ByteSizeLong,
            &DBTask::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
        PROTOBUF_FIELD_OFFSET(DBTask, _impl_._cached_size_),
        false,
    },
    &DBTask::kDescriptorMethods,
    &descriptor_table_proto_2fdb_2fdb_5ftask_2eproto,
    nullptr,  // tracker
};
const ::google::protobuf::internal::ClassData* DBTask::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_class_data_.tc_table);
  return _class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<3, 5, 0, 42, 2> DBTask::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    5, 56,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967264,  // skipmap
    offsetof(decltype(_table_), field_entries),
    5,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    _class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::taskpb::DBTask>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
    // uint64 key = 1;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint64_t, offsetof(DBTask, _impl_.key_), 63>(),
     {8, 63, 0, PROTOBUF_FIELD_OFFSET(DBTask, _impl_.key_)}},
    // string where_case = 2;
    {::_pbi::TcParser::FastUS1,
     {18, 63, 0, PROTOBUF_FIELD_OFFSET(DBTask, _impl_.where_case_)}},
    // string op = 3;
    {::_pbi::TcParser::FastUS1,
     {26, 63, 0, PROTOBUF_FIELD_OFFSET(DBTask, _impl_.op_)}},
    // string msg_type = 4;
    {::_pbi::TcParser::FastUS1,
     {34, 63, 0, PROTOBUF_FIELD_OFFSET(DBTask, _impl_.msg_type_)}},
    // bytes body = 5;
    {::_pbi::TcParser::FastBS1,
     {42, 63, 0, PROTOBUF_FIELD_OFFSET(DBTask, _impl_.body_)}},
    {::_pbi::TcParser::MiniParse, {}},
    {::_pbi::TcParser::MiniParse, {}},
  }}, {{
    65535, 65535
  }}, {{
    // uint64 key = 1;
    {PROTOBUF_FIELD_OFFSET(DBTask, _impl_.key_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUInt64)},
    // string where_case = 2;
    {PROTOBUF_FIELD_OFFSET(DBTask, _impl_.where_case_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // string op = 3;
    {PROTOBUF_FIELD_OFFSET(DBTask, _impl_.op_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // string msg_type = 4;
    {PROTOBUF_FIELD_OFFSET(DBTask, _impl_.msg_type_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // bytes body = 5;
    {PROTOBUF_FIELD_OFFSET(DBTask, _impl_.body_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kBytes | ::_fl::kRepAString)},
  }},
  // no aux_entries
  {{
    "\15\0\12\2\10\0\0\0"
    "taskpb.DBTask"
    "where_case"
    "op"
    "msg_type"
  }},
};

PROTOBUF_NOINLINE void DBTask::Clear() {
// @@protoc_insertion_point(message_clear_start:taskpb.DBTask)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.where_case_.ClearToEmpty();
  _impl_.op_.ClearToEmpty();
  _impl_.msg_type_.ClearToEmpty();
  _impl_.body_.ClearToEmpty();
  _impl_.key_ = ::uint64_t{0u};
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::uint8_t* DBTask::_InternalSerialize(
            const MessageLite& base, ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) {
          const DBTask& this_ = static_cast<const DBTask&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::uint8_t* DBTask::_InternalSerialize(
            ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) const {
          const DBTask& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(serialize_to_array_start:taskpb.DBTask)
          ::uint32_t cached_has_bits = 0;
          (void)cached_has_bits;

          // uint64 key = 1;
          if (this_._internal_key() != 0) {
            target = stream->EnsureSpace(target);
            target = ::_pbi::WireFormatLite::WriteUInt64ToArray(
                1, this_._internal_key(), target);
          }

          // string where_case = 2;
          if (!this_._internal_where_case().empty()) {
            const std::string& _s = this_._internal_where_case();
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "taskpb.DBTask.where_case");
            target = stream->WriteStringMaybeAliased(2, _s, target);
          }

          // string op = 3;
          if (!this_._internal_op().empty()) {
            const std::string& _s = this_._internal_op();
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "taskpb.DBTask.op");
            target = stream->WriteStringMaybeAliased(3, _s, target);
          }

          // string msg_type = 4;
          if (!this_._internal_msg_type().empty()) {
            const std::string& _s = this_._internal_msg_type();
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "taskpb.DBTask.msg_type");
            target = stream->WriteStringMaybeAliased(4, _s, target);
          }

          // bytes body = 5;
          if (!this_._internal_body().empty()) {
            const std::string& _s = this_._internal_body();
            target = stream->WriteBytesMaybeAliased(5, _s, target);
          }

          if (PROTOBUF_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
            target =
                ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
                    this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
          }
          // @@protoc_insertion_point(serialize_to_array_end:taskpb.DBTask)
          return target;
        }

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::size_t DBTask::ByteSizeLong(const MessageLite& base) {
          const DBTask& this_ = static_cast<const DBTask&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::size_t DBTask::ByteSizeLong() const {
          const DBTask& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(message_byte_size_start:taskpb.DBTask)
          ::size_t total_size = 0;

          ::uint32_t cached_has_bits = 0;
          // Prevent compiler warnings about cached_has_bits being unused
          (void)cached_has_bits;

          ::_pbi::Prefetch5LinesFrom7Lines(&this_);
           {
            // string where_case = 2;
            if (!this_._internal_where_case().empty()) {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                              this_._internal_where_case());
            }
            // string op = 3;
            if (!this_._internal_op().empty()) {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                              this_._internal_op());
            }
            // string msg_type = 4;
            if (!this_._internal_msg_type().empty()) {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                              this_._internal_msg_type());
            }
            // bytes body = 5;
            if (!this_._internal_body().empty()) {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::BytesSize(
                                              this_._internal_body());
            }
            // uint64 key = 1;
            if (this_._internal_key() != 0) {
              total_size += ::_pbi::WireFormatLite::UInt64SizePlusOne(
                  this_._internal_key());
            }
          }
          return this_.MaybeComputeUnknownFieldsSize(total_size,
                                                     &this_._impl_._cached_size_);
        }

void DBTask::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<DBTask*>(&to_msg);
  auto& from = static_cast<const DBTask&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:taskpb.DBTask)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_where_case().empty()) {
    _this->_internal_set_where_case(from._internal_where_case());
  }
  if (!from._internal_op().empty()) {
    _this->_internal_set_op(from._internal_op());
  }
  if (!from._internal_msg_type().empty()) {
    _this->_internal_set_msg_type(from._internal_msg_type());
  }
  if (!from._internal_body().empty()) {
    _this->_internal_set_body(from._internal_body());
  }
  if (from._internal_key() != 0) {
    _this->_impl_.key_ = from._impl_.key_;
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void DBTask::CopyFrom(const DBTask& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:taskpb.DBTask)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void DBTask::InternalSwap(DBTask* PROTOBUF_RESTRICT other) {
  using std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.where_case_, &other->_impl_.where_case_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.op_, &other->_impl_.op_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.msg_type_, &other->_impl_.msg_type_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.body_, &other->_impl_.body_, arena);
        swap(_impl_.key_, other->_impl_.key_);
}

::google::protobuf::Metadata DBTask::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// @@protoc_insertion_point(namespace_scope)
}  // namespace taskpb
namespace google {
namespace protobuf {
}  // namespace protobuf
}  // namespace google
// @@protoc_insertion_point(global_scope)
PROTOBUF_ATTRIBUTE_INIT_PRIORITY2 static ::std::false_type
    _static_init2_ PROTOBUF_UNUSED =
        (::_pbi::AddDescriptors(&descriptor_table_proto_2fdb_2fdb_5ftask_2eproto),
         ::std::false_type{});
#include "google/protobuf/port_undef.inc"
