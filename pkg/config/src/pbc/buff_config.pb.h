// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: buff_config.proto
// Protobuf C++ Version: 5.26.1

#ifndef GOOGLE_PROTOBUF_INCLUDED_buff_5fconfig_2eproto_2epb_2eh
#define GOOGLE_PROTOBUF_INCLUDED_buff_5fconfig_2eproto_2epb_2eh

#include <limits>
#include <string>
#include <type_traits>
#include <utility>

#include "google/protobuf/port_def.inc"
#if PROTOBUF_VERSION != 5026001
#error "Protobuf C++ gencode is built with an incompatible version of"
#error "Protobuf C++ headers/runtime. See"
#error "https://protobuf.dev/support/cross-version-runtime-guarantee/#cpp"
#endif
#include "google/protobuf/port_undef.inc"
#include "google/protobuf/io/coded_stream.h"
#include "google/protobuf/arena.h"
#include "google/protobuf/arenastring.h"
#include "google/protobuf/generated_message_tctable_decl.h"
#include "google/protobuf/generated_message_util.h"
#include "google/protobuf/metadata_lite.h"
#include "google/protobuf/generated_message_reflection.h"
#include "google/protobuf/message.h"
#include "google/protobuf/repeated_field.h"  // IWYU pragma: export
#include "google/protobuf/extension_set.h"  // IWYU pragma: export
#include "google/protobuf/map.h"  // IWYU pragma: export
#include "google/protobuf/map_entry.h"
#include "google/protobuf/map_field_inl.h"
#include "google/protobuf/unknown_field_set.h"
// @@protoc_insertion_point(includes)

// Must be included last.
#include "google/protobuf/port_def.inc"

#define PROTOBUF_INTERNAL_EXPORT_buff_5fconfig_2eproto

namespace google {
namespace protobuf {
namespace internal {
class AnyMetadata;
}  // namespace internal
}  // namespace protobuf
}  // namespace google

// Internal implementation detail -- do not use these members.
struct TableStruct_buff_5fconfig_2eproto {
  static const ::uint32_t offsets[];
};
extern const ::google::protobuf::internal::DescriptorTable
    descriptor_table_buff_5fconfig_2eproto;
class BuffTable;
struct BuffTableDefaultTypeInternal;
extern BuffTableDefaultTypeInternal _BuffTable_default_instance_;
class BuffTable_ImmunetagEntry_DoNotUse;
struct BuffTable_ImmunetagEntry_DoNotUseDefaultTypeInternal;
extern BuffTable_ImmunetagEntry_DoNotUseDefaultTypeInternal _BuffTable_ImmunetagEntry_DoNotUse_default_instance_;
class BuffTable_TagEntry_DoNotUse;
struct BuffTable_TagEntry_DoNotUseDefaultTypeInternal;
extern BuffTable_TagEntry_DoNotUseDefaultTypeInternal _BuffTable_TagEntry_DoNotUse_default_instance_;
class BuffTabledData;
struct BuffTabledDataDefaultTypeInternal;
extern BuffTabledDataDefaultTypeInternal _BuffTabledData_default_instance_;
namespace google {
namespace protobuf {
}  // namespace protobuf
}  // namespace google


// ===================================================================


// -------------------------------------------------------------------

class BuffTable_TagEntry_DoNotUse final
    : public ::google::protobuf::internal::MapEntry<
          BuffTable_TagEntry_DoNotUse, std::string, bool,
          ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
          ::google::protobuf::internal::WireFormatLite::TYPE_BOOL> {
 public:
  using SuperType = ::google::protobuf::internal::MapEntry<
      BuffTable_TagEntry_DoNotUse, std::string, bool,
      ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
      ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>;
  BuffTable_TagEntry_DoNotUse();
  template <typename = void>
  explicit PROTOBUF_CONSTEXPR BuffTable_TagEntry_DoNotUse(
      ::google::protobuf::internal::ConstantInitialized);
  explicit BuffTable_TagEntry_DoNotUse(::google::protobuf::Arena* arena);
  static const BuffTable_TagEntry_DoNotUse* internal_default_instance() {
    return reinterpret_cast<const BuffTable_TagEntry_DoNotUse*>(
        &_BuffTable_TagEntry_DoNotUse_default_instance_);
  }
  static bool ValidateKey(std::string* s) {
    return ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(s->data(), static_cast<int>(s->size()), ::google::protobuf::internal::WireFormatLite::PARSE, "BuffTable.TagEntry.key");
 }
  static bool ValidateValue(void*) { return true; }
  ::google::protobuf::Metadata GetMetadata() const final;
  friend struct ::TableStruct_buff_5fconfig_2eproto;
};
// -------------------------------------------------------------------

class BuffTable_ImmunetagEntry_DoNotUse final
    : public ::google::protobuf::internal::MapEntry<
          BuffTable_ImmunetagEntry_DoNotUse, std::string, bool,
          ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
          ::google::protobuf::internal::WireFormatLite::TYPE_BOOL> {
 public:
  using SuperType = ::google::protobuf::internal::MapEntry<
      BuffTable_ImmunetagEntry_DoNotUse, std::string, bool,
      ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
      ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>;
  BuffTable_ImmunetagEntry_DoNotUse();
  template <typename = void>
  explicit PROTOBUF_CONSTEXPR BuffTable_ImmunetagEntry_DoNotUse(
      ::google::protobuf::internal::ConstantInitialized);
  explicit BuffTable_ImmunetagEntry_DoNotUse(::google::protobuf::Arena* arena);
  static const BuffTable_ImmunetagEntry_DoNotUse* internal_default_instance() {
    return reinterpret_cast<const BuffTable_ImmunetagEntry_DoNotUse*>(
        &_BuffTable_ImmunetagEntry_DoNotUse_default_instance_);
  }
  static bool ValidateKey(std::string* s) {
    return ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(s->data(), static_cast<int>(s->size()), ::google::protobuf::internal::WireFormatLite::PARSE, "BuffTable.ImmunetagEntry.key");
 }
  static bool ValidateValue(void*) { return true; }
  ::google::protobuf::Metadata GetMetadata() const final;
  friend struct ::TableStruct_buff_5fconfig_2eproto;
};
// -------------------------------------------------------------------

class BuffTable final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:BuffTable) */ {
 public:
  inline BuffTable() : BuffTable(nullptr) {}
  ~BuffTable() override;
  template <typename = void>
  explicit PROTOBUF_CONSTEXPR BuffTable(
      ::google::protobuf::internal::ConstantInitialized);

  inline BuffTable(const BuffTable& from) : BuffTable(nullptr, from) {}
  inline BuffTable(BuffTable&& from) noexcept
      : BuffTable(nullptr, std::move(from)) {}
  inline BuffTable& operator=(const BuffTable& from) {
    CopyFrom(from);
    return *this;
  }
  inline BuffTable& operator=(BuffTable&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
#ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
#endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const BuffTable& default_instance() {
    return *internal_default_instance();
  }
  static inline const BuffTable* internal_default_instance() {
    return reinterpret_cast<const BuffTable*>(
        &_BuffTable_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 2;
  friend void swap(BuffTable& a, BuffTable& b) { a.Swap(&b); }
  inline void Swap(BuffTable* other) {
    if (other == this) return;
#ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr && GetArena() == other->GetArena()) {
#else   // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
#endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(BuffTable* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  BuffTable* New(::google::protobuf::Arena* arena = nullptr) const final {
    return ::google::protobuf::Message::DefaultConstruct<BuffTable>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const BuffTable& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const BuffTable& from) { BuffTable::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  ::size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::google::protobuf::internal::ParseContext* ctx) final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(BuffTable* other);
 private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() { return "BuffTable"; }

 protected:
  explicit BuffTable(::google::protobuf::Arena* arena);
  BuffTable(::google::protobuf::Arena* arena, const BuffTable& from);
  BuffTable(::google::protobuf::Arena* arena, BuffTable&& from) noexcept
      : BuffTable(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::MessageLite::ClassData* GetClassData()
      const final;

 public:
  ::google::protobuf::Metadata GetMetadata() const final;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kTagFieldNumber = 3,
    kImmunetagFieldNumber = 4,
    kIntervaleffectFieldNumber = 11,
    kIdFieldNumber = 1,
    kNocasterFieldNumber = 2,
    kLevelFieldNumber = 5,
    kMaxlayerFieldNumber = 6,
    kDurationFieldNumber = 7,
    kForceinterruptFieldNumber = 8,
    kIntervalFieldNumber = 9,
    kIntervalcountFieldNumber = 10,
  };
  // map<string, bool> tag = 3;
  int tag_size() const;
  private:
  int _internal_tag_size() const;

  public:
  void clear_tag() ;
  const ::google::protobuf::Map<std::string, bool>& tag() const;
  ::google::protobuf::Map<std::string, bool>* mutable_tag();

  private:
  const ::google::protobuf::Map<std::string, bool>& _internal_tag() const;
  ::google::protobuf::Map<std::string, bool>* _internal_mutable_tag();

  public:
  // map<string, bool> immunetag = 4;
  int immunetag_size() const;
  private:
  int _internal_immunetag_size() const;

  public:
  void clear_immunetag() ;
  const ::google::protobuf::Map<std::string, bool>& immunetag() const;
  ::google::protobuf::Map<std::string, bool>* mutable_immunetag();

  private:
  const ::google::protobuf::Map<std::string, bool>& _internal_immunetag() const;
  ::google::protobuf::Map<std::string, bool>* _internal_mutable_immunetag();

  public:
  // repeated double intervaleffect = 11;
  int intervaleffect_size() const;
  private:
  int _internal_intervaleffect_size() const;

  public:
  void clear_intervaleffect() ;
  double intervaleffect(int index) const;
  void set_intervaleffect(int index, double value);
  void add_intervaleffect(double value);
  const ::google::protobuf::RepeatedField<double>& intervaleffect() const;
  ::google::protobuf::RepeatedField<double>* mutable_intervaleffect();

  private:
  const ::google::protobuf::RepeatedField<double>& _internal_intervaleffect() const;
  ::google::protobuf::RepeatedField<double>* _internal_mutable_intervaleffect();

  public:
  // uint32 id = 1;
  void clear_id() ;
  ::uint32_t id() const;
  void set_id(::uint32_t value);

  private:
  ::uint32_t _internal_id() const;
  void _internal_set_id(::uint32_t value);

  public:
  // uint32 nocaster = 2;
  void clear_nocaster() ;
  ::uint32_t nocaster() const;
  void set_nocaster(::uint32_t value);

  private:
  ::uint32_t _internal_nocaster() const;
  void _internal_set_nocaster(::uint32_t value);

  public:
  // uint32 level = 5;
  void clear_level() ;
  ::uint32_t level() const;
  void set_level(::uint32_t value);

  private:
  ::uint32_t _internal_level() const;
  void _internal_set_level(::uint32_t value);

  public:
  // uint32 maxlayer = 6;
  void clear_maxlayer() ;
  ::uint32_t maxlayer() const;
  void set_maxlayer(::uint32_t value);

  private:
  ::uint32_t _internal_maxlayer() const;
  void _internal_set_maxlayer(::uint32_t value);

  public:
  // uint32 duration = 7;
  void clear_duration() ;
  ::uint32_t duration() const;
  void set_duration(::uint32_t value);

  private:
  ::uint32_t _internal_duration() const;
  void _internal_set_duration(::uint32_t value);

  public:
  // uint32 forceinterrupt = 8;
  void clear_forceinterrupt() ;
  ::uint32_t forceinterrupt() const;
  void set_forceinterrupt(::uint32_t value);

  private:
  ::uint32_t _internal_forceinterrupt() const;
  void _internal_set_forceinterrupt(::uint32_t value);

  public:
  // double interval = 9;
  void clear_interval() ;
  double interval() const;
  void set_interval(double value);

  private:
  double _internal_interval() const;
  void _internal_set_interval(double value);

  public:
  // uint32 intervalcount = 10;
  void clear_intervalcount() ;
  ::uint32_t intervalcount() const;
  void set_intervalcount(::uint32_t value);

  private:
  ::uint32_t _internal_intervalcount() const;
  void _internal_set_intervalcount(::uint32_t value);

  public:
  // @@protoc_insertion_point(class_scope:BuffTable)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      4, 11, 2,
      38, 2>
      _table_;
  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from);
    ::google::protobuf::internal::MapField<BuffTable_TagEntry_DoNotUse, std::string, bool,
                      ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
                      ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>
        tag_;
    ::google::protobuf::internal::MapField<BuffTable_ImmunetagEntry_DoNotUse, std::string, bool,
                      ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
                      ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>
        immunetag_;
    ::google::protobuf::RepeatedField<double> intervaleffect_;
    ::uint32_t id_;
    ::uint32_t nocaster_;
    ::uint32_t level_;
    ::uint32_t maxlayer_;
    ::uint32_t duration_;
    ::uint32_t forceinterrupt_;
    double interval_;
    ::uint32_t intervalcount_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_buff_5fconfig_2eproto;
};
// -------------------------------------------------------------------

class BuffTabledData final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:BuffTabledData) */ {
 public:
  inline BuffTabledData() : BuffTabledData(nullptr) {}
  ~BuffTabledData() override;
  template <typename = void>
  explicit PROTOBUF_CONSTEXPR BuffTabledData(
      ::google::protobuf::internal::ConstantInitialized);

  inline BuffTabledData(const BuffTabledData& from) : BuffTabledData(nullptr, from) {}
  inline BuffTabledData(BuffTabledData&& from) noexcept
      : BuffTabledData(nullptr, std::move(from)) {}
  inline BuffTabledData& operator=(const BuffTabledData& from) {
    CopyFrom(from);
    return *this;
  }
  inline BuffTabledData& operator=(BuffTabledData&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
#ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
#endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const BuffTabledData& default_instance() {
    return *internal_default_instance();
  }
  static inline const BuffTabledData* internal_default_instance() {
    return reinterpret_cast<const BuffTabledData*>(
        &_BuffTabledData_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 3;
  friend void swap(BuffTabledData& a, BuffTabledData& b) { a.Swap(&b); }
  inline void Swap(BuffTabledData* other) {
    if (other == this) return;
#ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr && GetArena() == other->GetArena()) {
#else   // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
#endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(BuffTabledData* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  BuffTabledData* New(::google::protobuf::Arena* arena = nullptr) const final {
    return ::google::protobuf::Message::DefaultConstruct<BuffTabledData>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const BuffTabledData& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const BuffTabledData& from) { BuffTabledData::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  ::size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::google::protobuf::internal::ParseContext* ctx) final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(BuffTabledData* other);
 private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() { return "BuffTabledData"; }

 protected:
  explicit BuffTabledData(::google::protobuf::Arena* arena);
  BuffTabledData(::google::protobuf::Arena* arena, const BuffTabledData& from);
  BuffTabledData(::google::protobuf::Arena* arena, BuffTabledData&& from) noexcept
      : BuffTabledData(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::MessageLite::ClassData* GetClassData()
      const final;

 public:
  ::google::protobuf::Metadata GetMetadata() const final;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kDataFieldNumber = 1,
  };
  // repeated .BuffTable data = 1;
  int data_size() const;
  private:
  int _internal_data_size() const;

  public:
  void clear_data() ;
  ::BuffTable* mutable_data(int index);
  ::google::protobuf::RepeatedPtrField<::BuffTable>* mutable_data();

  private:
  const ::google::protobuf::RepeatedPtrField<::BuffTable>& _internal_data() const;
  ::google::protobuf::RepeatedPtrField<::BuffTable>* _internal_mutable_data();
  public:
  const ::BuffTable& data(int index) const;
  ::BuffTable* add_data();
  const ::google::protobuf::RepeatedPtrField<::BuffTable>& data() const;
  // @@protoc_insertion_point(class_scope:BuffTabledData)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      0, 1, 1,
      0, 2>
      _table_;
  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from);
    ::google::protobuf::RepeatedPtrField< ::BuffTable > data_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_buff_5fconfig_2eproto;
};

// ===================================================================




// ===================================================================


#ifdef __GNUC__
#pragma GCC diagnostic push
#pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif  // __GNUC__
// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// BuffTable

// uint32 id = 1;
inline void BuffTable::clear_id() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.id_ = 0u;
}
inline ::uint32_t BuffTable::id() const {
  // @@protoc_insertion_point(field_get:BuffTable.id)
  return _internal_id();
}
inline void BuffTable::set_id(::uint32_t value) {
  _internal_set_id(value);
  // @@protoc_insertion_point(field_set:BuffTable.id)
}
inline ::uint32_t BuffTable::_internal_id() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.id_;
}
inline void BuffTable::_internal_set_id(::uint32_t value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.id_ = value;
}

// uint32 nocaster = 2;
inline void BuffTable::clear_nocaster() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.nocaster_ = 0u;
}
inline ::uint32_t BuffTable::nocaster() const {
  // @@protoc_insertion_point(field_get:BuffTable.nocaster)
  return _internal_nocaster();
}
inline void BuffTable::set_nocaster(::uint32_t value) {
  _internal_set_nocaster(value);
  // @@protoc_insertion_point(field_set:BuffTable.nocaster)
}
inline ::uint32_t BuffTable::_internal_nocaster() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.nocaster_;
}
inline void BuffTable::_internal_set_nocaster(::uint32_t value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.nocaster_ = value;
}

// map<string, bool> tag = 3;
inline int BuffTable::_internal_tag_size() const {
  return _internal_tag().size();
}
inline int BuffTable::tag_size() const {
  return _internal_tag_size();
}
inline void BuffTable::clear_tag() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.tag_.Clear();
}
inline const ::google::protobuf::Map<std::string, bool>& BuffTable::_internal_tag() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.tag_.GetMap();
}
inline const ::google::protobuf::Map<std::string, bool>& BuffTable::tag() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_map:BuffTable.tag)
  return _internal_tag();
}
inline ::google::protobuf::Map<std::string, bool>* BuffTable::_internal_mutable_tag() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  return _impl_.tag_.MutableMap();
}
inline ::google::protobuf::Map<std::string, bool>* BuffTable::mutable_tag() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable_map:BuffTable.tag)
  return _internal_mutable_tag();
}

// map<string, bool> immunetag = 4;
inline int BuffTable::_internal_immunetag_size() const {
  return _internal_immunetag().size();
}
inline int BuffTable::immunetag_size() const {
  return _internal_immunetag_size();
}
inline void BuffTable::clear_immunetag() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.immunetag_.Clear();
}
inline const ::google::protobuf::Map<std::string, bool>& BuffTable::_internal_immunetag() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.immunetag_.GetMap();
}
inline const ::google::protobuf::Map<std::string, bool>& BuffTable::immunetag() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_map:BuffTable.immunetag)
  return _internal_immunetag();
}
inline ::google::protobuf::Map<std::string, bool>* BuffTable::_internal_mutable_immunetag() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  return _impl_.immunetag_.MutableMap();
}
inline ::google::protobuf::Map<std::string, bool>* BuffTable::mutable_immunetag() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable_map:BuffTable.immunetag)
  return _internal_mutable_immunetag();
}

// uint32 level = 5;
inline void BuffTable::clear_level() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.level_ = 0u;
}
inline ::uint32_t BuffTable::level() const {
  // @@protoc_insertion_point(field_get:BuffTable.level)
  return _internal_level();
}
inline void BuffTable::set_level(::uint32_t value) {
  _internal_set_level(value);
  // @@protoc_insertion_point(field_set:BuffTable.level)
}
inline ::uint32_t BuffTable::_internal_level() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.level_;
}
inline void BuffTable::_internal_set_level(::uint32_t value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.level_ = value;
}

// uint32 maxlayer = 6;
inline void BuffTable::clear_maxlayer() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.maxlayer_ = 0u;
}
inline ::uint32_t BuffTable::maxlayer() const {
  // @@protoc_insertion_point(field_get:BuffTable.maxlayer)
  return _internal_maxlayer();
}
inline void BuffTable::set_maxlayer(::uint32_t value) {
  _internal_set_maxlayer(value);
  // @@protoc_insertion_point(field_set:BuffTable.maxlayer)
}
inline ::uint32_t BuffTable::_internal_maxlayer() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.maxlayer_;
}
inline void BuffTable::_internal_set_maxlayer(::uint32_t value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.maxlayer_ = value;
}

// uint32 duration = 7;
inline void BuffTable::clear_duration() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.duration_ = 0u;
}
inline ::uint32_t BuffTable::duration() const {
  // @@protoc_insertion_point(field_get:BuffTable.duration)
  return _internal_duration();
}
inline void BuffTable::set_duration(::uint32_t value) {
  _internal_set_duration(value);
  // @@protoc_insertion_point(field_set:BuffTable.duration)
}
inline ::uint32_t BuffTable::_internal_duration() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.duration_;
}
inline void BuffTable::_internal_set_duration(::uint32_t value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.duration_ = value;
}

// uint32 forceinterrupt = 8;
inline void BuffTable::clear_forceinterrupt() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.forceinterrupt_ = 0u;
}
inline ::uint32_t BuffTable::forceinterrupt() const {
  // @@protoc_insertion_point(field_get:BuffTable.forceinterrupt)
  return _internal_forceinterrupt();
}
inline void BuffTable::set_forceinterrupt(::uint32_t value) {
  _internal_set_forceinterrupt(value);
  // @@protoc_insertion_point(field_set:BuffTable.forceinterrupt)
}
inline ::uint32_t BuffTable::_internal_forceinterrupt() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.forceinterrupt_;
}
inline void BuffTable::_internal_set_forceinterrupt(::uint32_t value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.forceinterrupt_ = value;
}

// double interval = 9;
inline void BuffTable::clear_interval() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.interval_ = 0;
}
inline double BuffTable::interval() const {
  // @@protoc_insertion_point(field_get:BuffTable.interval)
  return _internal_interval();
}
inline void BuffTable::set_interval(double value) {
  _internal_set_interval(value);
  // @@protoc_insertion_point(field_set:BuffTable.interval)
}
inline double BuffTable::_internal_interval() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.interval_;
}
inline void BuffTable::_internal_set_interval(double value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.interval_ = value;
}

// uint32 intervalcount = 10;
inline void BuffTable::clear_intervalcount() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.intervalcount_ = 0u;
}
inline ::uint32_t BuffTable::intervalcount() const {
  // @@protoc_insertion_point(field_get:BuffTable.intervalcount)
  return _internal_intervalcount();
}
inline void BuffTable::set_intervalcount(::uint32_t value) {
  _internal_set_intervalcount(value);
  // @@protoc_insertion_point(field_set:BuffTable.intervalcount)
}
inline ::uint32_t BuffTable::_internal_intervalcount() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.intervalcount_;
}
inline void BuffTable::_internal_set_intervalcount(::uint32_t value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.intervalcount_ = value;
}

// repeated double intervaleffect = 11;
inline int BuffTable::_internal_intervaleffect_size() const {
  return _internal_intervaleffect().size();
}
inline int BuffTable::intervaleffect_size() const {
  return _internal_intervaleffect_size();
}
inline void BuffTable::clear_intervaleffect() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.intervaleffect_.Clear();
}
inline double BuffTable::intervaleffect(int index) const {
  // @@protoc_insertion_point(field_get:BuffTable.intervaleffect)
  return _internal_intervaleffect().Get(index);
}
inline void BuffTable::set_intervaleffect(int index, double value) {
  _internal_mutable_intervaleffect()->Set(index, value);
  // @@protoc_insertion_point(field_set:BuffTable.intervaleffect)
}
inline void BuffTable::add_intervaleffect(double value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _internal_mutable_intervaleffect()->Add(value);
  // @@protoc_insertion_point(field_add:BuffTable.intervaleffect)
}
inline const ::google::protobuf::RepeatedField<double>& BuffTable::intervaleffect() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_list:BuffTable.intervaleffect)
  return _internal_intervaleffect();
}
inline ::google::protobuf::RepeatedField<double>* BuffTable::mutable_intervaleffect()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable_list:BuffTable.intervaleffect)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  return _internal_mutable_intervaleffect();
}
inline const ::google::protobuf::RepeatedField<double>&
BuffTable::_internal_intervaleffect() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.intervaleffect_;
}
inline ::google::protobuf::RepeatedField<double>* BuffTable::_internal_mutable_intervaleffect() {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return &_impl_.intervaleffect_;
}

// -------------------------------------------------------------------

// BuffTabledData

// repeated .BuffTable data = 1;
inline int BuffTabledData::_internal_data_size() const {
  return _internal_data().size();
}
inline int BuffTabledData::data_size() const {
  return _internal_data_size();
}
inline void BuffTabledData::clear_data() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.data_.Clear();
}
inline ::BuffTable* BuffTabledData::mutable_data(int index)
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable:BuffTabledData.data)
  return _internal_mutable_data()->Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField<::BuffTable>* BuffTabledData::mutable_data()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable_list:BuffTabledData.data)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  return _internal_mutable_data();
}
inline const ::BuffTable& BuffTabledData::data(int index) const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:BuffTabledData.data)
  return _internal_data().Get(index);
}
inline ::BuffTable* BuffTabledData::add_data() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ::BuffTable* _add = _internal_mutable_data()->Add();
  // @@protoc_insertion_point(field_add:BuffTabledData.data)
  return _add;
}
inline const ::google::protobuf::RepeatedPtrField<::BuffTable>& BuffTabledData::data() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_list:BuffTabledData.data)
  return _internal_data();
}
inline const ::google::protobuf::RepeatedPtrField<::BuffTable>&
BuffTabledData::_internal_data() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.data_;
}
inline ::google::protobuf::RepeatedPtrField<::BuffTable>*
BuffTabledData::_internal_mutable_data() {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return &_impl_.data_;
}

#ifdef __GNUC__
#pragma GCC diagnostic pop
#endif  // __GNUC__

// @@protoc_insertion_point(namespace_scope)


// @@protoc_insertion_point(global_scope)

#include "google/protobuf/port_undef.inc"

#endif  // GOOGLE_PROTOBUF_INCLUDED_buff_5fconfig_2eproto_2epb_2eh
