// Generated by the protocol buffer compiler.  DO NOT EDIT!
// NO CHECKED-IN PROTOBUF GENCODE
// source: buff_config.proto
// Protobuf C++ Version: 5.29.0

#ifndef buff_5fconfig_2eproto_2epb_2eh
#define buff_5fconfig_2eproto_2epb_2eh

#include <limits>
#include <string>
#include <type_traits>
#include <utility>

#include "google/protobuf/runtime_version.h"
#if PROTOBUF_VERSION != 5029000
#error "Protobuf C++ gencode is built with an incompatible version of"
#error "Protobuf C++ headers/runtime. See"
#error "https://protobuf.dev/support/cross-version-runtime-guarantee/#cpp"
#endif
#include "google/protobuf/io/coded_stream.h"
#include "google/protobuf/arena.h"
#include "google/protobuf/arenastring.h"
#include "google/protobuf/generated_message_tctable_decl.h"
#include "google/protobuf/generated_message_util.h"
#include "google/protobuf/metadata_lite.h"
#include "google/protobuf/generated_message_reflection.h"
#include "google/protobuf/message.h"
#include "google/protobuf/message_lite.h"
#include "google/protobuf/repeated_field.h"  // IWYU pragma: export
#include "google/protobuf/extension_set.h"  // IWYU pragma: export
#include "google/protobuf/map.h"  // IWYU pragma: export
#include "google/protobuf/map_entry.h"
#include "google/protobuf/map_field_inl.h"
#include "google/protobuf/unknown_field_set.h"
// @@protoc_insertion_point(includes)

// Must be included last.
#include "google/protobuf/port_def.inc"

#define PROTOBUF_INTERNAL_EXPORT_buff_5fconfig_2eproto

namespace google {
namespace protobuf {
namespace internal {
template <typename T>
::absl::string_view GetAnyMessageName();
}  // namespace internal
}  // namespace protobuf
}  // namespace google

// Internal implementation detail -- do not use these members.
struct TableStruct_buff_5fconfig_2eproto {
  static const ::uint32_t offsets[];
};
extern const ::google::protobuf::internal::DescriptorTable
    descriptor_table_buff_5fconfig_2eproto;
class BuffTable;
struct BuffTableDefaultTypeInternal;
extern BuffTableDefaultTypeInternal _BuffTable_default_instance_;
class BuffTable_DispeltagEntry_DoNotUse;
struct BuffTable_DispeltagEntry_DoNotUseDefaultTypeInternal;
extern BuffTable_DispeltagEntry_DoNotUseDefaultTypeInternal _BuffTable_DispeltagEntry_DoNotUse_default_instance_;
class BuffTable_ImmunetagEntry_DoNotUse;
struct BuffTable_ImmunetagEntry_DoNotUseDefaultTypeInternal;
extern BuffTable_ImmunetagEntry_DoNotUseDefaultTypeInternal _BuffTable_ImmunetagEntry_DoNotUse_default_instance_;
class BuffTable_TagEntry_DoNotUse;
struct BuffTable_TagEntry_DoNotUseDefaultTypeInternal;
extern BuffTable_TagEntry_DoNotUseDefaultTypeInternal _BuffTable_TagEntry_DoNotUse_default_instance_;
class BuffTabledData;
struct BuffTabledDataDefaultTypeInternal;
extern BuffTabledDataDefaultTypeInternal _BuffTabledData_default_instance_;
namespace google {
namespace protobuf {
}  // namespace protobuf
}  // namespace google


// ===================================================================


// -------------------------------------------------------------------

class BuffTable_TagEntry_DoNotUse final
    : public ::google::protobuf::internal::MapEntry<
          std::string, bool,
          ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
          ::google::protobuf::internal::WireFormatLite::TYPE_BOOL> {
 public:
  using SuperType = ::google::protobuf::internal::MapEntry<
      std::string, bool,
      ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
      ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>;
  BuffTable_TagEntry_DoNotUse();
  template <typename = void>
  explicit PROTOBUF_CONSTEXPR BuffTable_TagEntry_DoNotUse(
      ::google::protobuf::internal::ConstantInitialized);
  explicit BuffTable_TagEntry_DoNotUse(::google::protobuf::Arena* arena);
  static const BuffTable_TagEntry_DoNotUse* internal_default_instance() {
    return reinterpret_cast<const BuffTable_TagEntry_DoNotUse*>(
        &_BuffTable_TagEntry_DoNotUse_default_instance_);
  }


 private:
  friend class ::google::protobuf::MessageLite;
  friend struct ::TableStruct_buff_5fconfig_2eproto;

  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      1, 2, 0,
      30, 2>
      _table_;

  const ::google::protobuf::internal::ClassData* GetClassData() const PROTOBUF_FINAL;
  static void* PlacementNew_(const void*, void* mem,
                             ::google::protobuf::Arena* arena);
  static constexpr auto InternalNewImpl_();
  static const ::google::protobuf::internal::ClassDataFull _class_data_;
};
// -------------------------------------------------------------------

class BuffTable_ImmunetagEntry_DoNotUse final
    : public ::google::protobuf::internal::MapEntry<
          std::string, bool,
          ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
          ::google::protobuf::internal::WireFormatLite::TYPE_BOOL> {
 public:
  using SuperType = ::google::protobuf::internal::MapEntry<
      std::string, bool,
      ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
      ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>;
  BuffTable_ImmunetagEntry_DoNotUse();
  template <typename = void>
  explicit PROTOBUF_CONSTEXPR BuffTable_ImmunetagEntry_DoNotUse(
      ::google::protobuf::internal::ConstantInitialized);
  explicit BuffTable_ImmunetagEntry_DoNotUse(::google::protobuf::Arena* arena);
  static const BuffTable_ImmunetagEntry_DoNotUse* internal_default_instance() {
    return reinterpret_cast<const BuffTable_ImmunetagEntry_DoNotUse*>(
        &_BuffTable_ImmunetagEntry_DoNotUse_default_instance_);
  }


 private:
  friend class ::google::protobuf::MessageLite;
  friend struct ::TableStruct_buff_5fconfig_2eproto;

  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      1, 2, 0,
      36, 2>
      _table_;

  const ::google::protobuf::internal::ClassData* GetClassData() const PROTOBUF_FINAL;
  static void* PlacementNew_(const void*, void* mem,
                             ::google::protobuf::Arena* arena);
  static constexpr auto InternalNewImpl_();
  static const ::google::protobuf::internal::ClassDataFull _class_data_;
};
// -------------------------------------------------------------------

class BuffTable_DispeltagEntry_DoNotUse final
    : public ::google::protobuf::internal::MapEntry<
          std::string, bool,
          ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
          ::google::protobuf::internal::WireFormatLite::TYPE_BOOL> {
 public:
  using SuperType = ::google::protobuf::internal::MapEntry<
      std::string, bool,
      ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
      ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>;
  BuffTable_DispeltagEntry_DoNotUse();
  template <typename = void>
  explicit PROTOBUF_CONSTEXPR BuffTable_DispeltagEntry_DoNotUse(
      ::google::protobuf::internal::ConstantInitialized);
  explicit BuffTable_DispeltagEntry_DoNotUse(::google::protobuf::Arena* arena);
  static const BuffTable_DispeltagEntry_DoNotUse* internal_default_instance() {
    return reinterpret_cast<const BuffTable_DispeltagEntry_DoNotUse*>(
        &_BuffTable_DispeltagEntry_DoNotUse_default_instance_);
  }


 private:
  friend class ::google::protobuf::MessageLite;
  friend struct ::TableStruct_buff_5fconfig_2eproto;

  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      1, 2, 0,
      36, 2>
      _table_;

  const ::google::protobuf::internal::ClassData* GetClassData() const PROTOBUF_FINAL;
  static void* PlacementNew_(const void*, void* mem,
                             ::google::protobuf::Arena* arena);
  static constexpr auto InternalNewImpl_();
  static const ::google::protobuf::internal::ClassDataFull _class_data_;
};
// -------------------------------------------------------------------

class BuffTable final
    : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:BuffTable) */ {
 public:
  inline BuffTable() : BuffTable(nullptr) {}
  ~BuffTable() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(BuffTable* msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(BuffTable));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR BuffTable(
      ::google::protobuf::internal::ConstantInitialized);

  inline BuffTable(const BuffTable& from) : BuffTable(nullptr, from) {}
  inline BuffTable(BuffTable&& from) noexcept
      : BuffTable(nullptr, std::move(from)) {}
  inline BuffTable& operator=(const BuffTable& from) {
    CopyFrom(from);
    return *this;
  }
  inline BuffTable& operator=(BuffTable&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const BuffTable& default_instance() {
    return *internal_default_instance();
  }
  static inline const BuffTable* internal_default_instance() {
    return reinterpret_cast<const BuffTable*>(
        &_BuffTable_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 3;
  friend void swap(BuffTable& a, BuffTable& b) { a.Swap(&b); }
  inline void Swap(BuffTable* other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(BuffTable* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  BuffTable* New(::google::protobuf::Arena* arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<BuffTable>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const BuffTable& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const BuffTable& from) { BuffTable::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(BuffTable* other);
 private:
  template <typename T>
  friend ::absl::string_view(
      ::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "BuffTable"; }

 protected:
  explicit BuffTable(::google::protobuf::Arena* arena);
  BuffTable(::google::protobuf::Arena* arena, const BuffTable& from);
  BuffTable(::google::protobuf::Arena* arena, BuffTable&& from) noexcept
      : BuffTable(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* GetClassData() const PROTOBUF_FINAL;
  static void* PlacementNew_(const void*, void* mem,
                             ::google::protobuf::Arena* arena);
  static constexpr auto InternalNewImpl_();
  static const ::google::protobuf::internal::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kTagFieldNumber = 4,
    kImmunetagFieldNumber = 5,
    kDispeltagFieldNumber = 6,
    kIntervaleffectFieldNumber = 14,
    kSubbuffFieldNumber = 18,
    kTargetsubbuffFieldNumber = 19,
    kHealthregenerationFieldNumber = 17,
    kBonusdamageFieldNumber = 22,
    kIdFieldNumber = 1,
    kNocasterFieldNumber = 2,
    kBufftypeFieldNumber = 3,
    kLevelFieldNumber = 7,
    kMaxlayerFieldNumber = 8,
    kInfinitedurationFieldNumber = 9,
    kDurationFieldNumber = 10,
    kIntervalFieldNumber = 12,
    kForceinterruptFieldNumber = 11,
    kIntervalcountFieldNumber = 13,
    kMovementSpeedBoostFieldNumber = 15,
    kMovementSpeedReductionFieldNumber = 16,
    kNodamageorskillhitinlastsecondsFieldNumber = 20,
    kTimeFieldNumber = 21,
  };
  // map<string, bool> tag = 4;
  int tag_size() const;
  private:
  int _internal_tag_size() const;

  public:
  void clear_tag() ;
  const ::google::protobuf::Map<std::string, bool>& tag() const;
  ::google::protobuf::Map<std::string, bool>* mutable_tag();

  private:
  const ::google::protobuf::Map<std::string, bool>& _internal_tag() const;
  ::google::protobuf::Map<std::string, bool>* _internal_mutable_tag();

  public:
  // map<string, bool> immunetag = 5;
  int immunetag_size() const;
  private:
  int _internal_immunetag_size() const;

  public:
  void clear_immunetag() ;
  const ::google::protobuf::Map<std::string, bool>& immunetag() const;
  ::google::protobuf::Map<std::string, bool>* mutable_immunetag();

  private:
  const ::google::protobuf::Map<std::string, bool>& _internal_immunetag() const;
  ::google::protobuf::Map<std::string, bool>* _internal_mutable_immunetag();

  public:
  // map<string, bool> dispeltag = 6;
  int dispeltag_size() const;
  private:
  int _internal_dispeltag_size() const;

  public:
  void clear_dispeltag() ;
  const ::google::protobuf::Map<std::string, bool>& dispeltag() const;
  ::google::protobuf::Map<std::string, bool>* mutable_dispeltag();

  private:
  const ::google::protobuf::Map<std::string, bool>& _internal_dispeltag() const;
  ::google::protobuf::Map<std::string, bool>* _internal_mutable_dispeltag();

  public:
  // repeated double intervaleffect = 14;
  int intervaleffect_size() const;
  private:
  int _internal_intervaleffect_size() const;

  public:
  void clear_intervaleffect() ;
  double intervaleffect(int index) const;
  void set_intervaleffect(int index, double value);
  void add_intervaleffect(double value);
  const ::google::protobuf::RepeatedField<double>& intervaleffect() const;
  ::google::protobuf::RepeatedField<double>* mutable_intervaleffect();

  private:
  const ::google::protobuf::RepeatedField<double>& _internal_intervaleffect() const;
  ::google::protobuf::RepeatedField<double>* _internal_mutable_intervaleffect();

  public:
  // repeated uint32 subbuff = 18;
  int subbuff_size() const;
  private:
  int _internal_subbuff_size() const;

  public:
  void clear_subbuff() ;
  ::uint32_t subbuff(int index) const;
  void set_subbuff(int index, ::uint32_t value);
  void add_subbuff(::uint32_t value);
  const ::google::protobuf::RepeatedField<::uint32_t>& subbuff() const;
  ::google::protobuf::RepeatedField<::uint32_t>* mutable_subbuff();

  private:
  const ::google::protobuf::RepeatedField<::uint32_t>& _internal_subbuff() const;
  ::google::protobuf::RepeatedField<::uint32_t>* _internal_mutable_subbuff();

  public:
  // repeated uint32 targetsubbuff = 19;
  int targetsubbuff_size() const;
  private:
  int _internal_targetsubbuff_size() const;

  public:
  void clear_targetsubbuff() ;
  ::uint32_t targetsubbuff(int index) const;
  void set_targetsubbuff(int index, ::uint32_t value);
  void add_targetsubbuff(::uint32_t value);
  const ::google::protobuf::RepeatedField<::uint32_t>& targetsubbuff() const;
  ::google::protobuf::RepeatedField<::uint32_t>* mutable_targetsubbuff();

  private:
  const ::google::protobuf::RepeatedField<::uint32_t>& _internal_targetsubbuff() const;
  ::google::protobuf::RepeatedField<::uint32_t>* _internal_mutable_targetsubbuff();

  public:
  // string healthregeneration = 17;
  void clear_healthregeneration() ;
  const std::string& healthregeneration() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_healthregeneration(Arg_&& arg, Args_... args);
  std::string* mutable_healthregeneration();
  PROTOBUF_NODISCARD std::string* release_healthregeneration();
  void set_allocated_healthregeneration(std::string* value);

  private:
  const std::string& _internal_healthregeneration() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_healthregeneration(
      const std::string& value);
  std::string* _internal_mutable_healthregeneration();

  public:
  // string bonusdamage = 22;
  void clear_bonusdamage() ;
  const std::string& bonusdamage() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_bonusdamage(Arg_&& arg, Args_... args);
  std::string* mutable_bonusdamage();
  PROTOBUF_NODISCARD std::string* release_bonusdamage();
  void set_allocated_bonusdamage(std::string* value);

  private:
  const std::string& _internal_bonusdamage() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_bonusdamage(
      const std::string& value);
  std::string* _internal_mutable_bonusdamage();

  public:
  // uint32 id = 1;
  void clear_id() ;
  ::uint32_t id() const;
  void set_id(::uint32_t value);

  private:
  ::uint32_t _internal_id() const;
  void _internal_set_id(::uint32_t value);

  public:
  // uint32 nocaster = 2;
  void clear_nocaster() ;
  ::uint32_t nocaster() const;
  void set_nocaster(::uint32_t value);

  private:
  ::uint32_t _internal_nocaster() const;
  void _internal_set_nocaster(::uint32_t value);

  public:
  // uint32 bufftype = 3;
  void clear_bufftype() ;
  ::uint32_t bufftype() const;
  void set_bufftype(::uint32_t value);

  private:
  ::uint32_t _internal_bufftype() const;
  void _internal_set_bufftype(::uint32_t value);

  public:
  // uint32 level = 7;
  void clear_level() ;
  ::uint32_t level() const;
  void set_level(::uint32_t value);

  private:
  ::uint32_t _internal_level() const;
  void _internal_set_level(::uint32_t value);

  public:
  // uint32 maxlayer = 8;
  void clear_maxlayer() ;
  ::uint32_t maxlayer() const;
  void set_maxlayer(::uint32_t value);

  private:
  ::uint32_t _internal_maxlayer() const;
  void _internal_set_maxlayer(::uint32_t value);

  public:
  // uint32 infiniteduration = 9;
  void clear_infiniteduration() ;
  ::uint32_t infiniteduration() const;
  void set_infiniteduration(::uint32_t value);

  private:
  ::uint32_t _internal_infiniteduration() const;
  void _internal_set_infiniteduration(::uint32_t value);

  public:
  // double duration = 10;
  void clear_duration() ;
  double duration() const;
  void set_duration(double value);

  private:
  double _internal_duration() const;
  void _internal_set_duration(double value);

  public:
  // double interval = 12;
  void clear_interval() ;
  double interval() const;
  void set_interval(double value);

  private:
  double _internal_interval() const;
  void _internal_set_interval(double value);

  public:
  // uint32 forceinterrupt = 11;
  void clear_forceinterrupt() ;
  ::uint32_t forceinterrupt() const;
  void set_forceinterrupt(::uint32_t value);

  private:
  ::uint32_t _internal_forceinterrupt() const;
  void _internal_set_forceinterrupt(::uint32_t value);

  public:
  // uint32 intervalcount = 13;
  void clear_intervalcount() ;
  ::uint32_t intervalcount() const;
  void set_intervalcount(::uint32_t value);

  private:
  ::uint32_t _internal_intervalcount() const;
  void _internal_set_intervalcount(::uint32_t value);

  public:
  // double movement_speed_boost = 15;
  void clear_movement_speed_boost() ;
  double movement_speed_boost() const;
  void set_movement_speed_boost(double value);

  private:
  double _internal_movement_speed_boost() const;
  void _internal_set_movement_speed_boost(double value);

  public:
  // double movement_speed_reduction = 16;
  void clear_movement_speed_reduction() ;
  double movement_speed_reduction() const;
  void set_movement_speed_reduction(double value);

  private:
  double _internal_movement_speed_reduction() const;
  void _internal_set_movement_speed_reduction(double value);

  public:
  // double nodamageorskillhitinlastseconds = 20;
  void clear_nodamageorskillhitinlastseconds() ;
  double nodamageorskillhitinlastseconds() const;
  void set_nodamageorskillhitinlastseconds(double value);

  private:
  double _internal_nodamageorskillhitinlastseconds() const;
  void _internal_set_nodamageorskillhitinlastseconds(double value);

  public:
  // uint32 time = 21;
  void clear_time() ;
  ::uint32_t time() const;
  void set_time(::uint32_t value);

  private:
  ::uint32_t _internal_time() const;
  void _internal_set_time(::uint32_t value);

  public:
  // @@protoc_insertion_point(class_scope:BuffTable)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      5, 22, 3,
      84, 2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const BuffTable& from_msg);
    ::google::protobuf::internal::MapField<BuffTable_TagEntry_DoNotUse, std::string, bool,
                      ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
                      ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>
        tag_;
    ::google::protobuf::internal::MapField<BuffTable_ImmunetagEntry_DoNotUse, std::string, bool,
                      ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
                      ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>
        immunetag_;
    ::google::protobuf::internal::MapField<BuffTable_DispeltagEntry_DoNotUse, std::string, bool,
                      ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
                      ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>
        dispeltag_;
    ::google::protobuf::RepeatedField<double> intervaleffect_;
    ::google::protobuf::RepeatedField<::uint32_t> subbuff_;
    ::google::protobuf::internal::CachedSize _subbuff_cached_byte_size_;
    ::google::protobuf::RepeatedField<::uint32_t> targetsubbuff_;
    ::google::protobuf::internal::CachedSize _targetsubbuff_cached_byte_size_;
    ::google::protobuf::internal::ArenaStringPtr healthregeneration_;
    ::google::protobuf::internal::ArenaStringPtr bonusdamage_;
    ::uint32_t id_;
    ::uint32_t nocaster_;
    ::uint32_t bufftype_;
    ::uint32_t level_;
    ::uint32_t maxlayer_;
    ::uint32_t infiniteduration_;
    double duration_;
    double interval_;
    ::uint32_t forceinterrupt_;
    ::uint32_t intervalcount_;
    double movement_speed_boost_;
    double movement_speed_reduction_;
    double nodamageorskillhitinlastseconds_;
    ::uint32_t time_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_buff_5fconfig_2eproto;
};
// -------------------------------------------------------------------

class BuffTabledData final
    : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:BuffTabledData) */ {
 public:
  inline BuffTabledData() : BuffTabledData(nullptr) {}
  ~BuffTabledData() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(BuffTabledData* msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(BuffTabledData));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR BuffTabledData(
      ::google::protobuf::internal::ConstantInitialized);

  inline BuffTabledData(const BuffTabledData& from) : BuffTabledData(nullptr, from) {}
  inline BuffTabledData(BuffTabledData&& from) noexcept
      : BuffTabledData(nullptr, std::move(from)) {}
  inline BuffTabledData& operator=(const BuffTabledData& from) {
    CopyFrom(from);
    return *this;
  }
  inline BuffTabledData& operator=(BuffTabledData&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const BuffTabledData& default_instance() {
    return *internal_default_instance();
  }
  static inline const BuffTabledData* internal_default_instance() {
    return reinterpret_cast<const BuffTabledData*>(
        &_BuffTabledData_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 4;
  friend void swap(BuffTabledData& a, BuffTabledData& b) { a.Swap(&b); }
  inline void Swap(BuffTabledData* other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(BuffTabledData* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  BuffTabledData* New(::google::protobuf::Arena* arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<BuffTabledData>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const BuffTabledData& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const BuffTabledData& from) { BuffTabledData::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(BuffTabledData* other);
 private:
  template <typename T>
  friend ::absl::string_view(
      ::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "BuffTabledData"; }

 protected:
  explicit BuffTabledData(::google::protobuf::Arena* arena);
  BuffTabledData(::google::protobuf::Arena* arena, const BuffTabledData& from);
  BuffTabledData(::google::protobuf::Arena* arena, BuffTabledData&& from) noexcept
      : BuffTabledData(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* GetClassData() const PROTOBUF_FINAL;
  static void* PlacementNew_(const void*, void* mem,
                             ::google::protobuf::Arena* arena);
  static constexpr auto InternalNewImpl_();
  static const ::google::protobuf::internal::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kDataFieldNumber = 1,
  };
  // repeated .BuffTable data = 1;
  int data_size() const;
  private:
  int _internal_data_size() const;

  public:
  void clear_data() ;
  ::BuffTable* mutable_data(int index);
  ::google::protobuf::RepeatedPtrField<::BuffTable>* mutable_data();

  private:
  const ::google::protobuf::RepeatedPtrField<::BuffTable>& _internal_data() const;
  ::google::protobuf::RepeatedPtrField<::BuffTable>* _internal_mutable_data();
  public:
  const ::BuffTable& data(int index) const;
  ::BuffTable* add_data();
  const ::google::protobuf::RepeatedPtrField<::BuffTable>& data() const;
  // @@protoc_insertion_point(class_scope:BuffTabledData)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      0, 1, 1,
      0, 2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const BuffTabledData& from_msg);
    ::google::protobuf::RepeatedPtrField< ::BuffTable > data_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_buff_5fconfig_2eproto;
};

// ===================================================================




// ===================================================================


#ifdef __GNUC__
#pragma GCC diagnostic push
#pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif  // __GNUC__
// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// BuffTable

// uint32 id = 1;
inline void BuffTable::clear_id() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.id_ = 0u;
}
inline ::uint32_t BuffTable::id() const {
  // @@protoc_insertion_point(field_get:BuffTable.id)
  return _internal_id();
}
inline void BuffTable::set_id(::uint32_t value) {
  _internal_set_id(value);
  // @@protoc_insertion_point(field_set:BuffTable.id)
}
inline ::uint32_t BuffTable::_internal_id() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.id_;
}
inline void BuffTable::_internal_set_id(::uint32_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.id_ = value;
}

// uint32 nocaster = 2;
inline void BuffTable::clear_nocaster() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.nocaster_ = 0u;
}
inline ::uint32_t BuffTable::nocaster() const {
  // @@protoc_insertion_point(field_get:BuffTable.nocaster)
  return _internal_nocaster();
}
inline void BuffTable::set_nocaster(::uint32_t value) {
  _internal_set_nocaster(value);
  // @@protoc_insertion_point(field_set:BuffTable.nocaster)
}
inline ::uint32_t BuffTable::_internal_nocaster() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.nocaster_;
}
inline void BuffTable::_internal_set_nocaster(::uint32_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.nocaster_ = value;
}

// uint32 bufftype = 3;
inline void BuffTable::clear_bufftype() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.bufftype_ = 0u;
}
inline ::uint32_t BuffTable::bufftype() const {
  // @@protoc_insertion_point(field_get:BuffTable.bufftype)
  return _internal_bufftype();
}
inline void BuffTable::set_bufftype(::uint32_t value) {
  _internal_set_bufftype(value);
  // @@protoc_insertion_point(field_set:BuffTable.bufftype)
}
inline ::uint32_t BuffTable::_internal_bufftype() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.bufftype_;
}
inline void BuffTable::_internal_set_bufftype(::uint32_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.bufftype_ = value;
}

// map<string, bool> tag = 4;
inline int BuffTable::_internal_tag_size() const {
  return _internal_tag().size();
}
inline int BuffTable::tag_size() const {
  return _internal_tag_size();
}
inline void BuffTable::clear_tag() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.tag_.Clear();
}
inline const ::google::protobuf::Map<std::string, bool>& BuffTable::_internal_tag() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.tag_.GetMap();
}
inline const ::google::protobuf::Map<std::string, bool>& BuffTable::tag() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_map:BuffTable.tag)
  return _internal_tag();
}
inline ::google::protobuf::Map<std::string, bool>* BuffTable::_internal_mutable_tag() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.tag_.MutableMap();
}
inline ::google::protobuf::Map<std::string, bool>* BuffTable::mutable_tag() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable_map:BuffTable.tag)
  return _internal_mutable_tag();
}

// map<string, bool> immunetag = 5;
inline int BuffTable::_internal_immunetag_size() const {
  return _internal_immunetag().size();
}
inline int BuffTable::immunetag_size() const {
  return _internal_immunetag_size();
}
inline void BuffTable::clear_immunetag() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.immunetag_.Clear();
}
inline const ::google::protobuf::Map<std::string, bool>& BuffTable::_internal_immunetag() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.immunetag_.GetMap();
}
inline const ::google::protobuf::Map<std::string, bool>& BuffTable::immunetag() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_map:BuffTable.immunetag)
  return _internal_immunetag();
}
inline ::google::protobuf::Map<std::string, bool>* BuffTable::_internal_mutable_immunetag() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.immunetag_.MutableMap();
}
inline ::google::protobuf::Map<std::string, bool>* BuffTable::mutable_immunetag() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable_map:BuffTable.immunetag)
  return _internal_mutable_immunetag();
}

// map<string, bool> dispeltag = 6;
inline int BuffTable::_internal_dispeltag_size() const {
  return _internal_dispeltag().size();
}
inline int BuffTable::dispeltag_size() const {
  return _internal_dispeltag_size();
}
inline void BuffTable::clear_dispeltag() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.dispeltag_.Clear();
}
inline const ::google::protobuf::Map<std::string, bool>& BuffTable::_internal_dispeltag() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.dispeltag_.GetMap();
}
inline const ::google::protobuf::Map<std::string, bool>& BuffTable::dispeltag() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_map:BuffTable.dispeltag)
  return _internal_dispeltag();
}
inline ::google::protobuf::Map<std::string, bool>* BuffTable::_internal_mutable_dispeltag() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.dispeltag_.MutableMap();
}
inline ::google::protobuf::Map<std::string, bool>* BuffTable::mutable_dispeltag() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable_map:BuffTable.dispeltag)
  return _internal_mutable_dispeltag();
}

// uint32 level = 7;
inline void BuffTable::clear_level() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.level_ = 0u;
}
inline ::uint32_t BuffTable::level() const {
  // @@protoc_insertion_point(field_get:BuffTable.level)
  return _internal_level();
}
inline void BuffTable::set_level(::uint32_t value) {
  _internal_set_level(value);
  // @@protoc_insertion_point(field_set:BuffTable.level)
}
inline ::uint32_t BuffTable::_internal_level() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.level_;
}
inline void BuffTable::_internal_set_level(::uint32_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.level_ = value;
}

// uint32 maxlayer = 8;
inline void BuffTable::clear_maxlayer() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.maxlayer_ = 0u;
}
inline ::uint32_t BuffTable::maxlayer() const {
  // @@protoc_insertion_point(field_get:BuffTable.maxlayer)
  return _internal_maxlayer();
}
inline void BuffTable::set_maxlayer(::uint32_t value) {
  _internal_set_maxlayer(value);
  // @@protoc_insertion_point(field_set:BuffTable.maxlayer)
}
inline ::uint32_t BuffTable::_internal_maxlayer() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.maxlayer_;
}
inline void BuffTable::_internal_set_maxlayer(::uint32_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.maxlayer_ = value;
}

// uint32 infiniteduration = 9;
inline void BuffTable::clear_infiniteduration() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.infiniteduration_ = 0u;
}
inline ::uint32_t BuffTable::infiniteduration() const {
  // @@protoc_insertion_point(field_get:BuffTable.infiniteduration)
  return _internal_infiniteduration();
}
inline void BuffTable::set_infiniteduration(::uint32_t value) {
  _internal_set_infiniteduration(value);
  // @@protoc_insertion_point(field_set:BuffTable.infiniteduration)
}
inline ::uint32_t BuffTable::_internal_infiniteduration() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.infiniteduration_;
}
inline void BuffTable::_internal_set_infiniteduration(::uint32_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.infiniteduration_ = value;
}

// double duration = 10;
inline void BuffTable::clear_duration() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.duration_ = 0;
}
inline double BuffTable::duration() const {
  // @@protoc_insertion_point(field_get:BuffTable.duration)
  return _internal_duration();
}
inline void BuffTable::set_duration(double value) {
  _internal_set_duration(value);
  // @@protoc_insertion_point(field_set:BuffTable.duration)
}
inline double BuffTable::_internal_duration() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.duration_;
}
inline void BuffTable::_internal_set_duration(double value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.duration_ = value;
}

// uint32 forceinterrupt = 11;
inline void BuffTable::clear_forceinterrupt() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.forceinterrupt_ = 0u;
}
inline ::uint32_t BuffTable::forceinterrupt() const {
  // @@protoc_insertion_point(field_get:BuffTable.forceinterrupt)
  return _internal_forceinterrupt();
}
inline void BuffTable::set_forceinterrupt(::uint32_t value) {
  _internal_set_forceinterrupt(value);
  // @@protoc_insertion_point(field_set:BuffTable.forceinterrupt)
}
inline ::uint32_t BuffTable::_internal_forceinterrupt() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.forceinterrupt_;
}
inline void BuffTable::_internal_set_forceinterrupt(::uint32_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.forceinterrupt_ = value;
}

// double interval = 12;
inline void BuffTable::clear_interval() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.interval_ = 0;
}
inline double BuffTable::interval() const {
  // @@protoc_insertion_point(field_get:BuffTable.interval)
  return _internal_interval();
}
inline void BuffTable::set_interval(double value) {
  _internal_set_interval(value);
  // @@protoc_insertion_point(field_set:BuffTable.interval)
}
inline double BuffTable::_internal_interval() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.interval_;
}
inline void BuffTable::_internal_set_interval(double value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.interval_ = value;
}

// uint32 intervalcount = 13;
inline void BuffTable::clear_intervalcount() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.intervalcount_ = 0u;
}
inline ::uint32_t BuffTable::intervalcount() const {
  // @@protoc_insertion_point(field_get:BuffTable.intervalcount)
  return _internal_intervalcount();
}
inline void BuffTable::set_intervalcount(::uint32_t value) {
  _internal_set_intervalcount(value);
  // @@protoc_insertion_point(field_set:BuffTable.intervalcount)
}
inline ::uint32_t BuffTable::_internal_intervalcount() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.intervalcount_;
}
inline void BuffTable::_internal_set_intervalcount(::uint32_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.intervalcount_ = value;
}

// repeated double intervaleffect = 14;
inline int BuffTable::_internal_intervaleffect_size() const {
  return _internal_intervaleffect().size();
}
inline int BuffTable::intervaleffect_size() const {
  return _internal_intervaleffect_size();
}
inline void BuffTable::clear_intervaleffect() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.intervaleffect_.Clear();
}
inline double BuffTable::intervaleffect(int index) const {
  // @@protoc_insertion_point(field_get:BuffTable.intervaleffect)
  return _internal_intervaleffect().Get(index);
}
inline void BuffTable::set_intervaleffect(int index, double value) {
  _internal_mutable_intervaleffect()->Set(index, value);
  // @@protoc_insertion_point(field_set:BuffTable.intervaleffect)
}
inline void BuffTable::add_intervaleffect(double value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _internal_mutable_intervaleffect()->Add(value);
  // @@protoc_insertion_point(field_add:BuffTable.intervaleffect)
}
inline const ::google::protobuf::RepeatedField<double>& BuffTable::intervaleffect() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_list:BuffTable.intervaleffect)
  return _internal_intervaleffect();
}
inline ::google::protobuf::RepeatedField<double>* BuffTable::mutable_intervaleffect()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable_list:BuffTable.intervaleffect)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _internal_mutable_intervaleffect();
}
inline const ::google::protobuf::RepeatedField<double>&
BuffTable::_internal_intervaleffect() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.intervaleffect_;
}
inline ::google::protobuf::RepeatedField<double>* BuffTable::_internal_mutable_intervaleffect() {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return &_impl_.intervaleffect_;
}

// double movement_speed_boost = 15;
inline void BuffTable::clear_movement_speed_boost() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.movement_speed_boost_ = 0;
}
inline double BuffTable::movement_speed_boost() const {
  // @@protoc_insertion_point(field_get:BuffTable.movement_speed_boost)
  return _internal_movement_speed_boost();
}
inline void BuffTable::set_movement_speed_boost(double value) {
  _internal_set_movement_speed_boost(value);
  // @@protoc_insertion_point(field_set:BuffTable.movement_speed_boost)
}
inline double BuffTable::_internal_movement_speed_boost() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.movement_speed_boost_;
}
inline void BuffTable::_internal_set_movement_speed_boost(double value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.movement_speed_boost_ = value;
}

// double movement_speed_reduction = 16;
inline void BuffTable::clear_movement_speed_reduction() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.movement_speed_reduction_ = 0;
}
inline double BuffTable::movement_speed_reduction() const {
  // @@protoc_insertion_point(field_get:BuffTable.movement_speed_reduction)
  return _internal_movement_speed_reduction();
}
inline void BuffTable::set_movement_speed_reduction(double value) {
  _internal_set_movement_speed_reduction(value);
  // @@protoc_insertion_point(field_set:BuffTable.movement_speed_reduction)
}
inline double BuffTable::_internal_movement_speed_reduction() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.movement_speed_reduction_;
}
inline void BuffTable::_internal_set_movement_speed_reduction(double value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.movement_speed_reduction_ = value;
}

// string healthregeneration = 17;
inline void BuffTable::clear_healthregeneration() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.healthregeneration_.ClearToEmpty();
}
inline const std::string& BuffTable::healthregeneration() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:BuffTable.healthregeneration)
  return _internal_healthregeneration();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void BuffTable::set_healthregeneration(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.healthregeneration_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:BuffTable.healthregeneration)
}
inline std::string* BuffTable::mutable_healthregeneration() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_healthregeneration();
  // @@protoc_insertion_point(field_mutable:BuffTable.healthregeneration)
  return _s;
}
inline const std::string& BuffTable::_internal_healthregeneration() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.healthregeneration_.Get();
}
inline void BuffTable::_internal_set_healthregeneration(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.healthregeneration_.Set(value, GetArena());
}
inline std::string* BuffTable::_internal_mutable_healthregeneration() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.healthregeneration_.Mutable( GetArena());
}
inline std::string* BuffTable::release_healthregeneration() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:BuffTable.healthregeneration)
  return _impl_.healthregeneration_.Release();
}
inline void BuffTable::set_allocated_healthregeneration(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.healthregeneration_.SetAllocated(value, GetArena());
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString() && _impl_.healthregeneration_.IsDefault()) {
    _impl_.healthregeneration_.Set("", GetArena());
  }
  // @@protoc_insertion_point(field_set_allocated:BuffTable.healthregeneration)
}

// repeated uint32 subbuff = 18;
inline int BuffTable::_internal_subbuff_size() const {
  return _internal_subbuff().size();
}
inline int BuffTable::subbuff_size() const {
  return _internal_subbuff_size();
}
inline void BuffTable::clear_subbuff() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.subbuff_.Clear();
}
inline ::uint32_t BuffTable::subbuff(int index) const {
  // @@protoc_insertion_point(field_get:BuffTable.subbuff)
  return _internal_subbuff().Get(index);
}
inline void BuffTable::set_subbuff(int index, ::uint32_t value) {
  _internal_mutable_subbuff()->Set(index, value);
  // @@protoc_insertion_point(field_set:BuffTable.subbuff)
}
inline void BuffTable::add_subbuff(::uint32_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _internal_mutable_subbuff()->Add(value);
  // @@protoc_insertion_point(field_add:BuffTable.subbuff)
}
inline const ::google::protobuf::RepeatedField<::uint32_t>& BuffTable::subbuff() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_list:BuffTable.subbuff)
  return _internal_subbuff();
}
inline ::google::protobuf::RepeatedField<::uint32_t>* BuffTable::mutable_subbuff()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable_list:BuffTable.subbuff)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _internal_mutable_subbuff();
}
inline const ::google::protobuf::RepeatedField<::uint32_t>&
BuffTable::_internal_subbuff() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.subbuff_;
}
inline ::google::protobuf::RepeatedField<::uint32_t>* BuffTable::_internal_mutable_subbuff() {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return &_impl_.subbuff_;
}

// repeated uint32 targetsubbuff = 19;
inline int BuffTable::_internal_targetsubbuff_size() const {
  return _internal_targetsubbuff().size();
}
inline int BuffTable::targetsubbuff_size() const {
  return _internal_targetsubbuff_size();
}
inline void BuffTable::clear_targetsubbuff() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.targetsubbuff_.Clear();
}
inline ::uint32_t BuffTable::targetsubbuff(int index) const {
  // @@protoc_insertion_point(field_get:BuffTable.targetsubbuff)
  return _internal_targetsubbuff().Get(index);
}
inline void BuffTable::set_targetsubbuff(int index, ::uint32_t value) {
  _internal_mutable_targetsubbuff()->Set(index, value);
  // @@protoc_insertion_point(field_set:BuffTable.targetsubbuff)
}
inline void BuffTable::add_targetsubbuff(::uint32_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _internal_mutable_targetsubbuff()->Add(value);
  // @@protoc_insertion_point(field_add:BuffTable.targetsubbuff)
}
inline const ::google::protobuf::RepeatedField<::uint32_t>& BuffTable::targetsubbuff() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_list:BuffTable.targetsubbuff)
  return _internal_targetsubbuff();
}
inline ::google::protobuf::RepeatedField<::uint32_t>* BuffTable::mutable_targetsubbuff()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable_list:BuffTable.targetsubbuff)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _internal_mutable_targetsubbuff();
}
inline const ::google::protobuf::RepeatedField<::uint32_t>&
BuffTable::_internal_targetsubbuff() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.targetsubbuff_;
}
inline ::google::protobuf::RepeatedField<::uint32_t>* BuffTable::_internal_mutable_targetsubbuff() {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return &_impl_.targetsubbuff_;
}

// double nodamageorskillhitinlastseconds = 20;
inline void BuffTable::clear_nodamageorskillhitinlastseconds() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.nodamageorskillhitinlastseconds_ = 0;
}
inline double BuffTable::nodamageorskillhitinlastseconds() const {
  // @@protoc_insertion_point(field_get:BuffTable.nodamageorskillhitinlastseconds)
  return _internal_nodamageorskillhitinlastseconds();
}
inline void BuffTable::set_nodamageorskillhitinlastseconds(double value) {
  _internal_set_nodamageorskillhitinlastseconds(value);
  // @@protoc_insertion_point(field_set:BuffTable.nodamageorskillhitinlastseconds)
}
inline double BuffTable::_internal_nodamageorskillhitinlastseconds() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.nodamageorskillhitinlastseconds_;
}
inline void BuffTable::_internal_set_nodamageorskillhitinlastseconds(double value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.nodamageorskillhitinlastseconds_ = value;
}

// uint32 time = 21;
inline void BuffTable::clear_time() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.time_ = 0u;
}
inline ::uint32_t BuffTable::time() const {
  // @@protoc_insertion_point(field_get:BuffTable.time)
  return _internal_time();
}
inline void BuffTable::set_time(::uint32_t value) {
  _internal_set_time(value);
  // @@protoc_insertion_point(field_set:BuffTable.time)
}
inline ::uint32_t BuffTable::_internal_time() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.time_;
}
inline void BuffTable::_internal_set_time(::uint32_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.time_ = value;
}

// string bonusdamage = 22;
inline void BuffTable::clear_bonusdamage() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.bonusdamage_.ClearToEmpty();
}
inline const std::string& BuffTable::bonusdamage() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:BuffTable.bonusdamage)
  return _internal_bonusdamage();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void BuffTable::set_bonusdamage(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.bonusdamage_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:BuffTable.bonusdamage)
}
inline std::string* BuffTable::mutable_bonusdamage() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_bonusdamage();
  // @@protoc_insertion_point(field_mutable:BuffTable.bonusdamage)
  return _s;
}
inline const std::string& BuffTable::_internal_bonusdamage() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.bonusdamage_.Get();
}
inline void BuffTable::_internal_set_bonusdamage(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.bonusdamage_.Set(value, GetArena());
}
inline std::string* BuffTable::_internal_mutable_bonusdamage() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.bonusdamage_.Mutable( GetArena());
}
inline std::string* BuffTable::release_bonusdamage() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:BuffTable.bonusdamage)
  return _impl_.bonusdamage_.Release();
}
inline void BuffTable::set_allocated_bonusdamage(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.bonusdamage_.SetAllocated(value, GetArena());
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString() && _impl_.bonusdamage_.IsDefault()) {
    _impl_.bonusdamage_.Set("", GetArena());
  }
  // @@protoc_insertion_point(field_set_allocated:BuffTable.bonusdamage)
}

// -------------------------------------------------------------------

// BuffTabledData

// repeated .BuffTable data = 1;
inline int BuffTabledData::_internal_data_size() const {
  return _internal_data().size();
}
inline int BuffTabledData::data_size() const {
  return _internal_data_size();
}
inline void BuffTabledData::clear_data() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.data_.Clear();
}
inline ::BuffTable* BuffTabledData::mutable_data(int index)
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable:BuffTabledData.data)
  return _internal_mutable_data()->Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField<::BuffTable>* BuffTabledData::mutable_data()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable_list:BuffTabledData.data)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _internal_mutable_data();
}
inline const ::BuffTable& BuffTabledData::data(int index) const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:BuffTabledData.data)
  return _internal_data().Get(index);
}
inline ::BuffTable* BuffTabledData::add_data() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::BuffTable* _add = _internal_mutable_data()->Add();
  // @@protoc_insertion_point(field_add:BuffTabledData.data)
  return _add;
}
inline const ::google::protobuf::RepeatedPtrField<::BuffTable>& BuffTabledData::data() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_list:BuffTabledData.data)
  return _internal_data();
}
inline const ::google::protobuf::RepeatedPtrField<::BuffTable>&
BuffTabledData::_internal_data() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.data_;
}
inline ::google::protobuf::RepeatedPtrField<::BuffTable>*
BuffTabledData::_internal_mutable_data() {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return &_impl_.data_;
}

#ifdef __GNUC__
#pragma GCC diagnostic pop
#endif  // __GNUC__

// @@protoc_insertion_point(namespace_scope)


// @@protoc_insertion_point(global_scope)

#include "google/protobuf/port_undef.inc"

#endif  // buff_5fconfig_2eproto_2epb_2eh
