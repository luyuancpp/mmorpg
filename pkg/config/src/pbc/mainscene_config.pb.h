// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: mainscene_config.proto
// Protobuf C++ Version: 5.26.1

#ifndef GOOGLE_PROTOBUF_INCLUDED_mainscene_5fconfig_2eproto_2epb_2eh
#define GOOGLE_PROTOBUF_INCLUDED_mainscene_5fconfig_2eproto_2epb_2eh

#include <limits>
#include <string>
#include <type_traits>
#include <utility>

#include "google/protobuf/port_def.inc"
#if PROTOBUF_VERSION != 5026001
#error "Protobuf C++ gencode is built with an incompatible version of"
#error "Protobuf C++ headers/runtime. See"
#error "https://protobuf.dev/support/cross-version-runtime-guarantee/#cpp"
#endif
#include "google/protobuf/port_undef.inc"
#include "google/protobuf/io/coded_stream.h"
#include "google/protobuf/arena.h"
#include "google/protobuf/arenastring.h"
#include "google/protobuf/generated_message_tctable_decl.h"
#include "google/protobuf/generated_message_util.h"
#include "google/protobuf/metadata_lite.h"
#include "google/protobuf/generated_message_reflection.h"
#include "google/protobuf/message.h"
#include "google/protobuf/repeated_field.h"  // IWYU pragma: export
#include "google/protobuf/extension_set.h"  // IWYU pragma: export
#include "google/protobuf/unknown_field_set.h"
// @@protoc_insertion_point(includes)

// Must be included last.
#include "google/protobuf/port_def.inc"

#define PROTOBUF_INTERNAL_EXPORT_mainscene_5fconfig_2eproto

namespace google {
namespace protobuf {
namespace internal {
class AnyMetadata;
}  // namespace internal
}  // namespace protobuf
}  // namespace google

// Internal implementation detail -- do not use these members.
struct TableStruct_mainscene_5fconfig_2eproto {
  static const ::uint32_t offsets[];
};
extern const ::google::protobuf::internal::DescriptorTable
    descriptor_table_mainscene_5fconfig_2eproto;
class MainSceneTable;
struct MainSceneTableDefaultTypeInternal;
extern MainSceneTableDefaultTypeInternal _MainSceneTable_default_instance_;
class MainSceneTabledData;
struct MainSceneTabledDataDefaultTypeInternal;
extern MainSceneTabledDataDefaultTypeInternal _MainSceneTabledData_default_instance_;
namespace google {
namespace protobuf {
}  // namespace protobuf
}  // namespace google


// ===================================================================


// -------------------------------------------------------------------

class MainSceneTable final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:MainSceneTable) */ {
 public:
  inline MainSceneTable() : MainSceneTable(nullptr) {}
  ~MainSceneTable() override;
  template <typename = void>
  explicit PROTOBUF_CONSTEXPR MainSceneTable(
      ::google::protobuf::internal::ConstantInitialized);

  inline MainSceneTable(const MainSceneTable& from) : MainSceneTable(nullptr, from) {}
  inline MainSceneTable(MainSceneTable&& from) noexcept
      : MainSceneTable(nullptr, std::move(from)) {}
  inline MainSceneTable& operator=(const MainSceneTable& from) {
    CopyFrom(from);
    return *this;
  }
  inline MainSceneTable& operator=(MainSceneTable&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
#ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
#endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const MainSceneTable& default_instance() {
    return *internal_default_instance();
  }
  static inline const MainSceneTable* internal_default_instance() {
    return reinterpret_cast<const MainSceneTable*>(
        &_MainSceneTable_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 0;
  friend void swap(MainSceneTable& a, MainSceneTable& b) { a.Swap(&b); }
  inline void Swap(MainSceneTable* other) {
    if (other == this) return;
#ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr && GetArena() == other->GetArena()) {
#else   // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
#endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(MainSceneTable* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  MainSceneTable* New(::google::protobuf::Arena* arena = nullptr) const final {
    return ::google::protobuf::Message::DefaultConstruct<MainSceneTable>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const MainSceneTable& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const MainSceneTable& from) { MainSceneTable::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  ::size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::google::protobuf::internal::ParseContext* ctx) final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(MainSceneTable* other);
 private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() { return "MainSceneTable"; }

 protected:
  explicit MainSceneTable(::google::protobuf::Arena* arena);
  MainSceneTable(::google::protobuf::Arena* arena, const MainSceneTable& from);
  MainSceneTable(::google::protobuf::Arena* arena, MainSceneTable&& from) noexcept
      : MainSceneTable(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::MessageLite::ClassData* GetClassData()
      const final;

 public:
  ::google::protobuf::Metadata GetMetadata() const final;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kNavBinFileFieldNumber = 2,
    kIdFieldNumber = 1,
  };
  // string nav_bin_file = 2;
  void clear_nav_bin_file() ;
  const std::string& nav_bin_file() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_nav_bin_file(Arg_&& arg, Args_... args);
  std::string* mutable_nav_bin_file();
  PROTOBUF_NODISCARD std::string* release_nav_bin_file();
  void set_allocated_nav_bin_file(std::string* value);

  private:
  const std::string& _internal_nav_bin_file() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_nav_bin_file(
      const std::string& value);
  std::string* _internal_mutable_nav_bin_file();

  public:
  // uint32 id = 1;
  void clear_id() ;
  ::uint32_t id() const;
  void set_id(::uint32_t value);

  private:
  ::uint32_t _internal_id() const;
  void _internal_set_id(::uint32_t value);

  public:
  // @@protoc_insertion_point(class_scope:MainSceneTable)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      1, 2, 0,
      35, 2>
      _table_;
  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from);
    ::google::protobuf::internal::ArenaStringPtr nav_bin_file_;
    ::uint32_t id_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_mainscene_5fconfig_2eproto;
};
// -------------------------------------------------------------------

class MainSceneTabledData final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:MainSceneTabledData) */ {
 public:
  inline MainSceneTabledData() : MainSceneTabledData(nullptr) {}
  ~MainSceneTabledData() override;
  template <typename = void>
  explicit PROTOBUF_CONSTEXPR MainSceneTabledData(
      ::google::protobuf::internal::ConstantInitialized);

  inline MainSceneTabledData(const MainSceneTabledData& from) : MainSceneTabledData(nullptr, from) {}
  inline MainSceneTabledData(MainSceneTabledData&& from) noexcept
      : MainSceneTabledData(nullptr, std::move(from)) {}
  inline MainSceneTabledData& operator=(const MainSceneTabledData& from) {
    CopyFrom(from);
    return *this;
  }
  inline MainSceneTabledData& operator=(MainSceneTabledData&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
#ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
#endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const MainSceneTabledData& default_instance() {
    return *internal_default_instance();
  }
  static inline const MainSceneTabledData* internal_default_instance() {
    return reinterpret_cast<const MainSceneTabledData*>(
        &_MainSceneTabledData_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 1;
  friend void swap(MainSceneTabledData& a, MainSceneTabledData& b) { a.Swap(&b); }
  inline void Swap(MainSceneTabledData* other) {
    if (other == this) return;
#ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr && GetArena() == other->GetArena()) {
#else   // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
#endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(MainSceneTabledData* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  MainSceneTabledData* New(::google::protobuf::Arena* arena = nullptr) const final {
    return ::google::protobuf::Message::DefaultConstruct<MainSceneTabledData>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const MainSceneTabledData& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const MainSceneTabledData& from) { MainSceneTabledData::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  ::size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::google::protobuf::internal::ParseContext* ctx) final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(MainSceneTabledData* other);
 private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() { return "MainSceneTabledData"; }

 protected:
  explicit MainSceneTabledData(::google::protobuf::Arena* arena);
  MainSceneTabledData(::google::protobuf::Arena* arena, const MainSceneTabledData& from);
  MainSceneTabledData(::google::protobuf::Arena* arena, MainSceneTabledData&& from) noexcept
      : MainSceneTabledData(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::MessageLite::ClassData* GetClassData()
      const final;

 public:
  ::google::protobuf::Metadata GetMetadata() const final;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kDataFieldNumber = 1,
  };
  // repeated .MainSceneTable data = 1;
  int data_size() const;
  private:
  int _internal_data_size() const;

  public:
  void clear_data() ;
  ::MainSceneTable* mutable_data(int index);
  ::google::protobuf::RepeatedPtrField<::MainSceneTable>* mutable_data();

  private:
  const ::google::protobuf::RepeatedPtrField<::MainSceneTable>& _internal_data() const;
  ::google::protobuf::RepeatedPtrField<::MainSceneTable>* _internal_mutable_data();
  public:
  const ::MainSceneTable& data(int index) const;
  ::MainSceneTable* add_data();
  const ::google::protobuf::RepeatedPtrField<::MainSceneTable>& data() const;
  // @@protoc_insertion_point(class_scope:MainSceneTabledData)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      0, 1, 1,
      0, 2>
      _table_;
  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from);
    ::google::protobuf::RepeatedPtrField< ::MainSceneTable > data_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_mainscene_5fconfig_2eproto;
};

// ===================================================================




// ===================================================================


#ifdef __GNUC__
#pragma GCC diagnostic push
#pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif  // __GNUC__
// -------------------------------------------------------------------

// MainSceneTable

// uint32 id = 1;
inline void MainSceneTable::clear_id() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.id_ = 0u;
}
inline ::uint32_t MainSceneTable::id() const {
  // @@protoc_insertion_point(field_get:MainSceneTable.id)
  return _internal_id();
}
inline void MainSceneTable::set_id(::uint32_t value) {
  _internal_set_id(value);
  // @@protoc_insertion_point(field_set:MainSceneTable.id)
}
inline ::uint32_t MainSceneTable::_internal_id() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.id_;
}
inline void MainSceneTable::_internal_set_id(::uint32_t value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.id_ = value;
}

// string nav_bin_file = 2;
inline void MainSceneTable::clear_nav_bin_file() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.nav_bin_file_.ClearToEmpty();
}
inline const std::string& MainSceneTable::nav_bin_file() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:MainSceneTable.nav_bin_file)
  return _internal_nav_bin_file();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void MainSceneTable::set_nav_bin_file(Arg_&& arg,
                                                     Args_... args) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.nav_bin_file_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:MainSceneTable.nav_bin_file)
}
inline std::string* MainSceneTable::mutable_nav_bin_file() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_nav_bin_file();
  // @@protoc_insertion_point(field_mutable:MainSceneTable.nav_bin_file)
  return _s;
}
inline const std::string& MainSceneTable::_internal_nav_bin_file() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.nav_bin_file_.Get();
}
inline void MainSceneTable::_internal_set_nav_bin_file(const std::string& value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.nav_bin_file_.Set(value, GetArena());
}
inline std::string* MainSceneTable::_internal_mutable_nav_bin_file() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  return _impl_.nav_bin_file_.Mutable( GetArena());
}
inline std::string* MainSceneTable::release_nav_bin_file() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  // @@protoc_insertion_point(field_release:MainSceneTable.nav_bin_file)
  return _impl_.nav_bin_file_.Release();
}
inline void MainSceneTable::set_allocated_nav_bin_file(std::string* value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.nav_bin_file_.SetAllocated(value, GetArena());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.nav_bin_file_.IsDefault()) {
          _impl_.nav_bin_file_.Set("", GetArena());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:MainSceneTable.nav_bin_file)
}

// -------------------------------------------------------------------

// MainSceneTabledData

// repeated .MainSceneTable data = 1;
inline int MainSceneTabledData::_internal_data_size() const {
  return _internal_data().size();
}
inline int MainSceneTabledData::data_size() const {
  return _internal_data_size();
}
inline void MainSceneTabledData::clear_data() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.data_.Clear();
}
inline ::MainSceneTable* MainSceneTabledData::mutable_data(int index)
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable:MainSceneTabledData.data)
  return _internal_mutable_data()->Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField<::MainSceneTable>* MainSceneTabledData::mutable_data()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable_list:MainSceneTabledData.data)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  return _internal_mutable_data();
}
inline const ::MainSceneTable& MainSceneTabledData::data(int index) const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:MainSceneTabledData.data)
  return _internal_data().Get(index);
}
inline ::MainSceneTable* MainSceneTabledData::add_data() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ::MainSceneTable* _add = _internal_mutable_data()->Add();
  // @@protoc_insertion_point(field_add:MainSceneTabledData.data)
  return _add;
}
inline const ::google::protobuf::RepeatedPtrField<::MainSceneTable>& MainSceneTabledData::data() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_list:MainSceneTabledData.data)
  return _internal_data();
}
inline const ::google::protobuf::RepeatedPtrField<::MainSceneTable>&
MainSceneTabledData::_internal_data() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.data_;
}
inline ::google::protobuf::RepeatedPtrField<::MainSceneTable>*
MainSceneTabledData::_internal_mutable_data() {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return &_impl_.data_;
}

#ifdef __GNUC__
#pragma GCC diagnostic pop
#endif  // __GNUC__

// @@protoc_insertion_point(namespace_scope)


// @@protoc_insertion_point(global_scope)

#include "google/protobuf/port_undef.inc"

#endif  // GOOGLE_PROTOBUF_INCLUDED_mainscene_5fconfig_2eproto_2epb_2eh
