// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: test_config.proto
// Protobuf C++ Version: 5.26.1

#include "test_config.pb.h"

#include <algorithm>
#include "google/protobuf/io/coded_stream.h"
#include "google/protobuf/extension_set.h"
#include "google/protobuf/wire_format_lite.h"
#include "google/protobuf/descriptor.h"
#include "google/protobuf/generated_message_reflection.h"
#include "google/protobuf/reflection_ops.h"
#include "google/protobuf/wire_format.h"
#include "google/protobuf/generated_message_tctable_impl.h"
// @@protoc_insertion_point(includes)

// Must be included last.
#include "google/protobuf/port_def.inc"
PROTOBUF_PRAGMA_INIT_SEG
namespace _pb = ::google::protobuf;
namespace _pbi = ::google::protobuf::internal;
namespace _fl = ::google::protobuf::internal::field_layout;

inline constexpr testobj::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : testobj_key_{0u},
        testobj_value_{0u},
        _cached_size_{0} {}

template <typename>
PROTOBUF_CONSTEXPR testobj::testobj(::_pbi::ConstantInitialized)
    : _impl_(::_pbi::ConstantInitialized()) {}
struct testobjDefaultTypeInternal {
  PROTOBUF_CONSTEXPR testobjDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~testobjDefaultTypeInternal() {}
  union {
    testobj _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 testobjDefaultTypeInternal _testobj_default_instance_;

inline constexpr tag::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : tag_key_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        tag_value_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        _cached_size_{0} {}

template <typename>
PROTOBUF_CONSTEXPR tag::tag(::_pbi::ConstantInitialized)
    : _impl_(::_pbi::ConstantInitialized()) {}
struct tagDefaultTypeInternal {
  PROTOBUF_CONSTEXPR tagDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~tagDefaultTypeInternal() {}
  union {
    tag _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 tagDefaultTypeInternal _tag_default_instance_;

inline constexpr immunetag::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : immunetag_key_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        immunetag_value_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        _cached_size_{0} {}

template <typename>
PROTOBUF_CONSTEXPR immunetag::immunetag(::_pbi::ConstantInitialized)
    : _impl_(::_pbi::ConstantInitialized()) {}
struct immunetagDefaultTypeInternal {
  PROTOBUF_CONSTEXPR immunetagDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~immunetagDefaultTypeInternal() {}
  union {
    immunetag _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 immunetagDefaultTypeInternal _immunetag_default_instance_;
      template <typename>
PROTOBUF_CONSTEXPR TestTable_TagEntry_DoNotUse::TestTable_TagEntry_DoNotUse(::_pbi::ConstantInitialized) {}
struct TestTable_TagEntry_DoNotUseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR TestTable_TagEntry_DoNotUseDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~TestTable_TagEntry_DoNotUseDefaultTypeInternal() {}
  union {
    TestTable_TagEntry_DoNotUse _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 TestTable_TagEntry_DoNotUseDefaultTypeInternal _TestTable_TagEntry_DoNotUse_default_instance_;
      template <typename>
PROTOBUF_CONSTEXPR TestTable_ImmunetagEntry_DoNotUse::TestTable_ImmunetagEntry_DoNotUse(::_pbi::ConstantInitialized) {}
struct TestTable_ImmunetagEntry_DoNotUseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR TestTable_ImmunetagEntry_DoNotUseDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~TestTable_ImmunetagEntry_DoNotUseDefaultTypeInternal() {}
  union {
    TestTable_ImmunetagEntry_DoNotUse _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 TestTable_ImmunetagEntry_DoNotUseDefaultTypeInternal _TestTable_ImmunetagEntry_DoNotUse_default_instance_;

inline constexpr TestTable::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : tag_{},
        immunetag_{},
        testobj_{},
        effect_{},
        _effect_cached_byte_size_{0},
        id_{0u},
        level_{0u},
        _cached_size_{0} {}

template <typename>
PROTOBUF_CONSTEXPR TestTable::TestTable(::_pbi::ConstantInitialized)
    : _impl_(::_pbi::ConstantInitialized()) {}
struct TestTableDefaultTypeInternal {
  PROTOBUF_CONSTEXPR TestTableDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~TestTableDefaultTypeInternal() {}
  union {
    TestTable _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 TestTableDefaultTypeInternal _TestTable_default_instance_;

inline constexpr TestTabledData::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : data_{},
        _cached_size_{0} {}

template <typename>
PROTOBUF_CONSTEXPR TestTabledData::TestTabledData(::_pbi::ConstantInitialized)
    : _impl_(::_pbi::ConstantInitialized()) {}
struct TestTabledDataDefaultTypeInternal {
  PROTOBUF_CONSTEXPR TestTabledDataDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~TestTabledDataDefaultTypeInternal() {}
  union {
    TestTabledData _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 TestTabledDataDefaultTypeInternal _TestTabledData_default_instance_;
static ::_pb::Metadata file_level_metadata_test_5fconfig_2eproto[7];
static constexpr const ::_pb::EnumDescriptor**
    file_level_enum_descriptors_test_5fconfig_2eproto = nullptr;
static constexpr const ::_pb::ServiceDescriptor**
    file_level_service_descriptors_test_5fconfig_2eproto = nullptr;
const ::uint32_t
    TableStruct_test_5fconfig_2eproto::offsets[] ABSL_ATTRIBUTE_SECTION_VARIABLE(
        protodesc_cold) = {
        ~0u,  // no _has_bits_
        PROTOBUF_FIELD_OFFSET(::tag, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::tag, _impl_.tag_key_),
        PROTOBUF_FIELD_OFFSET(::tag, _impl_.tag_value_),
        ~0u,  // no _has_bits_
        PROTOBUF_FIELD_OFFSET(::immunetag, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::immunetag, _impl_.immunetag_key_),
        PROTOBUF_FIELD_OFFSET(::immunetag, _impl_.immunetag_value_),
        ~0u,  // no _has_bits_
        PROTOBUF_FIELD_OFFSET(::testobj, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::testobj, _impl_.testobj_key_),
        PROTOBUF_FIELD_OFFSET(::testobj, _impl_.testobj_value_),
        PROTOBUF_FIELD_OFFSET(::TestTable_TagEntry_DoNotUse, _has_bits_),
        PROTOBUF_FIELD_OFFSET(::TestTable_TagEntry_DoNotUse, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::TestTable_TagEntry_DoNotUse, key_),
        PROTOBUF_FIELD_OFFSET(::TestTable_TagEntry_DoNotUse, value_),
        0,
        1,
        PROTOBUF_FIELD_OFFSET(::TestTable_ImmunetagEntry_DoNotUse, _has_bits_),
        PROTOBUF_FIELD_OFFSET(::TestTable_ImmunetagEntry_DoNotUse, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::TestTable_ImmunetagEntry_DoNotUse, key_),
        PROTOBUF_FIELD_OFFSET(::TestTable_ImmunetagEntry_DoNotUse, value_),
        0,
        1,
        ~0u,  // no _has_bits_
        PROTOBUF_FIELD_OFFSET(::TestTable, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::TestTable, _impl_.id_),
        PROTOBUF_FIELD_OFFSET(::TestTable, _impl_.tag_),
        PROTOBUF_FIELD_OFFSET(::TestTable, _impl_.immunetag_),
        PROTOBUF_FIELD_OFFSET(::TestTable, _impl_.level_),
        PROTOBUF_FIELD_OFFSET(::TestTable, _impl_.testobj_),
        PROTOBUF_FIELD_OFFSET(::TestTable, _impl_.effect_),
        ~0u,  // no _has_bits_
        PROTOBUF_FIELD_OFFSET(::TestTabledData, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::TestTabledData, _impl_.data_),
};

static const ::_pbi::MigrationSchema
    schemas[] ABSL_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
        {0, -1, -1, sizeof(::tag)},
        {10, -1, -1, sizeof(::immunetag)},
        {20, -1, -1, sizeof(::testobj)},
        {30, 40, -1, sizeof(::TestTable_TagEntry_DoNotUse)},
        {42, 52, -1, sizeof(::TestTable_ImmunetagEntry_DoNotUse)},
        {54, -1, -1, sizeof(::TestTable)},
        {68, -1, -1, sizeof(::TestTabledData)},
};
static const ::_pb::Message* const file_default_instances[] = {
    &::_tag_default_instance_._instance,
    &::_immunetag_default_instance_._instance,
    &::_testobj_default_instance_._instance,
    &::_TestTable_TagEntry_DoNotUse_default_instance_._instance,
    &::_TestTable_ImmunetagEntry_DoNotUse_default_instance_._instance,
    &::_TestTable_default_instance_._instance,
    &::_TestTabledData_default_instance_._instance,
};
const char descriptor_table_protodef_test_5fconfig_2eproto[] ABSL_ATTRIBUTE_SECTION_VARIABLE(
    protodesc_cold) = {
    "\n\021test_config.proto\")\n\003tag\022\017\n\007tag_key\030\001 "
    "\001(\t\022\021\n\ttag_value\030\002 \001(\t\";\n\timmunetag\022\025\n\ri"
    "mmunetag_key\030\001 \001(\t\022\027\n\017immunetag_value\030\002 "
    "\001(\t\"5\n\007testobj\022\023\n\013testobj_key\030\001 \001(\r\022\025\n\rt"
    "estobj_value\030\002 \001(\r\"\377\001\n\tTestTable\022\n\n\002id\030\001"
    " \001(\r\022 \n\003tag\030\002 \003(\0132\023.TestTable.TagEntry\022,"
    "\n\timmunetag\030\003 \003(\0132\031.TestTable.ImmunetagE"
    "ntry\022\r\n\005level\030\004 \001(\r\022\031\n\007testobj\030\005 \003(\0132\010.t"
    "estobj\022\016\n\006effect\030\006 \003(\r\032*\n\010TagEntry\022\013\n\003ke"
    "y\030\001 \001(\t\022\r\n\005value\030\002 \001(\t:\0028\001\0320\n\016ImmunetagE"
    "ntry\022\013\n\003key\030\001 \001(\t\022\r\n\005value\030\002 \001(\t:\0028\001\"*\n\016"
    "TestTabledData\022\030\n\004data\030\001 \003(\0132\n.TestTable"
    "B\tZ\007pb/gameb\006proto3"
};
static ::absl::once_flag descriptor_table_test_5fconfig_2eproto_once;
const ::_pbi::DescriptorTable descriptor_table_test_5fconfig_2eproto = {
    false,
    false,
    499,
    descriptor_table_protodef_test_5fconfig_2eproto,
    "test_config.proto",
    &descriptor_table_test_5fconfig_2eproto_once,
    nullptr,
    0,
    7,
    schemas,
    file_default_instances,
    TableStruct_test_5fconfig_2eproto::offsets,
    file_level_metadata_test_5fconfig_2eproto,
    file_level_enum_descriptors_test_5fconfig_2eproto,
    file_level_service_descriptors_test_5fconfig_2eproto,
};

// This function exists to be marked as weak.
// It can significantly speed up compilation by breaking up LLVM's SCC
// in the .pb.cc translation units. Large translation units see a
// reduction of more than 35% of walltime for optimized builds. Without
// the weak attribute all the messages in the file, including all the
// vtables and everything they use become part of the same SCC through
// a cycle like:
// GetMetadata -> descriptor table -> default instances ->
//   vtables -> GetMetadata
// By adding a weak function here we break the connection from the
// individual vtables back into the descriptor table.
PROTOBUF_ATTRIBUTE_WEAK const ::_pbi::DescriptorTable* descriptor_table_test_5fconfig_2eproto_getter() {
  return &descriptor_table_test_5fconfig_2eproto;
}
// ===================================================================

class tag::_Internal {
 public:
};

tag::tag(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:tag)
}
inline PROTOBUF_NDEBUG_INLINE tag::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from)
      : tag_key_(arena, from.tag_key_),
        tag_value_(arena, from.tag_value_),
        _cached_size_{0} {}

tag::tag(
    ::google::protobuf::Arena* arena,
    const tag& from)
    : ::google::protobuf::Message(arena) {
  tag* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_);

  // @@protoc_insertion_point(copy_constructor:tag)
}
inline PROTOBUF_NDEBUG_INLINE tag::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : tag_key_(arena),
        tag_value_(arena),
        _cached_size_{0} {}

inline void tag::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
}
tag::~tag() {
  // @@protoc_insertion_point(destructor:tag)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void tag::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  _impl_.tag_key_.Destroy();
  _impl_.tag_value_.Destroy();
  _impl_.~Impl_();
}

const ::google::protobuf::MessageLite::ClassData*
tag::GetClassData() const {
  PROTOBUF_CONSTINIT static const ::google::protobuf::MessageLite::
      ClassDataFull _data_ = {
          {
              nullptr,  // OnDemandRegisterArenaDtor
              PROTOBUF_FIELD_OFFSET(tag, _impl_._cached_size_),
              false,
          },
          &tag::MergeImpl,
          &tag::kDescriptorMethods,
      };
  return &_data_;
}
PROTOBUF_NOINLINE void tag::Clear() {
// @@protoc_insertion_point(message_clear_start:tag)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.tag_key_.ClearToEmpty();
  _impl_.tag_value_.ClearToEmpty();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* tag::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<1, 2, 0, 28, 2> tag::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    2, 8,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967292,  // skipmap
    offsetof(decltype(_table_), field_entries),
    2,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    &_tag_default_instance_._instance,
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::tag>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // string tag_value = 2;
    {::_pbi::TcParser::FastUS1,
     {18, 63, 0, PROTOBUF_FIELD_OFFSET(tag, _impl_.tag_value_)}},
    // string tag_key = 1;
    {::_pbi::TcParser::FastUS1,
     {10, 63, 0, PROTOBUF_FIELD_OFFSET(tag, _impl_.tag_key_)}},
  }}, {{
    65535, 65535
  }}, {{
    // string tag_key = 1;
    {PROTOBUF_FIELD_OFFSET(tag, _impl_.tag_key_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // string tag_value = 2;
    {PROTOBUF_FIELD_OFFSET(tag, _impl_.tag_value_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
  }},
  // no aux_entries
  {{
    "\3\7\11\0\0\0\0\0"
    "tag"
    "tag_key"
    "tag_value"
  }},
};

::uint8_t* tag::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:tag)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  // string tag_key = 1;
  if (!this->_internal_tag_key().empty()) {
    const std::string& _s = this->_internal_tag_key();
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
        _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "tag.tag_key");
    target = stream->WriteStringMaybeAliased(1, _s, target);
  }

  // string tag_value = 2;
  if (!this->_internal_tag_value().empty()) {
    const std::string& _s = this->_internal_tag_value();
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
        _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "tag.tag_value");
    target = stream->WriteStringMaybeAliased(2, _s, target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:tag)
  return target;
}

::size_t tag::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:tag)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string tag_key = 1;
  if (!this->_internal_tag_key().empty()) {
    total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                    this->_internal_tag_key());
  }

  // string tag_value = 2;
  if (!this->_internal_tag_value().empty()) {
    total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                    this->_internal_tag_value());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}


void tag::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<tag*>(&to_msg);
  auto& from = static_cast<const tag&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:tag)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_tag_key().empty()) {
    _this->_internal_set_tag_key(from._internal_tag_key());
  }
  if (!from._internal_tag_value().empty()) {
    _this->_internal_set_tag_value(from._internal_tag_value());
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void tag::CopyFrom(const tag& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:tag)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool tag::IsInitialized() const {
  return true;
}

void tag::InternalSwap(tag* PROTOBUF_RESTRICT other) {
  using std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.tag_key_, &other->_impl_.tag_key_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.tag_value_, &other->_impl_.tag_value_, arena);
}

::google::protobuf::Metadata tag::GetMetadata() const {
  return ::_pbi::AssignDescriptors(&descriptor_table_test_5fconfig_2eproto_getter,
                                   &descriptor_table_test_5fconfig_2eproto_once,
                                   file_level_metadata_test_5fconfig_2eproto[0]);
}
// ===================================================================

class immunetag::_Internal {
 public:
};

immunetag::immunetag(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:immunetag)
}
inline PROTOBUF_NDEBUG_INLINE immunetag::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from)
      : immunetag_key_(arena, from.immunetag_key_),
        immunetag_value_(arena, from.immunetag_value_),
        _cached_size_{0} {}

immunetag::immunetag(
    ::google::protobuf::Arena* arena,
    const immunetag& from)
    : ::google::protobuf::Message(arena) {
  immunetag* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_);

  // @@protoc_insertion_point(copy_constructor:immunetag)
}
inline PROTOBUF_NDEBUG_INLINE immunetag::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : immunetag_key_(arena),
        immunetag_value_(arena),
        _cached_size_{0} {}

inline void immunetag::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
}
immunetag::~immunetag() {
  // @@protoc_insertion_point(destructor:immunetag)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void immunetag::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  _impl_.immunetag_key_.Destroy();
  _impl_.immunetag_value_.Destroy();
  _impl_.~Impl_();
}

const ::google::protobuf::MessageLite::ClassData*
immunetag::GetClassData() const {
  PROTOBUF_CONSTINIT static const ::google::protobuf::MessageLite::
      ClassDataFull _data_ = {
          {
              nullptr,  // OnDemandRegisterArenaDtor
              PROTOBUF_FIELD_OFFSET(immunetag, _impl_._cached_size_),
              false,
          },
          &immunetag::MergeImpl,
          &immunetag::kDescriptorMethods,
      };
  return &_data_;
}
PROTOBUF_NOINLINE void immunetag::Clear() {
// @@protoc_insertion_point(message_clear_start:immunetag)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.immunetag_key_.ClearToEmpty();
  _impl_.immunetag_value_.ClearToEmpty();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* immunetag::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<1, 2, 0, 46, 2> immunetag::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    2, 8,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967292,  // skipmap
    offsetof(decltype(_table_), field_entries),
    2,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    &_immunetag_default_instance_._instance,
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::immunetag>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // string immunetag_value = 2;
    {::_pbi::TcParser::FastUS1,
     {18, 63, 0, PROTOBUF_FIELD_OFFSET(immunetag, _impl_.immunetag_value_)}},
    // string immunetag_key = 1;
    {::_pbi::TcParser::FastUS1,
     {10, 63, 0, PROTOBUF_FIELD_OFFSET(immunetag, _impl_.immunetag_key_)}},
  }}, {{
    65535, 65535
  }}, {{
    // string immunetag_key = 1;
    {PROTOBUF_FIELD_OFFSET(immunetag, _impl_.immunetag_key_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // string immunetag_value = 2;
    {PROTOBUF_FIELD_OFFSET(immunetag, _impl_.immunetag_value_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
  }},
  // no aux_entries
  {{
    "\11\15\17\0\0\0\0\0"
    "immunetag"
    "immunetag_key"
    "immunetag_value"
  }},
};

::uint8_t* immunetag::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:immunetag)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  // string immunetag_key = 1;
  if (!this->_internal_immunetag_key().empty()) {
    const std::string& _s = this->_internal_immunetag_key();
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
        _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "immunetag.immunetag_key");
    target = stream->WriteStringMaybeAliased(1, _s, target);
  }

  // string immunetag_value = 2;
  if (!this->_internal_immunetag_value().empty()) {
    const std::string& _s = this->_internal_immunetag_value();
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
        _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "immunetag.immunetag_value");
    target = stream->WriteStringMaybeAliased(2, _s, target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:immunetag)
  return target;
}

::size_t immunetag::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:immunetag)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string immunetag_key = 1;
  if (!this->_internal_immunetag_key().empty()) {
    total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                    this->_internal_immunetag_key());
  }

  // string immunetag_value = 2;
  if (!this->_internal_immunetag_value().empty()) {
    total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                    this->_internal_immunetag_value());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}


void immunetag::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<immunetag*>(&to_msg);
  auto& from = static_cast<const immunetag&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:immunetag)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_immunetag_key().empty()) {
    _this->_internal_set_immunetag_key(from._internal_immunetag_key());
  }
  if (!from._internal_immunetag_value().empty()) {
    _this->_internal_set_immunetag_value(from._internal_immunetag_value());
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void immunetag::CopyFrom(const immunetag& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:immunetag)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool immunetag::IsInitialized() const {
  return true;
}

void immunetag::InternalSwap(immunetag* PROTOBUF_RESTRICT other) {
  using std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.immunetag_key_, &other->_impl_.immunetag_key_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.immunetag_value_, &other->_impl_.immunetag_value_, arena);
}

::google::protobuf::Metadata immunetag::GetMetadata() const {
  return ::_pbi::AssignDescriptors(&descriptor_table_test_5fconfig_2eproto_getter,
                                   &descriptor_table_test_5fconfig_2eproto_once,
                                   file_level_metadata_test_5fconfig_2eproto[1]);
}
// ===================================================================

class testobj::_Internal {
 public:
};

testobj::testobj(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:testobj)
}
testobj::testobj(
    ::google::protobuf::Arena* arena, const testobj& from)
    : testobj(arena) {
  MergeFrom(from);
}
inline PROTOBUF_NDEBUG_INLINE testobj::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0} {}

inline void testobj::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, testobj_key_),
           0,
           offsetof(Impl_, testobj_value_) -
               offsetof(Impl_, testobj_key_) +
               sizeof(Impl_::testobj_value_));
}
testobj::~testobj() {
  // @@protoc_insertion_point(destructor:testobj)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void testobj::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  _impl_.~Impl_();
}

const ::google::protobuf::MessageLite::ClassData*
testobj::GetClassData() const {
  PROTOBUF_CONSTINIT static const ::google::protobuf::MessageLite::
      ClassDataFull _data_ = {
          {
              nullptr,  // OnDemandRegisterArenaDtor
              PROTOBUF_FIELD_OFFSET(testobj, _impl_._cached_size_),
              false,
          },
          &testobj::MergeImpl,
          &testobj::kDescriptorMethods,
      };
  return &_data_;
}
PROTOBUF_NOINLINE void testobj::Clear() {
// @@protoc_insertion_point(message_clear_start:testobj)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&_impl_.testobj_key_, 0, static_cast<::size_t>(
      reinterpret_cast<char*>(&_impl_.testobj_value_) -
      reinterpret_cast<char*>(&_impl_.testobj_key_)) + sizeof(_impl_.testobj_value_));
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* testobj::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<1, 2, 0, 0, 2> testobj::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    2, 8,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967292,  // skipmap
    offsetof(decltype(_table_), field_entries),
    2,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    &_testobj_default_instance_._instance,
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::testobj>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // uint32 testobj_value = 2;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(testobj, _impl_.testobj_value_), 63>(),
     {16, 63, 0, PROTOBUF_FIELD_OFFSET(testobj, _impl_.testobj_value_)}},
    // uint32 testobj_key = 1;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(testobj, _impl_.testobj_key_), 63>(),
     {8, 63, 0, PROTOBUF_FIELD_OFFSET(testobj, _impl_.testobj_key_)}},
  }}, {{
    65535, 65535
  }}, {{
    // uint32 testobj_key = 1;
    {PROTOBUF_FIELD_OFFSET(testobj, _impl_.testobj_key_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUInt32)},
    // uint32 testobj_value = 2;
    {PROTOBUF_FIELD_OFFSET(testobj, _impl_.testobj_value_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUInt32)},
  }},
  // no aux_entries
  {{
  }},
};

::uint8_t* testobj::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:testobj)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  // uint32 testobj_key = 1;
  if (this->_internal_testobj_key() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt32ToArray(
        1, this->_internal_testobj_key(), target);
  }

  // uint32 testobj_value = 2;
  if (this->_internal_testobj_value() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt32ToArray(
        2, this->_internal_testobj_value(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:testobj)
  return target;
}

::size_t testobj::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:testobj)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // uint32 testobj_key = 1;
  if (this->_internal_testobj_key() != 0) {
    total_size += ::_pbi::WireFormatLite::UInt32SizePlusOne(
        this->_internal_testobj_key());
  }

  // uint32 testobj_value = 2;
  if (this->_internal_testobj_value() != 0) {
    total_size += ::_pbi::WireFormatLite::UInt32SizePlusOne(
        this->_internal_testobj_value());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}


void testobj::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<testobj*>(&to_msg);
  auto& from = static_cast<const testobj&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:testobj)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_testobj_key() != 0) {
    _this->_impl_.testobj_key_ = from._impl_.testobj_key_;
  }
  if (from._internal_testobj_value() != 0) {
    _this->_impl_.testobj_value_ = from._impl_.testobj_value_;
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void testobj::CopyFrom(const testobj& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:testobj)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool testobj::IsInitialized() const {
  return true;
}

void testobj::InternalSwap(testobj* PROTOBUF_RESTRICT other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(testobj, _impl_.testobj_value_)
      + sizeof(testobj::_impl_.testobj_value_)
      - PROTOBUF_FIELD_OFFSET(testobj, _impl_.testobj_key_)>(
          reinterpret_cast<char*>(&_impl_.testobj_key_),
          reinterpret_cast<char*>(&other->_impl_.testobj_key_));
}

::google::protobuf::Metadata testobj::GetMetadata() const {
  return ::_pbi::AssignDescriptors(&descriptor_table_test_5fconfig_2eproto_getter,
                                   &descriptor_table_test_5fconfig_2eproto_once,
                                   file_level_metadata_test_5fconfig_2eproto[2]);
}
// ===================================================================

TestTable_TagEntry_DoNotUse::TestTable_TagEntry_DoNotUse() {}
TestTable_TagEntry_DoNotUse::TestTable_TagEntry_DoNotUse(::google::protobuf::Arena* arena)
    : SuperType(arena) {}
::google::protobuf::Metadata TestTable_TagEntry_DoNotUse::GetMetadata() const {
  return ::_pbi::AssignDescriptors(&descriptor_table_test_5fconfig_2eproto_getter,
                                   &descriptor_table_test_5fconfig_2eproto_once,
                                   file_level_metadata_test_5fconfig_2eproto[3]);
}
// ===================================================================

TestTable_ImmunetagEntry_DoNotUse::TestTable_ImmunetagEntry_DoNotUse() {}
TestTable_ImmunetagEntry_DoNotUse::TestTable_ImmunetagEntry_DoNotUse(::google::protobuf::Arena* arena)
    : SuperType(arena) {}
::google::protobuf::Metadata TestTable_ImmunetagEntry_DoNotUse::GetMetadata() const {
  return ::_pbi::AssignDescriptors(&descriptor_table_test_5fconfig_2eproto_getter,
                                   &descriptor_table_test_5fconfig_2eproto_once,
                                   file_level_metadata_test_5fconfig_2eproto[4]);
}
// ===================================================================

class TestTable::_Internal {
 public:
};

TestTable::TestTable(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:TestTable)
}
inline PROTOBUF_NDEBUG_INLINE TestTable::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from)
      : tag_{visibility, arena, from.tag_},
        immunetag_{visibility, arena, from.immunetag_},
        testobj_{visibility, arena, from.testobj_},
        effect_{visibility, arena, from.effect_},
        _effect_cached_byte_size_{0},
        _cached_size_{0} {}

TestTable::TestTable(
    ::google::protobuf::Arena* arena,
    const TestTable& from)
    : ::google::protobuf::Message(arena) {
  TestTable* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_);
  ::memcpy(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, id_),
           reinterpret_cast<const char *>(&from._impl_) +
               offsetof(Impl_, id_),
           offsetof(Impl_, level_) -
               offsetof(Impl_, id_) +
               sizeof(Impl_::level_));

  // @@protoc_insertion_point(copy_constructor:TestTable)
}
inline PROTOBUF_NDEBUG_INLINE TestTable::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : tag_{visibility, arena},
        immunetag_{visibility, arena},
        testobj_{visibility, arena},
        effect_{visibility, arena},
        _effect_cached_byte_size_{0},
        _cached_size_{0} {}

inline void TestTable::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, id_),
           0,
           offsetof(Impl_, level_) -
               offsetof(Impl_, id_) +
               sizeof(Impl_::level_));
}
TestTable::~TestTable() {
  // @@protoc_insertion_point(destructor:TestTable)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void TestTable::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  _impl_.~Impl_();
}

const ::google::protobuf::MessageLite::ClassData*
TestTable::GetClassData() const {
  PROTOBUF_CONSTINIT static const ::google::protobuf::MessageLite::
      ClassDataFull _data_ = {
          {
              nullptr,  // OnDemandRegisterArenaDtor
              PROTOBUF_FIELD_OFFSET(TestTable, _impl_._cached_size_),
              false,
          },
          &TestTable::MergeImpl,
          &TestTable::kDescriptorMethods,
      };
  return &_data_;
}
PROTOBUF_NOINLINE void TestTable::Clear() {
// @@protoc_insertion_point(message_clear_start:TestTable)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.tag_.Clear();
  _impl_.immunetag_.Clear();
  _impl_.testobj_.Clear();
  _impl_.effect_.Clear();
  ::memset(&_impl_.id_, 0, static_cast<::size_t>(
      reinterpret_cast<char*>(&_impl_.level_) -
      reinterpret_cast<char*>(&_impl_.id_)) + sizeof(_impl_.level_));
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* TestTable::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<3, 6, 3, 30, 2> TestTable::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    6, 56,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967232,  // skipmap
    offsetof(decltype(_table_), field_entries),
    6,  // num_field_entries
    3,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    &_TestTable_default_instance_._instance,
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::TestTable>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
    // uint32 id = 1;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(TestTable, _impl_.id_), 63>(),
     {8, 63, 0, PROTOBUF_FIELD_OFFSET(TestTable, _impl_.id_)}},
    {::_pbi::TcParser::MiniParse, {}},
    {::_pbi::TcParser::MiniParse, {}},
    // uint32 level = 4;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(TestTable, _impl_.level_), 63>(),
     {32, 63, 0, PROTOBUF_FIELD_OFFSET(TestTable, _impl_.level_)}},
    // repeated .testobj testobj = 5;
    {::_pbi::TcParser::FastMtR1,
     {42, 63, 2, PROTOBUF_FIELD_OFFSET(TestTable, _impl_.testobj_)}},
    // repeated uint32 effect = 6;
    {::_pbi::TcParser::FastV32P1,
     {50, 63, 0, PROTOBUF_FIELD_OFFSET(TestTable, _impl_.effect_)}},
    {::_pbi::TcParser::MiniParse, {}},
  }}, {{
    65535, 65535
  }}, {{
    // uint32 id = 1;
    {PROTOBUF_FIELD_OFFSET(TestTable, _impl_.id_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUInt32)},
    // map<string, string> tag = 2;
    {PROTOBUF_FIELD_OFFSET(TestTable, _impl_.tag_), 0, 0,
    (0 | ::_fl::kFcRepeated | ::_fl::kMap)},
    // map<string, string> immunetag = 3;
    {PROTOBUF_FIELD_OFFSET(TestTable, _impl_.immunetag_), 0, 1,
    (0 | ::_fl::kFcRepeated | ::_fl::kMap)},
    // uint32 level = 4;
    {PROTOBUF_FIELD_OFFSET(TestTable, _impl_.level_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUInt32)},
    // repeated .testobj testobj = 5;
    {PROTOBUF_FIELD_OFFSET(TestTable, _impl_.testobj_), 0, 2,
    (0 | ::_fl::kFcRepeated | ::_fl::kMessage | ::_fl::kTvTable)},
    // repeated uint32 effect = 6;
    {PROTOBUF_FIELD_OFFSET(TestTable, _impl_.effect_), 0, 0,
    (0 | ::_fl::kFcRepeated | ::_fl::kPackedUInt32)},
  }}, {{
    {::_pbi::TcParser::GetMapAuxInfo<
        decltype(TestTable()._impl_.tag_)>(
        1, 0, 0, 9,
        9)},
    {::_pbi::TcParser::GetMapAuxInfo<
        decltype(TestTable()._impl_.immunetag_)>(
        1, 0, 0, 9,
        9)},
    {::_pbi::TcParser::GetTable<::testobj>()},
  }}, {{
    "\11\0\3\11\0\0\0\0"
    "TestTable"
    "tag"
    "immunetag"
  }},
};

::uint8_t* TestTable::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:TestTable)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  // uint32 id = 1;
  if (this->_internal_id() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt32ToArray(
        1, this->_internal_id(), target);
  }

  // map<string, string> tag = 2;
  if (!_internal_tag().empty()) {
    using MapType = ::google::protobuf::Map<std::string, std::string>;
    using WireHelper = _pbi::MapEntryFuncs<std::string, std::string,
                                   _pbi::WireFormatLite::TYPE_STRING,
                                   _pbi::WireFormatLite::TYPE_STRING>;
    const auto& field = _internal_tag();

    if (stream->IsSerializationDeterministic() && field.size() > 1) {
      for (const auto& entry : ::google::protobuf::internal::MapSorterPtr<MapType>(field)) {
        target = WireHelper::InternalSerialize(
            2, entry.first, entry.second, target, stream);
        ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            entry.first.data(), static_cast<int>(entry.first.length()),
 ::google::protobuf::internal::WireFormatLite::SERIALIZE, "TestTable.tag");
        ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            entry.second.data(), static_cast<int>(entry.second.length()),
 ::google::protobuf::internal::WireFormatLite::SERIALIZE, "TestTable.tag");
      }
    } else {
      for (const auto& entry : field) {
        target = WireHelper::InternalSerialize(
            2, entry.first, entry.second, target, stream);
        ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            entry.first.data(), static_cast<int>(entry.first.length()),
 ::google::protobuf::internal::WireFormatLite::SERIALIZE, "TestTable.tag");
        ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            entry.second.data(), static_cast<int>(entry.second.length()),
 ::google::protobuf::internal::WireFormatLite::SERIALIZE, "TestTable.tag");
      }
    }
  }

  // map<string, string> immunetag = 3;
  if (!_internal_immunetag().empty()) {
    using MapType = ::google::protobuf::Map<std::string, std::string>;
    using WireHelper = _pbi::MapEntryFuncs<std::string, std::string,
                                   _pbi::WireFormatLite::TYPE_STRING,
                                   _pbi::WireFormatLite::TYPE_STRING>;
    const auto& field = _internal_immunetag();

    if (stream->IsSerializationDeterministic() && field.size() > 1) {
      for (const auto& entry : ::google::protobuf::internal::MapSorterPtr<MapType>(field)) {
        target = WireHelper::InternalSerialize(
            3, entry.first, entry.second, target, stream);
        ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            entry.first.data(), static_cast<int>(entry.first.length()),
 ::google::protobuf::internal::WireFormatLite::SERIALIZE, "TestTable.immunetag");
        ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            entry.second.data(), static_cast<int>(entry.second.length()),
 ::google::protobuf::internal::WireFormatLite::SERIALIZE, "TestTable.immunetag");
      }
    } else {
      for (const auto& entry : field) {
        target = WireHelper::InternalSerialize(
            3, entry.first, entry.second, target, stream);
        ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            entry.first.data(), static_cast<int>(entry.first.length()),
 ::google::protobuf::internal::WireFormatLite::SERIALIZE, "TestTable.immunetag");
        ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            entry.second.data(), static_cast<int>(entry.second.length()),
 ::google::protobuf::internal::WireFormatLite::SERIALIZE, "TestTable.immunetag");
      }
    }
  }

  // uint32 level = 4;
  if (this->_internal_level() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt32ToArray(
        4, this->_internal_level(), target);
  }

  // repeated .testobj testobj = 5;
  for (unsigned i = 0, n = static_cast<unsigned>(
                           this->_internal_testobj_size());
       i < n; i++) {
    const auto& repfield = this->_internal_testobj().Get(i);
    target =
        ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
            5, repfield, repfield.GetCachedSize(),
            target, stream);
  }

  // repeated uint32 effect = 6;
  {
    int byte_size = _impl_._effect_cached_byte_size_.Get();
    if (byte_size > 0) {
      target = stream->WriteUInt32Packed(
          6, _internal_effect(), byte_size, target);
    }
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:TestTable)
  return target;
}

::size_t TestTable::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:TestTable)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // map<string, string> tag = 2;
  total_size += 1 * ::google::protobuf::internal::FromIntSize(_internal_tag_size());
  for (const auto& entry : _internal_tag()) {
    total_size += _pbi::MapEntryFuncs<std::string, std::string,
                                   _pbi::WireFormatLite::TYPE_STRING,
                                   _pbi::WireFormatLite::TYPE_STRING>::ByteSizeLong(entry.first, entry.second);
  }
  // map<string, string> immunetag = 3;
  total_size += 1 * ::google::protobuf::internal::FromIntSize(_internal_immunetag_size());
  for (const auto& entry : _internal_immunetag()) {
    total_size += _pbi::MapEntryFuncs<std::string, std::string,
                                   _pbi::WireFormatLite::TYPE_STRING,
                                   _pbi::WireFormatLite::TYPE_STRING>::ByteSizeLong(entry.first, entry.second);
  }
  // repeated .testobj testobj = 5;
  total_size += 1UL * this->_internal_testobj_size();
  for (const auto& msg : this->_internal_testobj()) {
    total_size += ::google::protobuf::internal::WireFormatLite::MessageSize(msg);
  }
  // repeated uint32 effect = 6;
  {
    std::size_t data_size = ::_pbi::WireFormatLite::UInt32Size(
        this->_internal_effect())
    ;
    _impl_._effect_cached_byte_size_.Set(::_pbi::ToCachedSize(data_size));
    std::size_t tag_size = data_size == 0
        ? 0
        : 1 + ::_pbi::WireFormatLite::Int32Size(
                            static_cast<int32_t>(data_size))
    ;
    total_size += tag_size + data_size;
  }
  // uint32 id = 1;
  if (this->_internal_id() != 0) {
    total_size += ::_pbi::WireFormatLite::UInt32SizePlusOne(
        this->_internal_id());
  }

  // uint32 level = 4;
  if (this->_internal_level() != 0) {
    total_size += ::_pbi::WireFormatLite::UInt32SizePlusOne(
        this->_internal_level());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}


void TestTable::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<TestTable*>(&to_msg);
  auto& from = static_cast<const TestTable&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:TestTable)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_impl_.tag_.MergeFrom(from._impl_.tag_);
  _this->_impl_.immunetag_.MergeFrom(from._impl_.immunetag_);
  _this->_internal_mutable_testobj()->MergeFrom(
      from._internal_testobj());
  _this->_internal_mutable_effect()->MergeFrom(from._internal_effect());
  if (from._internal_id() != 0) {
    _this->_impl_.id_ = from._impl_.id_;
  }
  if (from._internal_level() != 0) {
    _this->_impl_.level_ = from._impl_.level_;
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void TestTable::CopyFrom(const TestTable& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:TestTable)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool TestTable::IsInitialized() const {
  return true;
}

void TestTable::InternalSwap(TestTable* PROTOBUF_RESTRICT other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  _impl_.tag_.InternalSwap(&other->_impl_.tag_);
  _impl_.immunetag_.InternalSwap(&other->_impl_.immunetag_);
  _impl_.testobj_.InternalSwap(&other->_impl_.testobj_);
  _impl_.effect_.InternalSwap(&other->_impl_.effect_);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(TestTable, _impl_.level_)
      + sizeof(TestTable::_impl_.level_)
      - PROTOBUF_FIELD_OFFSET(TestTable, _impl_.id_)>(
          reinterpret_cast<char*>(&_impl_.id_),
          reinterpret_cast<char*>(&other->_impl_.id_));
}

::google::protobuf::Metadata TestTable::GetMetadata() const {
  return ::_pbi::AssignDescriptors(&descriptor_table_test_5fconfig_2eproto_getter,
                                   &descriptor_table_test_5fconfig_2eproto_once,
                                   file_level_metadata_test_5fconfig_2eproto[5]);
}
// ===================================================================

class TestTabledData::_Internal {
 public:
};

TestTabledData::TestTabledData(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:TestTabledData)
}
inline PROTOBUF_NDEBUG_INLINE TestTabledData::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from)
      : data_{visibility, arena, from.data_},
        _cached_size_{0} {}

TestTabledData::TestTabledData(
    ::google::protobuf::Arena* arena,
    const TestTabledData& from)
    : ::google::protobuf::Message(arena) {
  TestTabledData* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_);

  // @@protoc_insertion_point(copy_constructor:TestTabledData)
}
inline PROTOBUF_NDEBUG_INLINE TestTabledData::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : data_{visibility, arena},
        _cached_size_{0} {}

inline void TestTabledData::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
}
TestTabledData::~TestTabledData() {
  // @@protoc_insertion_point(destructor:TestTabledData)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void TestTabledData::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  _impl_.~Impl_();
}

const ::google::protobuf::MessageLite::ClassData*
TestTabledData::GetClassData() const {
  PROTOBUF_CONSTINIT static const ::google::protobuf::MessageLite::
      ClassDataFull _data_ = {
          {
              nullptr,  // OnDemandRegisterArenaDtor
              PROTOBUF_FIELD_OFFSET(TestTabledData, _impl_._cached_size_),
              false,
          },
          &TestTabledData::MergeImpl,
          &TestTabledData::kDescriptorMethods,
      };
  return &_data_;
}
PROTOBUF_NOINLINE void TestTabledData::Clear() {
// @@protoc_insertion_point(message_clear_start:TestTabledData)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.data_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* TestTabledData::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<0, 1, 1, 0, 2> TestTabledData::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    1, 0,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967294,  // skipmap
    offsetof(decltype(_table_), field_entries),
    1,  // num_field_entries
    1,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    &_TestTabledData_default_instance_._instance,
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::TestTabledData>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // repeated .TestTable data = 1;
    {::_pbi::TcParser::FastMtR1,
     {10, 63, 0, PROTOBUF_FIELD_OFFSET(TestTabledData, _impl_.data_)}},
  }}, {{
    65535, 65535
  }}, {{
    // repeated .TestTable data = 1;
    {PROTOBUF_FIELD_OFFSET(TestTabledData, _impl_.data_), 0, 0,
    (0 | ::_fl::kFcRepeated | ::_fl::kMessage | ::_fl::kTvTable)},
  }}, {{
    {::_pbi::TcParser::GetTable<::TestTable>()},
  }}, {{
  }},
};

::uint8_t* TestTabledData::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:TestTabledData)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  // repeated .TestTable data = 1;
  for (unsigned i = 0, n = static_cast<unsigned>(
                           this->_internal_data_size());
       i < n; i++) {
    const auto& repfield = this->_internal_data().Get(i);
    target =
        ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
            1, repfield, repfield.GetCachedSize(),
            target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:TestTabledData)
  return target;
}

::size_t TestTabledData::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:TestTabledData)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated .TestTable data = 1;
  total_size += 1UL * this->_internal_data_size();
  for (const auto& msg : this->_internal_data()) {
    total_size += ::google::protobuf::internal::WireFormatLite::MessageSize(msg);
  }
  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}


void TestTabledData::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<TestTabledData*>(&to_msg);
  auto& from = static_cast<const TestTabledData&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:TestTabledData)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_internal_mutable_data()->MergeFrom(
      from._internal_data());
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void TestTabledData::CopyFrom(const TestTabledData& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:TestTabledData)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool TestTabledData::IsInitialized() const {
  return true;
}

void TestTabledData::InternalSwap(TestTabledData* PROTOBUF_RESTRICT other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  _impl_.data_.InternalSwap(&other->_impl_.data_);
}

::google::protobuf::Metadata TestTabledData::GetMetadata() const {
  return ::_pbi::AssignDescriptors(&descriptor_table_test_5fconfig_2eproto_getter,
                                   &descriptor_table_test_5fconfig_2eproto_once,
                                   file_level_metadata_test_5fconfig_2eproto[6]);
}
// @@protoc_insertion_point(namespace_scope)
namespace google {
namespace protobuf {
}  // namespace protobuf
}  // namespace google
// @@protoc_insertion_point(global_scope)
PROTOBUF_ATTRIBUTE_INIT_PRIORITY2
static ::std::false_type _static_init_ PROTOBUF_UNUSED =
    (::_pbi::AddDescriptors(&descriptor_table_test_5fconfig_2eproto),
     ::std::false_type{});
#include "google/protobuf/port_undef.inc"
