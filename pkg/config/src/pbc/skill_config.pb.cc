// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: skill_config.proto
// Protobuf C++ Version: 5.26.1

#include "skill_config.pb.h"

#include <algorithm>
#include "google/protobuf/io/coded_stream.h"
#include "google/protobuf/extension_set.h"
#include "google/protobuf/wire_format_lite.h"
#include "google/protobuf/descriptor.h"
#include "google/protobuf/generated_message_reflection.h"
#include "google/protobuf/reflection_ops.h"
#include "google/protobuf/wire_format.h"
#include "google/protobuf/generated_message_tctable_impl.h"
// @@protoc_insertion_point(includes)

// Must be included last.
#include "google/protobuf/port_def.inc"
PROTOBUF_PRAGMA_INIT_SEG
namespace _pb = ::google::protobuf;
namespace _pbi = ::google::protobuf::internal;
namespace _fl = ::google::protobuf::internal::field_layout;

inline constexpr Skillrequiredresource::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : requiredresource_type_{0u},
        requiredresource_value_{0u},
        _cached_size_{0} {}

template <typename>
PROTOBUF_CONSTEXPR Skillrequiredresource::Skillrequiredresource(::_pbi::ConstantInitialized)
    : _impl_(::_pbi::ConstantInitialized()) {}
struct SkillrequiredresourceDefaultTypeInternal {
  PROTOBUF_CONSTEXPR SkillrequiredresourceDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~SkillrequiredresourceDefaultTypeInternal() {}
  union {
    Skillrequiredresource _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 SkillrequiredresourceDefaultTypeInternal _Skillrequiredresource_default_instance_;

inline constexpr Skillrequireditem::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : requireditem_value_{::uint64_t{0u}},
        requireditem_type_{0u},
        _cached_size_{0} {}

template <typename>
PROTOBUF_CONSTEXPR Skillrequireditem::Skillrequireditem(::_pbi::ConstantInitialized)
    : _impl_(::_pbi::ConstantInitialized()) {}
struct SkillrequireditemDefaultTypeInternal {
  PROTOBUF_CONSTEXPR SkillrequireditemDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~SkillrequireditemDefaultTypeInternal() {}
  union {
    Skillrequireditem _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 SkillrequireditemDefaultTypeInternal _Skillrequireditem_default_instance_;

inline constexpr Skillrequestresource::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : requestresource_id_{0u},
        requestresource_cost_{0u},
        _cached_size_{0} {}

template <typename>
PROTOBUF_CONSTEXPR Skillrequestresource::Skillrequestresource(::_pbi::ConstantInitialized)
    : _impl_(::_pbi::ConstantInitialized()) {}
struct SkillrequestresourceDefaultTypeInternal {
  PROTOBUF_CONSTEXPR SkillrequestresourceDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~SkillrequestresourceDefaultTypeInternal() {}
  union {
    Skillrequestresource _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 SkillrequestresourceDefaultTypeInternal _Skillrequestresource_default_instance_;

inline constexpr SkillTable::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : skill_type_{},
        _skill_type_cached_byte_size_{0},
        target_type_{},
        _target_type_cached_byte_size_{0},
        requireditem_{},
        requiredresource_{},
        effect_{},
        _effect_cached_byte_size_{0},
        requestresource_{},
        damage_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        id_{0u},
        rquest_target_{0u},
        castpoint_{0},
        target_status_{0u},
        immediately_{0u},
        recoverytime_{0},
        channelthink_{0u},
        channelfinish_{0u},
        thinkinterval_{0u},
        channeltime_{0u},
        range_{0},
        max_range_{0},
        min_range_{0},
        self_status_{0u},
        required_status_{0u},
        cooldown_id_{0u},
        _cached_size_{0} {}

template <typename>
PROTOBUF_CONSTEXPR SkillTable::SkillTable(::_pbi::ConstantInitialized)
    : _impl_(::_pbi::ConstantInitialized()) {}
struct SkillTableDefaultTypeInternal {
  PROTOBUF_CONSTEXPR SkillTableDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~SkillTableDefaultTypeInternal() {}
  union {
    SkillTable _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 SkillTableDefaultTypeInternal _SkillTable_default_instance_;

inline constexpr SkillTabledData::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : data_{},
        _cached_size_{0} {}

template <typename>
PROTOBUF_CONSTEXPR SkillTabledData::SkillTabledData(::_pbi::ConstantInitialized)
    : _impl_(::_pbi::ConstantInitialized()) {}
struct SkillTabledDataDefaultTypeInternal {
  PROTOBUF_CONSTEXPR SkillTabledDataDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~SkillTabledDataDefaultTypeInternal() {}
  union {
    SkillTabledData _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 SkillTabledDataDefaultTypeInternal _SkillTabledData_default_instance_;
static ::_pb::Metadata file_level_metadata_skill_5fconfig_2eproto[5];
static constexpr const ::_pb::EnumDescriptor**
    file_level_enum_descriptors_skill_5fconfig_2eproto = nullptr;
static constexpr const ::_pb::ServiceDescriptor**
    file_level_service_descriptors_skill_5fconfig_2eproto = nullptr;
const ::uint32_t
    TableStruct_skill_5fconfig_2eproto::offsets[] ABSL_ATTRIBUTE_SECTION_VARIABLE(
        protodesc_cold) = {
        ~0u,  // no _has_bits_
        PROTOBUF_FIELD_OFFSET(::Skillrequireditem, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::Skillrequireditem, _impl_.requireditem_type_),
        PROTOBUF_FIELD_OFFSET(::Skillrequireditem, _impl_.requireditem_value_),
        ~0u,  // no _has_bits_
        PROTOBUF_FIELD_OFFSET(::Skillrequiredresource, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::Skillrequiredresource, _impl_.requiredresource_type_),
        PROTOBUF_FIELD_OFFSET(::Skillrequiredresource, _impl_.requiredresource_value_),
        ~0u,  // no _has_bits_
        PROTOBUF_FIELD_OFFSET(::Skillrequestresource, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::Skillrequestresource, _impl_.requestresource_id_),
        PROTOBUF_FIELD_OFFSET(::Skillrequestresource, _impl_.requestresource_cost_),
        ~0u,  // no _has_bits_
        PROTOBUF_FIELD_OFFSET(::SkillTable, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::SkillTable, _impl_.id_),
        PROTOBUF_FIELD_OFFSET(::SkillTable, _impl_.skill_type_),
        PROTOBUF_FIELD_OFFSET(::SkillTable, _impl_.target_type_),
        PROTOBUF_FIELD_OFFSET(::SkillTable, _impl_.rquest_target_),
        PROTOBUF_FIELD_OFFSET(::SkillTable, _impl_.target_status_),
        PROTOBUF_FIELD_OFFSET(::SkillTable, _impl_.castpoint_),
        PROTOBUF_FIELD_OFFSET(::SkillTable, _impl_.recoverytime_),
        PROTOBUF_FIELD_OFFSET(::SkillTable, _impl_.immediately_),
        PROTOBUF_FIELD_OFFSET(::SkillTable, _impl_.requireditem_),
        PROTOBUF_FIELD_OFFSET(::SkillTable, _impl_.requiredresource_),
        PROTOBUF_FIELD_OFFSET(::SkillTable, _impl_.effect_),
        PROTOBUF_FIELD_OFFSET(::SkillTable, _impl_.channelthink_),
        PROTOBUF_FIELD_OFFSET(::SkillTable, _impl_.channelfinish_),
        PROTOBUF_FIELD_OFFSET(::SkillTable, _impl_.thinkinterval_),
        PROTOBUF_FIELD_OFFSET(::SkillTable, _impl_.channeltime_),
        PROTOBUF_FIELD_OFFSET(::SkillTable, _impl_.requestresource_),
        PROTOBUF_FIELD_OFFSET(::SkillTable, _impl_.range_),
        PROTOBUF_FIELD_OFFSET(::SkillTable, _impl_.max_range_),
        PROTOBUF_FIELD_OFFSET(::SkillTable, _impl_.min_range_),
        PROTOBUF_FIELD_OFFSET(::SkillTable, _impl_.self_status_),
        PROTOBUF_FIELD_OFFSET(::SkillTable, _impl_.required_status_),
        PROTOBUF_FIELD_OFFSET(::SkillTable, _impl_.cooldown_id_),
        PROTOBUF_FIELD_OFFSET(::SkillTable, _impl_.damage_),
        ~0u,  // no _has_bits_
        PROTOBUF_FIELD_OFFSET(::SkillTabledData, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::SkillTabledData, _impl_.data_),
};

static const ::_pbi::MigrationSchema
    schemas[] ABSL_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
        {0, -1, -1, sizeof(::Skillrequireditem)},
        {10, -1, -1, sizeof(::Skillrequiredresource)},
        {20, -1, -1, sizeof(::Skillrequestresource)},
        {30, -1, -1, sizeof(::SkillTable)},
        {61, -1, -1, sizeof(::SkillTabledData)},
};
static const ::_pb::Message* const file_default_instances[] = {
    &::_Skillrequireditem_default_instance_._instance,
    &::_Skillrequiredresource_default_instance_._instance,
    &::_Skillrequestresource_default_instance_._instance,
    &::_SkillTable_default_instance_._instance,
    &::_SkillTabledData_default_instance_._instance,
};
const char descriptor_table_protodef_skill_5fconfig_2eproto[] ABSL_ATTRIBUTE_SECTION_VARIABLE(
    protodesc_cold) = {
    "\n\022skill_config.proto\"J\n\021Skillrequiredite"
    "m\022\031\n\021requireditem_type\030\001 \001(\r\022\032\n\022required"
    "item_value\030\002 \001(\004\"V\n\025Skillrequiredresourc"
    "e\022\035\n\025requiredresource_type\030\001 \001(\r\022\036\n\026requ"
    "iredresource_value\030\002 \001(\r\"P\n\024Skillrequest"
    "resource\022\032\n\022requestresource_id\030\001 \001(\r\022\034\n\024"
    "requestresource_cost\030\002 \001(\r\"\252\004\n\nSkillTabl"
    "e\022\n\n\002id\030\001 \001(\r\022\022\n\nskill_type\030\002 \003(\r\022\023\n\013tar"
    "get_type\030\003 \003(\r\022\025\n\rrquest_target\030\004 \001(\r\022\025\n"
    "\rtarget_status\030\005 \001(\r\022\021\n\tcastpoint\030\006 \001(\001\022"
    "\024\n\014recoverytime\030\007 \001(\001\022\023\n\013immediately\030\010 \001"
    "(\r\022(\n\014requireditem\030\t \003(\0132\022.Skillrequired"
    "item\0220\n\020requiredresource\030\n \003(\0132\026.Skillre"
    "quiredresource\022\016\n\006effect\030\013 \003(\r\022\024\n\014channe"
    "lthink\030\014 \001(\r\022\025\n\rchannelfinish\030\r \001(\r\022\025\n\rt"
    "hinkinterval\030\016 \001(\r\022\023\n\013channeltime\030\017 \001(\r\022"
    ".\n\017requestresource\030\020 \003(\0132\025.Skillrequestr"
    "esource\022\r\n\005range\030\021 \001(\001\022\021\n\tmax_range\030\022 \001("
    "\001\022\021\n\tmin_range\030\023 \001(\001\022\023\n\013self_status\030\024 \001("
    "\r\022\027\n\017required_status\030\025 \001(\r\022\023\n\013cooldown_i"
    "d\030\026 \001(\r\022\016\n\006damage\030\027 \001(\t\",\n\017SkillTabledDa"
    "ta\022\031\n\004data\030\001 \003(\0132\013.SkillTableB\tZ\007pb/game"
    "b\006proto3"
};
static ::absl::once_flag descriptor_table_skill_5fconfig_2eproto_once;
const ::_pbi::DescriptorTable descriptor_table_skill_5fconfig_2eproto = {
    false,
    false,
    888,
    descriptor_table_protodef_skill_5fconfig_2eproto,
    "skill_config.proto",
    &descriptor_table_skill_5fconfig_2eproto_once,
    nullptr,
    0,
    5,
    schemas,
    file_default_instances,
    TableStruct_skill_5fconfig_2eproto::offsets,
    file_level_metadata_skill_5fconfig_2eproto,
    file_level_enum_descriptors_skill_5fconfig_2eproto,
    file_level_service_descriptors_skill_5fconfig_2eproto,
};

// This function exists to be marked as weak.
// It can significantly speed up compilation by breaking up LLVM's SCC
// in the .pb.cc translation units. Large translation units see a
// reduction of more than 35% of walltime for optimized builds. Without
// the weak attribute all the messages in the file, including all the
// vtables and everything they use become part of the same SCC through
// a cycle like:
// GetMetadata -> descriptor table -> default instances ->
//   vtables -> GetMetadata
// By adding a weak function here we break the connection from the
// individual vtables back into the descriptor table.
PROTOBUF_ATTRIBUTE_WEAK const ::_pbi::DescriptorTable* descriptor_table_skill_5fconfig_2eproto_getter() {
  return &descriptor_table_skill_5fconfig_2eproto;
}
// ===================================================================

class Skillrequireditem::_Internal {
 public:
};

Skillrequireditem::Skillrequireditem(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:Skillrequireditem)
}
Skillrequireditem::Skillrequireditem(
    ::google::protobuf::Arena* arena, const Skillrequireditem& from)
    : Skillrequireditem(arena) {
  MergeFrom(from);
}
inline PROTOBUF_NDEBUG_INLINE Skillrequireditem::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0} {}

inline void Skillrequireditem::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, requireditem_value_),
           0,
           offsetof(Impl_, requireditem_type_) -
               offsetof(Impl_, requireditem_value_) +
               sizeof(Impl_::requireditem_type_));
}
Skillrequireditem::~Skillrequireditem() {
  // @@protoc_insertion_point(destructor:Skillrequireditem)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void Skillrequireditem::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  _impl_.~Impl_();
}

const ::google::protobuf::MessageLite::ClassData*
Skillrequireditem::GetClassData() const {
  PROTOBUF_CONSTINIT static const ::google::protobuf::MessageLite::
      ClassDataFull _data_ = {
          {
              nullptr,  // OnDemandRegisterArenaDtor
              PROTOBUF_FIELD_OFFSET(Skillrequireditem, _impl_._cached_size_),
              false,
          },
          &Skillrequireditem::MergeImpl,
          &Skillrequireditem::kDescriptorMethods,
      };
  return &_data_;
}
PROTOBUF_NOINLINE void Skillrequireditem::Clear() {
// @@protoc_insertion_point(message_clear_start:Skillrequireditem)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&_impl_.requireditem_value_, 0, static_cast<::size_t>(
      reinterpret_cast<char*>(&_impl_.requireditem_type_) -
      reinterpret_cast<char*>(&_impl_.requireditem_value_)) + sizeof(_impl_.requireditem_type_));
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* Skillrequireditem::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<1, 2, 0, 0, 2> Skillrequireditem::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    2, 8,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967292,  // skipmap
    offsetof(decltype(_table_), field_entries),
    2,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    &_Skillrequireditem_default_instance_._instance,
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::Skillrequireditem>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // uint64 requireditem_value = 2;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint64_t, offsetof(Skillrequireditem, _impl_.requireditem_value_), 63>(),
     {16, 63, 0, PROTOBUF_FIELD_OFFSET(Skillrequireditem, _impl_.requireditem_value_)}},
    // uint32 requireditem_type = 1;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(Skillrequireditem, _impl_.requireditem_type_), 63>(),
     {8, 63, 0, PROTOBUF_FIELD_OFFSET(Skillrequireditem, _impl_.requireditem_type_)}},
  }}, {{
    65535, 65535
  }}, {{
    // uint32 requireditem_type = 1;
    {PROTOBUF_FIELD_OFFSET(Skillrequireditem, _impl_.requireditem_type_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUInt32)},
    // uint64 requireditem_value = 2;
    {PROTOBUF_FIELD_OFFSET(Skillrequireditem, _impl_.requireditem_value_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUInt64)},
  }},
  // no aux_entries
  {{
  }},
};

::uint8_t* Skillrequireditem::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:Skillrequireditem)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  // uint32 requireditem_type = 1;
  if (this->_internal_requireditem_type() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt32ToArray(
        1, this->_internal_requireditem_type(), target);
  }

  // uint64 requireditem_value = 2;
  if (this->_internal_requireditem_value() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt64ToArray(
        2, this->_internal_requireditem_value(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:Skillrequireditem)
  return target;
}

::size_t Skillrequireditem::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:Skillrequireditem)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // uint64 requireditem_value = 2;
  if (this->_internal_requireditem_value() != 0) {
    total_size += ::_pbi::WireFormatLite::UInt64SizePlusOne(
        this->_internal_requireditem_value());
  }

  // uint32 requireditem_type = 1;
  if (this->_internal_requireditem_type() != 0) {
    total_size += ::_pbi::WireFormatLite::UInt32SizePlusOne(
        this->_internal_requireditem_type());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}


void Skillrequireditem::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<Skillrequireditem*>(&to_msg);
  auto& from = static_cast<const Skillrequireditem&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:Skillrequireditem)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_requireditem_value() != 0) {
    _this->_impl_.requireditem_value_ = from._impl_.requireditem_value_;
  }
  if (from._internal_requireditem_type() != 0) {
    _this->_impl_.requireditem_type_ = from._impl_.requireditem_type_;
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void Skillrequireditem::CopyFrom(const Skillrequireditem& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:Skillrequireditem)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool Skillrequireditem::IsInitialized() const {
  return true;
}

void Skillrequireditem::InternalSwap(Skillrequireditem* PROTOBUF_RESTRICT other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(Skillrequireditem, _impl_.requireditem_type_)
      + sizeof(Skillrequireditem::_impl_.requireditem_type_)
      - PROTOBUF_FIELD_OFFSET(Skillrequireditem, _impl_.requireditem_value_)>(
          reinterpret_cast<char*>(&_impl_.requireditem_value_),
          reinterpret_cast<char*>(&other->_impl_.requireditem_value_));
}

::google::protobuf::Metadata Skillrequireditem::GetMetadata() const {
  return ::_pbi::AssignDescriptors(&descriptor_table_skill_5fconfig_2eproto_getter,
                                   &descriptor_table_skill_5fconfig_2eproto_once,
                                   file_level_metadata_skill_5fconfig_2eproto[0]);
}
// ===================================================================

class Skillrequiredresource::_Internal {
 public:
};

Skillrequiredresource::Skillrequiredresource(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:Skillrequiredresource)
}
Skillrequiredresource::Skillrequiredresource(
    ::google::protobuf::Arena* arena, const Skillrequiredresource& from)
    : Skillrequiredresource(arena) {
  MergeFrom(from);
}
inline PROTOBUF_NDEBUG_INLINE Skillrequiredresource::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0} {}

inline void Skillrequiredresource::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, requiredresource_type_),
           0,
           offsetof(Impl_, requiredresource_value_) -
               offsetof(Impl_, requiredresource_type_) +
               sizeof(Impl_::requiredresource_value_));
}
Skillrequiredresource::~Skillrequiredresource() {
  // @@protoc_insertion_point(destructor:Skillrequiredresource)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void Skillrequiredresource::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  _impl_.~Impl_();
}

const ::google::protobuf::MessageLite::ClassData*
Skillrequiredresource::GetClassData() const {
  PROTOBUF_CONSTINIT static const ::google::protobuf::MessageLite::
      ClassDataFull _data_ = {
          {
              nullptr,  // OnDemandRegisterArenaDtor
              PROTOBUF_FIELD_OFFSET(Skillrequiredresource, _impl_._cached_size_),
              false,
          },
          &Skillrequiredresource::MergeImpl,
          &Skillrequiredresource::kDescriptorMethods,
      };
  return &_data_;
}
PROTOBUF_NOINLINE void Skillrequiredresource::Clear() {
// @@protoc_insertion_point(message_clear_start:Skillrequiredresource)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&_impl_.requiredresource_type_, 0, static_cast<::size_t>(
      reinterpret_cast<char*>(&_impl_.requiredresource_value_) -
      reinterpret_cast<char*>(&_impl_.requiredresource_type_)) + sizeof(_impl_.requiredresource_value_));
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* Skillrequiredresource::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<1, 2, 0, 0, 2> Skillrequiredresource::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    2, 8,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967292,  // skipmap
    offsetof(decltype(_table_), field_entries),
    2,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    &_Skillrequiredresource_default_instance_._instance,
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::Skillrequiredresource>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // uint32 requiredresource_value = 2;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(Skillrequiredresource, _impl_.requiredresource_value_), 63>(),
     {16, 63, 0, PROTOBUF_FIELD_OFFSET(Skillrequiredresource, _impl_.requiredresource_value_)}},
    // uint32 requiredresource_type = 1;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(Skillrequiredresource, _impl_.requiredresource_type_), 63>(),
     {8, 63, 0, PROTOBUF_FIELD_OFFSET(Skillrequiredresource, _impl_.requiredresource_type_)}},
  }}, {{
    65535, 65535
  }}, {{
    // uint32 requiredresource_type = 1;
    {PROTOBUF_FIELD_OFFSET(Skillrequiredresource, _impl_.requiredresource_type_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUInt32)},
    // uint32 requiredresource_value = 2;
    {PROTOBUF_FIELD_OFFSET(Skillrequiredresource, _impl_.requiredresource_value_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUInt32)},
  }},
  // no aux_entries
  {{
  }},
};

::uint8_t* Skillrequiredresource::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:Skillrequiredresource)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  // uint32 requiredresource_type = 1;
  if (this->_internal_requiredresource_type() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt32ToArray(
        1, this->_internal_requiredresource_type(), target);
  }

  // uint32 requiredresource_value = 2;
  if (this->_internal_requiredresource_value() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt32ToArray(
        2, this->_internal_requiredresource_value(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:Skillrequiredresource)
  return target;
}

::size_t Skillrequiredresource::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:Skillrequiredresource)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // uint32 requiredresource_type = 1;
  if (this->_internal_requiredresource_type() != 0) {
    total_size += ::_pbi::WireFormatLite::UInt32SizePlusOne(
        this->_internal_requiredresource_type());
  }

  // uint32 requiredresource_value = 2;
  if (this->_internal_requiredresource_value() != 0) {
    total_size += ::_pbi::WireFormatLite::UInt32SizePlusOne(
        this->_internal_requiredresource_value());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}


void Skillrequiredresource::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<Skillrequiredresource*>(&to_msg);
  auto& from = static_cast<const Skillrequiredresource&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:Skillrequiredresource)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_requiredresource_type() != 0) {
    _this->_impl_.requiredresource_type_ = from._impl_.requiredresource_type_;
  }
  if (from._internal_requiredresource_value() != 0) {
    _this->_impl_.requiredresource_value_ = from._impl_.requiredresource_value_;
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void Skillrequiredresource::CopyFrom(const Skillrequiredresource& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:Skillrequiredresource)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool Skillrequiredresource::IsInitialized() const {
  return true;
}

void Skillrequiredresource::InternalSwap(Skillrequiredresource* PROTOBUF_RESTRICT other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(Skillrequiredresource, _impl_.requiredresource_value_)
      + sizeof(Skillrequiredresource::_impl_.requiredresource_value_)
      - PROTOBUF_FIELD_OFFSET(Skillrequiredresource, _impl_.requiredresource_type_)>(
          reinterpret_cast<char*>(&_impl_.requiredresource_type_),
          reinterpret_cast<char*>(&other->_impl_.requiredresource_type_));
}

::google::protobuf::Metadata Skillrequiredresource::GetMetadata() const {
  return ::_pbi::AssignDescriptors(&descriptor_table_skill_5fconfig_2eproto_getter,
                                   &descriptor_table_skill_5fconfig_2eproto_once,
                                   file_level_metadata_skill_5fconfig_2eproto[1]);
}
// ===================================================================

class Skillrequestresource::_Internal {
 public:
};

Skillrequestresource::Skillrequestresource(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:Skillrequestresource)
}
Skillrequestresource::Skillrequestresource(
    ::google::protobuf::Arena* arena, const Skillrequestresource& from)
    : Skillrequestresource(arena) {
  MergeFrom(from);
}
inline PROTOBUF_NDEBUG_INLINE Skillrequestresource::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0} {}

inline void Skillrequestresource::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, requestresource_id_),
           0,
           offsetof(Impl_, requestresource_cost_) -
               offsetof(Impl_, requestresource_id_) +
               sizeof(Impl_::requestresource_cost_));
}
Skillrequestresource::~Skillrequestresource() {
  // @@protoc_insertion_point(destructor:Skillrequestresource)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void Skillrequestresource::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  _impl_.~Impl_();
}

const ::google::protobuf::MessageLite::ClassData*
Skillrequestresource::GetClassData() const {
  PROTOBUF_CONSTINIT static const ::google::protobuf::MessageLite::
      ClassDataFull _data_ = {
          {
              nullptr,  // OnDemandRegisterArenaDtor
              PROTOBUF_FIELD_OFFSET(Skillrequestresource, _impl_._cached_size_),
              false,
          },
          &Skillrequestresource::MergeImpl,
          &Skillrequestresource::kDescriptorMethods,
      };
  return &_data_;
}
PROTOBUF_NOINLINE void Skillrequestresource::Clear() {
// @@protoc_insertion_point(message_clear_start:Skillrequestresource)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&_impl_.requestresource_id_, 0, static_cast<::size_t>(
      reinterpret_cast<char*>(&_impl_.requestresource_cost_) -
      reinterpret_cast<char*>(&_impl_.requestresource_id_)) + sizeof(_impl_.requestresource_cost_));
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* Skillrequestresource::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<1, 2, 0, 0, 2> Skillrequestresource::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    2, 8,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967292,  // skipmap
    offsetof(decltype(_table_), field_entries),
    2,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    &_Skillrequestresource_default_instance_._instance,
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::Skillrequestresource>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // uint32 requestresource_cost = 2;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(Skillrequestresource, _impl_.requestresource_cost_), 63>(),
     {16, 63, 0, PROTOBUF_FIELD_OFFSET(Skillrequestresource, _impl_.requestresource_cost_)}},
    // uint32 requestresource_id = 1;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(Skillrequestresource, _impl_.requestresource_id_), 63>(),
     {8, 63, 0, PROTOBUF_FIELD_OFFSET(Skillrequestresource, _impl_.requestresource_id_)}},
  }}, {{
    65535, 65535
  }}, {{
    // uint32 requestresource_id = 1;
    {PROTOBUF_FIELD_OFFSET(Skillrequestresource, _impl_.requestresource_id_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUInt32)},
    // uint32 requestresource_cost = 2;
    {PROTOBUF_FIELD_OFFSET(Skillrequestresource, _impl_.requestresource_cost_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUInt32)},
  }},
  // no aux_entries
  {{
  }},
};

::uint8_t* Skillrequestresource::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:Skillrequestresource)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  // uint32 requestresource_id = 1;
  if (this->_internal_requestresource_id() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt32ToArray(
        1, this->_internal_requestresource_id(), target);
  }

  // uint32 requestresource_cost = 2;
  if (this->_internal_requestresource_cost() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt32ToArray(
        2, this->_internal_requestresource_cost(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:Skillrequestresource)
  return target;
}

::size_t Skillrequestresource::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:Skillrequestresource)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // uint32 requestresource_id = 1;
  if (this->_internal_requestresource_id() != 0) {
    total_size += ::_pbi::WireFormatLite::UInt32SizePlusOne(
        this->_internal_requestresource_id());
  }

  // uint32 requestresource_cost = 2;
  if (this->_internal_requestresource_cost() != 0) {
    total_size += ::_pbi::WireFormatLite::UInt32SizePlusOne(
        this->_internal_requestresource_cost());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}


void Skillrequestresource::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<Skillrequestresource*>(&to_msg);
  auto& from = static_cast<const Skillrequestresource&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:Skillrequestresource)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_requestresource_id() != 0) {
    _this->_impl_.requestresource_id_ = from._impl_.requestresource_id_;
  }
  if (from._internal_requestresource_cost() != 0) {
    _this->_impl_.requestresource_cost_ = from._impl_.requestresource_cost_;
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void Skillrequestresource::CopyFrom(const Skillrequestresource& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:Skillrequestresource)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool Skillrequestresource::IsInitialized() const {
  return true;
}

void Skillrequestresource::InternalSwap(Skillrequestresource* PROTOBUF_RESTRICT other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(Skillrequestresource, _impl_.requestresource_cost_)
      + sizeof(Skillrequestresource::_impl_.requestresource_cost_)
      - PROTOBUF_FIELD_OFFSET(Skillrequestresource, _impl_.requestresource_id_)>(
          reinterpret_cast<char*>(&_impl_.requestresource_id_),
          reinterpret_cast<char*>(&other->_impl_.requestresource_id_));
}

::google::protobuf::Metadata Skillrequestresource::GetMetadata() const {
  return ::_pbi::AssignDescriptors(&descriptor_table_skill_5fconfig_2eproto_getter,
                                   &descriptor_table_skill_5fconfig_2eproto_once,
                                   file_level_metadata_skill_5fconfig_2eproto[2]);
}
// ===================================================================

class SkillTable::_Internal {
 public:
};

SkillTable::SkillTable(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:SkillTable)
}
inline PROTOBUF_NDEBUG_INLINE SkillTable::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from)
      : skill_type_{visibility, arena, from.skill_type_},
        _skill_type_cached_byte_size_{0},
        target_type_{visibility, arena, from.target_type_},
        _target_type_cached_byte_size_{0},
        requireditem_{visibility, arena, from.requireditem_},
        requiredresource_{visibility, arena, from.requiredresource_},
        effect_{visibility, arena, from.effect_},
        _effect_cached_byte_size_{0},
        requestresource_{visibility, arena, from.requestresource_},
        damage_(arena, from.damage_),
        _cached_size_{0} {}

SkillTable::SkillTable(
    ::google::protobuf::Arena* arena,
    const SkillTable& from)
    : ::google::protobuf::Message(arena) {
  SkillTable* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_);
  ::memcpy(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, id_),
           reinterpret_cast<const char *>(&from._impl_) +
               offsetof(Impl_, id_),
           offsetof(Impl_, cooldown_id_) -
               offsetof(Impl_, id_) +
               sizeof(Impl_::cooldown_id_));

  // @@protoc_insertion_point(copy_constructor:SkillTable)
}
inline PROTOBUF_NDEBUG_INLINE SkillTable::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : skill_type_{visibility, arena},
        _skill_type_cached_byte_size_{0},
        target_type_{visibility, arena},
        _target_type_cached_byte_size_{0},
        requireditem_{visibility, arena},
        requiredresource_{visibility, arena},
        effect_{visibility, arena},
        _effect_cached_byte_size_{0},
        requestresource_{visibility, arena},
        damage_(arena),
        _cached_size_{0} {}

inline void SkillTable::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, id_),
           0,
           offsetof(Impl_, cooldown_id_) -
               offsetof(Impl_, id_) +
               sizeof(Impl_::cooldown_id_));
}
SkillTable::~SkillTable() {
  // @@protoc_insertion_point(destructor:SkillTable)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void SkillTable::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  _impl_.damage_.Destroy();
  _impl_.~Impl_();
}

const ::google::protobuf::MessageLite::ClassData*
SkillTable::GetClassData() const {
  PROTOBUF_CONSTINIT static const ::google::protobuf::MessageLite::
      ClassDataFull _data_ = {
          {
              nullptr,  // OnDemandRegisterArenaDtor
              PROTOBUF_FIELD_OFFSET(SkillTable, _impl_._cached_size_),
              false,
          },
          &SkillTable::MergeImpl,
          &SkillTable::kDescriptorMethods,
      };
  return &_data_;
}
PROTOBUF_NOINLINE void SkillTable::Clear() {
// @@protoc_insertion_point(message_clear_start:SkillTable)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.skill_type_.Clear();
  _impl_.target_type_.Clear();
  _impl_.requireditem_.Clear();
  _impl_.requiredresource_.Clear();
  _impl_.effect_.Clear();
  _impl_.requestresource_.Clear();
  _impl_.damage_.ClearToEmpty();
  ::memset(&_impl_.id_, 0, static_cast<::size_t>(
      reinterpret_cast<char*>(&_impl_.cooldown_id_) -
      reinterpret_cast<char*>(&_impl_.id_)) + sizeof(_impl_.cooldown_id_));
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* SkillTable::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<5, 23, 3, 41, 2> SkillTable::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    23, 248,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4286578688,  // skipmap
    offsetof(decltype(_table_), field_entries),
    23,  // num_field_entries
    3,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    &_SkillTable_default_instance_._instance,
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::SkillTable>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
    // uint32 id = 1;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(SkillTable, _impl_.id_), 63>(),
     {8, 63, 0, PROTOBUF_FIELD_OFFSET(SkillTable, _impl_.id_)}},
    // repeated uint32 skill_type = 2;
    {::_pbi::TcParser::FastV32P1,
     {18, 63, 0, PROTOBUF_FIELD_OFFSET(SkillTable, _impl_.skill_type_)}},
    // repeated uint32 target_type = 3;
    {::_pbi::TcParser::FastV32P1,
     {26, 63, 0, PROTOBUF_FIELD_OFFSET(SkillTable, _impl_.target_type_)}},
    // uint32 rquest_target = 4;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(SkillTable, _impl_.rquest_target_), 63>(),
     {32, 63, 0, PROTOBUF_FIELD_OFFSET(SkillTable, _impl_.rquest_target_)}},
    // uint32 target_status = 5;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(SkillTable, _impl_.target_status_), 63>(),
     {40, 63, 0, PROTOBUF_FIELD_OFFSET(SkillTable, _impl_.target_status_)}},
    // double castpoint = 6;
    {::_pbi::TcParser::FastF64S1,
     {49, 63, 0, PROTOBUF_FIELD_OFFSET(SkillTable, _impl_.castpoint_)}},
    // double recoverytime = 7;
    {::_pbi::TcParser::FastF64S1,
     {57, 63, 0, PROTOBUF_FIELD_OFFSET(SkillTable, _impl_.recoverytime_)}},
    // uint32 immediately = 8;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(SkillTable, _impl_.immediately_), 63>(),
     {64, 63, 0, PROTOBUF_FIELD_OFFSET(SkillTable, _impl_.immediately_)}},
    // repeated .Skillrequireditem requireditem = 9;
    {::_pbi::TcParser::FastMtR1,
     {74, 63, 0, PROTOBUF_FIELD_OFFSET(SkillTable, _impl_.requireditem_)}},
    // repeated .Skillrequiredresource requiredresource = 10;
    {::_pbi::TcParser::FastMtR1,
     {82, 63, 1, PROTOBUF_FIELD_OFFSET(SkillTable, _impl_.requiredresource_)}},
    // repeated uint32 effect = 11;
    {::_pbi::TcParser::FastV32P1,
     {90, 63, 0, PROTOBUF_FIELD_OFFSET(SkillTable, _impl_.effect_)}},
    // uint32 channelthink = 12;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(SkillTable, _impl_.channelthink_), 63>(),
     {96, 63, 0, PROTOBUF_FIELD_OFFSET(SkillTable, _impl_.channelthink_)}},
    // uint32 channelfinish = 13;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(SkillTable, _impl_.channelfinish_), 63>(),
     {104, 63, 0, PROTOBUF_FIELD_OFFSET(SkillTable, _impl_.channelfinish_)}},
    // uint32 thinkinterval = 14;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(SkillTable, _impl_.thinkinterval_), 63>(),
     {112, 63, 0, PROTOBUF_FIELD_OFFSET(SkillTable, _impl_.thinkinterval_)}},
    // uint32 channeltime = 15;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(SkillTable, _impl_.channeltime_), 63>(),
     {120, 63, 0, PROTOBUF_FIELD_OFFSET(SkillTable, _impl_.channeltime_)}},
    // repeated .Skillrequestresource requestresource = 16;
    {::_pbi::TcParser::FastMtR2,
     {386, 63, 2, PROTOBUF_FIELD_OFFSET(SkillTable, _impl_.requestresource_)}},
    // double range = 17;
    {::_pbi::TcParser::FastF64S2,
     {393, 63, 0, PROTOBUF_FIELD_OFFSET(SkillTable, _impl_.range_)}},
    // double max_range = 18;
    {::_pbi::TcParser::FastF64S2,
     {401, 63, 0, PROTOBUF_FIELD_OFFSET(SkillTable, _impl_.max_range_)}},
    // double min_range = 19;
    {::_pbi::TcParser::FastF64S2,
     {409, 63, 0, PROTOBUF_FIELD_OFFSET(SkillTable, _impl_.min_range_)}},
    // uint32 self_status = 20;
    {::_pbi::TcParser::FastV32S2,
     {416, 63, 0, PROTOBUF_FIELD_OFFSET(SkillTable, _impl_.self_status_)}},
    // uint32 required_status = 21;
    {::_pbi::TcParser::FastV32S2,
     {424, 63, 0, PROTOBUF_FIELD_OFFSET(SkillTable, _impl_.required_status_)}},
    // uint32 cooldown_id = 22;
    {::_pbi::TcParser::FastV32S2,
     {432, 63, 0, PROTOBUF_FIELD_OFFSET(SkillTable, _impl_.cooldown_id_)}},
    // string damage = 23;
    {::_pbi::TcParser::FastUS2,
     {442, 63, 0, PROTOBUF_FIELD_OFFSET(SkillTable, _impl_.damage_)}},
    {::_pbi::TcParser::MiniParse, {}},
    {::_pbi::TcParser::MiniParse, {}},
    {::_pbi::TcParser::MiniParse, {}},
    {::_pbi::TcParser::MiniParse, {}},
    {::_pbi::TcParser::MiniParse, {}},
    {::_pbi::TcParser::MiniParse, {}},
    {::_pbi::TcParser::MiniParse, {}},
    {::_pbi::TcParser::MiniParse, {}},
  }}, {{
    65535, 65535
  }}, {{
    // uint32 id = 1;
    {PROTOBUF_FIELD_OFFSET(SkillTable, _impl_.id_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUInt32)},
    // repeated uint32 skill_type = 2;
    {PROTOBUF_FIELD_OFFSET(SkillTable, _impl_.skill_type_), 0, 0,
    (0 | ::_fl::kFcRepeated | ::_fl::kPackedUInt32)},
    // repeated uint32 target_type = 3;
    {PROTOBUF_FIELD_OFFSET(SkillTable, _impl_.target_type_), 0, 0,
    (0 | ::_fl::kFcRepeated | ::_fl::kPackedUInt32)},
    // uint32 rquest_target = 4;
    {PROTOBUF_FIELD_OFFSET(SkillTable, _impl_.rquest_target_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUInt32)},
    // uint32 target_status = 5;
    {PROTOBUF_FIELD_OFFSET(SkillTable, _impl_.target_status_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUInt32)},
    // double castpoint = 6;
    {PROTOBUF_FIELD_OFFSET(SkillTable, _impl_.castpoint_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kDouble)},
    // double recoverytime = 7;
    {PROTOBUF_FIELD_OFFSET(SkillTable, _impl_.recoverytime_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kDouble)},
    // uint32 immediately = 8;
    {PROTOBUF_FIELD_OFFSET(SkillTable, _impl_.immediately_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUInt32)},
    // repeated .Skillrequireditem requireditem = 9;
    {PROTOBUF_FIELD_OFFSET(SkillTable, _impl_.requireditem_), 0, 0,
    (0 | ::_fl::kFcRepeated | ::_fl::kMessage | ::_fl::kTvTable)},
    // repeated .Skillrequiredresource requiredresource = 10;
    {PROTOBUF_FIELD_OFFSET(SkillTable, _impl_.requiredresource_), 0, 1,
    (0 | ::_fl::kFcRepeated | ::_fl::kMessage | ::_fl::kTvTable)},
    // repeated uint32 effect = 11;
    {PROTOBUF_FIELD_OFFSET(SkillTable, _impl_.effect_), 0, 0,
    (0 | ::_fl::kFcRepeated | ::_fl::kPackedUInt32)},
    // uint32 channelthink = 12;
    {PROTOBUF_FIELD_OFFSET(SkillTable, _impl_.channelthink_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUInt32)},
    // uint32 channelfinish = 13;
    {PROTOBUF_FIELD_OFFSET(SkillTable, _impl_.channelfinish_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUInt32)},
    // uint32 thinkinterval = 14;
    {PROTOBUF_FIELD_OFFSET(SkillTable, _impl_.thinkinterval_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUInt32)},
    // uint32 channeltime = 15;
    {PROTOBUF_FIELD_OFFSET(SkillTable, _impl_.channeltime_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUInt32)},
    // repeated .Skillrequestresource requestresource = 16;
    {PROTOBUF_FIELD_OFFSET(SkillTable, _impl_.requestresource_), 0, 2,
    (0 | ::_fl::kFcRepeated | ::_fl::kMessage | ::_fl::kTvTable)},
    // double range = 17;
    {PROTOBUF_FIELD_OFFSET(SkillTable, _impl_.range_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kDouble)},
    // double max_range = 18;
    {PROTOBUF_FIELD_OFFSET(SkillTable, _impl_.max_range_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kDouble)},
    // double min_range = 19;
    {PROTOBUF_FIELD_OFFSET(SkillTable, _impl_.min_range_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kDouble)},
    // uint32 self_status = 20;
    {PROTOBUF_FIELD_OFFSET(SkillTable, _impl_.self_status_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUInt32)},
    // uint32 required_status = 21;
    {PROTOBUF_FIELD_OFFSET(SkillTable, _impl_.required_status_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUInt32)},
    // uint32 cooldown_id = 22;
    {PROTOBUF_FIELD_OFFSET(SkillTable, _impl_.cooldown_id_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUInt32)},
    // string damage = 23;
    {PROTOBUF_FIELD_OFFSET(SkillTable, _impl_.damage_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
  }}, {{
    {::_pbi::TcParser::GetTable<::Skillrequireditem>()},
    {::_pbi::TcParser::GetTable<::Skillrequiredresource>()},
    {::_pbi::TcParser::GetTable<::Skillrequestresource>()},
  }}, {{
    "\12\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\6"
    "SkillTable"
    "damage"
  }},
};

::uint8_t* SkillTable::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:SkillTable)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  // uint32 id = 1;
  if (this->_internal_id() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt32ToArray(
        1, this->_internal_id(), target);
  }

  // repeated uint32 skill_type = 2;
  {
    int byte_size = _impl_._skill_type_cached_byte_size_.Get();
    if (byte_size > 0) {
      target = stream->WriteUInt32Packed(
          2, _internal_skill_type(), byte_size, target);
    }
  }

  // repeated uint32 target_type = 3;
  {
    int byte_size = _impl_._target_type_cached_byte_size_.Get();
    if (byte_size > 0) {
      target = stream->WriteUInt32Packed(
          3, _internal_target_type(), byte_size, target);
    }
  }

  // uint32 rquest_target = 4;
  if (this->_internal_rquest_target() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt32ToArray(
        4, this->_internal_rquest_target(), target);
  }

  // uint32 target_status = 5;
  if (this->_internal_target_status() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt32ToArray(
        5, this->_internal_target_status(), target);
  }

  // double castpoint = 6;
  static_assert(sizeof(::uint64_t) == sizeof(double),
                "Code assumes ::uint64_t and double are the same size.");
  double tmp_castpoint = this->_internal_castpoint();
  ::uint64_t raw_castpoint;
  memcpy(&raw_castpoint, &tmp_castpoint, sizeof(tmp_castpoint));
  if (raw_castpoint != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteDoubleToArray(
        6, this->_internal_castpoint(), target);
  }

  // double recoverytime = 7;
  static_assert(sizeof(::uint64_t) == sizeof(double),
                "Code assumes ::uint64_t and double are the same size.");
  double tmp_recoverytime = this->_internal_recoverytime();
  ::uint64_t raw_recoverytime;
  memcpy(&raw_recoverytime, &tmp_recoverytime, sizeof(tmp_recoverytime));
  if (raw_recoverytime != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteDoubleToArray(
        7, this->_internal_recoverytime(), target);
  }

  // uint32 immediately = 8;
  if (this->_internal_immediately() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt32ToArray(
        8, this->_internal_immediately(), target);
  }

  // repeated .Skillrequireditem requireditem = 9;
  for (unsigned i = 0, n = static_cast<unsigned>(
                           this->_internal_requireditem_size());
       i < n; i++) {
    const auto& repfield = this->_internal_requireditem().Get(i);
    target =
        ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
            9, repfield, repfield.GetCachedSize(),
            target, stream);
  }

  // repeated .Skillrequiredresource requiredresource = 10;
  for (unsigned i = 0, n = static_cast<unsigned>(
                           this->_internal_requiredresource_size());
       i < n; i++) {
    const auto& repfield = this->_internal_requiredresource().Get(i);
    target =
        ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
            10, repfield, repfield.GetCachedSize(),
            target, stream);
  }

  // repeated uint32 effect = 11;
  {
    int byte_size = _impl_._effect_cached_byte_size_.Get();
    if (byte_size > 0) {
      target = stream->WriteUInt32Packed(
          11, _internal_effect(), byte_size, target);
    }
  }

  // uint32 channelthink = 12;
  if (this->_internal_channelthink() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt32ToArray(
        12, this->_internal_channelthink(), target);
  }

  // uint32 channelfinish = 13;
  if (this->_internal_channelfinish() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt32ToArray(
        13, this->_internal_channelfinish(), target);
  }

  // uint32 thinkinterval = 14;
  if (this->_internal_thinkinterval() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt32ToArray(
        14, this->_internal_thinkinterval(), target);
  }

  // uint32 channeltime = 15;
  if (this->_internal_channeltime() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt32ToArray(
        15, this->_internal_channeltime(), target);
  }

  // repeated .Skillrequestresource requestresource = 16;
  for (unsigned i = 0, n = static_cast<unsigned>(
                           this->_internal_requestresource_size());
       i < n; i++) {
    const auto& repfield = this->_internal_requestresource().Get(i);
    target =
        ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
            16, repfield, repfield.GetCachedSize(),
            target, stream);
  }

  // double range = 17;
  static_assert(sizeof(::uint64_t) == sizeof(double),
                "Code assumes ::uint64_t and double are the same size.");
  double tmp_range = this->_internal_range();
  ::uint64_t raw_range;
  memcpy(&raw_range, &tmp_range, sizeof(tmp_range));
  if (raw_range != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteDoubleToArray(
        17, this->_internal_range(), target);
  }

  // double max_range = 18;
  static_assert(sizeof(::uint64_t) == sizeof(double),
                "Code assumes ::uint64_t and double are the same size.");
  double tmp_max_range = this->_internal_max_range();
  ::uint64_t raw_max_range;
  memcpy(&raw_max_range, &tmp_max_range, sizeof(tmp_max_range));
  if (raw_max_range != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteDoubleToArray(
        18, this->_internal_max_range(), target);
  }

  // double min_range = 19;
  static_assert(sizeof(::uint64_t) == sizeof(double),
                "Code assumes ::uint64_t and double are the same size.");
  double tmp_min_range = this->_internal_min_range();
  ::uint64_t raw_min_range;
  memcpy(&raw_min_range, &tmp_min_range, sizeof(tmp_min_range));
  if (raw_min_range != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteDoubleToArray(
        19, this->_internal_min_range(), target);
  }

  // uint32 self_status = 20;
  if (this->_internal_self_status() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt32ToArray(
        20, this->_internal_self_status(), target);
  }

  // uint32 required_status = 21;
  if (this->_internal_required_status() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt32ToArray(
        21, this->_internal_required_status(), target);
  }

  // uint32 cooldown_id = 22;
  if (this->_internal_cooldown_id() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt32ToArray(
        22, this->_internal_cooldown_id(), target);
  }

  // string damage = 23;
  if (!this->_internal_damage().empty()) {
    const std::string& _s = this->_internal_damage();
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
        _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "SkillTable.damage");
    target = stream->WriteStringMaybeAliased(23, _s, target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:SkillTable)
  return target;
}

::size_t SkillTable::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:SkillTable)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated uint32 skill_type = 2;
  {
    std::size_t data_size = ::_pbi::WireFormatLite::UInt32Size(
        this->_internal_skill_type())
    ;
    _impl_._skill_type_cached_byte_size_.Set(::_pbi::ToCachedSize(data_size));
    std::size_t tag_size = data_size == 0
        ? 0
        : 1 + ::_pbi::WireFormatLite::Int32Size(
                            static_cast<int32_t>(data_size))
    ;
    total_size += tag_size + data_size;
  }
  // repeated uint32 target_type = 3;
  {
    std::size_t data_size = ::_pbi::WireFormatLite::UInt32Size(
        this->_internal_target_type())
    ;
    _impl_._target_type_cached_byte_size_.Set(::_pbi::ToCachedSize(data_size));
    std::size_t tag_size = data_size == 0
        ? 0
        : 1 + ::_pbi::WireFormatLite::Int32Size(
                            static_cast<int32_t>(data_size))
    ;
    total_size += tag_size + data_size;
  }
  // repeated .Skillrequireditem requireditem = 9;
  total_size += 1UL * this->_internal_requireditem_size();
  for (const auto& msg : this->_internal_requireditem()) {
    total_size += ::google::protobuf::internal::WireFormatLite::MessageSize(msg);
  }
  // repeated .Skillrequiredresource requiredresource = 10;
  total_size += 1UL * this->_internal_requiredresource_size();
  for (const auto& msg : this->_internal_requiredresource()) {
    total_size += ::google::protobuf::internal::WireFormatLite::MessageSize(msg);
  }
  // repeated uint32 effect = 11;
  {
    std::size_t data_size = ::_pbi::WireFormatLite::UInt32Size(
        this->_internal_effect())
    ;
    _impl_._effect_cached_byte_size_.Set(::_pbi::ToCachedSize(data_size));
    std::size_t tag_size = data_size == 0
        ? 0
        : 1 + ::_pbi::WireFormatLite::Int32Size(
                            static_cast<int32_t>(data_size))
    ;
    total_size += tag_size + data_size;
  }
  // repeated .Skillrequestresource requestresource = 16;
  total_size += 2UL * this->_internal_requestresource_size();
  for (const auto& msg : this->_internal_requestresource()) {
    total_size += ::google::protobuf::internal::WireFormatLite::MessageSize(msg);
  }
  // string damage = 23;
  if (!this->_internal_damage().empty()) {
    total_size += 2 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                    this->_internal_damage());
  }

  // uint32 id = 1;
  if (this->_internal_id() != 0) {
    total_size += ::_pbi::WireFormatLite::UInt32SizePlusOne(
        this->_internal_id());
  }

  // uint32 rquest_target = 4;
  if (this->_internal_rquest_target() != 0) {
    total_size += ::_pbi::WireFormatLite::UInt32SizePlusOne(
        this->_internal_rquest_target());
  }

  // double castpoint = 6;
  static_assert(sizeof(::uint64_t) == sizeof(double),
                "Code assumes ::uint64_t and double are the same size.");
  double tmp_castpoint = this->_internal_castpoint();
  ::uint64_t raw_castpoint;
  memcpy(&raw_castpoint, &tmp_castpoint, sizeof(tmp_castpoint));
  if (raw_castpoint != 0) {
    total_size += 9;
  }

  // uint32 target_status = 5;
  if (this->_internal_target_status() != 0) {
    total_size += ::_pbi::WireFormatLite::UInt32SizePlusOne(
        this->_internal_target_status());
  }

  // uint32 immediately = 8;
  if (this->_internal_immediately() != 0) {
    total_size += ::_pbi::WireFormatLite::UInt32SizePlusOne(
        this->_internal_immediately());
  }

  // double recoverytime = 7;
  static_assert(sizeof(::uint64_t) == sizeof(double),
                "Code assumes ::uint64_t and double are the same size.");
  double tmp_recoverytime = this->_internal_recoverytime();
  ::uint64_t raw_recoverytime;
  memcpy(&raw_recoverytime, &tmp_recoverytime, sizeof(tmp_recoverytime));
  if (raw_recoverytime != 0) {
    total_size += 9;
  }

  // uint32 channelthink = 12;
  if (this->_internal_channelthink() != 0) {
    total_size += ::_pbi::WireFormatLite::UInt32SizePlusOne(
        this->_internal_channelthink());
  }

  // uint32 channelfinish = 13;
  if (this->_internal_channelfinish() != 0) {
    total_size += ::_pbi::WireFormatLite::UInt32SizePlusOne(
        this->_internal_channelfinish());
  }

  // uint32 thinkinterval = 14;
  if (this->_internal_thinkinterval() != 0) {
    total_size += ::_pbi::WireFormatLite::UInt32SizePlusOne(
        this->_internal_thinkinterval());
  }

  // uint32 channeltime = 15;
  if (this->_internal_channeltime() != 0) {
    total_size += ::_pbi::WireFormatLite::UInt32SizePlusOne(
        this->_internal_channeltime());
  }

  // double range = 17;
  static_assert(sizeof(::uint64_t) == sizeof(double),
                "Code assumes ::uint64_t and double are the same size.");
  double tmp_range = this->_internal_range();
  ::uint64_t raw_range;
  memcpy(&raw_range, &tmp_range, sizeof(tmp_range));
  if (raw_range != 0) {
    total_size += 10;
  }

  // double max_range = 18;
  static_assert(sizeof(::uint64_t) == sizeof(double),
                "Code assumes ::uint64_t and double are the same size.");
  double tmp_max_range = this->_internal_max_range();
  ::uint64_t raw_max_range;
  memcpy(&raw_max_range, &tmp_max_range, sizeof(tmp_max_range));
  if (raw_max_range != 0) {
    total_size += 10;
  }

  // double min_range = 19;
  static_assert(sizeof(::uint64_t) == sizeof(double),
                "Code assumes ::uint64_t and double are the same size.");
  double tmp_min_range = this->_internal_min_range();
  ::uint64_t raw_min_range;
  memcpy(&raw_min_range, &tmp_min_range, sizeof(tmp_min_range));
  if (raw_min_range != 0) {
    total_size += 10;
  }

  // uint32 self_status = 20;
  if (this->_internal_self_status() != 0) {
    total_size += 2 + ::_pbi::WireFormatLite::UInt32Size(
                                    this->_internal_self_status());
  }

  // uint32 required_status = 21;
  if (this->_internal_required_status() != 0) {
    total_size += 2 + ::_pbi::WireFormatLite::UInt32Size(
                                    this->_internal_required_status());
  }

  // uint32 cooldown_id = 22;
  if (this->_internal_cooldown_id() != 0) {
    total_size += 2 + ::_pbi::WireFormatLite::UInt32Size(
                                    this->_internal_cooldown_id());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}


void SkillTable::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<SkillTable*>(&to_msg);
  auto& from = static_cast<const SkillTable&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:SkillTable)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_internal_mutable_skill_type()->MergeFrom(from._internal_skill_type());
  _this->_internal_mutable_target_type()->MergeFrom(from._internal_target_type());
  _this->_internal_mutable_requireditem()->MergeFrom(
      from._internal_requireditem());
  _this->_internal_mutable_requiredresource()->MergeFrom(
      from._internal_requiredresource());
  _this->_internal_mutable_effect()->MergeFrom(from._internal_effect());
  _this->_internal_mutable_requestresource()->MergeFrom(
      from._internal_requestresource());
  if (!from._internal_damage().empty()) {
    _this->_internal_set_damage(from._internal_damage());
  }
  if (from._internal_id() != 0) {
    _this->_impl_.id_ = from._impl_.id_;
  }
  if (from._internal_rquest_target() != 0) {
    _this->_impl_.rquest_target_ = from._impl_.rquest_target_;
  }
  static_assert(sizeof(::uint64_t) == sizeof(double),
                "Code assumes ::uint64_t and double are the same size.");
  double tmp_castpoint = from._internal_castpoint();
  ::uint64_t raw_castpoint;
  memcpy(&raw_castpoint, &tmp_castpoint, sizeof(tmp_castpoint));
  if (raw_castpoint != 0) {
    _this->_impl_.castpoint_ = from._impl_.castpoint_;
  }
  if (from._internal_target_status() != 0) {
    _this->_impl_.target_status_ = from._impl_.target_status_;
  }
  if (from._internal_immediately() != 0) {
    _this->_impl_.immediately_ = from._impl_.immediately_;
  }
  static_assert(sizeof(::uint64_t) == sizeof(double),
                "Code assumes ::uint64_t and double are the same size.");
  double tmp_recoverytime = from._internal_recoverytime();
  ::uint64_t raw_recoverytime;
  memcpy(&raw_recoverytime, &tmp_recoverytime, sizeof(tmp_recoverytime));
  if (raw_recoverytime != 0) {
    _this->_impl_.recoverytime_ = from._impl_.recoverytime_;
  }
  if (from._internal_channelthink() != 0) {
    _this->_impl_.channelthink_ = from._impl_.channelthink_;
  }
  if (from._internal_channelfinish() != 0) {
    _this->_impl_.channelfinish_ = from._impl_.channelfinish_;
  }
  if (from._internal_thinkinterval() != 0) {
    _this->_impl_.thinkinterval_ = from._impl_.thinkinterval_;
  }
  if (from._internal_channeltime() != 0) {
    _this->_impl_.channeltime_ = from._impl_.channeltime_;
  }
  static_assert(sizeof(::uint64_t) == sizeof(double),
                "Code assumes ::uint64_t and double are the same size.");
  double tmp_range = from._internal_range();
  ::uint64_t raw_range;
  memcpy(&raw_range, &tmp_range, sizeof(tmp_range));
  if (raw_range != 0) {
    _this->_impl_.range_ = from._impl_.range_;
  }
  static_assert(sizeof(::uint64_t) == sizeof(double),
                "Code assumes ::uint64_t and double are the same size.");
  double tmp_max_range = from._internal_max_range();
  ::uint64_t raw_max_range;
  memcpy(&raw_max_range, &tmp_max_range, sizeof(tmp_max_range));
  if (raw_max_range != 0) {
    _this->_impl_.max_range_ = from._impl_.max_range_;
  }
  static_assert(sizeof(::uint64_t) == sizeof(double),
                "Code assumes ::uint64_t and double are the same size.");
  double tmp_min_range = from._internal_min_range();
  ::uint64_t raw_min_range;
  memcpy(&raw_min_range, &tmp_min_range, sizeof(tmp_min_range));
  if (raw_min_range != 0) {
    _this->_impl_.min_range_ = from._impl_.min_range_;
  }
  if (from._internal_self_status() != 0) {
    _this->_impl_.self_status_ = from._impl_.self_status_;
  }
  if (from._internal_required_status() != 0) {
    _this->_impl_.required_status_ = from._impl_.required_status_;
  }
  if (from._internal_cooldown_id() != 0) {
    _this->_impl_.cooldown_id_ = from._impl_.cooldown_id_;
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void SkillTable::CopyFrom(const SkillTable& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:SkillTable)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool SkillTable::IsInitialized() const {
  return true;
}

void SkillTable::InternalSwap(SkillTable* PROTOBUF_RESTRICT other) {
  using std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  _impl_.skill_type_.InternalSwap(&other->_impl_.skill_type_);
  _impl_.target_type_.InternalSwap(&other->_impl_.target_type_);
  _impl_.requireditem_.InternalSwap(&other->_impl_.requireditem_);
  _impl_.requiredresource_.InternalSwap(&other->_impl_.requiredresource_);
  _impl_.effect_.InternalSwap(&other->_impl_.effect_);
  _impl_.requestresource_.InternalSwap(&other->_impl_.requestresource_);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.damage_, &other->_impl_.damage_, arena);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(SkillTable, _impl_.cooldown_id_)
      + sizeof(SkillTable::_impl_.cooldown_id_)
      - PROTOBUF_FIELD_OFFSET(SkillTable, _impl_.id_)>(
          reinterpret_cast<char*>(&_impl_.id_),
          reinterpret_cast<char*>(&other->_impl_.id_));
}

::google::protobuf::Metadata SkillTable::GetMetadata() const {
  return ::_pbi::AssignDescriptors(&descriptor_table_skill_5fconfig_2eproto_getter,
                                   &descriptor_table_skill_5fconfig_2eproto_once,
                                   file_level_metadata_skill_5fconfig_2eproto[3]);
}
// ===================================================================

class SkillTabledData::_Internal {
 public:
};

SkillTabledData::SkillTabledData(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:SkillTabledData)
}
inline PROTOBUF_NDEBUG_INLINE SkillTabledData::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from)
      : data_{visibility, arena, from.data_},
        _cached_size_{0} {}

SkillTabledData::SkillTabledData(
    ::google::protobuf::Arena* arena,
    const SkillTabledData& from)
    : ::google::protobuf::Message(arena) {
  SkillTabledData* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_);

  // @@protoc_insertion_point(copy_constructor:SkillTabledData)
}
inline PROTOBUF_NDEBUG_INLINE SkillTabledData::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : data_{visibility, arena},
        _cached_size_{0} {}

inline void SkillTabledData::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
}
SkillTabledData::~SkillTabledData() {
  // @@protoc_insertion_point(destructor:SkillTabledData)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void SkillTabledData::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  _impl_.~Impl_();
}

const ::google::protobuf::MessageLite::ClassData*
SkillTabledData::GetClassData() const {
  PROTOBUF_CONSTINIT static const ::google::protobuf::MessageLite::
      ClassDataFull _data_ = {
          {
              nullptr,  // OnDemandRegisterArenaDtor
              PROTOBUF_FIELD_OFFSET(SkillTabledData, _impl_._cached_size_),
              false,
          },
          &SkillTabledData::MergeImpl,
          &SkillTabledData::kDescriptorMethods,
      };
  return &_data_;
}
PROTOBUF_NOINLINE void SkillTabledData::Clear() {
// @@protoc_insertion_point(message_clear_start:SkillTabledData)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.data_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* SkillTabledData::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<0, 1, 1, 0, 2> SkillTabledData::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    1, 0,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967294,  // skipmap
    offsetof(decltype(_table_), field_entries),
    1,  // num_field_entries
    1,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    &_SkillTabledData_default_instance_._instance,
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::SkillTabledData>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // repeated .SkillTable data = 1;
    {::_pbi::TcParser::FastMtR1,
     {10, 63, 0, PROTOBUF_FIELD_OFFSET(SkillTabledData, _impl_.data_)}},
  }}, {{
    65535, 65535
  }}, {{
    // repeated .SkillTable data = 1;
    {PROTOBUF_FIELD_OFFSET(SkillTabledData, _impl_.data_), 0, 0,
    (0 | ::_fl::kFcRepeated | ::_fl::kMessage | ::_fl::kTvTable)},
  }}, {{
    {::_pbi::TcParser::GetTable<::SkillTable>()},
  }}, {{
  }},
};

::uint8_t* SkillTabledData::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:SkillTabledData)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  // repeated .SkillTable data = 1;
  for (unsigned i = 0, n = static_cast<unsigned>(
                           this->_internal_data_size());
       i < n; i++) {
    const auto& repfield = this->_internal_data().Get(i);
    target =
        ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
            1, repfield, repfield.GetCachedSize(),
            target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:SkillTabledData)
  return target;
}

::size_t SkillTabledData::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:SkillTabledData)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated .SkillTable data = 1;
  total_size += 1UL * this->_internal_data_size();
  for (const auto& msg : this->_internal_data()) {
    total_size += ::google::protobuf::internal::WireFormatLite::MessageSize(msg);
  }
  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}


void SkillTabledData::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<SkillTabledData*>(&to_msg);
  auto& from = static_cast<const SkillTabledData&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:SkillTabledData)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_internal_mutable_data()->MergeFrom(
      from._internal_data());
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void SkillTabledData::CopyFrom(const SkillTabledData& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:SkillTabledData)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool SkillTabledData::IsInitialized() const {
  return true;
}

void SkillTabledData::InternalSwap(SkillTabledData* PROTOBUF_RESTRICT other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  _impl_.data_.InternalSwap(&other->_impl_.data_);
}

::google::protobuf::Metadata SkillTabledData::GetMetadata() const {
  return ::_pbi::AssignDescriptors(&descriptor_table_skill_5fconfig_2eproto_getter,
                                   &descriptor_table_skill_5fconfig_2eproto_once,
                                   file_level_metadata_skill_5fconfig_2eproto[4]);
}
// @@protoc_insertion_point(namespace_scope)
namespace google {
namespace protobuf {
}  // namespace protobuf
}  // namespace google
// @@protoc_insertion_point(global_scope)
PROTOBUF_ATTRIBUTE_INIT_PRIORITY2
static ::std::false_type _static_init_ PROTOBUF_UNUSED =
    (::_pbi::AddDescriptors(&descriptor_table_skill_5fconfig_2eproto),
     ::std::false_type{});
#include "google/protobuf/port_undef.inc"
