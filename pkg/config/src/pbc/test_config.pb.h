// Generated by the protocol buffer compiler.  DO NOT EDIT!
// NO CHECKED-IN PROTOBUF GENCODE
// source: test_config.proto
// Protobuf C++ Version: 6.31.0-dev

#ifndef test_5fconfig_2eproto_2epb_2eh
#define test_5fconfig_2eproto_2epb_2eh

#include <limits>
#include <string>
#include <type_traits>
#include <utility>

#include "google/protobuf/runtime_version.h"
#if PROTOBUF_VERSION != 6031000
#error "Protobuf C++ gencode is built with an incompatible version of"
#error "Protobuf C++ headers/runtime. See"
#error "https://protobuf.dev/support/cross-version-runtime-guarantee/#cpp"
#endif
#include "google/protobuf/io/coded_stream.h"
#include "google/protobuf/arena.h"
#include "google/protobuf/arenastring.h"
#include "google/protobuf/generated_message_tctable_decl.h"
#include "google/protobuf/generated_message_util.h"
#include "google/protobuf/metadata_lite.h"
#include "google/protobuf/generated_message_reflection.h"
#include "google/protobuf/message.h"
#include "google/protobuf/message_lite.h"
#include "google/protobuf/repeated_field.h"  // IWYU pragma: export
#include "google/protobuf/extension_set.h"  // IWYU pragma: export
#include "google/protobuf/map.h"  // IWYU pragma: export
#include "google/protobuf/map_type_handler.h"  // IWYU pragma: export
#include "google/protobuf/map_entry.h"
#include "google/protobuf/map_field.h"
#include "google/protobuf/unknown_field_set.h"
// @@protoc_insertion_point(includes)

// Must be included last.
#include "google/protobuf/port_def.inc"

#define PROTOBUF_INTERNAL_EXPORT_test_5fconfig_2eproto

namespace google {
namespace protobuf {
namespace internal {
template <typename T>
::absl::string_view GetAnyMessageName();
}  // namespace internal
}  // namespace protobuf
}  // namespace google

// Internal implementation detail -- do not use these members.
struct TableStruct_test_5fconfig_2eproto {
  static const ::uint32_t offsets[];
};
extern "C" {
extern const ::google::protobuf::internal::DescriptorTable descriptor_table_test_5fconfig_2eproto;
}  // extern "C"
class TestTable;
struct TestTableDefaultTypeInternal;
extern TestTableDefaultTypeInternal _TestTable_default_instance_;
extern const ::google::protobuf::internal::ClassDataFull TestTable_class_data_;
class TestTable_ImmunetagEntry_DoNotUse;
struct TestTable_ImmunetagEntry_DoNotUseDefaultTypeInternal;
extern TestTable_ImmunetagEntry_DoNotUseDefaultTypeInternal _TestTable_ImmunetagEntry_DoNotUse_default_instance_;
extern const ::google::protobuf::internal::ClassDataFull TestTable_ImmunetagEntry_DoNotUse_class_data_;
class TestTable_TagEntry_DoNotUse;
struct TestTable_TagEntry_DoNotUseDefaultTypeInternal;
extern TestTable_TagEntry_DoNotUseDefaultTypeInternal _TestTable_TagEntry_DoNotUse_default_instance_;
extern const ::google::protobuf::internal::ClassDataFull TestTable_TagEntry_DoNotUse_class_data_;
class TestTabledData;
struct TestTabledDataDefaultTypeInternal;
extern TestTabledDataDefaultTypeInternal _TestTabledData_default_instance_;
extern const ::google::protobuf::internal::ClassDataFull TestTabledData_class_data_;
class Testimmunetag;
struct TestimmunetagDefaultTypeInternal;
extern TestimmunetagDefaultTypeInternal _Testimmunetag_default_instance_;
extern const ::google::protobuf::internal::ClassDataFull Testimmunetag_class_data_;
class Testtag;
struct TesttagDefaultTypeInternal;
extern TesttagDefaultTypeInternal _Testtag_default_instance_;
extern const ::google::protobuf::internal::ClassDataFull Testtag_class_data_;
class Testtestobj;
struct TesttestobjDefaultTypeInternal;
extern TesttestobjDefaultTypeInternal _Testtestobj_default_instance_;
extern const ::google::protobuf::internal::ClassDataFull Testtestobj_class_data_;
namespace google {
namespace protobuf {
}  // namespace protobuf
}  // namespace google


// ===================================================================


// -------------------------------------------------------------------

class Testtestobj final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:Testtestobj) */ {
 public:
  inline Testtestobj() : Testtestobj(nullptr) {}
  ~Testtestobj() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(Testtestobj* PROTOBUF_NONNULL msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(Testtestobj));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR Testtestobj(::google::protobuf::internal::ConstantInitialized);

  inline Testtestobj(const Testtestobj& from) : Testtestobj(nullptr, from) {}
  inline Testtestobj(Testtestobj&& from) noexcept
      : Testtestobj(nullptr, std::move(from)) {}
  inline Testtestobj& operator=(const Testtestobj& from) {
    CopyFrom(from);
    return *this;
  }
  inline Testtestobj& operator=(Testtestobj&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* PROTOBUF_NONNULL mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* PROTOBUF_NONNULL descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* PROTOBUF_NONNULL GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* PROTOBUF_NONNULL GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const Testtestobj& default_instance() {
    return *reinterpret_cast<const Testtestobj*>(
        &_Testtestobj_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 2;
  friend void swap(Testtestobj& a, Testtestobj& b) { a.Swap(&b); }
  inline void Swap(Testtestobj* PROTOBUF_NONNULL other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(Testtestobj* PROTOBUF_NONNULL other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  Testtestobj* PROTOBUF_NONNULL New(::google::protobuf::Arena* PROTOBUF_NULLABLE arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<Testtestobj>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const Testtestobj& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const Testtestobj& from) { Testtestobj::MergeImpl(*this, from); }

  private:
  static void MergeImpl(::google::protobuf::MessageLite& to_msg,
                        const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* PROTOBUF_NONNULL _InternalSerialize(
      const ::google::protobuf::MessageLite& msg, ::uint8_t* PROTOBUF_NONNULL target,
      ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* PROTOBUF_NONNULL _InternalSerialize(
      ::uint8_t* PROTOBUF_NONNULL target,
      ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* PROTOBUF_NONNULL _InternalSerialize(
      ::uint8_t* PROTOBUF_NONNULL target,
      ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(Testtestobj* PROTOBUF_NONNULL other);
 private:
  template <typename T>
  friend ::absl::string_view(::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "Testtestobj"; }

 protected:
  explicit Testtestobj(::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  Testtestobj(::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const Testtestobj& from);
  Testtestobj(
      ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, Testtestobj&& from) noexcept
      : Testtestobj(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* PROTOBUF_NONNULL GetClassData() const PROTOBUF_FINAL;
  static void* PROTOBUF_NONNULL PlacementNew_(
      const void* PROTOBUF_NONNULL, void* PROTOBUF_NONNULL mem,
      ::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  static constexpr auto InternalNewImpl_();

 public:
  static constexpr auto InternalGenerateClassData_();

  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kTestobjKeyFieldNumber = 1,
    kTestobjValueFieldNumber = 2,
  };
  // uint32 testobj_key = 1;
  void clear_testobj_key() ;
  ::uint32_t testobj_key() const;
  void set_testobj_key(::uint32_t value);

  private:
  ::uint32_t _internal_testobj_key() const;
  void _internal_set_testobj_key(::uint32_t value);

  public:
  // uint32 testobj_value = 2;
  void clear_testobj_value() ;
  ::uint32_t testobj_value() const;
  void set_testobj_value(::uint32_t value);

  private:
  ::uint32_t _internal_testobj_value() const;
  void _internal_set_testobj_value(::uint32_t value);

  public:
  // @@protoc_insertion_point(class_scope:Testtestobj)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<1, 2,
                                   0, 0,
                                   2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(
        ::google::protobuf::internal::InternalVisibility visibility,
        ::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
    inline explicit Impl_(
        ::google::protobuf::internal::InternalVisibility visibility,
        ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const Impl_& from,
        const Testtestobj& from_msg);
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    ::uint32_t testobj_key_;
    ::uint32_t testobj_value_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_test_5fconfig_2eproto;
};

extern const ::google::protobuf::internal::ClassDataFull Testtestobj_class_data_;
// -------------------------------------------------------------------

class Testtag final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:Testtag) */ {
 public:
  inline Testtag() : Testtag(nullptr) {}
  ~Testtag() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(Testtag* PROTOBUF_NONNULL msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(Testtag));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR Testtag(::google::protobuf::internal::ConstantInitialized);

  inline Testtag(const Testtag& from) : Testtag(nullptr, from) {}
  inline Testtag(Testtag&& from) noexcept
      : Testtag(nullptr, std::move(from)) {}
  inline Testtag& operator=(const Testtag& from) {
    CopyFrom(from);
    return *this;
  }
  inline Testtag& operator=(Testtag&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* PROTOBUF_NONNULL mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* PROTOBUF_NONNULL descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* PROTOBUF_NONNULL GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* PROTOBUF_NONNULL GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const Testtag& default_instance() {
    return *reinterpret_cast<const Testtag*>(
        &_Testtag_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 0;
  friend void swap(Testtag& a, Testtag& b) { a.Swap(&b); }
  inline void Swap(Testtag* PROTOBUF_NONNULL other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(Testtag* PROTOBUF_NONNULL other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  Testtag* PROTOBUF_NONNULL New(::google::protobuf::Arena* PROTOBUF_NULLABLE arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<Testtag>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const Testtag& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const Testtag& from) { Testtag::MergeImpl(*this, from); }

  private:
  static void MergeImpl(::google::protobuf::MessageLite& to_msg,
                        const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* PROTOBUF_NONNULL _InternalSerialize(
      const ::google::protobuf::MessageLite& msg, ::uint8_t* PROTOBUF_NONNULL target,
      ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* PROTOBUF_NONNULL _InternalSerialize(
      ::uint8_t* PROTOBUF_NONNULL target,
      ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* PROTOBUF_NONNULL _InternalSerialize(
      ::uint8_t* PROTOBUF_NONNULL target,
      ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(Testtag* PROTOBUF_NONNULL other);
 private:
  template <typename T>
  friend ::absl::string_view(::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "Testtag"; }

 protected:
  explicit Testtag(::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  Testtag(::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const Testtag& from);
  Testtag(
      ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, Testtag&& from) noexcept
      : Testtag(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* PROTOBUF_NONNULL GetClassData() const PROTOBUF_FINAL;
  static void* PROTOBUF_NONNULL PlacementNew_(
      const void* PROTOBUF_NONNULL, void* PROTOBUF_NONNULL mem,
      ::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  static constexpr auto InternalNewImpl_();

 public:
  static constexpr auto InternalGenerateClassData_();

  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kTagKeyFieldNumber = 1,
    kTagValueFieldNumber = 2,
  };
  // string tag_key = 1;
  void clear_tag_key() ;
  const std::string& tag_key() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_tag_key(Arg_&& arg, Args_... args);
  std::string* PROTOBUF_NONNULL mutable_tag_key();
  [[nodiscard]] std::string* PROTOBUF_NULLABLE release_tag_key();
  void set_allocated_tag_key(std::string* PROTOBUF_NULLABLE value);

  private:
  const std::string& _internal_tag_key() const;
  PROTOBUF_ALWAYS_INLINE void _internal_set_tag_key(const std::string& value);
  std::string* PROTOBUF_NONNULL _internal_mutable_tag_key();

  public:
  // string tag_value = 2;
  void clear_tag_value() ;
  const std::string& tag_value() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_tag_value(Arg_&& arg, Args_... args);
  std::string* PROTOBUF_NONNULL mutable_tag_value();
  [[nodiscard]] std::string* PROTOBUF_NULLABLE release_tag_value();
  void set_allocated_tag_value(std::string* PROTOBUF_NULLABLE value);

  private:
  const std::string& _internal_tag_value() const;
  PROTOBUF_ALWAYS_INLINE void _internal_set_tag_value(const std::string& value);
  std::string* PROTOBUF_NONNULL _internal_mutable_tag_value();

  public:
  // @@protoc_insertion_point(class_scope:Testtag)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<1, 2,
                                   0, 32,
                                   2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(
        ::google::protobuf::internal::InternalVisibility visibility,
        ::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
    inline explicit Impl_(
        ::google::protobuf::internal::InternalVisibility visibility,
        ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const Impl_& from,
        const Testtag& from_msg);
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    ::google::protobuf::internal::ArenaStringPtr tag_key_;
    ::google::protobuf::internal::ArenaStringPtr tag_value_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_test_5fconfig_2eproto;
};

extern const ::google::protobuf::internal::ClassDataFull Testtag_class_data_;
// -------------------------------------------------------------------

class Testimmunetag final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:Testimmunetag) */ {
 public:
  inline Testimmunetag() : Testimmunetag(nullptr) {}
  ~Testimmunetag() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(Testimmunetag* PROTOBUF_NONNULL msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(Testimmunetag));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR Testimmunetag(::google::protobuf::internal::ConstantInitialized);

  inline Testimmunetag(const Testimmunetag& from) : Testimmunetag(nullptr, from) {}
  inline Testimmunetag(Testimmunetag&& from) noexcept
      : Testimmunetag(nullptr, std::move(from)) {}
  inline Testimmunetag& operator=(const Testimmunetag& from) {
    CopyFrom(from);
    return *this;
  }
  inline Testimmunetag& operator=(Testimmunetag&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* PROTOBUF_NONNULL mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* PROTOBUF_NONNULL descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* PROTOBUF_NONNULL GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* PROTOBUF_NONNULL GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const Testimmunetag& default_instance() {
    return *reinterpret_cast<const Testimmunetag*>(
        &_Testimmunetag_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 1;
  friend void swap(Testimmunetag& a, Testimmunetag& b) { a.Swap(&b); }
  inline void Swap(Testimmunetag* PROTOBUF_NONNULL other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(Testimmunetag* PROTOBUF_NONNULL other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  Testimmunetag* PROTOBUF_NONNULL New(::google::protobuf::Arena* PROTOBUF_NULLABLE arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<Testimmunetag>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const Testimmunetag& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const Testimmunetag& from) { Testimmunetag::MergeImpl(*this, from); }

  private:
  static void MergeImpl(::google::protobuf::MessageLite& to_msg,
                        const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* PROTOBUF_NONNULL _InternalSerialize(
      const ::google::protobuf::MessageLite& msg, ::uint8_t* PROTOBUF_NONNULL target,
      ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* PROTOBUF_NONNULL _InternalSerialize(
      ::uint8_t* PROTOBUF_NONNULL target,
      ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* PROTOBUF_NONNULL _InternalSerialize(
      ::uint8_t* PROTOBUF_NONNULL target,
      ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(Testimmunetag* PROTOBUF_NONNULL other);
 private:
  template <typename T>
  friend ::absl::string_view(::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "Testimmunetag"; }

 protected:
  explicit Testimmunetag(::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  Testimmunetag(::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const Testimmunetag& from);
  Testimmunetag(
      ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, Testimmunetag&& from) noexcept
      : Testimmunetag(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* PROTOBUF_NONNULL GetClassData() const PROTOBUF_FINAL;
  static void* PROTOBUF_NONNULL PlacementNew_(
      const void* PROTOBUF_NONNULL, void* PROTOBUF_NONNULL mem,
      ::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  static constexpr auto InternalNewImpl_();

 public:
  static constexpr auto InternalGenerateClassData_();

  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kImmunetagKeyFieldNumber = 1,
    kImmunetagValueFieldNumber = 2,
  };
  // string immunetag_key = 1;
  void clear_immunetag_key() ;
  const std::string& immunetag_key() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_immunetag_key(Arg_&& arg, Args_... args);
  std::string* PROTOBUF_NONNULL mutable_immunetag_key();
  [[nodiscard]] std::string* PROTOBUF_NULLABLE release_immunetag_key();
  void set_allocated_immunetag_key(std::string* PROTOBUF_NULLABLE value);

  private:
  const std::string& _internal_immunetag_key() const;
  PROTOBUF_ALWAYS_INLINE void _internal_set_immunetag_key(const std::string& value);
  std::string* PROTOBUF_NONNULL _internal_mutable_immunetag_key();

  public:
  // string immunetag_value = 2;
  void clear_immunetag_value() ;
  const std::string& immunetag_value() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_immunetag_value(Arg_&& arg, Args_... args);
  std::string* PROTOBUF_NONNULL mutable_immunetag_value();
  [[nodiscard]] std::string* PROTOBUF_NULLABLE release_immunetag_value();
  void set_allocated_immunetag_value(std::string* PROTOBUF_NULLABLE value);

  private:
  const std::string& _internal_immunetag_value() const;
  PROTOBUF_ALWAYS_INLINE void _internal_set_immunetag_value(const std::string& value);
  std::string* PROTOBUF_NONNULL _internal_mutable_immunetag_value();

  public:
  // @@protoc_insertion_point(class_scope:Testimmunetag)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<1, 2,
                                   0, 50,
                                   2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(
        ::google::protobuf::internal::InternalVisibility visibility,
        ::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
    inline explicit Impl_(
        ::google::protobuf::internal::InternalVisibility visibility,
        ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const Impl_& from,
        const Testimmunetag& from_msg);
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    ::google::protobuf::internal::ArenaStringPtr immunetag_key_;
    ::google::protobuf::internal::ArenaStringPtr immunetag_value_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_test_5fconfig_2eproto;
};

extern const ::google::protobuf::internal::ClassDataFull Testimmunetag_class_data_;
// -------------------------------------------------------------------

class TestTable_TagEntry_DoNotUse final
    : public ::google::protobuf::internal::MapEntry<std::string, std::string,
                             ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
                             ::google::protobuf::internal::WireFormatLite::TYPE_STRING> {
 public:
  using SuperType =
      ::google::protobuf::internal::MapEntry<std::string, std::string,
                      ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
                      ::google::protobuf::internal::WireFormatLite::TYPE_STRING>;
  TestTable_TagEntry_DoNotUse();
  template <typename = void>
  explicit PROTOBUF_CONSTEXPR TestTable_TagEntry_DoNotUse(::google::protobuf::internal::ConstantInitialized);
  explicit TestTable_TagEntry_DoNotUse(::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  static constexpr const void* PROTOBUF_NONNULL internal_default_instance() {
    return &_TestTable_TagEntry_DoNotUse_default_instance_;
  }


  static constexpr auto InternalGenerateClassData_();

 private:
  friend class ::google::protobuf::MessageLite;
  friend struct ::TableStruct_test_5fconfig_2eproto;

  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<1, 2,
                                   0, 35,
                                   2>
      _table_;

  const ::google::protobuf::internal::ClassData* PROTOBUF_NONNULL GetClassData() const PROTOBUF_FINAL;
  static void* PROTOBUF_NONNULL PlacementNew_(
      const void* PROTOBUF_NONNULL, void* PROTOBUF_NONNULL mem,
      ::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  static constexpr auto InternalNewImpl_();
};
extern const ::google::protobuf::internal::ClassDataFull TestTable_TagEntry_DoNotUse_class_data_;
// -------------------------------------------------------------------

class TestTable_ImmunetagEntry_DoNotUse final
    : public ::google::protobuf::internal::MapEntry<std::string, std::string,
                             ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
                             ::google::protobuf::internal::WireFormatLite::TYPE_STRING> {
 public:
  using SuperType =
      ::google::protobuf::internal::MapEntry<std::string, std::string,
                      ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
                      ::google::protobuf::internal::WireFormatLite::TYPE_STRING>;
  TestTable_ImmunetagEntry_DoNotUse();
  template <typename = void>
  explicit PROTOBUF_CONSTEXPR TestTable_ImmunetagEntry_DoNotUse(::google::protobuf::internal::ConstantInitialized);
  explicit TestTable_ImmunetagEntry_DoNotUse(::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  static constexpr const void* PROTOBUF_NONNULL internal_default_instance() {
    return &_TestTable_ImmunetagEntry_DoNotUse_default_instance_;
  }


  static constexpr auto InternalGenerateClassData_();

 private:
  friend class ::google::protobuf::MessageLite;
  friend struct ::TableStruct_test_5fconfig_2eproto;

  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<1, 2,
                                   0, 41,
                                   2>
      _table_;

  const ::google::protobuf::internal::ClassData* PROTOBUF_NONNULL GetClassData() const PROTOBUF_FINAL;
  static void* PROTOBUF_NONNULL PlacementNew_(
      const void* PROTOBUF_NONNULL, void* PROTOBUF_NONNULL mem,
      ::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  static constexpr auto InternalNewImpl_();
};
extern const ::google::protobuf::internal::ClassDataFull TestTable_ImmunetagEntry_DoNotUse_class_data_;
// -------------------------------------------------------------------

class TestTable final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:TestTable) */ {
 public:
  inline TestTable() : TestTable(nullptr) {}
  ~TestTable() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(TestTable* PROTOBUF_NONNULL msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(TestTable));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR TestTable(::google::protobuf::internal::ConstantInitialized);

  inline TestTable(const TestTable& from) : TestTable(nullptr, from) {}
  inline TestTable(TestTable&& from) noexcept
      : TestTable(nullptr, std::move(from)) {}
  inline TestTable& operator=(const TestTable& from) {
    CopyFrom(from);
    return *this;
  }
  inline TestTable& operator=(TestTable&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* PROTOBUF_NONNULL mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* PROTOBUF_NONNULL descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* PROTOBUF_NONNULL GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* PROTOBUF_NONNULL GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const TestTable& default_instance() {
    return *reinterpret_cast<const TestTable*>(
        &_TestTable_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 5;
  friend void swap(TestTable& a, TestTable& b) { a.Swap(&b); }
  inline void Swap(TestTable* PROTOBUF_NONNULL other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(TestTable* PROTOBUF_NONNULL other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  TestTable* PROTOBUF_NONNULL New(::google::protobuf::Arena* PROTOBUF_NULLABLE arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<TestTable>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const TestTable& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const TestTable& from) { TestTable::MergeImpl(*this, from); }

  private:
  static void MergeImpl(::google::protobuf::MessageLite& to_msg,
                        const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* PROTOBUF_NONNULL _InternalSerialize(
      const ::google::protobuf::MessageLite& msg, ::uint8_t* PROTOBUF_NONNULL target,
      ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* PROTOBUF_NONNULL _InternalSerialize(
      ::uint8_t* PROTOBUF_NONNULL target,
      ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* PROTOBUF_NONNULL _InternalSerialize(
      ::uint8_t* PROTOBUF_NONNULL target,
      ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(TestTable* PROTOBUF_NONNULL other);
 private:
  template <typename T>
  friend ::absl::string_view(::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "TestTable"; }

 protected:
  explicit TestTable(::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  TestTable(::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const TestTable& from);
  TestTable(
      ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, TestTable&& from) noexcept
      : TestTable(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* PROTOBUF_NONNULL GetClassData() const PROTOBUF_FINAL;
  static void* PROTOBUF_NONNULL PlacementNew_(
      const void* PROTOBUF_NONNULL, void* PROTOBUF_NONNULL mem,
      ::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  static constexpr auto InternalNewImpl_();

 public:
  static constexpr auto InternalGenerateClassData_();

  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kTagFieldNumber = 2,
    kImmunetagFieldNumber = 3,
    kTestobjFieldNumber = 5,
    kEffectFieldNumber = 6,
    kIdFieldNumber = 1,
    kLevelFieldNumber = 4,
  };
  // map<string, string> tag = 2;
  int tag_size() const;
  private:
  int _internal_tag_size() const;

  public:
  void clear_tag() ;
  const ::google::protobuf::Map<std::string, std::string>& tag() const;
  ::google::protobuf::Map<std::string, std::string>* PROTOBUF_NONNULL mutable_tag();

  private:
  const ::google::protobuf::Map<std::string, std::string>& _internal_tag() const;
  ::google::protobuf::Map<std::string, std::string>* PROTOBUF_NONNULL _internal_mutable_tag();

  public:
  // map<string, string> immunetag = 3;
  int immunetag_size() const;
  private:
  int _internal_immunetag_size() const;

  public:
  void clear_immunetag() ;
  const ::google::protobuf::Map<std::string, std::string>& immunetag() const;
  ::google::protobuf::Map<std::string, std::string>* PROTOBUF_NONNULL mutable_immunetag();

  private:
  const ::google::protobuf::Map<std::string, std::string>& _internal_immunetag() const;
  ::google::protobuf::Map<std::string, std::string>* PROTOBUF_NONNULL _internal_mutable_immunetag();

  public:
  // repeated .Testtestobj testobj = 5;
  int testobj_size() const;
  private:
  int _internal_testobj_size() const;

  public:
  void clear_testobj() ;
  ::Testtestobj* PROTOBUF_NONNULL mutable_testobj(int index);
  ::google::protobuf::RepeatedPtrField<::Testtestobj>* PROTOBUF_NONNULL mutable_testobj();

  private:
  const ::google::protobuf::RepeatedPtrField<::Testtestobj>& _internal_testobj() const;
  ::google::protobuf::RepeatedPtrField<::Testtestobj>* PROTOBUF_NONNULL _internal_mutable_testobj();
  public:
  const ::Testtestobj& testobj(int index) const;
  ::Testtestobj* PROTOBUF_NONNULL add_testobj();
  const ::google::protobuf::RepeatedPtrField<::Testtestobj>& testobj() const;
  // repeated uint32 effect = 6;
  int effect_size() const;
  private:
  int _internal_effect_size() const;

  public:
  void clear_effect() ;
  ::uint32_t effect(int index) const;
  void set_effect(int index, ::uint32_t value);
  void add_effect(::uint32_t value);
  const ::google::protobuf::RepeatedField<::uint32_t>& effect() const;
  ::google::protobuf::RepeatedField<::uint32_t>* PROTOBUF_NONNULL mutable_effect();

  private:
  const ::google::protobuf::RepeatedField<::uint32_t>& _internal_effect() const;
  ::google::protobuf::RepeatedField<::uint32_t>* PROTOBUF_NONNULL _internal_mutable_effect();

  public:
  // uint32 id = 1;
  void clear_id() ;
  ::uint32_t id() const;
  void set_id(::uint32_t value);

  private:
  ::uint32_t _internal_id() const;
  void _internal_set_id(::uint32_t value);

  public:
  // uint32 level = 4;
  void clear_level() ;
  ::uint32_t level() const;
  void set_level(::uint32_t value);

  private:
  ::uint32_t _internal_level() const;
  void _internal_set_level(::uint32_t value);

  public:
  // @@protoc_insertion_point(class_scope:TestTable)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<3, 6,
                                   3, 30,
                                   2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(
        ::google::protobuf::internal::InternalVisibility visibility,
        ::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
    inline explicit Impl_(
        ::google::protobuf::internal::InternalVisibility visibility,
        ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const Impl_& from,
        const TestTable& from_msg);
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    ::google::protobuf::internal::MapField<TestTable_TagEntry_DoNotUse, std::string, std::string,
                      ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
                      ::google::protobuf::internal::WireFormatLite::TYPE_STRING>
        tag_;
    ::google::protobuf::internal::MapField<TestTable_ImmunetagEntry_DoNotUse, std::string, std::string,
                      ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
                      ::google::protobuf::internal::WireFormatLite::TYPE_STRING>
        immunetag_;
    ::google::protobuf::RepeatedPtrField< ::Testtestobj > testobj_;
    ::google::protobuf::RepeatedField<::uint32_t> effect_;
    ::google::protobuf::internal::CachedSize _effect_cached_byte_size_;
    ::uint32_t id_;
    ::uint32_t level_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_test_5fconfig_2eproto;
};

extern const ::google::protobuf::internal::ClassDataFull TestTable_class_data_;
// -------------------------------------------------------------------

class TestTabledData final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:TestTabledData) */ {
 public:
  inline TestTabledData() : TestTabledData(nullptr) {}
  ~TestTabledData() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(TestTabledData* PROTOBUF_NONNULL msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(TestTabledData));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR TestTabledData(::google::protobuf::internal::ConstantInitialized);

  inline TestTabledData(const TestTabledData& from) : TestTabledData(nullptr, from) {}
  inline TestTabledData(TestTabledData&& from) noexcept
      : TestTabledData(nullptr, std::move(from)) {}
  inline TestTabledData& operator=(const TestTabledData& from) {
    CopyFrom(from);
    return *this;
  }
  inline TestTabledData& operator=(TestTabledData&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* PROTOBUF_NONNULL mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* PROTOBUF_NONNULL descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* PROTOBUF_NONNULL GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* PROTOBUF_NONNULL GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const TestTabledData& default_instance() {
    return *reinterpret_cast<const TestTabledData*>(
        &_TestTabledData_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 6;
  friend void swap(TestTabledData& a, TestTabledData& b) { a.Swap(&b); }
  inline void Swap(TestTabledData* PROTOBUF_NONNULL other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(TestTabledData* PROTOBUF_NONNULL other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  TestTabledData* PROTOBUF_NONNULL New(::google::protobuf::Arena* PROTOBUF_NULLABLE arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<TestTabledData>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const TestTabledData& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const TestTabledData& from) { TestTabledData::MergeImpl(*this, from); }

  private:
  static void MergeImpl(::google::protobuf::MessageLite& to_msg,
                        const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* PROTOBUF_NONNULL _InternalSerialize(
      const ::google::protobuf::MessageLite& msg, ::uint8_t* PROTOBUF_NONNULL target,
      ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* PROTOBUF_NONNULL _InternalSerialize(
      ::uint8_t* PROTOBUF_NONNULL target,
      ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* PROTOBUF_NONNULL _InternalSerialize(
      ::uint8_t* PROTOBUF_NONNULL target,
      ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(TestTabledData* PROTOBUF_NONNULL other);
 private:
  template <typename T>
  friend ::absl::string_view(::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "TestTabledData"; }

 protected:
  explicit TestTabledData(::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  TestTabledData(::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const TestTabledData& from);
  TestTabledData(
      ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, TestTabledData&& from) noexcept
      : TestTabledData(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* PROTOBUF_NONNULL GetClassData() const PROTOBUF_FINAL;
  static void* PROTOBUF_NONNULL PlacementNew_(
      const void* PROTOBUF_NONNULL, void* PROTOBUF_NONNULL mem,
      ::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  static constexpr auto InternalNewImpl_();

 public:
  static constexpr auto InternalGenerateClassData_();

  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kDataFieldNumber = 1,
  };
  // repeated .TestTable data = 1;
  int data_size() const;
  private:
  int _internal_data_size() const;

  public:
  void clear_data() ;
  ::TestTable* PROTOBUF_NONNULL mutable_data(int index);
  ::google::protobuf::RepeatedPtrField<::TestTable>* PROTOBUF_NONNULL mutable_data();

  private:
  const ::google::protobuf::RepeatedPtrField<::TestTable>& _internal_data() const;
  ::google::protobuf::RepeatedPtrField<::TestTable>* PROTOBUF_NONNULL _internal_mutable_data();
  public:
  const ::TestTable& data(int index) const;
  ::TestTable* PROTOBUF_NONNULL add_data();
  const ::google::protobuf::RepeatedPtrField<::TestTable>& data() const;
  // @@protoc_insertion_point(class_scope:TestTabledData)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<0, 1,
                                   1, 0,
                                   2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(
        ::google::protobuf::internal::InternalVisibility visibility,
        ::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
    inline explicit Impl_(
        ::google::protobuf::internal::InternalVisibility visibility,
        ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const Impl_& from,
        const TestTabledData& from_msg);
    ::google::protobuf::RepeatedPtrField< ::TestTable > data_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_test_5fconfig_2eproto;
};

extern const ::google::protobuf::internal::ClassDataFull TestTabledData_class_data_;

// ===================================================================




// ===================================================================


#ifdef __GNUC__
#pragma GCC diagnostic push
#pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif  // __GNUC__
// -------------------------------------------------------------------

// Testtag

// string tag_key = 1;
inline void Testtag::clear_tag_key() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.tag_key_.ClearToEmpty();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
inline const std::string& Testtag::tag_key() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:Testtag.tag_key)
  return _internal_tag_key();
}
template <typename Arg_, typename... Args_>
PROTOBUF_ALWAYS_INLINE void Testtag::set_tag_key(Arg_&& arg, Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000001u;
  _impl_.tag_key_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:Testtag.tag_key)
}
inline std::string* PROTOBUF_NONNULL Testtag::mutable_tag_key()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_tag_key();
  // @@protoc_insertion_point(field_mutable:Testtag.tag_key)
  return _s;
}
inline const std::string& Testtag::_internal_tag_key() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.tag_key_.Get();
}
inline void Testtag::_internal_set_tag_key(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000001u;
  _impl_.tag_key_.Set(value, GetArena());
}
inline std::string* PROTOBUF_NONNULL Testtag::_internal_mutable_tag_key() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000001u;
  return _impl_.tag_key_.Mutable( GetArena());
}
inline std::string* PROTOBUF_NULLABLE Testtag::release_tag_key() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:Testtag.tag_key)
  if ((_impl_._has_bits_[0] & 0x00000001u) == 0) {
    return nullptr;
  }
  _impl_._has_bits_[0] &= ~0x00000001u;
  auto* released = _impl_.tag_key_.Release();
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString()) {
    _impl_.tag_key_.Set("", GetArena());
  }
  return released;
}
inline void Testtag::set_allocated_tag_key(std::string* PROTOBUF_NULLABLE value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  _impl_.tag_key_.SetAllocated(value, GetArena());
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString() && _impl_.tag_key_.IsDefault()) {
    _impl_.tag_key_.Set("", GetArena());
  }
  // @@protoc_insertion_point(field_set_allocated:Testtag.tag_key)
}

// string tag_value = 2;
inline void Testtag::clear_tag_value() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.tag_value_.ClearToEmpty();
  _impl_._has_bits_[0] &= ~0x00000002u;
}
inline const std::string& Testtag::tag_value() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:Testtag.tag_value)
  return _internal_tag_value();
}
template <typename Arg_, typename... Args_>
PROTOBUF_ALWAYS_INLINE void Testtag::set_tag_value(Arg_&& arg, Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000002u;
  _impl_.tag_value_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:Testtag.tag_value)
}
inline std::string* PROTOBUF_NONNULL Testtag::mutable_tag_value()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_tag_value();
  // @@protoc_insertion_point(field_mutable:Testtag.tag_value)
  return _s;
}
inline const std::string& Testtag::_internal_tag_value() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.tag_value_.Get();
}
inline void Testtag::_internal_set_tag_value(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000002u;
  _impl_.tag_value_.Set(value, GetArena());
}
inline std::string* PROTOBUF_NONNULL Testtag::_internal_mutable_tag_value() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000002u;
  return _impl_.tag_value_.Mutable( GetArena());
}
inline std::string* PROTOBUF_NULLABLE Testtag::release_tag_value() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:Testtag.tag_value)
  if ((_impl_._has_bits_[0] & 0x00000002u) == 0) {
    return nullptr;
  }
  _impl_._has_bits_[0] &= ~0x00000002u;
  auto* released = _impl_.tag_value_.Release();
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString()) {
    _impl_.tag_value_.Set("", GetArena());
  }
  return released;
}
inline void Testtag::set_allocated_tag_value(std::string* PROTOBUF_NULLABLE value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000002u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000002u;
  }
  _impl_.tag_value_.SetAllocated(value, GetArena());
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString() && _impl_.tag_value_.IsDefault()) {
    _impl_.tag_value_.Set("", GetArena());
  }
  // @@protoc_insertion_point(field_set_allocated:Testtag.tag_value)
}

// -------------------------------------------------------------------

// Testimmunetag

// string immunetag_key = 1;
inline void Testimmunetag::clear_immunetag_key() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.immunetag_key_.ClearToEmpty();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
inline const std::string& Testimmunetag::immunetag_key() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:Testimmunetag.immunetag_key)
  return _internal_immunetag_key();
}
template <typename Arg_, typename... Args_>
PROTOBUF_ALWAYS_INLINE void Testimmunetag::set_immunetag_key(Arg_&& arg, Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000001u;
  _impl_.immunetag_key_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:Testimmunetag.immunetag_key)
}
inline std::string* PROTOBUF_NONNULL Testimmunetag::mutable_immunetag_key()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_immunetag_key();
  // @@protoc_insertion_point(field_mutable:Testimmunetag.immunetag_key)
  return _s;
}
inline const std::string& Testimmunetag::_internal_immunetag_key() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.immunetag_key_.Get();
}
inline void Testimmunetag::_internal_set_immunetag_key(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000001u;
  _impl_.immunetag_key_.Set(value, GetArena());
}
inline std::string* PROTOBUF_NONNULL Testimmunetag::_internal_mutable_immunetag_key() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000001u;
  return _impl_.immunetag_key_.Mutable( GetArena());
}
inline std::string* PROTOBUF_NULLABLE Testimmunetag::release_immunetag_key() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:Testimmunetag.immunetag_key)
  if ((_impl_._has_bits_[0] & 0x00000001u) == 0) {
    return nullptr;
  }
  _impl_._has_bits_[0] &= ~0x00000001u;
  auto* released = _impl_.immunetag_key_.Release();
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString()) {
    _impl_.immunetag_key_.Set("", GetArena());
  }
  return released;
}
inline void Testimmunetag::set_allocated_immunetag_key(std::string* PROTOBUF_NULLABLE value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  _impl_.immunetag_key_.SetAllocated(value, GetArena());
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString() && _impl_.immunetag_key_.IsDefault()) {
    _impl_.immunetag_key_.Set("", GetArena());
  }
  // @@protoc_insertion_point(field_set_allocated:Testimmunetag.immunetag_key)
}

// string immunetag_value = 2;
inline void Testimmunetag::clear_immunetag_value() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.immunetag_value_.ClearToEmpty();
  _impl_._has_bits_[0] &= ~0x00000002u;
}
inline const std::string& Testimmunetag::immunetag_value() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:Testimmunetag.immunetag_value)
  return _internal_immunetag_value();
}
template <typename Arg_, typename... Args_>
PROTOBUF_ALWAYS_INLINE void Testimmunetag::set_immunetag_value(Arg_&& arg, Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000002u;
  _impl_.immunetag_value_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:Testimmunetag.immunetag_value)
}
inline std::string* PROTOBUF_NONNULL Testimmunetag::mutable_immunetag_value()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_immunetag_value();
  // @@protoc_insertion_point(field_mutable:Testimmunetag.immunetag_value)
  return _s;
}
inline const std::string& Testimmunetag::_internal_immunetag_value() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.immunetag_value_.Get();
}
inline void Testimmunetag::_internal_set_immunetag_value(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000002u;
  _impl_.immunetag_value_.Set(value, GetArena());
}
inline std::string* PROTOBUF_NONNULL Testimmunetag::_internal_mutable_immunetag_value() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000002u;
  return _impl_.immunetag_value_.Mutable( GetArena());
}
inline std::string* PROTOBUF_NULLABLE Testimmunetag::release_immunetag_value() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:Testimmunetag.immunetag_value)
  if ((_impl_._has_bits_[0] & 0x00000002u) == 0) {
    return nullptr;
  }
  _impl_._has_bits_[0] &= ~0x00000002u;
  auto* released = _impl_.immunetag_value_.Release();
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString()) {
    _impl_.immunetag_value_.Set("", GetArena());
  }
  return released;
}
inline void Testimmunetag::set_allocated_immunetag_value(std::string* PROTOBUF_NULLABLE value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000002u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000002u;
  }
  _impl_.immunetag_value_.SetAllocated(value, GetArena());
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString() && _impl_.immunetag_value_.IsDefault()) {
    _impl_.immunetag_value_.Set("", GetArena());
  }
  // @@protoc_insertion_point(field_set_allocated:Testimmunetag.immunetag_value)
}

// -------------------------------------------------------------------

// Testtestobj

// uint32 testobj_key = 1;
inline void Testtestobj::clear_testobj_key() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.testobj_key_ = 0u;
  _impl_._has_bits_[0] &= ~0x00000001u;
}
inline ::uint32_t Testtestobj::testobj_key() const {
  // @@protoc_insertion_point(field_get:Testtestobj.testobj_key)
  return _internal_testobj_key();
}
inline void Testtestobj::set_testobj_key(::uint32_t value) {
  _internal_set_testobj_key(value);
  _impl_._has_bits_[0] |= 0x00000001u;
  // @@protoc_insertion_point(field_set:Testtestobj.testobj_key)
}
inline ::uint32_t Testtestobj::_internal_testobj_key() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.testobj_key_;
}
inline void Testtestobj::_internal_set_testobj_key(::uint32_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.testobj_key_ = value;
}

// uint32 testobj_value = 2;
inline void Testtestobj::clear_testobj_value() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.testobj_value_ = 0u;
  _impl_._has_bits_[0] &= ~0x00000002u;
}
inline ::uint32_t Testtestobj::testobj_value() const {
  // @@protoc_insertion_point(field_get:Testtestobj.testobj_value)
  return _internal_testobj_value();
}
inline void Testtestobj::set_testobj_value(::uint32_t value) {
  _internal_set_testobj_value(value);
  _impl_._has_bits_[0] |= 0x00000002u;
  // @@protoc_insertion_point(field_set:Testtestobj.testobj_value)
}
inline ::uint32_t Testtestobj::_internal_testobj_value() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.testobj_value_;
}
inline void Testtestobj::_internal_set_testobj_value(::uint32_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.testobj_value_ = value;
}

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// TestTable

// uint32 id = 1;
inline void TestTable::clear_id() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.id_ = 0u;
  _impl_._has_bits_[0] &= ~0x00000001u;
}
inline ::uint32_t TestTable::id() const {
  // @@protoc_insertion_point(field_get:TestTable.id)
  return _internal_id();
}
inline void TestTable::set_id(::uint32_t value) {
  _internal_set_id(value);
  _impl_._has_bits_[0] |= 0x00000001u;
  // @@protoc_insertion_point(field_set:TestTable.id)
}
inline ::uint32_t TestTable::_internal_id() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.id_;
}
inline void TestTable::_internal_set_id(::uint32_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.id_ = value;
}

// map<string, string> tag = 2;
inline int TestTable::_internal_tag_size() const {
  return _internal_tag().size();
}
inline int TestTable::tag_size() const {
  return _internal_tag_size();
}
inline void TestTable::clear_tag() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.tag_.Clear();
}
inline const ::google::protobuf::Map<std::string, std::string>& TestTable::_internal_tag() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.tag_.GetMap();
}
inline const ::google::protobuf::Map<std::string, std::string>& TestTable::tag() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_map:TestTable.tag)
  return _internal_tag();
}
inline ::google::protobuf::Map<std::string, std::string>* PROTOBUF_NONNULL TestTable::_internal_mutable_tag() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.tag_.MutableMap();
}
inline ::google::protobuf::Map<std::string, std::string>* PROTOBUF_NONNULL TestTable::mutable_tag()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable_map:TestTable.tag)
  return _internal_mutable_tag();
}

// map<string, string> immunetag = 3;
inline int TestTable::_internal_immunetag_size() const {
  return _internal_immunetag().size();
}
inline int TestTable::immunetag_size() const {
  return _internal_immunetag_size();
}
inline void TestTable::clear_immunetag() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.immunetag_.Clear();
}
inline const ::google::protobuf::Map<std::string, std::string>& TestTable::_internal_immunetag() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.immunetag_.GetMap();
}
inline const ::google::protobuf::Map<std::string, std::string>& TestTable::immunetag() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_map:TestTable.immunetag)
  return _internal_immunetag();
}
inline ::google::protobuf::Map<std::string, std::string>* PROTOBUF_NONNULL TestTable::_internal_mutable_immunetag() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.immunetag_.MutableMap();
}
inline ::google::protobuf::Map<std::string, std::string>* PROTOBUF_NONNULL TestTable::mutable_immunetag()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable_map:TestTable.immunetag)
  return _internal_mutable_immunetag();
}

// uint32 level = 4;
inline void TestTable::clear_level() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.level_ = 0u;
  _impl_._has_bits_[0] &= ~0x00000002u;
}
inline ::uint32_t TestTable::level() const {
  // @@protoc_insertion_point(field_get:TestTable.level)
  return _internal_level();
}
inline void TestTable::set_level(::uint32_t value) {
  _internal_set_level(value);
  _impl_._has_bits_[0] |= 0x00000002u;
  // @@protoc_insertion_point(field_set:TestTable.level)
}
inline ::uint32_t TestTable::_internal_level() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.level_;
}
inline void TestTable::_internal_set_level(::uint32_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.level_ = value;
}

// repeated .Testtestobj testobj = 5;
inline int TestTable::_internal_testobj_size() const {
  return _internal_testobj().size();
}
inline int TestTable::testobj_size() const {
  return _internal_testobj_size();
}
inline void TestTable::clear_testobj() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.testobj_.Clear();
}
inline ::Testtestobj* PROTOBUF_NONNULL TestTable::mutable_testobj(int index)
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable:TestTable.testobj)
  return _internal_mutable_testobj()->Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField<::Testtestobj>* PROTOBUF_NONNULL TestTable::mutable_testobj()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable_list:TestTable.testobj)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _internal_mutable_testobj();
}
inline const ::Testtestobj& TestTable::testobj(int index) const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:TestTable.testobj)
  return _internal_testobj().Get(index);
}
inline ::Testtestobj* PROTOBUF_NONNULL TestTable::add_testobj()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::Testtestobj* _add = _internal_mutable_testobj()->Add();
  // @@protoc_insertion_point(field_add:TestTable.testobj)
  return _add;
}
inline const ::google::protobuf::RepeatedPtrField<::Testtestobj>& TestTable::testobj() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_list:TestTable.testobj)
  return _internal_testobj();
}
inline const ::google::protobuf::RepeatedPtrField<::Testtestobj>&
TestTable::_internal_testobj() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.testobj_;
}
inline ::google::protobuf::RepeatedPtrField<::Testtestobj>* PROTOBUF_NONNULL
TestTable::_internal_mutable_testobj() {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return &_impl_.testobj_;
}

// repeated uint32 effect = 6;
inline int TestTable::_internal_effect_size() const {
  return _internal_effect().size();
}
inline int TestTable::effect_size() const {
  return _internal_effect_size();
}
inline void TestTable::clear_effect() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.effect_.Clear();
}
inline ::uint32_t TestTable::effect(int index) const {
  // @@protoc_insertion_point(field_get:TestTable.effect)
  return _internal_effect().Get(index);
}
inline void TestTable::set_effect(int index, ::uint32_t value) {
  _internal_mutable_effect()->Set(index, value);
  // @@protoc_insertion_point(field_set:TestTable.effect)
}
inline void TestTable::add_effect(::uint32_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _internal_mutable_effect()->Add(value);
  // @@protoc_insertion_point(field_add:TestTable.effect)
}
inline const ::google::protobuf::RepeatedField<::uint32_t>& TestTable::effect() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_list:TestTable.effect)
  return _internal_effect();
}
inline ::google::protobuf::RepeatedField<::uint32_t>* PROTOBUF_NONNULL TestTable::mutable_effect()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable_list:TestTable.effect)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _internal_mutable_effect();
}
inline const ::google::protobuf::RepeatedField<::uint32_t>&
TestTable::_internal_effect() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.effect_;
}
inline ::google::protobuf::RepeatedField<::uint32_t>* PROTOBUF_NONNULL
TestTable::_internal_mutable_effect() {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return &_impl_.effect_;
}

// -------------------------------------------------------------------

// TestTabledData

// repeated .TestTable data = 1;
inline int TestTabledData::_internal_data_size() const {
  return _internal_data().size();
}
inline int TestTabledData::data_size() const {
  return _internal_data_size();
}
inline void TestTabledData::clear_data() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.data_.Clear();
}
inline ::TestTable* PROTOBUF_NONNULL TestTabledData::mutable_data(int index)
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable:TestTabledData.data)
  return _internal_mutable_data()->Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField<::TestTable>* PROTOBUF_NONNULL TestTabledData::mutable_data()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable_list:TestTabledData.data)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _internal_mutable_data();
}
inline const ::TestTable& TestTabledData::data(int index) const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:TestTabledData.data)
  return _internal_data().Get(index);
}
inline ::TestTable* PROTOBUF_NONNULL TestTabledData::add_data()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::TestTable* _add = _internal_mutable_data()->Add();
  // @@protoc_insertion_point(field_add:TestTabledData.data)
  return _add;
}
inline const ::google::protobuf::RepeatedPtrField<::TestTable>& TestTabledData::data() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_list:TestTabledData.data)
  return _internal_data();
}
inline const ::google::protobuf::RepeatedPtrField<::TestTable>&
TestTabledData::_internal_data() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.data_;
}
inline ::google::protobuf::RepeatedPtrField<::TestTable>* PROTOBUF_NONNULL
TestTabledData::_internal_mutable_data() {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return &_impl_.data_;
}

#ifdef __GNUC__
#pragma GCC diagnostic pop
#endif  // __GNUC__

// @@protoc_insertion_point(namespace_scope)


// @@protoc_insertion_point(global_scope)

#include "google/protobuf/port_undef.inc"

#endif  // test_5fconfig_2eproto_2epb_2eh
