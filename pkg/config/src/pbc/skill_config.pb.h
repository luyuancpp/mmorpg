// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: skill_config.proto
// Protobuf C++ Version: 5.26.1

#ifndef GOOGLE_PROTOBUF_INCLUDED_skill_5fconfig_2eproto_2epb_2eh
#define GOOGLE_PROTOBUF_INCLUDED_skill_5fconfig_2eproto_2epb_2eh

#include <limits>
#include <string>
#include <type_traits>
#include <utility>

#include "google/protobuf/port_def.inc"
#if PROTOBUF_VERSION != 5026001
#error "Protobuf C++ gencode is built with an incompatible version of"
#error "Protobuf C++ headers/runtime. See"
#error "https://protobuf.dev/support/cross-version-runtime-guarantee/#cpp"
#endif
#include "google/protobuf/port_undef.inc"
#include "google/protobuf/io/coded_stream.h"
#include "google/protobuf/arena.h"
#include "google/protobuf/arenastring.h"
#include "google/protobuf/generated_message_tctable_decl.h"
#include "google/protobuf/generated_message_util.h"
#include "google/protobuf/metadata_lite.h"
#include "google/protobuf/generated_message_reflection.h"
#include "google/protobuf/message.h"
#include "google/protobuf/repeated_field.h"  // IWYU pragma: export
#include "google/protobuf/extension_set.h"  // IWYU pragma: export
#include "google/protobuf/unknown_field_set.h"
// @@protoc_insertion_point(includes)

// Must be included last.
#include "google/protobuf/port_def.inc"

#define PROTOBUF_INTERNAL_EXPORT_skill_5fconfig_2eproto

namespace google {
namespace protobuf {
namespace internal {
class AnyMetadata;
}  // namespace internal
}  // namespace protobuf
}  // namespace google

// Internal implementation detail -- do not use these members.
struct TableStruct_skill_5fconfig_2eproto {
  static const ::uint32_t offsets[];
};
extern const ::google::protobuf::internal::DescriptorTable
    descriptor_table_skill_5fconfig_2eproto;
class SkillTable;
struct SkillTableDefaultTypeInternal;
extern SkillTableDefaultTypeInternal _SkillTable_default_instance_;
class SkillTabledData;
struct SkillTabledDataDefaultTypeInternal;
extern SkillTabledDataDefaultTypeInternal _SkillTabledData_default_instance_;
class requestresource;
struct requestresourceDefaultTypeInternal;
extern requestresourceDefaultTypeInternal _requestresource_default_instance_;
namespace google {
namespace protobuf {
}  // namespace protobuf
}  // namespace google


// ===================================================================


// -------------------------------------------------------------------

class requestresource final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:requestresource) */ {
 public:
  inline requestresource() : requestresource(nullptr) {}
  ~requestresource() override;
  template <typename = void>
  explicit PROTOBUF_CONSTEXPR requestresource(
      ::google::protobuf::internal::ConstantInitialized);

  inline requestresource(const requestresource& from) : requestresource(nullptr, from) {}
  inline requestresource(requestresource&& from) noexcept
      : requestresource(nullptr, std::move(from)) {}
  inline requestresource& operator=(const requestresource& from) {
    CopyFrom(from);
    return *this;
  }
  inline requestresource& operator=(requestresource&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
#ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
#endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const requestresource& default_instance() {
    return *internal_default_instance();
  }
  static inline const requestresource* internal_default_instance() {
    return reinterpret_cast<const requestresource*>(
        &_requestresource_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 0;
  friend void swap(requestresource& a, requestresource& b) { a.Swap(&b); }
  inline void Swap(requestresource* other) {
    if (other == this) return;
#ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr && GetArena() == other->GetArena()) {
#else   // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
#endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(requestresource* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  requestresource* New(::google::protobuf::Arena* arena = nullptr) const final {
    return ::google::protobuf::Message::DefaultConstruct<requestresource>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const requestresource& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const requestresource& from) { requestresource::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  ::size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::google::protobuf::internal::ParseContext* ctx) final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(requestresource* other);
 private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() { return "requestresource"; }

 protected:
  explicit requestresource(::google::protobuf::Arena* arena);
  requestresource(::google::protobuf::Arena* arena, const requestresource& from);
  requestresource(::google::protobuf::Arena* arena, requestresource&& from) noexcept
      : requestresource(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::MessageLite::ClassData* GetClassData()
      const final;

 public:
  ::google::protobuf::Metadata GetMetadata() const final;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kRequestresourceIdFieldNumber = 1,
    kRequestresourceCostFieldNumber = 2,
  };
  // uint32 requestresource_id = 1;
  void clear_requestresource_id() ;
  ::uint32_t requestresource_id() const;
  void set_requestresource_id(::uint32_t value);

  private:
  ::uint32_t _internal_requestresource_id() const;
  void _internal_set_requestresource_id(::uint32_t value);

  public:
  // uint32 requestresource_cost = 2;
  void clear_requestresource_cost() ;
  ::uint32_t requestresource_cost() const;
  void set_requestresource_cost(::uint32_t value);

  private:
  ::uint32_t _internal_requestresource_cost() const;
  void _internal_set_requestresource_cost(::uint32_t value);

  public:
  // @@protoc_insertion_point(class_scope:requestresource)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      1, 2, 0,
      0, 2>
      _table_;
  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from);
    ::uint32_t requestresource_id_;
    ::uint32_t requestresource_cost_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_skill_5fconfig_2eproto;
};
// -------------------------------------------------------------------

class SkillTable final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:SkillTable) */ {
 public:
  inline SkillTable() : SkillTable(nullptr) {}
  ~SkillTable() override;
  template <typename = void>
  explicit PROTOBUF_CONSTEXPR SkillTable(
      ::google::protobuf::internal::ConstantInitialized);

  inline SkillTable(const SkillTable& from) : SkillTable(nullptr, from) {}
  inline SkillTable(SkillTable&& from) noexcept
      : SkillTable(nullptr, std::move(from)) {}
  inline SkillTable& operator=(const SkillTable& from) {
    CopyFrom(from);
    return *this;
  }
  inline SkillTable& operator=(SkillTable&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
#ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
#endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const SkillTable& default_instance() {
    return *internal_default_instance();
  }
  static inline const SkillTable* internal_default_instance() {
    return reinterpret_cast<const SkillTable*>(
        &_SkillTable_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 1;
  friend void swap(SkillTable& a, SkillTable& b) { a.Swap(&b); }
  inline void Swap(SkillTable* other) {
    if (other == this) return;
#ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr && GetArena() == other->GetArena()) {
#else   // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
#endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(SkillTable* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  SkillTable* New(::google::protobuf::Arena* arena = nullptr) const final {
    return ::google::protobuf::Message::DefaultConstruct<SkillTable>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const SkillTable& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const SkillTable& from) { SkillTable::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  ::size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::google::protobuf::internal::ParseContext* ctx) final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(SkillTable* other);
 private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() { return "SkillTable"; }

 protected:
  explicit SkillTable(::google::protobuf::Arena* arena);
  SkillTable(::google::protobuf::Arena* arena, const SkillTable& from);
  SkillTable(::google::protobuf::Arena* arena, SkillTable&& from) noexcept
      : SkillTable(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::MessageLite::ClassData* GetClassData()
      const final;

 public:
  ::google::protobuf::Metadata GetMetadata() const final;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kSkillTypeFieldNumber = 2,
    kTargetTypeFieldNumber = 3,
    kEffectFieldNumber = 9,
    kRequestresourceFieldNumber = 14,
    kIdFieldNumber = 1,
    kRquestTargetFieldNumber = 4,
    kTargetStatusFieldNumber = 5,
    kCastpointFieldNumber = 6,
    kRecoverytimeFieldNumber = 7,
    kImmediatelyFieldNumber = 8,
    kChannelthinkFieldNumber = 10,
    kChannelfinishFieldNumber = 11,
    kThinkintervalFieldNumber = 12,
    kChanneltimeFieldNumber = 13,
    kRangeFieldNumber = 15,
    kMaxRangeFieldNumber = 16,
    kMminRangeFieldNumber = 17,
    kSelfStatusFieldNumber = 18,
    kRequiredStatusFieldNumber = 19,
    kCooldownIdFieldNumber = 20,
  };
  // repeated uint32 skill_type = 2;
  int skill_type_size() const;
  private:
  int _internal_skill_type_size() const;

  public:
  void clear_skill_type() ;
  ::uint32_t skill_type(int index) const;
  void set_skill_type(int index, ::uint32_t value);
  void add_skill_type(::uint32_t value);
  const ::google::protobuf::RepeatedField<::uint32_t>& skill_type() const;
  ::google::protobuf::RepeatedField<::uint32_t>* mutable_skill_type();

  private:
  const ::google::protobuf::RepeatedField<::uint32_t>& _internal_skill_type() const;
  ::google::protobuf::RepeatedField<::uint32_t>* _internal_mutable_skill_type();

  public:
  // repeated uint32 target_type = 3;
  int target_type_size() const;
  private:
  int _internal_target_type_size() const;

  public:
  void clear_target_type() ;
  ::uint32_t target_type(int index) const;
  void set_target_type(int index, ::uint32_t value);
  void add_target_type(::uint32_t value);
  const ::google::protobuf::RepeatedField<::uint32_t>& target_type() const;
  ::google::protobuf::RepeatedField<::uint32_t>* mutable_target_type();

  private:
  const ::google::protobuf::RepeatedField<::uint32_t>& _internal_target_type() const;
  ::google::protobuf::RepeatedField<::uint32_t>* _internal_mutable_target_type();

  public:
  // repeated uint32 effect = 9;
  int effect_size() const;
  private:
  int _internal_effect_size() const;

  public:
  void clear_effect() ;
  ::uint32_t effect(int index) const;
  void set_effect(int index, ::uint32_t value);
  void add_effect(::uint32_t value);
  const ::google::protobuf::RepeatedField<::uint32_t>& effect() const;
  ::google::protobuf::RepeatedField<::uint32_t>* mutable_effect();

  private:
  const ::google::protobuf::RepeatedField<::uint32_t>& _internal_effect() const;
  ::google::protobuf::RepeatedField<::uint32_t>* _internal_mutable_effect();

  public:
  // repeated .requestresource requestresource = 14;
  int requestresource_size() const;
  private:
  int _internal_requestresource_size() const;

  public:
  void clear_requestresource() ;
  ::requestresource* mutable_requestresource(int index);
  ::google::protobuf::RepeatedPtrField<::requestresource>* mutable_requestresource();

  private:
  const ::google::protobuf::RepeatedPtrField<::requestresource>& _internal_requestresource() const;
  ::google::protobuf::RepeatedPtrField<::requestresource>* _internal_mutable_requestresource();
  public:
  const ::requestresource& requestresource(int index) const;
  ::requestresource* add_requestresource();
  const ::google::protobuf::RepeatedPtrField<::requestresource>& requestresource() const;
  // uint32 id = 1;
  void clear_id() ;
  ::uint32_t id() const;
  void set_id(::uint32_t value);

  private:
  ::uint32_t _internal_id() const;
  void _internal_set_id(::uint32_t value);

  public:
  // uint32 rquest_target = 4;
  void clear_rquest_target() ;
  ::uint32_t rquest_target() const;
  void set_rquest_target(::uint32_t value);

  private:
  ::uint32_t _internal_rquest_target() const;
  void _internal_set_rquest_target(::uint32_t value);

  public:
  // uint32 target_status = 5;
  void clear_target_status() ;
  ::uint32_t target_status() const;
  void set_target_status(::uint32_t value);

  private:
  ::uint32_t _internal_target_status() const;
  void _internal_set_target_status(::uint32_t value);

  public:
  // uint32 castpoint = 6;
  void clear_castpoint() ;
  ::uint32_t castpoint() const;
  void set_castpoint(::uint32_t value);

  private:
  ::uint32_t _internal_castpoint() const;
  void _internal_set_castpoint(::uint32_t value);

  public:
  // uint32 recoverytime = 7;
  void clear_recoverytime() ;
  ::uint32_t recoverytime() const;
  void set_recoverytime(::uint32_t value);

  private:
  ::uint32_t _internal_recoverytime() const;
  void _internal_set_recoverytime(::uint32_t value);

  public:
  // uint32 immediately = 8;
  void clear_immediately() ;
  ::uint32_t immediately() const;
  void set_immediately(::uint32_t value);

  private:
  ::uint32_t _internal_immediately() const;
  void _internal_set_immediately(::uint32_t value);

  public:
  // uint32 channelthink = 10;
  void clear_channelthink() ;
  ::uint32_t channelthink() const;
  void set_channelthink(::uint32_t value);

  private:
  ::uint32_t _internal_channelthink() const;
  void _internal_set_channelthink(::uint32_t value);

  public:
  // uint32 channelfinish = 11;
  void clear_channelfinish() ;
  ::uint32_t channelfinish() const;
  void set_channelfinish(::uint32_t value);

  private:
  ::uint32_t _internal_channelfinish() const;
  void _internal_set_channelfinish(::uint32_t value);

  public:
  // uint32 thinkinterval = 12;
  void clear_thinkinterval() ;
  ::uint32_t thinkinterval() const;
  void set_thinkinterval(::uint32_t value);

  private:
  ::uint32_t _internal_thinkinterval() const;
  void _internal_set_thinkinterval(::uint32_t value);

  public:
  // uint32 channeltime = 13;
  void clear_channeltime() ;
  ::uint32_t channeltime() const;
  void set_channeltime(::uint32_t value);

  private:
  ::uint32_t _internal_channeltime() const;
  void _internal_set_channeltime(::uint32_t value);

  public:
  // double range = 15;
  void clear_range() ;
  double range() const;
  void set_range(double value);

  private:
  double _internal_range() const;
  void _internal_set_range(double value);

  public:
  // double max_range = 16;
  void clear_max_range() ;
  double max_range() const;
  void set_max_range(double value);

  private:
  double _internal_max_range() const;
  void _internal_set_max_range(double value);

  public:
  // double mmin_range = 17;
  void clear_mmin_range() ;
  double mmin_range() const;
  void set_mmin_range(double value);

  private:
  double _internal_mmin_range() const;
  void _internal_set_mmin_range(double value);

  public:
  // uint32 self_status = 18;
  void clear_self_status() ;
  ::uint32_t self_status() const;
  void set_self_status(::uint32_t value);

  private:
  ::uint32_t _internal_self_status() const;
  void _internal_set_self_status(::uint32_t value);

  public:
  // uint32 required_status = 19;
  void clear_required_status() ;
  ::uint32_t required_status() const;
  void set_required_status(::uint32_t value);

  private:
  ::uint32_t _internal_required_status() const;
  void _internal_set_required_status(::uint32_t value);

  public:
  // uint32 cooldown_id = 20;
  void clear_cooldown_id() ;
  ::uint32_t cooldown_id() const;
  void set_cooldown_id(::uint32_t value);

  private:
  ::uint32_t _internal_cooldown_id() const;
  void _internal_set_cooldown_id(::uint32_t value);

  public:
  // @@protoc_insertion_point(class_scope:SkillTable)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      5, 20, 1,
      0, 2>
      _table_;
  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from);
    ::google::protobuf::RepeatedField<::uint32_t> skill_type_;
    mutable ::google::protobuf::internal::CachedSize _skill_type_cached_byte_size_;
    ::google::protobuf::RepeatedField<::uint32_t> target_type_;
    mutable ::google::protobuf::internal::CachedSize _target_type_cached_byte_size_;
    ::google::protobuf::RepeatedField<::uint32_t> effect_;
    mutable ::google::protobuf::internal::CachedSize _effect_cached_byte_size_;
    ::google::protobuf::RepeatedPtrField< ::requestresource > requestresource_;
    ::uint32_t id_;
    ::uint32_t rquest_target_;
    ::uint32_t target_status_;
    ::uint32_t castpoint_;
    ::uint32_t recoverytime_;
    ::uint32_t immediately_;
    ::uint32_t channelthink_;
    ::uint32_t channelfinish_;
    ::uint32_t thinkinterval_;
    ::uint32_t channeltime_;
    double range_;
    double max_range_;
    double mmin_range_;
    ::uint32_t self_status_;
    ::uint32_t required_status_;
    ::uint32_t cooldown_id_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_skill_5fconfig_2eproto;
};
// -------------------------------------------------------------------

class SkillTabledData final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:SkillTabledData) */ {
 public:
  inline SkillTabledData() : SkillTabledData(nullptr) {}
  ~SkillTabledData() override;
  template <typename = void>
  explicit PROTOBUF_CONSTEXPR SkillTabledData(
      ::google::protobuf::internal::ConstantInitialized);

  inline SkillTabledData(const SkillTabledData& from) : SkillTabledData(nullptr, from) {}
  inline SkillTabledData(SkillTabledData&& from) noexcept
      : SkillTabledData(nullptr, std::move(from)) {}
  inline SkillTabledData& operator=(const SkillTabledData& from) {
    CopyFrom(from);
    return *this;
  }
  inline SkillTabledData& operator=(SkillTabledData&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
#ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
#endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const SkillTabledData& default_instance() {
    return *internal_default_instance();
  }
  static inline const SkillTabledData* internal_default_instance() {
    return reinterpret_cast<const SkillTabledData*>(
        &_SkillTabledData_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 2;
  friend void swap(SkillTabledData& a, SkillTabledData& b) { a.Swap(&b); }
  inline void Swap(SkillTabledData* other) {
    if (other == this) return;
#ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr && GetArena() == other->GetArena()) {
#else   // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
#endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(SkillTabledData* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  SkillTabledData* New(::google::protobuf::Arena* arena = nullptr) const final {
    return ::google::protobuf::Message::DefaultConstruct<SkillTabledData>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const SkillTabledData& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const SkillTabledData& from) { SkillTabledData::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  ::size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::google::protobuf::internal::ParseContext* ctx) final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(SkillTabledData* other);
 private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() { return "SkillTabledData"; }

 protected:
  explicit SkillTabledData(::google::protobuf::Arena* arena);
  SkillTabledData(::google::protobuf::Arena* arena, const SkillTabledData& from);
  SkillTabledData(::google::protobuf::Arena* arena, SkillTabledData&& from) noexcept
      : SkillTabledData(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::MessageLite::ClassData* GetClassData()
      const final;

 public:
  ::google::protobuf::Metadata GetMetadata() const final;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kDataFieldNumber = 1,
  };
  // repeated .SkillTable data = 1;
  int data_size() const;
  private:
  int _internal_data_size() const;

  public:
  void clear_data() ;
  ::SkillTable* mutable_data(int index);
  ::google::protobuf::RepeatedPtrField<::SkillTable>* mutable_data();

  private:
  const ::google::protobuf::RepeatedPtrField<::SkillTable>& _internal_data() const;
  ::google::protobuf::RepeatedPtrField<::SkillTable>* _internal_mutable_data();
  public:
  const ::SkillTable& data(int index) const;
  ::SkillTable* add_data();
  const ::google::protobuf::RepeatedPtrField<::SkillTable>& data() const;
  // @@protoc_insertion_point(class_scope:SkillTabledData)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      0, 1, 1,
      0, 2>
      _table_;
  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from);
    ::google::protobuf::RepeatedPtrField< ::SkillTable > data_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_skill_5fconfig_2eproto;
};

// ===================================================================




// ===================================================================


#ifdef __GNUC__
#pragma GCC diagnostic push
#pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif  // __GNUC__
// -------------------------------------------------------------------

// requestresource

// uint32 requestresource_id = 1;
inline void requestresource::clear_requestresource_id() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.requestresource_id_ = 0u;
}
inline ::uint32_t requestresource::requestresource_id() const {
  // @@protoc_insertion_point(field_get:requestresource.requestresource_id)
  return _internal_requestresource_id();
}
inline void requestresource::set_requestresource_id(::uint32_t value) {
  _internal_set_requestresource_id(value);
  // @@protoc_insertion_point(field_set:requestresource.requestresource_id)
}
inline ::uint32_t requestresource::_internal_requestresource_id() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.requestresource_id_;
}
inline void requestresource::_internal_set_requestresource_id(::uint32_t value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.requestresource_id_ = value;
}

// uint32 requestresource_cost = 2;
inline void requestresource::clear_requestresource_cost() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.requestresource_cost_ = 0u;
}
inline ::uint32_t requestresource::requestresource_cost() const {
  // @@protoc_insertion_point(field_get:requestresource.requestresource_cost)
  return _internal_requestresource_cost();
}
inline void requestresource::set_requestresource_cost(::uint32_t value) {
  _internal_set_requestresource_cost(value);
  // @@protoc_insertion_point(field_set:requestresource.requestresource_cost)
}
inline ::uint32_t requestresource::_internal_requestresource_cost() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.requestresource_cost_;
}
inline void requestresource::_internal_set_requestresource_cost(::uint32_t value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.requestresource_cost_ = value;
}

// -------------------------------------------------------------------

// SkillTable

// uint32 id = 1;
inline void SkillTable::clear_id() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.id_ = 0u;
}
inline ::uint32_t SkillTable::id() const {
  // @@protoc_insertion_point(field_get:SkillTable.id)
  return _internal_id();
}
inline void SkillTable::set_id(::uint32_t value) {
  _internal_set_id(value);
  // @@protoc_insertion_point(field_set:SkillTable.id)
}
inline ::uint32_t SkillTable::_internal_id() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.id_;
}
inline void SkillTable::_internal_set_id(::uint32_t value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.id_ = value;
}

// repeated uint32 skill_type = 2;
inline int SkillTable::_internal_skill_type_size() const {
  return _internal_skill_type().size();
}
inline int SkillTable::skill_type_size() const {
  return _internal_skill_type_size();
}
inline void SkillTable::clear_skill_type() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.skill_type_.Clear();
}
inline ::uint32_t SkillTable::skill_type(int index) const {
  // @@protoc_insertion_point(field_get:SkillTable.skill_type)
  return _internal_skill_type().Get(index);
}
inline void SkillTable::set_skill_type(int index, ::uint32_t value) {
  _internal_mutable_skill_type()->Set(index, value);
  // @@protoc_insertion_point(field_set:SkillTable.skill_type)
}
inline void SkillTable::add_skill_type(::uint32_t value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _internal_mutable_skill_type()->Add(value);
  // @@protoc_insertion_point(field_add:SkillTable.skill_type)
}
inline const ::google::protobuf::RepeatedField<::uint32_t>& SkillTable::skill_type() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_list:SkillTable.skill_type)
  return _internal_skill_type();
}
inline ::google::protobuf::RepeatedField<::uint32_t>* SkillTable::mutable_skill_type()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable_list:SkillTable.skill_type)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  return _internal_mutable_skill_type();
}
inline const ::google::protobuf::RepeatedField<::uint32_t>&
SkillTable::_internal_skill_type() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.skill_type_;
}
inline ::google::protobuf::RepeatedField<::uint32_t>* SkillTable::_internal_mutable_skill_type() {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return &_impl_.skill_type_;
}

// repeated uint32 target_type = 3;
inline int SkillTable::_internal_target_type_size() const {
  return _internal_target_type().size();
}
inline int SkillTable::target_type_size() const {
  return _internal_target_type_size();
}
inline void SkillTable::clear_target_type() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.target_type_.Clear();
}
inline ::uint32_t SkillTable::target_type(int index) const {
  // @@protoc_insertion_point(field_get:SkillTable.target_type)
  return _internal_target_type().Get(index);
}
inline void SkillTable::set_target_type(int index, ::uint32_t value) {
  _internal_mutable_target_type()->Set(index, value);
  // @@protoc_insertion_point(field_set:SkillTable.target_type)
}
inline void SkillTable::add_target_type(::uint32_t value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _internal_mutable_target_type()->Add(value);
  // @@protoc_insertion_point(field_add:SkillTable.target_type)
}
inline const ::google::protobuf::RepeatedField<::uint32_t>& SkillTable::target_type() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_list:SkillTable.target_type)
  return _internal_target_type();
}
inline ::google::protobuf::RepeatedField<::uint32_t>* SkillTable::mutable_target_type()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable_list:SkillTable.target_type)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  return _internal_mutable_target_type();
}
inline const ::google::protobuf::RepeatedField<::uint32_t>&
SkillTable::_internal_target_type() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.target_type_;
}
inline ::google::protobuf::RepeatedField<::uint32_t>* SkillTable::_internal_mutable_target_type() {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return &_impl_.target_type_;
}

// uint32 rquest_target = 4;
inline void SkillTable::clear_rquest_target() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.rquest_target_ = 0u;
}
inline ::uint32_t SkillTable::rquest_target() const {
  // @@protoc_insertion_point(field_get:SkillTable.rquest_target)
  return _internal_rquest_target();
}
inline void SkillTable::set_rquest_target(::uint32_t value) {
  _internal_set_rquest_target(value);
  // @@protoc_insertion_point(field_set:SkillTable.rquest_target)
}
inline ::uint32_t SkillTable::_internal_rquest_target() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.rquest_target_;
}
inline void SkillTable::_internal_set_rquest_target(::uint32_t value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.rquest_target_ = value;
}

// uint32 target_status = 5;
inline void SkillTable::clear_target_status() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.target_status_ = 0u;
}
inline ::uint32_t SkillTable::target_status() const {
  // @@protoc_insertion_point(field_get:SkillTable.target_status)
  return _internal_target_status();
}
inline void SkillTable::set_target_status(::uint32_t value) {
  _internal_set_target_status(value);
  // @@protoc_insertion_point(field_set:SkillTable.target_status)
}
inline ::uint32_t SkillTable::_internal_target_status() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.target_status_;
}
inline void SkillTable::_internal_set_target_status(::uint32_t value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.target_status_ = value;
}

// uint32 castpoint = 6;
inline void SkillTable::clear_castpoint() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.castpoint_ = 0u;
}
inline ::uint32_t SkillTable::castpoint() const {
  // @@protoc_insertion_point(field_get:SkillTable.castpoint)
  return _internal_castpoint();
}
inline void SkillTable::set_castpoint(::uint32_t value) {
  _internal_set_castpoint(value);
  // @@protoc_insertion_point(field_set:SkillTable.castpoint)
}
inline ::uint32_t SkillTable::_internal_castpoint() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.castpoint_;
}
inline void SkillTable::_internal_set_castpoint(::uint32_t value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.castpoint_ = value;
}

// uint32 recoverytime = 7;
inline void SkillTable::clear_recoverytime() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.recoverytime_ = 0u;
}
inline ::uint32_t SkillTable::recoverytime() const {
  // @@protoc_insertion_point(field_get:SkillTable.recoverytime)
  return _internal_recoverytime();
}
inline void SkillTable::set_recoverytime(::uint32_t value) {
  _internal_set_recoverytime(value);
  // @@protoc_insertion_point(field_set:SkillTable.recoverytime)
}
inline ::uint32_t SkillTable::_internal_recoverytime() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.recoverytime_;
}
inline void SkillTable::_internal_set_recoverytime(::uint32_t value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.recoverytime_ = value;
}

// uint32 immediately = 8;
inline void SkillTable::clear_immediately() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.immediately_ = 0u;
}
inline ::uint32_t SkillTable::immediately() const {
  // @@protoc_insertion_point(field_get:SkillTable.immediately)
  return _internal_immediately();
}
inline void SkillTable::set_immediately(::uint32_t value) {
  _internal_set_immediately(value);
  // @@protoc_insertion_point(field_set:SkillTable.immediately)
}
inline ::uint32_t SkillTable::_internal_immediately() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.immediately_;
}
inline void SkillTable::_internal_set_immediately(::uint32_t value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.immediately_ = value;
}

// repeated uint32 effect = 9;
inline int SkillTable::_internal_effect_size() const {
  return _internal_effect().size();
}
inline int SkillTable::effect_size() const {
  return _internal_effect_size();
}
inline void SkillTable::clear_effect() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.effect_.Clear();
}
inline ::uint32_t SkillTable::effect(int index) const {
  // @@protoc_insertion_point(field_get:SkillTable.effect)
  return _internal_effect().Get(index);
}
inline void SkillTable::set_effect(int index, ::uint32_t value) {
  _internal_mutable_effect()->Set(index, value);
  // @@protoc_insertion_point(field_set:SkillTable.effect)
}
inline void SkillTable::add_effect(::uint32_t value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _internal_mutable_effect()->Add(value);
  // @@protoc_insertion_point(field_add:SkillTable.effect)
}
inline const ::google::protobuf::RepeatedField<::uint32_t>& SkillTable::effect() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_list:SkillTable.effect)
  return _internal_effect();
}
inline ::google::protobuf::RepeatedField<::uint32_t>* SkillTable::mutable_effect()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable_list:SkillTable.effect)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  return _internal_mutable_effect();
}
inline const ::google::protobuf::RepeatedField<::uint32_t>&
SkillTable::_internal_effect() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.effect_;
}
inline ::google::protobuf::RepeatedField<::uint32_t>* SkillTable::_internal_mutable_effect() {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return &_impl_.effect_;
}

// uint32 channelthink = 10;
inline void SkillTable::clear_channelthink() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.channelthink_ = 0u;
}
inline ::uint32_t SkillTable::channelthink() const {
  // @@protoc_insertion_point(field_get:SkillTable.channelthink)
  return _internal_channelthink();
}
inline void SkillTable::set_channelthink(::uint32_t value) {
  _internal_set_channelthink(value);
  // @@protoc_insertion_point(field_set:SkillTable.channelthink)
}
inline ::uint32_t SkillTable::_internal_channelthink() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.channelthink_;
}
inline void SkillTable::_internal_set_channelthink(::uint32_t value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.channelthink_ = value;
}

// uint32 channelfinish = 11;
inline void SkillTable::clear_channelfinish() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.channelfinish_ = 0u;
}
inline ::uint32_t SkillTable::channelfinish() const {
  // @@protoc_insertion_point(field_get:SkillTable.channelfinish)
  return _internal_channelfinish();
}
inline void SkillTable::set_channelfinish(::uint32_t value) {
  _internal_set_channelfinish(value);
  // @@protoc_insertion_point(field_set:SkillTable.channelfinish)
}
inline ::uint32_t SkillTable::_internal_channelfinish() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.channelfinish_;
}
inline void SkillTable::_internal_set_channelfinish(::uint32_t value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.channelfinish_ = value;
}

// uint32 thinkinterval = 12;
inline void SkillTable::clear_thinkinterval() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.thinkinterval_ = 0u;
}
inline ::uint32_t SkillTable::thinkinterval() const {
  // @@protoc_insertion_point(field_get:SkillTable.thinkinterval)
  return _internal_thinkinterval();
}
inline void SkillTable::set_thinkinterval(::uint32_t value) {
  _internal_set_thinkinterval(value);
  // @@protoc_insertion_point(field_set:SkillTable.thinkinterval)
}
inline ::uint32_t SkillTable::_internal_thinkinterval() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.thinkinterval_;
}
inline void SkillTable::_internal_set_thinkinterval(::uint32_t value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.thinkinterval_ = value;
}

// uint32 channeltime = 13;
inline void SkillTable::clear_channeltime() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.channeltime_ = 0u;
}
inline ::uint32_t SkillTable::channeltime() const {
  // @@protoc_insertion_point(field_get:SkillTable.channeltime)
  return _internal_channeltime();
}
inline void SkillTable::set_channeltime(::uint32_t value) {
  _internal_set_channeltime(value);
  // @@protoc_insertion_point(field_set:SkillTable.channeltime)
}
inline ::uint32_t SkillTable::_internal_channeltime() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.channeltime_;
}
inline void SkillTable::_internal_set_channeltime(::uint32_t value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.channeltime_ = value;
}

// repeated .requestresource requestresource = 14;
inline int SkillTable::_internal_requestresource_size() const {
  return _internal_requestresource().size();
}
inline int SkillTable::requestresource_size() const {
  return _internal_requestresource_size();
}
inline void SkillTable::clear_requestresource() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.requestresource_.Clear();
}
inline ::requestresource* SkillTable::mutable_requestresource(int index)
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable:SkillTable.requestresource)
  return _internal_mutable_requestresource()->Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField<::requestresource>* SkillTable::mutable_requestresource()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable_list:SkillTable.requestresource)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  return _internal_mutable_requestresource();
}
inline const ::requestresource& SkillTable::requestresource(int index) const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:SkillTable.requestresource)
  return _internal_requestresource().Get(index);
}
inline ::requestresource* SkillTable::add_requestresource() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ::requestresource* _add = _internal_mutable_requestresource()->Add();
  // @@protoc_insertion_point(field_add:SkillTable.requestresource)
  return _add;
}
inline const ::google::protobuf::RepeatedPtrField<::requestresource>& SkillTable::requestresource() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_list:SkillTable.requestresource)
  return _internal_requestresource();
}
inline const ::google::protobuf::RepeatedPtrField<::requestresource>&
SkillTable::_internal_requestresource() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.requestresource_;
}
inline ::google::protobuf::RepeatedPtrField<::requestresource>*
SkillTable::_internal_mutable_requestresource() {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return &_impl_.requestresource_;
}

// double range = 15;
inline void SkillTable::clear_range() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.range_ = 0;
}
inline double SkillTable::range() const {
  // @@protoc_insertion_point(field_get:SkillTable.range)
  return _internal_range();
}
inline void SkillTable::set_range(double value) {
  _internal_set_range(value);
  // @@protoc_insertion_point(field_set:SkillTable.range)
}
inline double SkillTable::_internal_range() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.range_;
}
inline void SkillTable::_internal_set_range(double value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.range_ = value;
}

// double max_range = 16;
inline void SkillTable::clear_max_range() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.max_range_ = 0;
}
inline double SkillTable::max_range() const {
  // @@protoc_insertion_point(field_get:SkillTable.max_range)
  return _internal_max_range();
}
inline void SkillTable::set_max_range(double value) {
  _internal_set_max_range(value);
  // @@protoc_insertion_point(field_set:SkillTable.max_range)
}
inline double SkillTable::_internal_max_range() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.max_range_;
}
inline void SkillTable::_internal_set_max_range(double value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.max_range_ = value;
}

// double mmin_range = 17;
inline void SkillTable::clear_mmin_range() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.mmin_range_ = 0;
}
inline double SkillTable::mmin_range() const {
  // @@protoc_insertion_point(field_get:SkillTable.mmin_range)
  return _internal_mmin_range();
}
inline void SkillTable::set_mmin_range(double value) {
  _internal_set_mmin_range(value);
  // @@protoc_insertion_point(field_set:SkillTable.mmin_range)
}
inline double SkillTable::_internal_mmin_range() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.mmin_range_;
}
inline void SkillTable::_internal_set_mmin_range(double value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.mmin_range_ = value;
}

// uint32 self_status = 18;
inline void SkillTable::clear_self_status() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.self_status_ = 0u;
}
inline ::uint32_t SkillTable::self_status() const {
  // @@protoc_insertion_point(field_get:SkillTable.self_status)
  return _internal_self_status();
}
inline void SkillTable::set_self_status(::uint32_t value) {
  _internal_set_self_status(value);
  // @@protoc_insertion_point(field_set:SkillTable.self_status)
}
inline ::uint32_t SkillTable::_internal_self_status() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.self_status_;
}
inline void SkillTable::_internal_set_self_status(::uint32_t value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.self_status_ = value;
}

// uint32 required_status = 19;
inline void SkillTable::clear_required_status() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.required_status_ = 0u;
}
inline ::uint32_t SkillTable::required_status() const {
  // @@protoc_insertion_point(field_get:SkillTable.required_status)
  return _internal_required_status();
}
inline void SkillTable::set_required_status(::uint32_t value) {
  _internal_set_required_status(value);
  // @@protoc_insertion_point(field_set:SkillTable.required_status)
}
inline ::uint32_t SkillTable::_internal_required_status() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.required_status_;
}
inline void SkillTable::_internal_set_required_status(::uint32_t value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.required_status_ = value;
}

// uint32 cooldown_id = 20;
inline void SkillTable::clear_cooldown_id() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.cooldown_id_ = 0u;
}
inline ::uint32_t SkillTable::cooldown_id() const {
  // @@protoc_insertion_point(field_get:SkillTable.cooldown_id)
  return _internal_cooldown_id();
}
inline void SkillTable::set_cooldown_id(::uint32_t value) {
  _internal_set_cooldown_id(value);
  // @@protoc_insertion_point(field_set:SkillTable.cooldown_id)
}
inline ::uint32_t SkillTable::_internal_cooldown_id() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.cooldown_id_;
}
inline void SkillTable::_internal_set_cooldown_id(::uint32_t value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.cooldown_id_ = value;
}

// -------------------------------------------------------------------

// SkillTabledData

// repeated .SkillTable data = 1;
inline int SkillTabledData::_internal_data_size() const {
  return _internal_data().size();
}
inline int SkillTabledData::data_size() const {
  return _internal_data_size();
}
inline void SkillTabledData::clear_data() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.data_.Clear();
}
inline ::SkillTable* SkillTabledData::mutable_data(int index)
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable:SkillTabledData.data)
  return _internal_mutable_data()->Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField<::SkillTable>* SkillTabledData::mutable_data()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable_list:SkillTabledData.data)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  return _internal_mutable_data();
}
inline const ::SkillTable& SkillTabledData::data(int index) const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:SkillTabledData.data)
  return _internal_data().Get(index);
}
inline ::SkillTable* SkillTabledData::add_data() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ::SkillTable* _add = _internal_mutable_data()->Add();
  // @@protoc_insertion_point(field_add:SkillTabledData.data)
  return _add;
}
inline const ::google::protobuf::RepeatedPtrField<::SkillTable>& SkillTabledData::data() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_list:SkillTabledData.data)
  return _internal_data();
}
inline const ::google::protobuf::RepeatedPtrField<::SkillTable>&
SkillTabledData::_internal_data() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.data_;
}
inline ::google::protobuf::RepeatedPtrField<::SkillTable>*
SkillTabledData::_internal_mutable_data() {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return &_impl_.data_;
}

#ifdef __GNUC__
#pragma GCC diagnostic pop
#endif  // __GNUC__

// @@protoc_insertion_point(namespace_scope)


// @@protoc_insertion_point(global_scope)

#include "google/protobuf/port_undef.inc"

#endif  // GOOGLE_PROTOBUF_INCLUDED_skill_5fconfig_2eproto_2epb_2eh
