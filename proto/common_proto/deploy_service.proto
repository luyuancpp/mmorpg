syntax = "proto3";


option go_package = "pb/game";

import "common_proto/db_base.proto";
import "common_proto/common.proto";

message database_server_db
{
  option(OptionTableName)  = "database_server_db";
  option(OptionPrimaryKey) = "id";
  option(OptionAutoIncrementKey) = "id";
  uint32 id = 1;
  string ip = 2;
  uint32 port = 3;
  string db_host = 4;
  string db_user = 5;
  string db_password = 6;
  uint32 db_port = 7;
  string db_dbname = 8;
  uint32 zone_id = 9;
}

message servers_info_data
{
  database_server_db database_info = 1;
  login_server_db login_info = 2;
  centre_server_db centre_info = 3;
  gate_server_db gate_info = 4;
  redis_server_db redis_info = 5;
}

message login_server_db
{
  option(OptionTableName)  = "login_server_db";
  option(OptionPrimaryKey) = "id";
  option(OptionAutoIncrementKey) = "id";
  uint32 id = 1;
  string ip = 2;
  uint32 port = 3;
  uint32 zone_id = 4;
}

message centre_server_db
{
  option(OptionTableName)  = "centre_server_db";
  option(OptionPrimaryKey) = "id";
  option(OptionAutoIncrementKey) = "id";
  uint32 id = 1;
  string ip = 2;
  uint32 port = 3;
  uint32 zone_id = 4;
}

message lobby_server_db
{
  option(OptionTableName)  = "lobby_server_db";
  option(OptionPrimaryKey) = "id";
  option(OptionAutoIncrementKey) = "id";
  uint32 id = 1;
  string ip = 2;
  uint32 port = 3;
}

message redis_server_db
{
  option(OptionTableName)  = "redis_server_db";
  option(OptionPrimaryKey) = "id";
  option(OptionAutoIncrementKey) = "id";
  uint32 id = 1;
  string ip = 2;
  uint32 port = 3;
  uint32 zone_id = 4;
}

message game_server_db
{
  option(OptionTableName)  = "game_server_db";
  option(OptionPrimaryKey) = "id";
  option(OptionAutoIncrementKey) = "id";
  uint32 id = 1;
  string ip = 2;
  uint32 port = 3;
  uint32 zone_id = 4;
}

message gate_server_db
{
  option(OptionTableName)  = "gate_server_db";
  option(OptionPrimaryKey) = "id";
  option(OptionAutoIncrementKey) = "id";
  uint32 id = 1;
  string ip = 2;
  uint32 port = 3;
  uint32 zone_id = 4;
}


message NodeInfoRequest
{
  uint32 zone_id = 1;
  uint32 lobby_id = 2;
}

message NodeInfoResponse
{
  servers_info_data info = 1;
}

message NewGameNodeRequest
{
  uint32 zone_id = 1;
  game_server_db my_info = 2;
}

message NewGameNodeResponse
{
  game_server_db my_info = 1;
  uint32 error_no = 2;
  redis_server_db redis_info = 5;
}

message LobbyNodeInfoRequest
{
  uint32 lobby_id = 1;
}

message LobbyNodeInfoResponse
{
  lobby_server_db info = 1;
}

message GetGameNodeInfoRequest
{
  uint32 node_id = 1;
}

message GetGameNodeInfoResponse
{
  uint32 node_id = 1;
  IpPort service_addr = 2;
}

service DeployService {
  rpc GetNodeInfo (NodeInfoRequest) returns (NodeInfoResponse);
  rpc NewGameNode (NewGameNodeRequest) returns (NewGameNodeResponse);
  rpc GetGameNodeInfo (GetGameNodeInfoRequest) returns (GetGameNodeInfoResponse);
}
