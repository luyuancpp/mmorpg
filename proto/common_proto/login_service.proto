syntax = "proto3";

import "google/protobuf/empty.proto";

import "common_proto/common.proto";
import "common_proto/c2gate.proto";
import "common_proto/mysql_database_table.proto";
import "common_proto/node_common.proto";
import "common_proto/common_message.proto";

option cc_generic_services = true;

message LoginC2LRequest
{
  string account = 1;
  string password = 2;
}

message LoginNodeLoginResponse
{
  Tips error = 1;
  account_database account_player = 2;
}

message CreatePlayerC2lRequest
{
  uint64 session_id = 1;
}

message LoginNodeCreatePlayerResponse
{
  Tips error = 1;
  account_database account_player = 2;
  uint64 player_id = 3;
}

message EnterGameC2LRequest
{
  uint64 session_id = 1;
  uint64 player_id = 2;
}

message LoginNodeEnterGameResponse
{
  Tips error = 1;
  uint64 player_id = 2;
  uint64 session_id = 3;// for logic
}

message LoginNodeDisconnectRequest
{
  uint64 session_id = 1;
}

message LoginNodeDisconnectResponse
{
}

message LeaveGameC2LRequest
{
  uint64 session_id = 1;
}

service LoginService {
  rpc Login (LoginRequest) returns (LoginResponse);
  rpc CreatPlayer (CreatePlayerC2lRequest) returns (LoginNodeCreatePlayerResponse);
  rpc EnterGame (EnterGameC2LRequest) returns (LoginNodeEnterGameResponse);
  rpc LeaveGame (LeaveGameC2LRequest) returns (google.protobuf.Empty);
  rpc Disconnect (LoginNodeDisconnectRequest) returns (google.protobuf.Empty);
  rpc RouteNodeStringMsg (RouteMsgStringRequest) returns (RouteMsgStringResponse);
  rpc RoutePlayerStringMsg (RoutePlayerMsgStringRequest) returns (RoutePlayerMsgStringResponse);
  rpc GateConnect (GateConnectRequest) returns (google.protobuf.Empty);
}
