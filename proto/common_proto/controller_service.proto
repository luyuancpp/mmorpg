syntax = "proto3";
import "google/protobuf/empty.proto";
import "common_proto/common.proto";
import "common_proto/node_common.proto";
import "component_proto/scene_comp.proto";
option cc_generic_services = true;

message CtrlStartGsRequest
{
  IpPort rpc_client = 1;
  IpPort rpc_server = 2;
  uint32 gs_node_id = 3;
  uint32 server_type = 4;
}

message CtrlStartGsResponse
{
  uint32 controller_node_id = 1;
  repeated SceneInfo scenes_info = 2;
  uint32 gate_node_id = 3;
}

message GateClientMessageRequest
{
  IpPort rpc_client = 1;
}

message GateConnectRequest
{
  IpPort rpc_client = 1;
  uint32 gate_node_id = 2;
}

message CtrlConnectedGameRequest
{
  IpPort rpc_client = 1;
}

message GateLeaveGameRequest
{
  uint64 session_id = 1;
}

message GateDisconnectRequest
{
  uint64 session_id = 1;
}

message CtrlLoginAccountRequest
{
  string account = 1;
  uint64 session_id = 2;
}

message CtrlLoginAccountResponse
{ 
  Tips error = 1;
}

message CtrlEnterGameRequest
{
  uint64 player_id = 1;
  uint64 session_id = 2;
}

message CtrlEnterGameResponese
{
  uint64 session_id = 1;
}

message CtrlLsLeaveGameRequest
{
  uint64 session_id = 1;
}

message CtrlLsDisconnectRequest
{
  uint64 session_id = 1;
}

message CrossSceneInfo
{
  SceneInfo scene_info = 1;
  uint32 gs_node_id = 2;
}

message AddCrossServerSceneRequest
{
  repeated CrossSceneInfo cross_scenes_info = 1;
}

message EnterGsSucceedRequest
{
  uint64 player_id = 1;
  uint32 game_node_id = 2;
}

service ControllerService {
  rpc StartGs (CtrlStartGsRequest) returns (CtrlStartGsResponse);
  rpc OnGateConnect (GateConnectRequest) returns (google.protobuf.Empty);
  rpc OnGateLeaveGame (GateLeaveGameRequest) returns (google.protobuf.Empty);
  rpc OnGatePlayerService (GateClientMessageRequest) returns (google.protobuf.Empty);
  rpc OnGateDisconnect (GateDisconnectRequest) returns (google.protobuf.Empty); 
  rpc OnLsLoginAccount (CtrlLoginAccountRequest) returns (CtrlLoginAccountResponse);
  rpc OnLsEnterGame (CtrlEnterGameRequest) returns (CtrlEnterGameResponese);
  rpc OnLsLeaveGame (CtrlLsLeaveGameRequest) returns (google.protobuf.Empty);
  rpc OnLsDisconnect (CtrlLsDisconnectRequest) returns (google.protobuf.Empty); 
  rpc OnGsPlayerService (NodeServiceMessageRequest) returns (NodeServiceMessageResponse);
  rpc AddCrossServerScene (AddCrossServerSceneRequest) returns (google.protobuf.Empty);
  rpc EnterGsSucceed (EnterGsSucceedRequest) returns (google.protobuf.Empty);
  rpc RouteNodeStringMsg (RouteMsgStringRequest) returns (RouteMsgStringResponse);
  rpc RoutePlayerStringMsg (RoutePlayerMsgStringRequest) returns (RoutePlayerMsgStringResponse);
}
