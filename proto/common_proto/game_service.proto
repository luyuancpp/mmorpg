syntax = "proto3";
import "google/protobuf/empty.proto";
import "common_proto/common.proto";
package gsservice;
option cc_generic_services = true;


message EnterGsRequest
{
  uint64 player_id = 1;
  uint64 session_id = 2;
  uint64 controller_node_id = 3;
}

message RpcClientRequest
{
  bytes request = 1;
  uint64 session_id = 2;
  uint32 msg_id = 3;
  uint64 id = 4;
}

message RpcClientResponse
{
  bytes response = 1;
  uint64 session_id = 2;
  uint32 msg_id = 3;
  uint64 id = 4;
}

message DisconnectRequest
{
  uint64 player_id = 1;
}

message ConnectRequest
{
  IpPort rpc_client = 1;
  uint32 gate_node_id = 2;
}

service GsService {
  rpc EnterGs (EnterGsRequest) returns (google.protobuf.Empty);
  rpc Send2Player (NodeServiceMessageRequest) returns (NodeServiceMessageResponse);
  rpc ClientSend2Player (RpcClientRequest) returns (RpcClientResponse);
  rpc Disconnect (DisconnectRequest) returns (google.protobuf.Empty); 
  rpc GateConnectGs (ConnectRequest) returns (google.protobuf.Empty); 
  rpc ControllerSend2PlayerViaGs (NodeServiceMessageRequest) returns (google.protobuf.Empty);
  rpc CallPlayer (NodeServiceMessageRequest) returns (NodeServiceMessageResponse);
}