// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.34.2
// 	protoc        v5.26.1
// source: testmultikey_config.proto

package game

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type TestMultiKeytag1 struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Tag1Key   string `protobuf:"bytes,1,opt,name=tag1_key,json=tag1Key,proto3" json:"tag1_key,omitempty"`
	Tag1Value string `protobuf:"bytes,2,opt,name=tag1_value,json=tag1Value,proto3" json:"tag1_value,omitempty"`
}

func (x *TestMultiKeytag1) Reset() {
	*x = TestMultiKeytag1{}
	if protoimpl.UnsafeEnabled {
		mi := &file_testmultikey_config_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TestMultiKeytag1) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TestMultiKeytag1) ProtoMessage() {}

func (x *TestMultiKeytag1) ProtoReflect() protoreflect.Message {
	mi := &file_testmultikey_config_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TestMultiKeytag1.ProtoReflect.Descriptor instead.
func (*TestMultiKeytag1) Descriptor() ([]byte, []int) {
	return file_testmultikey_config_proto_rawDescGZIP(), []int{0}
}

func (x *TestMultiKeytag1) GetTag1Key() string {
	if x != nil {
		return x.Tag1Key
	}
	return ""
}

func (x *TestMultiKeytag1) GetTag1Value() string {
	if x != nil {
		return x.Tag1Value
	}
	return ""
}

type TestMultiKeyimmunetag1 struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Immunetag1Key   string `protobuf:"bytes,1,opt,name=immunetag1_key,json=immunetag1Key,proto3" json:"immunetag1_key,omitempty"`
	Immunetag1Value string `protobuf:"bytes,2,opt,name=immunetag1_value,json=immunetag1Value,proto3" json:"immunetag1_value,omitempty"`
}

func (x *TestMultiKeyimmunetag1) Reset() {
	*x = TestMultiKeyimmunetag1{}
	if protoimpl.UnsafeEnabled {
		mi := &file_testmultikey_config_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TestMultiKeyimmunetag1) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TestMultiKeyimmunetag1) ProtoMessage() {}

func (x *TestMultiKeyimmunetag1) ProtoReflect() protoreflect.Message {
	mi := &file_testmultikey_config_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TestMultiKeyimmunetag1.ProtoReflect.Descriptor instead.
func (*TestMultiKeyimmunetag1) Descriptor() ([]byte, []int) {
	return file_testmultikey_config_proto_rawDescGZIP(), []int{1}
}

func (x *TestMultiKeyimmunetag1) GetImmunetag1Key() string {
	if x != nil {
		return x.Immunetag1Key
	}
	return ""
}

func (x *TestMultiKeyimmunetag1) GetImmunetag1Value() string {
	if x != nil {
		return x.Immunetag1Value
	}
	return ""
}

type TestMultiKeytestobj1 struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Testobj1Key   uint32 `protobuf:"varint,1,opt,name=testobj1_key,json=testobj1Key,proto3" json:"testobj1_key,omitempty"`
	Testobj1Value uint32 `protobuf:"varint,2,opt,name=testobj1_value,json=testobj1Value,proto3" json:"testobj1_value,omitempty"`
}

func (x *TestMultiKeytestobj1) Reset() {
	*x = TestMultiKeytestobj1{}
	if protoimpl.UnsafeEnabled {
		mi := &file_testmultikey_config_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TestMultiKeytestobj1) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TestMultiKeytestobj1) ProtoMessage() {}

func (x *TestMultiKeytestobj1) ProtoReflect() protoreflect.Message {
	mi := &file_testmultikey_config_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TestMultiKeytestobj1.ProtoReflect.Descriptor instead.
func (*TestMultiKeytestobj1) Descriptor() ([]byte, []int) {
	return file_testmultikey_config_proto_rawDescGZIP(), []int{2}
}

func (x *TestMultiKeytestobj1) GetTestobj1Key() uint32 {
	if x != nil {
		return x.Testobj1Key
	}
	return 0
}

func (x *TestMultiKeytestobj1) GetTestobj1Value() uint32 {
	if x != nil {
		return x.Testobj1Value
	}
	return 0
}

type TestMultiKeyTable struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id         uint32                  `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	Tag1       map[string]string       `protobuf:"bytes,2,rep,name=tag1,proto3" json:"tag1,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	Immunetag1 map[string]string       `protobuf:"bytes,3,rep,name=immunetag1,proto3" json:"immunetag1,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	Level      uint32                  `protobuf:"varint,4,opt,name=level,proto3" json:"level,omitempty"`
	Testobj1   []*TestMultiKeytestobj1 `protobuf:"bytes,5,rep,name=testobj1,proto3" json:"testobj1,omitempty"`
	Effect     []uint32                `protobuf:"varint,6,rep,packed,name=effect,proto3" json:"effect,omitempty"`
	Stringkey  string                  `protobuf:"bytes,7,opt,name=stringkey,proto3" json:"stringkey,omitempty"`
	Uint32Key  uint32                  `protobuf:"varint,8,opt,name=uint32key,proto3" json:"uint32key,omitempty"`
	In32Key    int32                   `protobuf:"varint,9,opt,name=in32key,proto3" json:"in32key,omitempty"`
	Mstringkey string                  `protobuf:"bytes,10,opt,name=mstringkey,proto3" json:"mstringkey,omitempty"`
	Muint32Key uint32                  `protobuf:"varint,11,opt,name=muint32key,proto3" json:"muint32key,omitempty"`
	Min32Key   int32                   `protobuf:"varint,12,opt,name=min32key,proto3" json:"min32key,omitempty"`
}

func (x *TestMultiKeyTable) Reset() {
	*x = TestMultiKeyTable{}
	if protoimpl.UnsafeEnabled {
		mi := &file_testmultikey_config_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TestMultiKeyTable) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TestMultiKeyTable) ProtoMessage() {}

func (x *TestMultiKeyTable) ProtoReflect() protoreflect.Message {
	mi := &file_testmultikey_config_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TestMultiKeyTable.ProtoReflect.Descriptor instead.
func (*TestMultiKeyTable) Descriptor() ([]byte, []int) {
	return file_testmultikey_config_proto_rawDescGZIP(), []int{3}
}

func (x *TestMultiKeyTable) GetId() uint32 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *TestMultiKeyTable) GetTag1() map[string]string {
	if x != nil {
		return x.Tag1
	}
	return nil
}

func (x *TestMultiKeyTable) GetImmunetag1() map[string]string {
	if x != nil {
		return x.Immunetag1
	}
	return nil
}

func (x *TestMultiKeyTable) GetLevel() uint32 {
	if x != nil {
		return x.Level
	}
	return 0
}

func (x *TestMultiKeyTable) GetTestobj1() []*TestMultiKeytestobj1 {
	if x != nil {
		return x.Testobj1
	}
	return nil
}

func (x *TestMultiKeyTable) GetEffect() []uint32 {
	if x != nil {
		return x.Effect
	}
	return nil
}

func (x *TestMultiKeyTable) GetStringkey() string {
	if x != nil {
		return x.Stringkey
	}
	return ""
}

func (x *TestMultiKeyTable) GetUint32Key() uint32 {
	if x != nil {
		return x.Uint32Key
	}
	return 0
}

func (x *TestMultiKeyTable) GetIn32Key() int32 {
	if x != nil {
		return x.In32Key
	}
	return 0
}

func (x *TestMultiKeyTable) GetMstringkey() string {
	if x != nil {
		return x.Mstringkey
	}
	return ""
}

func (x *TestMultiKeyTable) GetMuint32Key() uint32 {
	if x != nil {
		return x.Muint32Key
	}
	return 0
}

func (x *TestMultiKeyTable) GetMin32Key() int32 {
	if x != nil {
		return x.Min32Key
	}
	return 0
}

type TestMultiKeyTabledData struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Data []*TestMultiKeyTable `protobuf:"bytes,1,rep,name=data,proto3" json:"data,omitempty"`
}

func (x *TestMultiKeyTabledData) Reset() {
	*x = TestMultiKeyTabledData{}
	if protoimpl.UnsafeEnabled {
		mi := &file_testmultikey_config_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TestMultiKeyTabledData) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TestMultiKeyTabledData) ProtoMessage() {}

func (x *TestMultiKeyTabledData) ProtoReflect() protoreflect.Message {
	mi := &file_testmultikey_config_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TestMultiKeyTabledData.ProtoReflect.Descriptor instead.
func (*TestMultiKeyTabledData) Descriptor() ([]byte, []int) {
	return file_testmultikey_config_proto_rawDescGZIP(), []int{4}
}

func (x *TestMultiKeyTabledData) GetData() []*TestMultiKeyTable {
	if x != nil {
		return x.Data
	}
	return nil
}

var File_testmultikey_config_proto protoreflect.FileDescriptor

var file_testmultikey_config_proto_rawDesc = []byte{
	0x0a, 0x19, 0x74, 0x65, 0x73, 0x74, 0x6d, 0x75, 0x6c, 0x74, 0x69, 0x6b, 0x65, 0x79, 0x5f, 0x63,
	0x6f, 0x6e, 0x66, 0x69, 0x67, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0x4c, 0x0a, 0x10, 0x54,
	0x65, 0x73, 0x74, 0x4d, 0x75, 0x6c, 0x74, 0x69, 0x4b, 0x65, 0x79, 0x74, 0x61, 0x67, 0x31, 0x12,
	0x19, 0x0a, 0x08, 0x74, 0x61, 0x67, 0x31, 0x5f, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x07, 0x74, 0x61, 0x67, 0x31, 0x4b, 0x65, 0x79, 0x12, 0x1d, 0x0a, 0x0a, 0x74, 0x61,
	0x67, 0x31, 0x5f, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09,
	0x74, 0x61, 0x67, 0x31, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x22, 0x6a, 0x0a, 0x16, 0x54, 0x65, 0x73,
	0x74, 0x4d, 0x75, 0x6c, 0x74, 0x69, 0x4b, 0x65, 0x79, 0x69, 0x6d, 0x6d, 0x75, 0x6e, 0x65, 0x74,
	0x61, 0x67, 0x31, 0x12, 0x25, 0x0a, 0x0e, 0x69, 0x6d, 0x6d, 0x75, 0x6e, 0x65, 0x74, 0x61, 0x67,
	0x31, 0x5f, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x69, 0x6d, 0x6d,
	0x75, 0x6e, 0x65, 0x74, 0x61, 0x67, 0x31, 0x4b, 0x65, 0x79, 0x12, 0x29, 0x0a, 0x10, 0x69, 0x6d,
	0x6d, 0x75, 0x6e, 0x65, 0x74, 0x61, 0x67, 0x31, 0x5f, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x0f, 0x69, 0x6d, 0x6d, 0x75, 0x6e, 0x65, 0x74, 0x61, 0x67, 0x31,
	0x56, 0x61, 0x6c, 0x75, 0x65, 0x22, 0x60, 0x0a, 0x14, 0x54, 0x65, 0x73, 0x74, 0x4d, 0x75, 0x6c,
	0x74, 0x69, 0x4b, 0x65, 0x79, 0x74, 0x65, 0x73, 0x74, 0x6f, 0x62, 0x6a, 0x31, 0x12, 0x21, 0x0a,
	0x0c, 0x74, 0x65, 0x73, 0x74, 0x6f, 0x62, 0x6a, 0x31, 0x5f, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x0d, 0x52, 0x0b, 0x74, 0x65, 0x73, 0x74, 0x6f, 0x62, 0x6a, 0x31, 0x4b, 0x65, 0x79,
	0x12, 0x25, 0x0a, 0x0e, 0x74, 0x65, 0x73, 0x74, 0x6f, 0x62, 0x6a, 0x31, 0x5f, 0x76, 0x61, 0x6c,
	0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0d, 0x74, 0x65, 0x73, 0x74, 0x6f, 0x62,
	0x6a, 0x31, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x22, 0xa4, 0x04, 0x0a, 0x11, 0x54, 0x65, 0x73, 0x74,
	0x4d, 0x75, 0x6c, 0x74, 0x69, 0x4b, 0x65, 0x79, 0x54, 0x61, 0x62, 0x6c, 0x65, 0x12, 0x0e, 0x0a,
	0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x02, 0x69, 0x64, 0x12, 0x30, 0x0a,
	0x04, 0x74, 0x61, 0x67, 0x31, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1c, 0x2e, 0x54, 0x65,
	0x73, 0x74, 0x4d, 0x75, 0x6c, 0x74, 0x69, 0x4b, 0x65, 0x79, 0x54, 0x61, 0x62, 0x6c, 0x65, 0x2e,
	0x54, 0x61, 0x67, 0x31, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x52, 0x04, 0x74, 0x61, 0x67, 0x31, 0x12,
	0x42, 0x0a, 0x0a, 0x69, 0x6d, 0x6d, 0x75, 0x6e, 0x65, 0x74, 0x61, 0x67, 0x31, 0x18, 0x03, 0x20,
	0x03, 0x28, 0x0b, 0x32, 0x22, 0x2e, 0x54, 0x65, 0x73, 0x74, 0x4d, 0x75, 0x6c, 0x74, 0x69, 0x4b,
	0x65, 0x79, 0x54, 0x61, 0x62, 0x6c, 0x65, 0x2e, 0x49, 0x6d, 0x6d, 0x75, 0x6e, 0x65, 0x74, 0x61,
	0x67, 0x31, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x52, 0x0a, 0x69, 0x6d, 0x6d, 0x75, 0x6e, 0x65, 0x74,
	0x61, 0x67, 0x31, 0x12, 0x14, 0x0a, 0x05, 0x6c, 0x65, 0x76, 0x65, 0x6c, 0x18, 0x04, 0x20, 0x01,
	0x28, 0x0d, 0x52, 0x05, 0x6c, 0x65, 0x76, 0x65, 0x6c, 0x12, 0x31, 0x0a, 0x08, 0x74, 0x65, 0x73,
	0x74, 0x6f, 0x62, 0x6a, 0x31, 0x18, 0x05, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x15, 0x2e, 0x54, 0x65,
	0x73, 0x74, 0x4d, 0x75, 0x6c, 0x74, 0x69, 0x4b, 0x65, 0x79, 0x74, 0x65, 0x73, 0x74, 0x6f, 0x62,
	0x6a, 0x31, 0x52, 0x08, 0x74, 0x65, 0x73, 0x74, 0x6f, 0x62, 0x6a, 0x31, 0x12, 0x16, 0x0a, 0x06,
	0x65, 0x66, 0x66, 0x65, 0x63, 0x74, 0x18, 0x06, 0x20, 0x03, 0x28, 0x0d, 0x52, 0x06, 0x65, 0x66,
	0x66, 0x65, 0x63, 0x74, 0x12, 0x1c, 0x0a, 0x09, 0x73, 0x74, 0x72, 0x69, 0x6e, 0x67, 0x6b, 0x65,
	0x79, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x73, 0x74, 0x72, 0x69, 0x6e, 0x67, 0x6b,
	0x65, 0x79, 0x12, 0x1c, 0x0a, 0x09, 0x75, 0x69, 0x6e, 0x74, 0x33, 0x32, 0x6b, 0x65, 0x79, 0x18,
	0x08, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x09, 0x75, 0x69, 0x6e, 0x74, 0x33, 0x32, 0x6b, 0x65, 0x79,
	0x12, 0x18, 0x0a, 0x07, 0x69, 0x6e, 0x33, 0x32, 0x6b, 0x65, 0x79, 0x18, 0x09, 0x20, 0x01, 0x28,
	0x05, 0x52, 0x07, 0x69, 0x6e, 0x33, 0x32, 0x6b, 0x65, 0x79, 0x12, 0x1e, 0x0a, 0x0a, 0x6d, 0x73,
	0x74, 0x72, 0x69, 0x6e, 0x67, 0x6b, 0x65, 0x79, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a,
	0x6d, 0x73, 0x74, 0x72, 0x69, 0x6e, 0x67, 0x6b, 0x65, 0x79, 0x12, 0x1e, 0x0a, 0x0a, 0x6d, 0x75,
	0x69, 0x6e, 0x74, 0x33, 0x32, 0x6b, 0x65, 0x79, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0a,
	0x6d, 0x75, 0x69, 0x6e, 0x74, 0x33, 0x32, 0x6b, 0x65, 0x79, 0x12, 0x1a, 0x0a, 0x08, 0x6d, 0x69,
	0x6e, 0x33, 0x32, 0x6b, 0x65, 0x79, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x05, 0x52, 0x08, 0x6d, 0x69,
	0x6e, 0x33, 0x32, 0x6b, 0x65, 0x79, 0x1a, 0x37, 0x0a, 0x09, 0x54, 0x61, 0x67, 0x31, 0x45, 0x6e,
	0x74, 0x72, 0x79, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x14, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x3a, 0x02, 0x38, 0x01, 0x1a,
	0x3d, 0x0a, 0x0f, 0x49, 0x6d, 0x6d, 0x75, 0x6e, 0x65, 0x74, 0x61, 0x67, 0x31, 0x45, 0x6e, 0x74,
	0x72, 0x79, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x03, 0x6b, 0x65, 0x79, 0x12, 0x14, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x3a, 0x02, 0x38, 0x01, 0x22, 0x40,
	0x0a, 0x16, 0x54, 0x65, 0x73, 0x74, 0x4d, 0x75, 0x6c, 0x74, 0x69, 0x4b, 0x65, 0x79, 0x54, 0x61,
	0x62, 0x6c, 0x65, 0x64, 0x44, 0x61, 0x74, 0x61, 0x12, 0x26, 0x0a, 0x04, 0x64, 0x61, 0x74, 0x61,
	0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x12, 0x2e, 0x54, 0x65, 0x73, 0x74, 0x4d, 0x75, 0x6c,
	0x74, 0x69, 0x4b, 0x65, 0x79, 0x54, 0x61, 0x62, 0x6c, 0x65, 0x52, 0x04, 0x64, 0x61, 0x74, 0x61,
	0x42, 0x09, 0x5a, 0x07, 0x70, 0x62, 0x2f, 0x67, 0x61, 0x6d, 0x65, 0x62, 0x06, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x33,
}

var (
	file_testmultikey_config_proto_rawDescOnce sync.Once
	file_testmultikey_config_proto_rawDescData = file_testmultikey_config_proto_rawDesc
)

func file_testmultikey_config_proto_rawDescGZIP() []byte {
	file_testmultikey_config_proto_rawDescOnce.Do(func() {
		file_testmultikey_config_proto_rawDescData = protoimpl.X.CompressGZIP(file_testmultikey_config_proto_rawDescData)
	})
	return file_testmultikey_config_proto_rawDescData
}

var file_testmultikey_config_proto_msgTypes = make([]protoimpl.MessageInfo, 7)
var file_testmultikey_config_proto_goTypes = []any{
	(*TestMultiKeytag1)(nil),       // 0: TestMultiKeytag1
	(*TestMultiKeyimmunetag1)(nil), // 1: TestMultiKeyimmunetag1
	(*TestMultiKeytestobj1)(nil),   // 2: TestMultiKeytestobj1
	(*TestMultiKeyTable)(nil),      // 3: TestMultiKeyTable
	(*TestMultiKeyTabledData)(nil), // 4: TestMultiKeyTabledData
	nil,                            // 5: TestMultiKeyTable.Tag1Entry
	nil,                            // 6: TestMultiKeyTable.Immunetag1Entry
}
var file_testmultikey_config_proto_depIdxs = []int32{
	5, // 0: TestMultiKeyTable.tag1:type_name -> TestMultiKeyTable.Tag1Entry
	6, // 1: TestMultiKeyTable.immunetag1:type_name -> TestMultiKeyTable.Immunetag1Entry
	2, // 2: TestMultiKeyTable.testobj1:type_name -> TestMultiKeytestobj1
	3, // 3: TestMultiKeyTabledData.data:type_name -> TestMultiKeyTable
	4, // [4:4] is the sub-list for method output_type
	4, // [4:4] is the sub-list for method input_type
	4, // [4:4] is the sub-list for extension type_name
	4, // [4:4] is the sub-list for extension extendee
	0, // [0:4] is the sub-list for field type_name
}

func init() { file_testmultikey_config_proto_init() }
func file_testmultikey_config_proto_init() {
	if File_testmultikey_config_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_testmultikey_config_proto_msgTypes[0].Exporter = func(v any, i int) any {
			switch v := v.(*TestMultiKeytag1); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_testmultikey_config_proto_msgTypes[1].Exporter = func(v any, i int) any {
			switch v := v.(*TestMultiKeyimmunetag1); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_testmultikey_config_proto_msgTypes[2].Exporter = func(v any, i int) any {
			switch v := v.(*TestMultiKeytestobj1); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_testmultikey_config_proto_msgTypes[3].Exporter = func(v any, i int) any {
			switch v := v.(*TestMultiKeyTable); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_testmultikey_config_proto_msgTypes[4].Exporter = func(v any, i int) any {
			switch v := v.(*TestMultiKeyTabledData); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_testmultikey_config_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   7,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_testmultikey_config_proto_goTypes,
		DependencyIndexes: file_testmultikey_config_proto_depIdxs,
		MessageInfos:      file_testmultikey_config_proto_msgTypes,
	}.Build()
	File_testmultikey_config_proto = out.File
	file_testmultikey_config_proto_rawDesc = nil
	file_testmultikey_config_proto_goTypes = nil
	file_testmultikey_config_proto_depIdxs = nil
}
