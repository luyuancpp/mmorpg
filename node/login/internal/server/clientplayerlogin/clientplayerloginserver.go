// Code generated by goctl. DO NOT EDIT.
// Source: login_service.proto

package server

import (
	"context"

	"login/internal/logic/clientplayerlogin"
	"login/internal/svc"
	"login/pb/game"
)

type ClientPlayerLoginServer struct {
	svcCtx *svc.ServiceContext
	game.UnimplementedClientPlayerLoginServer
}

func NewClientPlayerLoginServer(svcCtx *svc.ServiceContext) *ClientPlayerLoginServer {
	return &ClientPlayerLoginServer{
		svcCtx: svcCtx,
	}
}

func (s *ClientPlayerLoginServer) Login(ctx context.Context, in *game.LoginC2LRequest) (*game.LoginC2LResponse, error) {
	l := clientplayerloginlogic.NewLoginLogic(ctx, s.svcCtx)
	return l.Login(in)
}

func (s *ClientPlayerLoginServer) CreatePlayer(ctx context.Context, in *game.CreatePlayerC2LRequest) (*game.CreatePlayerC2LResponse, error) {
	l := clientplayerloginlogic.NewCreatePlayerLogic(ctx, s.svcCtx)
	return l.CreatePlayer(in)
}

func (s *ClientPlayerLoginServer) EnterGame(ctx context.Context, in *game.EnterGameC2LRequest) (*game.EnterGameC2LResponse, error) {
	l := clientplayerloginlogic.NewEnterGameLogic(ctx, s.svcCtx)
	return l.EnterGame(in)
}

func (s *ClientPlayerLoginServer) LeaveGame(ctx context.Context, in *game.LeaveGameC2LRequest) (*game.Empty, error) {
	l := clientplayerloginlogic.NewLeaveGameLogic(ctx, s.svcCtx)
	return l.LeaveGame(in)
}

func (s *ClientPlayerLoginServer) Disconnect(ctx context.Context, in *game.LoginNodeDisconnectRequest) (*game.Empty, error) {
	l := clientplayerloginlogic.NewDisconnectLogic(ctx, s.svcCtx)
	return l.Disconnect(in)
}
