// Code generated by goctl. DO NOT EDIT.
// Source: instance.proto

package instance

import (
	"context"

	"instance/pb/game"

	"github.com/zeromicro/go-zero/zrpc"
	"google.golang.org/grpc"
)

type (
	CreateInstanceRequest  = game.CreateInstanceRequest
	CreateInstanceResponse = game.CreateInstanceResponse

	Instance interface {
		// 创建副本
		CreateInstance(ctx context.Context, in *CreateInstanceRequest, opts ...grpc.CallOption) (*CreateInstanceResponse, error)
	}

	defaultInstance struct {
		cli zrpc.Client
	}
)

func NewInstance(cli zrpc.Client) Instance {
	return &defaultInstance{
		cli: cli,
	}
}

// 创建副本
func (m *defaultInstance) CreateInstance(ctx context.Context, in *CreateInstanceRequest, opts ...grpc.CallOption) (*CreateInstanceResponse, error) {
	client := game.NewInstanceClient(m.cli.Conn())
	return client.CreateInstance(ctx, in, opts...)
}
