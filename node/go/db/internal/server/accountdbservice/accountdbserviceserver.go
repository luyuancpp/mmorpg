// Code generated by goctl. DO NOT EDIT.
// Source: db_service.proto

package server

import (
	"context"

	"db/internal/logic/accountdbservice"
	"db/internal/svc"
	"db/pb/game"
)

type AccountDBServiceServer struct {
	svcCtx *svc.ServiceContext
	game.UnimplementedAccountDBServiceServer
}

func NewAccountDBServiceServer(svcCtx *svc.ServiceContext) *AccountDBServiceServer {
	return &AccountDBServiceServer{
		svcCtx: svcCtx,
	}
}

func (s *AccountDBServiceServer) Load2Redis(ctx context.Context, in *game.LoadAccountRequest) (*game.LoadAccountResponse, error) {
	l := accountdbservicelogic.NewLoad2RedisLogic(ctx, s.svcCtx)
	return l.Load2Redis(in)
}

func (s *AccountDBServiceServer) Save2Redis(ctx context.Context, in *game.SaveAccountRequest) (*game.SaveAccountResponse, error) {
	l := accountdbservicelogic.NewSave2RedisLogic(ctx, s.svcCtx)
	return l.Save2Redis(in)
}
