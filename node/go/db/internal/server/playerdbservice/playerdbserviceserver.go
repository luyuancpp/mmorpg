// Code generated by goctl. DO NOT EDIT.
// Source: db_service.proto

package server

import (
	"context"

	"db/internal/logic/playerdbservice"
	"db/internal/svc"
	"db/pb/game"
)

type PlayerDBServiceServer struct {
	svcCtx *svc.ServiceContext
	game.UnimplementedPlayerDBServiceServer
}

func NewPlayerDBServiceServer(svcCtx *svc.ServiceContext) *PlayerDBServiceServer {
	return &PlayerDBServiceServer{
		svcCtx: svcCtx,
	}
}

func (s *PlayerDBServiceServer) Load2Redis(ctx context.Context, in *game.LoadPlayerRequest) (*game.LoadPlayerResponse, error) {
	l := playerdbservicelogic.NewLoad2RedisLogic(ctx, s.svcCtx)
	return l.Load2Redis(in)
}

func (s *PlayerDBServiceServer) Save2Redis(ctx context.Context, in *game.SavePlayerRequest) (*game.SavePlayerResponse, error) {
	l := playerdbservicelogic.NewSave2RedisLogic(ctx, s.svcCtx)
	return l.Save2Redis(in)
}
