// Code generated by goctl. DO NOT EDIT.
// Source: login_service.proto

package server

import (
	"context"

	"login_server/internal/logic/loginservice"
	"login_server/internal/svc"
	"login_server/pb/game"
)

type LoginServiceServer struct {
	svcCtx *svc.ServiceContext
	game.UnimplementedLoginServiceServer
}

func NewLoginServiceServer(svcCtx *svc.ServiceContext) *LoginServiceServer {
	return &LoginServiceServer{
		svcCtx: svcCtx,
	}
}

func (s *LoginServiceServer) Login(ctx context.Context, in *game.LoginRequest) (*game.LoginResponse, error) {
	l := loginservicelogic.NewLoginLogic(ctx, s.svcCtx)
	return l.Login(in)
}

func (s *LoginServiceServer) CreatePlayer(ctx context.Context, in *game.CreatePlayerC2LRequest) (*game.LoginNodeCreatePlayerResponse, error) {
	l := loginservicelogic.NewCreatePlayerLogic(ctx, s.svcCtx)
	return l.CreatePlayer(in)
}

func (s *LoginServiceServer) EnterGame(ctx context.Context, in *game.EnterGameRequest) (*game.EnterGameResponse, error) {
	l := loginservicelogic.NewEnterGameLogic(ctx, s.svcCtx)
	return l.EnterGame(in)
}

func (s *LoginServiceServer) LeaveGame(ctx context.Context, in *game.LeaveGameC2LRequest) (*game.Empty, error) {
	l := loginservicelogic.NewLeaveGameLogic(ctx, s.svcCtx)
	return l.LeaveGame(in)
}

func (s *LoginServiceServer) Disconnect(ctx context.Context, in *game.LoginNodeDisconnectRequest) (*game.Empty, error) {
	l := loginservicelogic.NewDisconnectLogic(ctx, s.svcCtx)
	return l.Disconnect(in)
}
